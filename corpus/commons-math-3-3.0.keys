1= org.apache.commons.math3.optim.ConvergenceChecker:converged(int, PAIR, PAIR)	/src/main/java/org/apache/commons/math3/optim/ConvergenceChecker.java
2= org.apache.commons.math3.stat.descriptive.moment.Mean:Mean()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java
3= org.apache.commons.math3.stat.descriptive.moment.Mean:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java
4= org.apache.commons.math3.stat.descriptive.moment.Mean:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java
5= org.apache.commons.math3.stat.descriptive.moment.Mean:Mean(Mean)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java
6= org.apache.commons.math3.stat.descriptive.moment.Mean:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java
7= org.apache.commons.math3.stat.descriptive.moment.Mean:Mean(FirstMoment)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java
8= org.apache.commons.math3.stat.descriptive.moment.Mean:evaluate(double[], double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java
9= org.apache.commons.math3.stat.descriptive.moment.Mean:copy(Mean, Mean)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java
10= org.apache.commons.math3.stat.descriptive.moment.Mean:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java
11= org.apache.commons.math3.stat.descriptive.moment.Mean:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java
12= org.apache.commons.math3.stat.descriptive.moment.Mean:evaluate(double[], double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java
13= org.apache.commons.math3.stat.descriptive.moment.Mean:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java
14= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison:Display()	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
15= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison:transform(Vector2D, int, int)	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
16= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison:normalize(List<Vector2D>)	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
17= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison:Plot(List<Vector2D>)	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
18= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison.Plot:paintComponent(Graphics)	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
19= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison.Plot:getPreferredSize()	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
20= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison.Plot:transform(Vector2D, int, int)	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
21= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison.Display:nextVector()	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
22= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison:main(String[])	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
23= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison:makeRandom(int, RandomVectorGenerator)	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
24= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison:nextVector()	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
25= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison.Display:Display()	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
26= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison.Plot:Plot(List<Vector2D>)	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
27= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison:makeCircle(int, RandomVectorGenerator)	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
28= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison:paintComponent(Graphics)	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
29= org.apache.commons.math3.userguide.LowDiscrepancyGeneratorComparison:getPreferredSize()	/src/userguide/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java
30= org.apache.commons.math3.linear.OpenMapRealVector.OpenMapEntry:setValue(double)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
31= org.apache.commons.math3.linear.OpenMapRealVector:OpenMapRealVector(int, double)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
32= org.apache.commons.math3.linear.OpenMapRealVector:isNaN()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
33= org.apache.commons.math3.linear.OpenMapRealVector:subtract(RealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
34= org.apache.commons.math3.linear.OpenMapRealVector:getL1Distance(OpenMapRealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
35= org.apache.commons.math3.linear.OpenMapRealVector:OpenMapRealVector(OpenMapRealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
36= org.apache.commons.math3.linear.OpenMapRealVector:getL1Distance(RealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
37= org.apache.commons.math3.linear.OpenMapRealVector:toArray()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
38= org.apache.commons.math3.linear.OpenMapRealVector:OpenMapRealVector(OpenMapRealVector, int)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
39= org.apache.commons.math3.linear.OpenMapRealVector:append(RealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
40= org.apache.commons.math3.linear.OpenMapRealVector:setEntry(int, double)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
41= org.apache.commons.math3.linear.OpenMapRealVector:getDistance(RealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
42= org.apache.commons.math3.linear.OpenMapRealVector:OpenMapRealVector()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
43= org.apache.commons.math3.linear.OpenMapRealVector:getEntries()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
44= org.apache.commons.math3.linear.OpenMapRealVector:getSubVector(int, int)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
45= org.apache.commons.math3.linear.OpenMapRealVector:getIndex()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
46= org.apache.commons.math3.linear.OpenMapRealVector:OpenMapRealVector(double[], double)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
47= org.apache.commons.math3.linear.OpenMapRealVector.OpenMapSparseIterator:OpenMapSparseIterator()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
48= org.apache.commons.math3.linear.OpenMapRealVector:OpenMapRealVector(double[])	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
49= org.apache.commons.math3.linear.OpenMapRealVector:add(OpenMapRealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
50= org.apache.commons.math3.linear.OpenMapRealVector:setSubVector(int, RealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
51= org.apache.commons.math3.linear.OpenMapRealVector:hasNext()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
52= org.apache.commons.math3.linear.OpenMapRealVector:unitize()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
53= org.apache.commons.math3.linear.OpenMapRealVector:add(RealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
54= org.apache.commons.math3.linear.OpenMapRealVector:getDimension()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
55= org.apache.commons.math3.linear.OpenMapRealVector:mapAddToSelf(double)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
56= org.apache.commons.math3.linear.OpenMapRealVector:next()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
57= org.apache.commons.math3.linear.OpenMapRealVector.OpenMapEntry:OpenMapEntry(Iterator)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
58= org.apache.commons.math3.linear.OpenMapRealVector.OpenMapEntry:getIndex()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
59= org.apache.commons.math3.linear.OpenMapRealVector:equals(Object)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
60= org.apache.commons.math3.linear.OpenMapRealVector.OpenMapSparseIterator:next()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
61= org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(double)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
62= org.apache.commons.math3.linear.OpenMapRealVector:append(double)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
63= org.apache.commons.math3.linear.OpenMapRealVector:getDistance(OpenMapRealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
64= org.apache.commons.math3.linear.OpenMapRealVector.OpenMapSparseIterator:hasNext()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
65= org.apache.commons.math3.linear.OpenMapRealVector:getSparsity()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
66= org.apache.commons.math3.linear.OpenMapRealVector:getLInfDistance(RealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
67= org.apache.commons.math3.linear.OpenMapRealVector:OpenMapRealVector(int, int)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
68= org.apache.commons.math3.linear.OpenMapRealVector:remove()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
69= org.apache.commons.math3.linear.OpenMapRealVector:dotProduct(OpenMapRealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
70= org.apache.commons.math3.linear.OpenMapRealVector:OpenMapRealVector(int, int, double)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
71= org.apache.commons.math3.linear.OpenMapRealVector:getEntry(int)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
72= org.apache.commons.math3.linear.OpenMapRealVector:getValue()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
73= org.apache.commons.math3.linear.OpenMapRealVector:isInfinite()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
74= org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(RealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
75= org.apache.commons.math3.linear.OpenMapRealVector:set(double)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
76= org.apache.commons.math3.linear.OpenMapRealVector:hashCode()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
77= org.apache.commons.math3.linear.OpenMapRealVector:append(OpenMapRealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
78= org.apache.commons.math3.linear.OpenMapRealVector:OpenMapRealVector(Double[], double)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
79= org.apache.commons.math3.linear.OpenMapRealVector:OpenMapRealVector(Double[])	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
80= org.apache.commons.math3.linear.OpenMapRealVector:OpenMapRealVector(int)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
81= org.apache.commons.math3.linear.OpenMapRealVector:OpenMapEntry(Iterator)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
82= org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(RealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
83= org.apache.commons.math3.linear.OpenMapRealVector:subtract(OpenMapRealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
84= org.apache.commons.math3.linear.OpenMapRealVector.OpenMapSparseIterator:remove()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
85= org.apache.commons.math3.linear.OpenMapRealVector.OpenMapEntry:getValue()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
86= org.apache.commons.math3.linear.OpenMapRealVector:setValue(double)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
87= org.apache.commons.math3.linear.OpenMapRealVector:OpenMapRealVector(RealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
88= org.apache.commons.math3.linear.OpenMapRealVector:OpenMapSparseIterator()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
89= org.apache.commons.math3.linear.OpenMapRealVector:getLInfDistance(OpenMapRealVector)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
90= org.apache.commons.math3.linear.OpenMapRealVector:mapAdd(double)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
91= org.apache.commons.math3.linear.OpenMapRealVector:unitVector()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
92= org.apache.commons.math3.linear.OpenMapRealVector:copy()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
93= org.apache.commons.math3.linear.OpenMapRealVector:sparseIterator()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
94= org.apache.commons.math3.stat.Frequency:merge(Frequency)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
95= org.apache.commons.math3.stat.Frequency:compare(Comparable<T>, Comparable<T>)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
96= org.apache.commons.math3.stat.Frequency:getCumFreq(int)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
97= org.apache.commons.math3.stat.Frequency:getSumFreq()	/src/main/java/org/apache/commons/math3/stat/Frequency.java
98= org.apache.commons.math3.stat.Frequency:getMode()	/src/main/java/org/apache/commons/math3/stat/Frequency.java
99= org.apache.commons.math3.stat.Frequency:Frequency(Comparator<?>)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
100= org.apache.commons.math3.stat.Frequency:incrementValue(long, long)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
101= org.apache.commons.math3.stat.Frequency:getPct(char)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
102= org.apache.commons.math3.stat.Frequency:incrementValue(char, long)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
103= org.apache.commons.math3.stat.Frequency:incrementValue(Comparable<?>, long)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
104= org.apache.commons.math3.stat.Frequency:getCount(Comparable<?>)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
105= org.apache.commons.math3.stat.Frequency:Frequency()	/src/main/java/org/apache/commons/math3/stat/Frequency.java
106= org.apache.commons.math3.stat.Frequency:getCount(char)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
107= org.apache.commons.math3.stat.Frequency:equals(Object)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
108= org.apache.commons.math3.stat.Frequency:getCumFreq(Comparable<?>)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
109= org.apache.commons.math3.stat.Frequency:merge(Collection<Frequency>)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
110= org.apache.commons.math3.stat.Frequency:getCumPct(Comparable<?>)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
111= org.apache.commons.math3.stat.Frequency:getCumPct(int)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
112= org.apache.commons.math3.stat.Frequency:addValue(long)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
113= org.apache.commons.math3.stat.Frequency:incrementValue(int, long)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
114= org.apache.commons.math3.stat.Frequency:getCumPct(long)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
115= org.apache.commons.math3.stat.Frequency.NaturalComparator:compare(Comparable<T>, Comparable<T>)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
116= org.apache.commons.math3.stat.Frequency:getCount(int)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
117= org.apache.commons.math3.stat.Frequency:getPct(int)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
118= org.apache.commons.math3.stat.Frequency:addValue(char)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
119= org.apache.commons.math3.stat.Frequency:getPct(Comparable<?>)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
120= org.apache.commons.math3.stat.Frequency:getPct(long)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
121= org.apache.commons.math3.stat.Frequency:addValue(int)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
122= org.apache.commons.math3.stat.Frequency:clear()	/src/main/java/org/apache/commons/math3/stat/Frequency.java
123= org.apache.commons.math3.stat.Frequency:getUniqueCount()	/src/main/java/org/apache/commons/math3/stat/Frequency.java
124= org.apache.commons.math3.stat.Frequency:valuesIterator()	/src/main/java/org/apache/commons/math3/stat/Frequency.java
125= org.apache.commons.math3.stat.Frequency:entrySetIterator()	/src/main/java/org/apache/commons/math3/stat/Frequency.java
126= org.apache.commons.math3.stat.Frequency:getCumFreq(long)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
127= org.apache.commons.math3.stat.Frequency:hashCode()	/src/main/java/org/apache/commons/math3/stat/Frequency.java
128= org.apache.commons.math3.stat.Frequency:getCumFreq(char)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
129= org.apache.commons.math3.stat.Frequency:addValue(Comparable<?>)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
130= org.apache.commons.math3.stat.Frequency:toString()	/src/main/java/org/apache/commons/math3/stat/Frequency.java
131= org.apache.commons.math3.stat.Frequency:getCount(long)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
132= org.apache.commons.math3.stat.Frequency:getCumPct(char)	/src/main/java/org/apache/commons/math3/stat/Frequency.java
133= org.apache.commons.math3.ode.sampling.StepHandler:handleStep(StepInterpolator, boolean)	/src/main/java/org/apache/commons/math3/ode/sampling/StepHandler.java
134= org.apache.commons.math3.ode.sampling.StepHandler:init(double, double[], double)	/src/main/java/org/apache/commons/math3/ode/sampling/StepHandler.java
135= org.apache.commons.math3.ode.ODEIntegrator:getStepHandlers()	/src/main/java/org/apache/commons/math3/ode/ODEIntegrator.java
136= org.apache.commons.math3.ode.ODEIntegrator:getEvaluations()	/src/main/java/org/apache/commons/math3/ode/ODEIntegrator.java
137= org.apache.commons.math3.ode.ODEIntegrator:addEventHandler(EventHandler, double, double, int, UnivariateSolver)	/src/main/java/org/apache/commons/math3/ode/ODEIntegrator.java
138= org.apache.commons.math3.ode.ODEIntegrator:getEventHandlers()	/src/main/java/org/apache/commons/math3/ode/ODEIntegrator.java
139= org.apache.commons.math3.ode.ODEIntegrator:addEventHandler(EventHandler, double, double, int)	/src/main/java/org/apache/commons/math3/ode/ODEIntegrator.java
140= org.apache.commons.math3.ode.ODEIntegrator:clearStepHandlers()	/src/main/java/org/apache/commons/math3/ode/ODEIntegrator.java
141= org.apache.commons.math3.ode.ODEIntegrator:setMaxEvaluations(int)	/src/main/java/org/apache/commons/math3/ode/ODEIntegrator.java
142= org.apache.commons.math3.ode.ODEIntegrator:getMaxEvaluations()	/src/main/java/org/apache/commons/math3/ode/ODEIntegrator.java
143= org.apache.commons.math3.ode.ODEIntegrator:getCurrentStepStart()	/src/main/java/org/apache/commons/math3/ode/ODEIntegrator.java
144= org.apache.commons.math3.ode.ODEIntegrator:getCurrentSignedStepsize()	/src/main/java/org/apache/commons/math3/ode/ODEIntegrator.java
145= org.apache.commons.math3.ode.ODEIntegrator:clearEventHandlers()	/src/main/java/org/apache/commons/math3/ode/ODEIntegrator.java
146= org.apache.commons.math3.ode.ODEIntegrator:getName()	/src/main/java/org/apache/commons/math3/ode/ODEIntegrator.java
147= org.apache.commons.math3.ode.ODEIntegrator:addStepHandler(StepHandler)	/src/main/java/org/apache/commons/math3/ode/ODEIntegrator.java
148= org.apache.commons.math3.stat.correlation.SpearmansCorrelation:getCorrelationMatrix()	/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java
149= org.apache.commons.math3.stat.correlation.SpearmansCorrelation:getRankCorrelation()	/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java
150= org.apache.commons.math3.stat.correlation.SpearmansCorrelation:SpearmansCorrelation(RankingAlgorithm)	/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java
151= org.apache.commons.math3.stat.correlation.SpearmansCorrelation:removeValues(double[], Set<Integer>)	/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java
152= org.apache.commons.math3.stat.correlation.SpearmansCorrelation:correlation(double[], double[])	/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java
153= org.apache.commons.math3.stat.correlation.SpearmansCorrelation:SpearmansCorrelation()	/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java
154= org.apache.commons.math3.stat.correlation.SpearmansCorrelation:SpearmansCorrelation(RealMatrix)	/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java
155= org.apache.commons.math3.stat.correlation.SpearmansCorrelation:SpearmansCorrelation(RealMatrix, RankingAlgorithm)	/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java
156= org.apache.commons.math3.stat.correlation.SpearmansCorrelation:computeCorrelationMatrix(RealMatrix)	/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java
157= org.apache.commons.math3.stat.correlation.SpearmansCorrelation:computeCorrelationMatrix(double[][])	/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java
158= org.apache.commons.math3.stat.correlation.SpearmansCorrelation:getNaNPositions(double[])	/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java
159= org.apache.commons.math3.stat.correlation.SpearmansCorrelation:rankTransform(RealMatrix)	/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java
160= org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar:addPoint(double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/CircleScalar.java
161= org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar:getRadius(Vector2D)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/CircleScalar.java
162= org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar:CircleScalar()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/CircleScalar.java
163= org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/CircleScalar.java
164= org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar:getObjectiveFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/CircleScalar.java
165= org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar:getObjectiveFunctionGradient()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/CircleScalar.java
166= org.apache.commons.math3.random.StableRandomGenerator:nextNormalizedDouble()	/src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java
167= org.apache.commons.math3.random.StableRandomGenerator:StableRandomGenerator(RandomGenerator, double, double)	/src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java
168= org.apache.commons.math3.linear.RRQRDecomposition:getSolver()	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
169= org.apache.commons.math3.linear.RRQRDecomposition.Solver:getInverse()	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
170= org.apache.commons.math3.linear.RRQRDecomposition:decompose(double[][])	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
171= org.apache.commons.math3.linear.RRQRDecomposition:Solver(DecompositionSolver, RealMatrix)	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
172= org.apache.commons.math3.linear.RRQRDecomposition:getP()	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
173= org.apache.commons.math3.linear.RRQRDecomposition.Solver:solve(RealVector)	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
174= org.apache.commons.math3.linear.RRQRDecomposition:RRQRDecomposition(RealMatrix, double)	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
175= org.apache.commons.math3.linear.RRQRDecomposition.Solver:solve(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
176= org.apache.commons.math3.linear.RRQRDecomposition:RRQRDecomposition(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
177= org.apache.commons.math3.linear.RRQRDecomposition:performHouseholderReflection(int, double[][])	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
178= org.apache.commons.math3.linear.RRQRDecomposition:solve(RealVector)	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
179= org.apache.commons.math3.linear.RRQRDecomposition.Solver:Solver(DecompositionSolver, RealMatrix)	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
180= org.apache.commons.math3.linear.RRQRDecomposition:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
181= org.apache.commons.math3.linear.RRQRDecomposition:solve(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
182= org.apache.commons.math3.linear.RRQRDecomposition:getRank(double)	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
183= org.apache.commons.math3.linear.RRQRDecomposition:getInverse()	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
184= org.apache.commons.math3.linear.RRQRDecomposition.Solver:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/RRQRDecomposition.java
185= org.apache.commons.math3.optim.linear.SolutionCallback:setTableau(SimplexTableau)	/src/main/java/org/apache/commons/math3/optim/linear/SolutionCallback.java
186= org.apache.commons.math3.optim.linear.SolutionCallback:getSolution()	/src/main/java/org/apache/commons/math3/optim/linear/SolutionCallback.java
187= org.apache.commons.math3.optim.linear.SolutionCallback:isSolutionOptimal()	/src/main/java/org/apache/commons/math3/optim/linear/SolutionCallback.java
188= org.apache.commons.math3.stat.descriptive.moment.SecondMoment:copy(SecondMoment, SecondMoment)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java
189= org.apache.commons.math3.stat.descriptive.moment.SecondMoment:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java
190= org.apache.commons.math3.stat.descriptive.moment.SecondMoment:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java
191= org.apache.commons.math3.stat.descriptive.moment.SecondMoment:SecondMoment()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java
192= org.apache.commons.math3.stat.descriptive.moment.SecondMoment:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java
193= org.apache.commons.math3.stat.descriptive.moment.SecondMoment:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java
194= org.apache.commons.math3.stat.descriptive.moment.SecondMoment:SecondMoment(SecondMoment)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java
195= org.apache.commons.math3.dfp.DfpMath:split(DfpField, String)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
196= org.apache.commons.math3.dfp.DfpMath:log(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
197= org.apache.commons.math3.dfp.DfpMath:split(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
198= org.apache.commons.math3.dfp.DfpMath:pow(Dfp, int)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
199= org.apache.commons.math3.dfp.DfpMath:tan(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
200= org.apache.commons.math3.dfp.DfpMath:exp(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
201= org.apache.commons.math3.dfp.DfpMath:splitMult(Dfp[], Dfp[])	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
202= org.apache.commons.math3.dfp.DfpMath:atan(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
203= org.apache.commons.math3.dfp.DfpMath:atanInternal(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
204= org.apache.commons.math3.dfp.DfpMath:acos(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
205= org.apache.commons.math3.dfp.DfpMath:cos(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
206= org.apache.commons.math3.dfp.DfpMath:sinInternal(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
207= org.apache.commons.math3.dfp.DfpMath:logInternal(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
208= org.apache.commons.math3.dfp.DfpMath:asin(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
209= org.apache.commons.math3.dfp.DfpMath:pow(Dfp, Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
210= org.apache.commons.math3.dfp.DfpMath:DfpMath()	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
211= org.apache.commons.math3.dfp.DfpMath:expInternal(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
212= org.apache.commons.math3.dfp.DfpMath:sin(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
213= org.apache.commons.math3.dfp.DfpMath:splitPow(Dfp[], int)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
214= org.apache.commons.math3.dfp.DfpMath:cosInternal(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
215= org.apache.commons.math3.dfp.DfpMath:splitDiv(Dfp[], Dfp[])	/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
216= org.apache.commons.math3.ml.clustering.CentroidCluster:getCenter()	/src/main/java/org/apache/commons/math3/ml/clustering/CentroidCluster.java
217= org.apache.commons.math3.ml.clustering.CentroidCluster:CentroidCluster(Clusterable)	/src/main/java/org/apache/commons/math3/ml/clustering/CentroidCluster.java
218= org.apache.commons.math3.transform.RealTransformer:transform(double[], TransformType)	/src/main/java/org/apache/commons/math3/transform/RealTransformer.java
219= org.apache.commons.math3.transform.RealTransformer:transform(UnivariateFunction, double, double, int, TransformType)	/src/main/java/org/apache/commons/math3/transform/RealTransformer.java
220= org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:MidpointStepInterpolator(MidpointStepInterpolator)	/src/main/java/org/apache/commons/math3/ode/nonstiff/MidpointStepInterpolator.java
221= org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:doCopy()	/src/main/java/org/apache/commons/math3/ode/nonstiff/MidpointStepInterpolator.java
222= org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:computeInterpolatedStateAndDerivatives(double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/MidpointStepInterpolator.java
223= org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:MidpointStepInterpolator()	/src/main/java/org/apache/commons/math3/ode/nonstiff/MidpointStepInterpolator.java
224= org.apache.commons.math3.genetics.CycleCrossover:CycleCrossover()	/src/main/java/org/apache/commons/math3/genetics/CycleCrossover.java
225= org.apache.commons.math3.genetics.CycleCrossover:crossover(Chromosome, Chromosome)	/src/main/java/org/apache/commons/math3/genetics/CycleCrossover.java
226= org.apache.commons.math3.genetics.CycleCrossover:mate(AbstractListChromosome<T>, AbstractListChromosome<T>)	/src/main/java/org/apache/commons/math3/genetics/CycleCrossover.java
227= org.apache.commons.math3.genetics.CycleCrossover:isRandomStart()	/src/main/java/org/apache/commons/math3/genetics/CycleCrossover.java
228= org.apache.commons.math3.genetics.CycleCrossover:CycleCrossover(boolean)	/src/main/java/org/apache/commons/math3/genetics/CycleCrossover.java
229= org.apache.commons.math3.genetics.UniformCrossover:UniformCrossover(double)	/src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java
230= org.apache.commons.math3.genetics.UniformCrossover:crossover(Chromosome, Chromosome)	/src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java
231= org.apache.commons.math3.genetics.UniformCrossover:mate(AbstractListChromosome<T>, AbstractListChromosome<T>)	/src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java
232= org.apache.commons.math3.genetics.UniformCrossover:getRatio()	/src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java
233= org.apache.commons.math3.exception.util.DummyLocalizable:getSourceString()	/src/main/java/org/apache/commons/math3/exception/util/DummyLocalizable.java
234= org.apache.commons.math3.exception.util.DummyLocalizable:getLocalizedString(Locale)	/src/main/java/org/apache/commons/math3/exception/util/DummyLocalizable.java
235= org.apache.commons.math3.exception.util.DummyLocalizable:DummyLocalizable(String)	/src/main/java/org/apache/commons/math3/exception/util/DummyLocalizable.java
236= org.apache.commons.math3.exception.util.DummyLocalizable:toString()	/src/main/java/org/apache/commons/math3/exception/util/DummyLocalizable.java
237= org.apache.commons.math3.stat.interval.NormalApproximationIntervalTest:testStandardInterval()	/src/test/java/org/apache/commons/math3/stat/interval/NormalApproximationIntervalTest.java
238= org.apache.commons.math3.stat.interval.NormalApproximationIntervalTest:createBinomialConfidenceInterval()	/src/test/java/org/apache/commons/math3/stat/interval/NormalApproximationIntervalTest.java
239= org.apache.commons.math3.linear.RealMatrixPreservingVisitor:end()	/src/main/java/org/apache/commons/math3/linear/RealMatrixPreservingVisitor.java
240= org.apache.commons.math3.linear.RealMatrixPreservingVisitor:visit(int, int, double)	/src/main/java/org/apache/commons/math3/linear/RealMatrixPreservingVisitor.java
241= org.apache.commons.math3.linear.RealMatrixPreservingVisitor:start(int, int, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/RealMatrixPreservingVisitor.java
242= org.apache.commons.math3.fraction.Fraction:add(Fraction)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
243= org.apache.commons.math3.fraction.Fraction:percentageValue()	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
244= org.apache.commons.math3.fraction.Fraction:subtract(int)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
245= org.apache.commons.math3.fraction.Fraction:multiply(Fraction)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
246= org.apache.commons.math3.fraction.Fraction:intValue()	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
247= org.apache.commons.math3.fraction.Fraction:getNumerator()	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
248= org.apache.commons.math3.fraction.Fraction:Fraction(double, double, int, int)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
249= org.apache.commons.math3.fraction.Fraction:Fraction(double, int)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
250= org.apache.commons.math3.fraction.Fraction:Fraction(int, int)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
251= org.apache.commons.math3.fraction.Fraction:negate()	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
252= org.apache.commons.math3.fraction.Fraction:subtract(Fraction)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
253= org.apache.commons.math3.fraction.Fraction:multiply(int)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
254= org.apache.commons.math3.fraction.Fraction:doubleValue()	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
255= org.apache.commons.math3.fraction.Fraction:addSub(Fraction, boolean)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
256= org.apache.commons.math3.fraction.Fraction:reciprocal()	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
257= org.apache.commons.math3.fraction.Fraction:equals(Object)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
258= org.apache.commons.math3.fraction.Fraction:toString()	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
259= org.apache.commons.math3.fraction.Fraction:Fraction(double, double, int)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
260= org.apache.commons.math3.fraction.Fraction:getDenominator()	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
261= org.apache.commons.math3.fraction.Fraction:divide(Fraction)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
262= org.apache.commons.math3.fraction.Fraction:getField()	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
263= org.apache.commons.math3.fraction.Fraction:getReducedFraction(int, int)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
264= org.apache.commons.math3.fraction.Fraction:floatValue()	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
265= org.apache.commons.math3.fraction.Fraction:compareTo(Fraction)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
266= org.apache.commons.math3.fraction.Fraction:abs()	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
267= org.apache.commons.math3.fraction.Fraction:add(int)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
268= org.apache.commons.math3.fraction.Fraction:divide(int)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
269= org.apache.commons.math3.fraction.Fraction:Fraction(double)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
270= org.apache.commons.math3.fraction.Fraction:Fraction(int)	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
271= org.apache.commons.math3.fraction.Fraction:hashCode()	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
272= org.apache.commons.math3.fraction.Fraction:longValue()	/src/main/java/org/apache/commons/math3/fraction/Fraction.java
273= org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair:getValue()	/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair.java
274= org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair:UnivariatePointValuePair(double, double)	/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair.java
275= org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair:getPoint()	/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair.java
276= org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint:getSize()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint.java
277= org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint:buildNew(Hyperplane<Euclidean1D>, Region<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint.java
278= org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint:split(Hyperplane<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint.java
279= org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint:isEmpty()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint.java
280= org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint:side(Hyperplane<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint.java
281= org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint:SubOrientedPoint(Hyperplane<Euclidean1D>, Region<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint.java
282= org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction:jacobian()	/src/main/java/org/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction.java
283= org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
284= org.apache.commons.math3.util.OpenIntToDoubleHashMap:advance()	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
285= org.apache.commons.math3.util.OpenIntToDoubleHashMap:OpenIntToDoubleHashMap(int, double)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
286= org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
287= org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
288= org.apache.commons.math3.util.OpenIntToDoubleHashMap:hasNext()	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
289= org.apache.commons.math3.util.OpenIntToDoubleHashMap:OpenIntToDoubleHashMap(double)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
290= org.apache.commons.math3.util.OpenIntToDoubleHashMap.Iterator:key()	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
291= org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
292= org.apache.commons.math3.util.OpenIntToDoubleHashMap:Iterator()	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
293= org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(int, int)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
294= org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
295= org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
296= org.apache.commons.math3.util.OpenIntToDoubleHashMap:readObject(ObjectInputStream)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
297= org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
298= org.apache.commons.math3.util.OpenIntToDoubleHashMap.Iterator:hasNext()	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
299= org.apache.commons.math3.util.OpenIntToDoubleHashMap:size()	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
300= org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
301= org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
302= org.apache.commons.math3.util.OpenIntToDoubleHashMap.Iterator:value()	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
303= org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(int, int)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
304= org.apache.commons.math3.util.OpenIntToDoubleHashMap:nextPowerOfTwo(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
305= org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(int[], byte[], int, int)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
306= org.apache.commons.math3.util.OpenIntToDoubleHashMap.Iterator:advance()	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
307= org.apache.commons.math3.util.OpenIntToDoubleHashMap:OpenIntToDoubleHashMap()	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
308= org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
309= org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(int, double)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
310= org.apache.commons.math3.util.OpenIntToDoubleHashMap:OpenIntToDoubleHashMap(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
311= org.apache.commons.math3.util.OpenIntToDoubleHashMap:OpenIntToDoubleHashMap(OpenIntToDoubleHashMap)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
312= org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
313= org.apache.commons.math3.util.OpenIntToDoubleHashMap.Iterator:Iterator()	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
314= org.apache.commons.math3.util.OpenIntToDoubleHashMap:value()	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
315= org.apache.commons.math3.util.OpenIntToDoubleHashMap:key()	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
316= org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
317= org.apache.commons.math3.util.PairTest:testCreate()	/src/test/java/org/apache/commons/math3/util/PairTest.java
318= org.apache.commons.math3.util.PairTest.MyInteger:MyInteger(int)	/src/test/java/org/apache/commons/math3/util/PairTest.java
319= org.apache.commons.math3.util.PairTest:hashCode()	/src/test/java/org/apache/commons/math3/util/PairTest.java
320= org.apache.commons.math3.util.PairTest.MyInteger:equals(Object)	/src/test/java/org/apache/commons/math3/util/PairTest.java
321= org.apache.commons.math3.util.PairTest.MyInteger:set(int)	/src/test/java/org/apache/commons/math3/util/PairTest.java
322= org.apache.commons.math3.util.PairTest:testEquals()	/src/test/java/org/apache/commons/math3/util/PairTest.java
323= org.apache.commons.math3.util.PairTest:testHashCode()	/src/test/java/org/apache/commons/math3/util/PairTest.java
324= org.apache.commons.math3.util.PairTest:testAccessor2()	/src/test/java/org/apache/commons/math3/util/PairTest.java
325= org.apache.commons.math3.util.PairTest:testToString()	/src/test/java/org/apache/commons/math3/util/PairTest.java
326= org.apache.commons.math3.util.PairTest:MyInteger(int)	/src/test/java/org/apache/commons/math3/util/PairTest.java
327= org.apache.commons.math3.util.PairTest:equals(Object)	/src/test/java/org/apache/commons/math3/util/PairTest.java
328= org.apache.commons.math3.util.PairTest.MyInteger:hashCode()	/src/test/java/org/apache/commons/math3/util/PairTest.java
329= org.apache.commons.math3.util.PairTest:testAccessor()	/src/test/java/org/apache/commons/math3/util/PairTest.java
330= org.apache.commons.math3.util.PairTest:set(int)	/src/test/java/org/apache/commons/math3/util/PairTest.java
331= org.apache.commons.math3.optimization.SimpleVectorValueChecker:SimpleVectorValueChecker(double, double, int)	/src/main/java/org/apache/commons/math3/optimization/SimpleVectorValueChecker.java
332= org.apache.commons.math3.optimization.SimpleVectorValueChecker:converged(int, PointVectorValuePair, PointVectorValuePair)	/src/main/java/org/apache/commons/math3/optimization/SimpleVectorValueChecker.java
333= org.apache.commons.math3.optimization.SimpleVectorValueChecker:SimpleVectorValueChecker()	/src/main/java/org/apache/commons/math3/optimization/SimpleVectorValueChecker.java
334= org.apache.commons.math3.optimization.SimpleVectorValueChecker:SimpleVectorValueChecker(double, double)	/src/main/java/org/apache/commons/math3/optimization/SimpleVectorValueChecker.java
335= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:SphericalCoordinates(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
336= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:getR()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
337= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:toCartesianHessian(double[][], double[])	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
338= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:readResolve()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
339= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.DataTransferObject:readResolve()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
340= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:writeReplace()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
341= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.DataTransferObject:DataTransferObject(double, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
342= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:toCartesianGradient(double[])	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
343= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:getPhi()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
344= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:getTheta()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
345= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:computeHessians()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
346= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:computeJacobian()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
347= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:DataTransferObject(double, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
348= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:SphericalCoordinates(double, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
349= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:getCartesian()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
350= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:main(String[])	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
351= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:createIterable()	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
352= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:createParallelTasks(int, long)	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
353= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:computeTopographicError()	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
354= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:printHit(String, ChineseRingsClassifier)	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
355= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:next()	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
356= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:computeU()	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
357= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:makeInitializers()	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
358= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:hasNext()	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
359= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:remove()	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
360= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:createRandomIterator(long)	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
361= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:printU(String, ChineseRingsClassifier)	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
362= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:iterator()	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
363= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:computeHitHistogram()	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
364= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:ChineseRingsClassifier(ChineseRings, int, int)	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
365= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:createSequentialTask(long)	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
366= org.apache.commons.math3.userguide.sofm.ChineseRingsClassifier:computeQuantizationError()	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRingsClassifier.java
367= org.apache.commons.math3.stat.interval.ClopperPearsonInterval:createInterval(int, int, double)	/src/main/java/org/apache/commons/math3/stat/interval/ClopperPearsonInterval.java
368= org.apache.commons.math3.optim.univariate.UnivariateOptimizer:computeObjectiveValue(double)	/src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java
369= org.apache.commons.math3.optim.univariate.UnivariateOptimizer:getGoalType()	/src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java
370= org.apache.commons.math3.optim.univariate.UnivariateOptimizer:optimize(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java
371= org.apache.commons.math3.optim.univariate.UnivariateOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java
372= org.apache.commons.math3.optim.univariate.UnivariateOptimizer:getStartValue()	/src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java
373= org.apache.commons.math3.optim.univariate.UnivariateOptimizer:UnivariateOptimizer(ConvergenceChecker<UnivariatePointValuePair>)	/src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java
374= org.apache.commons.math3.optim.univariate.UnivariateOptimizer:getMax()	/src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java
375= org.apache.commons.math3.optim.univariate.UnivariateOptimizer:getMin()	/src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java
376= org.apache.commons.math3.ml.neuralnet.oned.NeuronString:SerializationProxy(boolean, double[][])	/src/main/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronString.java
377= org.apache.commons.math3.ml.neuralnet.oned.NeuronString:createLinks()	/src/main/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronString.java
378= org.apache.commons.math3.ml.neuralnet.oned.NeuronString.SerializationProxy:readResolve()	/src/main/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronString.java
379= org.apache.commons.math3.ml.neuralnet.oned.NeuronString:getSize()	/src/main/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronString.java
380= org.apache.commons.math3.ml.neuralnet.oned.NeuronString:writeReplace()	/src/main/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronString.java
381= org.apache.commons.math3.ml.neuralnet.oned.NeuronString:NeuronString(int, boolean, FeatureInitializer[])	/src/main/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronString.java
382= org.apache.commons.math3.ml.neuralnet.oned.NeuronString:NeuronString(boolean, double[][])	/src/main/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronString.java
383= org.apache.commons.math3.ml.neuralnet.oned.NeuronString:getFeatures(int)	/src/main/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronString.java
384= org.apache.commons.math3.ml.neuralnet.oned.NeuronString.SerializationProxy:SerializationProxy(boolean, double[][])	/src/main/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronString.java
385= org.apache.commons.math3.ml.neuralnet.oned.NeuronString:readObject(ObjectInputStream)	/src/main/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronString.java
386= org.apache.commons.math3.ml.neuralnet.oned.NeuronString:getNetwork()	/src/main/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronString.java
387= org.apache.commons.math3.ml.neuralnet.oned.NeuronString:readResolve()	/src/main/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronString.java
388= org.apache.commons.math3.optimization.LeastSquaresConverter:LeastSquaresConverter(MultivariateVectorFunction, double[])	/src/main/java/org/apache/commons/math3/optimization/LeastSquaresConverter.java
389= org.apache.commons.math3.optimization.LeastSquaresConverter:LeastSquaresConverter(MultivariateVectorFunction, double[], RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/LeastSquaresConverter.java
390= org.apache.commons.math3.optimization.LeastSquaresConverter:LeastSquaresConverter(MultivariateVectorFunction, double[], double[])	/src/main/java/org/apache/commons/math3/optimization/LeastSquaresConverter.java
391= org.apache.commons.math3.optimization.LeastSquaresConverter:value(double[])	/src/main/java/org/apache/commons/math3/optimization/LeastSquaresConverter.java
392= org.apache.commons.math3.geometry.euclidean.twod.NestedLoops:add(Vector2D[])	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/NestedLoops.java
393= org.apache.commons.math3.geometry.euclidean.twod.NestedLoops:setClockWise(boolean)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/NestedLoops.java
394= org.apache.commons.math3.geometry.euclidean.twod.NestedLoops:NestedLoops(double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/NestedLoops.java
395= org.apache.commons.math3.geometry.euclidean.twod.NestedLoops:add(NestedLoops)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/NestedLoops.java
396= org.apache.commons.math3.geometry.euclidean.twod.NestedLoops:NestedLoops(Vector2D[], double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/NestedLoops.java
397= org.apache.commons.math3.geometry.euclidean.twod.NestedLoops:correctOrientation()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/NestedLoops.java
398= org.apache.commons.math3.stat.clustering.Clusterable:distanceFrom(T)	/src/main/java/org/apache/commons/math3/stat/clustering/Clusterable.java
399= org.apache.commons.math3.stat.clustering.Clusterable:centroidOf(Collection<T>)	/src/main/java/org/apache/commons/math3/stat/clustering/Clusterable.java
400= org.apache.commons.math3.random.AbstractRandomGenerator:setSeed(int[])	/src/main/java/org/apache/commons/math3/random/AbstractRandomGenerator.java
401= org.apache.commons.math3.random.AbstractRandomGenerator:nextLong()	/src/main/java/org/apache/commons/math3/random/AbstractRandomGenerator.java
402= org.apache.commons.math3.random.AbstractRandomGenerator:nextGaussian()	/src/main/java/org/apache/commons/math3/random/AbstractRandomGenerator.java
403= org.apache.commons.math3.random.AbstractRandomGenerator:nextBytes(byte[])	/src/main/java/org/apache/commons/math3/random/AbstractRandomGenerator.java
404= org.apache.commons.math3.random.AbstractRandomGenerator:nextInt()	/src/main/java/org/apache/commons/math3/random/AbstractRandomGenerator.java
405= org.apache.commons.math3.random.AbstractRandomGenerator:nextFloat()	/src/main/java/org/apache/commons/math3/random/AbstractRandomGenerator.java
406= org.apache.commons.math3.random.AbstractRandomGenerator:AbstractRandomGenerator()	/src/main/java/org/apache/commons/math3/random/AbstractRandomGenerator.java
407= org.apache.commons.math3.random.AbstractRandomGenerator:nextBoolean()	/src/main/java/org/apache/commons/math3/random/AbstractRandomGenerator.java
408= org.apache.commons.math3.random.AbstractRandomGenerator:nextDouble()	/src/main/java/org/apache/commons/math3/random/AbstractRandomGenerator.java
409= org.apache.commons.math3.random.AbstractRandomGenerator:setSeed(long)	/src/main/java/org/apache/commons/math3/random/AbstractRandomGenerator.java
410= org.apache.commons.math3.random.AbstractRandomGenerator:setSeed(int)	/src/main/java/org/apache/commons/math3/random/AbstractRandomGenerator.java
411= org.apache.commons.math3.random.AbstractRandomGenerator:clear()	/src/main/java/org/apache/commons/math3/random/AbstractRandomGenerator.java
412= org.apache.commons.math3.random.AbstractRandomGenerator:nextInt(int)	/src/main/java/org/apache/commons/math3/random/AbstractRandomGenerator.java
413= org.apache.commons.math3.linear.DiagonalMatrix:copy()	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
414= org.apache.commons.math3.linear.DiagonalMatrix:setEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
415= org.apache.commons.math3.linear.DiagonalMatrix:multiply(DiagonalMatrix)	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
416= org.apache.commons.math3.linear.DiagonalMatrix:DiagonalMatrix(double[], boolean)	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
417= org.apache.commons.math3.linear.DiagonalMatrix:operate(double[])	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
418= org.apache.commons.math3.linear.DiagonalMatrix:multiplyEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
419= org.apache.commons.math3.linear.DiagonalMatrix:getColumnDimension()	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
420= org.apache.commons.math3.linear.DiagonalMatrix:DiagonalMatrix(double[])	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
421= org.apache.commons.math3.linear.DiagonalMatrix:getData()	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
422= org.apache.commons.math3.linear.DiagonalMatrix:getEntry(int, int)	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
423= org.apache.commons.math3.linear.DiagonalMatrix:preMultiply(RealVector)	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
424= org.apache.commons.math3.linear.DiagonalMatrix:getDataRef()	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
425= org.apache.commons.math3.linear.DiagonalMatrix:getRowDimension()	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
426= org.apache.commons.math3.linear.DiagonalMatrix:createMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
427= org.apache.commons.math3.linear.DiagonalMatrix:multiply(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
428= org.apache.commons.math3.linear.DiagonalMatrix:DiagonalMatrix(int)	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
429= org.apache.commons.math3.linear.DiagonalMatrix:addToEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
430= org.apache.commons.math3.linear.DiagonalMatrix:subtract(DiagonalMatrix)	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
431= org.apache.commons.math3.linear.DiagonalMatrix:preMultiply(double[])	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
432= org.apache.commons.math3.linear.DiagonalMatrix:add(DiagonalMatrix)	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
433= org.apache.commons.math3.linear.DiagonalMatrix:ensureZero(double)	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
434= org.apache.commons.math3.linear.DiagonalMatrix:inverse(double)	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
435= org.apache.commons.math3.linear.DiagonalMatrix:inverse()	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
436= org.apache.commons.math3.linear.DiagonalMatrix:isSingular(double)	/src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java
437= org.apache.commons.math3.stat.correlation.KendallsCorrelation:compare(Pair<Double,Double>, Pair<Double,Double>)	/src/main/java/org/apache/commons/math3/stat/correlation/KendallsCorrelation.java
438= org.apache.commons.math3.stat.correlation.KendallsCorrelation:KendallsCorrelation()	/src/main/java/org/apache/commons/math3/stat/correlation/KendallsCorrelation.java
439= org.apache.commons.math3.stat.correlation.KendallsCorrelation:correlation(double[], double[])	/src/main/java/org/apache/commons/math3/stat/correlation/KendallsCorrelation.java
440= org.apache.commons.math3.stat.correlation.KendallsCorrelation:getCorrelationMatrix()	/src/main/java/org/apache/commons/math3/stat/correlation/KendallsCorrelation.java
441= org.apache.commons.math3.stat.correlation.KendallsCorrelation:computeCorrelationMatrix(RealMatrix)	/src/main/java/org/apache/commons/math3/stat/correlation/KendallsCorrelation.java
442= org.apache.commons.math3.stat.correlation.KendallsCorrelation:computeCorrelationMatrix(double[][])	/src/main/java/org/apache/commons/math3/stat/correlation/KendallsCorrelation.java
443= org.apache.commons.math3.stat.correlation.KendallsCorrelation:KendallsCorrelation(RealMatrix)	/src/main/java/org/apache/commons/math3/stat/correlation/KendallsCorrelation.java
444= org.apache.commons.math3.stat.correlation.KendallsCorrelation:sum(long)	/src/main/java/org/apache/commons/math3/stat/correlation/KendallsCorrelation.java
445= org.apache.commons.math3.stat.correlation.KendallsCorrelation:KendallsCorrelation(double[][])	/src/main/java/org/apache/commons/math3/stat/correlation/KendallsCorrelation.java
446= org.apache.commons.math3.analysis.function.Exp:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Exp.java
447= org.apache.commons.math3.analysis.function.Exp:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Exp.java
448= org.apache.commons.math3.analysis.function.Exp:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Exp.java
449= org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java
450= org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent:providesResidual()	/src/main/java/org/apache/commons/math3/linear/DefaultIterativeLinearSolverEvent.java
451= org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent:DefaultIterativeLinearSolverEvent(Object, int, RealVector, RealVector, RealVector, double)	/src/main/java/org/apache/commons/math3/linear/DefaultIterativeLinearSolverEvent.java
452= org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent:getRightHandSideVector()	/src/main/java/org/apache/commons/math3/linear/DefaultIterativeLinearSolverEvent.java
453= org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent:DefaultIterativeLinearSolverEvent(Object, int, RealVector, RealVector, double)	/src/main/java/org/apache/commons/math3/linear/DefaultIterativeLinearSolverEvent.java
454= org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent:getNormOfResidual()	/src/main/java/org/apache/commons/math3/linear/DefaultIterativeLinearSolverEvent.java
455= org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent:getResidual()	/src/main/java/org/apache/commons/math3/linear/DefaultIterativeLinearSolverEvent.java
456= org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent:getSolution()	/src/main/java/org/apache/commons/math3/linear/DefaultIterativeLinearSolverEvent.java
457= org.apache.commons.math3.fitting.GaussianFitter:sortObservations(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
458= org.apache.commons.math3.fitting.GaussianFitter.ParameterGuesser:compare(WeightedObservedPoint, WeightedObservedPoint)	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
459= org.apache.commons.math3.fitting.GaussianFitter:fit()	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
460= org.apache.commons.math3.fitting.GaussianFitter:isBetween(double, double, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
461= org.apache.commons.math3.fitting.GaussianFitter:gradient(double, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
462= org.apache.commons.math3.fitting.GaussianFitter:fit(double[])	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
463= org.apache.commons.math3.fitting.GaussianFitter.ParameterGuesser:sortObservations(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
464= org.apache.commons.math3.fitting.GaussianFitter.ParameterGuesser:basicGuess(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
465= org.apache.commons.math3.fitting.GaussianFitter.ParameterGuesser:guess()	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
466= org.apache.commons.math3.fitting.GaussianFitter.ParameterGuesser:interpolateXAtY(WeightedObservedPoint[], int, int, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
467= org.apache.commons.math3.fitting.GaussianFitter:GaussianFitter(MultivariateVectorOptimizer)	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
468= org.apache.commons.math3.fitting.GaussianFitter:guess()	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
469= org.apache.commons.math3.fitting.GaussianFitter.ParameterGuesser:isBetween(double, double, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
470= org.apache.commons.math3.fitting.GaussianFitter:value(double, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
471= org.apache.commons.math3.fitting.GaussianFitter:basicGuess(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
472= org.apache.commons.math3.fitting.GaussianFitter.ParameterGuesser:ParameterGuesser(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
473= org.apache.commons.math3.fitting.GaussianFitter:ParameterGuesser(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
474= org.apache.commons.math3.fitting.GaussianFitter:findMaxY(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
475= org.apache.commons.math3.fitting.GaussianFitter:getInterpolationPointsForY(WeightedObservedPoint[], int, int, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
476= org.apache.commons.math3.fitting.GaussianFitter:interpolateXAtY(WeightedObservedPoint[], int, int, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
477= org.apache.commons.math3.fitting.GaussianFitter:compare(WeightedObservedPoint, WeightedObservedPoint)	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
478= org.apache.commons.math3.fitting.GaussianFitter.ParameterGuesser:findMaxY(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
479= org.apache.commons.math3.fitting.GaussianFitter.ParameterGuesser:getInterpolationPointsForY(WeightedObservedPoint[], int, int, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java
480= org.apache.commons.math3.analysis.function.Tanh:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Tanh.java
481= org.apache.commons.math3.analysis.function.Tanh:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Tanh.java
482= org.apache.commons.math3.analysis.function.Tanh:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Tanh.java
483= org.apache.commons.math3.distribution.LogNormalDistribution:LogNormalDistribution(double, double)	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
484= org.apache.commons.math3.distribution.LogNormalDistribution:getShape()	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
485= org.apache.commons.math3.distribution.LogNormalDistribution:LogNormalDistribution(RandomGenerator, double, double)	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
486= org.apache.commons.math3.distribution.LogNormalDistribution:LogNormalDistribution(double, double, double)	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
487= org.apache.commons.math3.distribution.LogNormalDistribution:probability(double, double)	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
488= org.apache.commons.math3.distribution.LogNormalDistribution:logDensity(double)	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
489= org.apache.commons.math3.distribution.LogNormalDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
490= org.apache.commons.math3.distribution.LogNormalDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
491= org.apache.commons.math3.distribution.LogNormalDistribution:LogNormalDistribution()	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
492= org.apache.commons.math3.distribution.LogNormalDistribution:LogNormalDistribution(RandomGenerator, double, double, double)	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
493= org.apache.commons.math3.distribution.LogNormalDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
494= org.apache.commons.math3.distribution.LogNormalDistribution:getSolverAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
495= org.apache.commons.math3.distribution.LogNormalDistribution:cumulativeProbability(double, double)	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
496= org.apache.commons.math3.distribution.LogNormalDistribution:getScale()	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
497= org.apache.commons.math3.distribution.LogNormalDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
498= org.apache.commons.math3.distribution.LogNormalDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
499= org.apache.commons.math3.distribution.LogNormalDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
500= org.apache.commons.math3.distribution.LogNormalDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
501= org.apache.commons.math3.distribution.LogNormalDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
502= org.apache.commons.math3.distribution.LogNormalDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
503= org.apache.commons.math3.distribution.LogNormalDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
504= org.apache.commons.math3.ode.events.Transformer:transformed(double)	/src/main/java/org/apache/commons/math3/ode/events/Transformer.java
505= org.apache.commons.math3.geometry.euclidean.oned.Interval:checkPoint(double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java
506= org.apache.commons.math3.geometry.euclidean.oned.Interval:getInf()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java
507= org.apache.commons.math3.geometry.euclidean.oned.Interval:getMidPoint()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java
508= org.apache.commons.math3.geometry.euclidean.oned.Interval:getLower()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java
509= org.apache.commons.math3.geometry.euclidean.oned.Interval:getSup()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java
510= org.apache.commons.math3.geometry.euclidean.oned.Interval:getSize()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java
511= org.apache.commons.math3.geometry.euclidean.oned.Interval:Interval(double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java
512= org.apache.commons.math3.geometry.euclidean.oned.Interval:getUpper()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java
513= org.apache.commons.math3.geometry.euclidean.oned.Interval:getBarycenter()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java
514= org.apache.commons.math3.geometry.euclidean.oned.Interval:getLength()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java
515= org.apache.commons.math3.optimization.ConvergenceChecker:converged(int, PAIR, PAIR)	/src/main/java/org/apache/commons/math3/optimization/ConvergenceChecker.java
516= org.apache.commons.math3.userguide.sofm.ChineseRings:getPoints()	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRings.java
517= org.apache.commons.math3.userguide.sofm.ChineseRings:ChineseRings(Vector3D, double, double, double, double, int, int)	/src/userguide/java/org/apache/commons/math3/userguide/sofm/ChineseRings.java
518= org.apache.commons.math3.linear.CholeskyDecomposition:getDeterminant()	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
519= org.apache.commons.math3.linear.CholeskyDecomposition:CholeskyDecomposition(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
520= org.apache.commons.math3.linear.CholeskyDecomposition:solve(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
521= org.apache.commons.math3.linear.CholeskyDecomposition.Solver:Solver(double[][])	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
522= org.apache.commons.math3.linear.CholeskyDecomposition:solve(RealVector)	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
523= org.apache.commons.math3.linear.CholeskyDecomposition:getL()	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
524= org.apache.commons.math3.linear.CholeskyDecomposition:CholeskyDecomposition(RealMatrix, double, double)	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
525= org.apache.commons.math3.linear.CholeskyDecomposition:getInverse()	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
526= org.apache.commons.math3.linear.CholeskyDecomposition:getSolver()	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
527= org.apache.commons.math3.linear.CholeskyDecomposition.Solver:getInverse()	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
528= org.apache.commons.math3.linear.CholeskyDecomposition:Solver(double[][])	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
529= org.apache.commons.math3.linear.CholeskyDecomposition.Solver:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
530= org.apache.commons.math3.linear.CholeskyDecomposition:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
531= org.apache.commons.math3.linear.CholeskyDecomposition.Solver:solve(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
532= org.apache.commons.math3.linear.CholeskyDecomposition.Solver:solve(RealVector)	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
533= org.apache.commons.math3.linear.CholeskyDecomposition:getLT()	/src/main/java/org/apache/commons/math3/linear/CholeskyDecomposition.java
534= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer:getOptima()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizer.java
535= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer:weightedResidual(PointVectorValuePair)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizer.java
536= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer:MultiStartMultivariateVectorOptimizer(MultivariateVectorOptimizer, int, RandomVectorGenerator)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizer.java
537= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer:clear()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizer.java
538= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer:compare(PointVectorValuePair, PointVectorValuePair)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizer.java
539= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer:store(PointVectorValuePair)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizer.java
540= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer:getPairComparator()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizer.java
541= org.apache.commons.math3.ode.sampling.StepNormalizer:storeStep(StepInterpolator, double)	/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
542= org.apache.commons.math3.ode.sampling.StepNormalizer:StepNormalizer(double, FixedStepHandler)	/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
543= org.apache.commons.math3.ode.sampling.StepNormalizer:StepNormalizer(double, FixedStepHandler, StepNormalizerBounds)	/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
544= org.apache.commons.math3.ode.sampling.StepNormalizer:init(double, double[], double)	/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
545= org.apache.commons.math3.ode.sampling.StepNormalizer:isNextInStep(double, StepInterpolator)	/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
546= org.apache.commons.math3.ode.sampling.StepNormalizer:StepNormalizer(double, FixedStepHandler, StepNormalizerMode)	/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
547= org.apache.commons.math3.ode.sampling.StepNormalizer:doNormalizedStep(boolean)	/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
548= org.apache.commons.math3.ode.sampling.StepNormalizer:handleStep(StepInterpolator, boolean)	/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
549= org.apache.commons.math3.ode.sampling.StepNormalizer:StepNormalizer(double, FixedStepHandler, StepNormalizerMode, StepNormalizerBounds)	/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
550= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:Direction(boolean)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
551= org.apache.commons.math3.stat.descriptive.moment.SemiVariance.Direction:getDirection()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
552= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:evaluate(double[], double)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
553= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:copy(SemiVariance, SemiVariance)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
554= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:getDirection()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
555= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:evaluate(double[], double, Direction)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
556= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:isBiasCorrected()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
557= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:SemiVariance()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
558= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:SemiVariance(Direction)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
559= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
560= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:SemiVariance(SemiVariance)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
561= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:SemiVariance(boolean)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
562= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
563= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:setBiasCorrected(boolean)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
564= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:getVarianceDirection()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
565= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:evaluate(double[], double, Direction, boolean, int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
566= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:evaluate(double[], Direction)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
567= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:setVarianceDirection(Direction)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
568= org.apache.commons.math3.stat.descriptive.moment.SemiVariance.Direction:Direction(boolean)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
569= org.apache.commons.math3.stat.descriptive.moment.SemiVariance:SemiVariance(boolean, Direction)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java
570= org.apache.commons.math3.stat.descriptive.summary.SumOfLogs:SumOfLogs()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfLogs.java
571= org.apache.commons.math3.stat.descriptive.summary.SumOfLogs:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfLogs.java
572= org.apache.commons.math3.stat.descriptive.summary.SumOfLogs:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfLogs.java
573= org.apache.commons.math3.stat.descriptive.summary.SumOfLogs:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfLogs.java
574= org.apache.commons.math3.stat.descriptive.summary.SumOfLogs:SumOfLogs(SumOfLogs)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfLogs.java
575= org.apache.commons.math3.stat.descriptive.summary.SumOfLogs:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfLogs.java
576= org.apache.commons.math3.stat.descriptive.summary.SumOfLogs:copy(SumOfLogs, SumOfLogs)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfLogs.java
577= org.apache.commons.math3.stat.descriptive.summary.SumOfLogs:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfLogs.java
578= org.apache.commons.math3.stat.descriptive.summary.SumOfLogs:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfLogs.java
579= org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory:getRuleInternal(int)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java
580= org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory:addRule(Pair<T[],T[]>)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java
581= org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory:convertToDouble(Pair<T[],T[]>)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java
582= org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory:computeRule(int)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java
583= org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory:getRule(int)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java
584= org.apache.commons.math3.RealFieldElement:signum()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
585= org.apache.commons.math3.RealFieldElement:sinh()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
586= org.apache.commons.math3.RealFieldElement:linearCombination(double, T, double, T, double, T)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
587= org.apache.commons.math3.RealFieldElement:linearCombination(T, T, T, T, T, T, T, T)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
588= org.apache.commons.math3.RealFieldElement:add(double)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
589= org.apache.commons.math3.RealFieldElement:reciprocal()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
590= org.apache.commons.math3.RealFieldElement:pow(T)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
591= org.apache.commons.math3.RealFieldElement:multiply(double)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
592= org.apache.commons.math3.RealFieldElement:subtract(double)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
593= org.apache.commons.math3.RealFieldElement:remainder(T)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
594= org.apache.commons.math3.RealFieldElement:floor()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
595= org.apache.commons.math3.RealFieldElement:pow(int)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
596= org.apache.commons.math3.RealFieldElement:sqrt()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
597= org.apache.commons.math3.RealFieldElement:tanh()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
598= org.apache.commons.math3.RealFieldElement:divide(double)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
599= org.apache.commons.math3.RealFieldElement:pow(double)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
600= org.apache.commons.math3.RealFieldElement:cosh()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
601= org.apache.commons.math3.RealFieldElement:exp()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
602= org.apache.commons.math3.RealFieldElement:acos()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
603= org.apache.commons.math3.RealFieldElement:atan()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
604= org.apache.commons.math3.RealFieldElement:log1p()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
605= org.apache.commons.math3.RealFieldElement:scalb(int)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
606= org.apache.commons.math3.RealFieldElement:tan()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
607= org.apache.commons.math3.RealFieldElement:copySign(double)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
608= org.apache.commons.math3.RealFieldElement:cbrt()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
609= org.apache.commons.math3.RealFieldElement:sin()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
610= org.apache.commons.math3.RealFieldElement:asin()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
611= org.apache.commons.math3.RealFieldElement:rootN(int)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
612= org.apache.commons.math3.RealFieldElement:expm1()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
613= org.apache.commons.math3.RealFieldElement:atanh()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
614= org.apache.commons.math3.RealFieldElement:linearCombination(double, T, double, T, double, T, double, T)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
615= org.apache.commons.math3.RealFieldElement:atan2(T)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
616= org.apache.commons.math3.RealFieldElement:linearCombination(double, T, double, T)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
617= org.apache.commons.math3.RealFieldElement:hypot(T)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
618= org.apache.commons.math3.RealFieldElement:asinh()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
619= org.apache.commons.math3.RealFieldElement:round()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
620= org.apache.commons.math3.RealFieldElement:copySign(T)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
621= org.apache.commons.math3.RealFieldElement:linearCombination(T[], T[])	/src/main/java/org/apache/commons/math3/RealFieldElement.java
622= org.apache.commons.math3.RealFieldElement:rint()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
623= org.apache.commons.math3.RealFieldElement:linearCombination(T, T, T, T, T, T)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
624= org.apache.commons.math3.RealFieldElement:abs()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
625= org.apache.commons.math3.RealFieldElement:linearCombination(double[], T[])	/src/main/java/org/apache/commons/math3/RealFieldElement.java
626= org.apache.commons.math3.RealFieldElement:acosh()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
627= org.apache.commons.math3.RealFieldElement:remainder(double)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
628= org.apache.commons.math3.RealFieldElement:linearCombination(T, T, T, T)	/src/main/java/org/apache/commons/math3/RealFieldElement.java
629= org.apache.commons.math3.RealFieldElement:cos()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
630= org.apache.commons.math3.RealFieldElement:getReal()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
631= org.apache.commons.math3.RealFieldElement:ceil()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
632= org.apache.commons.math3.RealFieldElement:log()	/src/main/java/org/apache/commons/math3/RealFieldElement.java
633= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.Node:delete()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
634= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:rotateCW()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
635= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.Node:Node(T, Node)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
636= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:getPrevious()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
637= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.Node:rotateCW()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
638= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:rebalanceRightShrunk()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
639= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:getNotSmaller(T)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
640= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:delete()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
641= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:Node(T, Node)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
642= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.Node:size()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
643= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:rebalanceRightGrown()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
644= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.Node:getElement()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
645= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.Node:rotateCCW()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
646= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.Node:rebalanceLeftShrunk()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
647= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:AVLTree()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
648= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.Node:getLargest()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
649= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:isEmpty()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
650= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:delete(T)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
651= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:getSmallest()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
652= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:insert(T)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
653= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.Node:getNext()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
654= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:rebalanceLeftGrown()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
655= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:getLargest()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
656= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.Node:rebalanceRightGrown()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
657= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.Node:getPrevious()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
658= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.Node:insert(T)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
659= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:getNext()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
660= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:getNotLarger(T)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
661= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:rebalanceLeftShrunk()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
662= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.Node:getSmallest()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
663= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.Node:rebalanceRightShrunk()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
664= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:size()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
665= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:getElement()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
666= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:rotateCCW()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
667= org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.Node:rebalanceLeftGrown()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTree.java
668= org.apache.commons.math3.linear.QRDecomposition.Solver:solve(RealVector)	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
669= org.apache.commons.math3.linear.QRDecomposition:QRDecomposition(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
670= org.apache.commons.math3.linear.QRDecomposition:getH()	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
671= org.apache.commons.math3.linear.QRDecomposition.Solver:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
672= org.apache.commons.math3.linear.QRDecomposition:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
673= org.apache.commons.math3.linear.QRDecomposition.Solver:solve(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
674= org.apache.commons.math3.linear.QRDecomposition.Solver:getInverse()	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
675= org.apache.commons.math3.linear.QRDecomposition:solve(RealVector)	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
676= org.apache.commons.math3.linear.QRDecomposition:Solver(double[][], double[], double)	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
677= org.apache.commons.math3.linear.QRDecomposition:solve(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
678= org.apache.commons.math3.linear.QRDecomposition:decompose(double[][])	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
679= org.apache.commons.math3.linear.QRDecomposition:performHouseholderReflection(int, double[][])	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
680= org.apache.commons.math3.linear.QRDecomposition:QRDecomposition(RealMatrix, double)	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
681= org.apache.commons.math3.linear.QRDecomposition:getQ()	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
682= org.apache.commons.math3.linear.QRDecomposition.Solver:Solver(double[][], double[], double)	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
683= org.apache.commons.math3.linear.QRDecomposition:getR()	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
684= org.apache.commons.math3.linear.QRDecomposition:getQT()	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
685= org.apache.commons.math3.linear.QRDecomposition:getSolver()	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
686= org.apache.commons.math3.linear.QRDecomposition:getInverse()	/src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
687= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter:MultivariateFunctionPenaltyAdapter(MultivariateFunction, double[], double[], double, double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapter.java
688= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter:value(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapter.java
689= org.apache.commons.math3.exception.util.LocalizedFormats:LocalizedFormats(String)	/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java
690= org.apache.commons.math3.exception.util.LocalizedFormats:getSourceString()	/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java
691= org.apache.commons.math3.exception.util.LocalizedFormats:getLocalizedString(Locale)	/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java
692= org.apache.commons.math3.genetics.TournamentSelection:tournament(ListPopulation)	/src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java
693= org.apache.commons.math3.genetics.TournamentSelection:TournamentSelection(int)	/src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java
694= org.apache.commons.math3.genetics.TournamentSelection:select(Population)	/src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java
695= org.apache.commons.math3.genetics.TournamentSelection:getArity()	/src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java
696= org.apache.commons.math3.genetics.TournamentSelection:setArity(int)	/src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java
697= org.apache.commons.math3.genetics.TournamentSelection:nextGeneration()	/src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java
698= org.apache.commons.math3.stat.interval.WilsonScoreIntervalTest:testStandardInterval()	/src/test/java/org/apache/commons/math3/stat/interval/WilsonScoreIntervalTest.java
699= org.apache.commons.math3.stat.interval.WilsonScoreIntervalTest:createBinomialConfidenceInterval()	/src/test/java/org/apache/commons/math3/stat/interval/WilsonScoreIntervalTest.java
700= org.apache.commons.math3.transform.FastCosineTransformer:FastCosineTransformer(DctNormalization)	/src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java
701= org.apache.commons.math3.transform.FastCosineTransformer:fct(double[])	/src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java
702= org.apache.commons.math3.transform.FastCosineTransformer:transform(UnivariateFunction, double, double, int, TransformType)	/src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java
703= org.apache.commons.math3.transform.FastCosineTransformer:transform(double[], TransformType)	/src/main/java/org/apache/commons/math3/transform/FastCosineTransformer.java
704= org.apache.commons.math3.analysis.UnivariateMatrixFunction:value(double)	/src/main/java/org/apache/commons/math3/analysis/UnivariateMatrixFunction.java
705= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem:getModelFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StraightLineProblem.java
706= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem:x()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StraightLineProblem.java
707= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem:y()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StraightLineProblem.java
708= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem:Model(double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StraightLineProblem.java
709= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem:solve()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StraightLineProblem.java
710= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem:weight()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StraightLineProblem.java
711= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem.Model:value(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StraightLineProblem.java
712= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem:StraightLineProblem(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StraightLineProblem.java
713= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem:target()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StraightLineProblem.java
714= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StraightLineProblem.java
715= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem:jacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StraightLineProblem.java
716= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem.Model:Model(double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StraightLineProblem.java
717= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem:addPoint(double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StraightLineProblem.java
718= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem:value(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StraightLineProblem.java
719= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StraightLineProblem.java
720= org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateActionTest:testUpdate()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenUpdateActionTest.java
721= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.LinearProblem:LinearProblem(double[][], double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
722= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:testTrivial()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
723= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:testOneSet()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
724= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.LinearProblem:getObjectiveFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
725= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:testCircleFitting()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
726= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:testIllConditioned()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
727= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
728= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.LinearProblem:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
729= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:getObjectiveFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
730= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:getObjectiveFunctionGradient()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
731= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.LinearProblem:getObjectiveFunctionGradient()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
732= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:LinearProblem(double[][], double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
733= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:testNoDependency()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
734= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:testBoundsUnsupported()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
735= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:testColumnsPermutation()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
736= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:testRedundantEquations()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
737= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:testMoreEstimatedParametersUnsorted()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
738= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:precondition(double[], double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
739= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:testNonInversible()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
740= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:testMoreEstimatedParametersSimple()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
741= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:testInconsistentEquations()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
742= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest:testTwoSets()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java
743= org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:HermiteInterpolator()	/src/main/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolator.java
744= org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolator.java
745= org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:checkInterpolation()	/src/main/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolator.java
746= org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:addSamplePoint(double, double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolator.java
747= org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:value(double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolator.java
748= org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:getPolynomials()	/src/main/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolator.java
749= org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:polynomial(double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolator.java
750= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:Vector1D(double, Vector1D, double, Vector1D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
751= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:dotProduct(Vector<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
752= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:distance1(Vector<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
753= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:distance(Vector<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
754= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:add(double, Vector<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
755= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:add(Vector<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
756= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:hashCode()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
757= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:getZero()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
758= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:distanceInf(Vector<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
759= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:distanceSq(Vector<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
760= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:toString(NumberFormat)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
761= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:Vector1D(double, Vector1D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
762= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:distance(Point<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
763= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:getNorm()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
764= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:getX()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
765= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:negate()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
766= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:toString()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
767= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:getNorm1()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
768= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:Vector1D(double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
769= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:isInfinite()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
770= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:distance(Vector1D, Vector1D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
771= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:distanceInf(Vector1D, Vector1D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
772= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:scalarMultiply(double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
773= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:getNormSq()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
774= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:distanceSq(Vector1D, Vector1D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
775= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:Vector1D(double, Vector1D, double, Vector1D, double, Vector1D, double, Vector1D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
776= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:getSpace()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
777= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:equals(Object)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
778= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:subtract(Vector<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
779= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:normalize()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
780= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:subtract(double, Vector<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
781= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:Vector1D(double, Vector1D, double, Vector1D, double, Vector1D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
782= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:isNaN()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
783= org.apache.commons.math3.geometry.euclidean.oned.Vector1D:getNormInf()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java
784= org.apache.commons.math3.geometry.spherical.oned.S1Point:S1Point(double, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/S1Point.java
785= org.apache.commons.math3.geometry.spherical.oned.S1Point:getVector()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/S1Point.java
786= org.apache.commons.math3.geometry.spherical.oned.S1Point:getAlpha()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/S1Point.java
787= org.apache.commons.math3.geometry.spherical.oned.S1Point:distance(S1Point, S1Point)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/S1Point.java
788= org.apache.commons.math3.geometry.spherical.oned.S1Point:getSpace()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/S1Point.java
789= org.apache.commons.math3.geometry.spherical.oned.S1Point:hashCode()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/S1Point.java
790= org.apache.commons.math3.geometry.spherical.oned.S1Point:isNaN()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/S1Point.java
791= org.apache.commons.math3.geometry.spherical.oned.S1Point:distance(Point<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/S1Point.java
792= org.apache.commons.math3.geometry.spherical.oned.S1Point:equals(Object)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/S1Point.java
793= org.apache.commons.math3.geometry.spherical.oned.S1Point:S1Point(double)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/S1Point.java
794= org.apache.commons.math3.stat.correlation.StorelessCovariance:setElement(int, int, StorelessBivariateCovariance)	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessCovariance.java
795= org.apache.commons.math3.stat.correlation.StorelessCovariance:append(StorelessCovariance)	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessCovariance.java
796= org.apache.commons.math3.stat.correlation.StorelessCovariance:getCovariance(int, int)	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessCovariance.java
797= org.apache.commons.math3.stat.correlation.StorelessCovariance:getElement(int, int)	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessCovariance.java
798= org.apache.commons.math3.stat.correlation.StorelessCovariance:getCovarianceMatrix()	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessCovariance.java
799= org.apache.commons.math3.stat.correlation.StorelessCovariance:indexOf(int, int)	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessCovariance.java
800= org.apache.commons.math3.stat.correlation.StorelessCovariance:initializeMatrix(boolean)	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessCovariance.java
801= org.apache.commons.math3.stat.correlation.StorelessCovariance:getData()	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessCovariance.java
802= org.apache.commons.math3.stat.correlation.StorelessCovariance:StorelessCovariance(int)	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessCovariance.java
803= org.apache.commons.math3.stat.correlation.StorelessCovariance:increment(double[])	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessCovariance.java
804= org.apache.commons.math3.stat.correlation.StorelessCovariance:getN()	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessCovariance.java
805= org.apache.commons.math3.stat.correlation.StorelessCovariance:StorelessCovariance(int, boolean)	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessCovariance.java
806= org.apache.commons.math3.optimization.BaseMultivariateOptimizer:optimize(int, FUNC, GoalType, double[])	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateOptimizer.java
807= org.apache.commons.math3.dfp.DfpDec:DfpDec(DfpField, double)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
808= org.apache.commons.math3.dfp.DfpDec:newInstance(byte, byte)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
809= org.apache.commons.math3.dfp.DfpDec:newInstance(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
810= org.apache.commons.math3.dfp.DfpDec:DfpDec(DfpField, long)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
811= org.apache.commons.math3.dfp.DfpDec:DfpDec(DfpField, String)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
812= org.apache.commons.math3.dfp.DfpDec:newInstance()	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
813= org.apache.commons.math3.dfp.DfpDec:newInstance(long)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
814= org.apache.commons.math3.dfp.DfpDec:DfpDec(DfpField, byte)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
815= org.apache.commons.math3.dfp.DfpDec:DfpDec(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
816= org.apache.commons.math3.dfp.DfpDec:getDecimalDigits()	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
817= org.apache.commons.math3.dfp.DfpDec:round(int)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
818= org.apache.commons.math3.dfp.DfpDec:nextAfter(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
819= org.apache.commons.math3.dfp.DfpDec:newInstance(byte)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
820= org.apache.commons.math3.dfp.DfpDec:newInstance(int)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
821= org.apache.commons.math3.dfp.DfpDec:newInstance(double)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
822= org.apache.commons.math3.dfp.DfpDec:DfpDec(DfpField, byte, byte)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
823= org.apache.commons.math3.dfp.DfpDec:DfpDec(DfpField)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
824= org.apache.commons.math3.dfp.DfpDec:DfpDec(DfpField, int)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
825= org.apache.commons.math3.dfp.DfpDec:newInstance(String)	/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
826= org.apache.commons.math3.distribution.MultivariateRealDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/MultivariateRealDistribution.java
827= org.apache.commons.math3.distribution.MultivariateRealDistribution:reseedRandomGenerator(long)	/src/main/java/org/apache/commons/math3/distribution/MultivariateRealDistribution.java
828= org.apache.commons.math3.distribution.MultivariateRealDistribution:getDimension()	/src/main/java/org/apache/commons/math3/distribution/MultivariateRealDistribution.java
829= org.apache.commons.math3.distribution.MultivariateRealDistribution:sample(int)	/src/main/java/org/apache/commons/math3/distribution/MultivariateRealDistribution.java
830= org.apache.commons.math3.distribution.MultivariateRealDistribution:density(double[])	/src/main/java/org/apache/commons/math3/distribution/MultivariateRealDistribution.java
831= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:getVertices()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
832= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:PolygonsSet(double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
833= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:PolygonsSet(double, double, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
834= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge:getNode()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
835= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:verticesToTree(double, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
836= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.SegmentsBuilder:visitLeafNode(BSPTree<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
837= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge:getEnd()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
838= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.SegmentsBuilder:visitOrder(BSPTree<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
839= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.ComparableSegment:equals(Object)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
840= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:ComparableSegment(Vector2D, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
841= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge:getStart()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
842= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:SegmentsBuilder()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
843= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex:bindWith(Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
844= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:insertEdges(double, BSPTree<Euclidean2D>, List<Edge>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
845= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:getStart()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
846= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:PolygonsSet(double, double, double, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
847= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:visitInternalNode(BSPTree<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
848= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:setIncoming(Edge)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
849= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:sharedLineWith(Vertex)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
850= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:PolygonsSet(Collection<SubHyperplane<Euclidean2D>>, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
851= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.SegmentsBuilder:SegmentsBuilder()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
852= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge:Edge(Vertex, Vertex, Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
853= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex:setOutgoing(Edge)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
854= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:followLoop(AVLTree<ComparableSegment>.Node, AVLTree<ComparableSegment>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
855= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:equals(Object)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
856= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:PolygonsSet(Collection<SubHyperplane<Euclidean2D>>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
857= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex:Vertex(Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
858= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:setNode(BSPTree<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
859= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:getSorted()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
860= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.ComparableSegment:ComparableSegment(Vector2D, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
861= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:getLine()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
862= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:getIncoming()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
863= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:getEnd()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
864= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.SegmentsBuilder:visitInternalNode(BSPTree<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
865= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex:getLocation()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
866= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:ComparableSegment(Vector2D, Vector2D, Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
867= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.SegmentsBuilder:getSorted()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
868= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:getOutgoing()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
869= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:hashCode()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
870= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:addContribution(SubHyperplane<Euclidean2D>, boolean)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
871= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.ComparableSegment:compareTo(ComparableSegment)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
872= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.SegmentsBuilder:addContribution(SubHyperplane<Euclidean2D>, boolean)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
873= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:computeGeometricalProperties()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
874= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:Vertex(Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
875= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.ComparableSegment:ComparableSegment(Vector2D, Vector2D, Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
876= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:compareTo(ComparableSegment)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
877= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:visitLeafNode(BSPTree<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
878= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex:setIncoming(Edge)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
879= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:PolygonsSet(BSPTree<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
880= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:PolygonsSet(double, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
881= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex:sharedLineWith(Vertex)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
882= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:PolygonsSet()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
883= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:split(Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
884= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:getLocation()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
885= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge:split(Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
886= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:boxBoundary(double, double, double, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
887= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:buildNew(BSPTree<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
888= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:setOutgoing(Edge)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
889= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:PolygonsSet(BSPTree<Euclidean2D>, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
890= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge:getLine()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
891= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge:setNode(BSPTree<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
892= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:visitOrder(BSPTree<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
893= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex:getOutgoing()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
894= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:getNode()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
895= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:bindWith(Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
896= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.ComparableSegment:hashCode()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
897= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex:getIncoming()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
898= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:Edge(Vertex, Vertex, Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
899= org.apache.commons.math3.util.BigRealFieldTest:testZero()	/src/test/java/org/apache/commons/math3/util/BigRealFieldTest.java
900= org.apache.commons.math3.util.BigRealFieldTest:testOne()	/src/test/java/org/apache/commons/math3/util/BigRealFieldTest.java
901= org.apache.commons.math3.util.BigRealFieldTest:testSerial()	/src/test/java/org/apache/commons/math3/util/BigRealFieldTest.java
902= org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:DormandPrince853StepInterpolator(DormandPrince853StepInterpolator)	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolator.java
903= org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:writeExternal(ObjectOutput)	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolator.java
904= org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:doCopy()	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolator.java
905= org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:storeTime(double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolator.java
906= org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:DormandPrince853StepInterpolator()	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolator.java
907= org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:computeInterpolatedStateAndDerivatives(double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolator.java
908= org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:reinitialize(AbstractIntegrator, double[], double[][], boolean, EquationsMapper, EquationsMapper[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolator.java
909= org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:readExternal(ObjectInput)	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolator.java
910= org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:doFinalize()	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolator.java
911= org.apache.commons.math3.optim.linear.LinearObjectiveFunction:readObject(ObjectInputStream)	/src/main/java/org/apache/commons/math3/optim/linear/LinearObjectiveFunction.java
912= org.apache.commons.math3.optim.linear.LinearObjectiveFunction:value(RealVector)	/src/main/java/org/apache/commons/math3/optim/linear/LinearObjectiveFunction.java
913= org.apache.commons.math3.optim.linear.LinearObjectiveFunction:LinearObjectiveFunction(double[], double)	/src/main/java/org/apache/commons/math3/optim/linear/LinearObjectiveFunction.java
914= org.apache.commons.math3.optim.linear.LinearObjectiveFunction:getCoefficients()	/src/main/java/org/apache/commons/math3/optim/linear/LinearObjectiveFunction.java
915= org.apache.commons.math3.optim.linear.LinearObjectiveFunction:hashCode()	/src/main/java/org/apache/commons/math3/optim/linear/LinearObjectiveFunction.java
916= org.apache.commons.math3.optim.linear.LinearObjectiveFunction:writeObject(ObjectOutputStream)	/src/main/java/org/apache/commons/math3/optim/linear/LinearObjectiveFunction.java
917= org.apache.commons.math3.optim.linear.LinearObjectiveFunction:getConstantTerm()	/src/main/java/org/apache/commons/math3/optim/linear/LinearObjectiveFunction.java
918= org.apache.commons.math3.optim.linear.LinearObjectiveFunction:LinearObjectiveFunction(RealVector, double)	/src/main/java/org/apache/commons/math3/optim/linear/LinearObjectiveFunction.java
919= org.apache.commons.math3.optim.linear.LinearObjectiveFunction:value(double[])	/src/main/java/org/apache/commons/math3/optim/linear/LinearObjectiveFunction.java
920= org.apache.commons.math3.optim.linear.LinearObjectiveFunction:equals(Object)	/src/main/java/org/apache/commons/math3/optim/linear/LinearObjectiveFunction.java
921= org.apache.commons.math3.optim.univariate.BracketFinder:getFLo()	/src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java
922= org.apache.commons.math3.optim.univariate.BracketFinder:getFHi()	/src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java
923= org.apache.commons.math3.optim.univariate.BracketFinder:getMid()	/src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java
924= org.apache.commons.math3.optim.univariate.BracketFinder:getLo()	/src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java
925= org.apache.commons.math3.optim.univariate.BracketFinder:getHi()	/src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java
926= org.apache.commons.math3.optim.univariate.BracketFinder:eval(UnivariateFunction, double)	/src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java
927= org.apache.commons.math3.optim.univariate.BracketFinder:getEvaluations()	/src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java
928= org.apache.commons.math3.optim.univariate.BracketFinder:BracketFinder(double, int)	/src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java
929= org.apache.commons.math3.optim.univariate.BracketFinder:search(UnivariateFunction, GoalType, double, double)	/src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java
930= org.apache.commons.math3.optim.univariate.BracketFinder:getFMid()	/src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java
931= org.apache.commons.math3.optim.univariate.BracketFinder:getMaxEvaluations()	/src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java
932= org.apache.commons.math3.optim.univariate.BracketFinder:BracketFinder()	/src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java
933= org.apache.commons.math3.util.ContinuedFraction:evaluate(double)	/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
934= org.apache.commons.math3.util.ContinuedFraction:ContinuedFraction()	/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
935= org.apache.commons.math3.util.ContinuedFraction:getA(int, double)	/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
936= org.apache.commons.math3.util.ContinuedFraction:evaluate(double, double)	/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
937= org.apache.commons.math3.util.ContinuedFraction:evaluate(double, int)	/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
938= org.apache.commons.math3.util.ContinuedFraction:evaluate(double, double, int)	/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
939= org.apache.commons.math3.util.ContinuedFraction:getB(int, double)	/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
940= org.apache.commons.math3.linear.NonSquareMatrixException:NonSquareMatrixException(int, int)	/src/main/java/org/apache/commons/math3/linear/NonSquareMatrixException.java
941= org.apache.commons.math3.exception.NumberIsTooSmallException:getBoundIsAllowed()	/src/main/java/org/apache/commons/math3/exception/NumberIsTooSmallException.java
942= org.apache.commons.math3.exception.NumberIsTooSmallException:NumberIsTooSmallException(Localizable, Number, Number, boolean)	/src/main/java/org/apache/commons/math3/exception/NumberIsTooSmallException.java
943= org.apache.commons.math3.exception.NumberIsTooSmallException:NumberIsTooSmallException(Number, Number, boolean)	/src/main/java/org/apache/commons/math3/exception/NumberIsTooSmallException.java
944= org.apache.commons.math3.exception.NumberIsTooSmallException:getMin()	/src/main/java/org/apache/commons/math3/exception/NumberIsTooSmallException.java
945= org.apache.commons.math3.optimization.MultivariateMultiStartOptimizer:MultivariateMultiStartOptimizer(MultivariateOptimizer, int, RandomVectorGenerator)	/src/main/java/org/apache/commons/math3/optimization/MultivariateMultiStartOptimizer.java
946= org.apache.commons.math3.ode.FirstOrderIntegrator:integrate(FirstOrderDifferentialEquations, double, double[], double, double[])	/src/main/java/org/apache/commons/math3/ode/FirstOrderIntegrator.java
947= org.apache.commons.math3.random.Well19937c:Well19937c()	/src/main/java/org/apache/commons/math3/random/Well19937c.java
948= org.apache.commons.math3.random.Well19937c:Well19937c(int[])	/src/main/java/org/apache/commons/math3/random/Well19937c.java
949= org.apache.commons.math3.random.Well19937c:Well19937c(int)	/src/main/java/org/apache/commons/math3/random/Well19937c.java
950= org.apache.commons.math3.random.Well19937c:Well19937c(long)	/src/main/java/org/apache/commons/math3/random/Well19937c.java
951= org.apache.commons.math3.random.Well19937c:next(int)	/src/main/java/org/apache/commons/math3/random/Well19937c.java
952= org.apache.commons.math3.stat.descriptive.summary.Sum:copy(Sum, Sum)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Sum.java
953= org.apache.commons.math3.stat.descriptive.summary.Sum:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Sum.java
954= org.apache.commons.math3.stat.descriptive.summary.Sum:evaluate(double[], double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Sum.java
955= org.apache.commons.math3.stat.descriptive.summary.Sum:Sum(Sum)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Sum.java
956= org.apache.commons.math3.stat.descriptive.summary.Sum:Sum()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Sum.java
957= org.apache.commons.math3.stat.descriptive.summary.Sum:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Sum.java
958= org.apache.commons.math3.stat.descriptive.summary.Sum:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Sum.java
959= org.apache.commons.math3.stat.descriptive.summary.Sum:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Sum.java
960= org.apache.commons.math3.stat.descriptive.summary.Sum:evaluate(double[], double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Sum.java
961= org.apache.commons.math3.stat.descriptive.summary.Sum:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Sum.java
962= org.apache.commons.math3.stat.descriptive.summary.Sum:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Sum.java
963= org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:getInterpolatedStateVariation()	/src/main/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator.java
964= org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:readExternal(ObjectInput)	/src/main/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator.java
965= org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:NordsieckStepInterpolator(NordsieckStepInterpolator)	/src/main/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator.java
966= org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:rescale(double)	/src/main/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator.java
967= org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:computeInterpolatedStateAndDerivatives(double, double)	/src/main/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator.java
968= org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:NordsieckStepInterpolator()	/src/main/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator.java
969= org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:reinitialize(double[], boolean, EquationsMapper, EquationsMapper[])	/src/main/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator.java
970= org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:doCopy()	/src/main/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator.java
971= org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:reinitialize(double, double, double[], Array2DRowRealMatrix)	/src/main/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator.java
972= org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:writeExternal(ObjectOutput)	/src/main/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator.java
973= org.apache.commons.math3.analysis.function.Cbrt:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Cbrt.java
974= org.apache.commons.math3.analysis.function.Cbrt:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Cbrt.java
975= org.apache.commons.math3.analysis.function.Cbrt:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Cbrt.java
976= org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint:hashCode()	/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java
977= org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint:equals(Object)	/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java
978= org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint:centroidOf(Collection<EuclideanIntegerPoint>)	/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java
979= org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint:EuclideanIntegerPoint(int[])	/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java
980= org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint:getPoint()	/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java
981= org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint:toString()	/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java
982= org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint:distanceFrom(EuclideanIntegerPoint)	/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java
983= org.apache.commons.math3.stat.interval.NormalApproximationInterval:createInterval(int, int, double)	/src/main/java/org/apache/commons/math3/stat/interval/NormalApproximationInterval.java
984= org.apache.commons.math3.optim.nonlinear.vector.Target:getTarget()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Target.java
985= org.apache.commons.math3.optim.nonlinear.vector.Target:Target(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Target.java
986= org.apache.commons.math3.ml.clustering.DBSCANClusterer:merge(List<T>, List<T>)	/src/main/java/org/apache/commons/math3/ml/clustering/DBSCANClusterer.java
987= org.apache.commons.math3.ml.clustering.DBSCANClusterer:DBSCANClusterer(double, int, DistanceMeasure)	/src/main/java/org/apache/commons/math3/ml/clustering/DBSCANClusterer.java
988= org.apache.commons.math3.ml.clustering.DBSCANClusterer:expandCluster(Cluster<T>, T, List<T>, Collection<T>, Map<Clusterable,PointStatus>)	/src/main/java/org/apache/commons/math3/ml/clustering/DBSCANClusterer.java
989= org.apache.commons.math3.ml.clustering.DBSCANClusterer:getMinPts()	/src/main/java/org/apache/commons/math3/ml/clustering/DBSCANClusterer.java
990= org.apache.commons.math3.ml.clustering.DBSCANClusterer:getNeighbors(T, Collection<T>)	/src/main/java/org/apache/commons/math3/ml/clustering/DBSCANClusterer.java
991= org.apache.commons.math3.ml.clustering.DBSCANClusterer:getEps()	/src/main/java/org/apache/commons/math3/ml/clustering/DBSCANClusterer.java
992= org.apache.commons.math3.ml.clustering.DBSCANClusterer:DBSCANClusterer(double, int)	/src/main/java/org/apache/commons/math3/ml/clustering/DBSCANClusterer.java
993= org.apache.commons.math3.ml.clustering.DBSCANClusterer:cluster(Collection<T>)	/src/main/java/org/apache/commons/math3/ml/clustering/DBSCANClusterer.java
994= org.apache.commons.math3.random.Well1024a:Well1024a(int)	/src/main/java/org/apache/commons/math3/random/Well1024a.java
995= org.apache.commons.math3.random.Well1024a:Well1024a(int[])	/src/main/java/org/apache/commons/math3/random/Well1024a.java
996= org.apache.commons.math3.random.Well1024a:Well1024a()	/src/main/java/org/apache/commons/math3/random/Well1024a.java
997= org.apache.commons.math3.random.Well1024a:Well1024a(long)	/src/main/java/org/apache/commons/math3/random/Well1024a.java
998= org.apache.commons.math3.random.Well1024a:next(int)	/src/main/java/org/apache/commons/math3/random/Well1024a.java
999= org.apache.commons.math3.analysis.solvers.BaseSecantSolver:BaseSecantSolver(double, double, double, Method)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolver.java
1000= org.apache.commons.math3.analysis.solvers.BaseSecantSolver:solve(int, UnivariateFunction, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolver.java
1001= org.apache.commons.math3.analysis.solvers.BaseSecantSolver:doSolve()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolver.java
1002= org.apache.commons.math3.analysis.solvers.BaseSecantSolver:BaseSecantSolver(double, Method)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolver.java
1003= org.apache.commons.math3.analysis.solvers.BaseSecantSolver:BaseSecantSolver(double, double, Method)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolver.java
1004= org.apache.commons.math3.analysis.solvers.BaseSecantSolver:solve(int, UnivariateFunction, double, double, AllowedSolution)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolver.java
1005= org.apache.commons.math3.analysis.solvers.BaseSecantSolver:solve(int, UnivariateFunction, double, double, double, AllowedSolution)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolver.java
1006= org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator:DormandPrince853Integrator(double, double, double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853Integrator.java
1007= org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator:DormandPrince853Integrator(double, double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853Integrator.java
1008= org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator:getOrder()	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853Integrator.java
1009= org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator:estimateError(double[][], double[], double[], double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853Integrator.java
1010= org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:increment(double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialCovariance.java
1011= org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:equals(Object)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialCovariance.java
1012= org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:VectorialCovariance(int, boolean)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialCovariance.java
1013= org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialCovariance.java
1014= org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:hashCode()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialCovariance.java
1015= org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialCovariance.java
1016= org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialCovariance.java
1017= org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:computeMSB(long)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
1018= org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:exponent(long)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
1019= org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:equals(Object)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
1020= org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:encode(int)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
1021= org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:compareTo(OrderedTuple)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
1022= org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:hashCode()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
1023= org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:sign(long)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
1024= org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:mantissa(long)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
1025= org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:getBit(int, int)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
1026= org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:OrderedTuple(double)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
1027= org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:computeLSB(long)	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
1028= org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:getComponents()	/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
1029= org.apache.commons.math3.ml.neuralnet.FeatureInitializer:value()	/src/main/java/org/apache/commons/math3/ml/neuralnet/FeatureInitializer.java
1030= org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver:solveInPlace(RealLinearOperator, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java
1031= org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver:PreconditionedIterativeLinearSolver(IterationManager)	/src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java
1032= org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver:solve(RealLinearOperator, RealLinearOperator, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java
1033= org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver:PreconditionedIterativeLinearSolver(int)	/src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java
1034= org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver:checkParameters(RealLinearOperator, RealLinearOperator, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java
1035= org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver:solve(RealLinearOperator, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java
1036= org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver:solve(RealLinearOperator, RealLinearOperator, RealVector)	/src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java
1037= org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver:solve(RealLinearOperator, RealVector)	/src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java
1038= org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver:solveInPlace(RealLinearOperator, RealLinearOperator, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java
1039= org.apache.commons.math3.linear.SparseFieldMatrix:setEntry(int, int, T)	/src/main/java/org/apache/commons/math3/linear/SparseFieldMatrix.java
1040= org.apache.commons.math3.linear.SparseFieldMatrix:copy()	/src/main/java/org/apache/commons/math3/linear/SparseFieldMatrix.java
1041= org.apache.commons.math3.linear.SparseFieldMatrix:multiplyEntry(int, int, T)	/src/main/java/org/apache/commons/math3/linear/SparseFieldMatrix.java
1042= org.apache.commons.math3.linear.SparseFieldMatrix:computeKey(int, int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldMatrix.java
1043= org.apache.commons.math3.linear.SparseFieldMatrix:SparseFieldMatrix(Field<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldMatrix.java
1044= org.apache.commons.math3.linear.SparseFieldMatrix:createMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldMatrix.java
1045= org.apache.commons.math3.linear.SparseFieldMatrix:SparseFieldMatrix(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldMatrix.java
1046= org.apache.commons.math3.linear.SparseFieldMatrix:SparseFieldMatrix(Field<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldMatrix.java
1047= org.apache.commons.math3.linear.SparseFieldMatrix:getRowDimension()	/src/main/java/org/apache/commons/math3/linear/SparseFieldMatrix.java
1048= org.apache.commons.math3.linear.SparseFieldMatrix:addToEntry(int, int, T)	/src/main/java/org/apache/commons/math3/linear/SparseFieldMatrix.java
1049= org.apache.commons.math3.linear.SparseFieldMatrix:SparseFieldMatrix(SparseFieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldMatrix.java
1050= org.apache.commons.math3.linear.SparseFieldMatrix:getColumnDimension()	/src/main/java/org/apache/commons/math3/linear/SparseFieldMatrix.java
1051= org.apache.commons.math3.linear.SparseFieldMatrix:getEntry(int, int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldMatrix.java
1052= org.apache.commons.math3.analysis.DifferentiableUnivariateVectorFunction:derivative()	/src/main/java/org/apache/commons/math3/analysis/DifferentiableUnivariateVectorFunction.java
1053= org.apache.commons.math3.exception.util.ArgUtils:ArgUtils()	/src/main/java/org/apache/commons/math3/exception/util/ArgUtils.java
1054= org.apache.commons.math3.exception.util.ArgUtils:flatten(Object[])	/src/main/java/org/apache/commons/math3/exception/util/ArgUtils.java
1055= org.apache.commons.math3.FieldElement:subtract(T)	/src/main/java/org/apache/commons/math3/FieldElement.java
1056= org.apache.commons.math3.FieldElement:multiply(T)	/src/main/java/org/apache/commons/math3/FieldElement.java
1057= org.apache.commons.math3.FieldElement:negate()	/src/main/java/org/apache/commons/math3/FieldElement.java
1058= org.apache.commons.math3.FieldElement:multiply(int)	/src/main/java/org/apache/commons/math3/FieldElement.java
1059= org.apache.commons.math3.FieldElement:reciprocal()	/src/main/java/org/apache/commons/math3/FieldElement.java
1060= org.apache.commons.math3.FieldElement:add(T)	/src/main/java/org/apache/commons/math3/FieldElement.java
1061= org.apache.commons.math3.FieldElement:divide(T)	/src/main/java/org/apache/commons/math3/FieldElement.java
1062= org.apache.commons.math3.FieldElement:getField()	/src/main/java/org/apache/commons/math3/FieldElement.java
1063= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest:testMinimize1()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1064= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1065= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.FourExtrema:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1066= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.Rosenbrock:getCount()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1067= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest:testMaxIterations()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1068= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest:Powell()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1069= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest:testMinimize2()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1070= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.Rosenbrock:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1071= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.Rosenbrock:Rosenbrock()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1072= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.Powell:getCount()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1073= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest:testPowell()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1074= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.Powell:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1075= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest:testRosenbrock()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1076= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest:testMaximize1()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1077= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest:testLeastSquares3()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1078= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest:testLeastSquares2()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1079= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest:testLeastSquares1()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1080= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.Powell:Powell()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1081= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest:testMaximize2()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1082= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest:Rosenbrock()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1083= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest:getCount()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1084= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest:testBoundsUnsupported()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java
1085= org.apache.commons.math3.distribution.CauchyDistribution:CauchyDistribution(double, double, double)	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1086= org.apache.commons.math3.distribution.CauchyDistribution:getSolverAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1087= org.apache.commons.math3.distribution.CauchyDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1088= org.apache.commons.math3.distribution.CauchyDistribution:CauchyDistribution()	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1089= org.apache.commons.math3.distribution.CauchyDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1090= org.apache.commons.math3.distribution.CauchyDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1091= org.apache.commons.math3.distribution.CauchyDistribution:CauchyDistribution(double, double)	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1092= org.apache.commons.math3.distribution.CauchyDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1093= org.apache.commons.math3.distribution.CauchyDistribution:CauchyDistribution(RandomGenerator, double, double)	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1094= org.apache.commons.math3.distribution.CauchyDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1095= org.apache.commons.math3.distribution.CauchyDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1096= org.apache.commons.math3.distribution.CauchyDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1097= org.apache.commons.math3.distribution.CauchyDistribution:inverseCumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1098= org.apache.commons.math3.distribution.CauchyDistribution:getMedian()	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1099= org.apache.commons.math3.distribution.CauchyDistribution:CauchyDistribution(RandomGenerator, double, double, double)	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1100= org.apache.commons.math3.distribution.CauchyDistribution:getScale()	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1101= org.apache.commons.math3.distribution.CauchyDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1102= org.apache.commons.math3.distribution.CauchyDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java
1103= org.apache.commons.math3.geometry.Space:getSubSpace()	/src/main/java/org/apache/commons/math3/geometry/Space.java
1104= org.apache.commons.math3.geometry.Space:getDimension()	/src/main/java/org/apache/commons/math3/geometry/Space.java
1105= org.apache.commons.math3.genetics.InvalidRepresentationException:InvalidRepresentationException(Localizable, Object)	/src/main/java/org/apache/commons/math3/genetics/InvalidRepresentationException.java
1106= org.apache.commons.math3.util.MathArraysTest:testNormalizeArray()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1107= org.apache.commons.math3.util.MathArraysTest:testCheckPositive()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1108= org.apache.commons.math3.util.MathArraysTest:testSortInPlace()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1109= org.apache.commons.math3.util.MathArraysTest:testEbeAddPrecondition()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1110= org.apache.commons.math3.util.MathArraysTest:testArrayEqualsIncludingNaN()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1111= org.apache.commons.math3.util.MathArraysTest:testConvolve()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1112= org.apache.commons.math3.util.MathArraysTest:testEbeAdd()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1113= org.apache.commons.math3.util.MathArraysTest:testShuffleTail()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1114= org.apache.commons.math3.util.MathArraysTest:testEbeMultiplyPrecondition()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1115= org.apache.commons.math3.util.MathArraysTest:testL2DistanceInt()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1116= org.apache.commons.math3.util.MathArraysTest:testCheckOrder()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1117= org.apache.commons.math3.util.MathArraysTest:testEbeMultiply()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1118= org.apache.commons.math3.util.MathArraysTest:testLInfDistanceDouble()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1119= org.apache.commons.math3.util.MathArraysTest:testSortInPlaceDecresasingOrder()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1120= org.apache.commons.math3.util.MathArraysTest:testVerifyValuesNegative()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1121= org.apache.commons.math3.util.MathArraysTest:testL1DistanceInt()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1122= org.apache.commons.math3.util.MathArraysTest:testCheckRectangular()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1123= org.apache.commons.math3.util.MathArraysTest:testCheckNonNegative2D()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1124= org.apache.commons.math3.util.MathArraysTest:testSortInPlaceExample()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1125= org.apache.commons.math3.util.MathArraysTest:testEbeDivide()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1126= org.apache.commons.math3.util.MathArraysTest:testLinearCombinationWithSingleElementArray()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1127= org.apache.commons.math3.util.MathArraysTest:testSortInPlaceFailures()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1128= org.apache.commons.math3.util.MathArraysTest:testEbeSubtractPrecondition()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1129= org.apache.commons.math3.util.MathArraysTest:testCopyOfDouble2()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1130= org.apache.commons.math3.util.MathArraysTest:testShuffleHead()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1131= org.apache.commons.math3.util.MathArraysTest:testCopyOfInt()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1132= org.apache.commons.math3.util.MathArraysTest:testCopyOfDouble3()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1133= org.apache.commons.math3.util.MathArraysTest:testVerifyValuesPositive()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1134= org.apache.commons.math3.util.MathArraysTest:testLInfDistanceInt()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1135= org.apache.commons.math3.util.MathArraysTest:testL1DistanceDouble()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1136= org.apache.commons.math3.util.MathArraysTest:testIsMonotonic()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1137= org.apache.commons.math3.util.MathArraysTest:testCopyOfInt3()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1138= org.apache.commons.math3.util.MathArraysTest:testCopyOfInt2()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1139= org.apache.commons.math3.util.MathArraysTest:testCopyOfDouble()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1140= org.apache.commons.math3.util.MathArraysTest:testScaleInPlace()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1141= org.apache.commons.math3.util.MathArraysTest:testCheckNonNegative()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1142= org.apache.commons.math3.util.MathArraysTest:testLinearCombinationInfinite()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1143= org.apache.commons.math3.util.MathArraysTest:testEbeSubtract()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1144= org.apache.commons.math3.util.MathArraysTest:testLinearCombination2()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1145= org.apache.commons.math3.util.MathArraysTest:testLinearCombination1()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1146= org.apache.commons.math3.util.MathArraysTest:testScale()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1147= org.apache.commons.math3.util.MathArraysTest:testIsMonotonicComparable()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1148= org.apache.commons.math3.util.MathArraysTest:testNatural()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1149= org.apache.commons.math3.util.MathArraysTest:testNaturalZero()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1150= org.apache.commons.math3.util.MathArraysTest:testEbeDividePrecondition()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1151= org.apache.commons.math3.util.MathArraysTest:testL2DistanceDouble()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1152= org.apache.commons.math3.util.MathArraysTest:testArrayEquals()	/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
1153= org.apache.commons.math3.userguide.genetics.PolygonChromosome:toString()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/PolygonChromosome.java
1154= org.apache.commons.math3.userguide.genetics.PolygonChromosome:checkValidity(List<Polygon>)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/PolygonChromosome.java
1155= org.apache.commons.math3.userguide.genetics.PolygonChromosome:setRefImage(BufferedImage)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/PolygonChromosome.java
1156= org.apache.commons.math3.userguide.genetics.PolygonChromosome:newFixedLengthChromosome(List<Polygon>)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/PolygonChromosome.java
1157= org.apache.commons.math3.userguide.genetics.PolygonChromosome:draw(Graphics2D, int, int)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/PolygonChromosome.java
1158= org.apache.commons.math3.userguide.genetics.PolygonChromosome:getPolygonRepresentation()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/PolygonChromosome.java
1159= org.apache.commons.math3.userguide.genetics.PolygonChromosome:PolygonChromosome(List<Polygon>)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/PolygonChromosome.java
1160= org.apache.commons.math3.userguide.genetics.PolygonChromosome:randomChromosome(int, int)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/PolygonChromosome.java
1161= org.apache.commons.math3.userguide.genetics.PolygonChromosome:setTestImage(BufferedImage)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/PolygonChromosome.java
1162= org.apache.commons.math3.userguide.genetics.PolygonChromosome:fitness()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/PolygonChromosome.java
1163= org.apache.commons.math3.stat.interval.IntervalUtilsTest:testWilsonScore()	/src/test/java/org/apache/commons/math3/stat/interval/IntervalUtilsTest.java
1164= org.apache.commons.math3.stat.interval.IntervalUtilsTest:checkConfidenceIntervals(ConfidenceInterval, ConfidenceInterval)	/src/test/java/org/apache/commons/math3/stat/interval/IntervalUtilsTest.java
1165= org.apache.commons.math3.stat.interval.IntervalUtilsTest:testAgrestiCoull()	/src/test/java/org/apache/commons/math3/stat/interval/IntervalUtilsTest.java
1166= org.apache.commons.math3.stat.interval.IntervalUtilsTest:testClopperPearson()	/src/test/java/org/apache/commons/math3/stat/interval/IntervalUtilsTest.java
1167= org.apache.commons.math3.stat.interval.IntervalUtilsTest:testNormalApproximation()	/src/test/java/org/apache/commons/math3/stat/interval/IntervalUtilsTest.java
1168= org.apache.commons.math3.stat.correlation.Covariance:computeCovarianceMatrix(RealMatrix)	/src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java
1169= org.apache.commons.math3.stat.correlation.Covariance:computeCovarianceMatrix(double[][])	/src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java
1170= org.apache.commons.math3.stat.correlation.Covariance:Covariance(RealMatrix, boolean)	/src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java
1171= org.apache.commons.math3.stat.correlation.Covariance:covariance(double[], double[], boolean)	/src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java
1172= org.apache.commons.math3.stat.correlation.Covariance:Covariance(RealMatrix)	/src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java
1173= org.apache.commons.math3.stat.correlation.Covariance:getN()	/src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java
1174= org.apache.commons.math3.stat.correlation.Covariance:getCovarianceMatrix()	/src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java
1175= org.apache.commons.math3.stat.correlation.Covariance:Covariance(double[][], boolean)	/src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java
1176= org.apache.commons.math3.stat.correlation.Covariance:covariance(double[], double[])	/src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java
1177= org.apache.commons.math3.stat.correlation.Covariance:Covariance(double[][])	/src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java
1178= org.apache.commons.math3.stat.correlation.Covariance:computeCovarianceMatrix(double[][], boolean)	/src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java
1179= org.apache.commons.math3.stat.correlation.Covariance:checkSufficientData(RealMatrix)	/src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java
1180= org.apache.commons.math3.stat.correlation.Covariance:computeCovarianceMatrix(RealMatrix, boolean)	/src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java
1181= org.apache.commons.math3.stat.correlation.Covariance:Covariance()	/src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java
1182= org.apache.commons.math3.analysis.differentiation.SparseGradient:atan2(SparseGradient, SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1183= org.apache.commons.math3.analysis.differentiation.SparseGradient:toDegrees()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1184= org.apache.commons.math3.analysis.differentiation.SparseGradient:sqrt()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1185= org.apache.commons.math3.analysis.differentiation.SparseGradient:copySign(SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1186= org.apache.commons.math3.analysis.differentiation.SparseGradient:rint()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1187= org.apache.commons.math3.analysis.differentiation.SparseGradient:pow(double, SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1188= org.apache.commons.math3.analysis.differentiation.SparseGradient:add(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1189= org.apache.commons.math3.analysis.differentiation.SparseGradient:multiply(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1190= org.apache.commons.math3.analysis.differentiation.SparseGradient:hypot(SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1191= org.apache.commons.math3.analysis.differentiation.SparseGradient:pow(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1192= org.apache.commons.math3.analysis.differentiation.SparseGradient:getReal()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1193= org.apache.commons.math3.analysis.differentiation.SparseGradient:multiply(SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1194= org.apache.commons.math3.analysis.differentiation.SparseGradient:remainder(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1195= org.apache.commons.math3.analysis.differentiation.SparseGradient:pow(int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1196= org.apache.commons.math3.analysis.differentiation.SparseGradient:linearCombination(double, SparseGradient, double, SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1197= org.apache.commons.math3.analysis.differentiation.SparseGradient:numVars()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1198= org.apache.commons.math3.analysis.differentiation.SparseGradient:abs()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1199= org.apache.commons.math3.analysis.differentiation.SparseGradient:linearCombination(SparseGradient, SparseGradient, SparseGradient, SparseGradient, SparseGradient, SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1200= org.apache.commons.math3.analysis.differentiation.SparseGradient:expm1()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1201= org.apache.commons.math3.analysis.differentiation.SparseGradient:linearCombination(double, SparseGradient, double, SparseGradient, double, SparseGradient, double, SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1202= org.apache.commons.math3.analysis.differentiation.SparseGradient:SparseGradient(double, double, Map<Integer,Double>)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1203= org.apache.commons.math3.analysis.differentiation.SparseGradient:linearCombination(double[], SparseGradient[])	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1204= org.apache.commons.math3.analysis.differentiation.SparseGradient:cos()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1205= org.apache.commons.math3.analysis.differentiation.SparseGradient:compose(double, double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1206= org.apache.commons.math3.analysis.differentiation.SparseGradient:sinh()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1207= org.apache.commons.math3.analysis.differentiation.SparseGradient:log()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1208= org.apache.commons.math3.analysis.differentiation.SparseGradient:atan2(SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1209= org.apache.commons.math3.analysis.differentiation.SparseGradient:atanh()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1210= org.apache.commons.math3.analysis.differentiation.SparseGradient:createVariable(int, double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1211= org.apache.commons.math3.analysis.differentiation.SparseGradient:getZero()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1212= org.apache.commons.math3.analysis.differentiation.SparseGradient:asin()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1213= org.apache.commons.math3.analysis.differentiation.SparseGradient:cosh()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1214= org.apache.commons.math3.analysis.differentiation.SparseGradient:sin()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1215= org.apache.commons.math3.analysis.differentiation.SparseGradient:getValue()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1216= org.apache.commons.math3.analysis.differentiation.SparseGradient:linearCombination(double, SparseGradient, double, SparseGradient, double, SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1217= org.apache.commons.math3.analysis.differentiation.SparseGradient:hypot(SparseGradient, SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1218= org.apache.commons.math3.analysis.differentiation.SparseGradient:addInPlace(SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1219= org.apache.commons.math3.analysis.differentiation.SparseGradient:cbrt()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1220= org.apache.commons.math3.analysis.differentiation.SparseGradient:getDerivative(int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1221= org.apache.commons.math3.analysis.differentiation.SparseGradient:toRadians()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1222= org.apache.commons.math3.analysis.differentiation.SparseGradient:log10()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1223= org.apache.commons.math3.analysis.differentiation.SparseGradient:atan()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1224= org.apache.commons.math3.analysis.differentiation.SparseGradient:getOne()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1225= org.apache.commons.math3.analysis.differentiation.SparseGradient:acos()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1226= org.apache.commons.math3.analysis.differentiation.SparseGradient:multiplyInPlace(SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1227= org.apache.commons.math3.analysis.differentiation.SparseGradient:scalb(int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1228= org.apache.commons.math3.analysis.differentiation.SparseGradient:divide(SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1229= org.apache.commons.math3.analysis.differentiation.SparseGradient:getRuntimeClass()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1230= org.apache.commons.math3.analysis.differentiation.SparseGradient:taylor(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1231= org.apache.commons.math3.analysis.differentiation.SparseGradient:linearCombination(SparseGradient[], SparseGradient[])	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1232= org.apache.commons.math3.analysis.differentiation.SparseGradient:subtract(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1233= org.apache.commons.math3.analysis.differentiation.SparseGradient:divide(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1234= org.apache.commons.math3.analysis.differentiation.SparseGradient:getField()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1235= org.apache.commons.math3.analysis.differentiation.SparseGradient:floor()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1236= org.apache.commons.math3.analysis.differentiation.SparseGradient:remainder(SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1237= org.apache.commons.math3.analysis.differentiation.SparseGradient:acosh()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1238= org.apache.commons.math3.analysis.differentiation.SparseGradient:tanh()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1239= org.apache.commons.math3.analysis.differentiation.SparseGradient:rootN(int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1240= org.apache.commons.math3.analysis.differentiation.SparseGradient:tan()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1241= org.apache.commons.math3.analysis.differentiation.SparseGradient:equals(Object)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1242= org.apache.commons.math3.analysis.differentiation.SparseGradient:signum()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1243= org.apache.commons.math3.analysis.differentiation.SparseGradient:hashCode()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1244= org.apache.commons.math3.analysis.differentiation.SparseGradient:subtract(SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1245= org.apache.commons.math3.analysis.differentiation.SparseGradient:pow(SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1246= org.apache.commons.math3.analysis.differentiation.SparseGradient:SparseGradient(double, Map<Integer,Double>)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1247= org.apache.commons.math3.analysis.differentiation.SparseGradient:reciprocal()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1248= org.apache.commons.math3.analysis.differentiation.SparseGradient:copySign(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1249= org.apache.commons.math3.analysis.differentiation.SparseGradient:linearCombination(SparseGradient, SparseGradient, SparseGradient, SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1250= org.apache.commons.math3.analysis.differentiation.SparseGradient:createConstant(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1251= org.apache.commons.math3.analysis.differentiation.SparseGradient:negate()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1252= org.apache.commons.math3.analysis.differentiation.SparseGradient:exp()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1253= org.apache.commons.math3.analysis.differentiation.SparseGradient:multiply(int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1254= org.apache.commons.math3.analysis.differentiation.SparseGradient:round()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1255= org.apache.commons.math3.analysis.differentiation.SparseGradient:asinh()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1256= org.apache.commons.math3.analysis.differentiation.SparseGradient:linearCombination(SparseGradient, SparseGradient, SparseGradient, SparseGradient, SparseGradient, SparseGradient, SparseGradient, SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1257= org.apache.commons.math3.analysis.differentiation.SparseGradient:ceil()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1258= org.apache.commons.math3.analysis.differentiation.SparseGradient:add(SparseGradient)	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1259= org.apache.commons.math3.analysis.differentiation.SparseGradient:log1p()	/src/main/java/org/apache/commons/math3/analysis/differentiation/SparseGradient.java
1260= org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:LinearObjectiveFunction(RealVector, double)	/src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java
1261= org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:hashCode()	/src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java
1262= org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:LinearObjectiveFunction(double[], double)	/src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java
1263= org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:writeObject(ObjectOutputStream)	/src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java
1264= org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:getConstantTerm()	/src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java
1265= org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:readObject(ObjectInputStream)	/src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java
1266= org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:getValue(double[])	/src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java
1267= org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:equals(Object)	/src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java
1268= org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:getValue(RealVector)	/src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java
1269= org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:getCoefficients()	/src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java
1270= org.apache.commons.math3.random.HaltonSequenceGenerator:nextVector()	/src/main/java/org/apache/commons/math3/random/HaltonSequenceGenerator.java
1271= org.apache.commons.math3.random.HaltonSequenceGenerator:skipTo(int)	/src/main/java/org/apache/commons/math3/random/HaltonSequenceGenerator.java
1272= org.apache.commons.math3.random.HaltonSequenceGenerator:scramble(int, int, int, int)	/src/main/java/org/apache/commons/math3/random/HaltonSequenceGenerator.java
1273= org.apache.commons.math3.random.HaltonSequenceGenerator:getNextIndex()	/src/main/java/org/apache/commons/math3/random/HaltonSequenceGenerator.java
1274= org.apache.commons.math3.random.HaltonSequenceGenerator:HaltonSequenceGenerator(int)	/src/main/java/org/apache/commons/math3/random/HaltonSequenceGenerator.java
1275= org.apache.commons.math3.random.HaltonSequenceGenerator:HaltonSequenceGenerator(int, int[], int[])	/src/main/java/org/apache/commons/math3/random/HaltonSequenceGenerator.java
1276= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:IntervalsSet(double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1277= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:computeGeometricalProperties()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1278= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:nextInternalNode(BSPTree<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1279= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:SubIntervalsIterator()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1280= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:next()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1281= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:isAfterParent(BSPTree<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1282= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:iterator()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1283= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:childBefore(BSPTree<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1284= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:childAfter(BSPTree<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1285= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:buildNew(BSPTree<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1286= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:IntervalsSet(double, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1287= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.SubIntervalsIterator:next()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1288= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:buildTree(double, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1289= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:getAngle(BSPTree<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1290= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:leafAfter(BSPTree<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1291= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:asList()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1292= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:IntervalsSet(BSPTree<Euclidean1D>, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1293= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:IntervalsSet(Collection<SubHyperplane<Euclidean1D>>, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1294= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:isIntervalStart(BSPTree<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1295= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:getFirstIntervalBoundary()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1296= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:hasNext()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1297= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:IntervalsSet(double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1298= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:selectPending()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1299= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:IntervalsSet()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1300= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.SubIntervalsIterator:remove()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1301= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:IntervalsSet(BSPTree<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1302= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:previousInternalNode(BSPTree<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1303= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:isBeforeParent(BSPTree<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1304= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:isIntervalEnd(BSPTree<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1305= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:projectToBoundary(Point<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1306= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.SubIntervalsIterator:selectPending()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1307= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.SubIntervalsIterator:SubIntervalsIterator()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1308= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:getInf()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1309= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:getSup()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1310= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:remove()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1311= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:finiteOrNullPoint(double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1312= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:IntervalsSet(Collection<SubHyperplane<Euclidean1D>>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1313= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:isDirect(BSPTree<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1314= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.SubIntervalsIterator:hasNext()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1315= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:getFirstLeaf(BSPTree<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1316= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:leafBefore(BSPTree<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java
1317= org.apache.commons.math3.optim.linear.NoFeasibleSolutionException:NoFeasibleSolutionException()	/src/main/java/org/apache/commons/math3/optim/linear/NoFeasibleSolutionException.java
1318= org.apache.commons.math3.random.Well19937a:Well19937a(int)	/src/main/java/org/apache/commons/math3/random/Well19937a.java
1319= org.apache.commons.math3.random.Well19937a:next(int)	/src/main/java/org/apache/commons/math3/random/Well19937a.java
1320= org.apache.commons.math3.random.Well19937a:Well19937a()	/src/main/java/org/apache/commons/math3/random/Well19937a.java
1321= org.apache.commons.math3.random.Well19937a:Well19937a(long)	/src/main/java/org/apache/commons/math3/random/Well19937a.java
1322= org.apache.commons.math3.random.Well19937a:Well19937a(int[])	/src/main/java/org/apache/commons/math3/random/Well19937a.java
1323= org.apache.commons.math3.fitting.HarmonicCurveFitter:HarmonicCurveFitter(double[], int)	/src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java
1324= org.apache.commons.math3.fitting.HarmonicCurveFitter:withMaxIterations(int)	/src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java
1325= org.apache.commons.math3.fitting.HarmonicCurveFitter.ParameterGuesser:guessPhi(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java
1326= org.apache.commons.math3.fitting.HarmonicCurveFitter:withStartPoint(double[])	/src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java
1327= org.apache.commons.math3.fitting.HarmonicCurveFitter.ParameterGuesser:ParameterGuesser(Collection<WeightedObservedPoint>)	/src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java
1328= org.apache.commons.math3.fitting.HarmonicCurveFitter.ParameterGuesser:guessAOmega(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java
1329= org.apache.commons.math3.fitting.HarmonicCurveFitter:guessAOmega(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java
1330= org.apache.commons.math3.fitting.HarmonicCurveFitter:guessPhi(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java
1331= org.apache.commons.math3.fitting.HarmonicCurveFitter:sortObservations(Collection<WeightedObservedPoint>)	/src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java
1332= org.apache.commons.math3.fitting.HarmonicCurveFitter.ParameterGuesser:sortObservations(Collection<WeightedObservedPoint>)	/src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java
1333= org.apache.commons.math3.fitting.HarmonicCurveFitter:create()	/src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java
1334= org.apache.commons.math3.fitting.HarmonicCurveFitter:ParameterGuesser(Collection<WeightedObservedPoint>)	/src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java
1335= org.apache.commons.math3.fitting.HarmonicCurveFitter.ParameterGuesser:guess()	/src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java
1336= org.apache.commons.math3.fitting.HarmonicCurveFitter:getProblem(Collection<WeightedObservedPoint>)	/src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java
1337= org.apache.commons.math3.fitting.HarmonicCurveFitter:guess()	/src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java
1338= org.apache.commons.math3.analysis.function.Tan:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Tan.java
1339= org.apache.commons.math3.analysis.function.Tan:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Tan.java
1340= org.apache.commons.math3.analysis.function.Tan:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Tan.java
1341= org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator:getPoint(int)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegrator.java
1342= org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator:integrate(UnivariateFunction)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegrator.java
1343= org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator:GaussIntegrator(Pair<double[],double[]>)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegrator.java
1344= org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator:GaussIntegrator(double[], double[])	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegrator.java
1345= org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator:getNumberOfPoints()	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegrator.java
1346= org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator:getWeight(int)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegrator.java
1347= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleVectorial:getRadius(Vector2D)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleVectorial.java
1348= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleVectorial:getModelFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleVectorial.java
1349= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleVectorial:CircleVectorial()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleVectorial.java
1350= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleVectorial:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleVectorial.java
1351= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleVectorial:getN()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleVectorial.java
1352= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleVectorial:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleVectorial.java
1353= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleVectorial:addPoint(double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleVectorial.java
1354= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:LevenbergMarquardtOptimizer(double, double, double, double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
1355= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:determineLMParameter(double[], double, double[], double[], double[], double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
1356= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:LevenbergMarquardtOptimizer(double, ConvergenceChecker<PointVectorValuePair>, double, double, double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
1357= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:LevenbergMarquardtOptimizer(double, double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
1358= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:LevenbergMarquardtOptimizer(ConvergenceChecker<PointVectorValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
1359= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:determineLMDirection(double[], double[], double[], double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
1360= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:qTy(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
1361= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:LevenbergMarquardtOptimizer()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
1362= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:checkParameters()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
1363= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
1364= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:qrDecomposition(RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
1365= org.apache.commons.math3.util.DefaultTransformer:equals(Object)	/src/main/java/org/apache/commons/math3/util/DefaultTransformer.java
1366= org.apache.commons.math3.util.DefaultTransformer:transform(Object)	/src/main/java/org/apache/commons/math3/util/DefaultTransformer.java
1367= org.apache.commons.math3.util.DefaultTransformer:hashCode()	/src/main/java/org/apache/commons/math3/util/DefaultTransformer.java
1368= org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter:LeastSquaresConverter(MultivariateVectorFunction, double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/LeastSquaresConverter.java
1369= org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter:LeastSquaresConverter(MultivariateVectorFunction, double[], double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/LeastSquaresConverter.java
1370= org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter:value(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/LeastSquaresConverter.java
1371= org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter:LeastSquaresConverter(MultivariateVectorFunction, double[], RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/LeastSquaresConverter.java
1372= org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator:UnivariatePeriodicInterpolator(UnivariateInterpolator, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java
1373= org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator:UnivariatePeriodicInterpolator(UnivariateInterpolator, double, int)	/src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java
1374= org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator:interpolate(double[], double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java
1375= org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator:value(double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java
1376= org.apache.commons.math3.geometry.partitioning.Embedding:toSpace(Point<T>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Embedding.java
1377= org.apache.commons.math3.geometry.partitioning.Embedding:toSubSpace(Point<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Embedding.java
1378= org.apache.commons.math3.transform.TransformUtils:TransformUtils()	/src/main/java/org/apache/commons/math3/transform/TransformUtils.java
1379= org.apache.commons.math3.transform.TransformUtils:createComplexArray(double[][])	/src/main/java/org/apache/commons/math3/transform/TransformUtils.java
1380= org.apache.commons.math3.transform.TransformUtils:exactLog2(int)	/src/main/java/org/apache/commons/math3/transform/TransformUtils.java
1381= org.apache.commons.math3.transform.TransformUtils:scaleArray(Complex[], double)	/src/main/java/org/apache/commons/math3/transform/TransformUtils.java
1382= org.apache.commons.math3.transform.TransformUtils:createRealImaginaryArray(Complex[])	/src/main/java/org/apache/commons/math3/transform/TransformUtils.java
1383= org.apache.commons.math3.transform.TransformUtils:scaleArray(double[], double)	/src/main/java/org/apache/commons/math3/transform/TransformUtils.java
1384= org.apache.commons.math3.ode.JacobianMatrices:getDimension()	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1385= org.apache.commons.math3.ode.JacobianMatrices.MainStateJacobianWrapper:computeDerivatives(double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1386= org.apache.commons.math3.ode.JacobianMatrices:computeDerivatives(double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1387= org.apache.commons.math3.ode.JacobianMatrices.MainStateJacobianWrapper:computeMainStateJacobian(double, double[], double[], double[][])	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1388= org.apache.commons.math3.ode.JacobianMatrices.MismatchedEquations:MismatchedEquations()	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1389= org.apache.commons.math3.ode.JacobianMatrices:setParameterizedODE(ParameterizedODE)	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1390= org.apache.commons.math3.ode.JacobianMatrices:getCurrentMainSetJacobian(double[][])	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1391= org.apache.commons.math3.ode.JacobianMatrices.JacobiansSecondaryEquations:getDimension()	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1392= org.apache.commons.math3.ode.JacobianMatrices:MismatchedEquations()	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1393= org.apache.commons.math3.ode.JacobianMatrices.MainStateJacobianWrapper:getDimension()	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1394= org.apache.commons.math3.ode.JacobianMatrices:checkDimension(int, Object)	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1395= org.apache.commons.math3.ode.JacobianMatrices:JacobianMatrices(FirstOrderDifferentialEquations, double[], String)	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1396= org.apache.commons.math3.ode.JacobianMatrices:computeMainStateJacobian(double, double[], double[], double[][])	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1397= org.apache.commons.math3.ode.JacobianMatrices.MainStateJacobianWrapper:MainStateJacobianWrapper(FirstOrderDifferentialEquations, double[])	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1398= org.apache.commons.math3.ode.JacobianMatrices:setParameterStep(String, double)	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1399= org.apache.commons.math3.ode.JacobianMatrices:setInitialParameterJacobian(String, double[])	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1400= org.apache.commons.math3.ode.JacobianMatrices:addParameterJacobianProvider(ParameterJacobianProvider)	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1401= org.apache.commons.math3.ode.JacobianMatrices:JacobianMatrices(MainStateJacobianProvider, String)	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1402= org.apache.commons.math3.ode.JacobianMatrices:registerVariationalEquations(ExpandableStatefulODE)	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1403= org.apache.commons.math3.ode.JacobianMatrices:setInitialMainStateJacobian(double[][])	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1404= org.apache.commons.math3.ode.JacobianMatrices:computeDerivatives(double, double[], double[], double[], double[])	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1405= org.apache.commons.math3.ode.JacobianMatrices:getCurrentParameterJacobian(String, double[])	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1406= org.apache.commons.math3.ode.JacobianMatrices:MainStateJacobianWrapper(FirstOrderDifferentialEquations, double[])	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1407= org.apache.commons.math3.ode.JacobianMatrices.JacobiansSecondaryEquations:computeDerivatives(double, double[], double[], double[], double[])	/src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java
1408= org.apache.commons.math3.optim.univariate.BrentOptimizer:best(UnivariatePointValuePair, UnivariatePointValuePair, boolean)	/src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java
1409= org.apache.commons.math3.optim.univariate.BrentOptimizer:BrentOptimizer(double, double, ConvergenceChecker<UnivariatePointValuePair>)	/src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java
1410= org.apache.commons.math3.optim.univariate.BrentOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java
1411= org.apache.commons.math3.optim.univariate.BrentOptimizer:BrentOptimizer(double, double)	/src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java
1412= org.apache.commons.math3.stat.interval.IntervalUtils:IntervalUtils()	/src/main/java/org/apache/commons/math3/stat/interval/IntervalUtils.java
1413= org.apache.commons.math3.stat.interval.IntervalUtils:getWilsonScoreInterval(int, int, double)	/src/main/java/org/apache/commons/math3/stat/interval/IntervalUtils.java
1414= org.apache.commons.math3.stat.interval.IntervalUtils:getClopperPearsonInterval(int, int, double)	/src/main/java/org/apache/commons/math3/stat/interval/IntervalUtils.java
1415= org.apache.commons.math3.stat.interval.IntervalUtils:getAgrestiCoullInterval(int, int, double)	/src/main/java/org/apache/commons/math3/stat/interval/IntervalUtils.java
1416= org.apache.commons.math3.stat.interval.IntervalUtils:getNormalApproximationInterval(int, int, double)	/src/main/java/org/apache/commons/math3/stat/interval/IntervalUtils.java
1417= org.apache.commons.math3.stat.interval.IntervalUtils:checkParameters(int, int, double)	/src/main/java/org/apache/commons/math3/stat/interval/IntervalUtils.java
1418= org.apache.commons.math3.exception.MultiDimensionMismatchException:getWrongDimensions()	/src/main/java/org/apache/commons/math3/exception/MultiDimensionMismatchException.java
1419= org.apache.commons.math3.exception.MultiDimensionMismatchException:getWrongDimension(int)	/src/main/java/org/apache/commons/math3/exception/MultiDimensionMismatchException.java
1420= org.apache.commons.math3.exception.MultiDimensionMismatchException:getExpectedDimension(int)	/src/main/java/org/apache/commons/math3/exception/MultiDimensionMismatchException.java
1421= org.apache.commons.math3.exception.MultiDimensionMismatchException:MultiDimensionMismatchException(Integer[], Integer[])	/src/main/java/org/apache/commons/math3/exception/MultiDimensionMismatchException.java
1422= org.apache.commons.math3.exception.MultiDimensionMismatchException:getExpectedDimensions()	/src/main/java/org/apache/commons/math3/exception/MultiDimensionMismatchException.java
1423= org.apache.commons.math3.exception.MultiDimensionMismatchException:MultiDimensionMismatchException(Localizable, Integer[], Integer[])	/src/main/java/org/apache/commons/math3/exception/MultiDimensionMismatchException.java
1424= org.apache.commons.math3.stat.interval.BinomialConfidenceIntervalAbstractTest:setUp()	/src/test/java/org/apache/commons/math3/stat/interval/BinomialConfidenceIntervalAbstractTest.java
1425= org.apache.commons.math3.stat.interval.BinomialConfidenceIntervalAbstractTest:testZeroConfidencelevel()	/src/test/java/org/apache/commons/math3/stat/interval/BinomialConfidenceIntervalAbstractTest.java
1426= org.apache.commons.math3.stat.interval.BinomialConfidenceIntervalAbstractTest:createBinomialConfidenceInterval()	/src/test/java/org/apache/commons/math3/stat/interval/BinomialConfidenceIntervalAbstractTest.java
1427= org.apache.commons.math3.stat.interval.BinomialConfidenceIntervalAbstractTest:testZeroTrials()	/src/test/java/org/apache/commons/math3/stat/interval/BinomialConfidenceIntervalAbstractTest.java
1428= org.apache.commons.math3.stat.interval.BinomialConfidenceIntervalAbstractTest:testSuccessesExceedingTrials()	/src/test/java/org/apache/commons/math3/stat/interval/BinomialConfidenceIntervalAbstractTest.java
1429= org.apache.commons.math3.stat.interval.BinomialConfidenceIntervalAbstractTest:createStandardTestInterval()	/src/test/java/org/apache/commons/math3/stat/interval/BinomialConfidenceIntervalAbstractTest.java
1430= org.apache.commons.math3.stat.interval.BinomialConfidenceIntervalAbstractTest:testOneConfidencelevel()	/src/test/java/org/apache/commons/math3/stat/interval/BinomialConfidenceIntervalAbstractTest.java
1431= org.apache.commons.math3.stat.interval.BinomialConfidenceIntervalAbstractTest:testNegativeSuccesses()	/src/test/java/org/apache/commons/math3/stat/interval/BinomialConfidenceIntervalAbstractTest.java
1432= org.apache.commons.math3.util.NumberTransformer:transform(Object)	/src/main/java/org/apache/commons/math3/util/NumberTransformer.java
1433= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest:testExponentialDecayTrivial()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactoryTest.java
1434= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest:testExponentialDecayPrecondition4()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactoryTest.java
1435= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest:testQuasiSigmoidDecayPrecondition3()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactoryTest.java
1436= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest:testQuasiSigmoidDecayPrecondition4()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactoryTest.java
1437= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest:testExponentialDecayPrecondition3()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactoryTest.java
1438= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest:testExponentialDecayPrecondition2()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactoryTest.java
1439= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest:testQuasiSigmoidDecayTrivial()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactoryTest.java
1440= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest:testExponentialDecayPrecondition1()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactoryTest.java
1441= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest:testQuasiSigmoidDecayPrecondition1()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactoryTest.java
1442= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest:testExponentialDecayPrecondition0()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactoryTest.java
1443= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest:testQuasiSigmoidDecayPrecondition0()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactoryTest.java
1444= org.apache.commons.math3.optimization.AbstractConvergenceChecker:getAbsoluteThreshold()	/src/main/java/org/apache/commons/math3/optimization/AbstractConvergenceChecker.java
1445= org.apache.commons.math3.optimization.AbstractConvergenceChecker:converged(int, PAIR, PAIR)	/src/main/java/org/apache/commons/math3/optimization/AbstractConvergenceChecker.java
1446= org.apache.commons.math3.optimization.AbstractConvergenceChecker:AbstractConvergenceChecker(double, double)	/src/main/java/org/apache/commons/math3/optimization/AbstractConvergenceChecker.java
1447= org.apache.commons.math3.optimization.AbstractConvergenceChecker:AbstractConvergenceChecker()	/src/main/java/org/apache/commons/math3/optimization/AbstractConvergenceChecker.java
1448= org.apache.commons.math3.optimization.AbstractConvergenceChecker:getRelativeThreshold()	/src/main/java/org/apache/commons/math3/optimization/AbstractConvergenceChecker.java
1449= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:Cigar(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1450= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testProblemDimensionTooSmall()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1451= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testTwoAxes()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1452= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.SsDiffPow:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1453= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Basis:GenBasis(int)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1454= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Rastrigin:Rastrigin(double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1455= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:Ackley()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1456= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Elli:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1457= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Rosen:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1458= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:Elli(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1459= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Cigar:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1460= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:GenBasis(int)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1461= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:CigTab(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1462= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testRosen()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1463= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Cigar:Cigar(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1464= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:Cigar()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1465= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testAckley()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1466= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testBoundariesDimensionMismatch()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1467= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:boundaries(int, double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1468= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1469= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:Elli()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1470= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testMaximize()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1471= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.CigTab:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1472= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.MinusElli:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1473= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testCigTab()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1474= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Ackley:Ackley()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1475= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testMaxEvaluations()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1476= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testInitOutOfBounds()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1477= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Sphere:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1478= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Ackley:Ackley(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1479= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testConstrainedRosen()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1480= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:doTest(MultivariateFunction, double[], double[][], GoalType, double, double, int, PointValuePair)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1481= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testEllipse()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1482= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:Rastrigin(double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1483= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Cigar:Cigar()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1484= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:doTest(MultivariateFunction, double[], double[][], GoalType, double, double, int, int, PointValuePair, String)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1485= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.CigTab:CigTab()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1486= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.CigTab:CigTab(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1487= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testSphere()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1488= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Tablet:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1489= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Elli:Elli(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1490= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Basis:Rotate(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1491= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testSsDiffPow()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1492= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.ElliRotated:ElliRotated(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1493= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Rastrigin:Rastrigin()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1494= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testConstrainedRosenWithMoreInterpolationPoints()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1495= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:Tablet(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1496= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Rastrigin:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1497= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Tablet:Tablet(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1498= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.DiffPow:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1499= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testTablet()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1500= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:Ackley(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1501= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:Rastrigin()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1502= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Ackley:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1503= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:CigTab()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1504= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testCigar()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1505= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.ElliRotated:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1506= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testRastrigin()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1507= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.TwoAxes:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1508= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:TwoAxes()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1509= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:Rotate(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1510= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:TwoAxes(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1511= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:point(int, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1512= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:ElliRotated()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1513= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.ElliRotated:ElliRotated()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1514= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Elli:Elli()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1515= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.TwoAxes:TwoAxes()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1516= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testElliRotated()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1517= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.Tablet:Tablet()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1518= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:ElliRotated(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1519= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:testDiffPow()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1520= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest:Tablet()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1521= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.TwoAxes:TwoAxes(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java
1522= org.apache.commons.math3.ml.neuralnet.Network:compare(Neuron, Neuron)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1523= org.apache.commons.math3.ml.neuralnet.Network:deleteNeuron(Neuron)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1524= org.apache.commons.math3.ml.neuralnet.Network:readResolve()	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1525= org.apache.commons.math3.ml.neuralnet.Network:Network(long, int, Neuron[], long[][])	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1526= org.apache.commons.math3.ml.neuralnet.Network:getNeuron(long)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1527= org.apache.commons.math3.ml.neuralnet.Network:getFeaturesSize()	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1528= org.apache.commons.math3.ml.neuralnet.Network:getNeighbours(Iterable<Neuron>, Iterable<Neuron>)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1529= org.apache.commons.math3.ml.neuralnet.Network:readObject(ObjectInputStream)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1530= org.apache.commons.math3.ml.neuralnet.Network:addLinkToLinkSet(Set<Long>, long)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1531= org.apache.commons.math3.ml.neuralnet.Network:Network(long, int)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1532= org.apache.commons.math3.ml.neuralnet.Network.NeuronIdentifierComparator:compare(Neuron, Neuron)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1533= org.apache.commons.math3.ml.neuralnet.Network.SerializationProxy:SerializationProxy(long, int, Neuron[], long[][])	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1534= org.apache.commons.math3.ml.neuralnet.Network:addLink(Neuron, Neuron)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1535= org.apache.commons.math3.ml.neuralnet.Network:iterator()	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1536= org.apache.commons.math3.ml.neuralnet.Network.SerializationProxy:readResolve()	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1537= org.apache.commons.math3.ml.neuralnet.Network:deleteLinkFromLinkSet(Set<Long>, long)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1538= org.apache.commons.math3.ml.neuralnet.Network:writeReplace()	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1539= org.apache.commons.math3.ml.neuralnet.Network:getNeurons(Comparator<Neuron>)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1540= org.apache.commons.math3.ml.neuralnet.Network:getNeighbours(Neuron, Iterable<Neuron>)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1541= org.apache.commons.math3.ml.neuralnet.Network:createNeuron(double[])	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1542= org.apache.commons.math3.ml.neuralnet.Network:SerializationProxy(long, int, Neuron[], long[][])	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1543= org.apache.commons.math3.ml.neuralnet.Network:getNeighbours(Neuron)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1544= org.apache.commons.math3.ml.neuralnet.Network:createNextId()	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1545= org.apache.commons.math3.ml.neuralnet.Network:getNeighbours(Iterable<Neuron>)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1546= org.apache.commons.math3.ml.neuralnet.Network:deleteLink(Neuron, Neuron)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Network.java
1547= org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer:AbstractScalarDifferentiableOptimizer(ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/general/AbstractScalarDifferentiableOptimizer.java
1548= org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer:optimize(int, MultivariateDifferentiableFunction, GoalType, double[])	/src/main/java/org/apache/commons/math3/optimization/general/AbstractScalarDifferentiableOptimizer.java
1549= org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer:AbstractScalarDifferentiableOptimizer()	/src/main/java/org/apache/commons/math3/optimization/general/AbstractScalarDifferentiableOptimizer.java
1550= org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer:optimizeInternal(int, DifferentiableMultivariateFunction, GoalType, double[])	/src/main/java/org/apache/commons/math3/optimization/general/AbstractScalarDifferentiableOptimizer.java
1551= org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer:computeObjectiveGradient(double[])	/src/main/java/org/apache/commons/math3/optimization/general/AbstractScalarDifferentiableOptimizer.java
1552= org.apache.commons.math3.optimization.InitialGuess:InitialGuess(double[])	/src/main/java/org/apache/commons/math3/optimization/InitialGuess.java
1553= org.apache.commons.math3.optimization.InitialGuess:getInitialGuess()	/src/main/java/org/apache/commons/math3/optimization/InitialGuess.java
1554= org.apache.commons.math3.linear.RealMatrix:getSubMatrix(int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1555= org.apache.commons.math3.linear.RealMatrix:getSubMatrix(int[], int[])	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1556= org.apache.commons.math3.linear.RealMatrix:setRow(int, double[])	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1557= org.apache.commons.math3.linear.RealMatrix:copy()	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1558= org.apache.commons.math3.linear.RealMatrix:getFrobeniusNorm()	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1559= org.apache.commons.math3.linear.RealMatrix:copySubMatrix(int, int, int, int, double[][])	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1560= org.apache.commons.math3.linear.RealMatrix:operate(double[])	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1561= org.apache.commons.math3.linear.RealMatrix:walkInOptimizedOrder(RealMatrixChangingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1562= org.apache.commons.math3.linear.RealMatrix:setSubMatrix(double[][], int, int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1563= org.apache.commons.math3.linear.RealMatrix:multiplyEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1564= org.apache.commons.math3.linear.RealMatrix:operate(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1565= org.apache.commons.math3.linear.RealMatrix:walkInRowOrder(RealMatrixChangingVisitor)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1566= org.apache.commons.math3.linear.RealMatrix:add(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1567= org.apache.commons.math3.linear.RealMatrix:scalarMultiply(double)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1568= org.apache.commons.math3.linear.RealMatrix:getData()	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1569= org.apache.commons.math3.linear.RealMatrix:getRowVector(int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1570= org.apache.commons.math3.linear.RealMatrix:walkInColumnOrder(RealMatrixChangingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1571= org.apache.commons.math3.linear.RealMatrix:getNorm()	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1572= org.apache.commons.math3.linear.RealMatrix:walkInRowOrder(RealMatrixPreservingVisitor)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1573= org.apache.commons.math3.linear.RealMatrix:walkInColumnOrder(RealMatrixPreservingVisitor)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1574= org.apache.commons.math3.linear.RealMatrix:preMultiply(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1575= org.apache.commons.math3.linear.RealMatrix:getRow(int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1576= org.apache.commons.math3.linear.RealMatrix:transpose()	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1577= org.apache.commons.math3.linear.RealMatrix:preMultiply(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1578= org.apache.commons.math3.linear.RealMatrix:getEntry(int, int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1579= org.apache.commons.math3.linear.RealMatrix:getTrace()	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1580= org.apache.commons.math3.linear.RealMatrix:power(int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1581= org.apache.commons.math3.linear.RealMatrix:createMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1582= org.apache.commons.math3.linear.RealMatrix:getColumn(int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1583= org.apache.commons.math3.linear.RealMatrix:walkInRowOrder(RealMatrixChangingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1584= org.apache.commons.math3.linear.RealMatrix:preMultiply(double[])	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1585= org.apache.commons.math3.linear.RealMatrix:walkInRowOrder(RealMatrixPreservingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1586= org.apache.commons.math3.linear.RealMatrix:getRowMatrix(int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1587= org.apache.commons.math3.linear.RealMatrix:getColumnMatrix(int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1588= org.apache.commons.math3.linear.RealMatrix:setColumn(int, double[])	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1589= org.apache.commons.math3.linear.RealMatrix:setEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1590= org.apache.commons.math3.linear.RealMatrix:setColumnMatrix(int, RealMatrix)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1591= org.apache.commons.math3.linear.RealMatrix:walkInColumnOrder(RealMatrixChangingVisitor)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1592= org.apache.commons.math3.linear.RealMatrix:setColumnVector(int, RealVector)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1593= org.apache.commons.math3.linear.RealMatrix:walkInColumnOrder(RealMatrixPreservingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1594= org.apache.commons.math3.linear.RealMatrix:walkInOptimizedOrder(RealMatrixChangingVisitor)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1595= org.apache.commons.math3.linear.RealMatrix:walkInOptimizedOrder(RealMatrixPreservingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1596= org.apache.commons.math3.linear.RealMatrix:copySubMatrix(int[], int[], double[][])	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1597= org.apache.commons.math3.linear.RealMatrix:getColumnVector(int)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1598= org.apache.commons.math3.linear.RealMatrix:scalarAdd(double)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1599= org.apache.commons.math3.linear.RealMatrix:walkInOptimizedOrder(RealMatrixPreservingVisitor)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1600= org.apache.commons.math3.linear.RealMatrix:subtract(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1601= org.apache.commons.math3.linear.RealMatrix:multiply(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1602= org.apache.commons.math3.linear.RealMatrix:setRowMatrix(int, RealMatrix)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1603= org.apache.commons.math3.linear.RealMatrix:setRowVector(int, RealVector)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1604= org.apache.commons.math3.linear.RealMatrix:addToEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/RealMatrix.java
1605= org.apache.commons.math3.stat.descriptive.summary.Product:evaluate(double[], double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Product.java
1606= org.apache.commons.math3.stat.descriptive.summary.Product:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Product.java
1607= org.apache.commons.math3.stat.descriptive.summary.Product:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Product.java
1608= org.apache.commons.math3.stat.descriptive.summary.Product:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Product.java
1609= org.apache.commons.math3.stat.descriptive.summary.Product:evaluate(double[], double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Product.java
1610= org.apache.commons.math3.stat.descriptive.summary.Product:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Product.java
1611= org.apache.commons.math3.stat.descriptive.summary.Product:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Product.java
1612= org.apache.commons.math3.stat.descriptive.summary.Product:copy(Product, Product)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Product.java
1613= org.apache.commons.math3.stat.descriptive.summary.Product:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Product.java
1614= org.apache.commons.math3.stat.descriptive.summary.Product:Product(Product)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Product.java
1615= org.apache.commons.math3.stat.descriptive.summary.Product:Product()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/Product.java
1616= org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException:NotARotationMatrixException(Localizable, Object)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/NotARotationMatrixException.java
1617= org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver:AbstractDifferentiableUnivariateSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractDifferentiableUnivariateSolver.java
1618= org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver:AbstractDifferentiableUnivariateSolver(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractDifferentiableUnivariateSolver.java
1619= org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver:setup(int, DifferentiableUnivariateFunction, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractDifferentiableUnivariateSolver.java
1620= org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver:computeDerivativeObjectiveValue(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractDifferentiableUnivariateSolver.java
1621= org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution:MixtureMultivariateNormalDistribution(List<Pair<Double,MultivariateNormalDistribution>>)	/src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution.java
1622= org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution:createComponents(double[], double[][], double[][][])	/src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution.java
1623= org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution:MixtureMultivariateNormalDistribution(RandomGenerator, List<Pair<Double,MultivariateNormalDistribution>>)	/src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution.java
1624= org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution:MixtureMultivariateNormalDistribution(double[], double[][], double[][][])	/src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution.java
1625= org.apache.commons.math3.geometry.spherical.oned.Arc:getBarycenter()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/Arc.java
1626= org.apache.commons.math3.geometry.spherical.oned.Arc:getTolerance()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/Arc.java
1627= org.apache.commons.math3.geometry.spherical.oned.Arc:getSize()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/Arc.java
1628= org.apache.commons.math3.geometry.spherical.oned.Arc:getSup()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/Arc.java
1629= org.apache.commons.math3.geometry.spherical.oned.Arc:Arc(double, double, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/Arc.java
1630= org.apache.commons.math3.geometry.spherical.oned.Arc:getInf()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/Arc.java
1631= org.apache.commons.math3.geometry.spherical.oned.Arc:checkPoint(double)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/Arc.java
1632= org.apache.commons.math3.stat.descriptive.moment.Kurtosis:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java
1633= org.apache.commons.math3.stat.descriptive.moment.Kurtosis:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java
1634= org.apache.commons.math3.stat.descriptive.moment.Kurtosis:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java
1635= org.apache.commons.math3.stat.descriptive.moment.Kurtosis:Kurtosis(FourthMoment)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java
1636= org.apache.commons.math3.stat.descriptive.moment.Kurtosis:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java
1637= org.apache.commons.math3.stat.descriptive.moment.Kurtosis:copy(Kurtosis, Kurtosis)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java
1638= org.apache.commons.math3.stat.descriptive.moment.Kurtosis:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java
1639= org.apache.commons.math3.stat.descriptive.moment.Kurtosis:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java
1640= org.apache.commons.math3.stat.descriptive.moment.Kurtosis:Kurtosis()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java
1641= org.apache.commons.math3.stat.descriptive.moment.Kurtosis:Kurtosis(Kurtosis)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java
1642= org.apache.commons.math3.distribution.AbstractRealDistribution:value(double)	/src/main/java/org/apache/commons/math3/distribution/AbstractRealDistribution.java
1643= org.apache.commons.math3.distribution.AbstractRealDistribution:probability(double, double)	/src/main/java/org/apache/commons/math3/distribution/AbstractRealDistribution.java
1644= org.apache.commons.math3.distribution.AbstractRealDistribution:sample(int)	/src/main/java/org/apache/commons/math3/distribution/AbstractRealDistribution.java
1645= org.apache.commons.math3.distribution.AbstractRealDistribution:getSolverAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/distribution/AbstractRealDistribution.java
1646= org.apache.commons.math3.distribution.AbstractRealDistribution:AbstractRealDistribution(RandomGenerator)	/src/main/java/org/apache/commons/math3/distribution/AbstractRealDistribution.java
1647= org.apache.commons.math3.distribution.AbstractRealDistribution:inverseCumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/AbstractRealDistribution.java
1648= org.apache.commons.math3.distribution.AbstractRealDistribution:logDensity(double)	/src/main/java/org/apache/commons/math3/distribution/AbstractRealDistribution.java
1649= org.apache.commons.math3.distribution.AbstractRealDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/AbstractRealDistribution.java
1650= org.apache.commons.math3.distribution.AbstractRealDistribution:AbstractRealDistribution()	/src/main/java/org/apache/commons/math3/distribution/AbstractRealDistribution.java
1651= org.apache.commons.math3.distribution.AbstractRealDistribution:cumulativeProbability(double, double)	/src/main/java/org/apache/commons/math3/distribution/AbstractRealDistribution.java
1652= org.apache.commons.math3.distribution.AbstractRealDistribution:reseedRandomGenerator(long)	/src/main/java/org/apache/commons/math3/distribution/AbstractRealDistribution.java
1653= org.apache.commons.math3.distribution.AbstractRealDistribution:probability(double)	/src/main/java/org/apache/commons/math3/distribution/AbstractRealDistribution.java
1654= org.apache.commons.math3.exception.util.Localizable:getSourceString()	/src/main/java/org/apache/commons/math3/exception/util/Localizable.java
1655= org.apache.commons.math3.exception.util.Localizable:getLocalizedString(Locale)	/src/main/java/org/apache/commons/math3/exception/util/Localizable.java
1656= org.apache.commons.math3.analysis.MultivariateFunction:value(double[])	/src/main/java/org/apache/commons/math3/analysis/MultivariateFunction.java
1657= org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory:computeRule(int)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/HermiteRuleFactory.java
1658= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1659= org.apache.commons.math3.linear.ArrayRealVector:walkInOptimizedOrder(RealVectorChangingVisitor, int, int)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1660= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(int)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1661= org.apache.commons.math3.linear.ArrayRealVector:getDataRef()	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1662= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(double[])	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1663= org.apache.commons.math3.linear.ArrayRealVector:getDimension()	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1664= org.apache.commons.math3.linear.ArrayRealVector:walkInDefaultOrder(RealVectorPreservingVisitor)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1665= org.apache.commons.math3.linear.ArrayRealVector:setSubVector(int, double[])	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1666= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector()	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1667= org.apache.commons.math3.linear.ArrayRealVector:setEntry(int, double)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1668= org.apache.commons.math3.linear.ArrayRealVector:getDistance(RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1669= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(int, double)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1670= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(double[], double[])	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1671= org.apache.commons.math3.linear.ArrayRealVector:toArray()	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1672= org.apache.commons.math3.linear.ArrayRealVector:mapDivideToSelf(double)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1673= org.apache.commons.math3.linear.ArrayRealVector:add(RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1674= org.apache.commons.math3.linear.ArrayRealVector:setSubVector(int, RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1675= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(ArrayRealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1676= org.apache.commons.math3.linear.ArrayRealVector:equals(Object)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1677= org.apache.commons.math3.linear.ArrayRealVector:combineToSelf(double, double, RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1678= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(double[], boolean)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1679= org.apache.commons.math3.linear.ArrayRealVector:getEntry(int)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1680= org.apache.commons.math3.linear.ArrayRealVector:mapMultiplyToSelf(double)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1681= org.apache.commons.math3.linear.ArrayRealVector:combine(double, double, RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1682= org.apache.commons.math3.linear.ArrayRealVector:mapSubtractToSelf(double)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1683= org.apache.commons.math3.linear.ArrayRealVector:map(UnivariateFunction)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1684= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(RealVector, ArrayRealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1685= org.apache.commons.math3.linear.ArrayRealVector:hashCode()	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1686= org.apache.commons.math3.linear.ArrayRealVector:mapAddToSelf(double)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1687= org.apache.commons.math3.linear.ArrayRealVector:getLInfNorm()	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1688= org.apache.commons.math3.linear.ArrayRealVector:walkInOptimizedOrder(RealVectorPreservingVisitor)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1689= org.apache.commons.math3.linear.ArrayRealVector:mapToSelf(UnivariateFunction)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1690= org.apache.commons.math3.linear.ArrayRealVector:append(double)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1691= org.apache.commons.math3.linear.ArrayRealVector:walkInOptimizedOrder(RealVectorChangingVisitor)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1692= org.apache.commons.math3.linear.ArrayRealVector:addToEntry(int, double)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1693= org.apache.commons.math3.linear.ArrayRealVector:ebeDivide(RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1694= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(ArrayRealVector, ArrayRealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1695= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(ArrayRealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1696= org.apache.commons.math3.linear.ArrayRealVector:checkVectorDimensions(RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1697= org.apache.commons.math3.linear.ArrayRealVector:getL1Distance(RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1698= org.apache.commons.math3.linear.ArrayRealVector:walkInDefaultOrder(RealVectorPreservingVisitor, int, int)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1699= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(ArrayRealVector, double[])	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1700= org.apache.commons.math3.linear.ArrayRealVector:getL1Norm()	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1701= org.apache.commons.math3.linear.ArrayRealVector:getLInfDistance(RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1702= org.apache.commons.math3.linear.ArrayRealVector:copy()	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1703= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(ArrayRealVector, boolean)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1704= org.apache.commons.math3.linear.ArrayRealVector:getSubVector(int, int)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1705= org.apache.commons.math3.linear.ArrayRealVector:walkInDefaultOrder(RealVectorChangingVisitor)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1706= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(Double[], int, int)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1707= org.apache.commons.math3.linear.ArrayRealVector:toString()	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1708= org.apache.commons.math3.linear.ArrayRealVector:dotProduct(RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1709= org.apache.commons.math3.linear.ArrayRealVector:ebeMultiply(RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1710= org.apache.commons.math3.linear.ArrayRealVector:append(ArrayRealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1711= org.apache.commons.math3.linear.ArrayRealVector:append(RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1712= org.apache.commons.math3.linear.ArrayRealVector:checkVectorDimensions(int)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1713= org.apache.commons.math3.linear.ArrayRealVector:walkInOptimizedOrder(RealVectorPreservingVisitor, int, int)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1714= org.apache.commons.math3.linear.ArrayRealVector:walkInDefaultOrder(RealVectorChangingVisitor, int, int)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1715= org.apache.commons.math3.linear.ArrayRealVector:subtract(RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1716= org.apache.commons.math3.linear.ArrayRealVector:outerProduct(RealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1717= org.apache.commons.math3.linear.ArrayRealVector:isInfinite()	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1718= org.apache.commons.math3.linear.ArrayRealVector:isNaN()	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1719= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(double[], int, int)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1720= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(double[], ArrayRealVector)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1721= org.apache.commons.math3.linear.ArrayRealVector:set(double)	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1722= org.apache.commons.math3.linear.ArrayRealVector:ArrayRealVector(Double[])	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1723= org.apache.commons.math3.linear.ArrayRealVector:getNorm()	/src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java
1724= org.apache.commons.math3.analysis.function.Asinh:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Asinh.java
1725= org.apache.commons.math3.analysis.function.Asinh:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Asinh.java
1726= org.apache.commons.math3.analysis.function.Asinh:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Asinh.java
1727= org.apache.commons.math3.random.SobolSequenceGeneratorTest:test3DReference()	/src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java
1728= org.apache.commons.math3.random.SobolSequenceGeneratorTest:testConstructor()	/src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java
1729= org.apache.commons.math3.random.SobolSequenceGeneratorTest:testConstructor2()	/src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java
1730= org.apache.commons.math3.random.SobolSequenceGeneratorTest:testSkip()	/src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java
1731= org.apache.commons.math3.random.SobolSequenceGeneratorTest:setUp()	/src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java
1732= org.apache.commons.math3.geometry.hull.ConvexHullGenerator:generate(Collection<P>)	/src/main/java/org/apache/commons/math3/geometry/hull/ConvexHullGenerator.java
1733= org.apache.commons.math3.stat.interval.ConfidenceInterval:getLowerBound()	/src/main/java/org/apache/commons/math3/stat/interval/ConfidenceInterval.java
1734= org.apache.commons.math3.stat.interval.ConfidenceInterval:toString()	/src/main/java/org/apache/commons/math3/stat/interval/ConfidenceInterval.java
1735= org.apache.commons.math3.stat.interval.ConfidenceInterval:ConfidenceInterval(double, double, double)	/src/main/java/org/apache/commons/math3/stat/interval/ConfidenceInterval.java
1736= org.apache.commons.math3.stat.interval.ConfidenceInterval:getUpperBound()	/src/main/java/org/apache/commons/math3/stat/interval/ConfidenceInterval.java
1737= org.apache.commons.math3.stat.interval.ConfidenceInterval:getConfidenceLevel()	/src/main/java/org/apache/commons/math3/stat/interval/ConfidenceInterval.java
1738= org.apache.commons.math3.stat.interval.ConfidenceInterval:checkParameters(double, double, double)	/src/main/java/org/apache/commons/math3/stat/interval/ConfidenceInterval.java
1739= org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:getTolerance()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java
1740= org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:getLocation()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java
1741= org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:OrientedPoint(Vector1D, boolean, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java
1742= org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:sameOrientationAs(Hyperplane<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java
1743= org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:revertSelf()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java
1744= org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:copySelf()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java
1745= org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:OrientedPoint(Vector1D, boolean)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java
1746= org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:wholeSpace()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java
1747= org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:isDirect()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java
1748= org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:getOffset(Vector<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java
1749= org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:project(Point<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java
1750= org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:getOffset(Point<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java
1751= org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:wholeHyperplane()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java
1752= org.apache.commons.math3.genetics.CrossoverPolicy:crossover(Chromosome, Chromosome)	/src/main/java/org/apache/commons/math3/genetics/CrossoverPolicy.java
1753= org.apache.commons.math3.linear.NonSelfAdjointOperatorException:NonSelfAdjointOperatorException()	/src/main/java/org/apache/commons/math3/linear/NonSelfAdjointOperatorException.java
1754= org.apache.commons.math3.fitting.HarmonicFitter:ParameterGuesser(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java
1755= org.apache.commons.math3.fitting.HarmonicFitter:guess()	/src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java
1756= org.apache.commons.math3.fitting.HarmonicFitter.ParameterGuesser:guessAOmega(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java
1757= org.apache.commons.math3.fitting.HarmonicFitter.ParameterGuesser:guess()	/src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java
1758= org.apache.commons.math3.fitting.HarmonicFitter:guessAOmega(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java
1759= org.apache.commons.math3.fitting.HarmonicFitter:guessPhi(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java
1760= org.apache.commons.math3.fitting.HarmonicFitter.ParameterGuesser:ParameterGuesser(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java
1761= org.apache.commons.math3.fitting.HarmonicFitter.ParameterGuesser:sortObservations(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java
1762= org.apache.commons.math3.fitting.HarmonicFitter:HarmonicFitter(MultivariateVectorOptimizer)	/src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java
1763= org.apache.commons.math3.fitting.HarmonicFitter:fit(double[])	/src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java
1764= org.apache.commons.math3.fitting.HarmonicFitter:fit()	/src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java
1765= org.apache.commons.math3.fitting.HarmonicFitter:sortObservations(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java
1766= org.apache.commons.math3.fitting.HarmonicFitter.ParameterGuesser:guessPhi(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java
1767= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer:cluster(Collection<T>, int, int)	/src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java
1768= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer:KMeansPlusPlusClusterer(Random, EmptyClusterStrategy)	/src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java
1769= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer:getPointFromLargestVarianceCluster(Collection<Cluster<T>>)	/src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java
1770= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer:chooseInitialCenters(Collection<T>, int, Random)	/src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java
1771= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer:KMeansPlusPlusClusterer(Random)	/src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java
1772= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer:getNearestCluster(Collection<Cluster<T>>, T)	/src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java
1773= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer:cluster(Collection<T>, int, int, int)	/src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java
1774= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer:getPointFromLargestNumberCluster(Collection<Cluster<T>>)	/src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java
1775= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer:getFarthestPoint(Collection<Cluster<T>>)	/src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java
1776= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer:assignPointsToClusters(List<Cluster<T>>, Collection<T>, int[])	/src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java
1777= org.apache.commons.math3.ode.ContinuousOutputModel:getInterpolatedTime()	/src/main/java/org/apache/commons/math3/ode/ContinuousOutputModel.java
1778= org.apache.commons.math3.ode.ContinuousOutputModel:locatePoint(double, StepInterpolator)	/src/main/java/org/apache/commons/math3/ode/ContinuousOutputModel.java
1779= org.apache.commons.math3.ode.ContinuousOutputModel:ContinuousOutputModel()	/src/main/java/org/apache/commons/math3/ode/ContinuousOutputModel.java
1780= org.apache.commons.math3.ode.ContinuousOutputModel:init(double, double[], double)	/src/main/java/org/apache/commons/math3/ode/ContinuousOutputModel.java
1781= org.apache.commons.math3.ode.ContinuousOutputModel:setInterpolatedTime(double)	/src/main/java/org/apache/commons/math3/ode/ContinuousOutputModel.java
1782= org.apache.commons.math3.ode.ContinuousOutputModel:getInitialTime()	/src/main/java/org/apache/commons/math3/ode/ContinuousOutputModel.java
1783= org.apache.commons.math3.ode.ContinuousOutputModel:getInterpolatedSecondaryState(int)	/src/main/java/org/apache/commons/math3/ode/ContinuousOutputModel.java
1784= org.apache.commons.math3.ode.ContinuousOutputModel:append(ContinuousOutputModel)	/src/main/java/org/apache/commons/math3/ode/ContinuousOutputModel.java
1785= org.apache.commons.math3.ode.ContinuousOutputModel:getFinalTime()	/src/main/java/org/apache/commons/math3/ode/ContinuousOutputModel.java
1786= org.apache.commons.math3.ode.ContinuousOutputModel:handleStep(StepInterpolator, boolean)	/src/main/java/org/apache/commons/math3/ode/ContinuousOutputModel.java
1787= org.apache.commons.math3.ode.ContinuousOutputModel:getInterpolatedState()	/src/main/java/org/apache/commons/math3/ode/ContinuousOutputModel.java
1788= org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:increment(double, double)	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessBivariateCovariance.java
1789= org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:StorelessBivariateCovariance()	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessBivariateCovariance.java
1790= org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:getResult()	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessBivariateCovariance.java
1791= org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:append(StorelessBivariateCovariance)	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessBivariateCovariance.java
1792= org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:StorelessBivariateCovariance(boolean)	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessBivariateCovariance.java
1793= org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:getN()	/src/main/java/org/apache/commons/math3/stat/correlation/StorelessBivariateCovariance.java
1794= org.apache.commons.math3.geometry.spherical.oned.Sphere1D:getDimension()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/Sphere1D.java
1795= org.apache.commons.math3.geometry.spherical.oned.Sphere1D:readResolve()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/Sphere1D.java
1796= org.apache.commons.math3.geometry.spherical.oned.Sphere1D:getSubSpace()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/Sphere1D.java
1797= org.apache.commons.math3.geometry.spherical.oned.Sphere1D:Sphere1D()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/Sphere1D.java
1798= org.apache.commons.math3.geometry.spherical.oned.Sphere1D:NoSubSpaceException()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/Sphere1D.java
1799= org.apache.commons.math3.geometry.spherical.oned.Sphere1D.NoSubSpaceException:NoSubSpaceException()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/Sphere1D.java
1800= org.apache.commons.math3.geometry.spherical.oned.Sphere1D:getInstance()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/Sphere1D.java
1801= org.apache.commons.math3.ode.events.EventState:getException()	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1802= org.apache.commons.math3.ode.events.EventState:getMaxCheckInterval()	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1803= org.apache.commons.math3.ode.events.EventState:value(double)	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1804= org.apache.commons.math3.ode.events.EventState:getConvergence()	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1805= org.apache.commons.math3.ode.events.EventState:reinitializeBegin(StepInterpolator)	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1806= org.apache.commons.math3.ode.events.EventState:getMaxIterationCount()	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1807= org.apache.commons.math3.ode.events.EventState:EventState(EventHandler, double, double, int, UnivariateSolver)	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1808= org.apache.commons.math3.ode.events.EventState.LocalMaxCountExceededException:getException()	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1809= org.apache.commons.math3.ode.events.EventState:stop()	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1810= org.apache.commons.math3.ode.events.EventState.LocalMaxCountExceededException:LocalMaxCountExceededException(MaxCountExceededException)	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1811= org.apache.commons.math3.ode.events.EventState:stepAccepted(double, double[])	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1812= org.apache.commons.math3.ode.events.EventState:reset(double, double[])	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1813= org.apache.commons.math3.ode.events.EventState:getCompleteState(StepInterpolator)	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1814= org.apache.commons.math3.ode.events.EventState:LocalMaxCountExceededException(MaxCountExceededException)	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1815= org.apache.commons.math3.ode.events.EventState:evaluateStep(StepInterpolator)	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1816= org.apache.commons.math3.ode.events.EventState:setExpandable(ExpandableStatefulODE)	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1817= org.apache.commons.math3.ode.events.EventState:getEventHandler()	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1818= org.apache.commons.math3.ode.events.EventState:getEventTime()	/src/main/java/org/apache/commons/math3/ode/events/EventState.java
1819= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation:testParametersErrorMonteCarloObservations()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTestValidation.java
1820= org.apache.commons.math3.optim.nonlinear.vector.jacobian.DummyOptimizer:DummyOptimizer()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTestValidation.java
1821= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation:testParametersErrorMonteCarloParameters()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTestValidation.java
1822= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation:getChi2N(AbstractLeastSquaresOptimizer, StraightLineProblem, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTestValidation.java
1823= org.apache.commons.math3.optim.nonlinear.vector.jacobian.DummyOptimizer:doOptimize()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTestValidation.java
1824= org.apache.commons.math3.analysis.function.Ulp:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Ulp.java
1825= org.apache.commons.math3.util.IterationManager:IterationManager(int)	/src/main/java/org/apache/commons/math3/util/IterationManager.java
1826= org.apache.commons.math3.util.IterationManager:IterationManager(int, Incrementor.MaxCountExceededCallback)	/src/main/java/org/apache/commons/math3/util/IterationManager.java
1827= org.apache.commons.math3.util.IterationManager:addIterationListener(IterationListener)	/src/main/java/org/apache/commons/math3/util/IterationManager.java
1828= org.apache.commons.math3.util.IterationManager:fireIterationStartedEvent(IterationEvent)	/src/main/java/org/apache/commons/math3/util/IterationManager.java
1829= org.apache.commons.math3.util.IterationManager:incrementIterationCount()	/src/main/java/org/apache/commons/math3/util/IterationManager.java
1830= org.apache.commons.math3.util.IterationManager:getMaxIterations()	/src/main/java/org/apache/commons/math3/util/IterationManager.java
1831= org.apache.commons.math3.util.IterationManager:fireTerminationEvent(IterationEvent)	/src/main/java/org/apache/commons/math3/util/IterationManager.java
1832= org.apache.commons.math3.util.IterationManager:removeIterationListener(IterationListener)	/src/main/java/org/apache/commons/math3/util/IterationManager.java
1833= org.apache.commons.math3.util.IterationManager:fireInitializationEvent(IterationEvent)	/src/main/java/org/apache/commons/math3/util/IterationManager.java
1834= org.apache.commons.math3.util.IterationManager:getIterations()	/src/main/java/org/apache/commons/math3/util/IterationManager.java
1835= org.apache.commons.math3.util.IterationManager:fireIterationPerformedEvent(IterationEvent)	/src/main/java/org/apache/commons/math3/util/IterationManager.java
1836= org.apache.commons.math3.util.IterationManager:resetIterationCount()	/src/main/java/org/apache/commons/math3/util/IterationManager.java
1837= org.apache.commons.math3.random.BitsStreamGenerator:nextLong(long)	/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
1838= org.apache.commons.math3.random.BitsStreamGenerator:nextBytes(byte[])	/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
1839= org.apache.commons.math3.random.BitsStreamGenerator:nextInt()	/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
1840= org.apache.commons.math3.random.BitsStreamGenerator:setSeed(int)	/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
1841= org.apache.commons.math3.random.BitsStreamGenerator:nextFloat()	/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
1842= org.apache.commons.math3.random.BitsStreamGenerator:nextBoolean()	/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
1843= org.apache.commons.math3.random.BitsStreamGenerator:next(int)	/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
1844= org.apache.commons.math3.random.BitsStreamGenerator:nextDouble()	/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
1845= org.apache.commons.math3.random.BitsStreamGenerator:clear()	/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
1846= org.apache.commons.math3.random.BitsStreamGenerator:setSeed(int[])	/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
1847= org.apache.commons.math3.random.BitsStreamGenerator:nextGaussian()	/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
1848= org.apache.commons.math3.random.BitsStreamGenerator:nextInt(int)	/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
1849= org.apache.commons.math3.random.BitsStreamGenerator:setSeed(long)	/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
1850= org.apache.commons.math3.random.BitsStreamGenerator:BitsStreamGenerator()	/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
1851= org.apache.commons.math3.random.BitsStreamGenerator:nextLong()	/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
1852= org.apache.commons.math3.exception.NotPositiveException:NotPositiveException(Localizable, Number)	/src/main/java/org/apache/commons/math3/exception/NotPositiveException.java
1853= org.apache.commons.math3.exception.NotPositiveException:NotPositiveException(Number)	/src/main/java/org/apache/commons/math3/exception/NotPositiveException.java
1854= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest:testQuadratic()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizerTest.java
1855= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest:testSumSinc()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizerTest.java
1856= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest:doTest(MultivariateFunction, double[], double[], GoalType, double, double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizerTest.java
1857= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest:testBoundsUnsupported()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizerTest.java
1858= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizerTest.java
1859= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest:testMaximizeQuadratic()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizerTest.java
1860= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest:doTest(MultivariateFunction, double[], double[], GoalType, double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizerTest.java
1861= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest:testRelativeToleranceOnScaledValues()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizerTest.java
1862= org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:HighamHall54StepInterpolator()	/src/main/java/org/apache/commons/math3/ode/nonstiff/HighamHall54StepInterpolator.java
1863= org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:computeInterpolatedStateAndDerivatives(double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/HighamHall54StepInterpolator.java
1864= org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:HighamHall54StepInterpolator(HighamHall54StepInterpolator)	/src/main/java/org/apache/commons/math3/ode/nonstiff/HighamHall54StepInterpolator.java
1865= org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:doCopy()	/src/main/java/org/apache/commons/math3/ode/nonstiff/HighamHall54StepInterpolator.java
1866= org.apache.commons.math3.optim.linear.NonNegativeConstraint:NonNegativeConstraint(boolean)	/src/main/java/org/apache/commons/math3/optim/linear/NonNegativeConstraint.java
1867= org.apache.commons.math3.optim.linear.NonNegativeConstraint:isRestrictedToNonNegative()	/src/main/java/org/apache/commons/math3/optim/linear/NonNegativeConstraint.java
1868= org.apache.commons.math3.analysis.function.Rint:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Rint.java
1869= org.apache.commons.math3.optimization.linear.NoFeasibleSolutionException:NoFeasibleSolutionException()	/src/main/java/org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException.java
1870= org.apache.commons.math3.geometry.euclidean.threed.SubLine:SubLine(Line, IntervalsSet)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java
1871= org.apache.commons.math3.geometry.euclidean.threed.SubLine:intersection(SubLine, boolean)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java
1872= org.apache.commons.math3.geometry.euclidean.threed.SubLine:SubLine(Segment)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java
1873= org.apache.commons.math3.geometry.euclidean.threed.SubLine:SubLine(Vector3D, Vector3D, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java
1874= org.apache.commons.math3.geometry.euclidean.threed.SubLine:getSegments()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java
1875= org.apache.commons.math3.geometry.euclidean.threed.SubLine:SubLine(Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java
1876= org.apache.commons.math3.geometry.euclidean.threed.SubLine:buildIntervalSet(Vector3D, Vector3D, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java
1877= org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator:interpolate(double[], double[], double[], double[][][])	/src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java
1878= org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator:previousIndex(int)	/src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java
1879= org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator:nextIndex(int, int)	/src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java
1880= org.apache.commons.math3.ode.AbstractParameterizable:isSupported(String)	/src/main/java/org/apache/commons/math3/ode/AbstractParameterizable.java
1881= org.apache.commons.math3.ode.AbstractParameterizable:AbstractParameterizable(String)	/src/main/java/org/apache/commons/math3/ode/AbstractParameterizable.java
1882= org.apache.commons.math3.ode.AbstractParameterizable:getParametersNames()	/src/main/java/org/apache/commons/math3/ode/AbstractParameterizable.java
1883= org.apache.commons.math3.ode.AbstractParameterizable:complainIfNotSupported(String)	/src/main/java/org/apache/commons/math3/ode/AbstractParameterizable.java
1884= org.apache.commons.math3.ode.AbstractParameterizable:AbstractParameterizable(Collection<String>)	/src/main/java/org/apache/commons/math3/ode/AbstractParameterizable.java
1885= org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunctionTest:testPrecondition4()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/util/QuasiSigmoidDecayFunctionTest.java
1886= org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunctionTest:testTrivial()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/util/QuasiSigmoidDecayFunctionTest.java
1887= org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunctionTest:testPrecondition3()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/util/QuasiSigmoidDecayFunctionTest.java
1888= org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunctionTest:testPrecondition1()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/util/QuasiSigmoidDecayFunctionTest.java
1889= org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer:MultiStartUnivariateOptimizer(UnivariateOptimizer, int, RandomGenerator)	/src/main/java/org/apache/commons/math3/optim/univariate/MultiStartUnivariateOptimizer.java
1890= org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer:sortPairs(GoalType)	/src/main/java/org/apache/commons/math3/optim/univariate/MultiStartUnivariateOptimizer.java
1891= org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer:getOptima()	/src/main/java/org/apache/commons/math3/optim/univariate/MultiStartUnivariateOptimizer.java
1892= org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer:optimize(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/univariate/MultiStartUnivariateOptimizer.java
1893= org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer:getEvaluations()	/src/main/java/org/apache/commons/math3/optim/univariate/MultiStartUnivariateOptimizer.java
1894= org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optim/univariate/MultiStartUnivariateOptimizer.java
1895= org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer:compare(UnivariatePointValuePair, UnivariatePointValuePair)	/src/main/java/org/apache/commons/math3/optim/univariate/MultiStartUnivariateOptimizer.java
1896= org.apache.commons.math3.linear.NonSquareOperatorException:NonSquareOperatorException(int, int)	/src/main/java/org/apache/commons/math3/linear/NonSquareOperatorException.java
1897= org.apache.commons.math3.exception.TooManyEvaluationsException:TooManyEvaluationsException(Number)	/src/main/java/org/apache/commons/math3/exception/TooManyEvaluationsException.java
1898= org.apache.commons.math3.stat.descriptive.moment.FirstMoment:copy(FirstMoment, FirstMoment)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java
1899= org.apache.commons.math3.stat.descriptive.moment.FirstMoment:FirstMoment(FirstMoment)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java
1900= org.apache.commons.math3.stat.descriptive.moment.FirstMoment:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java
1901= org.apache.commons.math3.stat.descriptive.moment.FirstMoment:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java
1902= org.apache.commons.math3.stat.descriptive.moment.FirstMoment:FirstMoment()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java
1903= org.apache.commons.math3.stat.descriptive.moment.FirstMoment:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java
1904= org.apache.commons.math3.stat.descriptive.moment.FirstMoment:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java
1905= org.apache.commons.math3.stat.descriptive.moment.FirstMoment:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java
1906= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display.ImagePainter:getMaximumSize()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1907= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display:isAlive()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1908= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample:getMinimumSize()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1909= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample:actionPerformed(ActionEvent)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1910= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample:Display()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1911= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample:startEvolution()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1912= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display.ImagePainter:getPreferredSize()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1913= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample:stopRequest()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1914= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display.ImagePainter:getMinimumSize()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1915= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample:run()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1916= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample:paint(Graphics)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1917= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample:getInitialPopulation()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1918= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample:isAlive()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1919= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display:run()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1920= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample:main(String[])	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1921= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample:resizeImage(BufferedImage, int, int, int)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1922= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display:ImagePainter(int, int)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1923= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display.ImagePainter:ImagePainter(int, int)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1924= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display.ImagePainter:paint(Graphics)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1925= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display:stopRequest()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1926= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display:startEvolution()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1927= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample:ImagePainter(int, int)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1928= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display:getMinimumSize()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1929= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample:getMaximumSize()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1930= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display:actionPerformed(ActionEvent)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1931= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display:paint(Graphics)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1932= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display:getMaximumSize()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1933= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display:getPreferredSize()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1934= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample.Display:Display()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1935= org.apache.commons.math3.userguide.genetics.ImageEvolutionExample:getPreferredSize()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java
1936= org.apache.commons.math3.exception.util.ExceptionContext:nonSerializableReplacement(Object)	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1937= org.apache.commons.math3.exception.util.ExceptionContext:getMessage()	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1938= org.apache.commons.math3.exception.util.ExceptionContext:deSerializeMessages(ObjectInputStream)	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1939= org.apache.commons.math3.exception.util.ExceptionContext:readObject(ObjectInputStream)	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1940= org.apache.commons.math3.exception.util.ExceptionContext:getMessage(Locale)	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1941= org.apache.commons.math3.exception.util.ExceptionContext:serializeMessages(ObjectOutputStream)	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1942= org.apache.commons.math3.exception.util.ExceptionContext:writeObject(ObjectOutputStream)	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1943= org.apache.commons.math3.exception.util.ExceptionContext:buildMessage(Locale, String)	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1944= org.apache.commons.math3.exception.util.ExceptionContext:getLocalizedMessage()	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1945= org.apache.commons.math3.exception.util.ExceptionContext:getThrowable()	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1946= org.apache.commons.math3.exception.util.ExceptionContext:deSerializeContext(ObjectInputStream)	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1947= org.apache.commons.math3.exception.util.ExceptionContext:addMessage(Localizable, Object)	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1948= org.apache.commons.math3.exception.util.ExceptionContext:getValue(String)	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1949= org.apache.commons.math3.exception.util.ExceptionContext:serializeContext(ObjectOutputStream)	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1950= org.apache.commons.math3.exception.util.ExceptionContext:getKeys()	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1951= org.apache.commons.math3.exception.util.ExceptionContext:ExceptionContext(Throwable)	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1952= org.apache.commons.math3.exception.util.ExceptionContext:setValue(String, Object)	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1953= org.apache.commons.math3.exception.util.ExceptionContext:getMessage(Locale, String)	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
1954= org.apache.commons.math3.analysis.ParametricUnivariateFunction:gradient(double, double)	/src/main/java/org/apache/commons/math3/analysis/ParametricUnivariateFunction.java
1955= org.apache.commons.math3.analysis.ParametricUnivariateFunction:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/ParametricUnivariateFunction.java
1956= org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator:ClusterEvaluator()	/src/main/java/org/apache/commons/math3/ml/clustering/evaluation/ClusterEvaluator.java
1957= org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator:ClusterEvaluator(DistanceMeasure)	/src/main/java/org/apache/commons/math3/ml/clustering/evaluation/ClusterEvaluator.java
1958= org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator:centroidOf(Cluster<T>)	/src/main/java/org/apache/commons/math3/ml/clustering/evaluation/ClusterEvaluator.java
1959= org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator:distance(Clusterable, Clusterable)	/src/main/java/org/apache/commons/math3/ml/clustering/evaluation/ClusterEvaluator.java
1960= org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator:score(List<? extends Cluster<T>>)	/src/main/java/org/apache/commons/math3/ml/clustering/evaluation/ClusterEvaluator.java
1961= org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator:isBetterScore(double, double)	/src/main/java/org/apache/commons/math3/ml/clustering/evaluation/ClusterEvaluator.java
1962= org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction:value(DerivativeStructure[])	/src/main/java/org/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction.java
1963= org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle:buildNew(Hyperplane<Sphere1D>, Region<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubLimitAngle.java
1964= org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle:split(Hyperplane<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubLimitAngle.java
1965= org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle:SubLimitAngle(Hyperplane<Sphere1D>, Region<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubLimitAngle.java
1966= org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle:isEmpty()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubLimitAngle.java
1967= org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle:getSize()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubLimitAngle.java
1968= org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle:side(Hyperplane<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubLimitAngle.java
1969= org.apache.commons.math3.linear.NonSymmetricMatrixException:NonSymmetricMatrixException(int, int, double)	/src/main/java/org/apache/commons/math3/linear/NonSymmetricMatrixException.java
1970= org.apache.commons.math3.linear.NonSymmetricMatrixException:getThreshold()	/src/main/java/org/apache/commons/math3/linear/NonSymmetricMatrixException.java
1971= org.apache.commons.math3.linear.NonSymmetricMatrixException:getRow()	/src/main/java/org/apache/commons/math3/linear/NonSymmetricMatrixException.java
1972= org.apache.commons.math3.linear.NonSymmetricMatrixException:getColumn()	/src/main/java/org/apache/commons/math3/linear/NonSymmetricMatrixException.java
1973= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java
1974= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:LevenbergMarquardtOptimizer(double, double, double, double, double)	/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java
1975= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:determineLMParameter(double[], double, double[], double[], double[], double[])	/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java
1976= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:qTy(double[])	/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java
1977= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:LevenbergMarquardtOptimizer()	/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java
1978= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:qrDecomposition(RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java
1979= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:determineLMDirection(double[], double[], double[], double[])	/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java
1980= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:LevenbergMarquardtOptimizer(ConvergenceChecker<PointVectorValuePair>)	/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java
1981= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:LevenbergMarquardtOptimizer(double, ConvergenceChecker<PointVectorValuePair>, double, double, double, double)	/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java
1982= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:LevenbergMarquardtOptimizer(double, double, double)	/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java
1983= org.apache.commons.math3.optimization.direct.PowellOptimizer.LineSearch:LineSearch(double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java
1984= org.apache.commons.math3.optimization.direct.PowellOptimizer:newPointAndDirection(double[], double[], double)	/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java
1985= org.apache.commons.math3.optimization.direct.PowellOptimizer.LineSearch:value(double)	/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java
1986= org.apache.commons.math3.optimization.direct.PowellOptimizer:LineSearch(double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java
1987= org.apache.commons.math3.optimization.direct.PowellOptimizer:PowellOptimizer(double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java
1988= org.apache.commons.math3.optimization.direct.PowellOptimizer:PowellOptimizer(double, double, double, double, ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java
1989= org.apache.commons.math3.optimization.direct.PowellOptimizer:value(double)	/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java
1990= org.apache.commons.math3.optimization.direct.PowellOptimizer:PowellOptimizer(double, double, ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java
1991= org.apache.commons.math3.optimization.direct.PowellOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java
1992= org.apache.commons.math3.optimization.direct.PowellOptimizer:search(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java
1993= org.apache.commons.math3.optimization.direct.PowellOptimizer:PowellOptimizer(double, double, double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java
1994= org.apache.commons.math3.optimization.direct.PowellOptimizer.LineSearch:search(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java
1995= org.apache.commons.math3.distribution.ExponentialDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
1996= org.apache.commons.math3.distribution.ExponentialDistribution:<clinit0>	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
1997= org.apache.commons.math3.distribution.ExponentialDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
1998= org.apache.commons.math3.distribution.ExponentialDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
1999= org.apache.commons.math3.distribution.ExponentialDistribution:ExponentialDistribution(double, double)	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
2000= org.apache.commons.math3.distribution.ExponentialDistribution:inverseCumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
2001= org.apache.commons.math3.distribution.ExponentialDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
2002= org.apache.commons.math3.distribution.ExponentialDistribution:getSolverAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
2003= org.apache.commons.math3.distribution.ExponentialDistribution:getMean()	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
2004= org.apache.commons.math3.distribution.ExponentialDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
2005= org.apache.commons.math3.distribution.ExponentialDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
2006= org.apache.commons.math3.distribution.ExponentialDistribution:ExponentialDistribution(RandomGenerator, double, double)	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
2007= org.apache.commons.math3.distribution.ExponentialDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
2008= org.apache.commons.math3.distribution.ExponentialDistribution:ExponentialDistribution(RandomGenerator, double)	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
2009= org.apache.commons.math3.distribution.ExponentialDistribution:logDensity(double)	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
2010= org.apache.commons.math3.distribution.ExponentialDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
2011= org.apache.commons.math3.distribution.ExponentialDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
2012= org.apache.commons.math3.distribution.ExponentialDistribution:ExponentialDistribution(double)	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
2013= org.apache.commons.math3.distribution.ExponentialDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java
2014= org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver:RegulaFalsiSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/RegulaFalsiSolver.java
2015= org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver:RegulaFalsiSolver(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/RegulaFalsiSolver.java
2016= org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver:RegulaFalsiSolver()	/src/main/java/org/apache/commons/math3/analysis/solvers/RegulaFalsiSolver.java
2017= org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver:RegulaFalsiSolver(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/RegulaFalsiSolver.java
2018= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:doCopy()	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolator.java
2019= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:GraggBulirschStoerStepInterpolator()	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolator.java
2020= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:computeCoefficients(int, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolator.java
2021= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:GraggBulirschStoerStepInterpolator(double[], double[], double[], double[], double[][], boolean, EquationsMapper, EquationsMapper[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolator.java
2022= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:writeExternal(ObjectOutput)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolator.java
2023= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:estimateError(double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolator.java
2024= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:computeInterpolatedStateAndDerivatives(double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolator.java
2025= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:readExternal(ObjectInput)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolator.java
2026= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:resetTables(int)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolator.java
2027= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:GraggBulirschStoerStepInterpolator(GraggBulirschStoerStepInterpolator)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolator.java
2028= org.apache.commons.math3.util.MultidimensionalCounter.Iterator:getCounts()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2029= org.apache.commons.math3.util.MultidimensionalCounter:remove()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2030= org.apache.commons.math3.util.MultidimensionalCounter:getCounts(int)	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2031= org.apache.commons.math3.util.MultidimensionalCounter:getDimension()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2032= org.apache.commons.math3.util.MultidimensionalCounter:getSize()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2033= org.apache.commons.math3.util.MultidimensionalCounter.Iterator:next()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2034= org.apache.commons.math3.util.MultidimensionalCounter:getCounts()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2035= org.apache.commons.math3.util.MultidimensionalCounter:getCount(int)	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2036= org.apache.commons.math3.util.MultidimensionalCounter:iterator()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2037= org.apache.commons.math3.util.MultidimensionalCounter:getSizes()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2038= org.apache.commons.math3.util.MultidimensionalCounter:next()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2039= org.apache.commons.math3.util.MultidimensionalCounter.Iterator:getCount(int)	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2040= org.apache.commons.math3.util.MultidimensionalCounter.Iterator:remove()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2041= org.apache.commons.math3.util.MultidimensionalCounter:getCount()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2042= org.apache.commons.math3.util.MultidimensionalCounter:Iterator()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2043= org.apache.commons.math3.util.MultidimensionalCounter:toString()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2044= org.apache.commons.math3.util.MultidimensionalCounter:hasNext()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2045= org.apache.commons.math3.util.MultidimensionalCounter.Iterator:Iterator()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2046= org.apache.commons.math3.util.MultidimensionalCounter.Iterator:getCount()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2047= org.apache.commons.math3.util.MultidimensionalCounter:MultidimensionalCounter(int)	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2048= org.apache.commons.math3.util.MultidimensionalCounter.Iterator:hasNext()	/src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java
2049= org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException:getColumn()	/src/main/java/org/apache/commons/math3/linear/NonPositiveDefiniteMatrixException.java
2050= org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException:getRow()	/src/main/java/org/apache/commons/math3/linear/NonPositiveDefiniteMatrixException.java
2051= org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException:getThreshold()	/src/main/java/org/apache/commons/math3/linear/NonPositiveDefiniteMatrixException.java
2052= org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException:NonPositiveDefiniteMatrixException(double, int, double)	/src/main/java/org/apache/commons/math3/linear/NonPositiveDefiniteMatrixException.java
2053= org.apache.commons.math3.geometry.euclidean.twod.SubLine:SubLine(Vector2D, Vector2D, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java
2054= org.apache.commons.math3.geometry.euclidean.twod.SubLine:SubLine(Vector2D, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java
2055= org.apache.commons.math3.geometry.euclidean.twod.SubLine:SubLine(Segment)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java
2056= org.apache.commons.math3.geometry.euclidean.twod.SubLine:getSegments()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java
2057= org.apache.commons.math3.geometry.euclidean.twod.SubLine:buildIntervalSet(Vector2D, Vector2D, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java
2058= org.apache.commons.math3.geometry.euclidean.twod.SubLine:split(Hyperplane<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java
2059= org.apache.commons.math3.geometry.euclidean.twod.SubLine:buildNew(Hyperplane<Euclidean2D>, Region<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java
2060= org.apache.commons.math3.geometry.euclidean.twod.SubLine:side(Hyperplane<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java
2061= org.apache.commons.math3.geometry.euclidean.twod.SubLine:SubLine(Hyperplane<Euclidean2D>, Region<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java
2062= org.apache.commons.math3.geometry.euclidean.twod.SubLine:intersection(SubLine, boolean)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java
2063= org.apache.commons.math3.linear.TriDiagonalTransformer:TriDiagonalTransformer(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/TriDiagonalTransformer.java
2064= org.apache.commons.math3.linear.TriDiagonalTransformer:getQ()	/src/main/java/org/apache/commons/math3/linear/TriDiagonalTransformer.java
2065= org.apache.commons.math3.linear.TriDiagonalTransformer:getQT()	/src/main/java/org/apache/commons/math3/linear/TriDiagonalTransformer.java
2066= org.apache.commons.math3.linear.TriDiagonalTransformer:getT()	/src/main/java/org/apache/commons/math3/linear/TriDiagonalTransformer.java
2067= org.apache.commons.math3.linear.TriDiagonalTransformer:getHouseholderVectorsRef()	/src/main/java/org/apache/commons/math3/linear/TriDiagonalTransformer.java
2068= org.apache.commons.math3.linear.TriDiagonalTransformer:transform()	/src/main/java/org/apache/commons/math3/linear/TriDiagonalTransformer.java
2069= org.apache.commons.math3.linear.TriDiagonalTransformer:getSecondaryDiagonalRef()	/src/main/java/org/apache/commons/math3/linear/TriDiagonalTransformer.java
2070= org.apache.commons.math3.linear.TriDiagonalTransformer:getMainDiagonalRef()	/src/main/java/org/apache/commons/math3/linear/TriDiagonalTransformer.java
2071= org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java
2072= org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java
2073= org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic:setData(double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java
2074= org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic:test(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java
2075= org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic:test(double[], double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java
2076= org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic:getDataRef()	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java
2077= org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic:setData(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java
2078= org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic:evaluate(double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java
2079= org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic:getData()	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java
2080= org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic:evaluate()	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java
2081= org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic:test(double[], int, int, boolean)	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java
2082= org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic:test(double[], double[], int, int, boolean)	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java
2083= org.apache.commons.math3.random.Well1024aTest:testReferenceCode()	/src/test/java/org/apache/commons/math3/random/Well1024aTest.java
2084= org.apache.commons.math3.random.Well1024aTest:makeGenerator()	/src/test/java/org/apache/commons/math3/random/Well1024aTest.java
2085= org.apache.commons.math3.ode.events.EventHandler:eventOccurred(double, double[], boolean)	/src/main/java/org/apache/commons/math3/ode/events/EventHandler.java
2086= org.apache.commons.math3.ode.events.EventHandler:g(double, double[])	/src/main/java/org/apache/commons/math3/ode/events/EventHandler.java
2087= org.apache.commons.math3.ode.events.EventHandler:resetState(double, double[])	/src/main/java/org/apache/commons/math3/ode/events/EventHandler.java
2088= org.apache.commons.math3.ode.events.EventHandler:init(double, double[], double)	/src/main/java/org/apache/commons/math3/ode/events/EventHandler.java
2089= org.apache.commons.math3.complex.ComplexField:getRuntimeClass()	/src/main/java/org/apache/commons/math3/complex/ComplexField.java
2090= org.apache.commons.math3.complex.ComplexField:ComplexField()	/src/main/java/org/apache/commons/math3/complex/ComplexField.java
2091= org.apache.commons.math3.complex.ComplexField:getOne()	/src/main/java/org/apache/commons/math3/complex/ComplexField.java
2092= org.apache.commons.math3.complex.ComplexField:getZero()	/src/main/java/org/apache/commons/math3/complex/ComplexField.java
2093= org.apache.commons.math3.complex.ComplexField:getInstance()	/src/main/java/org/apache/commons/math3/complex/ComplexField.java
2094= org.apache.commons.math3.complex.ComplexField:readResolve()	/src/main/java/org/apache/commons/math3/complex/ComplexField.java
2095= org.apache.commons.math3.optim.nonlinear.scalar.gradient.Preconditioner:precondition(double[], double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner.java
2096= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyInverseTo(Rotation, FieldRotation<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2097= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:FieldRotation(FieldVector3D<T>, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2098= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyTo(FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2099= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyTo(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2100= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:FieldRotation(RotationOrder, T, T, T)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2101= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyInverseTo(double[], T[])	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2102= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyTo(Rotation, FieldRotation<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2103= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyTo(Rotation, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2104= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:revert()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2105= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:getQ0()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2106= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:getQ1()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2107= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:getQ2()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2108= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:getQ3()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2109= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:getAngle()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2110= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:buildArray(T, T, T)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2111= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:FieldRotation(FieldVector3D<T>, T)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2112= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:orthogonalizeMatrix(T[][], double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2113= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyTo(FieldRotation<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2114= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:FieldRotation(FieldVector3D<T>, FieldVector3D<T>, FieldVector3D<T>, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2115= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyInverseTo(FieldRotation<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2116= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:getAngles(RotationOrder)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2117= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyTo(double[], T[])	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2118= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyInverseTo(FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2119= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:FieldRotation(T, T, T, T, boolean)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2120= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:FieldRotation(T[][], double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2121= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:getMatrix()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2122= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:distance(FieldRotation<T>, FieldRotation<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2123= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyInverseTo(Rotation)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2124= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:vector(double, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2125= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyInverseTo(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2126= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyInverseTo(Rotation, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2127= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyInverseTo(T[], T[])	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2128= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyTo(Rotation)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2129= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:getAxis()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2130= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:toRotation()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2131= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:mat2quat(T[][])	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2132= org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:applyTo(T[], T[])	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
2133= org.apache.commons.math3.genetics.Chromosome:getFitness()	/src/main/java/org/apache/commons/math3/genetics/Chromosome.java
2134= org.apache.commons.math3.genetics.Chromosome:compareTo(Chromosome)	/src/main/java/org/apache/commons/math3/genetics/Chromosome.java
2135= org.apache.commons.math3.genetics.Chromosome:searchForFitnessUpdate(Population)	/src/main/java/org/apache/commons/math3/genetics/Chromosome.java
2136= org.apache.commons.math3.genetics.Chromosome:isSame(Chromosome)	/src/main/java/org/apache/commons/math3/genetics/Chromosome.java
2137= org.apache.commons.math3.genetics.Chromosome:findSameChromosome(Population)	/src/main/java/org/apache/commons/math3/genetics/Chromosome.java
2138= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:getNumberOfRegressors()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2139= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:testHat()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2140= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:testWampler3()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2141= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:createRegression()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2142= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:testWampler4()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2143= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:testNewSample2()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2144= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:testNewSampleDataYNull()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2145= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:testYVariance()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2146= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:testWampler1()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2147= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:testWampler2()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2148= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:cannotAddSampleDataWithSizeMismatch()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2149= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:testSwissFertility()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2150= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:setUp()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2151= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:testNewSampleDataXNull()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2152= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:getSampleSize()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2153= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:testLongly()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2154= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:testPerfectFit()	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2155= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:checkVarianceConsistency(OLSMultipleLinearRegression)	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2156= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest:visit(int, int, double)	/src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java
2157= org.apache.commons.math3.optim.PointValuePairTest:testSerial()	/src/test/java/org/apache/commons/math3/optim/PointValuePairTest.java
2158= org.apache.commons.math3.stat.correlation.PearsonsCorrelation:computeCorrelationMatrix(RealMatrix)	/src/main/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelation.java
2159= org.apache.commons.math3.stat.correlation.PearsonsCorrelation:correlation(double[], double[])	/src/main/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelation.java
2160= org.apache.commons.math3.stat.correlation.PearsonsCorrelation:covarianceToCorrelation(RealMatrix)	/src/main/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelation.java
2161= org.apache.commons.math3.stat.correlation.PearsonsCorrelation:PearsonsCorrelation()	/src/main/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelation.java
2162= org.apache.commons.math3.stat.correlation.PearsonsCorrelation:PearsonsCorrelation(double[][])	/src/main/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelation.java
2163= org.apache.commons.math3.stat.correlation.PearsonsCorrelation:getCorrelationPValues()	/src/main/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelation.java
2164= org.apache.commons.math3.stat.correlation.PearsonsCorrelation:PearsonsCorrelation(RealMatrix)	/src/main/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelation.java
2165= org.apache.commons.math3.stat.correlation.PearsonsCorrelation:PearsonsCorrelation(RealMatrix, int)	/src/main/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelation.java
2166= org.apache.commons.math3.stat.correlation.PearsonsCorrelation:checkSufficientData(RealMatrix)	/src/main/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelation.java
2167= org.apache.commons.math3.stat.correlation.PearsonsCorrelation:PearsonsCorrelation(Covariance)	/src/main/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelation.java
2168= org.apache.commons.math3.stat.correlation.PearsonsCorrelation:getCorrelationMatrix()	/src/main/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelation.java
2169= org.apache.commons.math3.stat.correlation.PearsonsCorrelation:getCorrelationStandardErrors()	/src/main/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelation.java
2170= org.apache.commons.math3.stat.correlation.PearsonsCorrelation:computeCorrelationMatrix(double[][])	/src/main/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelation.java
2171= org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory:computeRule(int)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java
2172= org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:build()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java
2173= org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:checker(ConvergenceChecker<Evaluation>)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java
2174= org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:model(MultivariateVectorFunction, MultivariateMatrixFunction)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java
2175= org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:maxIterations(int)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java
2176= org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:checkerPair(ConvergenceChecker<PointVectorValuePair>)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java
2177= org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:start(RealVector)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java
2178= org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:model(MultivariateJacobianFunction)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java
2179= org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:weight(RealMatrix)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java
2180= org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:target(RealVector)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java
2181= org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:target(double[])	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java
2182= org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:start(double[])	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java
2183= org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder:maxEvaluations(int)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java
2184= org.apache.commons.math3.userguide.genetics.Polygon:mutate(float, float)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/Polygon.java
2185= org.apache.commons.math3.userguide.genetics.Polygon:randomPolygon(int)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/Polygon.java
2186= org.apache.commons.math3.userguide.genetics.Polygon:draw(Graphics2D, int, int)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/Polygon.java
2187= org.apache.commons.math3.distribution.BetaDistribution:BetaDistribution(double, double, double)	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2188= org.apache.commons.math3.distribution.BetaDistribution:recomputeZ()	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2189= org.apache.commons.math3.distribution.BetaDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2190= org.apache.commons.math3.distribution.BetaDistribution:getSolverAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2191= org.apache.commons.math3.distribution.BetaDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2192= org.apache.commons.math3.distribution.BetaDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2193= org.apache.commons.math3.distribution.BetaDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2194= org.apache.commons.math3.distribution.BetaDistribution:BetaDistribution(double, double)	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2195= org.apache.commons.math3.distribution.BetaDistribution:getBeta()	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2196= org.apache.commons.math3.distribution.BetaDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2197= org.apache.commons.math3.distribution.BetaDistribution:getAlpha()	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2198= org.apache.commons.math3.distribution.BetaDistribution:BetaDistribution(RandomGenerator, double, double)	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2199= org.apache.commons.math3.distribution.BetaDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2200= org.apache.commons.math3.distribution.BetaDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2201= org.apache.commons.math3.distribution.BetaDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2202= org.apache.commons.math3.distribution.BetaDistribution:BetaDistribution(RandomGenerator, double, double, double)	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2203= org.apache.commons.math3.distribution.BetaDistribution:logDensity(double)	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2204= org.apache.commons.math3.distribution.BetaDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java
2205= org.apache.commons.math3.stat.clustering.DBSCANClusterer:getEps()	/src/main/java/org/apache/commons/math3/stat/clustering/DBSCANClusterer.java
2206= org.apache.commons.math3.stat.clustering.DBSCANClusterer:cluster(Collection<T>)	/src/main/java/org/apache/commons/math3/stat/clustering/DBSCANClusterer.java
2207= org.apache.commons.math3.stat.clustering.DBSCANClusterer:getMinPts()	/src/main/java/org/apache/commons/math3/stat/clustering/DBSCANClusterer.java
2208= org.apache.commons.math3.stat.clustering.DBSCANClusterer:getNeighbors(T, Collection<T>)	/src/main/java/org/apache/commons/math3/stat/clustering/DBSCANClusterer.java
2209= org.apache.commons.math3.stat.clustering.DBSCANClusterer:DBSCANClusterer(double, int)	/src/main/java/org/apache/commons/math3/stat/clustering/DBSCANClusterer.java
2210= org.apache.commons.math3.stat.clustering.DBSCANClusterer:expandCluster(Cluster<T>, T, List<T>, Collection<T>, Map<Clusterable<T>,PointStatus>)	/src/main/java/org/apache/commons/math3/stat/clustering/DBSCANClusterer.java
2211= org.apache.commons.math3.stat.clustering.DBSCANClusterer:merge(List<T>, List<T>)	/src/main/java/org/apache/commons/math3/stat/clustering/DBSCANClusterer.java
2212= org.apache.commons.math3.linear.RealVectorPreservingVisitor:start(int, int, int)	/src/main/java/org/apache/commons/math3/linear/RealVectorPreservingVisitor.java
2213= org.apache.commons.math3.linear.RealVectorPreservingVisitor:visit(int, double)	/src/main/java/org/apache/commons/math3/linear/RealVectorPreservingVisitor.java
2214= org.apache.commons.math3.linear.RealVectorPreservingVisitor:end()	/src/main/java/org/apache/commons/math3/linear/RealVectorPreservingVisitor.java
2215= org.apache.commons.math3.analysis.differentiation.UnivariateFunctionDifferentiator:differentiate(UnivariateFunction)	/src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateFunctionDifferentiator.java
2216= org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor:visitOrder(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundarySizeVisitor.java
2217= org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor:visitInternalNode(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundarySizeVisitor.java
2218= org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor:BoundarySizeVisitor()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundarySizeVisitor.java
2219= org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor:getSize()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundarySizeVisitor.java
2220= org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor:visitLeafNode(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundarySizeVisitor.java
2221= org.apache.commons.math3.random.UnitSphereRandomVectorGenerator:UnitSphereRandomVectorGenerator(int)	/src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java
2222= org.apache.commons.math3.random.UnitSphereRandomVectorGenerator:nextVector()	/src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java
2223= org.apache.commons.math3.random.UnitSphereRandomVectorGenerator:UnitSphereRandomVectorGenerator(int, RandomGenerator)	/src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java
2224= org.apache.commons.math3.exception.NotFiniteNumberException:NotFiniteNumberException(Number, Object)	/src/main/java/org/apache/commons/math3/exception/NotFiniteNumberException.java
2225= org.apache.commons.math3.exception.NotFiniteNumberException:NotFiniteNumberException(Localizable, Number, Object)	/src/main/java/org/apache/commons/math3/exception/NotFiniteNumberException.java
2226= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.MinusElli:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2227= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testInitOutofbounds2()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2228= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testMath864()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2229= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.ElliRotated:ElliRotated(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2230= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testFitAccuracyDependsOnBoundary()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2231= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Cigar:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2232= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testInputSigmaOutOfRange()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2233= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.TwoAxes:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2234= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2235= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:ElliRotated()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2236= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:CigTab()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2237= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Tablet:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2238= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testCigarWithBoundaries()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2239= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.TwoAxes:TwoAxes()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2240= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.CigTab:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2241= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testElliRotated()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2242= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.SsDiffPow:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2243= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:point(int, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2244= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testCigar()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2245= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Elli:Elli(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2246= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Ackley:Ackley()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2247= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testBoundariesDimensionMismatch()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2248= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Basis:GenBasis(int)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2249= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testAckley()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2250= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:Rastrigin(double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2251= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:GenBasis(int)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2252= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Tablet:Tablet(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2253= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:doTest(MultivariateFunction, double[], double[], double[][], GoalType, int, boolean, int, double, double, double, int, PointValuePair)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2254= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:Tablet()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2255= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:ElliRotated(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2256= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testDiffPow()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2257= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:Rastrigin()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2258= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:Rotate(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2259= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Rastrigin:Rastrigin(double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2260= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:TwoAxes()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2261= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testInitOutofbounds1()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2262= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testRosen()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2263= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testTablet()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2264= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Cigar:Cigar()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2265= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Elli:Elli()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2266= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testDiagonalRosen()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2267= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Elli:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2268= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.CigTab:CigTab()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2269= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Cigar:Cigar(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2270= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Rastrigin:Rastrigin()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2271= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.DiffPow:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2272= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:Tablet(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2273= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testInputSigmaDimensionMismatch()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2274= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.CigTab:CigTab(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2275= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Basis:Rotate(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2276= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testMaximize()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2277= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testSsDiffPow()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2278= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:Cigar(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2279= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.ElliRotated:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2280= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testTwoAxes()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2281= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testSphere()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2282= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:Ackley(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2283= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:Cigar()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2284= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Ackley:Ackley(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2285= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Rastrigin:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2286= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testConstrainedRosen()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2287= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Ackley:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2288= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:Ackley()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2289= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testRastrigin()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2290= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testInputSigmaNegative()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2291= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testEllipse()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2292= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Sphere:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2293= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:testCigTab()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2294= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Tablet:Tablet()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2295= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:Elli(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2296= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:boundaries(int, double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2297= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:TwoAxes(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2298= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.ElliRotated:ElliRotated()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2299= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.TwoAxes:TwoAxes(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2300= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.Rosen:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2301= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:CigTab(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2302= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest:Elli()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java
2303= org.apache.commons.math3.ode.SecondOrderDifferentialEquations:computeSecondDerivatives(double, double[], double[], double[])	/src/main/java/org/apache/commons/math3/ode/SecondOrderDifferentialEquations.java
2304= org.apache.commons.math3.ode.SecondOrderDifferentialEquations:getDimension()	/src/main/java/org/apache/commons/math3/ode/SecondOrderDifferentialEquations.java
2305= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:getRMS()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java
2306= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:computeWeightedJacobian(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java
2307= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:setCost(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java
2308= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java
2309= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:computeCovariances(double[], double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java
2310= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:computeSigma(double[], double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java
2311= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:computeResiduals(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java
2312= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:computeCost(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java
2313= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java
2314= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:squareRoot(RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java
2315= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:getChiSquare()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java
2316= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:AbstractLeastSquaresOptimizer(ConvergenceChecker<PointVectorValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java
2317= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:getWeightSquareRoot()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java
2318= org.apache.commons.math3.util.Combinations:next()	/src/main/java/org/apache/commons/math3/util/Combinations.java
2319= org.apache.commons.math3.util.Combinations.SingletonIterator:SingletonIterator(int[])	/src/main/java/org/apache/commons/math3/util/Combinations.java
2320= org.apache.commons.math3.util.Combinations:hasNext()	/src/main/java/org/apache/commons/math3/util/Combinations.java
2321= org.apache.commons.math3.util.Combinations.LexicographicIterator:LexicographicIterator(int, int)	/src/main/java/org/apache/commons/math3/util/Combinations.java
2322= org.apache.commons.math3.util.Combinations.SingletonIterator:hasNext()	/src/main/java/org/apache/commons/math3/util/Combinations.java
2323= org.apache.commons.math3.util.Combinations.LexicographicComparator:LexicographicComparator(int, int)	/src/main/java/org/apache/commons/math3/util/Combinations.java
2324= org.apache.commons.math3.util.Combinations:LexicographicComparator(int, int)	/src/main/java/org/apache/commons/math3/util/Combinations.java
2325= org.apache.commons.math3.util.Combinations:Combinations(int, int, IterationOrder)	/src/main/java/org/apache/commons/math3/util/Combinations.java
2326= org.apache.commons.math3.util.Combinations:getN()	/src/main/java/org/apache/commons/math3/util/Combinations.java
2327= org.apache.commons.math3.util.Combinations.LexicographicIterator:hasNext()	/src/main/java/org/apache/commons/math3/util/Combinations.java
2328= org.apache.commons.math3.util.Combinations:Combinations(int, int)	/src/main/java/org/apache/commons/math3/util/Combinations.java
2329= org.apache.commons.math3.util.Combinations.LexicographicComparator:lexNorm(int[])	/src/main/java/org/apache/commons/math3/util/Combinations.java
2330= org.apache.commons.math3.util.Combinations:LexicographicIterator(int, int)	/src/main/java/org/apache/commons/math3/util/Combinations.java
2331= org.apache.commons.math3.util.Combinations:compare(int[], int[])	/src/main/java/org/apache/commons/math3/util/Combinations.java
2332= org.apache.commons.math3.util.Combinations:iterator()	/src/main/java/org/apache/commons/math3/util/Combinations.java
2333= org.apache.commons.math3.util.Combinations.LexicographicComparator:compare(int[], int[])	/src/main/java/org/apache/commons/math3/util/Combinations.java
2334= org.apache.commons.math3.util.Combinations.LexicographicIterator:remove()	/src/main/java/org/apache/commons/math3/util/Combinations.java
2335= org.apache.commons.math3.util.Combinations:lexNorm(int[])	/src/main/java/org/apache/commons/math3/util/Combinations.java
2336= org.apache.commons.math3.util.Combinations.SingletonIterator:remove()	/src/main/java/org/apache/commons/math3/util/Combinations.java
2337= org.apache.commons.math3.util.Combinations.LexicographicIterator:next()	/src/main/java/org/apache/commons/math3/util/Combinations.java
2338= org.apache.commons.math3.util.Combinations.SingletonIterator:next()	/src/main/java/org/apache/commons/math3/util/Combinations.java
2339= org.apache.commons.math3.util.Combinations:SingletonIterator(int[])	/src/main/java/org/apache/commons/math3/util/Combinations.java
2340= org.apache.commons.math3.util.Combinations:comparator()	/src/main/java/org/apache/commons/math3/util/Combinations.java
2341= org.apache.commons.math3.util.Combinations:getK()	/src/main/java/org/apache/commons/math3/util/Combinations.java
2342= org.apache.commons.math3.util.Combinations:remove()	/src/main/java/org/apache/commons/math3/util/Combinations.java
2343= org.apache.commons.math3.optim.linear.LinearOptimizer:optimize(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/linear/LinearOptimizer.java
2344= org.apache.commons.math3.optim.linear.LinearOptimizer:isRestrictedToNonNegative()	/src/main/java/org/apache/commons/math3/optim/linear/LinearOptimizer.java
2345= org.apache.commons.math3.optim.linear.LinearOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/linear/LinearOptimizer.java
2346= org.apache.commons.math3.optim.linear.LinearOptimizer:LinearOptimizer()	/src/main/java/org/apache/commons/math3/optim/linear/LinearOptimizer.java
2347= org.apache.commons.math3.optim.linear.LinearOptimizer:getFunction()	/src/main/java/org/apache/commons/math3/optim/linear/LinearOptimizer.java
2348= org.apache.commons.math3.optim.linear.LinearOptimizer:getConstraints()	/src/main/java/org/apache/commons/math3/optim/linear/LinearOptimizer.java
2349= org.apache.commons.math3.random.HaltonSequenceGeneratorTest:test2DUnscrambledReference()	/src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java
2350= org.apache.commons.math3.random.HaltonSequenceGeneratorTest:testConstructor2()	/src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java
2351= org.apache.commons.math3.random.HaltonSequenceGeneratorTest:testSkip()	/src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java
2352= org.apache.commons.math3.random.HaltonSequenceGeneratorTest:test3DReference()	/src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java
2353= org.apache.commons.math3.random.HaltonSequenceGeneratorTest:testConstructor()	/src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java
2354= org.apache.commons.math3.random.HaltonSequenceGeneratorTest:setUp()	/src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java
2355= org.apache.commons.math3.stat.interval.WilsonScoreInterval:createInterval(int, int, double)	/src/main/java/org/apache/commons/math3/stat/interval/WilsonScoreInterval.java
2356= org.apache.commons.math3.ode.nonstiff.EulerIntegrator:EulerIntegrator(double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/EulerIntegrator.java
2357= org.apache.commons.math3.analysis.function.Power:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Power.java
2358= org.apache.commons.math3.analysis.function.Power:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Power.java
2359= org.apache.commons.math3.analysis.function.Power:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Power.java
2360= org.apache.commons.math3.analysis.function.Power:Power(double)	/src/main/java/org/apache/commons/math3/analysis/function/Power.java
2361= org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator:SmoothingPolynomialBicubicSplineInterpolator(int)	/src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java
2362= org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator:SmoothingPolynomialBicubicSplineInterpolator(int, int)	/src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java
2363= org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator:interpolate(double[], double[], double[][])	/src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java
2364= org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator:SmoothingPolynomialBicubicSplineInterpolator()	/src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java
2365= org.apache.commons.math3.stat.descriptive.moment.Variance:Variance(Variance)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2366= org.apache.commons.math3.stat.descriptive.moment.Variance:Variance(SecondMoment)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2367= org.apache.commons.math3.stat.descriptive.moment.Variance:evaluate(double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2368= org.apache.commons.math3.stat.descriptive.moment.Variance:Variance()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2369= org.apache.commons.math3.stat.descriptive.moment.Variance:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2370= org.apache.commons.math3.stat.descriptive.moment.Variance:evaluate(double[], double[], double)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2371= org.apache.commons.math3.stat.descriptive.moment.Variance:isBiasCorrected()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2372= org.apache.commons.math3.stat.descriptive.moment.Variance:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2373= org.apache.commons.math3.stat.descriptive.moment.Variance:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2374= org.apache.commons.math3.stat.descriptive.moment.Variance:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2375= org.apache.commons.math3.stat.descriptive.moment.Variance:evaluate(double[], double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2376= org.apache.commons.math3.stat.descriptive.moment.Variance:evaluate(double[], double)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2377= org.apache.commons.math3.stat.descriptive.moment.Variance:evaluate(double[], double, int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2378= org.apache.commons.math3.stat.descriptive.moment.Variance:Variance(boolean, SecondMoment)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2379= org.apache.commons.math3.stat.descriptive.moment.Variance:Variance(boolean)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2380= org.apache.commons.math3.stat.descriptive.moment.Variance:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2381= org.apache.commons.math3.stat.descriptive.moment.Variance:copy(Variance, Variance)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2382= org.apache.commons.math3.stat.descriptive.moment.Variance:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2383= org.apache.commons.math3.stat.descriptive.moment.Variance:setBiasCorrected(boolean)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2384= org.apache.commons.math3.stat.descriptive.moment.Variance:evaluate(double[], double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2385= org.apache.commons.math3.stat.descriptive.moment.Variance:evaluate(double[], double[], double, int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java
2386= org.apache.commons.math3.complex.Quaternion:multiply(Quaternion, Quaternion)	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2387= org.apache.commons.math3.complex.Quaternion:hashCode()	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2388= org.apache.commons.math3.complex.Quaternion:getNorm()	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2389= org.apache.commons.math3.complex.Quaternion:isPureQuaternion(double)	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2390= org.apache.commons.math3.complex.Quaternion:dotProduct(Quaternion)	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2391= org.apache.commons.math3.complex.Quaternion:getVectorPart()	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2392= org.apache.commons.math3.complex.Quaternion:equals(Quaternion, double)	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2393= org.apache.commons.math3.complex.Quaternion:multiply(double)	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2394= org.apache.commons.math3.complex.Quaternion:getQ3()	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2395= org.apache.commons.math3.complex.Quaternion:getQ1()	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2396= org.apache.commons.math3.complex.Quaternion:getQ2()	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2397= org.apache.commons.math3.complex.Quaternion:Quaternion(double[])	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2398= org.apache.commons.math3.complex.Quaternion:isUnitQuaternion(double)	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2399= org.apache.commons.math3.complex.Quaternion:getQ0()	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2400= org.apache.commons.math3.complex.Quaternion:multiply(Quaternion)	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2401= org.apache.commons.math3.complex.Quaternion:normalize()	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2402= org.apache.commons.math3.complex.Quaternion:Quaternion(double, double, double, double)	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2403= org.apache.commons.math3.complex.Quaternion:equals(Object)	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2404= org.apache.commons.math3.complex.Quaternion:subtract(Quaternion)	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2405= org.apache.commons.math3.complex.Quaternion:getScalarPart()	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2406= org.apache.commons.math3.complex.Quaternion:Quaternion(double, double[])	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2407= org.apache.commons.math3.complex.Quaternion:getInverse()	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2408= org.apache.commons.math3.complex.Quaternion:add(Quaternion)	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2409= org.apache.commons.math3.complex.Quaternion:add(Quaternion, Quaternion)	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2410= org.apache.commons.math3.complex.Quaternion:dotProduct(Quaternion, Quaternion)	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2411= org.apache.commons.math3.complex.Quaternion:getConjugate()	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2412= org.apache.commons.math3.complex.Quaternion:getPositivePolarForm()	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2413= org.apache.commons.math3.complex.Quaternion:subtract(Quaternion, Quaternion)	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2414= org.apache.commons.math3.complex.Quaternion:toString()	/src/main/java/org/apache/commons/math3/complex/Quaternion.java
2415= org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator:getSafety()	/src/main/java/org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
2416= org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator:setSafety(double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
2417= org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator:EmbeddedRungeKuttaIntegrator(String, boolean, double[], double[][], double[], RungeKuttaStepInterpolator, double, double, double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
2418= org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator:integrate(ExpandableStatefulODE, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
2419= org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator:getMaxGrowth()	/src/main/java/org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
2420= org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator:setMinReduction(double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
2421= org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator:getOrder()	/src/main/java/org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
2422= org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator:getMinReduction()	/src/main/java/org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
2423= org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator:setMaxGrowth(double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
2424= org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator:EmbeddedRungeKuttaIntegrator(String, boolean, double[], double[][], double[], RungeKuttaStepInterpolator, double, double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
2425= org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator:estimateError(double[][], double[], double[], double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
2426= org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunctionTest:testPrecondition2()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/util/ExponentialDecayFunctionTest.java
2427= org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunctionTest:testPrecondition1()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/util/ExponentialDecayFunctionTest.java
2428= org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunctionTest:testPrecondition4()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/util/ExponentialDecayFunctionTest.java
2429= org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunctionTest:testTrivial()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/util/ExponentialDecayFunctionTest.java
2430= org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunctionTest:testPrecondition3()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/util/ExponentialDecayFunctionTest.java
2431= org.apache.commons.math3.util.FastMathLiteralArrays:loadExpIntB()	/src/main/java/org/apache/commons/math3/util/FastMathLiteralArrays.java
2432= org.apache.commons.math3.util.FastMathLiteralArrays:FastMathLiteralArrays()	/src/main/java/org/apache/commons/math3/util/FastMathLiteralArrays.java
2433= org.apache.commons.math3.util.FastMathLiteralArrays:loadExpIntA()	/src/main/java/org/apache/commons/math3/util/FastMathLiteralArrays.java
2434= org.apache.commons.math3.util.FastMathLiteralArrays:loadExpFracA()	/src/main/java/org/apache/commons/math3/util/FastMathLiteralArrays.java
2435= org.apache.commons.math3.util.FastMathLiteralArrays:loadLnMant()	/src/main/java/org/apache/commons/math3/util/FastMathLiteralArrays.java
2436= org.apache.commons.math3.util.FastMathLiteralArrays:loadExpFracB()	/src/main/java/org/apache/commons/math3/util/FastMathLiteralArrays.java
2437= org.apache.commons.math3.geometry.euclidean.twod.Segment:getStart()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Segment.java
2438= org.apache.commons.math3.geometry.euclidean.twod.Segment:Segment(Vector2D, Vector2D, Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Segment.java
2439= org.apache.commons.math3.geometry.euclidean.twod.Segment:getLine()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Segment.java
2440= org.apache.commons.math3.geometry.euclidean.twod.Segment:distance(Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Segment.java
2441= org.apache.commons.math3.geometry.euclidean.twod.Segment:getEnd()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Segment.java
2442= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:check2PiConsistency()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2443= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:leafBefore(BSPTree<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2444= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:buildNew(BSPTree<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2445= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:computeGeometricalProperties()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2446= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:SubArcsIterator()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2447= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:Split(ArcsSet, ArcsSet)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2448= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:isArcEnd(BSPTree<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2449= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:iterator()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2450= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:childAfter(BSPTree<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2451= org.apache.commons.math3.geometry.spherical.oned.ArcsSet.InconsistentStateAt2PiWrapping:InconsistentStateAt2PiWrapping()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2452= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:ArcsSet(double, double, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2453= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:buildTree(double, double, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2454= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:hasNext()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2455= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:getLastLeaf(BSPTree<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2456= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:asList()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2457= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:previousInternalNode(BSPTree<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2458= org.apache.commons.math3.geometry.spherical.oned.ArcsSet.Split:getMinus()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2459= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:ArcsSet(Collection<SubHyperplane<Sphere1D>>, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2460= org.apache.commons.math3.geometry.spherical.oned.ArcsSet.Split:Split(ArcsSet, ArcsSet)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2461= org.apache.commons.math3.geometry.spherical.oned.ArcsSet.SubArcsIterator:selectPending()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2462= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:ArcsSet(double)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2463= org.apache.commons.math3.geometry.spherical.oned.ArcsSet.SubArcsIterator:remove()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2464= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:isArcStart(BSPTree<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2465= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:leafAfter(BSPTree<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2466= org.apache.commons.math3.geometry.spherical.oned.ArcsSet.SubArcsIterator:next()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2467= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:childBefore(BSPTree<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2468= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:selectPending()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2469= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:projectToBoundary(Point<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2470= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:isBeforeParent(BSPTree<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2471= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:remove()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2472= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:getPlus()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2473= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:split(Arc)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2474= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:getFirstArcStart()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2475= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:isDirect(BSPTree<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2476= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:side(Arc)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2477= org.apache.commons.math3.geometry.spherical.oned.ArcsSet.Split:getPlus()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2478= org.apache.commons.math3.geometry.spherical.oned.ArcsSet.SubArcsIterator:SubArcsIterator()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2479= org.apache.commons.math3.geometry.spherical.oned.ArcsSet.SubArcsIterator:hasNext()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2480= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:InconsistentStateAt2PiWrapping()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2481= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:getFirstLeaf(BSPTree<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2482= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:ArcsSet(BSPTree<Sphere1D>, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2483= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:createSplitPart(List<Double>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2484= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:isAfterParent(BSPTree<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2485= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:getMinus()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2486= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:nextInternalNode(BSPTree<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2487= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:getAngle(BSPTree<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2488= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:next()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2489= org.apache.commons.math3.geometry.spherical.oned.ArcsSet:addArcLimit(BSPTree<Sphere1D>, double, boolean)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSet.java
2490= org.apache.commons.math3.stat.regression.MultipleLinearRegressionAbstractTest:testNewSampleNullData()	/src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java
2491= org.apache.commons.math3.stat.regression.MultipleLinearRegressionAbstractTest:setUp()	/src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java
2492= org.apache.commons.math3.stat.regression.MultipleLinearRegressionAbstractTest:testNewSample()	/src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java
2493= org.apache.commons.math3.stat.regression.MultipleLinearRegressionAbstractTest:getSampleSize()	/src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java
2494= org.apache.commons.math3.stat.regression.MultipleLinearRegressionAbstractTest:canEstimateRegressionParametersVariance()	/src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java
2495= org.apache.commons.math3.stat.regression.MultipleLinearRegressionAbstractTest:canEstimateRegressionParameters()	/src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java
2496= org.apache.commons.math3.stat.regression.MultipleLinearRegressionAbstractTest:createRegression()	/src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java
2497= org.apache.commons.math3.stat.regression.MultipleLinearRegressionAbstractTest:testXSampleDataNull()	/src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java
2498= org.apache.commons.math3.stat.regression.MultipleLinearRegressionAbstractTest:getNumberOfRegressors()	/src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java
2499= org.apache.commons.math3.stat.regression.MultipleLinearRegressionAbstractTest:testNewSampleInvalidData()	/src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java
2500= org.apache.commons.math3.stat.regression.MultipleLinearRegressionAbstractTest:canEstimateResiduals()	/src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java
2501= org.apache.commons.math3.stat.regression.MultipleLinearRegressionAbstractTest:testNewSampleInsufficientData()	/src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java
2502= org.apache.commons.math3.stat.regression.MultipleLinearRegressionAbstractTest:canEstimateRegressandVariance()	/src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java
2503= org.apache.commons.math3.stat.regression.MultipleLinearRegressionAbstractTest:testYSampleDataNull()	/src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java
2504= org.apache.commons.math3.ode.events.EventFilter:init(double, double[], double)	/src/main/java/org/apache/commons/math3/ode/events/EventFilter.java
2505= org.apache.commons.math3.ode.events.EventFilter:g(double, double[])	/src/main/java/org/apache/commons/math3/ode/events/EventFilter.java
2506= org.apache.commons.math3.ode.events.EventFilter:resetState(double, double[])	/src/main/java/org/apache/commons/math3/ode/events/EventFilter.java
2507= org.apache.commons.math3.ode.events.EventFilter:EventFilter(EventHandler, FilterType)	/src/main/java/org/apache/commons/math3/ode/events/EventFilter.java
2508= org.apache.commons.math3.ode.events.EventFilter:eventOccurred(double, double[], boolean)	/src/main/java/org/apache/commons/math3/ode/events/EventFilter.java
2509= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getSumLog()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2510= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getMax()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2511= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getSum()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2512= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getSumImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2513= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getCovariance()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2514= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:setSumsqImpl(StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2515= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:setMeanImpl(StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2516= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getGeometricMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2517= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:setMaxImpl(StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2518= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getMeanImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2519= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:equals(Object)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2520= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getMaxImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2521= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:toString()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2522= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getDimension()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2523= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2524= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getSumLogImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2525= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getMinImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2526= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getSumSq()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2527= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:setGeoMeanImpl(StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2528= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getStandardDeviation()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2529= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getMin()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2530= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:setSumImpl(StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2531= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:setSumLogImpl(StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2532= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getGeoMeanImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2533= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:hashCode()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2534= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:addValue(double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2535= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2536= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getSumsqImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2537= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2538= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:SynchronizedMultivariateSummaryStatistics(int, boolean)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2539= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:setMinImpl(StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java
2540= org.apache.commons.math3.geometry.hull.ConvexHull:getVertices()	/src/main/java/org/apache/commons/math3/geometry/hull/ConvexHull.java
2541= org.apache.commons.math3.geometry.hull.ConvexHull:createRegion()	/src/main/java/org/apache/commons/math3/geometry/hull/ConvexHull.java
2542= org.apache.commons.math3.linear.FieldLUDecomposition:getDeterminant()	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2543= org.apache.commons.math3.linear.FieldLUDecomposition:solve(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2544= org.apache.commons.math3.linear.FieldLUDecomposition:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2545= org.apache.commons.math3.linear.FieldLUDecomposition.Solver:Solver(Field<T>, T[][], int[], boolean)	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2546= org.apache.commons.math3.linear.FieldLUDecomposition:FieldLUDecomposition(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2547= org.apache.commons.math3.linear.FieldLUDecomposition:Solver(Field<T>, T[][], int[], boolean)	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2548= org.apache.commons.math3.linear.FieldLUDecomposition.Solver:solve(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2549= org.apache.commons.math3.linear.FieldLUDecomposition:getSolver()	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2550= org.apache.commons.math3.linear.FieldLUDecomposition.Solver:getInverse()	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2551= org.apache.commons.math3.linear.FieldLUDecomposition:getU()	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2552= org.apache.commons.math3.linear.FieldLUDecomposition.Solver:solve(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2553= org.apache.commons.math3.linear.FieldLUDecomposition:getP()	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2554= org.apache.commons.math3.linear.FieldLUDecomposition:getInverse()	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2555= org.apache.commons.math3.linear.FieldLUDecomposition:solve(ArrayFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2556= org.apache.commons.math3.linear.FieldLUDecomposition.Solver:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2557= org.apache.commons.math3.linear.FieldLUDecomposition:getL()	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2558= org.apache.commons.math3.linear.FieldLUDecomposition:getPivot()	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2559= org.apache.commons.math3.linear.FieldLUDecomposition:solve(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2560= org.apache.commons.math3.linear.FieldLUDecomposition.Solver:solve(ArrayFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
2561= org.apache.commons.math3.analysis.function.Multiply:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Multiply.java
2562= org.apache.commons.math3.exception.NoDataException:NoDataException(Localizable)	/src/main/java/org/apache/commons/math3/exception/NoDataException.java
2563= org.apache.commons.math3.exception.NoDataException:NoDataException()	/src/main/java/org/apache/commons/math3/exception/NoDataException.java
2564= org.apache.commons.math3.optimization.fitting.WeightedObservedPoint:WeightedObservedPoint(double, double, double)	/src/main/java/org/apache/commons/math3/optimization/fitting/WeightedObservedPoint.java
2565= org.apache.commons.math3.optimization.fitting.WeightedObservedPoint:getX()	/src/main/java/org/apache/commons/math3/optimization/fitting/WeightedObservedPoint.java
2566= org.apache.commons.math3.optimization.fitting.WeightedObservedPoint:getY()	/src/main/java/org/apache/commons/math3/optimization/fitting/WeightedObservedPoint.java
2567= org.apache.commons.math3.optimization.fitting.WeightedObservedPoint:getWeight()	/src/main/java/org/apache/commons/math3/optimization/fitting/WeightedObservedPoint.java
2568= org.apache.commons.math3.optimization.linear.LinearOptimizer:getIterations()	/src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java
2569= org.apache.commons.math3.optimization.linear.LinearOptimizer:getMaxIterations()	/src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java
2570= org.apache.commons.math3.optimization.linear.LinearOptimizer:optimize(LinearObjectiveFunction, Collection<LinearConstraint>, GoalType, boolean)	/src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java
2571= org.apache.commons.math3.optimization.linear.LinearOptimizer:setMaxIterations(int)	/src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java
2572= org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:LegendreHighPrecisionRuleFactory()	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java
2573= org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:LegendreHighPrecisionRuleFactory(MathContext)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java
2574= org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:computeRule(int)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java
2575= org.apache.commons.math3.random.EmpiricalDistributionTest.ConstantDistribution:getNumericalMean()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2576= org.apache.commons.math3.random.EmpiricalDistributionTest:testDoubleLoad()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2577= org.apache.commons.math3.random.EmpiricalDistributionTest:testGridTooFat()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2578= org.apache.commons.math3.random.EmpiricalDistributionTest:value(double)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2579= org.apache.commons.math3.random.EmpiricalDistributionTest:verifySame(EmpiricalDistribution, EmpiricalDistribution)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2580= org.apache.commons.math3.random.EmpiricalDistributionTest:testGridTooFine()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2581= org.apache.commons.math3.random.EmpiricalDistributionTest:testLoad()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2582= org.apache.commons.math3.random.EmpiricalDistributionTest.ConstantDistribution:getSupportUpperBound()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2583= org.apache.commons.math3.random.EmpiricalDistributionTest:findBin(double)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2584= org.apache.commons.math3.random.EmpiricalDistributionTest:inverseCumulativeProbability(double)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2585= org.apache.commons.math3.random.EmpiricalDistributionTest.UniformKernelEmpiricalDistribution:getKernel(SummaryStatistics)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2586= org.apache.commons.math3.random.EmpiricalDistributionTest:testLoadNullFile()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2587= org.apache.commons.math3.random.EmpiricalDistributionTest:testKernelOverrideUniform()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2588= org.apache.commons.math3.random.EmpiricalDistributionTest:getSupportUpperBound()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2589= org.apache.commons.math3.random.EmpiricalDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2590= org.apache.commons.math3.random.EmpiricalDistributionTest:UniformKernelEmpiricalDistribution(int)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2591= org.apache.commons.math3.random.EmpiricalDistributionTest:testLoadNullURL()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2592= org.apache.commons.math3.random.EmpiricalDistributionTest.ConstantDistribution:inverseCumulativeProbability(double)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2593= org.apache.commons.math3.random.EmpiricalDistributionTest:getNumericalVariance()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2594= org.apache.commons.math3.random.EmpiricalDistributionTest:tstGen(double)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2595= org.apache.commons.math3.random.EmpiricalDistributionTest:density(double)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2596= org.apache.commons.math3.random.EmpiricalDistributionTest:cumulativeProbability(double)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2597= org.apache.commons.math3.random.EmpiricalDistributionTest.ConstantDistribution:getSupportLowerBound()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2598= org.apache.commons.math3.random.EmpiricalDistributionTest:testDensityIntegrals()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2599= org.apache.commons.math3.random.EmpiricalDistributionTest.ConstantKernelEmpiricalDistribution:ConstantKernelEmpiricalDistribution(int)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2600= org.apache.commons.math3.random.EmpiricalDistributionTest:isSupportConnected()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2601= org.apache.commons.math3.random.EmpiricalDistributionTest:testLoadNullDoubleArray()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2602= org.apache.commons.math3.random.EmpiricalDistributionTest:testKernelOverrideConstant()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2603= org.apache.commons.math3.random.EmpiricalDistributionTest:testGeneratorConfig()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2604= org.apache.commons.math3.random.EmpiricalDistributionTest:testReSeed()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2605= org.apache.commons.math3.random.EmpiricalDistributionTest.UniformKernelEmpiricalDistribution:UniformKernelEmpiricalDistribution(int)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2606= org.apache.commons.math3.random.EmpiricalDistributionTest:tstDoubleGen(double)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2607= org.apache.commons.math3.random.EmpiricalDistributionTest:getNumericalMean()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2608= org.apache.commons.math3.random.EmpiricalDistributionTest:testGetBinUpperBounds()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2609= org.apache.commons.math3.random.EmpiricalDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2610= org.apache.commons.math3.random.EmpiricalDistributionTest:ConstantDistribution(double)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2611= org.apache.commons.math3.random.EmpiricalDistributionTest.ConstantKernelEmpiricalDistribution:getKernel(SummaryStatistics)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2612= org.apache.commons.math3.random.EmpiricalDistributionTest:isSupportUpperBoundInclusive()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2613= org.apache.commons.math3.random.EmpiricalDistributionTest.ConstantDistribution:density(double)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2614= org.apache.commons.math3.random.EmpiricalDistributionTest:testNexFail()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2615= org.apache.commons.math3.random.EmpiricalDistributionTest.ConstantDistribution:sample()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2616= org.apache.commons.math3.random.EmpiricalDistributionTest:testNext()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2617= org.apache.commons.math3.random.EmpiricalDistributionTest.ConstantDistribution:cumulativeProbability(double)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2618= org.apache.commons.math3.random.EmpiricalDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2619= org.apache.commons.math3.random.EmpiricalDistributionTest.ConstantDistribution:isSupportConnected()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2620= org.apache.commons.math3.random.EmpiricalDistributionTest:setUp()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2621= org.apache.commons.math3.random.EmpiricalDistributionTest:findKernel(double, double)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2622= org.apache.commons.math3.random.EmpiricalDistributionTest:ConstantKernelEmpiricalDistribution(int)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2623= org.apache.commons.math3.random.EmpiricalDistributionTest:isSupportLowerBoundInclusive()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2624= org.apache.commons.math3.random.EmpiricalDistributionTest.ConstantDistribution:isSupportLowerBoundInclusive()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2625= org.apache.commons.math3.random.EmpiricalDistributionTest.ConstantDistribution:getNumericalVariance()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2626= org.apache.commons.math3.random.EmpiricalDistributionTest.ConstantDistribution:ConstantDistribution(double)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2627= org.apache.commons.math3.random.EmpiricalDistributionTest.ConstantDistribution:isSupportUpperBoundInclusive()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2628= org.apache.commons.math3.random.EmpiricalDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2629= org.apache.commons.math3.random.EmpiricalDistributionTest:testBinIndexOverflow()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2630= org.apache.commons.math3.random.EmpiricalDistributionTest:testSerialization()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2631= org.apache.commons.math3.random.EmpiricalDistributionTest:checkDistribution()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2632= org.apache.commons.math3.random.EmpiricalDistributionTest:getSupportLowerBound()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2633= org.apache.commons.math3.random.EmpiricalDistributionTest:sample()	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2634= org.apache.commons.math3.random.EmpiricalDistributionTest:getKernel(SummaryStatistics)	/src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java
2635= org.apache.commons.math3.analysis.function.Floor:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Floor.java
2636= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:SerializationProxy(boolean, boolean, SquareNeighbourhood, double[][][])	/src/main/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D.java
2637= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:getNetwork()	/src/main/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D.java
2638= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:getNumberOfRows()	/src/main/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D.java
2639= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:getNumberOfColumns()	/src/main/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D.java
2640= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.SerializationProxy:readResolve()	/src/main/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D.java
2641= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:writeReplace()	/src/main/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D.java
2642= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:readResolve()	/src/main/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D.java
2643= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:createLinks()	/src/main/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D.java
2644= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.SerializationProxy:SerializationProxy(boolean, boolean, SquareNeighbourhood, double[][][])	/src/main/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D.java
2645= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:NeuronSquareMesh2D(int, boolean, int, boolean, SquareNeighbourhood, FeatureInitializer[])	/src/main/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D.java
2646= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:NeuronSquareMesh2D(boolean, boolean, SquareNeighbourhood, double[][][])	/src/main/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D.java
2647= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:getNeuron(int, int)	/src/main/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D.java
2648= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D:readObject(ObjectInputStream)	/src/main/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D.java
2649= org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor:visitLeafNode(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTreeVisitor.java
2650= org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor:visitInternalNode(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTreeVisitor.java
2651= org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor:visitOrder(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTreeVisitor.java
2652= org.apache.commons.math3.genetics.FixedGenerationCount:isSatisfied(Population)	/src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java
2653= org.apache.commons.math3.genetics.FixedGenerationCount:FixedGenerationCount(int)	/src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java
2654= org.apache.commons.math3.genetics.FixedGenerationCount:getNumGenerations()	/src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java
2655= org.apache.commons.math3.distribution.RealDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
2656= org.apache.commons.math3.distribution.RealDistribution:sample(int)	/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
2657= org.apache.commons.math3.distribution.RealDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
2658= org.apache.commons.math3.distribution.RealDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
2659= org.apache.commons.math3.distribution.RealDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
2660= org.apache.commons.math3.distribution.RealDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
2661= org.apache.commons.math3.distribution.RealDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
2662= org.apache.commons.math3.distribution.RealDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
2663= org.apache.commons.math3.distribution.RealDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
2664= org.apache.commons.math3.distribution.RealDistribution:cumulativeProbability(double, double)	/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
2665= org.apache.commons.math3.distribution.RealDistribution:probability(double)	/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
2666= org.apache.commons.math3.distribution.RealDistribution:inverseCumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
2667= org.apache.commons.math3.distribution.RealDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
2668= org.apache.commons.math3.distribution.RealDistribution:reseedRandomGenerator(long)	/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
2669= org.apache.commons.math3.distribution.RealDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/RealDistribution.java
2670= org.apache.commons.math3.exception.MathInternalError:MathInternalError()	/src/main/java/org/apache/commons/math3/exception/MathInternalError.java
2671= org.apache.commons.math3.exception.MathInternalError:MathInternalError(Localizable, Object)	/src/main/java/org/apache/commons/math3/exception/MathInternalError.java
2672= org.apache.commons.math3.exception.MathInternalError:MathInternalError(Throwable)	/src/main/java/org/apache/commons/math3/exception/MathInternalError.java
2673= org.apache.commons.math3.distribution.UniformRealDistribution:UniformRealDistribution()	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2674= org.apache.commons.math3.distribution.UniformRealDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2675= org.apache.commons.math3.distribution.UniformRealDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2676= org.apache.commons.math3.distribution.UniformRealDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2677= org.apache.commons.math3.distribution.UniformRealDistribution:UniformRealDistribution(double, double, double)	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2678= org.apache.commons.math3.distribution.UniformRealDistribution:UniformRealDistribution(RandomGenerator, double, double)	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2679= org.apache.commons.math3.distribution.UniformRealDistribution:UniformRealDistribution(RandomGenerator, double, double, double)	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2680= org.apache.commons.math3.distribution.UniformRealDistribution:inverseCumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2681= org.apache.commons.math3.distribution.UniformRealDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2682= org.apache.commons.math3.distribution.UniformRealDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2683= org.apache.commons.math3.distribution.UniformRealDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2684= org.apache.commons.math3.distribution.UniformRealDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2685= org.apache.commons.math3.distribution.UniformRealDistribution:UniformRealDistribution(double, double)	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2686= org.apache.commons.math3.distribution.UniformRealDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2687= org.apache.commons.math3.distribution.UniformRealDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2688= org.apache.commons.math3.distribution.UniformRealDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
2689= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:getConvergenceChecker()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2690= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:getTarget()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2691= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:getWeightRef()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2692= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:computeObjectiveValue(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2693= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2694= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:optimize(int, FUNC, OptimizationData)	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2695= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:setUp()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2696= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:BaseAbstractMultivariateVectorOptimizer()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2697= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:getWeight()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2698= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:getStartPoint()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2699= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:optimize(int, FUNC, double[], double[], double[])	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2700= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:getMaxEvaluations()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2701= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:getTargetRef()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2702= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:optimizeInternal(int, FUNC, OptimizationData)	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2703= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:BaseAbstractMultivariateVectorOptimizer(ConvergenceChecker<PointVectorValuePair>)	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2704= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:getEvaluations()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2705= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:optimizeInternal(int, FUNC, double[], double[], double[])	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2706= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:getObjectiveFunction()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2707= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2708= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:checkParameters()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java
2709= org.apache.commons.math3.random.ValueServer:getNextGaussian()	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2710= org.apache.commons.math3.random.ValueServer:reSeed(long)	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2711= org.apache.commons.math3.random.ValueServer:getNextExponential()	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2712= org.apache.commons.math3.random.ValueServer:fill(double[])	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2713= org.apache.commons.math3.random.ValueServer:fill(int)	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2714= org.apache.commons.math3.random.ValueServer:computeDistribution()	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2715= org.apache.commons.math3.random.ValueServer:setMu(double)	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2716= org.apache.commons.math3.random.ValueServer:getNextUniform()	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2717= org.apache.commons.math3.random.ValueServer:closeReplayFile()	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2718= org.apache.commons.math3.random.ValueServer:resetReplayFile()	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2719= org.apache.commons.math3.random.ValueServer:setSigma(double)	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2720= org.apache.commons.math3.random.ValueServer:ValueServer()	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2721= org.apache.commons.math3.random.ValueServer:getEmpiricalDistribution()	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2722= org.apache.commons.math3.random.ValueServer:getNextReplay()	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2723= org.apache.commons.math3.random.ValueServer:computeDistribution(int)	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2724= org.apache.commons.math3.random.ValueServer:getMu()	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2725= org.apache.commons.math3.random.ValueServer:ValueServer(RandomDataImpl)	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2726= org.apache.commons.math3.random.ValueServer:getNextDigest()	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2727= org.apache.commons.math3.random.ValueServer:ValueServer(RandomGenerator)	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2728= org.apache.commons.math3.random.ValueServer:getMode()	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2729= org.apache.commons.math3.random.ValueServer:getNext()	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2730= org.apache.commons.math3.random.ValueServer:setMode(int)	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2731= org.apache.commons.math3.random.ValueServer:setValuesFileURL(URL)	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2732= org.apache.commons.math3.random.ValueServer:getValuesFileURL()	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2733= org.apache.commons.math3.random.ValueServer:getSigma()	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2734= org.apache.commons.math3.random.ValueServer:setValuesFileURL(String)	/src/main/java/org/apache/commons/math3/random/ValueServer.java
2735= org.apache.commons.math3.linear.RealMatrixFormat:getFormat()	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2736= org.apache.commons.math3.linear.RealMatrixFormat:format(RealMatrix, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2737= org.apache.commons.math3.linear.RealMatrixFormat:getAvailableLocales()	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2738= org.apache.commons.math3.linear.RealMatrixFormat:getRowSuffix()	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2739= org.apache.commons.math3.linear.RealMatrixFormat:getPrefix()	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2740= org.apache.commons.math3.linear.RealMatrixFormat:RealMatrixFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2741= org.apache.commons.math3.linear.RealMatrixFormat:RealMatrixFormat()	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2742= org.apache.commons.math3.linear.RealMatrixFormat:RealMatrixFormat(String, String, String, String, String, String, NumberFormat)	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2743= org.apache.commons.math3.linear.RealMatrixFormat:format(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2744= org.apache.commons.math3.linear.RealMatrixFormat:getRowSeparator()	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2745= org.apache.commons.math3.linear.RealMatrixFormat:getInstance()	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2746= org.apache.commons.math3.linear.RealMatrixFormat:getInstance(Locale)	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2747= org.apache.commons.math3.linear.RealMatrixFormat:parse(String, ParsePosition)	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2748= org.apache.commons.math3.linear.RealMatrixFormat:parse(String)	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2749= org.apache.commons.math3.linear.RealMatrixFormat:getRowPrefix()	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2750= org.apache.commons.math3.linear.RealMatrixFormat:RealMatrixFormat(String, String, String, String, String, String)	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2751= org.apache.commons.math3.linear.RealMatrixFormat:getColumnSeparator()	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2752= org.apache.commons.math3.linear.RealMatrixFormat:getSuffix()	/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
2753= org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver:NewtonRaphsonSolver()	/src/main/java/org/apache/commons/math3/analysis/solvers/NewtonRaphsonSolver.java
2754= org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver:NewtonRaphsonSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/NewtonRaphsonSolver.java
2755= org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver:doSolve()	/src/main/java/org/apache/commons/math3/analysis/solvers/NewtonRaphsonSolver.java
2756= org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver:solve(int, UnivariateDifferentiableFunction, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/NewtonRaphsonSolver.java
2757= org.apache.commons.math3.ode.nonstiff.LutherIntegrator:LutherIntegrator(double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/LutherIntegrator.java
2758= org.apache.commons.math3.optim.linear.LinearConstraint:getRelationship()	/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraint.java
2759= org.apache.commons.math3.optim.linear.LinearConstraint:LinearConstraint(double[], Relationship, double)	/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraint.java
2760= org.apache.commons.math3.optim.linear.LinearConstraint:equals(Object)	/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraint.java
2761= org.apache.commons.math3.optim.linear.LinearConstraint:readObject(ObjectInputStream)	/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraint.java
2762= org.apache.commons.math3.optim.linear.LinearConstraint:hashCode()	/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraint.java
2763= org.apache.commons.math3.optim.linear.LinearConstraint:LinearConstraint(RealVector, Relationship, double)	/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraint.java
2764= org.apache.commons.math3.optim.linear.LinearConstraint:writeObject(ObjectOutputStream)	/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraint.java
2765= org.apache.commons.math3.optim.linear.LinearConstraint:getCoefficients()	/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraint.java
2766= org.apache.commons.math3.optim.linear.LinearConstraint:getValue()	/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraint.java
2767= org.apache.commons.math3.optim.linear.LinearConstraint:LinearConstraint(RealVector, double, Relationship, RealVector, double)	/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraint.java
2768= org.apache.commons.math3.optim.linear.LinearConstraint:LinearConstraint(double[], double, Relationship, double[], double)	/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraint.java
2769= org.apache.commons.math3.util.FastMath:getExponent(float)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2770= org.apache.commons.math3.util.FastMath.ExpFracTable:<clinit0>	/src/main/java/org/apache/commons/math3/util/FastMath.java
2771= org.apache.commons.math3.util.FastMath:cosh(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2772= org.apache.commons.math3.util.FastMath:ceil(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2773= org.apache.commons.math3.util.FastMath:signum(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2774= org.apache.commons.math3.util.FastMath.CodyWaite:getRemB()	/src/main/java/org/apache/commons/math3/util/FastMath.java
2775= org.apache.commons.math3.util.FastMath:nextUp(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2776= org.apache.commons.math3.util.FastMath:asinh(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2777= org.apache.commons.math3.util.FastMath:round(float)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2778= org.apache.commons.math3.util.FastMath:nextUp(float)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2779= org.apache.commons.math3.util.FastMath:doubleHighPart(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2780= org.apache.commons.math3.util.FastMath:<clinit0>	/src/main/java/org/apache/commons/math3/util/FastMath.java
2781= org.apache.commons.math3.util.FastMath:sqrt(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2782= org.apache.commons.math3.util.FastMath:CodyWaite(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2783= org.apache.commons.math3.util.FastMath.CodyWaite:getK()	/src/main/java/org/apache/commons/math3/util/FastMath.java
2784= org.apache.commons.math3.util.FastMath:ulp(float)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2785= org.apache.commons.math3.util.FastMath:exp(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2786= org.apache.commons.math3.util.FastMath:max(float, float)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2787= org.apache.commons.math3.util.FastMath:max(long, long)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2788= org.apache.commons.math3.util.FastMath:acos(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2789= org.apache.commons.math3.util.FastMath:sinQ(double, double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2790= org.apache.commons.math3.util.FastMath:exp(double, double, double[])	/src/main/java/org/apache/commons/math3/util/FastMath.java
2791= org.apache.commons.math3.util.FastMath:polySine(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2792= org.apache.commons.math3.util.FastMath:cbrt(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2793= org.apache.commons.math3.util.FastMath:cos(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2794= org.apache.commons.math3.util.FastMath:min(int, int)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2795= org.apache.commons.math3.util.FastMath:scalb(float, int)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2796= org.apache.commons.math3.util.FastMath:log(double, double[])	/src/main/java/org/apache/commons/math3/util/FastMath.java
2797= org.apache.commons.math3.util.FastMath:max(int, int)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2798= org.apache.commons.math3.util.FastMath:atan(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2799= org.apache.commons.math3.util.FastMath:acosh(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2800= org.apache.commons.math3.util.FastMath:toRadians(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2801= org.apache.commons.math3.util.FastMath:signum(float)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2802= org.apache.commons.math3.util.FastMath:log(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2803= org.apache.commons.math3.util.FastMath:log(double, double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2804= org.apache.commons.math3.util.FastMath:rint(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2805= org.apache.commons.math3.util.FastMath:getRemA()	/src/main/java/org/apache/commons/math3/util/FastMath.java
2806= org.apache.commons.math3.util.FastMath:log1p(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2807= org.apache.commons.math3.util.FastMath:toDegrees(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2808= org.apache.commons.math3.util.FastMath:getExponent(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2809= org.apache.commons.math3.util.FastMath:sin(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2810= org.apache.commons.math3.util.FastMath:atanh(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2811= org.apache.commons.math3.util.FastMath:abs(int)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2812= org.apache.commons.math3.util.FastMath.CodyWaite:CodyWaite(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2813= org.apache.commons.math3.util.FastMath:reducePayneHanek(double, double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2814= org.apache.commons.math3.util.FastMath:nextAfter(float, double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2815= org.apache.commons.math3.util.FastMath:asin(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2816= org.apache.commons.math3.util.FastMath:min(double, double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2817= org.apache.commons.math3.util.FastMath:max(double, double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2818= org.apache.commons.math3.util.FastMath.CodyWaite:getRemA()	/src/main/java/org/apache/commons/math3/util/FastMath.java
2819= org.apache.commons.math3.util.FastMath.ExpIntTable:<clinit0>	/src/main/java/org/apache/commons/math3/util/FastMath.java
2820= org.apache.commons.math3.util.FastMath:main(String[])	/src/main/java/org/apache/commons/math3/util/FastMath.java
2821= org.apache.commons.math3.util.FastMath:atan2(double, double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2822= org.apache.commons.math3.util.FastMath:ulp(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2823= org.apache.commons.math3.util.FastMath:scalb(double, int)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2824= org.apache.commons.math3.util.FastMath:<clinit2>	/src/main/java/org/apache/commons/math3/util/FastMath.java
2825= org.apache.commons.math3.util.FastMath:tan(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2826= org.apache.commons.math3.util.FastMath:abs(long)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2827= org.apache.commons.math3.util.FastMath:cosQ(double, double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2828= org.apache.commons.math3.util.FastMath:abs(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2829= org.apache.commons.math3.util.FastMath:hypot(double, double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2830= org.apache.commons.math3.util.FastMath:atan(double, double, boolean)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2831= org.apache.commons.math3.util.FastMath:pow(double, double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2832= org.apache.commons.math3.util.FastMath:min(long, long)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2833= org.apache.commons.math3.util.FastMath:copySign(double, double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2834= org.apache.commons.math3.util.FastMath:IEEEremainder(double, double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2835= org.apache.commons.math3.util.FastMath:tanQ(double, double, boolean)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2836= org.apache.commons.math3.util.FastMath:pow(double, int)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2837= org.apache.commons.math3.util.FastMath.lnMant:<clinit0>	/src/main/java/org/apache/commons/math3/util/FastMath.java
2838= org.apache.commons.math3.util.FastMath:FastMath()	/src/main/java/org/apache/commons/math3/util/FastMath.java
2839= org.apache.commons.math3.util.FastMath:tanh(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2840= org.apache.commons.math3.util.FastMath:log10(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2841= org.apache.commons.math3.util.FastMath:nextAfter(double, double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2842= org.apache.commons.math3.util.FastMath:round(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2843= org.apache.commons.math3.util.FastMath:getK()	/src/main/java/org/apache/commons/math3/util/FastMath.java
2844= org.apache.commons.math3.util.FastMath:copySign(float, float)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2845= org.apache.commons.math3.util.FastMath:expm1(double, double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2846= org.apache.commons.math3.util.FastMath:min(float, float)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2847= org.apache.commons.math3.util.FastMath:<clinit1>	/src/main/java/org/apache/commons/math3/util/FastMath.java
2848= org.apache.commons.math3.util.FastMath:getRemB()	/src/main/java/org/apache/commons/math3/util/FastMath.java
2849= org.apache.commons.math3.util.FastMath:sinh(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2850= org.apache.commons.math3.util.FastMath:random()	/src/main/java/org/apache/commons/math3/util/FastMath.java
2851= org.apache.commons.math3.util.FastMath:expm1(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2852= org.apache.commons.math3.util.FastMath:polyCosine(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2853= org.apache.commons.math3.util.FastMath:abs(float)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2854= org.apache.commons.math3.util.FastMath:floor(double)	/src/main/java/org/apache/commons/math3/util/FastMath.java
2855= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat:Vector3DFormat(String, String, String, NumberFormat)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat.java
2856= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat:getInstance(Locale)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat.java
2857= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat:Vector3DFormat()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat.java
2858= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat:getInstance()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat.java
2859= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat:Vector3DFormat(String, String, String)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat.java
2860= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat:Vector3DFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat.java
2861= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat:parse(String, ParsePosition)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat.java
2862= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat:parse(String)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat.java
2863= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat:format(Vector<Euclidean3D>, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat.java
2864= org.apache.commons.math3.optim.SimplePointCheckerTest:testIterationCheck()	/src/test/java/org/apache/commons/math3/optim/SimplePointCheckerTest.java
2865= org.apache.commons.math3.optim.SimplePointCheckerTest:testIterationCheckDisabled()	/src/test/java/org/apache/commons/math3/optim/SimplePointCheckerTest.java
2866= org.apache.commons.math3.optim.SimplePointCheckerTest:testIterationCheckPrecondition()	/src/test/java/org/apache/commons/math3/optim/SimplePointCheckerTest.java
2867= org.apache.commons.math3.stat.clustering.EuclideanDoublePoint:centroidOf(Collection<EuclideanDoublePoint>)	/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java
2868= org.apache.commons.math3.stat.clustering.EuclideanDoublePoint:distanceFrom(EuclideanDoublePoint)	/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java
2869= org.apache.commons.math3.stat.clustering.EuclideanDoublePoint:EuclideanDoublePoint(double[])	/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java
2870= org.apache.commons.math3.stat.clustering.EuclideanDoublePoint:equals(Object)	/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java
2871= org.apache.commons.math3.stat.clustering.EuclideanDoublePoint:getPoint()	/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java
2872= org.apache.commons.math3.stat.clustering.EuclideanDoublePoint:toString()	/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java
2873= org.apache.commons.math3.stat.clustering.EuclideanDoublePoint:hashCode()	/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java
2874= org.apache.commons.math3.userguide.genetics.RandomPolygonMutation:mutate(Chromosome)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/RandomPolygonMutation.java
2875= org.apache.commons.math3.userguide.genetics.RandomPolygonMutation:RandomPolygonMutation(float, float)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/RandomPolygonMutation.java
2876= org.apache.commons.math3.stat.StatUtils:product(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2877= org.apache.commons.math3.stat.StatUtils:percentile(double[], double)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2878= org.apache.commons.math3.stat.StatUtils:variance(double[], double, int, int)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2879= org.apache.commons.math3.stat.StatUtils:max(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2880= org.apache.commons.math3.stat.StatUtils:sumLog(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2881= org.apache.commons.math3.stat.StatUtils:mode(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2882= org.apache.commons.math3.stat.StatUtils:min(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2883= org.apache.commons.math3.stat.StatUtils:mean(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2884= org.apache.commons.math3.stat.StatUtils:product(double[])	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2885= org.apache.commons.math3.stat.StatUtils:geometricMean(double[])	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2886= org.apache.commons.math3.stat.StatUtils:variance(double[])	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2887= org.apache.commons.math3.stat.StatUtils:varianceDifference(double[], double[], double)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2888= org.apache.commons.math3.stat.StatUtils:sum(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2889= org.apache.commons.math3.stat.StatUtils:percentile(double[], int, int, double)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2890= org.apache.commons.math3.stat.StatUtils:variance(double[], double)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2891= org.apache.commons.math3.stat.StatUtils:sumDifference(double[], double[])	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2892= org.apache.commons.math3.stat.StatUtils:max(double[])	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2893= org.apache.commons.math3.stat.StatUtils:geometricMean(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2894= org.apache.commons.math3.stat.StatUtils:meanDifference(double[], double[])	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2895= org.apache.commons.math3.stat.StatUtils:variance(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2896= org.apache.commons.math3.stat.StatUtils:sum(double[])	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2897= org.apache.commons.math3.stat.StatUtils:mean(double[])	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2898= org.apache.commons.math3.stat.StatUtils:sumSq(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2899= org.apache.commons.math3.stat.StatUtils:min(double[])	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2900= org.apache.commons.math3.stat.StatUtils:sumSq(double[])	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2901= org.apache.commons.math3.stat.StatUtils:normalize(double[])	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2902= org.apache.commons.math3.stat.StatUtils:populationVariance(double[], double, int, int)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2903= org.apache.commons.math3.stat.StatUtils:StatUtils()	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2904= org.apache.commons.math3.stat.StatUtils:populationVariance(double[], double)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2905= org.apache.commons.math3.stat.StatUtils:populationVariance(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2906= org.apache.commons.math3.stat.StatUtils:sumLog(double[])	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2907= org.apache.commons.math3.stat.StatUtils:getMode(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2908= org.apache.commons.math3.stat.StatUtils:populationVariance(double[])	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2909= org.apache.commons.math3.stat.StatUtils:mode(double[])	/src/main/java/org/apache/commons/math3/stat/StatUtils.java
2910= org.apache.commons.math3.ode.SecondaryEquations:getDimension()	/src/main/java/org/apache/commons/math3/ode/SecondaryEquations.java
2911= org.apache.commons.math3.ode.SecondaryEquations:computeDerivatives(double, double[], double[], double[], double[])	/src/main/java/org/apache/commons/math3/ode/SecondaryEquations.java
2912= org.apache.commons.math3.complex.ComplexUtils:convertToComplex(double[])	/src/main/java/org/apache/commons/math3/complex/ComplexUtils.java
2913= org.apache.commons.math3.complex.ComplexUtils:ComplexUtils()	/src/main/java/org/apache/commons/math3/complex/ComplexUtils.java
2914= org.apache.commons.math3.complex.ComplexUtils:polar2Complex(double, double)	/src/main/java/org/apache/commons/math3/complex/ComplexUtils.java
2915= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testRegressAirlineConstantInternal()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2916= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testHdiag()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2917= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testRegressAirlineConstantExternal()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2918= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testWampler1()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2919= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testWampler2()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2920= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testNegativeTestAddMultipleObs()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2921= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testThreeRedundantColumn()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2922= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testNegativeTestAddObs()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2923= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:MillerUpdatingRegressionTest()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2924= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testFilippelli()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2925= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testAddObsGetNClear()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2926= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testOneRedundantColumn()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2927= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testWampler3()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2928= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testWampler4()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2929= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testSubsetRegression()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2930= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testHasIntercept()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2931= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testLongly()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2932= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testPCorr()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2933= org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest:testHdiagConstant()	/src/test/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegressionTest.java
2934= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.Gaussian2D:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2935= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest:getMaximumPosition()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2936= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest:testMath283()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2937= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest:Gaussian2D(double, double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2938= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest:testPowell()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2939= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest:testBoundsUnsupported()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2940= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest:testMinimize1()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2941= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest:testMinimize2()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2942= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.FourExtrema:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2943= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.Gaussian2D:Gaussian2D(double, double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2944= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest:getMaximum()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2945= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest:testRosenbrock()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2946= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2947= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.Gaussian2D:getMaximum()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2948= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.Gaussian2D:getMaximumPosition()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2949= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest:testMaximize1()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2950= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest:testMaximize2()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java
2951= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:NonLinearConjugateGradientOptimizer(Formula, ConvergenceChecker<PointValuePair>, double, double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
2952= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
2953= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.IdentityPreconditioner:precondition(double[], double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
2954= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
2955= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.BracketingStep:BracketingStep(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
2956= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:getBracketingStep()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
2957= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:NonLinearConjugateGradientOptimizer(Formula, ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
2958= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:BracketingStep(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
2959= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:NonLinearConjugateGradientOptimizer(Formula, ConvergenceChecker<PointValuePair>, UnivariateSolver)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
2960= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:NonLinearConjugateGradientOptimizer(Formula, ConvergenceChecker<PointValuePair>, double, double, double, Preconditioner)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
2961= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:precondition(double[], double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
2962= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.BracketingStep:getBracketingStep()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
2963= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:checkParameters()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
2964= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:NonLinearConjugateGradientOptimizer(Formula, ConvergenceChecker<PointValuePair>, UnivariateSolver, Preconditioner)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
2965= org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:optimize(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
2966= org.apache.commons.math3.stat.descriptive.SummaryStatistics:setMeanImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2967= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getVariance()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2968= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getMeanImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2969= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getMaxImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2970= org.apache.commons.math3.stat.descriptive.SummaryStatistics:setSumLogImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2971= org.apache.commons.math3.stat.descriptive.SummaryStatistics:setSumImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2972= org.apache.commons.math3.stat.descriptive.SummaryStatistics:checkEmpty()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2973= org.apache.commons.math3.stat.descriptive.SummaryStatistics:copy(SummaryStatistics, SummaryStatistics)	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2974= org.apache.commons.math3.stat.descriptive.SummaryStatistics:hashCode()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2975= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getSum()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2976= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getSumOfLogs()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2977= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getSumsqImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2978= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getGeoMeanImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2979= org.apache.commons.math3.stat.descriptive.SummaryStatistics:setVarianceImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2980= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getSumLogImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2981= org.apache.commons.math3.stat.descriptive.SummaryStatistics:SummaryStatistics(SummaryStatistics)	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2982= org.apache.commons.math3.stat.descriptive.SummaryStatistics:setSumsqImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2983= org.apache.commons.math3.stat.descriptive.SummaryStatistics:setMaxImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2984= org.apache.commons.math3.stat.descriptive.SummaryStatistics:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2985= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getPopulationVariance()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2986= org.apache.commons.math3.stat.descriptive.SummaryStatistics:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2987= org.apache.commons.math3.stat.descriptive.SummaryStatistics:addValue(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2988= org.apache.commons.math3.stat.descriptive.SummaryStatistics:toString()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2989= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2990= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2991= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getSumsq()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2992= org.apache.commons.math3.stat.descriptive.SummaryStatistics:SummaryStatistics()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2993= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getSumImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2994= org.apache.commons.math3.stat.descriptive.SummaryStatistics:equals(Object)	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2995= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getMinImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2996= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getMax()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2997= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getVarianceImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2998= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getSummary()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
2999= org.apache.commons.math3.stat.descriptive.SummaryStatistics:setMinImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
3000= org.apache.commons.math3.stat.descriptive.SummaryStatistics:setGeoMeanImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
3001= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getStandardDeviation()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
3002= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getMin()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
3003= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getGeometricMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
3004= org.apache.commons.math3.stat.descriptive.SummaryStatistics:getSecondMoment()	/src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java
3005= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:setCost(double)	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3006= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:getCovariances()	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3007= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:getJacobianEvaluations()	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3008= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:guessParametersErrors()	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3009= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:optimizeInternal(int, MultivariateDifferentiableVectorFunction, OptimizationData)	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3010= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:computeCovariances(double[], double)	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3011= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:squareRoot(RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3012= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:updateResidualsAndCost()	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3013= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:AbstractLeastSquaresOptimizer(ConvergenceChecker<PointVectorValuePair>)	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3014= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:optimize(int, MultivariateDifferentiableVectorFunction, double[], double[], double[])	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3015= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:computeResiduals(double[])	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3016= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:AbstractLeastSquaresOptimizer()	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3017= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:computeCost(double[])	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3018= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:computeSigma(double[], double)	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3019= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:updateJacobian()	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3020= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:getRMS()	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3021= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:getChiSquare()	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3022= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:computeWeightedJacobian(double[])	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3023= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:getCovariances(double)	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3024= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:optimize(int, DifferentiableMultivariateVectorFunction, double[], double[], double[])	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3025= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:getWeightSquareRoot()	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3026= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:setUp()	/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
3027= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:getCostRelativeTolerance()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3028= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:getInitialStepBoundFactor()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3029= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:getRankingThreshold()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3030= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:determineLMParameter(double[], double, double[], InternalData, int, double[], double[], double[], double[], double)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3031= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:withRankingThreshold(double)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3032= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.InternalData:InternalData(double[][], int[], int, double[], double[], double[])	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3033= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:getOrthoTolerance()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3034= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:InternalData(double[][], int[], int, double[], double[], double[])	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3035= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:LevenbergMarquardtOptimizer()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3036= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:withParameterRelativeTolerance(double)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3037= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:optimize(LeastSquaresProblem)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3038= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:LevenbergMarquardtOptimizer(double, double, double, double, double)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3039= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:withOrthoTolerance(double)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3040= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:qrDecomposition(RealMatrix, int)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3041= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:qTy(double[], InternalData)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3042= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:determineLMDirection(double[], double[], double[], InternalData, int, double[], double[])	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3043= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:getParameterRelativeTolerance()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3044= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:withCostRelativeTolerance(double)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3045= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:withInitialStepBoundFactor(double)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
3046= org.apache.commons.math3.analysis.interpolation.TricubicSplineFunction:TricubicSplineFunction(double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java
3047= org.apache.commons.math3.analysis.interpolation.TricubicSplineFunction:value(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java
3048= org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:value(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java
3049= org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:searchIndex(double, double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java
3050= org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:computeSplineCoefficients(double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java
3051= org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:TricubicSplineInterpolatingFunction(double[], double[], double[], double[][][], double[][][], double[][][], double[][][], double[][][], double[][][], double[][][], double[][][])	/src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java
3052= org.apache.commons.math3.ode.nonstiff.GillIntegrator:GillIntegrator(double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GillIntegrator.java
3053= org.apache.commons.math3.distribution.ParetoDistribution:ParetoDistribution(double, double, double)	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3054= org.apache.commons.math3.distribution.ParetoDistribution:ParetoDistribution(RandomGenerator, double, double, double)	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3055= org.apache.commons.math3.distribution.ParetoDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3056= org.apache.commons.math3.distribution.ParetoDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3057= org.apache.commons.math3.distribution.ParetoDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3058= org.apache.commons.math3.distribution.ParetoDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3059= org.apache.commons.math3.distribution.ParetoDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3060= org.apache.commons.math3.distribution.ParetoDistribution:ParetoDistribution(RandomGenerator, double, double)	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3061= org.apache.commons.math3.distribution.ParetoDistribution:cumulativeProbability(double, double)	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3062= org.apache.commons.math3.distribution.ParetoDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3063= org.apache.commons.math3.distribution.ParetoDistribution:getShape()	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3064= org.apache.commons.math3.distribution.ParetoDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3065= org.apache.commons.math3.distribution.ParetoDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3066= org.apache.commons.math3.distribution.ParetoDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3067= org.apache.commons.math3.distribution.ParetoDistribution:logDensity(double)	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3068= org.apache.commons.math3.distribution.ParetoDistribution:getSolverAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3069= org.apache.commons.math3.distribution.ParetoDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3070= org.apache.commons.math3.distribution.ParetoDistribution:ParetoDistribution(double, double)	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3071= org.apache.commons.math3.distribution.ParetoDistribution:ParetoDistribution()	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3072= org.apache.commons.math3.distribution.ParetoDistribution:getScale()	/src/main/java/org/apache/commons/math3/distribution/ParetoDistribution.java
3073= org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker:converged(int, UnivariatePointValuePair, UnivariatePointValuePair)	/src/main/java/org/apache/commons/math3/optim/univariate/SimpleUnivariateValueChecker.java
3074= org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker:SimpleUnivariateValueChecker(double, double, int)	/src/main/java/org/apache/commons/math3/optim/univariate/SimpleUnivariateValueChecker.java
3075= org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker:SimpleUnivariateValueChecker(double, double)	/src/main/java/org/apache/commons/math3/optim/univariate/SimpleUnivariateValueChecker.java
3076= org.apache.commons.math3.geometry.VectorFormat:parseCoordinates(int, String, ParsePosition)	/src/main/java/org/apache/commons/math3/geometry/VectorFormat.java
3077= org.apache.commons.math3.geometry.VectorFormat:format(Vector<S>)	/src/main/java/org/apache/commons/math3/geometry/VectorFormat.java
3078= org.apache.commons.math3.geometry.VectorFormat:getSuffix()	/src/main/java/org/apache/commons/math3/geometry/VectorFormat.java
3079= org.apache.commons.math3.geometry.VectorFormat:parse(String)	/src/main/java/org/apache/commons/math3/geometry/VectorFormat.java
3080= org.apache.commons.math3.geometry.VectorFormat:format(Vector<S>, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/geometry/VectorFormat.java
3081= org.apache.commons.math3.geometry.VectorFormat:parse(String, ParsePosition)	/src/main/java/org/apache/commons/math3/geometry/VectorFormat.java
3082= org.apache.commons.math3.geometry.VectorFormat:VectorFormat(String, String, String, NumberFormat)	/src/main/java/org/apache/commons/math3/geometry/VectorFormat.java
3083= org.apache.commons.math3.geometry.VectorFormat:getFormat()	/src/main/java/org/apache/commons/math3/geometry/VectorFormat.java
3084= org.apache.commons.math3.geometry.VectorFormat:format(StringBuffer, FieldPosition, double)	/src/main/java/org/apache/commons/math3/geometry/VectorFormat.java
3085= org.apache.commons.math3.geometry.VectorFormat:VectorFormat()	/src/main/java/org/apache/commons/math3/geometry/VectorFormat.java
3086= org.apache.commons.math3.geometry.VectorFormat:VectorFormat(String, String, String)	/src/main/java/org/apache/commons/math3/geometry/VectorFormat.java
3087= org.apache.commons.math3.geometry.VectorFormat:getPrefix()	/src/main/java/org/apache/commons/math3/geometry/VectorFormat.java
3088= org.apache.commons.math3.geometry.VectorFormat:getSeparator()	/src/main/java/org/apache/commons/math3/geometry/VectorFormat.java
3089= org.apache.commons.math3.geometry.VectorFormat:getAvailableLocales()	/src/main/java/org/apache/commons/math3/geometry/VectorFormat.java
3090= org.apache.commons.math3.geometry.VectorFormat:VectorFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/geometry/VectorFormat.java
3091= org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariances:SumOfClusterVariances(DistanceMeasure)	/src/main/java/org/apache/commons/math3/ml/clustering/evaluation/SumOfClusterVariances.java
3092= org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariances:score(List<? extends Cluster<T>>)	/src/main/java/org/apache/commons/math3/ml/clustering/evaluation/SumOfClusterVariances.java
3093= org.apache.commons.math3.distribution.GeometricDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java
3094= org.apache.commons.math3.distribution.GeometricDistribution:GeometricDistribution(double)	/src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java
3095= org.apache.commons.math3.distribution.GeometricDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java
3096= org.apache.commons.math3.distribution.GeometricDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java
3097= org.apache.commons.math3.distribution.GeometricDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java
3098= org.apache.commons.math3.distribution.GeometricDistribution:getProbabilityOfSuccess()	/src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java
3099= org.apache.commons.math3.distribution.GeometricDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java
3100= org.apache.commons.math3.distribution.GeometricDistribution:GeometricDistribution(RandomGenerator, double)	/src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java
3101= org.apache.commons.math3.distribution.GeometricDistribution:probability(int)	/src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java
3102= org.apache.commons.math3.distribution.GeometricDistribution:logProbability(int)	/src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java
3103= org.apache.commons.math3.distribution.GeometricDistribution:cumulativeProbability(int)	/src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java
3104= org.apache.commons.math3.stat.descriptive.UnivariateStatistic:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java
3105= org.apache.commons.math3.stat.descriptive.UnivariateStatistic:evaluate(double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java
3106= org.apache.commons.math3.stat.descriptive.UnivariateStatistic:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java
3107= org.apache.commons.math3.geometry.spherical.oned.LimitAngle:getLocation()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/LimitAngle.java
3108= org.apache.commons.math3.geometry.spherical.oned.LimitAngle:project(Point<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/LimitAngle.java
3109= org.apache.commons.math3.geometry.spherical.oned.LimitAngle:wholeSpace()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/LimitAngle.java
3110= org.apache.commons.math3.geometry.spherical.oned.LimitAngle:copySelf()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/LimitAngle.java
3111= org.apache.commons.math3.geometry.spherical.oned.LimitAngle:sameOrientationAs(Hyperplane<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/LimitAngle.java
3112= org.apache.commons.math3.geometry.spherical.oned.LimitAngle:LimitAngle(S1Point, boolean, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/LimitAngle.java
3113= org.apache.commons.math3.geometry.spherical.oned.LimitAngle:getOffset(Point<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/LimitAngle.java
3114= org.apache.commons.math3.geometry.spherical.oned.LimitAngle:isDirect()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/LimitAngle.java
3115= org.apache.commons.math3.geometry.spherical.oned.LimitAngle:getReverse()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/LimitAngle.java
3116= org.apache.commons.math3.geometry.spherical.oned.LimitAngle:wholeHyperplane()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/LimitAngle.java
3117= org.apache.commons.math3.geometry.spherical.oned.LimitAngle:getTolerance()	/src/main/java/org/apache/commons/math3/geometry/spherical/oned/LimitAngle.java
3118= org.apache.commons.math3.optim.linear.UnboundedSolutionException:UnboundedSolutionException()	/src/main/java/org/apache/commons/math3/optim/linear/UnboundedSolutionException.java
3119= org.apache.commons.math3.ode.events.FilterType:selectTransformer(Transformer, double, boolean)	/src/main/java/org/apache/commons/math3/ode/events/FilterType.java
3120= org.apache.commons.math3.ode.events.FilterType:getTriggeredIncreasing()	/src/main/java/org/apache/commons/math3/ode/events/FilterType.java
3121= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer:optimize(int, FUNC, GoalType, double[], double[], double[])	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java
3122= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer:BaseAbstractMultivariateSimpleBoundsOptimizer()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java
3123= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer:optimize(int, FUNC, GoalType, double[])	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java
3124= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer:BaseAbstractMultivariateSimpleBoundsOptimizer(ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java
3125= org.apache.commons.math3.optimization.linear.LinearConstraint:getCoefficients()	/src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java
3126= org.apache.commons.math3.optimization.linear.LinearConstraint:LinearConstraint(RealVector, Relationship, double)	/src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java
3127= org.apache.commons.math3.optimization.linear.LinearConstraint:LinearConstraint(double[], double, Relationship, double[], double)	/src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java
3128= org.apache.commons.math3.optimization.linear.LinearConstraint:LinearConstraint(double[], Relationship, double)	/src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java
3129= org.apache.commons.math3.optimization.linear.LinearConstraint:equals(Object)	/src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java
3130= org.apache.commons.math3.optimization.linear.LinearConstraint:LinearConstraint(RealVector, double, Relationship, RealVector, double)	/src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java
3131= org.apache.commons.math3.optimization.linear.LinearConstraint:getRelationship()	/src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java
3132= org.apache.commons.math3.optimization.linear.LinearConstraint:hashCode()	/src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java
3133= org.apache.commons.math3.optimization.linear.LinearConstraint:writeObject(ObjectOutputStream)	/src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java
3134= org.apache.commons.math3.optimization.linear.LinearConstraint:getValue()	/src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java
3135= org.apache.commons.math3.optimization.linear.LinearConstraint:readObject(ObjectInputStream)	/src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java
3136= org.apache.commons.math3.analysis.differentiation.DSCompiler:cos(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3137= org.apache.commons.math3.analysis.differentiation.DSCompiler:sin(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3138= org.apache.commons.math3.analysis.differentiation.DSCompiler:asinh(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3139= org.apache.commons.math3.analysis.differentiation.DSCompiler:compileSizes(int, int, DSCompiler)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3140= org.apache.commons.math3.analysis.differentiation.DSCompiler:taylor(double[], int, double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3141= org.apache.commons.math3.analysis.differentiation.DSCompiler:getFreeParameters()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3142= org.apache.commons.math3.analysis.differentiation.DSCompiler:add(double[], int, double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3143= org.apache.commons.math3.analysis.differentiation.DSCompiler:log10(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3144= org.apache.commons.math3.analysis.differentiation.DSCompiler:log1p(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3145= org.apache.commons.math3.analysis.differentiation.DSCompiler:convertIndex(int, int, int[][], int, int, int[][])	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3146= org.apache.commons.math3.analysis.differentiation.DSCompiler:remainder(double[], int, double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3147= org.apache.commons.math3.analysis.differentiation.DSCompiler:atanh(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3148= org.apache.commons.math3.analysis.differentiation.DSCompiler:checkCompatibility(DSCompiler)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3149= org.apache.commons.math3.analysis.differentiation.DSCompiler:exp(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3150= org.apache.commons.math3.analysis.differentiation.DSCompiler:tan(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3151= org.apache.commons.math3.analysis.differentiation.DSCompiler:pow(double[], int, int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3152= org.apache.commons.math3.analysis.differentiation.DSCompiler:rootN(double[], int, int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3153= org.apache.commons.math3.analysis.differentiation.DSCompiler:acosh(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3154= org.apache.commons.math3.analysis.differentiation.DSCompiler:compileLowerIndirection(int, int, DSCompiler, DSCompiler)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3155= org.apache.commons.math3.analysis.differentiation.DSCompiler:pow(double[], int, double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3156= org.apache.commons.math3.analysis.differentiation.DSCompiler:pow(double[], int, double, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3157= org.apache.commons.math3.analysis.differentiation.DSCompiler:multiply(double[], int, double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3158= org.apache.commons.math3.analysis.differentiation.DSCompiler:divide(double[], int, double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3159= org.apache.commons.math3.analysis.differentiation.DSCompiler:linearCombination(double, double[], int, double, double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3160= org.apache.commons.math3.analysis.differentiation.DSCompiler:linearCombination(double, double[], int, double, double[], int, double, double[], int, double, double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3161= org.apache.commons.math3.analysis.differentiation.DSCompiler:atan(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3162= org.apache.commons.math3.analysis.differentiation.DSCompiler:getOrder()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3163= org.apache.commons.math3.analysis.differentiation.DSCompiler:compose(double[], int, double[], double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3164= org.apache.commons.math3.analysis.differentiation.DSCompiler:compileCompositionIndirection(int, int, DSCompiler, DSCompiler, int[][], int[][])	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3165= org.apache.commons.math3.analysis.differentiation.DSCompiler:linearCombination(double, double[], int, double, double[], int, double, double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3166= org.apache.commons.math3.analysis.differentiation.DSCompiler:atan2(double[], int, double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3167= org.apache.commons.math3.analysis.differentiation.DSCompiler:getPartialDerivativeIndex(int, int, int[][], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3168= org.apache.commons.math3.analysis.differentiation.DSCompiler:acos(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3169= org.apache.commons.math3.analysis.differentiation.DSCompiler:compileDerivativesIndirection(int, int, DSCompiler, DSCompiler)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3170= org.apache.commons.math3.analysis.differentiation.DSCompiler:expm1(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3171= org.apache.commons.math3.analysis.differentiation.DSCompiler:asin(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3172= org.apache.commons.math3.analysis.differentiation.DSCompiler:compileMultiplicationIndirection(int, int, DSCompiler, DSCompiler, int[])	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3173= org.apache.commons.math3.analysis.differentiation.DSCompiler:sinh(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3174= org.apache.commons.math3.analysis.differentiation.DSCompiler:log(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3175= org.apache.commons.math3.analysis.differentiation.DSCompiler:tanh(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3176= org.apache.commons.math3.analysis.differentiation.DSCompiler:pow(double, double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3177= org.apache.commons.math3.analysis.differentiation.DSCompiler:subtract(double[], int, double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3178= org.apache.commons.math3.analysis.differentiation.DSCompiler:DSCompiler(int, int, DSCompiler, DSCompiler)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3179= org.apache.commons.math3.analysis.differentiation.DSCompiler:getCompiler(int, int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3180= org.apache.commons.math3.analysis.differentiation.DSCompiler:getSize()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3181= org.apache.commons.math3.analysis.differentiation.DSCompiler:cosh(double[], int, double[], int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3182= org.apache.commons.math3.analysis.differentiation.DSCompiler:getPartialDerivativeOrders(int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3183= org.apache.commons.math3.analysis.differentiation.DSCompiler:getPartialDerivativeIndex(int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
3184= org.apache.commons.math3.ml.neuralnet.MapUtils:findBest(double[], Iterable<Neuron>, DistanceMeasure)	/src/main/java/org/apache/commons/math3/ml/neuralnet/MapUtils.java
3185= org.apache.commons.math3.ml.neuralnet.MapUtils:findBestAndSecondBest(double[], Iterable<Neuron>, DistanceMeasure)	/src/main/java/org/apache/commons/math3/ml/neuralnet/MapUtils.java
3186= org.apache.commons.math3.ml.neuralnet.MapUtils:MapUtils()	/src/main/java/org/apache/commons/math3/ml/neuralnet/MapUtils.java
3187= org.apache.commons.math3.ml.neuralnet.MapUtils:computeHitHistogram(Iterable<double[]>, NeuronSquareMesh2D, DistanceMeasure)	/src/main/java/org/apache/commons/math3/ml/neuralnet/MapUtils.java
3188= org.apache.commons.math3.ml.neuralnet.MapUtils:computeU(NeuronSquareMesh2D, DistanceMeasure)	/src/main/java/org/apache/commons/math3/ml/neuralnet/MapUtils.java
3189= org.apache.commons.math3.ml.neuralnet.MapUtils:computeQuantizationError(Iterable<double[]>, Iterable<Neuron>, DistanceMeasure)	/src/main/java/org/apache/commons/math3/ml/neuralnet/MapUtils.java
3190= org.apache.commons.math3.ml.neuralnet.MapUtils:computeTopographicError(Iterable<double[]>, Network, DistanceMeasure)	/src/main/java/org/apache/commons/math3/ml/neuralnet/MapUtils.java
3191= org.apache.commons.math3.analysis.function.Divide:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Divide.java
3192= org.apache.commons.math3.random.GaussianRandomGenerator:GaussianRandomGenerator(RandomGenerator)	/src/main/java/org/apache/commons/math3/random/GaussianRandomGenerator.java
3193= org.apache.commons.math3.random.GaussianRandomGenerator:nextNormalizedDouble()	/src/main/java/org/apache/commons/math3/random/GaussianRandomGenerator.java
3194= org.apache.commons.math3.linear.RectangularCholeskyDecomposition:getRootMatrix()	/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java
3195= org.apache.commons.math3.linear.RectangularCholeskyDecomposition:RectangularCholeskyDecomposition(RealMatrix, double)	/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java
3196= org.apache.commons.math3.linear.RectangularCholeskyDecomposition:getRank()	/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java
3197= org.apache.commons.math3.linear.RectangularCholeskyDecomposition:RectangularCholeskyDecomposition(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java
3198= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest:getLower()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3199= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest.BiQuadratic:BiQuadratic(double, double, double, double, double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3200= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest.BiQuadratic:getLower()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3201= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest:testHalfBounded()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3202= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest.BiQuadratic:getUpper()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3203= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest:getUpper()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3204= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3205= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest:getBoundedXOptimum()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3206= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest.BiQuadratic:getBoundedXOptimum()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3207= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest.BiQuadratic:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3208= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest:testOptimumOutsideRange()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3209= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest:testUnbounded()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3210= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest:getBoundedYOptimum()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3211= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest:testStartSimplexInsideRange()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3212= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest:BiQuadratic(double, double, double, double, double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3213= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest.BiQuadratic:getBoundedYOptimum()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java
3214= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:distance1(Vector<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3215= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:distanceSq(Vector<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3216= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:distanceSq(Vector2D, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3217= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:Vector2D(double, Vector2D, double, Vector2D, double, Vector2D, double, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3218= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:getZero()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3219= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:dotProduct(Vector<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3220= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:add(Vector<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3221= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:getNorm()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3222= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:getSpace()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3223= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:Vector2D(double, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3224= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:negate()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3225= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:equals(Object)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3226= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:subtract(Vector<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3227= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:distance(Vector2D, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3228= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:toArray()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3229= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:getY()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3230= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:toString()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3231= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:normalize()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3232= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:isInfinite()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3233= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:getNormSq()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3234= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:isNaN()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3235= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:distanceInf(Vector2D, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3236= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:crossProduct(Vector2D, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3237= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:distance(Vector<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3238= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:hashCode()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3239= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:add(double, Vector<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3240= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:Vector2D(double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3241= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:Vector2D(double, Vector2D, double, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3242= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:distanceInf(Vector<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3243= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:distance(Point<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3244= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:toString(NumberFormat)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3245= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:Vector2D(double[])	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3246= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:getX()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3247= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:getNormInf()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3248= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:subtract(double, Vector<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3249= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:scalarMultiply(double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3250= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:Vector2D(double, Vector2D, double, Vector2D, double, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3251= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:angle(Vector2D, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3252= org.apache.commons.math3.geometry.euclidean.twod.Vector2D:getNorm1()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java
3253= org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver:remove()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3254= org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver:hasNext()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3255= org.apache.commons.math3.ml.neuralnet.sofm.City:getCoordinates()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3256= org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver:TravellingSalesmanSolver(City[], double, long)	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3257= org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver:makeInitializers()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3258= org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver:largestDistance(double, double, Set<City>)	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3259= org.apache.commons.math3.ml.neuralnet.sofm.City:hashCode()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3260= org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver:TravellingSalesmanSolver(City[], double)	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3261= org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver:createRandomIterator(long)	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3262= org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver:getCityList()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3263= org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver:next()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3264= org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver:createSequentialTask(long)	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3265= org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver:getCoordinatesList()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3266= org.apache.commons.math3.ml.neuralnet.sofm.City:equals(Object)	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3267= org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver:getNeuronList()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3268= org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver:createParallelTasks(int, long)	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3269= org.apache.commons.math3.ml.neuralnet.sofm.City:getName()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3270= org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver:barycentre(Set<City>)	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3271= org.apache.commons.math3.ml.neuralnet.sofm.City:distance(double, double)	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3272= org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver:getClosestCity(double, double)	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3273= org.apache.commons.math3.ml.neuralnet.sofm.City:City(String, double, double)	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/TravellingSalesmanSolver.java
3274= org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator:AdamsBashforthIntegrator(int, double, double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator.java
3275= org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator:integrate(ExpandableStatefulODE, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator.java
3276= org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator:AdamsBashforthIntegrator(int, double, double, double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator.java
3277= org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:legendreHighPrecision(int)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java
3278= org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:hermite(int)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java
3279= org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:legendre(int, double, double)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java
3280= org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:transform(Pair<double[],double[]>, double, double)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java
3281= org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:legendre(int)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java
3282= org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:legendreHighPrecision(int, double, double)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java
3283= org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:getRule(BaseRuleFactory<? extends Number>, int)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java
3284= org.apache.commons.math3.geometry.partitioning.RegionFactory:visitOrder(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3285= org.apache.commons.math3.geometry.partitioning.RegionFactory.NodesCleaner:visitInternalNode(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3286= org.apache.commons.math3.geometry.partitioning.RegionFactory:RegionFactory()	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3287= org.apache.commons.math3.geometry.partitioning.RegionFactory:xor(Region<S>, Region<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3288= org.apache.commons.math3.geometry.partitioning.RegionFactory:merge(BSPTree<S>, BSPTree<S>, BSPTree<S>, boolean, boolean)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3289= org.apache.commons.math3.geometry.partitioning.RegionFactory.IntersectionMerger:merge(BSPTree<S>, BSPTree<S>, BSPTree<S>, boolean, boolean)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3290= org.apache.commons.math3.geometry.partitioning.RegionFactory:buildConvex(Hyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3291= org.apache.commons.math3.geometry.partitioning.RegionFactory:recurseComplement(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3292= org.apache.commons.math3.geometry.partitioning.RegionFactory.NodesCleaner:visitOrder(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3293= org.apache.commons.math3.geometry.partitioning.RegionFactory:visitLeafNode(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3294= org.apache.commons.math3.geometry.partitioning.RegionFactory:getComplement(Region<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3295= org.apache.commons.math3.geometry.partitioning.RegionFactory.XorMerger:merge(BSPTree<S>, BSPTree<S>, BSPTree<S>, boolean, boolean)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3296= org.apache.commons.math3.geometry.partitioning.RegionFactory.NodesCleaner:visitLeafNode(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3297= org.apache.commons.math3.geometry.partitioning.RegionFactory.DifferenceMerger:merge(BSPTree<S>, BSPTree<S>, BSPTree<S>, boolean, boolean)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3298= org.apache.commons.math3.geometry.partitioning.RegionFactory:union(Region<S>, Region<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3299= org.apache.commons.math3.geometry.partitioning.RegionFactory:difference(Region<S>, Region<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3300= org.apache.commons.math3.geometry.partitioning.RegionFactory:intersection(Region<S>, Region<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3301= org.apache.commons.math3.geometry.partitioning.RegionFactory.UnionMerger:merge(BSPTree<S>, BSPTree<S>, BSPTree<S>, boolean, boolean)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3302= org.apache.commons.math3.geometry.partitioning.RegionFactory:visitInternalNode(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/RegionFactory.java
3303= org.apache.commons.math3.genetics.ElitisticListPopulation:getElitismRate()	/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java
3304= org.apache.commons.math3.genetics.ElitisticListPopulation:ElitisticListPopulation(List<Chromosome>, int, double)	/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java
3305= org.apache.commons.math3.genetics.ElitisticListPopulation:nextGeneration()	/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java
3306= org.apache.commons.math3.genetics.ElitisticListPopulation:ElitisticListPopulation(int, double)	/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java
3307= org.apache.commons.math3.genetics.ElitisticListPopulation:setElitismRate(double)	/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java
3308= org.apache.commons.math3.stat.interval.BinomialConfidenceInterval:createInterval(int, int, double)	/src/main/java/org/apache/commons/math3/stat/interval/BinomialConfidenceInterval.java
3309= org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:ThreeEighthesStepInterpolator()	/src/main/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesStepInterpolator.java
3310= org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:ThreeEighthesStepInterpolator(ThreeEighthesStepInterpolator)	/src/main/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesStepInterpolator.java
3311= org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:doCopy()	/src/main/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesStepInterpolator.java
3312= org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:computeInterpolatedStateAndDerivatives(double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesStepInterpolator.java
3313= org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:GaussNewtonOptimizer(ConvergenceChecker<PointVectorValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java
3314= org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:checkParameters()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java
3315= org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:GaussNewtonOptimizer(boolean, ConvergenceChecker<PointVectorValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java
3316= org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java
3317= org.apache.commons.math3.exception.NumberIsTooLargeException:NumberIsTooLargeException(Number, Number, boolean)	/src/main/java/org/apache/commons/math3/exception/NumberIsTooLargeException.java
3318= org.apache.commons.math3.exception.NumberIsTooLargeException:getMax()	/src/main/java/org/apache/commons/math3/exception/NumberIsTooLargeException.java
3319= org.apache.commons.math3.exception.NumberIsTooLargeException:getBoundIsAllowed()	/src/main/java/org/apache/commons/math3/exception/NumberIsTooLargeException.java
3320= org.apache.commons.math3.exception.NumberIsTooLargeException:NumberIsTooLargeException(Localizable, Number, Number, boolean)	/src/main/java/org/apache/commons/math3/exception/NumberIsTooLargeException.java
3321= org.apache.commons.math3.util.BigRealField:BigRealField()	/src/main/java/org/apache/commons/math3/util/BigRealField.java
3322= org.apache.commons.math3.util.BigRealField:getRuntimeClass()	/src/main/java/org/apache/commons/math3/util/BigRealField.java
3323= org.apache.commons.math3.util.BigRealField:getInstance()	/src/main/java/org/apache/commons/math3/util/BigRealField.java
3324= org.apache.commons.math3.util.BigRealField:getZero()	/src/main/java/org/apache/commons/math3/util/BigRealField.java
3325= org.apache.commons.math3.util.BigRealField:readResolve()	/src/main/java/org/apache/commons/math3/util/BigRealField.java
3326= org.apache.commons.math3.util.BigRealField:getOne()	/src/main/java/org/apache/commons/math3/util/BigRealField.java
3327= org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary:getMax()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalMultivariateSummary.java
3328= org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary:getSumSq()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalMultivariateSummary.java
3329= org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary:getDimension()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalMultivariateSummary.java
3330= org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary:getMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalMultivariateSummary.java
3331= org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary:getGeometricMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalMultivariateSummary.java
3332= org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary:getSumLog()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalMultivariateSummary.java
3333= org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary:getCovariance()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalMultivariateSummary.java
3334= org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary:getStandardDeviation()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalMultivariateSummary.java
3335= org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary:getSum()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalMultivariateSummary.java
3336= org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary:getMin()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalMultivariateSummary.java
3337= org.apache.commons.math3.stat.descriptive.StatisticalMultivariateSummary:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalMultivariateSummary.java
3338= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:bracket(UnivariateFunction, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java
3339= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:bracket(UnivariateFunction, double, double, double, double, double, int)	/src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java
3340= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:isSequence(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java
3341= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:bracket(UnivariateFunction, double, double, double, int)	/src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java
3342= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:solve(UnivariateFunction, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java
3343= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:isBracketing(UnivariateFunction, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java
3344= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:solve(UnivariateFunction, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java
3345= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:forceSide(int, UnivariateFunction, BracketedUnivariateSolver<UnivariateFunction>, double, double, double, AllowedSolution)	/src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java
3346= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:verifyInterval(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java
3347= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:UnivariateSolverUtils()	/src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java
3348= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:verifySequence(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java
3349= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:verifyBracketing(UnivariateFunction, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java
3350= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:midpoint(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java
3351= org.apache.commons.math3.linear.IllConditionedOperatorException:IllConditionedOperatorException(double)	/src/main/java/org/apache/commons/math3/linear/IllConditionedOperatorException.java
3352= org.apache.commons.math3.random.ValueServerTest:testReplay()	/src/test/java/org/apache/commons/math3/random/ValueServerTest.java
3353= org.apache.commons.math3.random.ValueServerTest:testNextDigestFail()	/src/test/java/org/apache/commons/math3/random/ValueServerTest.java
3354= org.apache.commons.math3.random.ValueServerTest:testFill()	/src/test/java/org/apache/commons/math3/random/ValueServerTest.java
3355= org.apache.commons.math3.random.ValueServerTest:testEmptyDigestFile()	/src/test/java/org/apache/commons/math3/random/ValueServerTest.java
3356= org.apache.commons.math3.random.ValueServerTest:setUp()	/src/test/java/org/apache/commons/math3/random/ValueServerTest.java
3357= org.apache.commons.math3.random.ValueServerTest:testModes()	/src/test/java/org/apache/commons/math3/random/ValueServerTest.java
3358= org.apache.commons.math3.random.ValueServerTest:testNextDigest()	/src/test/java/org/apache/commons/math3/random/ValueServerTest.java
3359= org.apache.commons.math3.random.ValueServerTest:testFixedSeed()	/src/test/java/org/apache/commons/math3/random/ValueServerTest.java
3360= org.apache.commons.math3.random.ValueServerTest:testProperties()	/src/test/java/org/apache/commons/math3/random/ValueServerTest.java
3361= org.apache.commons.math3.random.ValueServerTest:checkFixedSeed(ValueServer, int)	/src/test/java/org/apache/commons/math3/random/ValueServerTest.java
3362= org.apache.commons.math3.random.ValueServerTest:testEmptyReplayFile()	/src/test/java/org/apache/commons/math3/random/ValueServerTest.java
3363= org.apache.commons.math3.analysis.function.Log1p:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Log1p.java
3364= org.apache.commons.math3.analysis.function.Log1p:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Log1p.java
3365= org.apache.commons.math3.analysis.function.Log1p:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Log1p.java
3366= org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:MixtureMultivariateRealDistribution(List<Pair<Double,T>>)	/src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution.java
3367= org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution.java
3368= org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:reseedRandomGenerator(long)	/src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution.java
3369= org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:getComponents()	/src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution.java
3370= org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:MixtureMultivariateRealDistribution(RandomGenerator, List<Pair<Double,T>>)	/src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution.java
3371= org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:density(double[])	/src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution.java
3372= org.apache.commons.math3.exception.MathIllegalStateException:getMessage()	/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java
3373= org.apache.commons.math3.exception.MathIllegalStateException:MathIllegalStateException(Throwable, Localizable, Object)	/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java
3374= org.apache.commons.math3.exception.MathIllegalStateException:getContext()	/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java
3375= org.apache.commons.math3.exception.MathIllegalStateException:MathIllegalStateException(Localizable, Object)	/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java
3376= org.apache.commons.math3.exception.MathIllegalStateException:MathIllegalStateException()	/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java
3377= org.apache.commons.math3.exception.MathIllegalStateException:getLocalizedMessage()	/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java
3378= org.apache.commons.math3.util.FastMathCalc:splitMult(double, double, double)	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3379= org.apache.commons.math3.util.FastMathCalc:slowCos(double, double)	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3380= org.apache.commons.math3.util.FastMathCalc:format(double)	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3381= org.apache.commons.math3.util.FastMathCalc:slowSin(double, double)	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3382= org.apache.commons.math3.util.FastMathCalc:slowexp(double, double)	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3383= org.apache.commons.math3.util.FastMathCalc:printarray(PrintStream, String, int, double[][])	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3384= org.apache.commons.math3.util.FastMathCalc:split(double, double)	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3385= org.apache.commons.math3.util.FastMathCalc:resplit(double)	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3386= org.apache.commons.math3.util.FastMathCalc:slowLog(double)	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3387= org.apache.commons.math3.util.FastMathCalc:checkLen(int, int)	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3388= org.apache.commons.math3.util.FastMathCalc:splitAdd(double, double, double)	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3389= org.apache.commons.math3.util.FastMathCalc:buildSinCosTables(double[], double[], double[], double[], int, double[], double[])	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3390= org.apache.commons.math3.util.FastMathCalc:FastMathCalc()	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3391= org.apache.commons.math3.util.FastMathCalc:printarray(PrintStream, String, int, double[])	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3392= org.apache.commons.math3.util.FastMathCalc:expint(int, double)	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3393= org.apache.commons.math3.util.FastMathCalc:splitReciprocal(double, double)	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3394= org.apache.commons.math3.util.FastMathCalc:quadMult(double, double, double)	/src/main/java/org/apache/commons/math3/util/FastMathCalc.java
3395= org.apache.commons.math3.optimization.general.GaussNewtonOptimizer:GaussNewtonOptimizer(ConvergenceChecker<PointVectorValuePair>)	/src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java
3396= org.apache.commons.math3.optimization.general.GaussNewtonOptimizer:GaussNewtonOptimizer()	/src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java
3397= org.apache.commons.math3.optimization.general.GaussNewtonOptimizer:GaussNewtonOptimizer(boolean, ConvergenceChecker<PointVectorValuePair>)	/src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java
3398= org.apache.commons.math3.optimization.general.GaussNewtonOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java
3399= org.apache.commons.math3.optimization.general.GaussNewtonOptimizer:GaussNewtonOptimizer(boolean)	/src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java
3400= org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:AbstractLinearOptimizer()	/src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java
3401= org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java
3402= org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:setMaxIterations(int)	/src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java
3403= org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:getIterations()	/src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java
3404= org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:optimize(LinearObjectiveFunction, Collection<LinearConstraint>, GoalType, boolean)	/src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java
3405= org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:incrementIterationsCounter()	/src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java
3406= org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:getMaxIterations()	/src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java
3407= org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:restrictToNonNegative()	/src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java
3408= org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:getFunction()	/src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java
3409= org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:getConstraints()	/src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java
3410= org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:getGoalType()	/src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java
3411= org.apache.commons.math3.userguide.genetics.HelloWorldExample:fitness()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3412= org.apache.commons.math3.userguide.genetics.HelloWorldExample.StringChromosome:getStringRepresentation()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3413= org.apache.commons.math3.userguide.genetics.HelloWorldExample.RandomCharacterMutation:mutate(Chromosome)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3414= org.apache.commons.math3.userguide.genetics.HelloWorldExample:getInitialPopulation()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3415= org.apache.commons.math3.userguide.genetics.HelloWorldExample:toString()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3416= org.apache.commons.math3.userguide.genetics.HelloWorldExample.StringChromosome:checkValidity(List<Character>)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3417= org.apache.commons.math3.userguide.genetics.HelloWorldExample:mutate(Chromosome)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3418= org.apache.commons.math3.userguide.genetics.HelloWorldExample:main(String[])	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3419= org.apache.commons.math3.userguide.genetics.HelloWorldExample:StringChromosome(String)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3420= org.apache.commons.math3.userguide.genetics.HelloWorldExample:isSatisfied(Population)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3421= org.apache.commons.math3.userguide.genetics.HelloWorldExample.StringChromosome:StringChromosome(List<Character>)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3422= org.apache.commons.math3.userguide.genetics.HelloWorldExample:checkValidity(List<Character>)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3423= org.apache.commons.math3.userguide.genetics.HelloWorldExample:StringChromosome(List<Character>)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3424= org.apache.commons.math3.userguide.genetics.HelloWorldExample.StringChromosome:StringChromosome(String)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3425= org.apache.commons.math3.userguide.genetics.HelloWorldExample.StringChromosome:fitness()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3426= org.apache.commons.math3.userguide.genetics.HelloWorldExample:asList(String)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3427= org.apache.commons.math3.userguide.genetics.HelloWorldExample.StringChromosome:toString()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3428= org.apache.commons.math3.userguide.genetics.HelloWorldExample.StringChromosome:newFixedLengthChromosome(List<Character>)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3429= org.apache.commons.math3.userguide.genetics.HelloWorldExample:getStringRepresentation()	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3430= org.apache.commons.math3.userguide.genetics.HelloWorldExample:newFixedLengthChromosome(List<Character>)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3431= org.apache.commons.math3.userguide.genetics.HelloWorldExample:randomRepresentation(int)	/src/userguide/java/org/apache/commons/math3/userguide/genetics/HelloWorldExample.java
3432= org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator:interpolate(double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java
3433= org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator:computeDividedDifference(double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java
3434= org.apache.commons.math3.complex.RootsOfUnity:RootsOfUnity()	/src/main/java/org/apache/commons/math3/complex/RootsOfUnity.java
3435= org.apache.commons.math3.complex.RootsOfUnity:getImaginary(int)	/src/main/java/org/apache/commons/math3/complex/RootsOfUnity.java
3436= org.apache.commons.math3.complex.RootsOfUnity:getReal(int)	/src/main/java/org/apache/commons/math3/complex/RootsOfUnity.java
3437= org.apache.commons.math3.complex.RootsOfUnity:isCounterClockWise()	/src/main/java/org/apache/commons/math3/complex/RootsOfUnity.java
3438= org.apache.commons.math3.complex.RootsOfUnity:getNumberOfRoots()	/src/main/java/org/apache/commons/math3/complex/RootsOfUnity.java
3439= org.apache.commons.math3.complex.RootsOfUnity:computeRoots(int)	/src/main/java/org/apache/commons/math3/complex/RootsOfUnity.java
3440= org.apache.commons.math3.ode.MultistepIntegrator:initializeHighOrderDerivatives(double, double[], double[][], double[][])	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3441= org.apache.commons.math3.ode.MultistepIntegrator:handleStep(StepInterpolator, boolean)	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3442= org.apache.commons.math3.ode.MultistepIntegrator.InitializationCompletedMarkerException:InitializationCompletedMarkerException()	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3443= org.apache.commons.math3.ode.MultistepIntegrator:setMinReduction(double)	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3444= org.apache.commons.math3.ode.MultistepIntegrator:NordsieckInitializer(int, int)	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3445= org.apache.commons.math3.ode.MultistepIntegrator:computeDerivatives(double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3446= org.apache.commons.math3.ode.MultistepIntegrator:MultistepIntegrator(String, int, int, double, double, double, double)	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3447= org.apache.commons.math3.ode.MultistepIntegrator:getStarterIntegrator()	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3448= org.apache.commons.math3.ode.MultistepIntegrator:init(double, double[], double)	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3449= org.apache.commons.math3.ode.MultistepIntegrator:setMaxGrowth(double)	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3450= org.apache.commons.math3.ode.MultistepIntegrator:start(double, double[], double)	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3451= org.apache.commons.math3.ode.MultistepIntegrator.NordsieckTransformer:initializeHighOrderDerivatives(double, double[], double[][], double[][])	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3452= org.apache.commons.math3.ode.MultistepIntegrator:setStarterIntegrator(FirstOrderIntegrator)	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3453= org.apache.commons.math3.ode.MultistepIntegrator:getSafety()	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3454= org.apache.commons.math3.ode.MultistepIntegrator:InitializationCompletedMarkerException()	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3455= org.apache.commons.math3.ode.MultistepIntegrator.NordsieckInitializer:handleStep(StepInterpolator, boolean)	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3456= org.apache.commons.math3.ode.MultistepIntegrator.NordsieckInitializer:init(double, double[], double)	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3457= org.apache.commons.math3.ode.MultistepIntegrator:MultistepIntegrator(String, int, int, double, double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3458= org.apache.commons.math3.ode.MultistepIntegrator:getDimension()	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3459= org.apache.commons.math3.ode.MultistepIntegrator:setSafety(double)	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3460= org.apache.commons.math3.ode.MultistepIntegrator:computeStepGrowShrinkFactor(double)	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3461= org.apache.commons.math3.ode.MultistepIntegrator:getMaxGrowth()	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3462= org.apache.commons.math3.ode.MultistepIntegrator.NordsieckInitializer:NordsieckInitializer(int, int)	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3463= org.apache.commons.math3.ode.MultistepIntegrator:getMinReduction()	/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
3464= org.apache.commons.math3.stat.clustering.Cluster:getCenter()	/src/main/java/org/apache/commons/math3/stat/clustering/Cluster.java
3465= org.apache.commons.math3.stat.clustering.Cluster:Cluster(T)	/src/main/java/org/apache/commons/math3/stat/clustering/Cluster.java
3466= org.apache.commons.math3.stat.clustering.Cluster:getPoints()	/src/main/java/org/apache/commons/math3/stat/clustering/Cluster.java
3467= org.apache.commons.math3.stat.clustering.Cluster:addPoint(T)	/src/main/java/org/apache/commons/math3/stat/clustering/Cluster.java
3468= org.apache.commons.math3.analysis.function.Sinc:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Sinc.java
3469= org.apache.commons.math3.analysis.function.Sinc:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Sinc.java
3470= org.apache.commons.math3.analysis.function.Sinc:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Sinc.java
3471= org.apache.commons.math3.analysis.function.Sinc:Sinc(boolean)	/src/main/java/org/apache/commons/math3/analysis/function/Sinc.java
3472= org.apache.commons.math3.analysis.function.Sinc:Sinc()	/src/main/java/org/apache/commons/math3/analysis/function/Sinc.java
3473= org.apache.commons.math3.random.UniformRandomGenerator:UniformRandomGenerator(RandomGenerator)	/src/main/java/org/apache/commons/math3/random/UniformRandomGenerator.java
3474= org.apache.commons.math3.random.UniformRandomGenerator:nextNormalizedDouble()	/src/main/java/org/apache/commons/math3/random/UniformRandomGenerator.java
3475= org.apache.commons.math3.ode.Parameterizable:getParametersNames()	/src/main/java/org/apache/commons/math3/ode/Parameterizable.java
3476= org.apache.commons.math3.ode.Parameterizable:isSupported(String)	/src/main/java/org/apache/commons/math3/ode/Parameterizable.java
3477= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:PowellOptimizer(double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java
3478= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:PowellOptimizer(double, double, ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java
3479= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:newPointAndDirection(double[], double[], double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java
3480= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:PowellOptimizer(double, double, double, double, ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java
3481= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:PowellOptimizer(double, double, double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java
3482= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java
3483= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:checkParameters()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java
3484= org.apache.commons.math3.analysis.differentiation.UnivariateMatrixFunctionDifferentiator:differentiate(UnivariateMatrixFunction)	/src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateMatrixFunctionDifferentiator.java
3485= org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator:stage(int)	/src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java
3486= org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator:value(double)	/src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java
3487= org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator:IterativeLegendreGaussIntegrator(int, double, double)	/src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java
3488= org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator:IterativeLegendreGaussIntegrator(int, double, double, int, int)	/src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java
3489= org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator:IterativeLegendreGaussIntegrator(int, int, int)	/src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java
3490= org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator:doIntegrate()	/src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java
3491= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:toString()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3492= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:setMeanImpl(StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3493= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:checkEmpty()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3494= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:MultivariateSummaryStatistics(int, boolean)	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3495= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:equals(Object)	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3496= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getSumsqImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3497= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getCovariance()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3498= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:setMaxImpl(StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3499= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:setImpl(StorelessUnivariateStatistic[], StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3500= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getMaxImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3501= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getMinImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3502= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getMeanImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3503= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:setSumImpl(StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3504= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getSumLog()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3505= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3506= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getStandardDeviation()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3507= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:hashCode()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3508= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:setMinImpl(StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3509= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:setSumsqImpl(StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3510= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:setGeoMeanImpl(StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3511= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3512= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:append(StringBuilder, double[], String, String, String)	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3513= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:addValue(double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3514= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getSumImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3515= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getMin()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3516= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:setSumLogImpl(StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3517= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getMax()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3518= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getSumLogImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3519= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getSumSq()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3520= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getSum()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3521= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getGeometricMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3522= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getDimension()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3523= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getGeoMeanImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3524= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getResults(StorelessUnivariateStatistic[])	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3525= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:getMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3526= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:checkDimension(int)	/src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java
3527= org.apache.commons.math3.geometry.enclosing.Encloser:enclose(Iterable<P>)	/src/main/java/org/apache/commons/math3/geometry/enclosing/Encloser.java
3528= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testAppend()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3529= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testRemoveObsFromEmpty()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3530= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testSSENonNegative()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3531= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testRegressExceptions()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3532= org.apache.commons.math3.stat.regression.SimpleRegressionTest:check(boolean)	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3533= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testNoIntercept_noint1()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3534= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testNaNs()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3535= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testClear()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3536= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testInference()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3537= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testRandom()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3538= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testRemoveXY()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3539= org.apache.commons.math3.stat.regression.SimpleRegressionTest:equals(SimpleRegression, SimpleRegression, double)	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3540= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testRemoveMultipleToEmpty()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3541= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testRemoveMultiplePastEmpty()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3542= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testRegressIfaceMethod()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3543= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testPerfectNegative()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3544= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testRemoveSingle()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3545= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testRemoveMultiple()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3546= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testNorris()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3547= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testCorr()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3548= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testRemoveObsFromSingle()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3549= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testNoInterceot_noint2()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3550= org.apache.commons.math3.stat.regression.SimpleRegressionTest:testPerfect()	/src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java
3551= org.apache.commons.math3.ml.distance.EuclideanDistance:compute(double[], double[])	/src/main/java/org/apache/commons/math3/ml/distance/EuclideanDistance.java
3552= org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator:singleStep(FirstOrderDifferentialEquations, double, double[], double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java
3553= org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator:RungeKuttaIntegrator(String, double[], double[][], double[], RungeKuttaStepInterpolator, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java
3554= org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator:integrate(ExpandableStatefulODE, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java
3555= org.apache.commons.math3.linear.BiDiagonalTransformer:getV()	/src/main/java/org/apache/commons/math3/linear/BiDiagonalTransformer.java
3556= org.apache.commons.math3.linear.BiDiagonalTransformer:getMainDiagonalRef()	/src/main/java/org/apache/commons/math3/linear/BiDiagonalTransformer.java
3557= org.apache.commons.math3.linear.BiDiagonalTransformer:BiDiagonalTransformer(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/BiDiagonalTransformer.java
3558= org.apache.commons.math3.linear.BiDiagonalTransformer:transformToLowerBiDiagonal()	/src/main/java/org/apache/commons/math3/linear/BiDiagonalTransformer.java
3559= org.apache.commons.math3.linear.BiDiagonalTransformer:isUpperBiDiagonal()	/src/main/java/org/apache/commons/math3/linear/BiDiagonalTransformer.java
3560= org.apache.commons.math3.linear.BiDiagonalTransformer:getB()	/src/main/java/org/apache/commons/math3/linear/BiDiagonalTransformer.java
3561= org.apache.commons.math3.linear.BiDiagonalTransformer:getHouseholderVectorsRef()	/src/main/java/org/apache/commons/math3/linear/BiDiagonalTransformer.java
3562= org.apache.commons.math3.linear.BiDiagonalTransformer:transformToUpperBiDiagonal()	/src/main/java/org/apache/commons/math3/linear/BiDiagonalTransformer.java
3563= org.apache.commons.math3.linear.BiDiagonalTransformer:getSecondaryDiagonalRef()	/src/main/java/org/apache/commons/math3/linear/BiDiagonalTransformer.java
3564= org.apache.commons.math3.linear.BiDiagonalTransformer:getU()	/src/main/java/org/apache/commons/math3/linear/BiDiagonalTransformer.java
3565= org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction:value(RealVector)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction.java
3566= org.apache.commons.math3.stat.interval.AgrestiCoullInterval:createInterval(int, int, double)	/src/main/java/org/apache/commons/math3/stat/interval/AgrestiCoullInterval.java
3567= org.apache.commons.math3.geometry.euclidean.threed.Segment:Segment(Vector3D, Vector3D, Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Segment.java
3568= org.apache.commons.math3.geometry.euclidean.threed.Segment:getLine()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Segment.java
3569= org.apache.commons.math3.geometry.euclidean.threed.Segment:getStart()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Segment.java
3570= org.apache.commons.math3.geometry.euclidean.threed.Segment:getEnd()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Segment.java
3571= org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest:testIterationCheckPrecondition()	/src/test/java/org/apache/commons/math3/optim/univariate/SimpleUnivariateValueCheckerTest.java
3572= org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest:testIterationCheck()	/src/test/java/org/apache/commons/math3/optim/univariate/SimpleUnivariateValueCheckerTest.java
3573= org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest:testIterationCheckDisabled()	/src/test/java/org/apache/commons/math3/optim/univariate/SimpleUnivariateValueCheckerTest.java
3574= org.apache.commons.math3.optimization.fitting.CurveFitter:CurveFitter(DifferentiableMultivariateVectorOptimizer)	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3575= org.apache.commons.math3.optimization.fitting.CurveFitter:value(double[])	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3576= org.apache.commons.math3.optimization.fitting.CurveFitter:TheoreticalValuesFunction(ParametricUnivariateFunction)	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3577= org.apache.commons.math3.optimization.fitting.CurveFitter.TheoreticalValuesFunction:value(DerivativeStructure[])	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3578= org.apache.commons.math3.optimization.fitting.CurveFitter:CurveFitter(MultivariateDifferentiableVectorOptimizer)	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3579= org.apache.commons.math3.optimization.fitting.CurveFitter.TheoreticalValuesFunction:value(double[])	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3580= org.apache.commons.math3.optimization.fitting.CurveFitter:addObservedPoint(WeightedObservedPoint)	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3581= org.apache.commons.math3.optimization.fitting.CurveFitter.OldTheoreticalValuesFunction:OldTheoreticalValuesFunction(ParametricUnivariateFunction)	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3582= org.apache.commons.math3.optimization.fitting.CurveFitter:addObservedPoint(double, double, double)	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3583= org.apache.commons.math3.optimization.fitting.CurveFitter:value(DerivativeStructure[])	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3584= org.apache.commons.math3.optimization.fitting.CurveFitter.OldTheoreticalValuesFunction:value(double[])	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3585= org.apache.commons.math3.optimization.fitting.CurveFitter:getObservations()	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3586= org.apache.commons.math3.optimization.fitting.CurveFitter:clearObservations()	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3587= org.apache.commons.math3.optimization.fitting.CurveFitter:fit(int, T, double[])	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3588= org.apache.commons.math3.optimization.fitting.CurveFitter:jacobian()	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3589= org.apache.commons.math3.optimization.fitting.CurveFitter.OldTheoreticalValuesFunction:jacobian()	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3590= org.apache.commons.math3.optimization.fitting.CurveFitter:fit(T, double[])	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3591= org.apache.commons.math3.optimization.fitting.CurveFitter.TheoreticalValuesFunction:TheoreticalValuesFunction(ParametricUnivariateFunction)	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3592= org.apache.commons.math3.optimization.fitting.CurveFitter:addObservedPoint(double, double)	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3593= org.apache.commons.math3.optimization.fitting.CurveFitter:OldTheoreticalValuesFunction(ParametricUnivariateFunction)	/src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java
3594= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3595= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:BaseAbstractMultivariateOptimizer()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3596= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:optimize(int, FUNC, GoalType, OptimizationData)	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3597= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:BaseAbstractMultivariateOptimizer(ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3598= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:getLowerBound()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3599= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:optimize(int, FUNC, GoalType, double[])	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3600= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:getMaxEvaluations()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3601= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:optimizeInternal(int, FUNC, GoalType, double[])	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3602= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:getUpperBound()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3603= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:getStartPoint()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3604= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:checkParameters()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3605= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:computeObjectiveValue(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3606= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:getConvergenceChecker()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3607= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3608= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:optimizeInternal(int, FUNC, GoalType, OptimizationData)	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3609= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:getGoalType()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3610= org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:getEvaluations()	/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java
3611= org.apache.commons.math3.exception.TooManyIterationsException:TooManyIterationsException(Number)	/src/main/java/org/apache/commons/math3/exception/TooManyIterationsException.java
3612= org.apache.commons.math3.stat.descriptive.WeightedEvaluation:evaluate(double[], double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java
3613= org.apache.commons.math3.stat.descriptive.WeightedEvaluation:evaluate(double[], double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java
3614= org.apache.commons.math3.linear.FieldDecompositionSolver:solve(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldDecompositionSolver.java
3615= org.apache.commons.math3.linear.FieldDecompositionSolver:getInverse()	/src/main/java/org/apache/commons/math3/linear/FieldDecompositionSolver.java
3616= org.apache.commons.math3.linear.FieldDecompositionSolver:solve(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/FieldDecompositionSolver.java
3617= org.apache.commons.math3.linear.FieldDecompositionSolver:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/FieldDecompositionSolver.java
3618= org.apache.commons.math3.genetics.BinaryMutation:mutate(Chromosome)	/src/main/java/org/apache/commons/math3/genetics/BinaryMutation.java
3619= org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor:end()	/src/main/java/org/apache/commons/math3/linear/DefaultRealMatrixPreservingVisitor.java
3620= org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor:start(int, int, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/DefaultRealMatrixPreservingVisitor.java
3621= org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor:visit(int, int, double)	/src/main/java/org/apache/commons/math3/linear/DefaultRealMatrixPreservingVisitor.java
3622= org.apache.commons.math3.ml.clustering.Cluster:addPoint(T)	/src/main/java/org/apache/commons/math3/ml/clustering/Cluster.java
3623= org.apache.commons.math3.ml.clustering.Cluster:Cluster()	/src/main/java/org/apache/commons/math3/ml/clustering/Cluster.java
3624= org.apache.commons.math3.ml.clustering.Cluster:getPoints()	/src/main/java/org/apache/commons/math3/ml/clustering/Cluster.java
3625= org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTaskTest:travelCoordinatesTable(TravellingSalesmanSolver)	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenTrainingTaskTest.java
3626= org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTaskTest:uniqueCities(City[])	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenTrainingTaskTest.java
3627= org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTaskTest:computeTravelDistance(City[])	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenTrainingTaskTest.java
3628= org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTaskTest:testTravellerSalesmanSquareTourSequentialSolver()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenTrainingTaskTest.java
3629= org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTaskTest:testTravellerSalesmanSquareTourParallelSolver()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenTrainingTaskTest.java
3630= org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTaskTest:printSummary(String, TravellingSalesmanSolver)	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenTrainingTaskTest.java
3631= org.apache.commons.math3.userguide.geometry.GeometryExample:getMainPanel()	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3632= org.apache.commons.math3.userguide.geometry.GeometryExample:createCross()	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3633= org.apache.commons.math3.userguide.geometry.GeometryExample.Display:actionPerformed(ActionEvent)	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3634= org.apache.commons.math3.userguide.geometry.GeometryExample:main(String[])	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3635= org.apache.commons.math3.userguide.geometry.GeometryExample.Display:paintConvexHull()	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3636= org.apache.commons.math3.userguide.geometry.GeometryExample:Display()	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3637= org.apache.commons.math3.userguide.geometry.GeometryExample:actionPerformed(ActionEvent)	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3638= org.apache.commons.math3.userguide.geometry.GeometryExample:createRandomPoints(int)	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3639= org.apache.commons.math3.userguide.geometry.GeometryExample:updateToolTip(PInputEvent)	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3640= org.apache.commons.math3.userguide.geometry.GeometryExample:createCircle(int)	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3641= org.apache.commons.math3.userguide.geometry.GeometryExample.Display:Display()	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3642= org.apache.commons.math3.userguide.geometry.GeometryExample.Display:getMainPanel()	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3643= org.apache.commons.math3.userguide.geometry.GeometryExample:createCanvas()	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3644= org.apache.commons.math3.userguide.geometry.GeometryExample:paintConvexHull()	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3645= org.apache.commons.math3.userguide.geometry.GeometryExample:mouseDragged(PInputEvent)	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3646= org.apache.commons.math3.userguide.geometry.GeometryExample:mouseMoved(PInputEvent)	/src/userguide/java/org/apache/commons/math3/userguide/geometry/GeometryExample.java
3647= org.apache.commons.math3.ode.AbstractIntegrator:sanityChecks(ExpandableStatefulODE, double)	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3648= org.apache.commons.math3.ode.AbstractIntegrator:addStepHandler(StepHandler)	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3649= org.apache.commons.math3.ode.AbstractIntegrator:getStepHandlers()	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3650= org.apache.commons.math3.ode.AbstractIntegrator:AbstractIntegrator()	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3651= org.apache.commons.math3.ode.AbstractIntegrator:getEventHandlers()	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3652= org.apache.commons.math3.ode.AbstractIntegrator:setMaxEvaluations(int)	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3653= org.apache.commons.math3.ode.AbstractIntegrator:integrate(ExpandableStatefulODE, double)	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3654= org.apache.commons.math3.ode.AbstractIntegrator:AbstractIntegrator(String)	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3655= org.apache.commons.math3.ode.AbstractIntegrator:computeDerivatives(double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3656= org.apache.commons.math3.ode.AbstractIntegrator:setStateInitialized(boolean)	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3657= org.apache.commons.math3.ode.AbstractIntegrator:acceptStep(AbstractStepInterpolator, double[], double[], double)	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3658= org.apache.commons.math3.ode.AbstractIntegrator:getCurrentSignedStepsize()	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3659= org.apache.commons.math3.ode.AbstractIntegrator:addEventHandler(EventHandler, double, double, int, UnivariateSolver)	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3660= org.apache.commons.math3.ode.AbstractIntegrator:getMaxEvaluations()	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3661= org.apache.commons.math3.ode.AbstractIntegrator:getEvaluations()	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3662= org.apache.commons.math3.ode.AbstractIntegrator:compare(EventState, EventState)	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3663= org.apache.commons.math3.ode.AbstractIntegrator:integrate(FirstOrderDifferentialEquations, double, double[], double, double[])	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3664= org.apache.commons.math3.ode.AbstractIntegrator:setEquations(ExpandableStatefulODE)	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3665= org.apache.commons.math3.ode.AbstractIntegrator:getEvaluationsCounter()	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3666= org.apache.commons.math3.ode.AbstractIntegrator:clearStepHandlers()	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3667= org.apache.commons.math3.ode.AbstractIntegrator:addEventHandler(EventHandler, double, double, int)	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3668= org.apache.commons.math3.ode.AbstractIntegrator:clearEventHandlers()	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3669= org.apache.commons.math3.ode.AbstractIntegrator:getName()	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3670= org.apache.commons.math3.ode.AbstractIntegrator:getExpandable()	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3671= org.apache.commons.math3.ode.AbstractIntegrator:getCurrentStepStart()	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3672= org.apache.commons.math3.ode.AbstractIntegrator:initIntegration(double, double[], double)	/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
3673= org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java
3674= org.apache.commons.math3.optim.nonlinear.vector.Weight:Weight(RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java
3675= org.apache.commons.math3.optim.nonlinear.vector.Weight:Weight(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java
3676= org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver:AbstractUnivariateSolver(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateSolver.java
3677= org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver:AbstractUnivariateSolver(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateSolver.java
3678= org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver:AbstractUnivariateSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateSolver.java
3679= org.apache.commons.math3.linear.EigenDecomposition:solve(RealVector)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3680= org.apache.commons.math3.linear.EigenDecomposition:solve(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3681= org.apache.commons.math3.linear.EigenDecomposition:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3682= org.apache.commons.math3.linear.EigenDecomposition:cdiv(double, double, double, double)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3683= org.apache.commons.math3.linear.EigenDecomposition:findEigenVectorsFromSchur(SchurTransformer)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3684= org.apache.commons.math3.linear.EigenDecomposition:getVT()	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3685= org.apache.commons.math3.linear.EigenDecomposition:getImagEigenvalue(int)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3686= org.apache.commons.math3.linear.EigenDecomposition:getSquareRoot()	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3687= org.apache.commons.math3.linear.EigenDecomposition:getSolver()	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3688= org.apache.commons.math3.linear.EigenDecomposition.Solver:eigenvalueNorm(int)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3689= org.apache.commons.math3.linear.EigenDecomposition.Solver:solve(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3690= org.apache.commons.math3.linear.EigenDecomposition:Solver(double[], double[], ArrayRealVector[])	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3691= org.apache.commons.math3.linear.EigenDecomposition:getRealEigenvalues()	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3692= org.apache.commons.math3.linear.EigenDecomposition:transformToSchur(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3693= org.apache.commons.math3.linear.EigenDecomposition:getEigenvector(int)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3694= org.apache.commons.math3.linear.EigenDecomposition.Solver:getInverse()	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3695= org.apache.commons.math3.linear.EigenDecomposition:eigenvalueNorm(int)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3696= org.apache.commons.math3.linear.EigenDecomposition.Solver:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3697= org.apache.commons.math3.linear.EigenDecomposition:findEigenVectors(double[][])	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3698= org.apache.commons.math3.linear.EigenDecomposition:transformToTridiagonal(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3699= org.apache.commons.math3.linear.EigenDecomposition.Solver:solve(RealVector)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3700= org.apache.commons.math3.linear.EigenDecomposition:getDeterminant()	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3701= org.apache.commons.math3.linear.EigenDecomposition:EigenDecomposition(double[], double[])	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3702= org.apache.commons.math3.linear.EigenDecomposition:getV()	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3703= org.apache.commons.math3.linear.EigenDecomposition:EigenDecomposition(double[], double[], double)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3704= org.apache.commons.math3.linear.EigenDecomposition.Solver:Solver(double[], double[], ArrayRealVector[])	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3705= org.apache.commons.math3.linear.EigenDecomposition:getRealEigenvalue(int)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3706= org.apache.commons.math3.linear.EigenDecomposition:EigenDecomposition(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3707= org.apache.commons.math3.linear.EigenDecomposition:getImagEigenvalues()	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3708= org.apache.commons.math3.linear.EigenDecomposition:EigenDecomposition(RealMatrix, double)	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3709= org.apache.commons.math3.linear.EigenDecomposition:hasComplexEigenvalues()	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3710= org.apache.commons.math3.linear.EigenDecomposition:getInverse()	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3711= org.apache.commons.math3.linear.EigenDecomposition:getD()	/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
3712= org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java
3713= org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest.Rosenbrock:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java
3714= org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest:getCount()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java
3715= org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest:testRosenbrock()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java
3716= org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest:testCircleFitting()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java
3717= org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest:Rosenbrock()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java
3718= org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest.Rosenbrock:Rosenbrock()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java
3719= org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest.Rosenbrock:getCount()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java
3720= org.apache.commons.math3.optim.univariate.SearchInterval:getStartValue()	/src/main/java/org/apache/commons/math3/optim/univariate/SearchInterval.java
3721= org.apache.commons.math3.optim.univariate.SearchInterval:getMax()	/src/main/java/org/apache/commons/math3/optim/univariate/SearchInterval.java
3722= org.apache.commons.math3.optim.univariate.SearchInterval:SearchInterval(double, double, double)	/src/main/java/org/apache/commons/math3/optim/univariate/SearchInterval.java
3723= org.apache.commons.math3.optim.univariate.SearchInterval:getMin()	/src/main/java/org/apache/commons/math3/optim/univariate/SearchInterval.java
3724= org.apache.commons.math3.optim.univariate.SearchInterval:SearchInterval(double, double)	/src/main/java/org/apache/commons/math3/optim/univariate/SearchInterval.java
3725= org.apache.commons.math3.util.CombinatoricsUtils:checkBinomial(int, int)	/src/main/java/org/apache/commons/math3/util/CombinatoricsUtils.java
3726= org.apache.commons.math3.util.CombinatoricsUtils:binomialCoefficient(int, int)	/src/main/java/org/apache/commons/math3/util/CombinatoricsUtils.java
3727= org.apache.commons.math3.util.CombinatoricsUtils:binomialCoefficientDouble(int, int)	/src/main/java/org/apache/commons/math3/util/CombinatoricsUtils.java
3728= org.apache.commons.math3.util.CombinatoricsUtils:factorialLog(int)	/src/main/java/org/apache/commons/math3/util/CombinatoricsUtils.java
3729= org.apache.commons.math3.util.CombinatoricsUtils:binomialCoefficientLog(int, int)	/src/main/java/org/apache/commons/math3/util/CombinatoricsUtils.java
3730= org.apache.commons.math3.util.CombinatoricsUtils:CombinatoricsUtils()	/src/main/java/org/apache/commons/math3/util/CombinatoricsUtils.java
3731= org.apache.commons.math3.util.CombinatoricsUtils:factorialDouble(int)	/src/main/java/org/apache/commons/math3/util/CombinatoricsUtils.java
3732= org.apache.commons.math3.util.CombinatoricsUtils:factorial(int)	/src/main/java/org/apache/commons/math3/util/CombinatoricsUtils.java
3733= org.apache.commons.math3.util.CombinatoricsUtils:stirlingS2(int, int)	/src/main/java/org/apache/commons/math3/util/CombinatoricsUtils.java
3734= org.apache.commons.math3.util.CombinatoricsUtils:combinationsIterator(int, int)	/src/main/java/org/apache/commons/math3/util/CombinatoricsUtils.java
3735= org.apache.commons.math3.optimization.linear.UnboundedSolutionException:UnboundedSolutionException()	/src/main/java/org/apache/commons/math3/optimization/linear/UnboundedSolutionException.java
3736= org.apache.commons.math3.ode.ParameterConfiguration:ParameterConfiguration(String, double)	/src/main/java/org/apache/commons/math3/ode/ParameterConfiguration.java
3737= org.apache.commons.math3.ode.ParameterConfiguration:setHP(double)	/src/main/java/org/apache/commons/math3/ode/ParameterConfiguration.java
3738= org.apache.commons.math3.ode.ParameterConfiguration:getParameterName()	/src/main/java/org/apache/commons/math3/ode/ParameterConfiguration.java
3739= org.apache.commons.math3.ode.ParameterConfiguration:getHP()	/src/main/java/org/apache/commons/math3/ode/ParameterConfiguration.java
3740= org.apache.commons.math3.random.RandomGeneratorFactoryTest:makeGenerator()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorFactoryTest.java
3741= org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution:AbstractMultivariateRealDistribution(RandomGenerator, int)	/src/main/java/org/apache/commons/math3/distribution/AbstractMultivariateRealDistribution.java
3742= org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution:sample(int)	/src/main/java/org/apache/commons/math3/distribution/AbstractMultivariateRealDistribution.java
3743= org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/AbstractMultivariateRealDistribution.java
3744= org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution:getDimension()	/src/main/java/org/apache/commons/math3/distribution/AbstractMultivariateRealDistribution.java
3745= org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution:reseedRandomGenerator(long)	/src/main/java/org/apache/commons/math3/distribution/AbstractMultivariateRealDistribution.java
3746= org.apache.commons.math3.analysis.function.Logit:value(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Logit.java
3747= org.apache.commons.math3.analysis.function.Logit:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Logit.java
3748= org.apache.commons.math3.analysis.function.Logit.Parametric:gradient(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Logit.java
3749= org.apache.commons.math3.analysis.function.Logit:validateParameters(double[])	/src/main/java/org/apache/commons/math3/analysis/function/Logit.java
3750= org.apache.commons.math3.analysis.function.Logit:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Logit.java
3751= org.apache.commons.math3.analysis.function.Logit:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Logit.java
3752= org.apache.commons.math3.analysis.function.Logit.Parametric:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Logit.java
3753= org.apache.commons.math3.analysis.function.Logit:Logit()	/src/main/java/org/apache/commons/math3/analysis/function/Logit.java
3754= org.apache.commons.math3.analysis.function.Logit:gradient(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Logit.java
3755= org.apache.commons.math3.analysis.function.Logit:Logit(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Logit.java
3756= org.apache.commons.math3.analysis.function.Logit:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Logit.java
3757= org.apache.commons.math3.analysis.function.Logit.Parametric:validateParameters(double[])	/src/main/java/org/apache/commons/math3/analysis/function/Logit.java
3758= org.apache.commons.math3.analysis.function.Sigmoid:gradient(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java
3759= org.apache.commons.math3.analysis.function.Sigmoid.Parametric:gradient(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java
3760= org.apache.commons.math3.analysis.function.Sigmoid:Sigmoid()	/src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java
3761= org.apache.commons.math3.analysis.function.Sigmoid:value(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java
3762= org.apache.commons.math3.analysis.function.Sigmoid:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java
3763= org.apache.commons.math3.analysis.function.Sigmoid.Parametric:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java
3764= org.apache.commons.math3.analysis.function.Sigmoid.Parametric:validateParameters(double[])	/src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java
3765= org.apache.commons.math3.analysis.function.Sigmoid:validateParameters(double[])	/src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java
3766= org.apache.commons.math3.analysis.function.Sigmoid:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java
3767= org.apache.commons.math3.analysis.function.Sigmoid:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java
3768= org.apache.commons.math3.analysis.function.Sigmoid:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java
3769= org.apache.commons.math3.analysis.function.Sigmoid:Sigmoid(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java
3770= org.apache.commons.math3.analysis.interpolation.SplineInterpolator:interpolate(double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java
3771= org.apache.commons.math3.util.TransformerMap:removeTransformer(Class<?>)	/src/main/java/org/apache/commons/math3/util/TransformerMap.java
3772= org.apache.commons.math3.util.TransformerMap:classes()	/src/main/java/org/apache/commons/math3/util/TransformerMap.java
3773= org.apache.commons.math3.util.TransformerMap:hashCode()	/src/main/java/org/apache/commons/math3/util/TransformerMap.java
3774= org.apache.commons.math3.util.TransformerMap:containsTransformer(NumberTransformer)	/src/main/java/org/apache/commons/math3/util/TransformerMap.java
3775= org.apache.commons.math3.util.TransformerMap:clear()	/src/main/java/org/apache/commons/math3/util/TransformerMap.java
3776= org.apache.commons.math3.util.TransformerMap:getTransformer(Class<?>)	/src/main/java/org/apache/commons/math3/util/TransformerMap.java
3777= org.apache.commons.math3.util.TransformerMap:containsClass(Class<?>)	/src/main/java/org/apache/commons/math3/util/TransformerMap.java
3778= org.apache.commons.math3.util.TransformerMap:transformers()	/src/main/java/org/apache/commons/math3/util/TransformerMap.java
3779= org.apache.commons.math3.util.TransformerMap:TransformerMap()	/src/main/java/org/apache/commons/math3/util/TransformerMap.java
3780= org.apache.commons.math3.util.TransformerMap:transform(Object)	/src/main/java/org/apache/commons/math3/util/TransformerMap.java
3781= org.apache.commons.math3.util.TransformerMap:equals(Object)	/src/main/java/org/apache/commons/math3/util/TransformerMap.java
3782= org.apache.commons.math3.util.TransformerMap:putTransformer(Class<?>, NumberTransformer)	/src/main/java/org/apache/commons/math3/util/TransformerMap.java
3783= org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues:getVariance()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummaryValues.java
3784= org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues:toString()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummaryValues.java
3785= org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues:getMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummaryValues.java
3786= org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues:getStandardDeviation()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummaryValues.java
3787= org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues:equals(Object)	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummaryValues.java
3788= org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummaryValues.java
3789= org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues:getSum()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummaryValues.java
3790= org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues:hashCode()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummaryValues.java
3791= org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues:getMin()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummaryValues.java
3792= org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues:StatisticalSummaryValues(double, double, long, double, double, double)	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummaryValues.java
3793= org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues:getMax()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummaryValues.java
3794= org.apache.commons.math3.complex.ComplexFormat:getImaginaryCharacter()	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3795= org.apache.commons.math3.complex.ComplexFormat:format(Complex)	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3796= org.apache.commons.math3.complex.ComplexFormat:getInstance()	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3797= org.apache.commons.math3.complex.ComplexFormat:parse(String, ParsePosition)	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3798= org.apache.commons.math3.complex.ComplexFormat:ComplexFormat(String, NumberFormat, NumberFormat)	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3799= org.apache.commons.math3.complex.ComplexFormat:getInstance(String, Locale)	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3800= org.apache.commons.math3.complex.ComplexFormat:getImaginaryFormat()	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3801= org.apache.commons.math3.complex.ComplexFormat:ComplexFormat(NumberFormat, NumberFormat)	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3802= org.apache.commons.math3.complex.ComplexFormat:ComplexFormat(String, NumberFormat)	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3803= org.apache.commons.math3.complex.ComplexFormat:ComplexFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3804= org.apache.commons.math3.complex.ComplexFormat:ComplexFormat()	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3805= org.apache.commons.math3.complex.ComplexFormat:format(Complex, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3806= org.apache.commons.math3.complex.ComplexFormat:format(Object, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3807= org.apache.commons.math3.complex.ComplexFormat:ComplexFormat(String)	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3808= org.apache.commons.math3.complex.ComplexFormat:format(Double)	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3809= org.apache.commons.math3.complex.ComplexFormat:formatImaginary(double, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3810= org.apache.commons.math3.complex.ComplexFormat:getAvailableLocales()	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3811= org.apache.commons.math3.complex.ComplexFormat:parse(String)	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3812= org.apache.commons.math3.complex.ComplexFormat:getInstance(Locale)	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3813= org.apache.commons.math3.complex.ComplexFormat:getRealFormat()	/src/main/java/org/apache/commons/math3/complex/ComplexFormat.java
3814= org.apache.commons.math3.distribution.IntegerDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/IntegerDistribution.java
3815= org.apache.commons.math3.distribution.IntegerDistribution:cumulativeProbability(int)	/src/main/java/org/apache/commons/math3/distribution/IntegerDistribution.java
3816= org.apache.commons.math3.distribution.IntegerDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/IntegerDistribution.java
3817= org.apache.commons.math3.distribution.IntegerDistribution:reseedRandomGenerator(long)	/src/main/java/org/apache/commons/math3/distribution/IntegerDistribution.java
3818= org.apache.commons.math3.distribution.IntegerDistribution:sample(int)	/src/main/java/org/apache/commons/math3/distribution/IntegerDistribution.java
3819= org.apache.commons.math3.distribution.IntegerDistribution:cumulativeProbability(int, int)	/src/main/java/org/apache/commons/math3/distribution/IntegerDistribution.java
3820= org.apache.commons.math3.distribution.IntegerDistribution:inverseCumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/IntegerDistribution.java
3821= org.apache.commons.math3.distribution.IntegerDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/IntegerDistribution.java
3822= org.apache.commons.math3.distribution.IntegerDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/IntegerDistribution.java
3823= org.apache.commons.math3.distribution.IntegerDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/IntegerDistribution.java
3824= org.apache.commons.math3.distribution.IntegerDistribution:probability(int)	/src/main/java/org/apache/commons/math3/distribution/IntegerDistribution.java
3825= org.apache.commons.math3.distribution.IntegerDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/IntegerDistribution.java
3826= org.apache.commons.math3.analysis.differentiation.JacobianFunction:value(double[])	/src/main/java/org/apache/commons/math3/analysis/differentiation/JacobianFunction.java
3827= org.apache.commons.math3.analysis.differentiation.JacobianFunction:JacobianFunction(MultivariateDifferentiableVectorFunction)	/src/main/java/org/apache/commons/math3/analysis/differentiation/JacobianFunction.java
3828= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest:cannotAddCovarianceDataThatIsNotSquare()	/src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java
3829= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest:getSampleSize()	/src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java
3830= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest:getNumberOfRegressors()	/src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java
3831= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest:testNewSample2()	/src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java
3832= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest:cannotAddNullYSampleData()	/src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java
3833= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest:testGLSOLSConsistency()	/src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java
3834= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest:cannotAddSampleDataWithSizeMismatch()	/src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java
3835= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest:notEnoughData()	/src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java
3836= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest:setUp()	/src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java
3837= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest:cannotAddXSampleData()	/src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java
3838= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest:createRegression()	/src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java
3839= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest:testYVariance()	/src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java
3840= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest:cannotAddCovarianceDataWithSampleSizeMismatch()	/src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java
3841= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest:testGLSEfficiency()	/src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java
3842= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest:cannotAddNullCovarianceData()	/src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java
3843= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegrator:ClassicalRungeKuttaIntegrator(double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegrator.java
3844= org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer.Optimum:getIterations()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer.java
3845= org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer:getEvaluations()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer.java
3846= org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer.Optimum:getEvaluations()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer.java
3847= org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer:optimize(LeastSquaresProblem)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer.java
3848= org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer:getIterations()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer.java
3849= org.apache.commons.math3.geometry.partitioning.Transform:apply(Point<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Transform.java
3850= org.apache.commons.math3.geometry.partitioning.Transform:apply(SubHyperplane<T>, Hyperplane<S>, Hyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Transform.java
3851= org.apache.commons.math3.geometry.partitioning.Transform:apply(Hyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Transform.java
3852= org.apache.commons.math3.exception.ZeroException:ZeroException(Localizable, Object)	/src/main/java/org/apache/commons/math3/exception/ZeroException.java
3853= org.apache.commons.math3.exception.ZeroException:ZeroException()	/src/main/java/org/apache/commons/math3/exception/ZeroException.java
3854= org.apache.commons.math3.analysis.function.Atanh:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Atanh.java
3855= org.apache.commons.math3.analysis.function.Atanh:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Atanh.java
3856= org.apache.commons.math3.analysis.function.Atanh:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Atanh.java
3857= org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:RungeKuttaStepInterpolator()	/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator.java
3858= org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:readExternal(ObjectInput)	/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator.java
3859= org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:RungeKuttaStepInterpolator(RungeKuttaStepInterpolator)	/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator.java
3860= org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:shift()	/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator.java
3861= org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:reinitialize(AbstractIntegrator, double[], double[][], boolean, EquationsMapper, EquationsMapper[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator.java
3862= org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:writeExternal(ObjectOutput)	/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator.java
3863= org.apache.commons.math3.exception.DimensionMismatchException:DimensionMismatchException(Localizable, int, int)	/src/main/java/org/apache/commons/math3/exception/DimensionMismatchException.java
3864= org.apache.commons.math3.exception.DimensionMismatchException:DimensionMismatchException(int, int)	/src/main/java/org/apache/commons/math3/exception/DimensionMismatchException.java
3865= org.apache.commons.math3.exception.DimensionMismatchException:getDimension()	/src/main/java/org/apache/commons/math3/exception/DimensionMismatchException.java
3866= org.apache.commons.math3.optimization.general.Preconditioner:precondition(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/general/Preconditioner.java
3867= org.apache.commons.math3.linear.FieldVectorChangingVisitor:visit(int, T)	/src/main/java/org/apache/commons/math3/linear/FieldVectorChangingVisitor.java
3868= org.apache.commons.math3.linear.FieldVectorChangingVisitor:start(int, int, int)	/src/main/java/org/apache/commons/math3/linear/FieldVectorChangingVisitor.java
3869= org.apache.commons.math3.linear.FieldVectorChangingVisitor:end()	/src/main/java/org/apache/commons/math3/linear/FieldVectorChangingVisitor.java
3870= org.apache.commons.math3.userguide.ClusterAlgorithmComparison:makeCircles(int, boolean, double, double, RandomGenerator)	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3871= org.apache.commons.math3.userguide.ClusterAlgorithmComparison:transform(Clusterable, int, int)	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3872= org.apache.commons.math3.userguide.ClusterAlgorithmComparison.Display:Display()	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3873= org.apache.commons.math3.userguide.ClusterAlgorithmComparison.ClusterPlot:paintComponent(Graphics)	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3874= org.apache.commons.math3.userguide.ClusterAlgorithmComparison:makeRandom(int)	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3875= org.apache.commons.math3.userguide.ClusterAlgorithmComparison:generateNoiseVector(NormalDistribution)	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3876= org.apache.commons.math3.userguide.ClusterAlgorithmComparison:normalize(List<Vector2D>, double, double, double, double)	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3877= org.apache.commons.math3.userguide.ClusterAlgorithmComparison:Display()	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3878= org.apache.commons.math3.userguide.ClusterAlgorithmComparison.ClusterPlot:getPreferredSize()	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3879= org.apache.commons.math3.userguide.ClusterAlgorithmComparison:makeBlobs(int, int, double, double, double, boolean, RandomGenerator)	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3880= org.apache.commons.math3.userguide.ClusterAlgorithmComparison:paintComponent(Graphics)	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3881= org.apache.commons.math3.userguide.ClusterAlgorithmComparison:getPreferredSize()	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3882= org.apache.commons.math3.userguide.ClusterAlgorithmComparison:makeMoons(int, boolean, double, RandomGenerator)	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3883= org.apache.commons.math3.userguide.ClusterAlgorithmComparison.ClusterPlot:ClusterPlot(List<? extends Cluster<DoublePoint>>, long)	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3884= org.apache.commons.math3.userguide.ClusterAlgorithmComparison.ClusterPlot:transform(Clusterable, int, int)	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3885= org.apache.commons.math3.userguide.ClusterAlgorithmComparison:ClusterPlot(List<? extends Cluster<DoublePoint>>, long)	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3886= org.apache.commons.math3.userguide.ClusterAlgorithmComparison:main(String[])	/src/userguide/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java
3887= org.apache.commons.math3.random.SynchronizedRandomGenerator:nextLong()	/src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java
3888= org.apache.commons.math3.random.SynchronizedRandomGenerator:nextDouble()	/src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java
3889= org.apache.commons.math3.random.SynchronizedRandomGenerator:nextBoolean()	/src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java
3890= org.apache.commons.math3.random.SynchronizedRandomGenerator:setSeed(int[])	/src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java
3891= org.apache.commons.math3.random.SynchronizedRandomGenerator:setSeed(long)	/src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java
3892= org.apache.commons.math3.random.SynchronizedRandomGenerator:nextGaussian()	/src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java
3893= org.apache.commons.math3.random.SynchronizedRandomGenerator:nextBytes(byte[])	/src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java
3894= org.apache.commons.math3.random.SynchronizedRandomGenerator:nextInt(int)	/src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java
3895= org.apache.commons.math3.random.SynchronizedRandomGenerator:setSeed(int)	/src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java
3896= org.apache.commons.math3.random.SynchronizedRandomGenerator:nextFloat()	/src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java
3897= org.apache.commons.math3.random.SynchronizedRandomGenerator:SynchronizedRandomGenerator(RandomGenerator)	/src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java
3898= org.apache.commons.math3.random.SynchronizedRandomGenerator:nextInt()	/src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java
3899= org.apache.commons.math3.optimization.fitting.PolynomialFitter:PolynomialFitter(DifferentiableMultivariateVectorOptimizer)	/src/main/java/org/apache/commons/math3/optimization/fitting/PolynomialFitter.java
3900= org.apache.commons.math3.optimization.fitting.PolynomialFitter:fit(double[])	/src/main/java/org/apache/commons/math3/optimization/fitting/PolynomialFitter.java
3901= org.apache.commons.math3.optimization.fitting.PolynomialFitter:PolynomialFitter(int, DifferentiableMultivariateVectorOptimizer)	/src/main/java/org/apache/commons/math3/optimization/fitting/PolynomialFitter.java
3902= org.apache.commons.math3.optimization.fitting.PolynomialFitter:fit()	/src/main/java/org/apache/commons/math3/optimization/fitting/PolynomialFitter.java
3903= org.apache.commons.math3.optimization.fitting.PolynomialFitter:fit(int, double[])	/src/main/java/org/apache/commons/math3/optimization/fitting/PolynomialFitter.java
3904= org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:calculateDifferences(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/WilcoxonSignedRankTest.java
3905= org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:WilcoxonSignedRankTest()	/src/main/java/org/apache/commons/math3/stat/inference/WilcoxonSignedRankTest.java
3906= org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:calculateAsymptoticPValue(double, int)	/src/main/java/org/apache/commons/math3/stat/inference/WilcoxonSignedRankTest.java
3907= org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:ensureDataConformance(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/WilcoxonSignedRankTest.java
3908= org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:wilcoxonSignedRank(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/WilcoxonSignedRankTest.java
3909= org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:calculateExactPValue(double, int)	/src/main/java/org/apache/commons/math3/stat/inference/WilcoxonSignedRankTest.java
3910= org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:WilcoxonSignedRankTest(NaNStrategy, TiesStrategy)	/src/main/java/org/apache/commons/math3/stat/inference/WilcoxonSignedRankTest.java
3911= org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:calculateAbsoluteDifferences(double[])	/src/main/java/org/apache/commons/math3/stat/inference/WilcoxonSignedRankTest.java
3912= org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:wilcoxonSignedRankTest(double[], double[], boolean)	/src/main/java/org/apache/commons/math3/stat/inference/WilcoxonSignedRankTest.java
3913= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest.LinearProblem:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java
3914= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest:testNoOptimum()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java
3915= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest.LinearProblem:LinearProblem(double[][], double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java
3916= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest:getTarget()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java
3917= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest:LinearProblem(double[][], double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java
3918= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest:testGetOptimaBeforeOptimize()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java
3919= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest:optimize(OptimizationData)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java
3920= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest.LinearProblem:getModelFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java
3921= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest:testTrivial()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java
3922= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest:getModelFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java
3923= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java
3924= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest.LinearProblem:getTarget()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java
3925= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java
3926= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest.LinearProblem:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java
3927= org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest:testIssue914()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizerTest.java
3928= org.apache.commons.math3.geometry.euclidean.threed.Plane:intersection(Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3929= org.apache.commons.math3.geometry.euclidean.threed.Plane:getPointAt(Vector2D, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3930= org.apache.commons.math3.geometry.euclidean.threed.Plane:translate(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3931= org.apache.commons.math3.geometry.euclidean.threed.Plane:Plane(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3932= org.apache.commons.math3.geometry.euclidean.threed.Plane:Plane(Vector3D, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3933= org.apache.commons.math3.geometry.euclidean.threed.Plane:setFrame()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3934= org.apache.commons.math3.geometry.euclidean.threed.Plane:toSpace(Point<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3935= org.apache.commons.math3.geometry.euclidean.threed.Plane:Plane(Vector3D, Vector3D, Vector3D, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3936= org.apache.commons.math3.geometry.euclidean.threed.Plane:getTolerance()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3937= org.apache.commons.math3.geometry.euclidean.threed.Plane:isSimilarTo(Plane)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3938= org.apache.commons.math3.geometry.euclidean.threed.Plane:getOrigin()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3939= org.apache.commons.math3.geometry.euclidean.threed.Plane:getOffset(Vector<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3940= org.apache.commons.math3.geometry.euclidean.threed.Plane:setNormal(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3941= org.apache.commons.math3.geometry.euclidean.threed.Plane:reset(Plane)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3942= org.apache.commons.math3.geometry.euclidean.threed.Plane:contains(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3943= org.apache.commons.math3.geometry.euclidean.threed.Plane:getOffset(Plane)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3944= org.apache.commons.math3.geometry.euclidean.threed.Plane:reset(Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3945= org.apache.commons.math3.geometry.euclidean.threed.Plane:project(Point<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3946= org.apache.commons.math3.geometry.euclidean.threed.Plane:toSubSpace(Vector<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3947= org.apache.commons.math3.geometry.euclidean.threed.Plane:wholeHyperplane()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3948= org.apache.commons.math3.geometry.euclidean.threed.Plane:getOffset(Point<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3949= org.apache.commons.math3.geometry.euclidean.threed.Plane:getNormal()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3950= org.apache.commons.math3.geometry.euclidean.threed.Plane:rotate(Vector3D, Rotation)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3951= org.apache.commons.math3.geometry.euclidean.threed.Plane:wholeSpace()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3952= org.apache.commons.math3.geometry.euclidean.threed.Plane:Plane(Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3953= org.apache.commons.math3.geometry.euclidean.threed.Plane:getV()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3954= org.apache.commons.math3.geometry.euclidean.threed.Plane:Plane(Vector3D, Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3955= org.apache.commons.math3.geometry.euclidean.threed.Plane:Plane(Plane)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3956= org.apache.commons.math3.geometry.euclidean.threed.Plane:getU()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3957= org.apache.commons.math3.geometry.euclidean.threed.Plane:toSpace(Vector<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3958= org.apache.commons.math3.geometry.euclidean.threed.Plane:intersection(Plane, Plane, Plane)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3959= org.apache.commons.math3.geometry.euclidean.threed.Plane:Plane(Vector3D, Vector3D, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3960= org.apache.commons.math3.geometry.euclidean.threed.Plane:copySelf()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3961= org.apache.commons.math3.geometry.euclidean.threed.Plane:revertSelf()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3962= org.apache.commons.math3.geometry.euclidean.threed.Plane:toSubSpace(Point<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3963= org.apache.commons.math3.geometry.euclidean.threed.Plane:sameOrientationAs(Hyperplane<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3964= org.apache.commons.math3.geometry.euclidean.threed.Plane:intersection(Plane)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
3965= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:newCovarianceData(double[][])	/src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java
3966= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:getOmegaInverse()	/src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java
3967= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:calculateBeta()	/src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java
3968= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:calculateErrorVariance()	/src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java
3969= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:newSampleData(double[], double[][], double[][])	/src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java
3970= org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:calculateBetaVariance()	/src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java
3971= org.apache.commons.math3.linear.OpenMapRealMatrix:getColumnDimension()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3972= org.apache.commons.math3.linear.OpenMapRealMatrix:multiply(OpenMapRealMatrix)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3973= org.apache.commons.math3.linear.OpenMapRealMatrix:computeKey(int, int)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3974= org.apache.commons.math3.linear.OpenMapRealMatrix:copy()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3975= org.apache.commons.math3.linear.OpenMapRealMatrix:subtract(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3976= org.apache.commons.math3.linear.OpenMapRealMatrix:createMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3977= org.apache.commons.math3.linear.OpenMapRealMatrix:getEntry(int, int)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3978= org.apache.commons.math3.linear.OpenMapRealMatrix:setEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3979= org.apache.commons.math3.linear.OpenMapRealMatrix:subtract(OpenMapRealMatrix)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3980= org.apache.commons.math3.linear.OpenMapRealMatrix:addToEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3981= org.apache.commons.math3.linear.OpenMapRealMatrix:multiplyEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3982= org.apache.commons.math3.linear.OpenMapRealMatrix:getRowDimension()	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3983= org.apache.commons.math3.linear.OpenMapRealMatrix:OpenMapRealMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3984= org.apache.commons.math3.linear.OpenMapRealMatrix:multiply(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3985= org.apache.commons.math3.linear.OpenMapRealMatrix:add(OpenMapRealMatrix)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3986= org.apache.commons.math3.linear.OpenMapRealMatrix:OpenMapRealMatrix(OpenMapRealMatrix)	/src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java
3987= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter:value(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapter.java
3988= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter:MultivariateFunctionPenaltyAdapter(MultivariateFunction, double[], double[], double, double[])	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapter.java
3989= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:hashCode()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
3990= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:getMax()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
3991= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:getGeometricMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
3992= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:AggregateSummaryStatistics()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
3993= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:getSum()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
3994= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:getVariance()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
3995= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:equals(Object)	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
3996= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:getSecondMoment()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
3997= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:createContributingStatistics()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
3998= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:AggregateSummaryStatistics(SummaryStatistics)	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
3999= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:AggregateSummaryStatistics(SummaryStatistics, SummaryStatistics)	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
4000= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:getSummary()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
4001= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.AggregatingSummaryStatistics:AggregatingSummaryStatistics(SummaryStatistics)	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
4002= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:getMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
4003= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:getSumsq()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
4004= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:addValue(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
4005= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:getStandardDeviation()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
4006= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.AggregatingSummaryStatistics:equals(Object)	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
4007= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
4008= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:getSumOfLogs()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
4009= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:AggregatingSummaryStatistics(SummaryStatistics)	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
4010= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:aggregate(Collection<SummaryStatistics>)	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
4011= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.AggregatingSummaryStatistics:hashCode()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
4012= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.AggregatingSummaryStatistics:addValue(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
4013= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics:getMin()	/src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java
4014= org.apache.commons.math3.optim.univariate.BracketFinderTest:testCubicMin()	/src/test/java/org/apache/commons/math3/optim/univariate/BracketFinderTest.java
4015= org.apache.commons.math3.optim.univariate.BracketFinderTest:testCubicMax()	/src/test/java/org/apache/commons/math3/optim/univariate/BracketFinderTest.java
4016= org.apache.commons.math3.optim.univariate.BracketFinderTest:testMinimumIsOnIntervalBoundary()	/src/test/java/org/apache/commons/math3/optim/univariate/BracketFinderTest.java
4017= org.apache.commons.math3.optim.univariate.BracketFinderTest:testIntervalBoundsOrdering()	/src/test/java/org/apache/commons/math3/optim/univariate/BracketFinderTest.java
4018= org.apache.commons.math3.optim.univariate.BracketFinderTest:value(double)	/src/test/java/org/apache/commons/math3/optim/univariate/BracketFinderTest.java
4019= org.apache.commons.math3.analysis.solvers.LaguerreSolver:doSolve()	/src/main/java/org/apache/commons/math3/analysis/solvers/LaguerreSolver.java
4020= org.apache.commons.math3.analysis.solvers.LaguerreSolver:solveAll(Complex, Complex)	/src/main/java/org/apache/commons/math3/analysis/solvers/LaguerreSolver.java
4021= org.apache.commons.math3.analysis.solvers.LaguerreSolver:LaguerreSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/LaguerreSolver.java
4022= org.apache.commons.math3.analysis.solvers.LaguerreSolver:solveAllComplex(double[], double)	/src/main/java/org/apache/commons/math3/analysis/solvers/LaguerreSolver.java
4023= org.apache.commons.math3.analysis.solvers.LaguerreSolver:solve(Complex, Complex)	/src/main/java/org/apache/commons/math3/analysis/solvers/LaguerreSolver.java
4024= org.apache.commons.math3.analysis.solvers.LaguerreSolver:isRoot(double, double, Complex)	/src/main/java/org/apache/commons/math3/analysis/solvers/LaguerreSolver.java
4025= org.apache.commons.math3.analysis.solvers.LaguerreSolver:solveComplex(double[], double)	/src/main/java/org/apache/commons/math3/analysis/solvers/LaguerreSolver.java
4026= org.apache.commons.math3.analysis.solvers.LaguerreSolver:LaguerreSolver(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/LaguerreSolver.java
4027= org.apache.commons.math3.analysis.solvers.LaguerreSolver.ComplexSolver:solveAll(Complex, Complex)	/src/main/java/org/apache/commons/math3/analysis/solvers/LaguerreSolver.java
4028= org.apache.commons.math3.analysis.solvers.LaguerreSolver:LaguerreSolver()	/src/main/java/org/apache/commons/math3/analysis/solvers/LaguerreSolver.java
4029= org.apache.commons.math3.analysis.solvers.LaguerreSolver.ComplexSolver:isRoot(double, double, Complex)	/src/main/java/org/apache/commons/math3/analysis/solvers/LaguerreSolver.java
4030= org.apache.commons.math3.analysis.solvers.LaguerreSolver:LaguerreSolver(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/LaguerreSolver.java
4031= org.apache.commons.math3.analysis.solvers.LaguerreSolver:laguerre(double, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/LaguerreSolver.java
4032= org.apache.commons.math3.analysis.solvers.LaguerreSolver.ComplexSolver:solve(Complex, Complex)	/src/main/java/org/apache/commons/math3/analysis/solvers/LaguerreSolver.java
4033= org.apache.commons.math3.distribution.PascalDistribution:PascalDistribution(int, double)	/src/main/java/org/apache/commons/math3/distribution/PascalDistribution.java
4034= org.apache.commons.math3.distribution.PascalDistribution:getProbabilityOfSuccess()	/src/main/java/org/apache/commons/math3/distribution/PascalDistribution.java
4035= org.apache.commons.math3.distribution.PascalDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/PascalDistribution.java
4036= org.apache.commons.math3.distribution.PascalDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/PascalDistribution.java
4037= org.apache.commons.math3.distribution.PascalDistribution:logProbability(int)	/src/main/java/org/apache/commons/math3/distribution/PascalDistribution.java
4038= org.apache.commons.math3.distribution.PascalDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/PascalDistribution.java
4039= org.apache.commons.math3.distribution.PascalDistribution:PascalDistribution(RandomGenerator, int, double)	/src/main/java/org/apache/commons/math3/distribution/PascalDistribution.java
4040= org.apache.commons.math3.distribution.PascalDistribution:getNumberOfSuccesses()	/src/main/java/org/apache/commons/math3/distribution/PascalDistribution.java
4041= org.apache.commons.math3.distribution.PascalDistribution:probability(int)	/src/main/java/org/apache/commons/math3/distribution/PascalDistribution.java
4042= org.apache.commons.math3.distribution.PascalDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/PascalDistribution.java
4043= org.apache.commons.math3.distribution.PascalDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/PascalDistribution.java
4044= org.apache.commons.math3.distribution.PascalDistribution:cumulativeProbability(int)	/src/main/java/org/apache/commons/math3/distribution/PascalDistribution.java
4045= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat:getInstance(Locale)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat.java
4046= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat:parse(String)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat.java
4047= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat:Vector2DFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat.java
4048= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat:Vector2DFormat(String, String, String)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat.java
4049= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat:Vector2DFormat(String, String, String, NumberFormat)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat.java
4050= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat:getInstance()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat.java
4051= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat:Vector2DFormat()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat.java
4052= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat:format(Vector<Euclidean2D>, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat.java
4053= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat:parse(String, ParsePosition)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat.java
4054= org.apache.commons.math3.random.Well44497bTest:testReferenceCode()	/src/test/java/org/apache/commons/math3/random/Well44497bTest.java
4055= org.apache.commons.math3.random.Well44497bTest:makeGenerator()	/src/test/java/org/apache/commons/math3/random/Well44497bTest.java
4056= org.apache.commons.math3.ml.neuralnet.OffsetFeatureInitializer:OffsetFeatureInitializer(FeatureInitializer)	/src/test/java/org/apache/commons/math3/ml/neuralnet/OffsetFeatureInitializer.java
4057= org.apache.commons.math3.ml.neuralnet.OffsetFeatureInitializer:value()	/src/test/java/org/apache/commons/math3/ml/neuralnet/OffsetFeatureInitializer.java
4058= org.apache.commons.math3.analysis.integration.TrapezoidIntegrator:TrapezoidIntegrator(int, int)	/src/main/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegrator.java
4059= org.apache.commons.math3.analysis.integration.TrapezoidIntegrator:stage(BaseAbstractUnivariateIntegrator, int)	/src/main/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegrator.java
4060= org.apache.commons.math3.analysis.integration.TrapezoidIntegrator:TrapezoidIntegrator()	/src/main/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegrator.java
4061= org.apache.commons.math3.analysis.integration.TrapezoidIntegrator:TrapezoidIntegrator(double, double, int, int)	/src/main/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegrator.java
4062= org.apache.commons.math3.analysis.integration.TrapezoidIntegrator:doIntegrate()	/src/main/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegrator.java
4063= org.apache.commons.math3.optim.linear.SimplexTableau:normalize(LinearConstraint)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4064= org.apache.commons.math3.optim.linear.SimplexTableau:SimplexTableau(LinearObjectiveFunction, Collection<LinearConstraint>, GoalType, boolean, double, int)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4065= org.apache.commons.math3.optim.linear.SimplexTableau:getArtificialVariableOffset()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4066= org.apache.commons.math3.optim.linear.SimplexTableau:hashCode()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4067= org.apache.commons.math3.optim.linear.SimplexTableau:getWidth()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4068= org.apache.commons.math3.optim.linear.SimplexTableau:getNumDecisionVariables()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4069= org.apache.commons.math3.optim.linear.SimplexTableau:findBasicRow(int)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4070= org.apache.commons.math3.optim.linear.SimplexTableau:initializeBasicVariables(int)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4071= org.apache.commons.math3.optim.linear.SimplexTableau:readObject(ObjectInputStream)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4072= org.apache.commons.math3.optim.linear.SimplexTableau:normalizeConstraints(Collection<LinearConstraint>)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4073= org.apache.commons.math3.optim.linear.SimplexTableau:divideRow(int, double)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4074= org.apache.commons.math3.optim.linear.SimplexTableau:dropPhase1Objective()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4075= org.apache.commons.math3.optim.linear.SimplexTableau:getSolution()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4076= org.apache.commons.math3.optim.linear.SimplexTableau:initializeColumnLabels()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4077= org.apache.commons.math3.optim.linear.SimplexTableau:getNumSlackVariables()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4078= org.apache.commons.math3.optim.linear.SimplexTableau:equals(Object)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4079= org.apache.commons.math3.optim.linear.SimplexTableau:performRowOperations(int, int)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4080= org.apache.commons.math3.optim.linear.SimplexTableau:copyArray(double[], double[])	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4081= org.apache.commons.math3.optim.linear.SimplexTableau:getSlackVariableOffset()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4082= org.apache.commons.math3.optim.linear.SimplexTableau:getOriginalNumDecisionVariables()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4083= org.apache.commons.math3.optim.linear.SimplexTableau:createTableau(boolean)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4084= org.apache.commons.math3.optim.linear.SimplexTableau:writeObject(ObjectOutputStream)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4085= org.apache.commons.math3.optim.linear.SimplexTableau:getConstraintTypeCounts(Relationship)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4086= org.apache.commons.math3.optim.linear.SimplexTableau:getNumArtificialVariables()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4087= org.apache.commons.math3.optim.linear.SimplexTableau:getNumObjectiveFunctions()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4088= org.apache.commons.math3.optim.linear.SimplexTableau:getData()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4089= org.apache.commons.math3.optim.linear.SimplexTableau:getBasicVariable(int)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4090= org.apache.commons.math3.optim.linear.SimplexTableau:getEntry(int, int)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4091= org.apache.commons.math3.optim.linear.SimplexTableau:getInvertedCoefficientSum(RealVector)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4092= org.apache.commons.math3.optim.linear.SimplexTableau:subtractRow(int, int, double)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4093= org.apache.commons.math3.optim.linear.SimplexTableau:getRow(int)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4094= org.apache.commons.math3.optim.linear.SimplexTableau:setEntry(int, int, double)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4095= org.apache.commons.math3.optim.linear.SimplexTableau:getHeight()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4096= org.apache.commons.math3.optim.linear.SimplexTableau:getBasicRow(int)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4097= org.apache.commons.math3.optim.linear.SimplexTableau:SimplexTableau(LinearObjectiveFunction, Collection<LinearConstraint>, GoalType, boolean, double)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4098= org.apache.commons.math3.optim.linear.SimplexTableau:isOptimal()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4099= org.apache.commons.math3.optim.linear.SimplexTableau:getRhsOffset()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java
4100= org.apache.commons.math3.genetics.OnePointCrossover:crossover(AbstractListChromosome<T>, AbstractListChromosome<T>)	/src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java
4101= org.apache.commons.math3.genetics.OnePointCrossover:crossover(Chromosome, Chromosome)	/src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java
4102= org.apache.commons.math3.filter.DefaultMeasurementModel:getMeasurementNoise()	/src/main/java/org/apache/commons/math3/filter/DefaultMeasurementModel.java
4103= org.apache.commons.math3.filter.DefaultMeasurementModel:DefaultMeasurementModel(double[][], double[][])	/src/main/java/org/apache/commons/math3/filter/DefaultMeasurementModel.java
4104= org.apache.commons.math3.filter.DefaultMeasurementModel:getMeasurementMatrix()	/src/main/java/org/apache/commons/math3/filter/DefaultMeasurementModel.java
4105= org.apache.commons.math3.filter.DefaultMeasurementModel:DefaultMeasurementModel(RealMatrix, RealMatrix)	/src/main/java/org/apache/commons/math3/filter/DefaultMeasurementModel.java
4106= org.apache.commons.math3.linear.Array2DRowFieldMatrix:Array2DRowFieldMatrix(Field<T>, T[])	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4107= org.apache.commons.math3.linear.Array2DRowFieldMatrix:add(Array2DRowFieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4108= org.apache.commons.math3.linear.Array2DRowFieldMatrix:getDataRef()	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4109= org.apache.commons.math3.linear.Array2DRowFieldMatrix:getColumnDimension()	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4110= org.apache.commons.math3.linear.Array2DRowFieldMatrix:subtract(Array2DRowFieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4111= org.apache.commons.math3.linear.Array2DRowFieldMatrix:walkInRowOrder(FieldMatrixChangingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4112= org.apache.commons.math3.linear.Array2DRowFieldMatrix:walkInColumnOrder(FieldMatrixPreservingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4113= org.apache.commons.math3.linear.Array2DRowFieldMatrix:walkInColumnOrder(FieldMatrixChangingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4114= org.apache.commons.math3.linear.Array2DRowFieldMatrix:addToEntry(int, int, T)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4115= org.apache.commons.math3.linear.Array2DRowFieldMatrix:walkInRowOrder(FieldMatrixChangingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4116= org.apache.commons.math3.linear.Array2DRowFieldMatrix:setEntry(int, int, T)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4117= org.apache.commons.math3.linear.Array2DRowFieldMatrix:Array2DRowFieldMatrix(Field<T>, T[][])	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4118= org.apache.commons.math3.linear.Array2DRowFieldMatrix:copyOut()	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4119= org.apache.commons.math3.linear.Array2DRowFieldMatrix:Array2DRowFieldMatrix(T[][])	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4120= org.apache.commons.math3.linear.Array2DRowFieldMatrix:Array2DRowFieldMatrix(Field<T>)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4121= org.apache.commons.math3.linear.Array2DRowFieldMatrix:Array2DRowFieldMatrix(Field<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4122= org.apache.commons.math3.linear.Array2DRowFieldMatrix:getEntry(int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4123= org.apache.commons.math3.linear.Array2DRowFieldMatrix:walkInRowOrder(FieldMatrixPreservingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4124= org.apache.commons.math3.linear.Array2DRowFieldMatrix:getRowDimension()	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4125= org.apache.commons.math3.linear.Array2DRowFieldMatrix:multiply(Array2DRowFieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4126= org.apache.commons.math3.linear.Array2DRowFieldMatrix:walkInRowOrder(FieldMatrixPreservingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4127= org.apache.commons.math3.linear.Array2DRowFieldMatrix:walkInColumnOrder(FieldMatrixPreservingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4128= org.apache.commons.math3.linear.Array2DRowFieldMatrix:setSubMatrix(T[][], int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4129= org.apache.commons.math3.linear.Array2DRowFieldMatrix:Array2DRowFieldMatrix(T[][], boolean)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4130= org.apache.commons.math3.linear.Array2DRowFieldMatrix:operate(T[])	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4131= org.apache.commons.math3.linear.Array2DRowFieldMatrix:Array2DRowFieldMatrix(Field<T>, T[][], boolean)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4132= org.apache.commons.math3.linear.Array2DRowFieldMatrix:createMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4133= org.apache.commons.math3.linear.Array2DRowFieldMatrix:preMultiply(T[])	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4134= org.apache.commons.math3.linear.Array2DRowFieldMatrix:copyIn(T[][])	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4135= org.apache.commons.math3.linear.Array2DRowFieldMatrix:walkInColumnOrder(FieldMatrixChangingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4136= org.apache.commons.math3.linear.Array2DRowFieldMatrix:Array2DRowFieldMatrix(T[])	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4137= org.apache.commons.math3.linear.Array2DRowFieldMatrix:copy()	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4138= org.apache.commons.math3.linear.Array2DRowFieldMatrix:getData()	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4139= org.apache.commons.math3.linear.Array2DRowFieldMatrix:multiplyEntry(int, int, T)	/src/main/java/org/apache/commons/math3/linear/Array2DRowFieldMatrix.java
4140= org.apache.commons.math3.complex.Complex:isNaN()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4141= org.apache.commons.math3.complex.Complex:subtract(Complex)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4142= org.apache.commons.math3.complex.Complex:cosh()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4143= org.apache.commons.math3.complex.Complex:multiply(double)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4144= org.apache.commons.math3.complex.Complex:getImaginary()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4145= org.apache.commons.math3.complex.Complex:conjugate()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4146= org.apache.commons.math3.complex.Complex:subtract(double)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4147= org.apache.commons.math3.complex.Complex:valueOf(double)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4148= org.apache.commons.math3.complex.Complex:asin()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4149= org.apache.commons.math3.complex.Complex:sqrt1z()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4150= org.apache.commons.math3.complex.Complex:equals(Complex, Complex)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4151= org.apache.commons.math3.complex.Complex:abs()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4152= org.apache.commons.math3.complex.Complex:multiply(Complex)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4153= org.apache.commons.math3.complex.Complex:tan()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4154= org.apache.commons.math3.complex.Complex:getArgument()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4155= org.apache.commons.math3.complex.Complex:Complex(double)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4156= org.apache.commons.math3.complex.Complex:pow(double)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4157= org.apache.commons.math3.complex.Complex:reciprocal()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4158= org.apache.commons.math3.complex.Complex:exp()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4159= org.apache.commons.math3.complex.Complex:pow(Complex)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4160= org.apache.commons.math3.complex.Complex:sqrt()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4161= org.apache.commons.math3.complex.Complex:Complex(double, double)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4162= org.apache.commons.math3.complex.Complex:getReal()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4163= org.apache.commons.math3.complex.Complex:equalsWithRelativeTolerance(Complex, Complex, double)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4164= org.apache.commons.math3.complex.Complex:divide(double)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4165= org.apache.commons.math3.complex.Complex:log()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4166= org.apache.commons.math3.complex.Complex:cos()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4167= org.apache.commons.math3.complex.Complex:valueOf(double, double)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4168= org.apache.commons.math3.complex.Complex:equals(Complex, Complex, int)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4169= org.apache.commons.math3.complex.Complex:getField()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4170= org.apache.commons.math3.complex.Complex:equals(Object)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4171= org.apache.commons.math3.complex.Complex:sinh()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4172= org.apache.commons.math3.complex.Complex:equals(Complex, Complex, double)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4173= org.apache.commons.math3.complex.Complex:hashCode()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4174= org.apache.commons.math3.complex.Complex:tanh()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4175= org.apache.commons.math3.complex.Complex:sin()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4176= org.apache.commons.math3.complex.Complex:readResolve()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4177= org.apache.commons.math3.complex.Complex:nthRoot(int)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4178= org.apache.commons.math3.complex.Complex:divide(Complex)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4179= org.apache.commons.math3.complex.Complex:atan()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4180= org.apache.commons.math3.complex.Complex:negate()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4181= org.apache.commons.math3.complex.Complex:toString()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4182= org.apache.commons.math3.complex.Complex:acos()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4183= org.apache.commons.math3.complex.Complex:createComplex(double, double)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4184= org.apache.commons.math3.complex.Complex:isInfinite()	/src/main/java/org/apache/commons/math3/complex/Complex.java
4185= org.apache.commons.math3.complex.Complex:add(double)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4186= org.apache.commons.math3.complex.Complex:add(Complex)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4187= org.apache.commons.math3.complex.Complex:multiply(int)	/src/main/java/org/apache/commons/math3/complex/Complex.java
4188= org.apache.commons.math3.util.OpenIntToFieldHashMap:OpenIntToFieldHashMap(Field<T>, int)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4189= org.apache.commons.math3.util.OpenIntToFieldHashMap:advance()	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4190= org.apache.commons.math3.util.OpenIntToFieldHashMap:hasNext()	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4191= org.apache.commons.math3.util.OpenIntToFieldHashMap:readObject(ObjectInputStream)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4192= org.apache.commons.math3.util.OpenIntToFieldHashMap:remove(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4193= org.apache.commons.math3.util.OpenIntToFieldHashMap:doRemove(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4194= org.apache.commons.math3.util.OpenIntToFieldHashMap:changeIndexSign(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4195= org.apache.commons.math3.util.OpenIntToFieldHashMap.Iterator:advance()	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4196= org.apache.commons.math3.util.OpenIntToFieldHashMap:Iterator()	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4197= org.apache.commons.math3.util.OpenIntToFieldHashMap:probe(int, int)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4198= org.apache.commons.math3.util.OpenIntToFieldHashMap.Iterator:key()	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4199= org.apache.commons.math3.util.OpenIntToFieldHashMap:get(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4200= org.apache.commons.math3.util.OpenIntToFieldHashMap.Iterator:value()	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4201= org.apache.commons.math3.util.OpenIntToFieldHashMap:OpenIntToFieldHashMap(Field<T>)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4202= org.apache.commons.math3.util.OpenIntToFieldHashMap:OpenIntToFieldHashMap(Field<T>, T)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4203= org.apache.commons.math3.util.OpenIntToFieldHashMap:growTable()	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4204= org.apache.commons.math3.util.OpenIntToFieldHashMap:findInsertionIndex(int[], byte[], int, int)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4205= org.apache.commons.math3.util.OpenIntToFieldHashMap:iterator()	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4206= org.apache.commons.math3.util.OpenIntToFieldHashMap:size()	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4207= org.apache.commons.math3.util.OpenIntToFieldHashMap:hashOf(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4208= org.apache.commons.math3.util.OpenIntToFieldHashMap:findInsertionIndex(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4209= org.apache.commons.math3.util.OpenIntToFieldHashMap.Iterator:Iterator()	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4210= org.apache.commons.math3.util.OpenIntToFieldHashMap:key()	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4211= org.apache.commons.math3.util.OpenIntToFieldHashMap:OpenIntToFieldHashMap(OpenIntToFieldHashMap<T>)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4212= org.apache.commons.math3.util.OpenIntToFieldHashMap:nextPowerOfTwo(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4213= org.apache.commons.math3.util.OpenIntToFieldHashMap:OpenIntToFieldHashMap(Field<T>, int, T)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4214= org.apache.commons.math3.util.OpenIntToFieldHashMap:put(int, T)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4215= org.apache.commons.math3.util.OpenIntToFieldHashMap:value()	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4216= org.apache.commons.math3.util.OpenIntToFieldHashMap:buildArray(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4217= org.apache.commons.math3.util.OpenIntToFieldHashMap:perturb(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4218= org.apache.commons.math3.util.OpenIntToFieldHashMap:shouldGrowTable()	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4219= org.apache.commons.math3.util.OpenIntToFieldHashMap.Iterator:hasNext()	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4220= org.apache.commons.math3.util.OpenIntToFieldHashMap:computeCapacity(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4221= org.apache.commons.math3.util.OpenIntToFieldHashMap:containsKey(int)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4222= org.apache.commons.math3.util.OpenIntToFieldHashMap:containsKey(int, int)	/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
4223= org.apache.commons.math3.optimization.linear.SimplexTableau:getWidth()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4224= org.apache.commons.math3.optimization.linear.SimplexTableau:initializeColumnLabels()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4225= org.apache.commons.math3.optimization.linear.SimplexTableau:divideRow(int, double)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4226= org.apache.commons.math3.optimization.linear.SimplexTableau:subtractRow(int, int, double)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4227= org.apache.commons.math3.optimization.linear.SimplexTableau:equals(Object)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4228= org.apache.commons.math3.optimization.linear.SimplexTableau:getEntry(int, int)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4229= org.apache.commons.math3.optimization.linear.SimplexTableau:getOriginalNumDecisionVariables()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4230= org.apache.commons.math3.optimization.linear.SimplexTableau:getNumObjectiveFunctions()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4231= org.apache.commons.math3.optimization.linear.SimplexTableau:copyArray(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4232= org.apache.commons.math3.optimization.linear.SimplexTableau:getNumDecisionVariables()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4233= org.apache.commons.math3.optimization.linear.SimplexTableau:getHeight()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4234= org.apache.commons.math3.optimization.linear.SimplexTableau:getRhsOffset()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4235= org.apache.commons.math3.optimization.linear.SimplexTableau:getNumArtificialVariables()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4236= org.apache.commons.math3.optimization.linear.SimplexTableau:isOptimal()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4237= org.apache.commons.math3.optimization.linear.SimplexTableau:getNumSlackVariables()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4238= org.apache.commons.math3.optimization.linear.SimplexTableau:normalizeConstraints(Collection<LinearConstraint>)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4239= org.apache.commons.math3.optimization.linear.SimplexTableau:getConstraintTypeCounts(Relationship)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4240= org.apache.commons.math3.optimization.linear.SimplexTableau:SimplexTableau(LinearObjectiveFunction, Collection<LinearConstraint>, GoalType, boolean, double)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4241= org.apache.commons.math3.optimization.linear.SimplexTableau:SimplexTableau(LinearObjectiveFunction, Collection<LinearConstraint>, GoalType, boolean, double, int)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4242= org.apache.commons.math3.optimization.linear.SimplexTableau:getArtificialVariableOffset()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4243= org.apache.commons.math3.optimization.linear.SimplexTableau:getData()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4244= org.apache.commons.math3.optimization.linear.SimplexTableau:readObject(ObjectInputStream)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4245= org.apache.commons.math3.optimization.linear.SimplexTableau:writeObject(ObjectOutputStream)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4246= org.apache.commons.math3.optimization.linear.SimplexTableau:getBasicRow(int)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4247= org.apache.commons.math3.optimization.linear.SimplexTableau:getSolution()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4248= org.apache.commons.math3.optimization.linear.SimplexTableau:dropPhase1Objective()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4249= org.apache.commons.math3.optimization.linear.SimplexTableau:hashCode()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4250= org.apache.commons.math3.optimization.linear.SimplexTableau:createTableau(boolean)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4251= org.apache.commons.math3.optimization.linear.SimplexTableau:getSlackVariableOffset()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4252= org.apache.commons.math3.optimization.linear.SimplexTableau:normalize(LinearConstraint)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4253= org.apache.commons.math3.optimization.linear.SimplexTableau:getInvertedCoefficientSum(RealVector)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4254= org.apache.commons.math3.optimization.linear.SimplexTableau:setEntry(int, int, double)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
4255= org.apache.commons.math3.analysis.function.Abs:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Abs.java
4256= org.apache.commons.math3.distribution.HypergeometricDistribution:getDomain(int, int, int)	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4257= org.apache.commons.math3.distribution.HypergeometricDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4258= org.apache.commons.math3.distribution.HypergeometricDistribution:calculateNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4259= org.apache.commons.math3.distribution.HypergeometricDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4260= org.apache.commons.math3.distribution.HypergeometricDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4261= org.apache.commons.math3.distribution.HypergeometricDistribution:HypergeometricDistribution(RandomGenerator, int, int, int)	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4262= org.apache.commons.math3.distribution.HypergeometricDistribution:getSampleSize()	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4263= org.apache.commons.math3.distribution.HypergeometricDistribution:probability(int)	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4264= org.apache.commons.math3.distribution.HypergeometricDistribution:getLowerDomain(int, int, int)	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4265= org.apache.commons.math3.distribution.HypergeometricDistribution:getPopulationSize()	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4266= org.apache.commons.math3.distribution.HypergeometricDistribution:getNumberOfSuccesses()	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4267= org.apache.commons.math3.distribution.HypergeometricDistribution:innerCumulativeProbability(int, int, int)	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4268= org.apache.commons.math3.distribution.HypergeometricDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4269= org.apache.commons.math3.distribution.HypergeometricDistribution:HypergeometricDistribution(int, int, int)	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4270= org.apache.commons.math3.distribution.HypergeometricDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4271= org.apache.commons.math3.distribution.HypergeometricDistribution:cumulativeProbability(int)	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4272= org.apache.commons.math3.distribution.HypergeometricDistribution:logProbability(int)	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4273= org.apache.commons.math3.distribution.HypergeometricDistribution:upperCumulativeProbability(int)	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4274= org.apache.commons.math3.distribution.HypergeometricDistribution:getUpperDomain(int, int)	/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
4275= org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTask:KohonenTrainingTask(Network, Iterator<double[]>, KohonenUpdateAction)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenTrainingTask.java
4276= org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTask:run()	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenTrainingTask.java
4277= org.apache.commons.math3.userguide.filter.ConstantVoltageExample:step()	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4278= org.apache.commons.math3.userguide.filter.ConstantVoltageExample.VoltMeter:step()	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4279= org.apache.commons.math3.userguide.filter.ConstantVoltageExample.Display:Display()	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4280= org.apache.commons.math3.userguide.filter.ConstantVoltageExample.Display:getMainPanel()	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4281= org.apache.commons.math3.userguide.filter.ConstantVoltageExample.VoltMeter:VoltMeter(double, double, double, int)	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4282= org.apache.commons.math3.userguide.filter.ConstantVoltageExample:getMeasuredVoltage()	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4283= org.apache.commons.math3.userguide.filter.ConstantVoltageExample:main(String[])	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4284= org.apache.commons.math3.userguide.filter.ConstantVoltageExample:VoltMeter(double, double, double, int)	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4285= org.apache.commons.math3.userguide.filter.ConstantVoltageExample:getMainPanel()	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4286= org.apache.commons.math3.userguide.filter.ConstantVoltageExample:getVoltage()	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4287= org.apache.commons.math3.userguide.filter.ConstantVoltageExample.VoltMeter:getMeasuredVoltage()	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4288= org.apache.commons.math3.userguide.filter.ConstantVoltageExample:createChart(String, int, int, LegendPosition, boolean)	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4289= org.apache.commons.math3.userguide.filter.ConstantVoltageExample.VoltMeter:getVoltage()	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4290= org.apache.commons.math3.userguide.filter.ConstantVoltageExample:constantVoltageTest(Chart, Chart)	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4291= org.apache.commons.math3.userguide.filter.ConstantVoltageExample:Display()	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4292= org.apache.commons.math3.userguide.filter.ConstantVoltageExample:createComponent()	/src/userguide/java/org/apache/commons/math3/userguide/filter/ConstantVoltageExample.java
4293= org.apache.commons.math3.linear.JacobiPreconditioner:sqrt()	/src/main/java/org/apache/commons/math3/linear/JacobiPreconditioner.java
4294= org.apache.commons.math3.linear.JacobiPreconditioner:create(RealLinearOperator)	/src/main/java/org/apache/commons/math3/linear/JacobiPreconditioner.java
4295= org.apache.commons.math3.linear.JacobiPreconditioner:getRowDimension()	/src/main/java/org/apache/commons/math3/linear/JacobiPreconditioner.java
4296= org.apache.commons.math3.linear.JacobiPreconditioner:getColumnDimension()	/src/main/java/org/apache/commons/math3/linear/JacobiPreconditioner.java
4297= org.apache.commons.math3.linear.JacobiPreconditioner:JacobiPreconditioner(double[], boolean)	/src/main/java/org/apache/commons/math3/linear/JacobiPreconditioner.java
4298= org.apache.commons.math3.linear.JacobiPreconditioner:operate(RealVector)	/src/main/java/org/apache/commons/math3/linear/JacobiPreconditioner.java
4299= org.apache.commons.math3.analysis.function.Log:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Log.java
4300= org.apache.commons.math3.analysis.function.Log:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Log.java
4301= org.apache.commons.math3.analysis.function.Log:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Log.java
4302= org.apache.commons.math3.exception.OutOfRangeException:getLo()	/src/main/java/org/apache/commons/math3/exception/OutOfRangeException.java
4303= org.apache.commons.math3.exception.OutOfRangeException:OutOfRangeException(Number, Number, Number)	/src/main/java/org/apache/commons/math3/exception/OutOfRangeException.java
4304= org.apache.commons.math3.exception.OutOfRangeException:getHi()	/src/main/java/org/apache/commons/math3/exception/OutOfRangeException.java
4305= org.apache.commons.math3.exception.OutOfRangeException:OutOfRangeException(Localizable, Number, Number, Number)	/src/main/java/org/apache/commons/math3/exception/OutOfRangeException.java
4306= org.apache.commons.math3.filter.ProcessModel:getInitialErrorCovariance()	/src/main/java/org/apache/commons/math3/filter/ProcessModel.java
4307= org.apache.commons.math3.filter.ProcessModel:getInitialStateEstimate()	/src/main/java/org/apache/commons/math3/filter/ProcessModel.java
4308= org.apache.commons.math3.filter.ProcessModel:getStateTransitionMatrix()	/src/main/java/org/apache/commons/math3/filter/ProcessModel.java
4309= org.apache.commons.math3.filter.ProcessModel:getProcessNoise()	/src/main/java/org/apache/commons/math3/filter/ProcessModel.java
4310= org.apache.commons.math3.filter.ProcessModel:getControlMatrix()	/src/main/java/org/apache/commons/math3/filter/ProcessModel.java
4311= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest:testGetRMS()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTest.java
4312= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest:createOptimizer()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTest.java
4313= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest:doOptimize()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTest.java
4314= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest:testComputeSigma()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTest.java
4315= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest:testGetChiSquare()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTest.java
4316= org.apache.commons.math3.stat.clustering.DBSCANClustererTest:testCluster()	/src/test/java/org/apache/commons/math3/stat/clustering/DBSCANClustererTest.java
4317= org.apache.commons.math3.stat.clustering.DBSCANClustererTest:testGetEps()	/src/test/java/org/apache/commons/math3/stat/clustering/DBSCANClustererTest.java
4318= org.apache.commons.math3.stat.clustering.DBSCANClustererTest:testNegativeMinPts()	/src/test/java/org/apache/commons/math3/stat/clustering/DBSCANClustererTest.java
4319= org.apache.commons.math3.stat.clustering.DBSCANClustererTest:testNegativeEps()	/src/test/java/org/apache/commons/math3/stat/clustering/DBSCANClustererTest.java
4320= org.apache.commons.math3.stat.clustering.DBSCANClustererTest:testGetMinPts()	/src/test/java/org/apache/commons/math3/stat/clustering/DBSCANClustererTest.java
4321= org.apache.commons.math3.stat.clustering.DBSCANClustererTest:testNullDataset()	/src/test/java/org/apache/commons/math3/stat/clustering/DBSCANClustererTest.java
4322= org.apache.commons.math3.stat.clustering.DBSCANClustererTest:testSingleLink()	/src/test/java/org/apache/commons/math3/stat/clustering/DBSCANClustererTest.java
4323= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:getPoint(int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java
4324= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:createHypercubeSteps(int, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java
4325= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:build(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java
4326= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:AbstractSimplex(int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java
4327= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:setPoints(PointValuePair[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java
4328= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:getDimension()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java
4329= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:getSize()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java
4330= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:evaluate(MultivariateFunction, Comparator<PointValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java
4331= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:iterate(MultivariateFunction, Comparator<PointValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java
4332= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:AbstractSimplex(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java
4333= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:setPoint(int, PointValuePair)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java
4334= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:replaceWorstPoint(PointValuePair, Comparator<PointValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java
4335= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:getPoints()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java
4336= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:AbstractSimplex(int, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java
4337= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:AbstractSimplex(double[][])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java
4338= org.apache.commons.math3.optim.univariate.UnivariatePointValuePair:getPoint()	/src/main/java/org/apache/commons/math3/optim/univariate/UnivariatePointValuePair.java
4339= org.apache.commons.math3.optim.univariate.UnivariatePointValuePair:getValue()	/src/main/java/org/apache/commons/math3/optim/univariate/UnivariatePointValuePair.java
4340= org.apache.commons.math3.optim.univariate.UnivariatePointValuePair:UnivariatePointValuePair(double, double)	/src/main/java/org/apache/commons/math3/optim/univariate/UnivariatePointValuePair.java
4341= org.apache.commons.math3.random.TestRandomGenerator:nextDouble()	/src/test/java/org/apache/commons/math3/random/TestRandomGenerator.java
4342= org.apache.commons.math3.random.TestRandomGenerator:setSeed(long)	/src/test/java/org/apache/commons/math3/random/TestRandomGenerator.java
4343= org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:computeJacobian(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer.java
4344= org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:JacobianMultivariateVectorOptimizer(ConvergenceChecker<PointVectorValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer.java
4345= org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:optimize(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer.java
4346= org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer.java
4347= org.apache.commons.math3.analysis.solvers.PegasusSolver:PegasusSolver()	/src/main/java/org/apache/commons/math3/analysis/solvers/PegasusSolver.java
4348= org.apache.commons.math3.analysis.solvers.PegasusSolver:PegasusSolver(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/PegasusSolver.java
4349= org.apache.commons.math3.analysis.solvers.PegasusSolver:PegasusSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/PegasusSolver.java
4350= org.apache.commons.math3.analysis.solvers.PegasusSolver:PegasusSolver(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/PegasusSolver.java
4351= org.apache.commons.math3.analysis.solvers.MullerSolver2:MullerSolver2(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/MullerSolver2.java
4352= org.apache.commons.math3.analysis.solvers.MullerSolver2:MullerSolver2(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/MullerSolver2.java
4353= org.apache.commons.math3.analysis.solvers.MullerSolver2:MullerSolver2()	/src/main/java/org/apache/commons/math3/analysis/solvers/MullerSolver2.java
4354= org.apache.commons.math3.analysis.solvers.MullerSolver2:doSolve()	/src/main/java/org/apache/commons/math3/analysis/solvers/MullerSolver2.java
4355= org.apache.commons.math3.random.AbstractWell:AbstractWell(int, int, int, int, int[])	/src/main/java/org/apache/commons/math3/random/AbstractWell.java
4356= org.apache.commons.math3.random.AbstractWell:AbstractWell(int, int, int, int, long)	/src/main/java/org/apache/commons/math3/random/AbstractWell.java
4357= org.apache.commons.math3.random.AbstractWell:setSeed(int[])	/src/main/java/org/apache/commons/math3/random/AbstractWell.java
4358= org.apache.commons.math3.random.AbstractWell:setSeed(int)	/src/main/java/org/apache/commons/math3/random/AbstractWell.java
4359= org.apache.commons.math3.random.AbstractWell:next(int)	/src/main/java/org/apache/commons/math3/random/AbstractWell.java
4360= org.apache.commons.math3.random.AbstractWell:AbstractWell(int, int, int, int, int)	/src/main/java/org/apache/commons/math3/random/AbstractWell.java
4361= org.apache.commons.math3.random.AbstractWell:AbstractWell(int, int, int, int)	/src/main/java/org/apache/commons/math3/random/AbstractWell.java
4362= org.apache.commons.math3.random.AbstractWell:setSeed(long)	/src/main/java/org/apache/commons/math3/random/AbstractWell.java
4363= org.apache.commons.math3.ode.ParameterizedODE:getParameter(String)	/src/main/java/org/apache/commons/math3/ode/ParameterizedODE.java
4364= org.apache.commons.math3.ode.ParameterizedODE:setParameter(String, double)	/src/main/java/org/apache/commons/math3/ode/ParameterizedODE.java
4365= org.apache.commons.math3.ml.distance.ChebyshevDistance:compute(double[], double[])	/src/main/java/org/apache/commons/math3/ml/distance/ChebyshevDistance.java
4366= org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator:estimateError(double[][], double[], double[], double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54Integrator.java
4367= org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator:getOrder()	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54Integrator.java
4368= org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator:DormandPrince54Integrator(double, double, double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54Integrator.java
4369= org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator:DormandPrince54Integrator(double, double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54Integrator.java
4370= org.apache.commons.math3.optim.univariate.BrentOptimizerTest:testQuinticMin()	/src/test/java/org/apache/commons/math3/optim/univariate/BrentOptimizerTest.java
4371= org.apache.commons.math3.optim.univariate.BrentOptimizerTest:testMinEndpoints()	/src/test/java/org/apache/commons/math3/optim/univariate/BrentOptimizerTest.java
4372= org.apache.commons.math3.optim.univariate.BrentOptimizerTest:testSinMin()	/src/test/java/org/apache/commons/math3/optim/univariate/BrentOptimizerTest.java
4373= org.apache.commons.math3.optim.univariate.BrentOptimizerTest:testQuinticMax()	/src/test/java/org/apache/commons/math3/optim/univariate/BrentOptimizerTest.java
4374= org.apache.commons.math3.optim.univariate.BrentOptimizerTest:testBoundaries()	/src/test/java/org/apache/commons/math3/optim/univariate/BrentOptimizerTest.java
4375= org.apache.commons.math3.optim.univariate.BrentOptimizerTest:testSinMinWithValueChecker()	/src/test/java/org/apache/commons/math3/optim/univariate/BrentOptimizerTest.java
4376= org.apache.commons.math3.optim.univariate.BrentOptimizerTest:testKeepInitIfBest()	/src/test/java/org/apache/commons/math3/optim/univariate/BrentOptimizerTest.java
4377= org.apache.commons.math3.optim.univariate.BrentOptimizerTest:value(double)	/src/test/java/org/apache/commons/math3/optim/univariate/BrentOptimizerTest.java
4378= org.apache.commons.math3.optim.univariate.BrentOptimizerTest:testMath832()	/src/test/java/org/apache/commons/math3/optim/univariate/BrentOptimizerTest.java
4379= org.apache.commons.math3.optim.univariate.BrentOptimizerTest:testQuinticMinStatistics()	/src/test/java/org/apache/commons/math3/optim/univariate/BrentOptimizerTest.java
4380= org.apache.commons.math3.optim.univariate.BrentOptimizerTest:testMath855()	/src/test/java/org/apache/commons/math3/optim/univariate/BrentOptimizerTest.java
4381= org.apache.commons.math3.optimization.direct.AbstractSimplex:evaluate(MultivariateFunction, Comparator<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
4382= org.apache.commons.math3.optimization.direct.AbstractSimplex:getDimension()	/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
4383= org.apache.commons.math3.optimization.direct.AbstractSimplex:replaceWorstPoint(PointValuePair, Comparator<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
4384= org.apache.commons.math3.optimization.direct.AbstractSimplex:setPoint(int, PointValuePair)	/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
4385= org.apache.commons.math3.optimization.direct.AbstractSimplex:AbstractSimplex(double[][])	/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
4386= org.apache.commons.math3.optimization.direct.AbstractSimplex:createHypercubeSteps(int, double)	/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
4387= org.apache.commons.math3.optimization.direct.AbstractSimplex:iterate(MultivariateFunction, Comparator<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
4388= org.apache.commons.math3.optimization.direct.AbstractSimplex:getPoint(int)	/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
4389= org.apache.commons.math3.optimization.direct.AbstractSimplex:AbstractSimplex(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
4390= org.apache.commons.math3.optimization.direct.AbstractSimplex:getPoints()	/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
4391= org.apache.commons.math3.optimization.direct.AbstractSimplex:build(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
4392= org.apache.commons.math3.optimization.direct.AbstractSimplex:setPoints(PointValuePair[])	/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
4393= org.apache.commons.math3.optimization.direct.AbstractSimplex:AbstractSimplex(int)	/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
4394= org.apache.commons.math3.optimization.direct.AbstractSimplex:AbstractSimplex(int, double)	/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
4395= org.apache.commons.math3.optimization.direct.AbstractSimplex:getSize()	/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
4396= org.apache.commons.math3.optimization.fitting.GaussianFitter:GaussianFitter(DifferentiableMultivariateVectorOptimizer)	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4397= org.apache.commons.math3.optimization.fitting.GaussianFitter:compare(WeightedObservedPoint, WeightedObservedPoint)	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4398= org.apache.commons.math3.optimization.fitting.GaussianFitter.ParameterGuesser:sortObservations(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4399= org.apache.commons.math3.optimization.fitting.GaussianFitter.ParameterGuesser:isBetween(double, double, double)	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4400= org.apache.commons.math3.optimization.fitting.GaussianFitter.ParameterGuesser:getInterpolationPointsForY(WeightedObservedPoint[], int, int, double)	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4401= org.apache.commons.math3.optimization.fitting.GaussianFitter.ParameterGuesser:basicGuess(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4402= org.apache.commons.math3.optimization.fitting.GaussianFitter:fit()	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4403= org.apache.commons.math3.optimization.fitting.GaussianFitter:gradient(double, double)	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4404= org.apache.commons.math3.optimization.fitting.GaussianFitter:interpolateXAtY(WeightedObservedPoint[], int, int, double)	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4405= org.apache.commons.math3.optimization.fitting.GaussianFitter:value(double, double)	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4406= org.apache.commons.math3.optimization.fitting.GaussianFitter.ParameterGuesser:compare(WeightedObservedPoint, WeightedObservedPoint)	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4407= org.apache.commons.math3.optimization.fitting.GaussianFitter.ParameterGuesser:interpolateXAtY(WeightedObservedPoint[], int, int, double)	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4408= org.apache.commons.math3.optimization.fitting.GaussianFitter:fit(double[])	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4409= org.apache.commons.math3.optimization.fitting.GaussianFitter:findMaxY(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4410= org.apache.commons.math3.optimization.fitting.GaussianFitter.ParameterGuesser:guess()	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4411= org.apache.commons.math3.optimization.fitting.GaussianFitter:guess()	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4412= org.apache.commons.math3.optimization.fitting.GaussianFitter:getInterpolationPointsForY(WeightedObservedPoint[], int, int, double)	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4413= org.apache.commons.math3.optimization.fitting.GaussianFitter:sortObservations(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4414= org.apache.commons.math3.optimization.fitting.GaussianFitter:ParameterGuesser(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4415= org.apache.commons.math3.optimization.fitting.GaussianFitter:isBetween(double, double, double)	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4416= org.apache.commons.math3.optimization.fitting.GaussianFitter.ParameterGuesser:ParameterGuesser(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4417= org.apache.commons.math3.optimization.fitting.GaussianFitter.ParameterGuesser:findMaxY(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4418= org.apache.commons.math3.optimization.fitting.GaussianFitter:basicGuess(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java
4419= org.apache.commons.math3.analysis.function.Ceil:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Ceil.java
4420= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java
4421= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic:incrementAll(double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java
4422= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java
4423= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java
4424= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic:incrementAll(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java
4425= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java
4426= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java
4427= org.apache.commons.math3.geometry.spherical.twod.Vertex:setOutgoing(Edge)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Vertex.java
4428= org.apache.commons.math3.geometry.spherical.twod.Vertex:getOutgoing()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Vertex.java
4429= org.apache.commons.math3.geometry.spherical.twod.Vertex:getLocation()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Vertex.java
4430= org.apache.commons.math3.geometry.spherical.twod.Vertex:Vertex(S2Point)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Vertex.java
4431= org.apache.commons.math3.geometry.spherical.twod.Vertex:sharedCircleWith(Vertex)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Vertex.java
4432= org.apache.commons.math3.geometry.spherical.twod.Vertex:bindWith(Circle)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Vertex.java
4433= org.apache.commons.math3.geometry.spherical.twod.Vertex:setIncoming(Edge)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Vertex.java
4434= org.apache.commons.math3.geometry.spherical.twod.Vertex:getIncoming()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Vertex.java
4435= org.apache.commons.math3.linear.SingularMatrixException:SingularMatrixException()	/src/main/java/org/apache/commons/math3/linear/SingularMatrixException.java
4436= org.apache.commons.math3.genetics.ChromosomePair:getSecond()	/src/main/java/org/apache/commons/math3/genetics/ChromosomePair.java
4437= org.apache.commons.math3.genetics.ChromosomePair:ChromosomePair(Chromosome, Chromosome)	/src/main/java/org/apache/commons/math3/genetics/ChromosomePair.java
4438= org.apache.commons.math3.genetics.ChromosomePair:toString()	/src/main/java/org/apache/commons/math3/genetics/ChromosomePair.java
4439= org.apache.commons.math3.genetics.ChromosomePair:getFirst()	/src/main/java/org/apache/commons/math3/genetics/ChromosomePair.java
4440= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:SynchronizedDescriptiveStatistics(SynchronizedDescriptiveStatistics)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java
4441= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java
4442= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:getValues()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java
4443= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:copy(SynchronizedDescriptiveStatistics, SynchronizedDescriptiveStatistics)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java
4444= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:setWindowSize(int)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java
4445= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:toString()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java
4446= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:SynchronizedDescriptiveStatistics()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java
4447= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:getElement(int)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java
4448= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:getStandardDeviation()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java
4449= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:SynchronizedDescriptiveStatistics(int)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java
4450= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:addValue(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java
4451= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:getWindowSize()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java
4452= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java
4453= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java
4454= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics:apply(UnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java
4455= org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableMatrixFunction:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableMatrixFunction.java
4456= org.apache.commons.math3.linear.FieldVector:dotProduct(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4457= org.apache.commons.math3.linear.FieldVector:getField()	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4458= org.apache.commons.math3.linear.FieldVector:subtract(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4459= org.apache.commons.math3.linear.FieldVector:append(T)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4460= org.apache.commons.math3.linear.FieldVector:mapInvToSelf()	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4461= org.apache.commons.math3.linear.FieldVector:append(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4462= org.apache.commons.math3.linear.FieldVector:setSubVector(int, FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4463= org.apache.commons.math3.linear.FieldVector:setEntry(int, T)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4464= org.apache.commons.math3.linear.FieldVector:getSubVector(int, int)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4465= org.apache.commons.math3.linear.FieldVector:getEntry(int)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4466= org.apache.commons.math3.linear.FieldVector:mapAdd(T)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4467= org.apache.commons.math3.linear.FieldVector:ebeDivide(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4468= org.apache.commons.math3.linear.FieldVector:add(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4469= org.apache.commons.math3.linear.FieldVector:ebeMultiply(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4470= org.apache.commons.math3.linear.FieldVector:projection(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4471= org.apache.commons.math3.linear.FieldVector:mapDivide(T)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4472= org.apache.commons.math3.linear.FieldVector:set(T)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4473= org.apache.commons.math3.linear.FieldVector:mapSubtractToSelf(T)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4474= org.apache.commons.math3.linear.FieldVector:toArray()	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4475= org.apache.commons.math3.linear.FieldVector:outerProduct(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4476= org.apache.commons.math3.linear.FieldVector:mapSubtract(T)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4477= org.apache.commons.math3.linear.FieldVector:mapDivideToSelf(T)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4478= org.apache.commons.math3.linear.FieldVector:mapAddToSelf(T)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4479= org.apache.commons.math3.linear.FieldVector:mapInv()	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4480= org.apache.commons.math3.linear.FieldVector:getDimension()	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4481= org.apache.commons.math3.linear.FieldVector:getData()	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4482= org.apache.commons.math3.linear.FieldVector:mapMultiplyToSelf(T)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4483= org.apache.commons.math3.linear.FieldVector:copy()	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4484= org.apache.commons.math3.linear.FieldVector:mapMultiply(T)	/src/main/java/org/apache/commons/math3/linear/FieldVector.java
4485= org.apache.commons.math3.ode.nonstiff.LutherStepInterpolator:LutherStepInterpolator(LutherStepInterpolator)	/src/main/java/org/apache/commons/math3/ode/nonstiff/LutherStepInterpolator.java
4486= org.apache.commons.math3.ode.nonstiff.LutherStepInterpolator:LutherStepInterpolator()	/src/main/java/org/apache/commons/math3/ode/nonstiff/LutherStepInterpolator.java
4487= org.apache.commons.math3.ode.nonstiff.LutherStepInterpolator:computeInterpolatedStateAndDerivatives(double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/LutherStepInterpolator.java
4488= org.apache.commons.math3.ode.nonstiff.LutherStepInterpolator:doCopy()	/src/main/java/org/apache/commons/math3/ode/nonstiff/LutherStepInterpolator.java
4489= org.apache.commons.math3.fraction.ProperBigFractionFormat:format(BigFraction, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/fraction/ProperBigFractionFormat.java
4490= org.apache.commons.math3.fraction.ProperBigFractionFormat:parse(String, ParsePosition)	/src/main/java/org/apache/commons/math3/fraction/ProperBigFractionFormat.java
4491= org.apache.commons.math3.fraction.ProperBigFractionFormat:setWholeFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/fraction/ProperBigFractionFormat.java
4492= org.apache.commons.math3.fraction.ProperBigFractionFormat:ProperBigFractionFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/fraction/ProperBigFractionFormat.java
4493= org.apache.commons.math3.fraction.ProperBigFractionFormat:ProperBigFractionFormat()	/src/main/java/org/apache/commons/math3/fraction/ProperBigFractionFormat.java
4494= org.apache.commons.math3.fraction.ProperBigFractionFormat:getWholeFormat()	/src/main/java/org/apache/commons/math3/fraction/ProperBigFractionFormat.java
4495= org.apache.commons.math3.fraction.ProperBigFractionFormat:ProperBigFractionFormat(NumberFormat, NumberFormat, NumberFormat)	/src/main/java/org/apache/commons/math3/fraction/ProperBigFractionFormat.java
4496= org.apache.commons.math3.distribution.TDistribution:getDegreesOfFreedom()	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4497= org.apache.commons.math3.distribution.TDistribution:TDistribution(double, double)	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4498= org.apache.commons.math3.distribution.TDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4499= org.apache.commons.math3.distribution.TDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4500= org.apache.commons.math3.distribution.TDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4501= org.apache.commons.math3.distribution.TDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4502= org.apache.commons.math3.distribution.TDistribution:TDistribution(RandomGenerator, double, double)	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4503= org.apache.commons.math3.distribution.TDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4504= org.apache.commons.math3.distribution.TDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4505= org.apache.commons.math3.distribution.TDistribution:TDistribution(RandomGenerator, double)	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4506= org.apache.commons.math3.distribution.TDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4507= org.apache.commons.math3.distribution.TDistribution:logDensity(double)	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4508= org.apache.commons.math3.distribution.TDistribution:getSolverAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4509= org.apache.commons.math3.distribution.TDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4510= org.apache.commons.math3.distribution.TDistribution:TDistribution(double)	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4511= org.apache.commons.math3.distribution.TDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/TDistribution.java
4512= org.apache.commons.math3.geometry.enclosing.WelzlEncloser:WelzlEncloser(double, SupportBallGenerator<S,P>)	/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java
4513= org.apache.commons.math3.geometry.enclosing.WelzlEncloser:enclose(Iterable<P>)	/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java
4514= org.apache.commons.math3.geometry.enclosing.WelzlEncloser:selectFarthest(Iterable<P>, EnclosingBall<S,P>)	/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java
4515= org.apache.commons.math3.geometry.enclosing.WelzlEncloser:pivotingBall(Iterable<P>)	/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java
4516= org.apache.commons.math3.geometry.enclosing.WelzlEncloser:moveToFrontBall(List<P>, int, List<P>)	/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java
4517= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator:nextIndex(int, int)	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java
4518= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator:interpolate(double[], double[], double[][])	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java
4519= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator:previousIndex(int)	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java
4520= org.apache.commons.math3.ml.neuralnet.NeuronTest:testSerialize()	/src/test/java/org/apache/commons/math3/ml/neuralnet/NeuronTest.java
4521= org.apache.commons.math3.ml.neuralnet.NeuronTest:testGetFeatures()	/src/test/java/org/apache/commons/math3/ml/neuralnet/NeuronTest.java
4522= org.apache.commons.math3.ml.neuralnet.NeuronTest:testGetIdentifier()	/src/test/java/org/apache/commons/math3/ml/neuralnet/NeuronTest.java
4523= org.apache.commons.math3.ml.neuralnet.NeuronTest:testCompareAndSetFeatures()	/src/test/java/org/apache/commons/math3/ml/neuralnet/NeuronTest.java
4524= org.apache.commons.math3.ml.neuralnet.NeuronTest:testGetSize()	/src/test/java/org/apache/commons/math3/ml/neuralnet/NeuronTest.java
4525= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer:NonLinearConjugateGradientOptimizer(ConjugateGradientFormula)	/src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java
4526= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer:LineSearchFunction(double[])	/src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java
4527= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer:setInitialStep(double)	/src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java
4528= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer:value(double)	/src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java
4529= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer:NonLinearConjugateGradientOptimizer(ConjugateGradientFormula, ConvergenceChecker<PointValuePair>, UnivariateSolver)	/src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java
4530= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer:NonLinearConjugateGradientOptimizer(ConjugateGradientFormula, ConvergenceChecker<PointValuePair>, UnivariateSolver, Preconditioner)	/src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java
4531= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer:findUpperBound(UnivariateFunction, double, double)	/src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java
4532= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.LineSearchFunction:LineSearchFunction(double[])	/src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java
4533= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer:precondition(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java
4534= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.IdentityPreconditioner:precondition(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java
4535= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer:NonLinearConjugateGradientOptimizer(ConjugateGradientFormula, ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java
4536= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.LineSearchFunction:value(double)	/src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java
4537= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java
4538= org.apache.commons.math3.optim.linear.SimplexSolver:SimplexSolver(double)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java
4539= org.apache.commons.math3.optim.linear.SimplexSolver:SimplexSolver()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java
4540= org.apache.commons.math3.optim.linear.SimplexSolver:doIteration(SimplexTableau)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java
4541= org.apache.commons.math3.optim.linear.SimplexSolver:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java
4542= org.apache.commons.math3.optim.linear.SimplexSolver:solvePhase1(SimplexTableau)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java
4543= org.apache.commons.math3.optim.linear.SimplexSolver:getPivotColumn(SimplexTableau)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java
4544= org.apache.commons.math3.optim.linear.SimplexSolver:isValidPivotColumn(SimplexTableau, int)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java
4545= org.apache.commons.math3.optim.linear.SimplexSolver:doOptimize()	/src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java
4546= org.apache.commons.math3.optim.linear.SimplexSolver:optimize(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java
4547= org.apache.commons.math3.optim.linear.SimplexSolver:SimplexSolver(double, int)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java
4548= org.apache.commons.math3.optim.linear.SimplexSolver:getPivotRow(SimplexTableau, int)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java
4549= org.apache.commons.math3.optim.linear.SimplexSolver:SimplexSolver(double, int, double)	/src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java
4550= org.apache.commons.math3.distribution.MultivariateNormalDistribution:getMeans()	/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
4551= org.apache.commons.math3.distribution.MultivariateNormalDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
4552= org.apache.commons.math3.distribution.MultivariateNormalDistribution:MultivariateNormalDistribution(RandomGenerator, double[], double[][])	/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
4553= org.apache.commons.math3.distribution.MultivariateNormalDistribution:density(double[])	/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
4554= org.apache.commons.math3.distribution.MultivariateNormalDistribution:MultivariateNormalDistribution(double[], double[][])	/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
4555= org.apache.commons.math3.distribution.MultivariateNormalDistribution:getStandardDeviations()	/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
4556= org.apache.commons.math3.distribution.MultivariateNormalDistribution:getCovariances()	/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
4557= org.apache.commons.math3.distribution.MultivariateNormalDistribution:getExponentTerm(double[])	/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
4558= org.apache.commons.math3.geometry.partitioning.BSPTree:merge(BSPTree<S>, LeafMerger<S>, BSPTree<S>, boolean)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4559= org.apache.commons.math3.geometry.partitioning.BSPTree:getParent()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4560= org.apache.commons.math3.geometry.partitioning.BSPTree:chopOffPlus(Hyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4561= org.apache.commons.math3.geometry.partitioning.BSPTree:fitToCell(SubHyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4562= org.apache.commons.math3.geometry.partitioning.BSPTree:copySelf()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4563= org.apache.commons.math3.geometry.partitioning.BSPTree:visit(BSPTreeVisitor<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4564= org.apache.commons.math3.geometry.partitioning.BSPTree:chopOffMinus(Hyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4565= org.apache.commons.math3.geometry.partitioning.BSPTree:BSPTree(Object)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4566= org.apache.commons.math3.geometry.partitioning.BSPTree:insertCut(Hyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4567= org.apache.commons.math3.geometry.partitioning.BSPTree:getPlus()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4568= org.apache.commons.math3.geometry.partitioning.BSPTree:pruneAroundConvexCell(Object, Object, Object)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4569= org.apache.commons.math3.geometry.partitioning.BSPTree:setAttribute(Object)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4570= org.apache.commons.math3.geometry.partitioning.BSPTree:getCell(Point<S>, double)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4571= org.apache.commons.math3.geometry.partitioning.BSPTree:getCell(Vector<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4572= org.apache.commons.math3.geometry.partitioning.BSPTree.LeafMerger:merge(BSPTree<S>, BSPTree<S>, BSPTree<S>, boolean, boolean)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4573= org.apache.commons.math3.geometry.partitioning.BSPTree:BSPTree()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4574= org.apache.commons.math3.geometry.partitioning.BSPTree:split(SubHyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4575= org.apache.commons.math3.geometry.partitioning.BSPTree:merge(BSPTree<S>, LeafMerger<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4576= org.apache.commons.math3.geometry.partitioning.BSPTree:BSPTree(SubHyperplane<S>, BSPTree<S>, BSPTree<S>, Object)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4577= org.apache.commons.math3.geometry.partitioning.BSPTree:getCloseCuts(Point<S>, double)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4578= org.apache.commons.math3.geometry.partitioning.BSPTree:recurseCloseCuts(Point<S>, double, List<BSPTree<S>>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4579= org.apache.commons.math3.geometry.partitioning.BSPTree:merge(BSPTree<S>, BSPTree<S>, BSPTree<S>, boolean, boolean)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4580= org.apache.commons.math3.geometry.partitioning.BSPTree:getCut()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4581= org.apache.commons.math3.geometry.partitioning.BSPTree:condense()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4582= org.apache.commons.math3.geometry.partitioning.BSPTree:insertInTree(BSPTree<S>, boolean)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4583= org.apache.commons.math3.geometry.partitioning.BSPTree:getAttribute()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4584= org.apache.commons.math3.geometry.partitioning.BSPTree:getMinus()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
4585= org.apache.commons.math3.analysis.integration.UnivariateIntegrator:getMinimalIterationCount()	/src/main/java/org/apache/commons/math3/analysis/integration/UnivariateIntegrator.java
4586= org.apache.commons.math3.analysis.integration.UnivariateIntegrator:getIterations()	/src/main/java/org/apache/commons/math3/analysis/integration/UnivariateIntegrator.java
4587= org.apache.commons.math3.analysis.integration.UnivariateIntegrator:integrate(int, UnivariateFunction, double, double)	/src/main/java/org/apache/commons/math3/analysis/integration/UnivariateIntegrator.java
4588= org.apache.commons.math3.analysis.integration.UnivariateIntegrator:getMaximalIterationCount()	/src/main/java/org/apache/commons/math3/analysis/integration/UnivariateIntegrator.java
4589= org.apache.commons.math3.analysis.integration.UnivariateIntegrator:getEvaluations()	/src/main/java/org/apache/commons/math3/analysis/integration/UnivariateIntegrator.java
4590= org.apache.commons.math3.analysis.integration.UnivariateIntegrator:getAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/analysis/integration/UnivariateIntegrator.java
4591= org.apache.commons.math3.analysis.integration.UnivariateIntegrator:getRelativeAccuracy()	/src/main/java/org/apache/commons/math3/analysis/integration/UnivariateIntegrator.java
4592= org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest:testDistance()	/src/test/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPointTest.java
4593= org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest:testSerial()	/src/test/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPointTest.java
4594= org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest:testArrayIsReference()	/src/test/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPointTest.java
4595= org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest:testCentroid()	/src/test/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPointTest.java
4596= org.apache.commons.math3.filter.MeasurementModel:getMeasurementNoise()	/src/main/java/org/apache/commons/math3/filter/MeasurementModel.java
4597= org.apache.commons.math3.filter.MeasurementModel:getMeasurementMatrix()	/src/main/java/org/apache/commons/math3/filter/MeasurementModel.java
4598= org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.BoundaryProjector:visitOrder(BSPTree<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java
4599= org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.BoundaryProjector:getProjected()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java
4600= org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor:visitOrder(BSPTree<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java
4601= org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor:getProjected()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java
4602= org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.BoundaryProjector:BoundaryProjector(double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java
4603= org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor:OutlineExtractor(Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java
4604= org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor:visitInternalNode(BSPTree<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java
4605= org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor:pointIsBetween(Vector2D[], int, int)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java
4606= org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.BoundaryProjector:visitLeafNode(BSPTree<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java
4607= org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.BoundaryProjector:addContribution(SubHyperplane<Euclidean3D>, boolean)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java
4608= org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor:addContribution(SubHyperplane<Euclidean3D>, boolean)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java
4609= org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.BoundaryProjector:visitInternalNode(BSPTree<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java
4610= org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor:getOutline(PolyhedronsSet)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java
4611= org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor:BoundaryProjector(double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java
4612= org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor:visitLeafNode(BSPTree<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor.java
4613= org.apache.commons.math3.optimization.linear.SimplexSolver:SimplexSolver()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
4614= org.apache.commons.math3.optimization.linear.SimplexSolver:doIteration(SimplexTableau)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
4615= org.apache.commons.math3.optimization.linear.SimplexSolver:getPivotColumn(SimplexTableau)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
4616= org.apache.commons.math3.optimization.linear.SimplexSolver:getPivotRow(SimplexTableau, int)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
4617= org.apache.commons.math3.optimization.linear.SimplexSolver:SimplexSolver(double, int)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
4618= org.apache.commons.math3.optimization.linear.SimplexSolver:doOptimize()	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
4619= org.apache.commons.math3.optimization.linear.SimplexSolver:solvePhase1(SimplexTableau)	/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
4620= org.apache.commons.math3.exception.MathArithmeticException:MathArithmeticException()	/src/main/java/org/apache/commons/math3/exception/MathArithmeticException.java
4621= org.apache.commons.math3.exception.MathArithmeticException:getMessage()	/src/main/java/org/apache/commons/math3/exception/MathArithmeticException.java
4622= org.apache.commons.math3.exception.MathArithmeticException:getLocalizedMessage()	/src/main/java/org/apache/commons/math3/exception/MathArithmeticException.java
4623= org.apache.commons.math3.exception.MathArithmeticException:getContext()	/src/main/java/org/apache/commons/math3/exception/MathArithmeticException.java
4624= org.apache.commons.math3.exception.MathArithmeticException:MathArithmeticException(Localizable, Object)	/src/main/java/org/apache/commons/math3/exception/MathArithmeticException.java
4625= org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest:UncorrelatedRandomVectorGeneratorTest()	/src/test/java/org/apache/commons/math3/random/UncorrelatedRandomVectorGeneratorTest.java
4626= org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest:testMeanAndCorrelation()	/src/test/java/org/apache/commons/math3/random/UncorrelatedRandomVectorGeneratorTest.java
4627= org.apache.commons.math3.util.IterationListener:iterationPerformed(IterationEvent)	/src/main/java/org/apache/commons/math3/util/IterationListener.java
4628= org.apache.commons.math3.util.IterationListener:terminationPerformed(IterationEvent)	/src/main/java/org/apache/commons/math3/util/IterationListener.java
4629= org.apache.commons.math3.util.IterationListener:iterationStarted(IterationEvent)	/src/main/java/org/apache/commons/math3/util/IterationListener.java
4630= org.apache.commons.math3.util.IterationListener:initializationPerformed(IterationEvent)	/src/main/java/org/apache/commons/math3/util/IterationListener.java
4631= org.apache.commons.math3.linear.DecompositionSolver:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/DecompositionSolver.java
4632= org.apache.commons.math3.linear.DecompositionSolver:solve(RealVector)	/src/main/java/org/apache/commons/math3/linear/DecompositionSolver.java
4633= org.apache.commons.math3.linear.DecompositionSolver:solve(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/DecompositionSolver.java
4634= org.apache.commons.math3.linear.DecompositionSolver:getInverse()	/src/main/java/org/apache/commons/math3/linear/DecompositionSolver.java
4635= org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator:ballOnSupport(List<Vector2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/DiskGenerator.java
4636= org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator:minor(BigFraction[], BigFraction[])	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/DiskGenerator.java
4637= org.apache.commons.math3.linear.DefaultFieldMatrixPreservingVisitor:start(int, int, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/DefaultFieldMatrixPreservingVisitor.java
4638= org.apache.commons.math3.linear.DefaultFieldMatrixPreservingVisitor:visit(int, int, T)	/src/main/java/org/apache/commons/math3/linear/DefaultFieldMatrixPreservingVisitor.java
4639= org.apache.commons.math3.linear.DefaultFieldMatrixPreservingVisitor:end()	/src/main/java/org/apache/commons/math3/linear/DefaultFieldMatrixPreservingVisitor.java
4640= org.apache.commons.math3.linear.DefaultFieldMatrixPreservingVisitor:DefaultFieldMatrixPreservingVisitor(T)	/src/main/java/org/apache/commons/math3/linear/DefaultFieldMatrixPreservingVisitor.java
4641= org.apache.commons.math3.optimization.direct.SimplexOptimizer:optimizeInternal(int, MultivariateFunction, GoalType, OptimizationData)	/src/main/java/org/apache/commons/math3/optimization/direct/SimplexOptimizer.java
4642= org.apache.commons.math3.optimization.direct.SimplexOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optimization/direct/SimplexOptimizer.java
4643= org.apache.commons.math3.optimization.direct.SimplexOptimizer:value(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/SimplexOptimizer.java
4644= org.apache.commons.math3.optimization.direct.SimplexOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optimization/direct/SimplexOptimizer.java
4645= org.apache.commons.math3.optimization.direct.SimplexOptimizer:SimplexOptimizer(double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/SimplexOptimizer.java
4646= org.apache.commons.math3.optimization.direct.SimplexOptimizer:compare(PointValuePair, PointValuePair)	/src/main/java/org/apache/commons/math3/optimization/direct/SimplexOptimizer.java
4647= org.apache.commons.math3.optimization.direct.SimplexOptimizer:SimplexOptimizer(ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/direct/SimplexOptimizer.java
4648= org.apache.commons.math3.optimization.direct.SimplexOptimizer:setSimplex(AbstractSimplex)	/src/main/java/org/apache/commons/math3/optimization/direct/SimplexOptimizer.java
4649= org.apache.commons.math3.optimization.direct.SimplexOptimizer:SimplexOptimizer()	/src/main/java/org/apache/commons/math3/optimization/direct/SimplexOptimizer.java
4650= org.apache.commons.math3.util.Decimal64Field:getZero()	/src/main/java/org/apache/commons/math3/util/Decimal64Field.java
4651= org.apache.commons.math3.util.Decimal64Field:Decimal64Field()	/src/main/java/org/apache/commons/math3/util/Decimal64Field.java
4652= org.apache.commons.math3.util.Decimal64Field:getInstance()	/src/main/java/org/apache/commons/math3/util/Decimal64Field.java
4653= org.apache.commons.math3.util.Decimal64Field:getRuntimeClass()	/src/main/java/org/apache/commons/math3/util/Decimal64Field.java
4654= org.apache.commons.math3.util.Decimal64Field:getOne()	/src/main/java/org/apache/commons/math3/util/Decimal64Field.java
4655= org.apache.commons.math3.ml.distance.ManhattanDistance:compute(double[], double[])	/src/main/java/org/apache/commons/math3/ml/distance/ManhattanDistance.java
4656= org.apache.commons.math3.analysis.function.Min:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Min.java
4657= org.apache.commons.math3.special.Erf:erfInv(double)	/src/main/java/org/apache/commons/math3/special/Erf.java
4658= org.apache.commons.math3.special.Erf:erfc(double)	/src/main/java/org/apache/commons/math3/special/Erf.java
4659= org.apache.commons.math3.special.Erf:erf(double, double)	/src/main/java/org/apache/commons/math3/special/Erf.java
4660= org.apache.commons.math3.special.Erf:Erf()	/src/main/java/org/apache/commons/math3/special/Erf.java
4661= org.apache.commons.math3.special.Erf:erf(double)	/src/main/java/org/apache/commons/math3/special/Erf.java
4662= org.apache.commons.math3.special.Erf:erfcInv(double)	/src/main/java/org/apache/commons/math3/special/Erf.java
4663= org.apache.commons.math3.ode.MainStateJacobianProvider:computeMainStateJacobian(double, double[], double[], double[][])	/src/main/java/org/apache/commons/math3/ode/MainStateJacobianProvider.java
4664= org.apache.commons.math3.analysis.function.Constant:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Constant.java
4665= org.apache.commons.math3.analysis.function.Constant:Constant(double)	/src/main/java/org/apache/commons/math3/analysis/function/Constant.java
4666= org.apache.commons.math3.analysis.function.Constant:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Constant.java
4667= org.apache.commons.math3.analysis.function.Constant:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Constant.java
4668= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:getY()	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4669= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:calculateBeta()	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4670= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:newYSampleData(double[])	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4671= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:getX()	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4672= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:estimateRegressionParametersVariance()	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4673= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:estimateRegressandVariance()	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4674= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:estimateRegressionParametersStandardErrors()	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4675= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:estimateRegressionStandardError()	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4676= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:setNoIntercept(boolean)	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4677= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:estimateResiduals()	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4678= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:newXSampleData(double[][])	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4679= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:calculateYVariance()	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4680= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:isNoIntercept()	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4681= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:calculateErrorVariance()	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4682= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:validateSampleData(double[][], double[])	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4683= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:calculateResiduals()	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4684= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:calculateBetaVariance()	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4685= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:newSampleData(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4686= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:estimateRegressionParameters()	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4687= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:validateCovarianceData(double[][], double[][])	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4688= org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:estimateErrorVariance()	/src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java
4689= org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver:AbstractPolynomialSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractPolynomialSolver.java
4690= org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver:AbstractPolynomialSolver(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractPolynomialSolver.java
4691= org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver:setup(int, PolynomialFunction, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractPolynomialSolver.java
4692= org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver:AbstractPolynomialSolver(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractPolynomialSolver.java
4693= org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver:getCoefficients()	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractPolynomialSolver.java
4694= org.apache.commons.math3.optim.nonlinear.vector.jacobian.RandomCirclePointGenerator:create()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RandomCirclePointGenerator.java
4695= org.apache.commons.math3.optim.nonlinear.vector.jacobian.RandomCirclePointGenerator:generate(int)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RandomCirclePointGenerator.java
4696= org.apache.commons.math3.optim.nonlinear.vector.jacobian.RandomCirclePointGenerator:RandomCirclePointGenerator(double, double, double, double, double, long)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RandomCirclePointGenerator.java
4697= org.apache.commons.math3.analysis.solvers.IllinoisSolver:IllinoisSolver(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/IllinoisSolver.java
4698= org.apache.commons.math3.analysis.solvers.IllinoisSolver:IllinoisSolver()	/src/main/java/org/apache/commons/math3/analysis/solvers/IllinoisSolver.java
4699= org.apache.commons.math3.analysis.solvers.IllinoisSolver:IllinoisSolver(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/IllinoisSolver.java
4700= org.apache.commons.math3.analysis.solvers.IllinoisSolver:IllinoisSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/IllinoisSolver.java
4701= org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java
4702= org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java
4703= org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic:evaluate(double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java
4704= org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic:hashCode()	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java
4705= org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java
4706= org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic:equals(Object)	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java
4707= org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic:incrementAll(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java
4708= org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic:incrementAll(double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java
4709= org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java
4710= org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java
4711= org.apache.commons.math3.stat.inference.MannWhitneyUTest:concatenateSamples(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java
4712= org.apache.commons.math3.stat.inference.MannWhitneyUTest:MannWhitneyUTest(NaNStrategy, TiesStrategy)	/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java
4713= org.apache.commons.math3.stat.inference.MannWhitneyUTest:ensureDataConformance(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java
4714= org.apache.commons.math3.stat.inference.MannWhitneyUTest:MannWhitneyUTest()	/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java
4715= org.apache.commons.math3.stat.inference.MannWhitneyUTest:mannWhitneyU(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java
4716= org.apache.commons.math3.stat.inference.MannWhitneyUTest:mannWhitneyUTest(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java
4717= org.apache.commons.math3.stat.inference.MannWhitneyUTest:calculateAsymptoticPValue(double, int, int)	/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java
4718= org.apache.commons.math3.analysis.function.StepFunction:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java
4719= org.apache.commons.math3.analysis.function.StepFunction:StepFunction(double[], double[])	/src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java
4720= org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:ModelFunctionJacobian(MultivariateMatrixFunction)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian.java
4721= org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:getModelFunctionJacobian()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian.java
4722= org.apache.commons.math3.genetics.MutationPolicy:mutate(Chromosome)	/src/main/java/org/apache/commons/math3/genetics/MutationPolicy.java
4723= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunction:value(long)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunction.java
4724= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:model(MultivariateVectorFunction, MultivariateMatrixFunction)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4725= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:value(RealVector)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4726= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:getObservationSize()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4727= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.LocalLeastSquaresProblem:getParameterSize()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4728= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:converged(int, Evaluation, Evaluation)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4729= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.LocalLeastSquaresProblem:evaluate(RealVector)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4730= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:create(MultivariateJacobianFunction, RealVector, RealVector, ConvergenceChecker<Evaluation>, int, int)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4731= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:getParameterSize()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4732= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:getJacobian()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4733= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:LocalLeastSquaresProblem(MultivariateJacobianFunction, RealVector, RealVector, ConvergenceChecker<Evaluation>, int, int)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4734= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:countEvaluations(LeastSquaresProblem, Incrementor)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4735= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.LocalLeastSquaresProblem:LocalLeastSquaresProblem(MultivariateJacobianFunction, RealVector, RealVector, ConvergenceChecker<Evaluation>, int, int)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4736= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:evaluationChecker(ConvergenceChecker<PointVectorValuePair>)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4737= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:create(MultivariateJacobianFunction, RealVector, RealVector, RealMatrix, ConvergenceChecker<Evaluation>, int, int)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4738= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:weightMatrix(LeastSquaresProblem, RealMatrix)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4739= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:LeastSquaresFactory()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4740= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:UnweightedEvaluation(RealVector, RealMatrix, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4741= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.LocalLeastSquaresProblem:getJacobian()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4742= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.LocalLeastSquaresProblem.UnweightedEvaluation:getJacobian()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4743= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:getStart()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4744= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.LocalLeastSquaresProblem:getResiduals()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4745= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:create(MultivariateVectorFunction, MultivariateMatrixFunction, double[], double[], RealMatrix, ConvergenceChecker<Evaluation>, int, int)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4746= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.LocalLeastSquaresProblem:getStart()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4747= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.LocalLeastSquaresProblem:getPoint()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4748= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.LocalLeastSquaresProblem:UnweightedEvaluation(RealVector, RealMatrix, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4749= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:evaluate(RealVector)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4750= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.LocalLeastSquaresProblem:getObservationSize()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4751= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:getResiduals()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4752= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:weightDiagonal(LeastSquaresProblem, RealVector)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4753= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:getPoint()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4754= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.LocalLeastSquaresProblem.UnweightedEvaluation:getPoint()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4755= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.LocalLeastSquaresProblem.UnweightedEvaluation:getResiduals()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4756= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory:squareRoot(RealMatrix)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4757= org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.LocalLeastSquaresProblem.UnweightedEvaluation:UnweightedEvaluation(RealVector, RealMatrix, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java
4758= org.apache.commons.math3.optimization.fitting.HarmonicFitter.ParameterGuesser:guessAOmega(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
4759= org.apache.commons.math3.optimization.fitting.HarmonicFitter:guess()	/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
4760= org.apache.commons.math3.optimization.fitting.HarmonicFitter.ParameterGuesser:guess()	/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
4761= org.apache.commons.math3.optimization.fitting.HarmonicFitter.ParameterGuesser:sortObservations(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
4762= org.apache.commons.math3.optimization.fitting.HarmonicFitter:ParameterGuesser(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
4763= org.apache.commons.math3.optimization.fitting.HarmonicFitter:HarmonicFitter(DifferentiableMultivariateVectorOptimizer)	/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
4764= org.apache.commons.math3.optimization.fitting.HarmonicFitter:sortObservations(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
4765= org.apache.commons.math3.optimization.fitting.HarmonicFitter:guessPhi(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
4766= org.apache.commons.math3.optimization.fitting.HarmonicFitter:fit(double[])	/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
4767= org.apache.commons.math3.optimization.fitting.HarmonicFitter:guessAOmega(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
4768= org.apache.commons.math3.optimization.fitting.HarmonicFitter.ParameterGuesser:ParameterGuesser(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
4769= org.apache.commons.math3.optimization.fitting.HarmonicFitter:fit()	/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
4770= org.apache.commons.math3.optimization.fitting.HarmonicFitter.ParameterGuesser:guessPhi(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
4771= org.apache.commons.math3.random.EmpiricalDistribution:EmpiricalDistribution()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4772= org.apache.commons.math3.random.EmpiricalDistribution:reseedRandomGenerator(long)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4773= org.apache.commons.math3.random.EmpiricalDistribution:EmpiricalDistribution(int, RandomDataImpl)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4774= org.apache.commons.math3.random.EmpiricalDistribution.StreamDataAdapter:computeBinStats()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4775= org.apache.commons.math3.random.EmpiricalDistribution:density(double)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4776= org.apache.commons.math3.random.EmpiricalDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4777= org.apache.commons.math3.random.EmpiricalDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4778= org.apache.commons.math3.random.EmpiricalDistribution:isLoaded()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4779= org.apache.commons.math3.random.EmpiricalDistribution:probability(double)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4780= org.apache.commons.math3.random.EmpiricalDistribution:pB(int)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4781= org.apache.commons.math3.random.EmpiricalDistribution:getSampleStats()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4782= org.apache.commons.math3.random.EmpiricalDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4783= org.apache.commons.math3.random.EmpiricalDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4784= org.apache.commons.math3.random.EmpiricalDistribution:EmpiricalDistribution(int)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4785= org.apache.commons.math3.random.EmpiricalDistribution:EmpiricalDistribution(int, RandomDataGenerator)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4786= org.apache.commons.math3.random.EmpiricalDistribution:load(double[])	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4787= org.apache.commons.math3.random.EmpiricalDistribution:getUpperBounds()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4788= org.apache.commons.math3.random.EmpiricalDistribution:ArrayDataAdapter(double[])	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4789= org.apache.commons.math3.random.EmpiricalDistribution:fillBinStats(DataAdapter)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4790= org.apache.commons.math3.random.EmpiricalDistribution:getBinCount()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4791= org.apache.commons.math3.random.EmpiricalDistribution:getGeneratorUpperBounds()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4792= org.apache.commons.math3.random.EmpiricalDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4793= org.apache.commons.math3.random.EmpiricalDistribution:getKernel(SummaryStatistics)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4794= org.apache.commons.math3.random.EmpiricalDistribution:computeStats()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4795= org.apache.commons.math3.random.EmpiricalDistribution.DataAdapter:computeBinStats()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4796= org.apache.commons.math3.random.EmpiricalDistribution:load(URL)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4797= org.apache.commons.math3.random.EmpiricalDistribution:kB(int)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4798= org.apache.commons.math3.random.EmpiricalDistribution.DataAdapter:computeStats()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4799= org.apache.commons.math3.random.EmpiricalDistribution:getBinStats()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4800= org.apache.commons.math3.random.EmpiricalDistribution:cumBinP(int)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4801= org.apache.commons.math3.random.EmpiricalDistribution:reSeed(long)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4802= org.apache.commons.math3.random.EmpiricalDistribution:EmpiricalDistribution(RandomDataImpl)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4803= org.apache.commons.math3.random.EmpiricalDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4804= org.apache.commons.math3.random.EmpiricalDistribution.ArrayDataAdapter:ArrayDataAdapter(double[])	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4805= org.apache.commons.math3.random.EmpiricalDistribution.StreamDataAdapter:computeStats()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4806= org.apache.commons.math3.random.EmpiricalDistribution:pBminus(int)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4807= org.apache.commons.math3.random.EmpiricalDistribution:k(double)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4808= org.apache.commons.math3.random.EmpiricalDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4809= org.apache.commons.math3.random.EmpiricalDistribution:EmpiricalDistribution(RandomGenerator)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4810= org.apache.commons.math3.random.EmpiricalDistribution:getNextValue()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4811= org.apache.commons.math3.random.EmpiricalDistribution:load(File)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4812= org.apache.commons.math3.random.EmpiricalDistribution:StreamDataAdapter(BufferedReader)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4813= org.apache.commons.math3.random.EmpiricalDistribution.StreamDataAdapter:StreamDataAdapter(BufferedReader)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4814= org.apache.commons.math3.random.EmpiricalDistribution:findBin(double)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4815= org.apache.commons.math3.random.EmpiricalDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4816= org.apache.commons.math3.random.EmpiricalDistribution.ArrayDataAdapter:computeStats()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4817= org.apache.commons.math3.random.EmpiricalDistribution.ArrayDataAdapter:computeBinStats()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4818= org.apache.commons.math3.random.EmpiricalDistribution:inverseCumulativeProbability(double)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4819= org.apache.commons.math3.random.EmpiricalDistribution:sample()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4820= org.apache.commons.math3.random.EmpiricalDistribution:EmpiricalDistribution(int, RandomGenerator)	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4821= org.apache.commons.math3.random.EmpiricalDistribution:computeBinStats()	/src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java
4822= org.apache.commons.math3.geometry.enclosing.SupportBallGenerator:ballOnSupport(List<P>)	/src/main/java/org/apache/commons/math3/geometry/enclosing/SupportBallGenerator.java
4823= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:SimplexOptimizer(double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java
4824= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:checkParameters()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java
4825= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:compare(PointValuePair, PointValuePair)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java
4826= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:optimize(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java
4827= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java
4828= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java
4829= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:value(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java
4830= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:SimplexOptimizer(ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java
4831= org.apache.commons.math3.linear.MatrixDimensionMismatchException:getExpectedColumnDimension()	/src/main/java/org/apache/commons/math3/linear/MatrixDimensionMismatchException.java
4832= org.apache.commons.math3.linear.MatrixDimensionMismatchException:getWrongRowDimension()	/src/main/java/org/apache/commons/math3/linear/MatrixDimensionMismatchException.java
4833= org.apache.commons.math3.linear.MatrixDimensionMismatchException:getExpectedRowDimension()	/src/main/java/org/apache/commons/math3/linear/MatrixDimensionMismatchException.java
4834= org.apache.commons.math3.linear.MatrixDimensionMismatchException:MatrixDimensionMismatchException(int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/MatrixDimensionMismatchException.java
4835= org.apache.commons.math3.linear.MatrixDimensionMismatchException:getWrongColumnDimension()	/src/main/java/org/apache/commons/math3/linear/MatrixDimensionMismatchException.java
4836= org.apache.commons.math3.exception.ConvergenceException:ConvergenceException()	/src/main/java/org/apache/commons/math3/exception/ConvergenceException.java
4837= org.apache.commons.math3.exception.ConvergenceException:ConvergenceException(Localizable, Object)	/src/main/java/org/apache/commons/math3/exception/ConvergenceException.java
4838= org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest:testSerial()	/src/test/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePointTest.java
4839= org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest:testDistance()	/src/test/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePointTest.java
4840= org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest:testArrayIsReference()	/src/test/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePointTest.java
4841= org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest:testCentroid()	/src/test/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePointTest.java
4842= org.apache.commons.math3.geometry.spherical.twod.S2Point:equals(Object)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/S2Point.java
4843= org.apache.commons.math3.geometry.spherical.twod.S2Point:S2Point(double, double, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/S2Point.java
4844= org.apache.commons.math3.geometry.spherical.twod.S2Point:getTheta()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/S2Point.java
4845= org.apache.commons.math3.geometry.spherical.twod.S2Point:distance(S2Point, S2Point)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/S2Point.java
4846= org.apache.commons.math3.geometry.spherical.twod.S2Point:vector(double, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/S2Point.java
4847= org.apache.commons.math3.geometry.spherical.twod.S2Point:negate()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/S2Point.java
4848= org.apache.commons.math3.geometry.spherical.twod.S2Point:isNaN()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/S2Point.java
4849= org.apache.commons.math3.geometry.spherical.twod.S2Point:S2Point(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/S2Point.java
4850= org.apache.commons.math3.geometry.spherical.twod.S2Point:getPhi()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/S2Point.java
4851= org.apache.commons.math3.geometry.spherical.twod.S2Point:S2Point(double, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/S2Point.java
4852= org.apache.commons.math3.geometry.spherical.twod.S2Point:distance(Point<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/S2Point.java
4853= org.apache.commons.math3.geometry.spherical.twod.S2Point:getVector()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/S2Point.java
4854= org.apache.commons.math3.geometry.spherical.twod.S2Point:getSpace()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/S2Point.java
4855= org.apache.commons.math3.geometry.spherical.twod.S2Point:hashCode()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/S2Point.java
4856= org.apache.commons.math3.ml.distance.DistanceMeasure:compute(double[], double[])	/src/main/java/org/apache/commons/math3/ml/distance/DistanceMeasure.java
4857= org.apache.commons.math3.stat.descriptive.rank.Median:Median()	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Median.java
4858= org.apache.commons.math3.stat.descriptive.rank.Median:Median(Median)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Median.java
4859= org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest:testMissingSearchInterval()	/src/test/java/org/apache/commons/math3/optim/univariate/MultiStartUnivariateOptimizerTest.java
4860= org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest:testBadFunction()	/src/test/java/org/apache/commons/math3/optim/univariate/MultiStartUnivariateOptimizerTest.java
4861= org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest:testMissingMaxEval()	/src/test/java/org/apache/commons/math3/optim/univariate/MultiStartUnivariateOptimizerTest.java
4862= org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest:testQuinticMin()	/src/test/java/org/apache/commons/math3/optim/univariate/MultiStartUnivariateOptimizerTest.java
4863= org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest:testSinMin()	/src/test/java/org/apache/commons/math3/optim/univariate/MultiStartUnivariateOptimizerTest.java
4864= org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest:value(double)	/src/test/java/org/apache/commons/math3/optim/univariate/MultiStartUnivariateOptimizerTest.java
4865= org.apache.commons.math3.geometry.partitioning.Hyperplane:copySelf()	/src/main/java/org/apache/commons/math3/geometry/partitioning/Hyperplane.java
4866= org.apache.commons.math3.geometry.partitioning.Hyperplane:getOffset(Point<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Hyperplane.java
4867= org.apache.commons.math3.geometry.partitioning.Hyperplane:wholeHyperplane()	/src/main/java/org/apache/commons/math3/geometry/partitioning/Hyperplane.java
4868= org.apache.commons.math3.geometry.partitioning.Hyperplane:project(Point<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Hyperplane.java
4869= org.apache.commons.math3.geometry.partitioning.Hyperplane:getTolerance()	/src/main/java/org/apache/commons/math3/geometry/partitioning/Hyperplane.java
4870= org.apache.commons.math3.geometry.partitioning.Hyperplane:sameOrientationAs(Hyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Hyperplane.java
4871= org.apache.commons.math3.geometry.partitioning.Hyperplane:wholeSpace()	/src/main/java/org/apache/commons/math3/geometry/partitioning/Hyperplane.java
4872= org.apache.commons.math3.analysis.integration.RombergIntegrator:RombergIntegrator(int, int)	/src/main/java/org/apache/commons/math3/analysis/integration/RombergIntegrator.java
4873= org.apache.commons.math3.analysis.integration.RombergIntegrator:doIntegrate()	/src/main/java/org/apache/commons/math3/analysis/integration/RombergIntegrator.java
4874= org.apache.commons.math3.analysis.integration.RombergIntegrator:RombergIntegrator(double, double, int, int)	/src/main/java/org/apache/commons/math3/analysis/integration/RombergIntegrator.java
4875= org.apache.commons.math3.analysis.integration.RombergIntegrator:RombergIntegrator()	/src/main/java/org/apache/commons/math3/analysis/integration/RombergIntegrator.java
4876= org.apache.commons.math3.util.ResizableDoubleArray:ResizableDoubleArray()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4877= org.apache.commons.math3.util.ResizableDoubleArray:ResizableDoubleArray(int, double, double)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4878= org.apache.commons.math3.util.ResizableDoubleArray:getStartIndex()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4879= org.apache.commons.math3.util.ResizableDoubleArray:contract()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4880= org.apache.commons.math3.util.ResizableDoubleArray:checkContractExpand(double, double)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4881= org.apache.commons.math3.util.ResizableDoubleArray:setExpansionMode(int)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4882= org.apache.commons.math3.util.ResizableDoubleArray:ResizableDoubleArray(double[])	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4883= org.apache.commons.math3.util.ResizableDoubleArray:ResizableDoubleArray(int)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4884= org.apache.commons.math3.util.ResizableDoubleArray:ResizableDoubleArray(ResizableDoubleArray)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4885= org.apache.commons.math3.util.ResizableDoubleArray:getExpansionMode()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4886= org.apache.commons.math3.util.ResizableDoubleArray:getContractionCriterion()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4887= org.apache.commons.math3.util.ResizableDoubleArray:hashCode()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4888= org.apache.commons.math3.util.ResizableDoubleArray:getArrayRef()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4889= org.apache.commons.math3.util.ResizableDoubleArray:addElementRolling(double)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4890= org.apache.commons.math3.util.ResizableDoubleArray:clear()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4891= org.apache.commons.math3.util.ResizableDoubleArray:setNumElements(int)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4892= org.apache.commons.math3.util.ResizableDoubleArray:expand()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4893= org.apache.commons.math3.util.ResizableDoubleArray:getElements()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4894= org.apache.commons.math3.util.ResizableDoubleArray:ResizableDoubleArray(int, float, float)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4895= org.apache.commons.math3.util.ResizableDoubleArray:substituteMostRecentElement(double)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4896= org.apache.commons.math3.util.ResizableDoubleArray:expandTo(int)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4897= org.apache.commons.math3.util.ResizableDoubleArray:getInternalValues()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4898= org.apache.commons.math3.util.ResizableDoubleArray:ResizableDoubleArray(int, double, double, ExpansionMode, double)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4899= org.apache.commons.math3.util.ResizableDoubleArray:getElement(int)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4900= org.apache.commons.math3.util.ResizableDoubleArray:compute(MathArrays.Function)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4901= org.apache.commons.math3.util.ResizableDoubleArray:setContractionCriteria(float)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4902= org.apache.commons.math3.util.ResizableDoubleArray:checkContractExpand(float, float)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4903= org.apache.commons.math3.util.ResizableDoubleArray:getNumElements()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4904= org.apache.commons.math3.util.ResizableDoubleArray:ResizableDoubleArray(int, float)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4905= org.apache.commons.math3.util.ResizableDoubleArray:setInitialCapacity(int)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4906= org.apache.commons.math3.util.ResizableDoubleArray:ResizableDoubleArray(int, double)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4907= org.apache.commons.math3.util.ResizableDoubleArray:addElement(double)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4908= org.apache.commons.math3.util.ResizableDoubleArray:setElement(int, double)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4909= org.apache.commons.math3.util.ResizableDoubleArray:copy()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4910= org.apache.commons.math3.util.ResizableDoubleArray:discardExtremeElements(int, boolean)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4911= org.apache.commons.math3.util.ResizableDoubleArray:ResizableDoubleArray(int, float, float, int)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4912= org.apache.commons.math3.util.ResizableDoubleArray:getContractionCriteria()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4913= org.apache.commons.math3.util.ResizableDoubleArray:setExpansionMode(ExpansionMode)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4914= org.apache.commons.math3.util.ResizableDoubleArray:shouldContract()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4915= org.apache.commons.math3.util.ResizableDoubleArray:setExpansionFactor(float)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4916= org.apache.commons.math3.util.ResizableDoubleArray:discardFrontElements(int)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4917= org.apache.commons.math3.util.ResizableDoubleArray:addElements(double[])	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4918= org.apache.commons.math3.util.ResizableDoubleArray:getExpansionFactor()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4919= org.apache.commons.math3.util.ResizableDoubleArray:discardMostRecentElements(int)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4920= org.apache.commons.math3.util.ResizableDoubleArray:start()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4921= org.apache.commons.math3.util.ResizableDoubleArray:copy(ResizableDoubleArray, ResizableDoubleArray)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4922= org.apache.commons.math3.util.ResizableDoubleArray:getCapacity()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4923= org.apache.commons.math3.util.ResizableDoubleArray:equals(Object)	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4924= org.apache.commons.math3.util.ResizableDoubleArray:getInternalLength()	/src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java
4925= org.apache.commons.math3.primes.Primes:primeFactors(int)	/src/main/java/org/apache/commons/math3/primes/Primes.java
4926= org.apache.commons.math3.primes.Primes:nextPrime(int)	/src/main/java/org/apache/commons/math3/primes/Primes.java
4927= org.apache.commons.math3.primes.Primes:isPrime(int)	/src/main/java/org/apache/commons/math3/primes/Primes.java
4928= org.apache.commons.math3.primes.Primes:Primes()	/src/main/java/org/apache/commons/math3/primes/Primes.java
4929= org.apache.commons.math3.ml.neuralnet.oned.NeuronStringTest:testSegmentNetwork()	/src/test/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronStringTest.java
4930= org.apache.commons.math3.ml.neuralnet.oned.NeuronStringTest:testGetNeighboursWithExclude()	/src/test/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronStringTest.java
4931= org.apache.commons.math3.ml.neuralnet.oned.NeuronStringTest:testSerialize()	/src/test/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronStringTest.java
4932= org.apache.commons.math3.ml.neuralnet.oned.NeuronStringTest:testCircleNetwork()	/src/test/java/org/apache/commons/math3/ml/neuralnet/oned/NeuronStringTest.java
4933= org.apache.commons.math3.analysis.solvers.BisectionSolver:doSolve()	/src/main/java/org/apache/commons/math3/analysis/solvers/BisectionSolver.java
4934= org.apache.commons.math3.analysis.solvers.BisectionSolver:BisectionSolver()	/src/main/java/org/apache/commons/math3/analysis/solvers/BisectionSolver.java
4935= org.apache.commons.math3.analysis.solvers.BisectionSolver:BisectionSolver(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BisectionSolver.java
4936= org.apache.commons.math3.analysis.solvers.BisectionSolver:BisectionSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BisectionSolver.java
4937= org.apache.commons.math3.linear.BlockRealMatrix:setRow(int, double[])	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4938= org.apache.commons.math3.linear.BlockRealMatrix:addToEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4939= org.apache.commons.math3.linear.BlockRealMatrix:getEntry(int, int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4940= org.apache.commons.math3.linear.BlockRealMatrix:transpose()	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4941= org.apache.commons.math3.linear.BlockRealMatrix:subtract(BlockRealMatrix)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4942= org.apache.commons.math3.linear.BlockRealMatrix:multiply(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4943= org.apache.commons.math3.linear.BlockRealMatrix:getColumnMatrix(int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4944= org.apache.commons.math3.linear.BlockRealMatrix:walkInOptimizedOrder(RealMatrixPreservingVisitor)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4945= org.apache.commons.math3.linear.BlockRealMatrix:subtract(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4946= org.apache.commons.math3.linear.BlockRealMatrix:blockHeight(int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4947= org.apache.commons.math3.linear.BlockRealMatrix:add(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4948= org.apache.commons.math3.linear.BlockRealMatrix:getData()	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4949= org.apache.commons.math3.linear.BlockRealMatrix:setColumnMatrix(int, BlockRealMatrix)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4950= org.apache.commons.math3.linear.BlockRealMatrix:operate(double[])	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4951= org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4952= org.apache.commons.math3.linear.BlockRealMatrix:multiplyEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4953= org.apache.commons.math3.linear.BlockRealMatrix:getRow(int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4954= org.apache.commons.math3.linear.BlockRealMatrix:setEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4955= org.apache.commons.math3.linear.BlockRealMatrix:setColumnVector(int, RealVector)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4956= org.apache.commons.math3.linear.BlockRealMatrix:walkInRowOrder(RealMatrixPreservingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4957= org.apache.commons.math3.linear.BlockRealMatrix:setColumnMatrix(int, RealMatrix)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4958= org.apache.commons.math3.linear.BlockRealMatrix:toBlocksLayout(double[][])	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4959= org.apache.commons.math3.linear.BlockRealMatrix:getNorm()	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4960= org.apache.commons.math3.linear.BlockRealMatrix:getRowVector(int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4961= org.apache.commons.math3.linear.BlockRealMatrix:copyBlockPart(double[], int, int, int, int, int, double[], int, int, int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4962= org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4963= org.apache.commons.math3.linear.BlockRealMatrix:walkInRowOrder(RealMatrixChangingVisitor)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4964= org.apache.commons.math3.linear.BlockRealMatrix:scalarMultiply(double)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4965= org.apache.commons.math3.linear.BlockRealMatrix:walkInOptimizedOrder(RealMatrixChangingVisitor)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4966= org.apache.commons.math3.linear.BlockRealMatrix:BlockRealMatrix(double[][])	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4967= org.apache.commons.math3.linear.BlockRealMatrix:getFrobeniusNorm()	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4968= org.apache.commons.math3.linear.BlockRealMatrix:walkInOptimizedOrder(RealMatrixChangingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4969= org.apache.commons.math3.linear.BlockRealMatrix:BlockRealMatrix(int, int, double[][], boolean)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4970= org.apache.commons.math3.linear.BlockRealMatrix:setRowVector(int, RealVector)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4971= org.apache.commons.math3.linear.BlockRealMatrix:setRowMatrix(int, RealMatrix)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4972= org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4973= org.apache.commons.math3.linear.BlockRealMatrix:multiply(BlockRealMatrix)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4974= org.apache.commons.math3.linear.BlockRealMatrix:getColumnVector(int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4975= org.apache.commons.math3.linear.BlockRealMatrix:setSubMatrix(double[][], int, int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4976= org.apache.commons.math3.linear.BlockRealMatrix:add(BlockRealMatrix)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4977= org.apache.commons.math3.linear.BlockRealMatrix:setRowMatrix(int, BlockRealMatrix)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4978= org.apache.commons.math3.linear.BlockRealMatrix:BlockRealMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4979= org.apache.commons.math3.linear.BlockRealMatrix:walkInOptimizedOrder(RealMatrixPreservingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4980= org.apache.commons.math3.linear.BlockRealMatrix:copy()	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4981= org.apache.commons.math3.linear.BlockRealMatrix:walkInRowOrder(RealMatrixPreservingVisitor)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4982= org.apache.commons.math3.linear.BlockRealMatrix:getColumn(int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4983= org.apache.commons.math3.linear.BlockRealMatrix:getRowMatrix(int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4984= org.apache.commons.math3.linear.BlockRealMatrix:scalarAdd(double)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4985= org.apache.commons.math3.linear.BlockRealMatrix:preMultiply(double[])	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4986= org.apache.commons.math3.linear.BlockRealMatrix:setColumn(int, double[])	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4987= org.apache.commons.math3.linear.BlockRealMatrix:createMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4988= org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(int, int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4989= org.apache.commons.math3.linear.BlockRealMatrix:getSubMatrix(int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4990= org.apache.commons.math3.linear.BlockRealMatrix:walkInRowOrder(RealMatrixChangingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
4991= org.apache.commons.math3.userguide.filter.CannonballExample:getX()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
4992= org.apache.commons.math3.userguide.filter.CannonballExample:getXVelocity()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
4993= org.apache.commons.math3.userguide.filter.CannonballExample:getY()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
4994= org.apache.commons.math3.userguide.filter.CannonballExample:step()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
4995= org.apache.commons.math3.userguide.filter.CannonballExample:main(String[])	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
4996= org.apache.commons.math3.userguide.filter.CannonballExample.Cannonball:getXVelocity()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
4997= org.apache.commons.math3.userguide.filter.CannonballExample:Cannonball(double, double, double, double, int)	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
4998= org.apache.commons.math3.userguide.filter.CannonballExample:createChart(String, LegendPosition)	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
4999= org.apache.commons.math3.userguide.filter.CannonballExample:getYVelocity()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5000= org.apache.commons.math3.userguide.filter.CannonballExample.Cannonball:step()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5001= org.apache.commons.math3.userguide.filter.CannonballExample:cannonballTest(Chart)	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5002= org.apache.commons.math3.userguide.filter.CannonballExample:getMeasuredY()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5003= org.apache.commons.math3.userguide.filter.CannonballExample.Cannonball:getX()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5004= org.apache.commons.math3.userguide.filter.CannonballExample.Cannonball:getYVelocity()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5005= org.apache.commons.math3.userguide.filter.CannonballExample:getMeasuredX()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5006= org.apache.commons.math3.userguide.filter.CannonballExample.Display:Display()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5007= org.apache.commons.math3.userguide.filter.CannonballExample:createComponent()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5008= org.apache.commons.math3.userguide.filter.CannonballExample.Cannonball:getMeasuredY()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5009= org.apache.commons.math3.userguide.filter.CannonballExample.Cannonball:getMeasuredX()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5010= org.apache.commons.math3.userguide.filter.CannonballExample:Display()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5011= org.apache.commons.math3.userguide.filter.CannonballExample.Cannonball:Cannonball(double, double, double, double, int)	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5012= org.apache.commons.math3.userguide.filter.CannonballExample.Cannonball:getY()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5013= org.apache.commons.math3.userguide.filter.CannonballExample.Display:getMainPanel()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5014= org.apache.commons.math3.userguide.filter.CannonballExample:getMainPanel()	/src/userguide/java/org/apache/commons/math3/userguide/filter/CannonballExample.java
5015= org.apache.commons.math3.analysis.function.Sqrt:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Sqrt.java
5016= org.apache.commons.math3.analysis.function.Sqrt:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Sqrt.java
5017= org.apache.commons.math3.analysis.function.Sqrt:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Sqrt.java
5018= org.apache.commons.math3.distribution.FDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5019= org.apache.commons.math3.distribution.FDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5020= org.apache.commons.math3.distribution.FDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5021= org.apache.commons.math3.distribution.FDistribution:calculateNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5022= org.apache.commons.math3.distribution.FDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5023= org.apache.commons.math3.distribution.FDistribution:FDistribution(double, double, double)	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5024= org.apache.commons.math3.distribution.FDistribution:getDenominatorDegreesOfFreedom()	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5025= org.apache.commons.math3.distribution.FDistribution:FDistribution(RandomGenerator, double, double)	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5026= org.apache.commons.math3.distribution.FDistribution:getSolverAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5027= org.apache.commons.math3.distribution.FDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5028= org.apache.commons.math3.distribution.FDistribution:FDistribution(RandomGenerator, double, double, double)	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5029= org.apache.commons.math3.distribution.FDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5030= org.apache.commons.math3.distribution.FDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5031= org.apache.commons.math3.distribution.FDistribution:FDistribution(double, double)	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5032= org.apache.commons.math3.distribution.FDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5033= org.apache.commons.math3.distribution.FDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5034= org.apache.commons.math3.distribution.FDistribution:logDensity(double)	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5035= org.apache.commons.math3.distribution.FDistribution:getNumeratorDegreesOfFreedom()	/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
5036= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator:differentiate(UnivariateMatrixFunction)	/src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java
5037= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator:FiniteDifferencesDifferentiator(int, double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java
5038= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator:evaluate(DerivativeStructure, double, double[])	/src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java
5039= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator:getStepSize()	/src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java
5040= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java
5041= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator:differentiate(UnivariateFunction)	/src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java
5042= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator:FiniteDifferencesDifferentiator(int, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java
5043= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator:getNbPoints()	/src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java
5044= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator:value(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java
5045= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator:differentiate(UnivariateVectorFunction)	/src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java
5046= org.apache.commons.math3.distribution.TriangularDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/TriangularDistribution.java
5047= org.apache.commons.math3.distribution.TriangularDistribution:inverseCumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/TriangularDistribution.java
5048= org.apache.commons.math3.distribution.TriangularDistribution:getMode()	/src/main/java/org/apache/commons/math3/distribution/TriangularDistribution.java
5049= org.apache.commons.math3.distribution.TriangularDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/TriangularDistribution.java
5050= org.apache.commons.math3.distribution.TriangularDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/TriangularDistribution.java
5051= org.apache.commons.math3.distribution.TriangularDistribution:TriangularDistribution(double, double, double)	/src/main/java/org/apache/commons/math3/distribution/TriangularDistribution.java
5052= org.apache.commons.math3.distribution.TriangularDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/TriangularDistribution.java
5053= org.apache.commons.math3.distribution.TriangularDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/TriangularDistribution.java
5054= org.apache.commons.math3.distribution.TriangularDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/TriangularDistribution.java
5055= org.apache.commons.math3.distribution.TriangularDistribution:getSolverAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/distribution/TriangularDistribution.java
5056= org.apache.commons.math3.distribution.TriangularDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/TriangularDistribution.java
5057= org.apache.commons.math3.distribution.TriangularDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/TriangularDistribution.java
5058= org.apache.commons.math3.distribution.TriangularDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/TriangularDistribution.java
5059= org.apache.commons.math3.distribution.TriangularDistribution:TriangularDistribution(RandomGenerator, double, double, double)	/src/main/java/org/apache/commons/math3/distribution/TriangularDistribution.java
5060= org.apache.commons.math3.ode.nonstiff.MidpointIntegrator:MidpointIntegrator(double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/MidpointIntegrator.java
5061= org.apache.commons.math3.filter.KalmanFilter:predict(RealVector)	/src/main/java/org/apache/commons/math3/filter/KalmanFilter.java
5062= org.apache.commons.math3.filter.KalmanFilter:correct(RealVector)	/src/main/java/org/apache/commons/math3/filter/KalmanFilter.java
5063= org.apache.commons.math3.filter.KalmanFilter:getStateEstimation()	/src/main/java/org/apache/commons/math3/filter/KalmanFilter.java
5064= org.apache.commons.math3.filter.KalmanFilter:predict(double[])	/src/main/java/org/apache/commons/math3/filter/KalmanFilter.java
5065= org.apache.commons.math3.filter.KalmanFilter:KalmanFilter(ProcessModel, MeasurementModel)	/src/main/java/org/apache/commons/math3/filter/KalmanFilter.java
5066= org.apache.commons.math3.filter.KalmanFilter:getStateDimension()	/src/main/java/org/apache/commons/math3/filter/KalmanFilter.java
5067= org.apache.commons.math3.filter.KalmanFilter:correct(double[])	/src/main/java/org/apache/commons/math3/filter/KalmanFilter.java
5068= org.apache.commons.math3.filter.KalmanFilter:getStateEstimationVector()	/src/main/java/org/apache/commons/math3/filter/KalmanFilter.java
5069= org.apache.commons.math3.filter.KalmanFilter:predict()	/src/main/java/org/apache/commons/math3/filter/KalmanFilter.java
5070= org.apache.commons.math3.filter.KalmanFilter:getMeasurementDimension()	/src/main/java/org/apache/commons/math3/filter/KalmanFilter.java
5071= org.apache.commons.math3.filter.KalmanFilter:getErrorCovarianceMatrix()	/src/main/java/org/apache/commons/math3/filter/KalmanFilter.java
5072= org.apache.commons.math3.filter.KalmanFilter:getErrorCovariance()	/src/main/java/org/apache/commons/math3/filter/KalmanFilter.java
5073= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getResidualSumOfSquares()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5074= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset.LeastSquaresProblem:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5075= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getParametersStandardDeviations()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5076= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getParameters()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5077= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5078= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getData()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5079= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getLeastSquaresProblem()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5080= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getNumParameters()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5081= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getY(int)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5082= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getNumObservations()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5083= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5084= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset.LeastSquaresProblem:getModelFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5085= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:StatisticalReferenceDataset(BufferedReader)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5086= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getName()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5087= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getModelDerivatives(double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5088= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getParameterStandardDeviation(int)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5089= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getModelFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5090= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset.LeastSquaresProblem:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5091= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:findLineNumbers(String, Iterable<String>)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5092= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getModelValue(double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5093= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getNumStartingPoints()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5094= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getX(int)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5095= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getParameter(int)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5096= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset:getStartingPoint(int)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDataset.java
5097= org.apache.commons.math3.optim.linear.Relationship:Relationship(String)	/src/main/java/org/apache/commons/math3/optim/linear/Relationship.java
5098= org.apache.commons.math3.optim.linear.Relationship:toString()	/src/main/java/org/apache/commons/math3/optim/linear/Relationship.java
5099= org.apache.commons.math3.optim.linear.Relationship:oppositeRelationship()	/src/main/java/org/apache/commons/math3/optim/linear/Relationship.java
5100= org.apache.commons.math3.analysis.interpolation.NevilleInterpolator:interpolate(double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java
5101= org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D:AbstractConvexHullGenerator2D(boolean, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/AbstractConvexHullGenerator2D.java
5102= org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D:isIncludeCollinearPoints()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/AbstractConvexHullGenerator2D.java
5103= org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D:findHullVertices(Collection<Vector2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/AbstractConvexHullGenerator2D.java
5104= org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D:AbstractConvexHullGenerator2D(boolean)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/AbstractConvexHullGenerator2D.java
5105= org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D:getTolerance()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/AbstractConvexHullGenerator2D.java
5106= org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D:generate(Collection<Vector2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/AbstractConvexHullGenerator2D.java
5107= org.apache.commons.math3.ode.ParameterJacobianWrapper:getParametersNames()	/src/main/java/org/apache/commons/math3/ode/ParameterJacobianWrapper.java
5108= org.apache.commons.math3.ode.ParameterJacobianWrapper:computeParameterJacobian(double, double[], double[], String, double[])	/src/main/java/org/apache/commons/math3/ode/ParameterJacobianWrapper.java
5109= org.apache.commons.math3.ode.ParameterJacobianWrapper:isSupported(String)	/src/main/java/org/apache/commons/math3/ode/ParameterJacobianWrapper.java
5110= org.apache.commons.math3.ode.ParameterJacobianWrapper:ParameterJacobianWrapper(FirstOrderDifferentialEquations, ParameterizedODE, ParameterConfiguration[])	/src/main/java/org/apache/commons/math3/ode/ParameterJacobianWrapper.java
5111= org.apache.commons.math3.analysis.function.Expm1:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Expm1.java
5112= org.apache.commons.math3.analysis.function.Expm1:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Expm1.java
5113= org.apache.commons.math3.analysis.function.Expm1:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Expm1.java
5114= org.apache.commons.math3.linear.SingularValueDecomposition:getConditionNumber()	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5115= org.apache.commons.math3.linear.SingularValueDecomposition:getInverseConditionNumber()	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5116= org.apache.commons.math3.linear.SingularValueDecomposition:getRank()	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5117= org.apache.commons.math3.linear.SingularValueDecomposition:getSolver()	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5118= org.apache.commons.math3.linear.SingularValueDecomposition.Solver:solve(RealVector)	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5119= org.apache.commons.math3.linear.SingularValueDecomposition:getNorm()	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5120= org.apache.commons.math3.linear.SingularValueDecomposition:visit(int, int, double)	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5121= org.apache.commons.math3.linear.SingularValueDecomposition:getCovariance(double)	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5122= org.apache.commons.math3.linear.SingularValueDecomposition:solve(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5123= org.apache.commons.math3.linear.SingularValueDecomposition:getInverse()	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5124= org.apache.commons.math3.linear.SingularValueDecomposition.Solver:Solver(double[], RealMatrix, RealMatrix, boolean, double)	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5125= org.apache.commons.math3.linear.SingularValueDecomposition:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5126= org.apache.commons.math3.linear.SingularValueDecomposition:getS()	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5127= org.apache.commons.math3.linear.SingularValueDecomposition:getSingularValues()	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5128= org.apache.commons.math3.linear.SingularValueDecomposition:Solver(double[], RealMatrix, RealMatrix, boolean, double)	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5129= org.apache.commons.math3.linear.SingularValueDecomposition:getU()	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5130= org.apache.commons.math3.linear.SingularValueDecomposition:getV()	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5131= org.apache.commons.math3.linear.SingularValueDecomposition.Solver:getInverse()	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5132= org.apache.commons.math3.linear.SingularValueDecomposition.Solver:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5133= org.apache.commons.math3.linear.SingularValueDecomposition:solve(RealVector)	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5134= org.apache.commons.math3.linear.SingularValueDecomposition:getUT()	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5135= org.apache.commons.math3.linear.SingularValueDecomposition:getVT()	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5136= org.apache.commons.math3.linear.SingularValueDecomposition:SingularValueDecomposition(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5137= org.apache.commons.math3.linear.SingularValueDecomposition.Solver:solve(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
5138= org.apache.commons.math3.fitting.leastsquares.OptimumImpl:OptimumImpl(Evaluation, int, int)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/OptimumImpl.java
5139= org.apache.commons.math3.fitting.leastsquares.OptimumImpl:getEvaluations()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/OptimumImpl.java
5140= org.apache.commons.math3.fitting.leastsquares.OptimumImpl:getIterations()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/OptimumImpl.java
5141= org.apache.commons.math3.fitting.leastsquares.OptimumImpl:getJacobian()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/OptimumImpl.java
5142= org.apache.commons.math3.fitting.leastsquares.OptimumImpl:getResiduals()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/OptimumImpl.java
5143= org.apache.commons.math3.fitting.leastsquares.OptimumImpl:getCovariances(double)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/OptimumImpl.java
5144= org.apache.commons.math3.fitting.leastsquares.OptimumImpl:getRMS()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/OptimumImpl.java
5145= org.apache.commons.math3.fitting.leastsquares.OptimumImpl:getPoint()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/OptimumImpl.java
5146= org.apache.commons.math3.fitting.leastsquares.OptimumImpl:getSigma(double)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/OptimumImpl.java
5147= org.apache.commons.math3.fitting.leastsquares.OptimumImpl:getCost()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/OptimumImpl.java
5148= org.apache.commons.math3.analysis.function.Subtract:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Subtract.java
5149= org.apache.commons.math3.geometry.spherical.twod.SubCircle:SubCircle(Hyperplane<Sphere2D>, Region<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SubCircle.java
5150= org.apache.commons.math3.geometry.spherical.twod.SubCircle:side(Hyperplane<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SubCircle.java
5151= org.apache.commons.math3.geometry.spherical.twod.SubCircle:split(Hyperplane<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SubCircle.java
5152= org.apache.commons.math3.geometry.spherical.twod.SubCircle:buildNew(Hyperplane<Sphere2D>, Region<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SubCircle.java
5153= org.apache.commons.math3.optim.PointVectorValuePair:PointVectorValuePair(double[], double[], boolean)	/src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java
5154= org.apache.commons.math3.optim.PointVectorValuePair:DataTransferObject(double[], double[])	/src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java
5155= org.apache.commons.math3.optim.PointVectorValuePair:getPoint()	/src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java
5156= org.apache.commons.math3.optim.PointVectorValuePair:getPointRef()	/src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java
5157= org.apache.commons.math3.optim.PointVectorValuePair.DataTransferObject:readResolve()	/src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java
5158= org.apache.commons.math3.optim.PointVectorValuePair:getValueRef()	/src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java
5159= org.apache.commons.math3.optim.PointVectorValuePair:PointVectorValuePair(double[], double[])	/src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java
5160= org.apache.commons.math3.optim.PointVectorValuePair:getValue()	/src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java
5161= org.apache.commons.math3.optim.PointVectorValuePair:writeReplace()	/src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java
5162= org.apache.commons.math3.optim.PointVectorValuePair:readResolve()	/src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java
5163= org.apache.commons.math3.optim.PointVectorValuePair.DataTransferObject:DataTransferObject(double[], double[])	/src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java
5164= org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException:CardanEulerSingularityException(boolean)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException.java
5165= org.apache.commons.math3.random.RandomData:nextSecureHexString(int)	/src/main/java/org/apache/commons/math3/random/RandomData.java
5166= org.apache.commons.math3.random.RandomData:nextLong(long, long)	/src/main/java/org/apache/commons/math3/random/RandomData.java
5167= org.apache.commons.math3.random.RandomData:nextPoisson(double)	/src/main/java/org/apache/commons/math3/random/RandomData.java
5168= org.apache.commons.math3.random.RandomData:nextExponential(double)	/src/main/java/org/apache/commons/math3/random/RandomData.java
5169= org.apache.commons.math3.random.RandomData:nextUniform(double, double, boolean)	/src/main/java/org/apache/commons/math3/random/RandomData.java
5170= org.apache.commons.math3.random.RandomData:nextSecureLong(long, long)	/src/main/java/org/apache/commons/math3/random/RandomData.java
5171= org.apache.commons.math3.random.RandomData:nextUniform(double, double)	/src/main/java/org/apache/commons/math3/random/RandomData.java
5172= org.apache.commons.math3.random.RandomData:nextPermutation(int, int)	/src/main/java/org/apache/commons/math3/random/RandomData.java
5173= org.apache.commons.math3.random.RandomData:nextSecureInt(int, int)	/src/main/java/org/apache/commons/math3/random/RandomData.java
5174= org.apache.commons.math3.random.RandomData:nextHexString(int)	/src/main/java/org/apache/commons/math3/random/RandomData.java
5175= org.apache.commons.math3.random.RandomData:nextGaussian(double, double)	/src/main/java/org/apache/commons/math3/random/RandomData.java
5176= org.apache.commons.math3.random.RandomData:nextInt(int, int)	/src/main/java/org/apache/commons/math3/random/RandomData.java
5177= org.apache.commons.math3.random.RandomData:nextSample(Collection<?>, int)	/src/main/java/org/apache/commons/math3/random/RandomData.java
5178= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest:distanceFrom(CloseIntegerPoint)	/src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java
5179= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest:testPerformClusterAnalysisToManyClusters()	/src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java
5180= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest:testPerformClusterAnalysisDegenerate()	/src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java
5181= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest:testCertainSpace()	/src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java
5182= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest.CloseIntegerPoint:CloseIntegerPoint(EuclideanIntegerPoint)	/src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java
5183= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest.CloseIntegerPoint:distanceFrom(CloseIntegerPoint)	/src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java
5184= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest.CloseIntegerPoint:centroidOf(Collection<CloseIntegerPoint>)	/src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java
5185= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest:centroidOf(Collection<CloseIntegerPoint>)	/src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java
5186= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest.CloseIntegerPoint:hashCode()	/src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java
5187= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest:dimension2()	/src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java
5188= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest:CloseIntegerPoint(EuclideanIntegerPoint)	/src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java
5189= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest.CloseIntegerPoint:equals(Object)	/src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java
5190= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest:testSmallDistances()	/src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java
5191= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest:equals(Object)	/src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java
5192= org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest:hashCode()	/src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java
5193= org.apache.commons.math3.exception.MathIllegalNumberException:getArgument()	/src/main/java/org/apache/commons/math3/exception/MathIllegalNumberException.java
5194= org.apache.commons.math3.exception.MathIllegalNumberException:MathIllegalNumberException(Localizable, Number, Object)	/src/main/java/org/apache/commons/math3/exception/MathIllegalNumberException.java
5195= org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor:end()	/src/main/java/org/apache/commons/math3/linear/DefaultRealMatrixChangingVisitor.java
5196= org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor:visit(int, int, double)	/src/main/java/org/apache/commons/math3/linear/DefaultRealMatrixChangingVisitor.java
5197= org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor:start(int, int, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/DefaultRealMatrixChangingVisitor.java
5198= org.apache.commons.math3.optimization.linear.Relationship:oppositeRelationship()	/src/main/java/org/apache/commons/math3/optimization/linear/Relationship.java
5199= org.apache.commons.math3.optimization.linear.Relationship:Relationship(String)	/src/main/java/org/apache/commons/math3/optimization/linear/Relationship.java
5200= org.apache.commons.math3.optimization.linear.Relationship:toString()	/src/main/java/org/apache/commons/math3/optimization/linear/Relationship.java
5201= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:cdf(double, int, boolean)	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5202= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:copyPartition(double[], double[], int[], int, int)	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5203= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:roundedK(double, int)	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5204= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:approximateP(double, int, int)	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5205= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:monteCarloP(double, int, int, boolean, int)	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5206= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:kolmogorovSmirnovStatistic(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5207= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:cdf(double, int)	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5208= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:KolmogorovSmirnovTest(RandomGenerator)	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5209= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:exactK(double, int)	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5210= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:createH(double, int)	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5211= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:kolmogorovSmirnovStatistic(RealDistribution, double[])	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5212= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:exactP(double, int, int, boolean)	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5213= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:kolmogorovSmirnovTest(RealDistribution, double[])	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5214= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:ksSum(double, double, int)	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5215= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:KolmogorovSmirnovTest()	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5216= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:kolmogorovSmirnovTest(RealDistribution, double[], double)	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5217= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:kolmogorovSmirnovTest(double[], double[], boolean)	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5218= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:kolmogorovSmirnovTest(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5219= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:cdfExact(double, int)	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5220= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:checkArray(double[])	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5221= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest:kolmogorovSmirnovTest(RealDistribution, double[], boolean)	/src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java
5222= org.apache.commons.math3.geometry.enclosing.EnclosingBall:contains(P)	/src/main/java/org/apache/commons/math3/geometry/enclosing/EnclosingBall.java
5223= org.apache.commons.math3.geometry.enclosing.EnclosingBall:EnclosingBall(P, double, P)	/src/main/java/org/apache/commons/math3/geometry/enclosing/EnclosingBall.java
5224= org.apache.commons.math3.geometry.enclosing.EnclosingBall:getRadius()	/src/main/java/org/apache/commons/math3/geometry/enclosing/EnclosingBall.java
5225= org.apache.commons.math3.geometry.enclosing.EnclosingBall:getSupportSize()	/src/main/java/org/apache/commons/math3/geometry/enclosing/EnclosingBall.java
5226= org.apache.commons.math3.geometry.enclosing.EnclosingBall:getCenter()	/src/main/java/org/apache/commons/math3/geometry/enclosing/EnclosingBall.java
5227= org.apache.commons.math3.geometry.enclosing.EnclosingBall:getSupport()	/src/main/java/org/apache/commons/math3/geometry/enclosing/EnclosingBall.java
5228= org.apache.commons.math3.geometry.enclosing.EnclosingBall:contains(P, double)	/src/main/java/org/apache/commons/math3/geometry/enclosing/EnclosingBall.java
5229= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex:NelderMeadSimplex(int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/NelderMeadSimplex.java
5230= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex:NelderMeadSimplex(int, double, double, double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/NelderMeadSimplex.java
5231= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex:NelderMeadSimplex(double[][])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/NelderMeadSimplex.java
5232= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex:NelderMeadSimplex(int, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/NelderMeadSimplex.java
5233= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex:NelderMeadSimplex(double[][], double, double, double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/NelderMeadSimplex.java
5234= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex:iterate(MultivariateFunction, Comparator<PointValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/NelderMeadSimplex.java
5235= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex:NelderMeadSimplex(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/NelderMeadSimplex.java
5236= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex:NelderMeadSimplex(double[], double, double, double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/NelderMeadSimplex.java
5237= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex:NelderMeadSimplex(int, double, double, double, double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/NelderMeadSimplex.java
5238= org.apache.commons.math3.linear.SparseFieldVector:append(SparseFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5239= org.apache.commons.math3.linear.SparseFieldVector:mapSubtract(T)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5240= org.apache.commons.math3.linear.SparseFieldVector:SparseFieldVector(Field<T>, T[])	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5241= org.apache.commons.math3.linear.SparseFieldVector:getEntries()	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5242= org.apache.commons.math3.linear.SparseFieldVector:mapInv()	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5243= org.apache.commons.math3.linear.SparseFieldVector:mapMultiplyToSelf(T)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5244= org.apache.commons.math3.linear.SparseFieldVector:hashCode()	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5245= org.apache.commons.math3.linear.SparseFieldVector:outerProduct(SparseFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5246= org.apache.commons.math3.linear.SparseFieldVector:outerProduct(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5247= org.apache.commons.math3.linear.SparseFieldVector:walkInDefaultOrder(FieldVectorChangingVisitor<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5248= org.apache.commons.math3.linear.SparseFieldVector:walkInDefaultOrder(FieldVectorPreservingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5249= org.apache.commons.math3.linear.SparseFieldVector:walkInDefaultOrder(FieldVectorPreservingVisitor<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5250= org.apache.commons.math3.linear.SparseFieldVector:walkInOptimizedOrder(FieldVectorPreservingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5251= org.apache.commons.math3.linear.SparseFieldVector:mapSubtractToSelf(T)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5252= org.apache.commons.math3.linear.SparseFieldVector:mapAddToSelf(T)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5253= org.apache.commons.math3.linear.SparseFieldVector:walkInOptimizedOrder(FieldVectorChangingVisitor<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5254= org.apache.commons.math3.linear.SparseFieldVector:getField()	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5255= org.apache.commons.math3.linear.SparseFieldVector:ebeMultiply(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5256= org.apache.commons.math3.linear.SparseFieldVector:walkInDefaultOrder(FieldVectorChangingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5257= org.apache.commons.math3.linear.SparseFieldVector:toArray()	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5258= org.apache.commons.math3.linear.SparseFieldVector:SparseFieldVector(Field<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5259= org.apache.commons.math3.linear.SparseFieldVector:copy()	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5260= org.apache.commons.math3.linear.SparseFieldVector:getSubVector(int, int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5261= org.apache.commons.math3.linear.SparseFieldVector:set(T)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5262= org.apache.commons.math3.linear.SparseFieldVector:SparseFieldVector(Field<T>, int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5263= org.apache.commons.math3.linear.SparseFieldVector:getEntry(int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5264= org.apache.commons.math3.linear.SparseFieldVector:mapInvToSelf()	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5265= org.apache.commons.math3.linear.SparseFieldVector:projection(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5266= org.apache.commons.math3.linear.SparseFieldVector:subtract(SparseFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5267= org.apache.commons.math3.linear.SparseFieldVector:SparseFieldVector(SparseFieldVector<T>, int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5268= org.apache.commons.math3.linear.SparseFieldVector:mapAdd(T)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5269= org.apache.commons.math3.linear.SparseFieldVector:append(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5270= org.apache.commons.math3.linear.SparseFieldVector:mapDivideToSelf(T)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5271= org.apache.commons.math3.linear.SparseFieldVector:add(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5272= org.apache.commons.math3.linear.SparseFieldVector:add(SparseFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5273= org.apache.commons.math3.linear.SparseFieldVector:dotProduct(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5274= org.apache.commons.math3.linear.SparseFieldVector:checkVectorDimensions(int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5275= org.apache.commons.math3.linear.SparseFieldVector:ebeDivide(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5276= org.apache.commons.math3.linear.SparseFieldVector:getDimension()	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5277= org.apache.commons.math3.linear.SparseFieldVector:setEntry(int, T)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5278= org.apache.commons.math3.linear.SparseFieldVector:SparseFieldVector(Field<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5279= org.apache.commons.math3.linear.SparseFieldVector:SparseFieldVector(SparseFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5280= org.apache.commons.math3.linear.SparseFieldVector:checkIndex(int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5281= org.apache.commons.math3.linear.SparseFieldVector:mapMultiply(T)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5282= org.apache.commons.math3.linear.SparseFieldVector:walkInOptimizedOrder(FieldVectorChangingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5283= org.apache.commons.math3.linear.SparseFieldVector:checkIndices(int, int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5284= org.apache.commons.math3.linear.SparseFieldVector:getData()	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5285= org.apache.commons.math3.linear.SparseFieldVector:setSubVector(int, FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5286= org.apache.commons.math3.linear.SparseFieldVector:walkInOptimizedOrder(FieldVectorPreservingVisitor<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5287= org.apache.commons.math3.linear.SparseFieldVector:equals(Object)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5288= org.apache.commons.math3.linear.SparseFieldVector:append(T)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5289= org.apache.commons.math3.linear.SparseFieldVector:subtract(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5290= org.apache.commons.math3.linear.SparseFieldVector:mapDivide(T)	/src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java
5291= org.apache.commons.math3.analysis.solvers.NewtonSolver:doSolve()	/src/main/java/org/apache/commons/math3/analysis/solvers/NewtonSolver.java
5292= org.apache.commons.math3.analysis.solvers.NewtonSolver:NewtonSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/NewtonSolver.java
5293= org.apache.commons.math3.analysis.solvers.NewtonSolver:solve(int, DifferentiableUnivariateFunction, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/NewtonSolver.java
5294= org.apache.commons.math3.analysis.solvers.NewtonSolver:NewtonSolver()	/src/main/java/org/apache/commons/math3/analysis/solvers/NewtonSolver.java
5295= org.apache.commons.math3.fraction.FractionFormat:FractionFormat()	/src/main/java/org/apache/commons/math3/fraction/FractionFormat.java
5296= org.apache.commons.math3.fraction.FractionFormat:getDefaultNumberFormat()	/src/main/java/org/apache/commons/math3/fraction/FractionFormat.java
5297= org.apache.commons.math3.fraction.FractionFormat:FractionFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/fraction/FractionFormat.java
5298= org.apache.commons.math3.fraction.FractionFormat:format(Fraction, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/fraction/FractionFormat.java
5299= org.apache.commons.math3.fraction.FractionFormat:getImproperInstance(Locale)	/src/main/java/org/apache/commons/math3/fraction/FractionFormat.java
5300= org.apache.commons.math3.fraction.FractionFormat:getAvailableLocales()	/src/main/java/org/apache/commons/math3/fraction/FractionFormat.java
5301= org.apache.commons.math3.fraction.FractionFormat:format(Object, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/fraction/FractionFormat.java
5302= org.apache.commons.math3.fraction.FractionFormat:formatFraction(Fraction)	/src/main/java/org/apache/commons/math3/fraction/FractionFormat.java
5303= org.apache.commons.math3.fraction.FractionFormat:parse(String)	/src/main/java/org/apache/commons/math3/fraction/FractionFormat.java
5304= org.apache.commons.math3.fraction.FractionFormat:getImproperInstance()	/src/main/java/org/apache/commons/math3/fraction/FractionFormat.java
5305= org.apache.commons.math3.fraction.FractionFormat:getProperInstance(Locale)	/src/main/java/org/apache/commons/math3/fraction/FractionFormat.java
5306= org.apache.commons.math3.fraction.FractionFormat:getProperInstance()	/src/main/java/org/apache/commons/math3/fraction/FractionFormat.java
5307= org.apache.commons.math3.fraction.FractionFormat:FractionFormat(NumberFormat, NumberFormat)	/src/main/java/org/apache/commons/math3/fraction/FractionFormat.java
5308= org.apache.commons.math3.fraction.FractionFormat:parse(String, ParsePosition)	/src/main/java/org/apache/commons/math3/fraction/FractionFormat.java
5309= org.apache.commons.math3.optimization.direct.NelderMeadSimplex:NelderMeadSimplex(int)	/src/main/java/org/apache/commons/math3/optimization/direct/NelderMeadSimplex.java
5310= org.apache.commons.math3.optimization.direct.NelderMeadSimplex:NelderMeadSimplex(double[], double, double, double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/NelderMeadSimplex.java
5311= org.apache.commons.math3.optimization.direct.NelderMeadSimplex:NelderMeadSimplex(double[][], double, double, double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/NelderMeadSimplex.java
5312= org.apache.commons.math3.optimization.direct.NelderMeadSimplex:NelderMeadSimplex(int, double, double, double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/NelderMeadSimplex.java
5313= org.apache.commons.math3.optimization.direct.NelderMeadSimplex:NelderMeadSimplex(int, double, double, double, double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/NelderMeadSimplex.java
5314= org.apache.commons.math3.optimization.direct.NelderMeadSimplex:NelderMeadSimplex(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/NelderMeadSimplex.java
5315= org.apache.commons.math3.optimization.direct.NelderMeadSimplex:iterate(MultivariateFunction, Comparator<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/direct/NelderMeadSimplex.java
5316= org.apache.commons.math3.optimization.direct.NelderMeadSimplex:NelderMeadSimplex(int, double)	/src/main/java/org/apache/commons/math3/optimization/direct/NelderMeadSimplex.java
5317= org.apache.commons.math3.optimization.direct.NelderMeadSimplex:NelderMeadSimplex(double[][])	/src/main/java/org/apache/commons/math3/optimization/direct/NelderMeadSimplex.java
5318= org.apache.commons.math3.util.Decimal64:multiply(int)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5319= org.apache.commons.math3.util.Decimal64:sinh()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5320= org.apache.commons.math3.util.Decimal64:acos()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5321= org.apache.commons.math3.util.Decimal64:linearCombination(double, Decimal64, double, Decimal64, double, Decimal64, double, Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5322= org.apache.commons.math3.util.Decimal64:sin()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5323= org.apache.commons.math3.util.Decimal64:acosh()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5324= org.apache.commons.math3.util.Decimal64:linearCombination(Decimal64, Decimal64, Decimal64, Decimal64, Decimal64, Decimal64, Decimal64, Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5325= org.apache.commons.math3.util.Decimal64:subtract(Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5326= org.apache.commons.math3.util.Decimal64:remainder(double)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5327= org.apache.commons.math3.util.Decimal64:add(Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5328= org.apache.commons.math3.util.Decimal64:subtract(double)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5329= org.apache.commons.math3.util.Decimal64:log1p()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5330= org.apache.commons.math3.util.Decimal64:intValue()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5331= org.apache.commons.math3.util.Decimal64:getReal()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5332= org.apache.commons.math3.util.Decimal64:floor()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5333= org.apache.commons.math3.util.Decimal64:pow(double)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5334= org.apache.commons.math3.util.Decimal64:tan()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5335= org.apache.commons.math3.util.Decimal64:multiply(Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5336= org.apache.commons.math3.util.Decimal64:linearCombination(double, Decimal64, double, Decimal64, double, Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5337= org.apache.commons.math3.util.Decimal64:abs()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5338= org.apache.commons.math3.util.Decimal64:equals(Object)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5339= org.apache.commons.math3.util.Decimal64:asinh()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5340= org.apache.commons.math3.util.Decimal64:rint()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5341= org.apache.commons.math3.util.Decimal64:hypot(Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5342= org.apache.commons.math3.util.Decimal64:expm1()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5343= org.apache.commons.math3.util.Decimal64:signum()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5344= org.apache.commons.math3.util.Decimal64:linearCombination(double[], Decimal64[])	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5345= org.apache.commons.math3.util.Decimal64:compareTo(Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5346= org.apache.commons.math3.util.Decimal64:copySign(Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5347= org.apache.commons.math3.util.Decimal64:getField()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5348= org.apache.commons.math3.util.Decimal64:atanh()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5349= org.apache.commons.math3.util.Decimal64:longValue()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5350= org.apache.commons.math3.util.Decimal64:toString()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5351= org.apache.commons.math3.util.Decimal64:ceil()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5352= org.apache.commons.math3.util.Decimal64:doubleValue()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5353= org.apache.commons.math3.util.Decimal64:cbrt()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5354= org.apache.commons.math3.util.Decimal64:atan2(Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5355= org.apache.commons.math3.util.Decimal64:remainder(Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5356= org.apache.commons.math3.util.Decimal64:scalb(int)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5357= org.apache.commons.math3.util.Decimal64:log()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5358= org.apache.commons.math3.util.Decimal64:asin()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5359= org.apache.commons.math3.util.Decimal64:exp()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5360= org.apache.commons.math3.util.Decimal64:divide(Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5361= org.apache.commons.math3.util.Decimal64:log10()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5362= org.apache.commons.math3.util.Decimal64:negate()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5363= org.apache.commons.math3.util.Decimal64:reciprocal()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5364= org.apache.commons.math3.util.Decimal64:round()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5365= org.apache.commons.math3.util.Decimal64:linearCombination(Decimal64, Decimal64, Decimal64, Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5366= org.apache.commons.math3.util.Decimal64:<clinit0>	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5367= org.apache.commons.math3.util.Decimal64:cos()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5368= org.apache.commons.math3.util.Decimal64:floatValue()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5369= org.apache.commons.math3.util.Decimal64:pow(Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5370= org.apache.commons.math3.util.Decimal64:Decimal64(double)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5371= org.apache.commons.math3.util.Decimal64:sqrt()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5372= org.apache.commons.math3.util.Decimal64:isNaN()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5373= org.apache.commons.math3.util.Decimal64:rootN(int)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5374= org.apache.commons.math3.util.Decimal64:divide(double)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5375= org.apache.commons.math3.util.Decimal64:cosh()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5376= org.apache.commons.math3.util.Decimal64:tanh()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5377= org.apache.commons.math3.util.Decimal64:linearCombination(Decimal64[], Decimal64[])	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5378= org.apache.commons.math3.util.Decimal64:hashCode()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5379= org.apache.commons.math3.util.Decimal64:multiply(double)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5380= org.apache.commons.math3.util.Decimal64:copySign(double)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5381= org.apache.commons.math3.util.Decimal64:pow(int)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5382= org.apache.commons.math3.util.Decimal64:linearCombination(Decimal64, Decimal64, Decimal64, Decimal64, Decimal64, Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5383= org.apache.commons.math3.util.Decimal64:byteValue()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5384= org.apache.commons.math3.util.Decimal64:add(double)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5385= org.apache.commons.math3.util.Decimal64:shortValue()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5386= org.apache.commons.math3.util.Decimal64:linearCombination(double, Decimal64, double, Decimal64)	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5387= org.apache.commons.math3.util.Decimal64:isInfinite()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5388= org.apache.commons.math3.util.Decimal64:atan()	/src/main/java/org/apache/commons/math3/util/Decimal64.java
5389= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer:solve(RealMatrix, RealVector)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java
5390= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer:withDecomposition(Decomposition)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java
5391= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer.Decomposition:solve(RealMatrix, RealVector)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java
5392= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer:GaussNewtonOptimizer(Decomposition)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java
5393= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer:computeNormalMatrix(RealMatrix, RealVector)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java
5394= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer:toString()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java
5395= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer:GaussNewtonOptimizer()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java
5396= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer:getDecomposition()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java
5397= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer:optimize(LeastSquaresProblem)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java
5398= org.apache.commons.math3.analysis.integration.MidPointIntegrator:stage(int, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java
5399= org.apache.commons.math3.analysis.integration.MidPointIntegrator:MidPointIntegrator(int, int)	/src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java
5400= org.apache.commons.math3.analysis.integration.MidPointIntegrator:doIntegrate()	/src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java
5401= org.apache.commons.math3.analysis.integration.MidPointIntegrator:MidPointIntegrator()	/src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java
5402= org.apache.commons.math3.analysis.integration.MidPointIntegrator:MidPointIntegrator(double, double, int, int)	/src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java
5403= org.apache.commons.math3.ml.distance.EarthMoversDistance:compute(double[], double[])	/src/main/java/org/apache/commons/math3/ml/distance/EarthMoversDistance.java
5404= org.apache.commons.math3.genetics.RandomKeyMutation:mutate(Chromosome)	/src/main/java/org/apache/commons/math3/genetics/RandomKeyMutation.java
5405= org.apache.commons.math3.optim.PointVectorValuePairTest:testSerial()	/src/test/java/org/apache/commons/math3/optim/PointVectorValuePairTest.java
5406= org.apache.commons.math3.filter.DefaultProcessModel:getStateTransitionMatrix()	/src/main/java/org/apache/commons/math3/filter/DefaultProcessModel.java
5407= org.apache.commons.math3.filter.DefaultProcessModel:getInitialStateEstimate()	/src/main/java/org/apache/commons/math3/filter/DefaultProcessModel.java
5408= org.apache.commons.math3.filter.DefaultProcessModel:DefaultProcessModel(double[][], double[][], double[][])	/src/main/java/org/apache/commons/math3/filter/DefaultProcessModel.java
5409= org.apache.commons.math3.filter.DefaultProcessModel:getControlMatrix()	/src/main/java/org/apache/commons/math3/filter/DefaultProcessModel.java
5410= org.apache.commons.math3.filter.DefaultProcessModel:getInitialErrorCovariance()	/src/main/java/org/apache/commons/math3/filter/DefaultProcessModel.java
5411= org.apache.commons.math3.filter.DefaultProcessModel:DefaultProcessModel(double[][], double[][], double[][], double[], double[][])	/src/main/java/org/apache/commons/math3/filter/DefaultProcessModel.java
5412= org.apache.commons.math3.filter.DefaultProcessModel:DefaultProcessModel(RealMatrix, RealMatrix, RealMatrix, RealVector, RealMatrix)	/src/main/java/org/apache/commons/math3/filter/DefaultProcessModel.java
5413= org.apache.commons.math3.filter.DefaultProcessModel:getProcessNoise()	/src/main/java/org/apache/commons/math3/filter/DefaultProcessModel.java
5414= org.apache.commons.math3.optimization.BaseOptimizer:getMaxEvaluations()	/src/main/java/org/apache/commons/math3/optimization/BaseOptimizer.java
5415= org.apache.commons.math3.optimization.BaseOptimizer:getEvaluations()	/src/main/java/org/apache/commons/math3/optimization/BaseOptimizer.java
5416= org.apache.commons.math3.optimization.BaseOptimizer:getConvergenceChecker()	/src/main/java/org/apache/commons/math3/optimization/BaseOptimizer.java
5417= org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest:testSampler(double[][], int, double)	/src/test/java/org/apache/commons/math3/random/CorrelatedRandomVectorGeneratorTest.java
5418= org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest:testMath226()	/src/test/java/org/apache/commons/math3/random/CorrelatedRandomVectorGeneratorTest.java
5419= org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest:testSampleWithZeroCovariance()	/src/test/java/org/apache/commons/math3/random/CorrelatedRandomVectorGeneratorTest.java
5420= org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest:CorrelatedRandomVectorGeneratorTest()	/src/test/java/org/apache/commons/math3/random/CorrelatedRandomVectorGeneratorTest.java
5421= org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest:testMeanAndCovariance()	/src/test/java/org/apache/commons/math3/random/CorrelatedRandomVectorGeneratorTest.java
5422= org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest:testRank()	/src/test/java/org/apache/commons/math3/random/CorrelatedRandomVectorGeneratorTest.java
5423= org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest:testRootMatrix()	/src/test/java/org/apache/commons/math3/random/CorrelatedRandomVectorGeneratorTest.java
5424= org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest:createSampler(double[][])	/src/test/java/org/apache/commons/math3/random/CorrelatedRandomVectorGeneratorTest.java
5425= org.apache.commons.math3.special.Gamma:logGamma(double)	/src/main/java/org/apache/commons/math3/special/Gamma.java
5426= org.apache.commons.math3.special.Gamma:regularizedGammaP(double, double, double, int)	/src/main/java/org/apache/commons/math3/special/Gamma.java
5427= org.apache.commons.math3.special.Gamma:Gamma()	/src/main/java/org/apache/commons/math3/special/Gamma.java
5428= org.apache.commons.math3.special.Gamma:regularizedGammaP(double, double)	/src/main/java/org/apache/commons/math3/special/Gamma.java
5429= org.apache.commons.math3.special.Gamma:gamma(double)	/src/main/java/org/apache/commons/math3/special/Gamma.java
5430= org.apache.commons.math3.special.Gamma:invGamma1pm1(double)	/src/main/java/org/apache/commons/math3/special/Gamma.java
5431= org.apache.commons.math3.special.Gamma:digamma(double)	/src/main/java/org/apache/commons/math3/special/Gamma.java
5432= org.apache.commons.math3.special.Gamma:trigamma(double)	/src/main/java/org/apache/commons/math3/special/Gamma.java
5433= org.apache.commons.math3.special.Gamma:regularizedGammaQ(double, double, double, int)	/src/main/java/org/apache/commons/math3/special/Gamma.java
5434= org.apache.commons.math3.special.Gamma:logGamma1p(double)	/src/main/java/org/apache/commons/math3/special/Gamma.java
5435= org.apache.commons.math3.special.Gamma:getA(int, double)	/src/main/java/org/apache/commons/math3/special/Gamma.java
5436= org.apache.commons.math3.special.Gamma:lanczos(double)	/src/main/java/org/apache/commons/math3/special/Gamma.java
5437= org.apache.commons.math3.special.Gamma:regularizedGammaQ(double, double)	/src/main/java/org/apache/commons/math3/special/Gamma.java
5438= org.apache.commons.math3.special.Gamma:getB(int, double)	/src/main/java/org/apache/commons/math3/special/Gamma.java
5439= org.apache.commons.math3.analysis.differentiation.UnivariateVectorFunctionDifferentiator:differentiate(UnivariateVectorFunction)	/src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateVectorFunctionDifferentiator.java
5440= org.apache.commons.math3.analysis.function.Add:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Add.java
5441= org.apache.commons.math3.geometry.spherical.twod.Edge:getLength()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Edge.java
5442= org.apache.commons.math3.geometry.spherical.twod.Edge:addSubEdge(Vertex, Vertex, double, List<Edge>, Circle)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Edge.java
5443= org.apache.commons.math3.geometry.spherical.twod.Edge:Edge(Vertex, Vertex, double, Circle)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Edge.java
5444= org.apache.commons.math3.geometry.spherical.twod.Edge:setNextEdge(Edge)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Edge.java
5445= org.apache.commons.math3.geometry.spherical.twod.Edge:getPointAt(double)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Edge.java
5446= org.apache.commons.math3.geometry.spherical.twod.Edge:getStart()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Edge.java
5447= org.apache.commons.math3.geometry.spherical.twod.Edge:getCircle()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Edge.java
5448= org.apache.commons.math3.geometry.spherical.twod.Edge:split(Circle, List<Edge>, List<Edge>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Edge.java
5449= org.apache.commons.math3.geometry.spherical.twod.Edge:getEnd()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Edge.java
5450= org.apache.commons.math3.primes.SmallPrimes:smallTrialDivision(int, List<Integer>)	/src/main/java/org/apache/commons/math3/primes/SmallPrimes.java
5451= org.apache.commons.math3.primes.SmallPrimes:trialDivision(int)	/src/main/java/org/apache/commons/math3/primes/SmallPrimes.java
5452= org.apache.commons.math3.primes.SmallPrimes:millerRabinPrimeTest(int)	/src/main/java/org/apache/commons/math3/primes/SmallPrimes.java
5453= org.apache.commons.math3.primes.SmallPrimes:SmallPrimes()	/src/main/java/org/apache/commons/math3/primes/SmallPrimes.java
5454= org.apache.commons.math3.primes.SmallPrimes:boundedTrialDivision(int, int, List<Integer>)	/src/main/java/org/apache/commons/math3/primes/SmallPrimes.java
5455= org.apache.commons.math3.util.ArithmeticUtils:pow(BigInteger, int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5456= org.apache.commons.math3.util.ArithmeticUtils:isPowerOfTwo(long)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5457= org.apache.commons.math3.util.ArithmeticUtils:mulAndCheck(long, long)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5458= org.apache.commons.math3.util.ArithmeticUtils:gcd(int, int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5459= org.apache.commons.math3.util.ArithmeticUtils:factorialDouble(int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5460= org.apache.commons.math3.util.ArithmeticUtils:stirlingS2(int, int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5461= org.apache.commons.math3.util.ArithmeticUtils:addAndCheck(long, long, Localizable)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5462= org.apache.commons.math3.util.ArithmeticUtils:factorial(int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5463= org.apache.commons.math3.util.ArithmeticUtils:factorialLog(int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5464= org.apache.commons.math3.util.ArithmeticUtils:binomialCoefficientDouble(int, int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5465= org.apache.commons.math3.util.ArithmeticUtils:addAndCheck(int, int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5466= org.apache.commons.math3.util.ArithmeticUtils:lcm(int, int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5467= org.apache.commons.math3.util.ArithmeticUtils:subAndCheck(int, int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5468= org.apache.commons.math3.util.ArithmeticUtils:pow(BigInteger, BigInteger)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5469= org.apache.commons.math3.util.ArithmeticUtils:pow(long, int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5470= org.apache.commons.math3.util.ArithmeticUtils:pow(long, long)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5471= org.apache.commons.math3.util.ArithmeticUtils:gcd(long, long)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5472= org.apache.commons.math3.util.ArithmeticUtils:mulAndCheck(int, int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5473= org.apache.commons.math3.util.ArithmeticUtils:gcdPositive(int, int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5474= org.apache.commons.math3.util.ArithmeticUtils:pow(int, int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5475= org.apache.commons.math3.util.ArithmeticUtils:ArithmeticUtils()	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5476= org.apache.commons.math3.util.ArithmeticUtils:pow(int, long)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5477= org.apache.commons.math3.util.ArithmeticUtils:addAndCheck(long, long)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5478= org.apache.commons.math3.util.ArithmeticUtils:lcm(long, long)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5479= org.apache.commons.math3.util.ArithmeticUtils:binomialCoefficientLog(int, int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5480= org.apache.commons.math3.util.ArithmeticUtils:subAndCheck(long, long)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5481= org.apache.commons.math3.util.ArithmeticUtils:binomialCoefficient(int, int)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5482= org.apache.commons.math3.util.ArithmeticUtils:pow(BigInteger, long)	/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
5483= org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer:AdamsNordsieckTransformer(int)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsNordsieckTransformer.java
5484= org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer:initializeHighOrderDerivatives(double, double[], double[][], double[][])	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsNordsieckTransformer.java
5485= org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer:updateHighOrderDerivativesPhase1(Array2DRowRealMatrix)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsNordsieckTransformer.java
5486= org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer:updateHighOrderDerivativesPhase2(double[], double[], Array2DRowRealMatrix)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsNordsieckTransformer.java
5487= org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer:buildP(int)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsNordsieckTransformer.java
5488= org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer:getInstance(int)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsNordsieckTransformer.java
5489= org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer:getNSteps()	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsNordsieckTransformer.java
5490= org.apache.commons.math3.ml.neuralnet.NetworkTest:testGetFeaturesSize()	/src/test/java/org/apache/commons/math3/ml/neuralnet/NetworkTest.java
5491= org.apache.commons.math3.ml.neuralnet.NetworkTest:testDeleteLink()	/src/test/java/org/apache/commons/math3/ml/neuralnet/NetworkTest.java
5492= org.apache.commons.math3.ml.neuralnet.NetworkTest:testSerialize()	/src/test/java/org/apache/commons/math3/ml/neuralnet/NetworkTest.java
5493= org.apache.commons.math3.ml.neuralnet.NetworkTest:testDeleteNeuron()	/src/test/java/org/apache/commons/math3/ml/neuralnet/NetworkTest.java
5494= org.apache.commons.math3.ml.neuralnet.NetworkTest:testIterationOrder()	/src/test/java/org/apache/commons/math3/ml/neuralnet/NetworkTest.java
5495= org.apache.commons.math3.analysis.function.Atan2:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Atan2.java
5496= org.apache.commons.math3.analysis.function.Inverse:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Inverse.java
5497= org.apache.commons.math3.analysis.function.Inverse:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Inverse.java
5498= org.apache.commons.math3.analysis.function.Inverse:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Inverse.java
5499= org.apache.commons.math3.random.NormalizedRandomGenerator:nextNormalizedDouble()	/src/main/java/org/apache/commons/math3/random/NormalizedRandomGenerator.java
5500= org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution:cdfExact(double)	/src/main/java/org/apache/commons/math3/distribution/KolmogorovSmirnovDistribution.java
5501= org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution:cdf(double)	/src/main/java/org/apache/commons/math3/distribution/KolmogorovSmirnovDistribution.java
5502= org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution:exactK(double)	/src/main/java/org/apache/commons/math3/distribution/KolmogorovSmirnovDistribution.java
5503= org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution:roundedK(double)	/src/main/java/org/apache/commons/math3/distribution/KolmogorovSmirnovDistribution.java
5504= org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution:cdf(double, boolean)	/src/main/java/org/apache/commons/math3/distribution/KolmogorovSmirnovDistribution.java
5505= org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution:createH(double)	/src/main/java/org/apache/commons/math3/distribution/KolmogorovSmirnovDistribution.java
5506= org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution:KolmogorovSmirnovDistribution(int)	/src/main/java/org/apache/commons/math3/distribution/KolmogorovSmirnovDistribution.java
5507= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:vmove(int, int)	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5508= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:getPartialCorrelations(int)	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5509= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:smartAdd(double, double)	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5510= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:include(double[], double, double)	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5511= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:regress(int)	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5512= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:MillerUpdatingRegression(int, boolean, double)	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5513= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:regcf(int)	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5514= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:ss()	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5515= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:regress(int[])	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5516= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:tolset()	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5517= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:MillerUpdatingRegression(int, boolean)	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5518= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:hasIntercept()	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5519= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:reorderRegressors(int[], int)	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5520= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:addObservation(double[], double)	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5521= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:MillerUpdatingRegression()	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5522= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:addObservations(double[][], double[])	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5523= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:cov(int)	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5524= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:clear()	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5525= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:regress()	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5526= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:getDiagonalOfHatMatrix(double[])	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5527= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:getN()	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5528= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:inverse(double[], int)	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5529= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:singcheck()	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5530= org.apache.commons.math3.stat.regression.MillerUpdatingRegression:getOrderOfRegressors()	/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
5531= org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer:computeObjectiveGradient(double[])	/src/main/java/org/apache/commons/math3/optimization/general/AbstractDifferentiableOptimizer.java
5532= org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer:AbstractDifferentiableOptimizer(ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/general/AbstractDifferentiableOptimizer.java
5533= org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer:optimizeInternal(int, MultivariateDifferentiableFunction, GoalType, OptimizationData)	/src/main/java/org/apache/commons/math3/optimization/general/AbstractDifferentiableOptimizer.java
5534= org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer:optimizeInternal(int, MultivariateDifferentiableFunction, GoalType, double[])	/src/main/java/org/apache/commons/math3/optimization/general/AbstractDifferentiableOptimizer.java
5535= org.apache.commons.math3.distribution.BinomialDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
5536= org.apache.commons.math3.distribution.BinomialDistribution:logProbability(int)	/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
5537= org.apache.commons.math3.distribution.BinomialDistribution:cumulativeProbability(int)	/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
5538= org.apache.commons.math3.distribution.BinomialDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
5539= org.apache.commons.math3.distribution.BinomialDistribution:probability(int)	/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
5540= org.apache.commons.math3.distribution.BinomialDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
5541= org.apache.commons.math3.distribution.BinomialDistribution:BinomialDistribution(int, double)	/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
5542= org.apache.commons.math3.distribution.BinomialDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
5543= org.apache.commons.math3.distribution.BinomialDistribution:BinomialDistribution(RandomGenerator, int, double)	/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
5544= org.apache.commons.math3.distribution.BinomialDistribution:getProbabilityOfSuccess()	/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
5545= org.apache.commons.math3.distribution.BinomialDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
5546= org.apache.commons.math3.distribution.BinomialDistribution:getNumberOfTrials()	/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
5547= org.apache.commons.math3.optimization.BaseMultivariateSimpleBoundsOptimizer:optimize(int, FUNC, GoalType, double[], double[], double[])	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateSimpleBoundsOptimizer.java
5548= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:DescriptiveStatistics(double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5549= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:setSkewnessImpl(UnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5550= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getValues()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5551= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5552= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:DescriptiveStatistics(int)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5553= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getSumsqImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5554= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:setSumImpl(UnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5555= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getElement(int)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5556= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:copy(DescriptiveStatistics, DescriptiveStatistics)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5557= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getKurtosis()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5558= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5559= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:setVarianceImpl(UnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5560= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:DescriptiveStatistics()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5561= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getSkewnessImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5562= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:setMeanImpl(UnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5563= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:setPercentileImpl(UnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5564= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getWindowSize()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5565= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getSortedValues()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5566= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getStandardDeviation()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5567= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:removeMostRecentValue()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5568= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getMin()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5569= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:setMinImpl(UnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5570= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getVarianceImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5571= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getPopulationVariance()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5572= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:setMaxImpl(UnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5573= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:setSumsqImpl(UnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5574= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getSkewness()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5575= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getMeanImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5576= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getSum()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5577= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:toString()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5578= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:setGeometricMeanImpl(UnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5579= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:replaceMostRecentValue(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5580= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getMax()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5581= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getPercentileImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5582= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5583= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:setKurtosisImpl(UnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5584= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getGeometricMeanImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5585= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getPercentile(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5586= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getGeometricMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5587= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:addValue(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5588= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:setWindowSize(int)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5589= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getVariance()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5590= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getMaxImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5591= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5592= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getMinImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5593= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getSumImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5594= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getSumsq()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5595= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:getKurtosisImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5596= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:apply(UnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5597= org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:DescriptiveStatistics(DescriptiveStatistics)	/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
5598= org.apache.commons.math3.analysis.interpolation.LoessInterpolator:nextNonzero(double[], int)	/src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java
5599= org.apache.commons.math3.analysis.interpolation.LoessInterpolator:checkAllFiniteReal(double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java
5600= org.apache.commons.math3.analysis.interpolation.LoessInterpolator:smooth(double[], double[], double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java
5601= org.apache.commons.math3.analysis.interpolation.LoessInterpolator:LoessInterpolator(double, int)	/src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java
5602= org.apache.commons.math3.analysis.interpolation.LoessInterpolator:smooth(double[], double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java
5603= org.apache.commons.math3.analysis.interpolation.LoessInterpolator:interpolate(double[], double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java
5604= org.apache.commons.math3.analysis.interpolation.LoessInterpolator:LoessInterpolator()	/src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java
5605= org.apache.commons.math3.analysis.interpolation.LoessInterpolator:LoessInterpolator(double, int, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java
5606= org.apache.commons.math3.analysis.interpolation.LoessInterpolator:tricube(double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java
5607= org.apache.commons.math3.analysis.interpolation.LoessInterpolator:updateBandwidthInterval(double[], double[], int, int[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java
5608= org.apache.commons.math3.optim.linear.LinearConstraintSet:getConstraints()	/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraintSet.java
5609= org.apache.commons.math3.optim.linear.LinearConstraintSet:LinearConstraintSet(LinearConstraint)	/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraintSet.java
5610= org.apache.commons.math3.optim.linear.LinearConstraintSet:LinearConstraintSet(Collection<LinearConstraint>)	/src/main/java/org/apache/commons/math3/optim/linear/LinearConstraintSet.java
5611= org.apache.commons.math3.genetics.Population:getFittestChromosome()	/src/main/java/org/apache/commons/math3/genetics/Population.java
5612= org.apache.commons.math3.genetics.Population:getPopulationLimit()	/src/main/java/org/apache/commons/math3/genetics/Population.java
5613= org.apache.commons.math3.genetics.Population:getPopulationSize()	/src/main/java/org/apache/commons/math3/genetics/Population.java
5614= org.apache.commons.math3.genetics.Population:nextGeneration()	/src/main/java/org/apache/commons/math3/genetics/Population.java
5615= org.apache.commons.math3.genetics.Population:addChromosome(Chromosome)	/src/main/java/org/apache/commons/math3/genetics/Population.java
5616= org.apache.commons.math3.linear.FieldVectorPreservingVisitor:start(int, int, int)	/src/main/java/org/apache/commons/math3/linear/FieldVectorPreservingVisitor.java
5617= org.apache.commons.math3.linear.FieldVectorPreservingVisitor:visit(int, T)	/src/main/java/org/apache/commons/math3/linear/FieldVectorPreservingVisitor.java
5618= org.apache.commons.math3.linear.FieldVectorPreservingVisitor:end()	/src/main/java/org/apache/commons/math3/linear/FieldVectorPreservingVisitor.java
5619= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:altmov(int, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
5620= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:printState(int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
5621= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:printMethod()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
5622= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:trsbox(double, ArrayRealVector, ArrayRealVector, ArrayRealVector, ArrayRealVector, ArrayRealVector)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
5623= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:BOBYQAOptimizer(int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
5624= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:PathIsExploredException()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
5625= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
5626= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:setup(double[], double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
5627= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:BOBYQAOptimizer(int, double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
5628= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.PathIsExploredException:PathIsExploredException()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
5629= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:bobyqb(double[], double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
5630= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:caller(int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
5631= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:update(double, double, int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
5632= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:bobyqa(double[], double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
5633= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:prelim(double[], double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
5634= org.apache.commons.math3.random.RandomGeneratorFactory:nextFloat()	/src/main/java/org/apache/commons/math3/random/RandomGeneratorFactory.java
5635= org.apache.commons.math3.random.RandomGeneratorFactory:convertToLong(int[])	/src/main/java/org/apache/commons/math3/random/RandomGeneratorFactory.java
5636= org.apache.commons.math3.random.RandomGeneratorFactory:nextBytes(byte[])	/src/main/java/org/apache/commons/math3/random/RandomGeneratorFactory.java
5637= org.apache.commons.math3.random.RandomGeneratorFactory:setSeed(int)	/src/main/java/org/apache/commons/math3/random/RandomGeneratorFactory.java
5638= org.apache.commons.math3.random.RandomGeneratorFactory:RandomGeneratorFactory()	/src/main/java/org/apache/commons/math3/random/RandomGeneratorFactory.java
5639= org.apache.commons.math3.random.RandomGeneratorFactory:setSeed(int[])	/src/main/java/org/apache/commons/math3/random/RandomGeneratorFactory.java
5640= org.apache.commons.math3.random.RandomGeneratorFactory:nextLong()	/src/main/java/org/apache/commons/math3/random/RandomGeneratorFactory.java
5641= org.apache.commons.math3.random.RandomGeneratorFactory:setSeed(long)	/src/main/java/org/apache/commons/math3/random/RandomGeneratorFactory.java
5642= org.apache.commons.math3.random.RandomGeneratorFactory:nextDouble()	/src/main/java/org/apache/commons/math3/random/RandomGeneratorFactory.java
5643= org.apache.commons.math3.random.RandomGeneratorFactory:nextGaussian()	/src/main/java/org/apache/commons/math3/random/RandomGeneratorFactory.java
5644= org.apache.commons.math3.random.RandomGeneratorFactory:nextInt()	/src/main/java/org/apache/commons/math3/random/RandomGeneratorFactory.java
5645= org.apache.commons.math3.random.RandomGeneratorFactory:createRandomGenerator(Random)	/src/main/java/org/apache/commons/math3/random/RandomGeneratorFactory.java
5646= org.apache.commons.math3.random.RandomGeneratorFactory:nextInt(int)	/src/main/java/org/apache/commons/math3/random/RandomGeneratorFactory.java
5647= org.apache.commons.math3.random.RandomGeneratorFactory:nextBoolean()	/src/main/java/org/apache/commons/math3/random/RandomGeneratorFactory.java
5648= org.apache.commons.math3.stat.StatUtilsTest:testSumLog()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5649= org.apache.commons.math3.stat.StatUtilsTest:testMin()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5650= org.apache.commons.math3.stat.StatUtilsTest:testVariance()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5651= org.apache.commons.math3.stat.StatUtilsTest:testStats()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5652= org.apache.commons.math3.stat.StatUtilsTest:testArrayIndexConditions()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5653= org.apache.commons.math3.stat.StatUtilsTest:testDifferenceStats()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5654= org.apache.commons.math3.stat.StatUtilsTest:testProduct()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5655= org.apache.commons.math3.stat.StatUtilsTest:testNormalize1()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5656= org.apache.commons.math3.stat.StatUtilsTest:testNormalize2()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5657= org.apache.commons.math3.stat.StatUtilsTest:testGeometricMean()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5658= org.apache.commons.math3.stat.StatUtilsTest:testSumSq()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5659= org.apache.commons.math3.stat.StatUtilsTest:testMode()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5660= org.apache.commons.math3.stat.StatUtilsTest:testMax()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5661= org.apache.commons.math3.stat.StatUtilsTest:testN0andN1Conditions()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5662= org.apache.commons.math3.stat.StatUtilsTest:testPopulationVariance()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5663= org.apache.commons.math3.stat.StatUtilsTest:testMean()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5664= org.apache.commons.math3.stat.StatUtilsTest:testPercentile()	/src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java
5665= org.apache.commons.math3.fraction.FractionField:getOne()	/src/main/java/org/apache/commons/math3/fraction/FractionField.java
5666= org.apache.commons.math3.fraction.FractionField:getInstance()	/src/main/java/org/apache/commons/math3/fraction/FractionField.java
5667= org.apache.commons.math3.fraction.FractionField:getRuntimeClass()	/src/main/java/org/apache/commons/math3/fraction/FractionField.java
5668= org.apache.commons.math3.fraction.FractionField:readResolve()	/src/main/java/org/apache/commons/math3/fraction/FractionField.java
5669= org.apache.commons.math3.fraction.FractionField:getZero()	/src/main/java/org/apache/commons/math3/fraction/FractionField.java
5670= org.apache.commons.math3.fraction.FractionField:FractionField()	/src/main/java/org/apache/commons/math3/fraction/FractionField.java
5671= org.apache.commons.math3.geometry.partitioning.AbstractRegion:isEmpty()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5672= org.apache.commons.math3.geometry.partitioning.AbstractRegion:checkPoint(BSPTree<S>, Point<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5673= org.apache.commons.math3.geometry.partitioning.AbstractRegion:visitInternalNode(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5674= org.apache.commons.math3.geometry.partitioning.AbstractRegion:getSize()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5675= org.apache.commons.math3.geometry.partitioning.AbstractRegion:AbstractRegion(double)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5676= org.apache.commons.math3.geometry.partitioning.AbstractRegion:isFull()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5677= org.apache.commons.math3.geometry.partitioning.AbstractRegion:characterize(BSPTree<S>, SubHyperplane<S>, SubHyperplane<S>[])	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5678= org.apache.commons.math3.geometry.partitioning.AbstractRegion:minusFound()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5679= org.apache.commons.math3.geometry.partitioning.AbstractRegion:setBarycenter(Vector<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5680= org.apache.commons.math3.geometry.partitioning.AbstractRegion.Sides:Sides()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5681= org.apache.commons.math3.geometry.partitioning.AbstractRegion:visitOrder(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5682= org.apache.commons.math3.geometry.partitioning.AbstractRegion.Sides:rememberPlusFound()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5683= org.apache.commons.math3.geometry.partitioning.AbstractRegion:copySelf()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5684= org.apache.commons.math3.geometry.partitioning.AbstractRegion.BoundaryBuilder:visitOrder(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5685= org.apache.commons.math3.geometry.partitioning.AbstractRegion:Sides()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5686= org.apache.commons.math3.geometry.partitioning.AbstractRegion:intersection(SubHyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5687= org.apache.commons.math3.geometry.partitioning.AbstractRegion:recurseTransform(BSPTree<S>, Transform<S,T>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5688= org.apache.commons.math3.geometry.partitioning.AbstractRegion:checkPoint(Vector<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5689= org.apache.commons.math3.geometry.partitioning.AbstractRegion.Sides:rememberMinusFound()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5690= org.apache.commons.math3.geometry.partitioning.AbstractRegion:AbstractRegion(BSPTree<S>, double)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5691= org.apache.commons.math3.geometry.partitioning.AbstractRegion.Sides:minusFound()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5692= org.apache.commons.math3.geometry.partitioning.AbstractRegion:isFull(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5693= org.apache.commons.math3.geometry.partitioning.AbstractRegion:recurseSides(BSPTree<S>, SubHyperplane<S>, Sides)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5694= org.apache.commons.math3.geometry.partitioning.AbstractRegion:plusFound()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5695= org.apache.commons.math3.geometry.partitioning.AbstractRegion:applyTransform(Transform<S,T>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5696= org.apache.commons.math3.geometry.partitioning.AbstractRegion.Sides:plusFound()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5697= org.apache.commons.math3.geometry.partitioning.AbstractRegion:checkPoint(BSPTree<S>, Vector<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5698= org.apache.commons.math3.geometry.partitioning.AbstractRegion:getTolerance()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5699= org.apache.commons.math3.geometry.partitioning.AbstractRegion:checkPoint(Point<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5700= org.apache.commons.math3.geometry.partitioning.AbstractRegion:contains(Region<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5701= org.apache.commons.math3.geometry.partitioning.AbstractRegion:rememberPlusFound()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5702= org.apache.commons.math3.geometry.partitioning.AbstractRegion:setSize(double)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5703= org.apache.commons.math3.geometry.partitioning.AbstractRegion:visitLeafNode(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5704= org.apache.commons.math3.geometry.partitioning.AbstractRegion:insertCuts(BSPTree<S>, Collection<SubHyperplane<S>>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5705= org.apache.commons.math3.geometry.partitioning.AbstractRegion:side(Hyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5706= org.apache.commons.math3.geometry.partitioning.AbstractRegion:projectToBoundary(Point<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5707= org.apache.commons.math3.geometry.partitioning.AbstractRegion:getTree(boolean)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5708= org.apache.commons.math3.geometry.partitioning.AbstractRegion:rememberMinusFound()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5709= org.apache.commons.math3.geometry.partitioning.AbstractRegion:isEmpty(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5710= org.apache.commons.math3.geometry.partitioning.AbstractRegion:recurseIntersection(BSPTree<S>, SubHyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5711= org.apache.commons.math3.geometry.partitioning.AbstractRegion:buildNew(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5712= org.apache.commons.math3.geometry.partitioning.AbstractRegion.BoundaryBuilder:visitInternalNode(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5713= org.apache.commons.math3.geometry.partitioning.AbstractRegion:AbstractRegion(Collection<SubHyperplane<S>>, double)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5714= org.apache.commons.math3.geometry.partitioning.AbstractRegion:setBarycenter(Point<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5715= org.apache.commons.math3.geometry.partitioning.AbstractRegion:compare(SubHyperplane<S>, SubHyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5716= org.apache.commons.math3.geometry.partitioning.AbstractRegion:getBoundarySize()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5717= org.apache.commons.math3.geometry.partitioning.AbstractRegion.BoundaryBuilder:visitLeafNode(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5718= org.apache.commons.math3.geometry.partitioning.AbstractRegion:getBarycenter()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5719= org.apache.commons.math3.geometry.partitioning.AbstractRegion:AbstractRegion(Hyperplane<S>[], double)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5720= org.apache.commons.math3.geometry.partitioning.AbstractRegion.BoundaryBuilder:characterize(BSPTree<S>, SubHyperplane<S>, SubHyperplane<S>[])	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5721= org.apache.commons.math3.geometry.partitioning.AbstractRegion:computeGeometricalProperties()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
5722= org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver:computeObjectiveValueAndDerivative(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java
5723= org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver:AbstractUnivariateDifferentiableSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java
5724= org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver:setup(int, UnivariateDifferentiableFunction, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java
5725= org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver:AbstractUnivariateDifferentiableSolver(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java
5726= org.apache.commons.math3.linear.IterativeLinearSolver:getIterationManager()	/src/main/java/org/apache/commons/math3/linear/IterativeLinearSolver.java
5727= org.apache.commons.math3.linear.IterativeLinearSolver:solve(RealLinearOperator, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/IterativeLinearSolver.java
5728= org.apache.commons.math3.linear.IterativeLinearSolver:IterativeLinearSolver(IterationManager)	/src/main/java/org/apache/commons/math3/linear/IterativeLinearSolver.java
5729= org.apache.commons.math3.linear.IterativeLinearSolver:IterativeLinearSolver(int)	/src/main/java/org/apache/commons/math3/linear/IterativeLinearSolver.java
5730= org.apache.commons.math3.linear.IterativeLinearSolver:solveInPlace(RealLinearOperator, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/IterativeLinearSolver.java
5731= org.apache.commons.math3.linear.IterativeLinearSolver:checkParameters(RealLinearOperator, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/IterativeLinearSolver.java
5732= org.apache.commons.math3.linear.IterativeLinearSolver:solve(RealLinearOperator, RealVector)	/src/main/java/org/apache/commons/math3/linear/IterativeLinearSolver.java
5733= org.apache.commons.math3.linear.IterativeLinearSolverEvent:getSolution()	/src/main/java/org/apache/commons/math3/linear/IterativeLinearSolverEvent.java
5734= org.apache.commons.math3.linear.IterativeLinearSolverEvent:getResidual()	/src/main/java/org/apache/commons/math3/linear/IterativeLinearSolverEvent.java
5735= org.apache.commons.math3.linear.IterativeLinearSolverEvent:IterativeLinearSolverEvent(Object, int)	/src/main/java/org/apache/commons/math3/linear/IterativeLinearSolverEvent.java
5736= org.apache.commons.math3.linear.IterativeLinearSolverEvent:getRightHandSideVector()	/src/main/java/org/apache/commons/math3/linear/IterativeLinearSolverEvent.java
5737= org.apache.commons.math3.linear.IterativeLinearSolverEvent:getNormOfResidual()	/src/main/java/org/apache/commons/math3/linear/IterativeLinearSolverEvent.java
5738= org.apache.commons.math3.linear.IterativeLinearSolverEvent:providesResidual()	/src/main/java/org/apache/commons/math3/linear/IterativeLinearSolverEvent.java
5739= org.apache.commons.math3.userguide.ExampleUtils:actionPerformed(ActionEvent)	/src/userguide/java/org/apache/commons/math3/userguide/ExampleUtils.java
5740= org.apache.commons.math3.userguide.ExampleUtils:run()	/src/userguide/java/org/apache/commons/math3/userguide/ExampleUtils.java
5741= org.apache.commons.math3.userguide.ExampleUtils.ExampleFrame:getMainPanel()	/src/userguide/java/org/apache/commons/math3/userguide/ExampleUtils.java
5742= org.apache.commons.math3.userguide.ExampleUtils:getScreenShot(Component)	/src/userguide/java/org/apache/commons/math3/userguide/ExampleUtils.java
5743= org.apache.commons.math3.userguide.ExampleUtils:getMainPanel()	/src/userguide/java/org/apache/commons/math3/userguide/ExampleUtils.java
5744= org.apache.commons.math3.userguide.ExampleUtils:showExampleFrame(ExampleFrame)	/src/userguide/java/org/apache/commons/math3/userguide/ExampleUtils.java
5745= org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:BOBYQAOptimizer(int, double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
5746= org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.PathIsExploredException:PathIsExploredException()	/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
5747= org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:trsbox(double, ArrayRealVector, ArrayRealVector, ArrayRealVector, ArrayRealVector, ArrayRealVector)	/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
5748= org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:setup(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
5749= org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:prelim(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
5750= org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:update(double, double, int)	/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
5751= org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:PathIsExploredException()	/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
5752= org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:BOBYQAOptimizer(int)	/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
5753= org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
5754= org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:caller(int)	/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
5755= org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:altmov(int, double)	/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
5756= org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:bobyqa(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
5757= org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:printState(int)	/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
5758= org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:bobyqb(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
5759= org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:printMethod()	/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
5760= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MinpackFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5761= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.LinearRank1ZeroColsAndRowsFunction:LinearRank1ZeroColsAndRowsFunction(int, int, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5762= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.LinearRank1ZeroColsAndRowsFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5763= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.KowalikOsborneFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5764= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MeyerFunction:MeyerFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5765= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.Osborne2Function:Osborne2Function(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5766= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackMeyer()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5767= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.ChebyquadFunction:buildChebyquadArray(int, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5768= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackPowellSingular()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5769= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.WatsonFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5770= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MinpackFunction:buildArray(int, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5771= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5772= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.RosenbrockFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5773= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.Osborne1Function:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5774= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.BardFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5775= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5776= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MinpackFunction:getModelFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5777= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.BrownAlmostLinearFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5778= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5779= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:Box3DimensionalFunction(int, double[], double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5780= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackChebyquad()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5781= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.BardFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5782= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.FreudensteinRothFunction:FreudensteinRothFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5783= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:checkTheoreticalMinCost(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5784= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:checkTheoreticalMinParams(PointVectorValuePair)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5785= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.LinearRank1Function:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5786= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MinpackFunction:getN()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5787= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.JennrichSampsonFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5788= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackOsborne1()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5789= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.FreudensteinRothFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5790= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:LinearRank1Function(int, int, double, double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5791= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:MeyerFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5792= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.WatsonFunction:WatsonFunction(int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5793= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackBard()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5794= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:PowellSingularFunction(double[], double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5795= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.PowellSingularFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5796= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackKowalikOsborne()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5797= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:getStartPoint()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5798= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.KowalikOsborneFunction:KowalikOsborneFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5799= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:KowalikOsborneFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5800= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.Osborne1Function:Osborne1Function(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5801= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackJennrichSampson()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5802= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.LinearRank1Function:LinearRank1Function(int, int, double, double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5803= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MeyerFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5804= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.JennrichSampsonFunction:JennrichSampsonFunction(int, double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5805= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:buildChebyquadArray(int, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5806= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.RosenbrockFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5807= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:getTarget()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5808= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:WatsonFunction(int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5809= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MinpackFunction:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5810= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.LinearFullRankFunction:LinearFullRankFunction(int, int, double, double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5811= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackLinearRank1()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5812= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:LinearRank1ZeroColsAndRowsFunction(int, int, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5813= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackBrownAlmostLinear()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5814= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MinpackFunction:checkTheoreticalMinParams(PointVectorValuePair)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5815= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.Box3DimensionalFunction:Box3DimensionalFunction(int, double[], double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5816= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:MinpackFunction(int, double[], double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5817= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackFreudensteinRoth()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5818= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:BrownAlmostLinearFunction(int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5819= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.BrownDennisFunction:BrownDennisFunction(int, double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5820= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.WatsonFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5821= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.Box3DimensionalFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5822= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.BrownAlmostLinearFunction:BrownAlmostLinearFunction(int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5823= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:RosenbrockFunction(double[], double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5824= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.Osborne2Function:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5825= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.BardFunction:BardFunction(double, double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5826= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.Osborne1Function:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5827= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:BardFunction(double, double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5828= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.JennrichSampsonFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5829= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MinpackFunction:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5830= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:setCostAccuracy(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5831= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.PowellSingularFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5832= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:buildArray(int, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5833= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.Osborne2Function:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5834= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.LinearRank1ZeroColsAndRowsFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5835= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:LinearFullRankFunction(int, int, double, double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5836= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:getModelFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5837= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:HelicalValleyFunction(double[], double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5838= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.FreudensteinRothFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5839= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:getWeight()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5840= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.HelicalValleyFunction:HelicalValleyFunction(double[], double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5841= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.ChebyquadFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5842= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MinpackFunction:setCostAccuracy(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5843= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:getN()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5844= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.KowalikOsborneFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5845= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackBox3Dimensional()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5846= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MinpackFunction:getWeight()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5847= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.ChebyquadFunction:ChebyquadFunction(int, int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5848= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.HelicalValleyFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5849= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5850= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.LinearFullRankFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5851= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.RosenbrockFunction:RosenbrockFunction(double[], double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5852= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:FreudensteinRothFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5853= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:JennrichSampsonFunction(int, double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5854= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:ChebyquadFunction(int, int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5855= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.ChebyquadFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5856= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackRosenbrok()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5857= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:setParamsAccuracy(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5858= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackLinearFullRank()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5859= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:BrownDennisFunction(int, double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5860= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.Box3DimensionalFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5861= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MinpackFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5862= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackHelicalValley()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5863= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackWatson()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5864= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MinpackFunction:MinpackFunction(int, double[], double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5865= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackLinearRank1ZeroColsAndRows()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5866= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MinpackFunction:getStartPoint()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5867= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.HelicalValleyFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5868= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:Osborne2Function(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5869= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MinpackFunction:getTarget()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5870= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MinpackFunction:checkTheoreticalMinCost(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5871= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MeyerFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5872= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.BrownDennisFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5873= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.BrownAlmostLinearFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5874= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.PowellSingularFunction:PowellSingularFunction(double[], double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5875= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.BrownDennisFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5876= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.LinearRank1Function:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5877= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.MinpackFunction:setParamsAccuracy(double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5878= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackBrownDennis()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5879= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:testMinpackOsborne2()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5880= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:Osborne1Function(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5881= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.LinearFullRankFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5882= org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest:minpackTest(MinpackFunction, boolean)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/MinpackTest.java
5883= org.apache.commons.math3.exception.MathIllegalArgumentException:getMessage()	/src/main/java/org/apache/commons/math3/exception/MathIllegalArgumentException.java
5884= org.apache.commons.math3.exception.MathIllegalArgumentException:getContext()	/src/main/java/org/apache/commons/math3/exception/MathIllegalArgumentException.java
5885= org.apache.commons.math3.exception.MathIllegalArgumentException:getLocalizedMessage()	/src/main/java/org/apache/commons/math3/exception/MathIllegalArgumentException.java
5886= org.apache.commons.math3.exception.MathIllegalArgumentException:MathIllegalArgumentException(Localizable, Object)	/src/main/java/org/apache/commons/math3/exception/MathIllegalArgumentException.java
5887= org.apache.commons.math3.geometry.Vector:isInfinite()	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5888= org.apache.commons.math3.geometry.Vector:subtract(Vector<S>)	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5889= org.apache.commons.math3.geometry.Vector:add(Vector<S>)	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5890= org.apache.commons.math3.geometry.Vector:getNormInf()	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5891= org.apache.commons.math3.geometry.Vector:distance(Vector<S>)	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5892= org.apache.commons.math3.geometry.Vector:toString(NumberFormat)	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5893= org.apache.commons.math3.geometry.Vector:dotProduct(Vector<S>)	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5894= org.apache.commons.math3.geometry.Vector:getZero()	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5895= org.apache.commons.math3.geometry.Vector:subtract(double, Vector<S>)	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5896= org.apache.commons.math3.geometry.Vector:scalarMultiply(double)	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5897= org.apache.commons.math3.geometry.Vector:getNorm1()	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5898= org.apache.commons.math3.geometry.Vector:distanceInf(Vector<S>)	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5899= org.apache.commons.math3.geometry.Vector:getNorm()	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5900= org.apache.commons.math3.geometry.Vector:distance1(Vector<S>)	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5901= org.apache.commons.math3.geometry.Vector:normalize()	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5902= org.apache.commons.math3.geometry.Vector:getNormSq()	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5903= org.apache.commons.math3.geometry.Vector:add(double, Vector<S>)	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5904= org.apache.commons.math3.geometry.Vector:negate()	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5905= org.apache.commons.math3.geometry.Vector:distanceSq(Vector<S>)	/src/main/java/org/apache/commons/math3/geometry/Vector.java
5906= org.apache.commons.math3.analysis.solvers.BrentSolver:brent(double, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
5907= org.apache.commons.math3.analysis.solvers.BrentSolver:BrentSolver(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
5908= org.apache.commons.math3.analysis.solvers.BrentSolver:BrentSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
5909= org.apache.commons.math3.analysis.solvers.BrentSolver:BrentSolver()	/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
5910= org.apache.commons.math3.analysis.solvers.BrentSolver:doSolve()	/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
5911= org.apache.commons.math3.analysis.solvers.BrentSolver:BrentSolver(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
5912= org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizer:DifferentiableMultivariateMultiStartOptimizer(DifferentiableMultivariateOptimizer, int, RandomVectorGenerator)	/src/main/java/org/apache/commons/math3/optimization/DifferentiableMultivariateMultiStartOptimizer.java
5913= org.apache.commons.math3.ml.distance.CanberraDistance:compute(double[], double[])	/src/main/java/org/apache/commons/math3/ml/distance/CanberraDistance.java
5914= org.apache.commons.math3.optim.SimpleValueChecker:SimpleValueChecker(double, double, int)	/src/main/java/org/apache/commons/math3/optim/SimpleValueChecker.java
5915= org.apache.commons.math3.optim.SimpleValueChecker:SimpleValueChecker(double, double)	/src/main/java/org/apache/commons/math3/optim/SimpleValueChecker.java
5916= org.apache.commons.math3.optim.SimpleValueChecker:converged(int, PointValuePair, PointValuePair)	/src/main/java/org/apache/commons/math3/optim/SimpleValueChecker.java
5917= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegrator:ThreeEighthesIntegrator(double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegrator.java
5918= org.apache.commons.math3.analysis.function.Cosh:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Cosh.java
5919= org.apache.commons.math3.analysis.function.Cosh:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Cosh.java
5920= org.apache.commons.math3.analysis.function.Cosh:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Cosh.java
5921= org.apache.commons.math3.util.MathArrays:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5922= org.apache.commons.math3.util.MathArrays:ebeMultiply(double[], double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5923= org.apache.commons.math3.util.MathArrays.Function:evaluate(double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5924= org.apache.commons.math3.util.MathArrays:shuffle(int[], RandomGenerator)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5925= org.apache.commons.math3.util.MathArrays:distance1(double[], double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5926= org.apache.commons.math3.util.MathArrays:copyOf(double[], int)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5927= org.apache.commons.math3.util.MathArrays:equals(float[], float[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5928= org.apache.commons.math3.util.MathArrays:scaleInPlace(double, double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5929= org.apache.commons.math3.util.MathArrays:shuffle(int[], int, Position, RandomGenerator)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5930= org.apache.commons.math3.util.MathArrays:checkOrder(double[], OrderDirection, boolean, boolean)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5931= org.apache.commons.math3.util.MathArrays:buildArray(Field<T>, int, int)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5932= org.apache.commons.math3.util.MathArrays:scale(double, double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5933= org.apache.commons.math3.util.MathArrays:checkOrder(double[], OrderDirection, boolean)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5934= org.apache.commons.math3.util.MathArrays:natural(int)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5935= org.apache.commons.math3.util.MathArrays:distance1(int[], int[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5936= org.apache.commons.math3.util.MathArrays:MathArrays()	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5937= org.apache.commons.math3.util.MathArrays:sortInPlace(double[], double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5938= org.apache.commons.math3.util.MathArrays:ebeSubtract(double[], double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5939= org.apache.commons.math3.util.MathArrays:linearCombination(double, double, double, double)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5940= org.apache.commons.math3.util.MathArrays:checkRectangular(long[][])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5941= org.apache.commons.math3.util.MathArrays:linearCombination(double, double, double, double, double, double, double, double)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5942= org.apache.commons.math3.util.MathArrays:checkPositive(double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5943= org.apache.commons.math3.util.MathArrays:linearCombination(double[], double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5944= org.apache.commons.math3.util.MathArrays:distance(int[], int[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5945= org.apache.commons.math3.util.MathArrays:distance(double[], double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5946= org.apache.commons.math3.util.MathArrays:shuffle(int[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5947= org.apache.commons.math3.util.MathArrays:evaluate(double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5948= org.apache.commons.math3.util.MathArrays:ebeAdd(double[], double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5949= org.apache.commons.math3.util.MathArrays:linearCombination(double, double, double, double, double, double)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5950= org.apache.commons.math3.util.MathArrays:isMonotonic(T[], OrderDirection, boolean)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5951= org.apache.commons.math3.util.MathArrays:equalsIncludingNaN(float[], float[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5952= org.apache.commons.math3.util.MathArrays:copyOf(int[], int)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5953= org.apache.commons.math3.util.MathArrays:equals(double[], double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5954= org.apache.commons.math3.util.MathArrays:isMonotonic(double[], OrderDirection, boolean)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5955= org.apache.commons.math3.util.MathArrays:verifyValues(double[], int, int, boolean)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5956= org.apache.commons.math3.util.MathArrays:verifyValues(double[], double[], int, int, boolean)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5957= org.apache.commons.math3.util.MathArrays:normalizeArray(double[], double)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5958= org.apache.commons.math3.util.MathArrays:safeNorm(double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5959= org.apache.commons.math3.util.MathArrays:verifyValues(double[], double[], int, int)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5960= org.apache.commons.math3.util.MathArrays:sortInPlace(double[], OrderDirection, double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5961= org.apache.commons.math3.util.MathArrays:equalsIncludingNaN(double[], double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5962= org.apache.commons.math3.util.MathArrays:distanceInf(double[], double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5963= org.apache.commons.math3.util.MathArrays:checkOrder(double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5964= org.apache.commons.math3.util.MathArrays:shuffle(int[], int, Position)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5965= org.apache.commons.math3.util.MathArrays:convolve(double[], double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5966= org.apache.commons.math3.util.MathArrays:copyOf(int[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5967= org.apache.commons.math3.util.MathArrays:checkNonNegative(long[][])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5968= org.apache.commons.math3.util.MathArrays:checkNonNegative(long[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5969= org.apache.commons.math3.util.MathArrays:copyOf(double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5970= org.apache.commons.math3.util.MathArrays.Function:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5971= org.apache.commons.math3.util.MathArrays:ebeDivide(double[], double[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5972= org.apache.commons.math3.util.MathArrays:buildArray(Field<T>, int)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5973= org.apache.commons.math3.util.MathArrays:distanceInf(int[], int[])	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5974= org.apache.commons.math3.util.MathArrays:compare(Pair<Double,Integer>, Pair<Double,Integer>)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5975= org.apache.commons.math3.util.MathArrays:verifyValues(double[], int, int)	/src/main/java/org/apache/commons/math3/util/MathArrays.java
5976= org.apache.commons.math3.special.Beta:Beta()	/src/main/java/org/apache/commons/math3/special/Beta.java
5977= org.apache.commons.math3.special.Beta:getB(int, double)	/src/main/java/org/apache/commons/math3/special/Beta.java
5978= org.apache.commons.math3.special.Beta:sumDeltaMinusDeltaSum(double, double)	/src/main/java/org/apache/commons/math3/special/Beta.java
5979= org.apache.commons.math3.special.Beta:regularizedBeta(double, double, double, double, int)	/src/main/java/org/apache/commons/math3/special/Beta.java
5980= org.apache.commons.math3.special.Beta:logBeta(double, double, double, int)	/src/main/java/org/apache/commons/math3/special/Beta.java
5981= org.apache.commons.math3.special.Beta:logGammaSum(double, double)	/src/main/java/org/apache/commons/math3/special/Beta.java
5982= org.apache.commons.math3.special.Beta:getA(int, double)	/src/main/java/org/apache/commons/math3/special/Beta.java
5983= org.apache.commons.math3.special.Beta:logGammaMinusLogGammaSum(double, double)	/src/main/java/org/apache/commons/math3/special/Beta.java
5984= org.apache.commons.math3.special.Beta:deltaMinusDeltaSum(double, double)	/src/main/java/org/apache/commons/math3/special/Beta.java
5985= org.apache.commons.math3.special.Beta:regularizedBeta(double, double, double)	/src/main/java/org/apache/commons/math3/special/Beta.java
5986= org.apache.commons.math3.special.Beta:regularizedBeta(double, double, double, int)	/src/main/java/org/apache/commons/math3/special/Beta.java
5987= org.apache.commons.math3.special.Beta:regularizedBeta(double, double, double, double)	/src/main/java/org/apache/commons/math3/special/Beta.java
5988= org.apache.commons.math3.special.Beta:logBeta(double, double)	/src/main/java/org/apache/commons/math3/special/Beta.java
5989= org.apache.commons.math3.geometry.spherical.twod.Circle:CircleTransform(Rotation)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
5990= org.apache.commons.math3.geometry.spherical.twod.Circle:getPhase(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
5991= org.apache.commons.math3.geometry.spherical.twod.Circle:sameOrientationAs(Hyperplane<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
5992= org.apache.commons.math3.geometry.spherical.twod.Circle:getTransform(Rotation)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
5993= org.apache.commons.math3.geometry.spherical.twod.Circle.CircleTransform:CircleTransform(Rotation)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
5994= org.apache.commons.math3.geometry.spherical.twod.Circle:getYAxis()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
5995= org.apache.commons.math3.geometry.spherical.twod.Circle:getReverse()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
5996= org.apache.commons.math3.geometry.spherical.twod.Circle:getOffset(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
5997= org.apache.commons.math3.geometry.spherical.twod.Circle:toSubSpace(Point<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
5998= org.apache.commons.math3.geometry.spherical.twod.Circle:Circle(Vector3D, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
5999= org.apache.commons.math3.geometry.spherical.twod.Circle:project(Point<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6000= org.apache.commons.math3.geometry.spherical.twod.Circle:getPole()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6001= org.apache.commons.math3.geometry.spherical.twod.Circle:apply(Hyperplane<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6002= org.apache.commons.math3.geometry.spherical.twod.Circle:copySelf()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6003= org.apache.commons.math3.geometry.spherical.twod.Circle:getOffset(Point<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6004= org.apache.commons.math3.geometry.spherical.twod.Circle:apply(SubHyperplane<Sphere1D>, Hyperplane<Sphere2D>, Hyperplane<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6005= org.apache.commons.math3.geometry.spherical.twod.Circle.CircleTransform:apply(Hyperplane<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6006= org.apache.commons.math3.geometry.spherical.twod.Circle:apply(Point<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6007= org.apache.commons.math3.geometry.spherical.twod.Circle:getTolerance()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6008= org.apache.commons.math3.geometry.spherical.twod.Circle:wholeSpace()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6009= org.apache.commons.math3.geometry.spherical.twod.Circle:getXAxis()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6010= org.apache.commons.math3.geometry.spherical.twod.Circle:Circle(Vector3D, Vector3D, Vector3D, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6011= org.apache.commons.math3.geometry.spherical.twod.Circle:Circle(Circle)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6012= org.apache.commons.math3.geometry.spherical.twod.Circle:Circle(S2Point, S2Point, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6013= org.apache.commons.math3.geometry.spherical.twod.Circle:toSpace(Point<Sphere1D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6014= org.apache.commons.math3.geometry.spherical.twod.Circle:getInsideArc(Circle)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6015= org.apache.commons.math3.geometry.spherical.twod.Circle:reset(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6016= org.apache.commons.math3.geometry.spherical.twod.Circle:wholeHyperplane()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6017= org.apache.commons.math3.geometry.spherical.twod.Circle:revertSelf()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6018= org.apache.commons.math3.geometry.spherical.twod.Circle.CircleTransform:apply(Point<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6019= org.apache.commons.math3.geometry.spherical.twod.Circle:getPointAt(double)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6020= org.apache.commons.math3.geometry.spherical.twod.Circle.CircleTransform:apply(SubHyperplane<Sphere1D>, Hyperplane<Sphere2D>, Hyperplane<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Circle.java
6021= org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation:getSigma(double)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractEvaluation.java
6022= org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation:getCovariances(double)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractEvaluation.java
6023= org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation:getRMS()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractEvaluation.java
6024= org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation:getCost()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractEvaluation.java
6025= org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation:AbstractEvaluation(int)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractEvaluation.java
6026= org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction:KohonenUpdateAction(DistanceMeasure, LearningFactorFunction, NeighbourhoodSizeFunction)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenUpdateAction.java
6027= org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction:update(Network, double[])	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenUpdateAction.java
6028= org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction:findAndUpdateBestNeuron(Network, double[], double)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenUpdateAction.java
6029= org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction:updateNeighbouringNeuron(Neuron, double[], double)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenUpdateAction.java
6030= org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction:getNumberOfCalls()	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenUpdateAction.java
6031= org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction:computeFeatures(double[], double[], double)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenUpdateAction.java
6032= org.apache.commons.math3.RetryRunnerTest:testRetryFailSometimes()	/src/test/java/org/apache/commons/math3/RetryRunnerTest.java
6033= org.apache.commons.math3.RetryRunnerTest:testRetryFailAlways()	/src/test/java/org/apache/commons/math3/RetryRunnerTest.java
6034= org.apache.commons.math3.ode.FirstOrderDifferentialEquations:computeDerivatives(double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/FirstOrderDifferentialEquations.java
6035= org.apache.commons.math3.ode.FirstOrderDifferentialEquations:getDimension()	/src/main/java/org/apache/commons/math3/ode/FirstOrderDifferentialEquations.java
6036= org.apache.commons.math3.stat.inference.BinomialTest:binomialTest(int, int, double, AlternativeHypothesis, double)	/src/main/java/org/apache/commons/math3/stat/inference/BinomialTest.java
6037= org.apache.commons.math3.stat.inference.BinomialTest:binomialTest(int, int, double, AlternativeHypothesis)	/src/main/java/org/apache/commons/math3/stat/inference/BinomialTest.java
6038= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:exp()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6039= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:rootN(int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6040= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:DataTransferObject(int, int, double[])	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6041= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:getOrder()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6042= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:add(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6043= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:add(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6044= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:floor()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6045= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:pow(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6046= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:hashCode()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6047= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:subtract(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6048= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:log()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6049= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:linearCombination(DerivativeStructure[], DerivativeStructure[])	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6050= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:getField()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6051= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:cos()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6052= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:asinh()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6053= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:linearCombination(DerivativeStructure, DerivativeStructure, DerivativeStructure, DerivativeStructure, DerivativeStructure, DerivativeStructure, DerivativeStructure, DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6054= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:getReal()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6055= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:acos()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6056= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:signum()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6057= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:hypot(DerivativeStructure, DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6058= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:getAllDerivatives()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6059= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:remainder(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6060= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:getPartialDerivative(int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6061= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:pow(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6062= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:getFreeParameters()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6063= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:subtract(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6064= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:DerivativeStructure(DSCompiler)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6065= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:getZero()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6066= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:taylor(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6067= org.apache.commons.math3.analysis.differentiation.DerivativeStructure.DataTransferObject:readResolve()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6068= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:DerivativeStructure(double, DerivativeStructure, double, DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6069= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:writeReplace()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6070= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:log1p()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6071= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:copySign(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6072= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:linearCombination(DerivativeStructure, DerivativeStructure, DerivativeStructure, DerivativeStructure, DerivativeStructure, DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6073= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:DerivativeStructure(double, DerivativeStructure, double, DerivativeStructure, double, DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6074= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:toRadians()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6075= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:getExponent()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6076= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:toDegrees()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6077= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:atan()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6078= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:scalb(int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6079= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:multiply(int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6080= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:negate()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6081= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:sqrt()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6082= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:DerivativeStructure(double, DerivativeStructure, double, DerivativeStructure, double, DerivativeStructure, double, DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6083= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:reciprocal()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6084= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:acosh()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6085= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:readResolve()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6086= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:linearCombination(double, DerivativeStructure, double, DerivativeStructure, double, DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6087= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:linearCombination(double, DerivativeStructure, double, DerivativeStructure, double, DerivativeStructure, double, DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6088= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:multiply(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6089= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:cosh()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6090= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:sinh()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6091= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:multiply(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6092= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:linearCombination(double[], DerivativeStructure[])	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6093= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:DerivativeStructure(int, int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6094= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:atan2(DerivativeStructure, DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6095= org.apache.commons.math3.analysis.differentiation.DerivativeStructure.DataTransferObject:DataTransferObject(int, int, double[])	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6096= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:linearCombination(DerivativeStructure, DerivativeStructure, DerivativeStructure, DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6097= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:tan()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6098= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:round()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6099= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:pow(double, DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6100= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:atan2(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6101= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:ceil()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6102= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:cbrt()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6103= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:DerivativeStructure(int, int, int, double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6104= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:pow(int)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6105= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:asin()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6106= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:atanh()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6107= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:tanh()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6108= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:sin()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6109= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:getRuntimeClass()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6110= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:expm1()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6111= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:linearCombination(double, DerivativeStructure, double, DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6112= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:divide(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6113= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:log10()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6114= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:DerivativeStructure(int, int, double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6115= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:divide(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6116= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:copySign(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6117= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:getValue()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6118= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:DerivativeStructure(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6119= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:hypot(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6120= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:remainder(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6121= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:createConstant(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6122= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:getOne()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6123= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:equals(Object)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6124= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:abs()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6125= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:rint()	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6126= org.apache.commons.math3.analysis.differentiation.DerivativeStructure:compose(double)	/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java
6127= org.apache.commons.math3.random.ISAACRandom:ISAACRandom()	/src/main/java/org/apache/commons/math3/random/ISAACRandom.java
6128= org.apache.commons.math3.random.ISAACRandom:setSeed(long)	/src/main/java/org/apache/commons/math3/random/ISAACRandom.java
6129= org.apache.commons.math3.random.ISAACRandom:setSeed(int[])	/src/main/java/org/apache/commons/math3/random/ISAACRandom.java
6130= org.apache.commons.math3.random.ISAACRandom:isaac3()	/src/main/java/org/apache/commons/math3/random/ISAACRandom.java
6131= org.apache.commons.math3.random.ISAACRandom:isaac2()	/src/main/java/org/apache/commons/math3/random/ISAACRandom.java
6132= org.apache.commons.math3.random.ISAACRandom:next(int)	/src/main/java/org/apache/commons/math3/random/ISAACRandom.java
6133= org.apache.commons.math3.random.ISAACRandom:ISAACRandom(int[])	/src/main/java/org/apache/commons/math3/random/ISAACRandom.java
6134= org.apache.commons.math3.random.ISAACRandom:setSeed(int)	/src/main/java/org/apache/commons/math3/random/ISAACRandom.java
6135= org.apache.commons.math3.random.ISAACRandom:shuffle()	/src/main/java/org/apache/commons/math3/random/ISAACRandom.java
6136= org.apache.commons.math3.random.ISAACRandom:setState(int)	/src/main/java/org/apache/commons/math3/random/ISAACRandom.java
6137= org.apache.commons.math3.random.ISAACRandom:initState()	/src/main/java/org/apache/commons/math3/random/ISAACRandom.java
6138= org.apache.commons.math3.random.ISAACRandom:ISAACRandom(long)	/src/main/java/org/apache/commons/math3/random/ISAACRandom.java
6139= org.apache.commons.math3.random.ISAACRandom:isaac()	/src/main/java/org/apache/commons/math3/random/ISAACRandom.java
6140= org.apache.commons.math3.primes.PollardRho:primeFactors(int)	/src/main/java/org/apache/commons/math3/primes/PollardRho.java
6141= org.apache.commons.math3.primes.PollardRho:rhoBrent(int)	/src/main/java/org/apache/commons/math3/primes/PollardRho.java
6142= org.apache.commons.math3.primes.PollardRho:PollardRho()	/src/main/java/org/apache/commons/math3/primes/PollardRho.java
6143= org.apache.commons.math3.primes.PollardRho:gcdPositive(int, int)	/src/main/java/org/apache/commons/math3/primes/PollardRho.java
6144= org.apache.commons.math3.stat.descriptive.rank.Max:Max(Max)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Max.java
6145= org.apache.commons.math3.stat.descriptive.rank.Max:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Max.java
6146= org.apache.commons.math3.stat.descriptive.rank.Max:Max()	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Max.java
6147= org.apache.commons.math3.stat.descriptive.rank.Max:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Max.java
6148= org.apache.commons.math3.stat.descriptive.rank.Max:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Max.java
6149= org.apache.commons.math3.stat.descriptive.rank.Max:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Max.java
6150= org.apache.commons.math3.stat.descriptive.rank.Max:copy(Max, Max)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Max.java
6151= org.apache.commons.math3.stat.descriptive.rank.Max:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Max.java
6152= org.apache.commons.math3.stat.descriptive.rank.Max:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Max.java
6153= org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException:NonPositiveDefiniteOperatorException()	/src/main/java/org/apache/commons/math3/linear/NonPositiveDefiniteOperatorException.java
6154= org.apache.commons.math3.analysis.function.Sin:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Sin.java
6155= org.apache.commons.math3.analysis.function.Sin:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Sin.java
6156= org.apache.commons.math3.analysis.function.Sin:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Sin.java
6157= org.apache.commons.math3.userguide.RealDistributionComparison.Display:getMainPanel()	/src/userguide/java/org/apache/commons/math3/userguide/RealDistributionComparison.java
6158= org.apache.commons.math3.userguide.RealDistributionComparison:addPDFSeries(Chart, RealDistribution, String, int, int)	/src/userguide/java/org/apache/commons/math3/userguide/RealDistributionComparison.java
6159= org.apache.commons.math3.userguide.RealDistributionComparison:addCDFSeries(Chart, RealDistribution, String, int, int)	/src/userguide/java/org/apache/commons/math3/userguide/RealDistributionComparison.java
6160= org.apache.commons.math3.userguide.RealDistributionComparison:main(String[])	/src/userguide/java/org/apache/commons/math3/userguide/RealDistributionComparison.java
6161= org.apache.commons.math3.userguide.RealDistributionComparison.Display:Display()	/src/userguide/java/org/apache/commons/math3/userguide/RealDistributionComparison.java
6162= org.apache.commons.math3.userguide.RealDistributionComparison:createComponent(String, int, int, String[], RealDistribution)	/src/userguide/java/org/apache/commons/math3/userguide/RealDistributionComparison.java
6163= org.apache.commons.math3.userguide.RealDistributionComparison:Display()	/src/userguide/java/org/apache/commons/math3/userguide/RealDistributionComparison.java
6164= org.apache.commons.math3.userguide.RealDistributionComparison:createChart(String, int, int, LegendPosition)	/src/userguide/java/org/apache/commons/math3/userguide/RealDistributionComparison.java
6165= org.apache.commons.math3.userguide.RealDistributionComparison:getMainPanel()	/src/userguide/java/org/apache/commons/math3/userguide/RealDistributionComparison.java
6166= org.apache.commons.math3.random.MersenneTwisterTest:testMakotoNishimura()	/src/test/java/org/apache/commons/math3/random/MersenneTwisterTest.java
6167= org.apache.commons.math3.random.MersenneTwisterTest:makeGenerator()	/src/test/java/org/apache/commons/math3/random/MersenneTwisterTest.java
6168= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:diag(RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6169= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:checkParameters()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6170= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:selectColumns(RealMatrix, int[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6171= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.Sigma:Sigma(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6172= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:updateCovarianceDiagonalOnly(boolean, RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6173= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:updateBD(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6174= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:CMAESOptimizer(int, double, boolean, int, int, RandomGenerator, boolean, ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6175= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:randn1(int, int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6176= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:randn(int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6177= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:compareTo(DoubleIndex)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6178= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:triu(RealMatrix, int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6179= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:reverse(int[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6180= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.DoubleIndex:equals(Object)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6181= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:sqrt(RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6182= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:sumRows(RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6183= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:updateCovariance(boolean, RealMatrix, RealMatrix, int[], RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6184= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:divide(RealMatrix, RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6185= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.FitnessFunction:value(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6186= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.FitnessFunction:isFeasible(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6187= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.DoubleIndex:DoubleIndex(double, int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6188= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:getStatisticsFitnessHistory()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6189= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:Sigma(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6190= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:sequence(double, double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6191= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:FitnessFunction()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6192= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6193= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:max(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6194= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:getStatisticsMeanHistory()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6195= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:valueRange(ValuePenaltyPair[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6196= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:max(RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6197= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:push(double[], double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6198= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.PopulationSize:PopulationSize(int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6199= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:isFeasible(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6200= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.FitnessFunction:penalty(double[], double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6201= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:getStatisticsSigmaHistory()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6202= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:min(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6203= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.FitnessFunction:repair(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6204= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.DoubleIndex:compareTo(DoubleIndex)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6205= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:PopulationSize(int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6206= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.ValuePenaltyPair:ValuePenaltyPair(double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6207= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:penalty(double[], double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6208= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:sortedIndices(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6209= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:log(RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6210= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:optimize(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6211= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:eye(int, int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6212= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:repmat(RealMatrix, int, int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6213= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:hashCode()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6214= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:repair(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6215= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:zeros(int, int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6216= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:DoubleIndex(double, int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6217= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:updateEvolutionPaths(RealMatrix, RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6218= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:square(RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6219= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:initializeCMA(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6220= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:getSigma()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6221= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:value(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6222= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:ones(int, int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6223= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:inverse(int[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6224= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:equals(Object)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6225= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.Sigma:getSigma()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6226= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.PopulationSize:getPopulationSize()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6227= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.DoubleIndex:hashCode()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6228= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:times(RealMatrix, RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6229= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6230= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.FitnessFunction:FitnessFunction()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6231= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:min(RealMatrix)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6232= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:ValuePenaltyPair(double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6233= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:copyColumn(RealMatrix, int, RealMatrix, int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6234= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:getStatisticsDHistory()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6235= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:getPopulationSize()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
6236= org.apache.commons.math3.stat.regression.SimpleRegression:addData(double, double)	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6237= org.apache.commons.math3.stat.regression.SimpleRegression:removeData(double, double)	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6238= org.apache.commons.math3.stat.regression.SimpleRegression:getMeanSquareError()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6239= org.apache.commons.math3.stat.regression.SimpleRegression:getN()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6240= org.apache.commons.math3.stat.regression.SimpleRegression:SimpleRegression()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6241= org.apache.commons.math3.stat.regression.SimpleRegression:addData(double[][])	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6242= org.apache.commons.math3.stat.regression.SimpleRegression:clear()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6243= org.apache.commons.math3.stat.regression.SimpleRegression:addObservation(double[], double)	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6244= org.apache.commons.math3.stat.regression.SimpleRegression:getSlope()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6245= org.apache.commons.math3.stat.regression.SimpleRegression:getRegressionSumSquares(double)	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6246= org.apache.commons.math3.stat.regression.SimpleRegression:addObservations(double[][], double[])	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6247= org.apache.commons.math3.stat.regression.SimpleRegression:getTotalSumSquares()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6248= org.apache.commons.math3.stat.regression.SimpleRegression:getR()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6249= org.apache.commons.math3.stat.regression.SimpleRegression:getIntercept(double)	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6250= org.apache.commons.math3.stat.regression.SimpleRegression:getIntercept()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6251= org.apache.commons.math3.stat.regression.SimpleRegression:getRegressionSumSquares()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6252= org.apache.commons.math3.stat.regression.SimpleRegression:regress(int[])	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6253= org.apache.commons.math3.stat.regression.SimpleRegression:getRSquare()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6254= org.apache.commons.math3.stat.regression.SimpleRegression:getSumOfCrossProducts()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6255= org.apache.commons.math3.stat.regression.SimpleRegression:getSlopeConfidenceInterval(double)	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6256= org.apache.commons.math3.stat.regression.SimpleRegression:SimpleRegression(boolean)	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6257= org.apache.commons.math3.stat.regression.SimpleRegression:getSlopeConfidenceInterval()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6258= org.apache.commons.math3.stat.regression.SimpleRegression:removeData(double[][])	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6259= org.apache.commons.math3.stat.regression.SimpleRegression:getSumSquaredErrors()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6260= org.apache.commons.math3.stat.regression.SimpleRegression:getXSumSquares()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6261= org.apache.commons.math3.stat.regression.SimpleRegression:getSlopeStdErr()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6262= org.apache.commons.math3.stat.regression.SimpleRegression:append(SimpleRegression)	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6263= org.apache.commons.math3.stat.regression.SimpleRegression:getInterceptStdErr()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6264= org.apache.commons.math3.stat.regression.SimpleRegression:predict(double)	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6265= org.apache.commons.math3.stat.regression.SimpleRegression:hasIntercept()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6266= org.apache.commons.math3.stat.regression.SimpleRegression:getSignificance()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6267= org.apache.commons.math3.stat.regression.SimpleRegression:regress()	/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
6268= org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:computeInterpolatedStateAndDerivatives(double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54StepInterpolator.java
6269= org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:storeTime(double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54StepInterpolator.java
6270= org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:DormandPrince54StepInterpolator(DormandPrince54StepInterpolator)	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54StepInterpolator.java
6271= org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:reinitialize(AbstractIntegrator, double[], double[][], boolean, EquationsMapper, EquationsMapper[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54StepInterpolator.java
6272= org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:DormandPrince54StepInterpolator()	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54StepInterpolator.java
6273= org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:doCopy()	/src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54StepInterpolator.java
6274= org.apache.commons.math3.stat.data.LewTest:getResourceName()	/src/test/java/org/apache/commons/math3/stat/data/LewTest.java
6275= org.apache.commons.math3.linear.BlockFieldMatrix:scalarMultiply(T)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6276= org.apache.commons.math3.linear.BlockFieldMatrix:multiplyEntry(int, int, T)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6277= org.apache.commons.math3.linear.BlockFieldMatrix:createMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6278= org.apache.commons.math3.linear.BlockFieldMatrix:transpose()	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6279= org.apache.commons.math3.linear.BlockFieldMatrix:walkInRowOrder(FieldMatrixChangingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6280= org.apache.commons.math3.linear.BlockFieldMatrix:setRowMatrix(int, FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6281= org.apache.commons.math3.linear.BlockFieldMatrix:getColumnMatrix(int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6282= org.apache.commons.math3.linear.BlockFieldMatrix:getColumn(int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6283= org.apache.commons.math3.linear.BlockFieldMatrix:BlockFieldMatrix(T[][])	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6284= org.apache.commons.math3.linear.BlockFieldMatrix:setSubMatrix(T[][], int, int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6285= org.apache.commons.math3.linear.BlockFieldMatrix:setColumnVector(int, FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6286= org.apache.commons.math3.linear.BlockFieldMatrix:walkInRowOrder(FieldMatrixPreservingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6287= org.apache.commons.math3.linear.BlockFieldMatrix:setRowMatrix(int, BlockFieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6288= org.apache.commons.math3.linear.BlockFieldMatrix:subtract(BlockFieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6289= org.apache.commons.math3.linear.BlockFieldMatrix:copy()	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6290= org.apache.commons.math3.linear.BlockFieldMatrix:getRowMatrix(int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6291= org.apache.commons.math3.linear.BlockFieldMatrix:subtract(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6292= org.apache.commons.math3.linear.BlockFieldMatrix:blockHeight(int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6293= org.apache.commons.math3.linear.BlockFieldMatrix:multiply(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6294= org.apache.commons.math3.linear.BlockFieldMatrix:toBlocksLayout(T[][])	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6295= org.apache.commons.math3.linear.BlockFieldMatrix:getColumnVector(int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6296= org.apache.commons.math3.linear.BlockFieldMatrix:getRowDimension()	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6297= org.apache.commons.math3.linear.BlockFieldMatrix:walkInOptimizedOrder(FieldMatrixPreservingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6298= org.apache.commons.math3.linear.BlockFieldMatrix:BlockFieldMatrix(int, int, T[][], boolean)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6299= org.apache.commons.math3.linear.BlockFieldMatrix:multiply(BlockFieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6300= org.apache.commons.math3.linear.BlockFieldMatrix:setEntry(int, int, T)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6301= org.apache.commons.math3.linear.BlockFieldMatrix:walkInOptimizedOrder(FieldMatrixChangingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6302= org.apache.commons.math3.linear.BlockFieldMatrix:setColumnMatrix(int, BlockFieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6303= org.apache.commons.math3.linear.BlockFieldMatrix:getColumnDimension()	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6304= org.apache.commons.math3.linear.BlockFieldMatrix:add(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6305= org.apache.commons.math3.linear.BlockFieldMatrix:walkInOptimizedOrder(FieldMatrixPreservingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6306= org.apache.commons.math3.linear.BlockFieldMatrix:add(BlockFieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6307= org.apache.commons.math3.linear.BlockFieldMatrix:setRowVector(int, FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6308= org.apache.commons.math3.linear.BlockFieldMatrix:walkInRowOrder(FieldMatrixPreservingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6309= org.apache.commons.math3.linear.BlockFieldMatrix:BlockFieldMatrix(Field<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6310= org.apache.commons.math3.linear.BlockFieldMatrix:getSubMatrix(int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6311= org.apache.commons.math3.linear.BlockFieldMatrix:addToEntry(int, int, T)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6312= org.apache.commons.math3.linear.BlockFieldMatrix:getRow(int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6313= org.apache.commons.math3.linear.BlockFieldMatrix:getData()	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6314= org.apache.commons.math3.linear.BlockFieldMatrix:copyBlockPart(T[], int, int, int, int, int, T[], int, int, int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6315= org.apache.commons.math3.linear.BlockFieldMatrix:getRowVector(int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6316= org.apache.commons.math3.linear.BlockFieldMatrix:walkInOptimizedOrder(FieldMatrixChangingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6317= org.apache.commons.math3.linear.BlockFieldMatrix:walkInRowOrder(FieldMatrixChangingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6318= org.apache.commons.math3.linear.BlockFieldMatrix:getEntry(int, int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6319= org.apache.commons.math3.linear.BlockFieldMatrix:preMultiply(T[])	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6320= org.apache.commons.math3.linear.BlockFieldMatrix:createBlocksLayout(Field<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6321= org.apache.commons.math3.linear.BlockFieldMatrix:setRow(int, T[])	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6322= org.apache.commons.math3.linear.BlockFieldMatrix:setColumn(int, T[])	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6323= org.apache.commons.math3.linear.BlockFieldMatrix:operate(T[])	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6324= org.apache.commons.math3.linear.BlockFieldMatrix:scalarAdd(T)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6325= org.apache.commons.math3.linear.BlockFieldMatrix:setColumnMatrix(int, FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6326= org.apache.commons.math3.linear.BlockFieldMatrix:blockWidth(int)	/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
6327= org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator:LegendreGaussIntegrator(int, double, double, int, int)	/src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java
6328= org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator:stage(int)	/src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java
6329= org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator:LegendreGaussIntegrator(int, double, double)	/src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java
6330= org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator:doIntegrate()	/src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java
6331= org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator:LegendreGaussIntegrator(int, int, int)	/src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java
6332= org.apache.commons.math3.exception.MathUnsupportedOperationException:getLocalizedMessage()	/src/main/java/org/apache/commons/math3/exception/MathUnsupportedOperationException.java
6333= org.apache.commons.math3.exception.MathUnsupportedOperationException:MathUnsupportedOperationException(Localizable, Object)	/src/main/java/org/apache/commons/math3/exception/MathUnsupportedOperationException.java
6334= org.apache.commons.math3.exception.MathUnsupportedOperationException:MathUnsupportedOperationException()	/src/main/java/org/apache/commons/math3/exception/MathUnsupportedOperationException.java
6335= org.apache.commons.math3.exception.MathUnsupportedOperationException:getContext()	/src/main/java/org/apache/commons/math3/exception/MathUnsupportedOperationException.java
6336= org.apache.commons.math3.exception.MathUnsupportedOperationException:getMessage()	/src/main/java/org/apache/commons/math3/exception/MathUnsupportedOperationException.java
6337= org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation:getJacobian()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/DenseWeightedEvaluation.java
6338= org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation:getResiduals()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/DenseWeightedEvaluation.java
6339= org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation:DenseWeightedEvaluation(Evaluation, RealMatrix)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/DenseWeightedEvaluation.java
6340= org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation:getPoint()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/DenseWeightedEvaluation.java
6341= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest:testGetFeaturesSize()	/src/test/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2DTest.java
6342= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest:testConcentricNeighbourhood2()	/src/test/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2DTest.java
6343= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest:test3x2CylinderNetwork()	/src/test/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2DTest.java
6344= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest:test3x3CylinderNetwork2()	/src/test/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2DTest.java
6345= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest:test3x3TorusNetwork()	/src/test/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2DTest.java
6346= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest:testConcentricNeighbourhood()	/src/test/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2DTest.java
6347= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest:testMinimalNetworkSize1()	/src/test/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2DTest.java
6348= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest:test3x3TorusNetwork2()	/src/test/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2DTest.java
6349= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest:test2x2Network2()	/src/test/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2DTest.java
6350= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest:testMinimalNetworkSize2()	/src/test/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2DTest.java
6351= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest:testSerialize()	/src/test/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2DTest.java
6352= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest:test2x2Network()	/src/test/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2DTest.java
6353= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest:test3x3CylinderNetwork()	/src/test/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2DTest.java
6354= org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2DTest:test3x2CylinderNetwork2()	/src/test/java/org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2DTest.java
6355= org.apache.commons.math3.util.IterationEvent:getIterations()	/src/main/java/org/apache/commons/math3/util/IterationEvent.java
6356= org.apache.commons.math3.util.IterationEvent:IterationEvent(Object, int)	/src/main/java/org/apache/commons/math3/util/IterationEvent.java
6357= org.apache.commons.math3.linear.ConjugateGradient:ConjugateGradient(IterationManager, double, boolean)	/src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java
6358= org.apache.commons.math3.linear.ConjugateGradient:getCheck()	/src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java
6359= org.apache.commons.math3.linear.ConjugateGradient:ConjugateGradient(int, double, boolean)	/src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java
6360= org.apache.commons.math3.linear.ConjugateGradient:solveInPlace(RealLinearOperator, RealLinearOperator, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java
6361= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:recurseFirstIntersection(BSPTree<Euclidean3D>, Vector3D, Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6362= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.FacetsContributionVisitor:FacetsContributionVisitor()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6363= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:apply(SubHyperplane<Euclidean2D>, Hyperplane<Euclidean3D>, Hyperplane<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6364= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:TranslationTransform(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6365= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:apply(Point<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6366= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.TranslationTransform:TranslationTransform(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6367= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.FacetsContributionVisitor:addContribution(SubHyperplane<Euclidean3D>, boolean)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6368= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.FacetsContributionVisitor:visitOrder(BSPTree<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6369= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:computeGeometricalProperties()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6370= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:translate(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6371= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.FacetsContributionVisitor:visitInternalNode(BSPTree<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6372= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:PolyhedronsSet(double, double, double, double, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6373= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:rotate(Vector3D, Rotation)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6374= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:RotationTransform(Vector3D, Rotation)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6375= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:addContribution(SubHyperplane<Euclidean3D>, boolean)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6376= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.RotationTransform:RotationTransform(Vector3D, Rotation)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6377= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.FacetsContributionVisitor:visitLeafNode(BSPTree<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6378= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:boundaryFacet(Vector3D, BSPTree<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6379= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:apply(Hyperplane<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6380= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:PolyhedronsSet()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6381= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:firstIntersection(Vector3D, Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6382= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:PolyhedronsSet(Collection<SubHyperplane<Euclidean3D>>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6383= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:visitInternalNode(BSPTree<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6384= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:PolyhedronsSet(BSPTree<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6385= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:FacetsContributionVisitor()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6386= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:buildBoundary(double, double, double, double, double, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6387= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:visitOrder(BSPTree<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6388= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:buildNew(BSPTree<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6389= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.RotationTransform:apply(Point<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6390= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:PolyhedronsSet(double, double, double, double, double, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6391= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.RotationTransform:apply(Hyperplane<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6392= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:PolyhedronsSet(double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6393= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:PolyhedronsSet(Collection<SubHyperplane<Euclidean3D>>, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6394= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.TranslationTransform:apply(SubHyperplane<Euclidean2D>, Hyperplane<Euclidean3D>, Hyperplane<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6395= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.TranslationTransform:apply(Point<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6396= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:PolyhedronsSet(BSPTree<Euclidean3D>, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6397= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.TranslationTransform:apply(Hyperplane<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6398= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:visitLeafNode(BSPTree<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6399= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.RotationTransform:apply(SubHyperplane<Euclidean2D>, Hyperplane<Euclidean3D>, Hyperplane<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
6400= org.apache.commons.math3.optimization.direct.CMAESOptimizer:randn(int)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6401= org.apache.commons.math3.optimization.direct.CMAESOptimizer:checkParameters()	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6402= org.apache.commons.math3.optimization.direct.CMAESOptimizer:reverse(int[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6403= org.apache.commons.math3.optimization.direct.CMAESOptimizer:eye(int, int)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6404= org.apache.commons.math3.optimization.direct.CMAESOptimizer:CMAESOptimizer(int)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6405= org.apache.commons.math3.optimization.direct.CMAESOptimizer:min(RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6406= org.apache.commons.math3.optimization.direct.CMAESOptimizer:getStatisticsDHistory()	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6407= org.apache.commons.math3.optimization.direct.CMAESOptimizer:getPopulationSize()	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6408= org.apache.commons.math3.optimization.direct.CMAESOptimizer:push(double[], double)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6409= org.apache.commons.math3.optimization.direct.CMAESOptimizer:updateCovariance(boolean, RealMatrix, RealMatrix, int[], RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6410= org.apache.commons.math3.optimization.direct.CMAESOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6411= org.apache.commons.math3.optimization.direct.CMAESOptimizer:sequence(double, double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6412= org.apache.commons.math3.optimization.direct.CMAESOptimizer:equals(Object)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6413= org.apache.commons.math3.optimization.direct.CMAESOptimizer.Sigma:Sigma(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6414= org.apache.commons.math3.optimization.direct.CMAESOptimizer:triu(RealMatrix, int)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6415= org.apache.commons.math3.optimization.direct.CMAESOptimizer:penalty(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6416= org.apache.commons.math3.optimization.direct.CMAESOptimizer.FitnessFunction:setValueRange(double)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6417= org.apache.commons.math3.optimization.direct.CMAESOptimizer:sumRows(RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6418= org.apache.commons.math3.optimization.direct.CMAESOptimizer.FitnessFunction:isFeasible(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6419= org.apache.commons.math3.optimization.direct.CMAESOptimizer:PopulationSize(int)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6420= org.apache.commons.math3.optimization.direct.CMAESOptimizer:max(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6421= org.apache.commons.math3.optimization.direct.CMAESOptimizer.FitnessFunction:FitnessFunction()	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6422= org.apache.commons.math3.optimization.direct.CMAESOptimizer:optimizeInternal(int, MultivariateFunction, GoalType, OptimizationData)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6423= org.apache.commons.math3.optimization.direct.CMAESOptimizer:DoubleIndex(double, int)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6424= org.apache.commons.math3.optimization.direct.CMAESOptimizer:times(RealMatrix, RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6425= org.apache.commons.math3.optimization.direct.CMAESOptimizer:CMAESOptimizer(int, double[], int, double, boolean, int, int, RandomGenerator, boolean, ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6426= org.apache.commons.math3.optimization.direct.CMAESOptimizer:inverse(int[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6427= org.apache.commons.math3.optimization.direct.CMAESOptimizer:zeros(int, int)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6428= org.apache.commons.math3.optimization.direct.CMAESOptimizer:randn1(int, int)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6429= org.apache.commons.math3.optimization.direct.CMAESOptimizer:min(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6430= org.apache.commons.math3.optimization.direct.CMAESOptimizer:getStatisticsSigmaHistory()	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6431= org.apache.commons.math3.optimization.direct.CMAESOptimizer.FitnessFunction:value(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6432= org.apache.commons.math3.optimization.direct.CMAESOptimizer.FitnessFunction:repair(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6433= org.apache.commons.math3.optimization.direct.CMAESOptimizer:updateCovarianceDiagonalOnly(boolean, RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6434= org.apache.commons.math3.optimization.direct.CMAESOptimizer:CMAESOptimizer()	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6435= org.apache.commons.math3.optimization.direct.CMAESOptimizer:hashCode()	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6436= org.apache.commons.math3.optimization.direct.CMAESOptimizer:ones(int, int)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6437= org.apache.commons.math3.optimization.direct.CMAESOptimizer:CMAESOptimizer(int, double, boolean, int, int, RandomGenerator, boolean, ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6438= org.apache.commons.math3.optimization.direct.CMAESOptimizer:copyColumn(RealMatrix, int, RealMatrix, int)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6439= org.apache.commons.math3.optimization.direct.CMAESOptimizer:compareTo(DoubleIndex)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6440= org.apache.commons.math3.optimization.direct.CMAESOptimizer:divide(RealMatrix, RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6441= org.apache.commons.math3.optimization.direct.CMAESOptimizer:sortedIndices(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6442= org.apache.commons.math3.optimization.direct.CMAESOptimizer:isFeasible(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6443= org.apache.commons.math3.optimization.direct.CMAESOptimizer:value(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6444= org.apache.commons.math3.optimization.direct.CMAESOptimizer.PopulationSize:getPopulationSize()	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6445= org.apache.commons.math3.optimization.direct.CMAESOptimizer.FitnessFunction:penalty(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6446= org.apache.commons.math3.optimization.direct.CMAESOptimizer:CMAESOptimizer(int, double[], int, double, boolean, int, int, RandomGenerator, boolean)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6447= org.apache.commons.math3.optimization.direct.CMAESOptimizer.PopulationSize:PopulationSize(int)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6448= org.apache.commons.math3.optimization.direct.CMAESOptimizer.DoubleIndex:compareTo(DoubleIndex)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6449= org.apache.commons.math3.optimization.direct.CMAESOptimizer:repmat(RealMatrix, int, int)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6450= org.apache.commons.math3.optimization.direct.CMAESOptimizer:sqrt(RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6451= org.apache.commons.math3.optimization.direct.CMAESOptimizer:square(RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6452= org.apache.commons.math3.optimization.direct.CMAESOptimizer:selectColumns(RealMatrix, int[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6453= org.apache.commons.math3.optimization.direct.CMAESOptimizer:diag(RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6454= org.apache.commons.math3.optimization.direct.CMAESOptimizer:getStatisticsFitnessHistory()	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6455= org.apache.commons.math3.optimization.direct.CMAESOptimizer.DoubleIndex:equals(Object)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6456= org.apache.commons.math3.optimization.direct.CMAESOptimizer.Sigma:getSigma()	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6457= org.apache.commons.math3.optimization.direct.CMAESOptimizer:initializeCMA(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6458= org.apache.commons.math3.optimization.direct.CMAESOptimizer:max(RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6459= org.apache.commons.math3.optimization.direct.CMAESOptimizer:FitnessFunction()	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6460= org.apache.commons.math3.optimization.direct.CMAESOptimizer:getSigma()	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6461= org.apache.commons.math3.optimization.direct.CMAESOptimizer:setValueRange(double)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6462= org.apache.commons.math3.optimization.direct.CMAESOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6463= org.apache.commons.math3.optimization.direct.CMAESOptimizer:CMAESOptimizer(int, double[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6464= org.apache.commons.math3.optimization.direct.CMAESOptimizer:updateEvolutionPaths(RealMatrix, RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6465= org.apache.commons.math3.optimization.direct.CMAESOptimizer:getStatisticsMeanHistory()	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6466= org.apache.commons.math3.optimization.direct.CMAESOptimizer:updateBD(double)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6467= org.apache.commons.math3.optimization.direct.CMAESOptimizer:log(RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6468= org.apache.commons.math3.optimization.direct.CMAESOptimizer.DoubleIndex:hashCode()	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6469= org.apache.commons.math3.optimization.direct.CMAESOptimizer:Sigma(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6470= org.apache.commons.math3.optimization.direct.CMAESOptimizer.DoubleIndex:DoubleIndex(double, int)	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6471= org.apache.commons.math3.optimization.direct.CMAESOptimizer:repair(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
6472= org.apache.commons.math3.ode.ParameterizedWrapper:ParameterizedWrapper(FirstOrderDifferentialEquations)	/src/main/java/org/apache/commons/math3/ode/ParameterizedWrapper.java
6473= org.apache.commons.math3.ode.ParameterizedWrapper:getDimension()	/src/main/java/org/apache/commons/math3/ode/ParameterizedWrapper.java
6474= org.apache.commons.math3.ode.ParameterizedWrapper:getParameter(String)	/src/main/java/org/apache/commons/math3/ode/ParameterizedWrapper.java
6475= org.apache.commons.math3.ode.ParameterizedWrapper:getParametersNames()	/src/main/java/org/apache/commons/math3/ode/ParameterizedWrapper.java
6476= org.apache.commons.math3.ode.ParameterizedWrapper:isSupported(String)	/src/main/java/org/apache/commons/math3/ode/ParameterizedWrapper.java
6477= org.apache.commons.math3.ode.ParameterizedWrapper:setParameter(String, double)	/src/main/java/org/apache/commons/math3/ode/ParameterizedWrapper.java
6478= org.apache.commons.math3.ode.ParameterizedWrapper:computeDerivatives(double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/ParameterizedWrapper.java
6479= org.apache.commons.math3.stat.descriptive.moment.ThirdMoment:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java
6480= org.apache.commons.math3.stat.descriptive.moment.ThirdMoment:copy(ThirdMoment, ThirdMoment)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java
6481= org.apache.commons.math3.stat.descriptive.moment.ThirdMoment:ThirdMoment()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java
6482= org.apache.commons.math3.stat.descriptive.moment.ThirdMoment:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java
6483= org.apache.commons.math3.stat.descriptive.moment.ThirdMoment:ThirdMoment(ThirdMoment)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java
6484= org.apache.commons.math3.stat.descriptive.moment.ThirdMoment:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java
6485= org.apache.commons.math3.stat.descriptive.moment.ThirdMoment:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java
6486= org.apache.commons.math3.analysis.MultivariateVectorFunction:value(double[])	/src/main/java/org/apache/commons/math3/analysis/MultivariateVectorFunction.java
6487= org.apache.commons.math3.distribution.UniformIntegerDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/UniformIntegerDistribution.java
6488= org.apache.commons.math3.distribution.UniformIntegerDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/UniformIntegerDistribution.java
6489= org.apache.commons.math3.distribution.UniformIntegerDistribution:UniformIntegerDistribution(int, int)	/src/main/java/org/apache/commons/math3/distribution/UniformIntegerDistribution.java
6490= org.apache.commons.math3.distribution.UniformIntegerDistribution:probability(int)	/src/main/java/org/apache/commons/math3/distribution/UniformIntegerDistribution.java
6491= org.apache.commons.math3.distribution.UniformIntegerDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/UniformIntegerDistribution.java
6492= org.apache.commons.math3.distribution.UniformIntegerDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/UniformIntegerDistribution.java
6493= org.apache.commons.math3.distribution.UniformIntegerDistribution:cumulativeProbability(int)	/src/main/java/org/apache/commons/math3/distribution/UniformIntegerDistribution.java
6494= org.apache.commons.math3.distribution.UniformIntegerDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/UniformIntegerDistribution.java
6495= org.apache.commons.math3.distribution.UniformIntegerDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/UniformIntegerDistribution.java
6496= org.apache.commons.math3.distribution.UniformIntegerDistribution:UniformIntegerDistribution(RandomGenerator, int, int)	/src/main/java/org/apache/commons/math3/distribution/UniformIntegerDistribution.java
6497= org.apache.commons.math3.random.RandomDataGenerator:initRan()	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6498= org.apache.commons.math3.random.RandomDataGenerator:nextZipf(int, double)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6499= org.apache.commons.math3.random.RandomDataGenerator:nextSample(Collection<?>, int)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6500= org.apache.commons.math3.random.RandomDataGenerator:nextF(double, double)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6501= org.apache.commons.math3.random.RandomDataGenerator:RandomDataGenerator(RandomGenerator)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6502= org.apache.commons.math3.random.RandomDataGenerator:nextSecureInt(int, int)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6503= org.apache.commons.math3.random.RandomDataGenerator:nextHypergeometric(int, int, int)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6504= org.apache.commons.math3.random.RandomDataGenerator:nextPermutation(int, int)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6505= org.apache.commons.math3.random.RandomDataGenerator:nextBinomial(int, double)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6506= org.apache.commons.math3.random.RandomDataGenerator:nextT(double)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6507= org.apache.commons.math3.random.RandomDataGenerator:RandomDataGenerator()	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6508= org.apache.commons.math3.random.RandomDataGenerator:getSecRan()	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6509= org.apache.commons.math3.random.RandomDataGenerator:nextPascal(int, double)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6510= org.apache.commons.math3.random.RandomDataGenerator:nextChiSquare(double)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6511= org.apache.commons.math3.random.RandomDataGenerator:nextInt(int, int)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6512= org.apache.commons.math3.random.RandomDataGenerator:nextLong(RandomGenerator, long)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6513= org.apache.commons.math3.random.RandomDataGenerator:nextUniform(double, double, boolean)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6514= org.apache.commons.math3.random.RandomDataGenerator:nextSecureHexString(int)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6515= org.apache.commons.math3.random.RandomDataGenerator:nextUniform(double, double)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6516= org.apache.commons.math3.random.RandomDataGenerator:setSecureAlgorithm(String, String)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6517= org.apache.commons.math3.random.RandomDataGenerator:nextExponential(double)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6518= org.apache.commons.math3.random.RandomDataGenerator:reSeedSecure(long)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6519= org.apache.commons.math3.random.RandomDataGenerator:nextPoisson(double)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6520= org.apache.commons.math3.random.RandomDataGenerator:nextSecureLong(long, long)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6521= org.apache.commons.math3.random.RandomDataGenerator:nextGamma(double, double)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6522= org.apache.commons.math3.random.RandomDataGenerator:nextCauchy(double, double)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6523= org.apache.commons.math3.random.RandomDataGenerator:reSeed(long)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6524= org.apache.commons.math3.random.RandomDataGenerator:nextGaussian(double, double)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6525= org.apache.commons.math3.random.RandomDataGenerator:nextBeta(double, double)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6526= org.apache.commons.math3.random.RandomDataGenerator:nextLong(long, long)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6527= org.apache.commons.math3.random.RandomDataGenerator:reSeedSecure()	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6528= org.apache.commons.math3.random.RandomDataGenerator:nextHexString(int)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6529= org.apache.commons.math3.random.RandomDataGenerator:reSeed()	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6530= org.apache.commons.math3.random.RandomDataGenerator:nextWeibull(double, double)	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6531= org.apache.commons.math3.random.RandomDataGenerator:getRandomGenerator()	/src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java
6532= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction:MicrosphereInterpolatingFunction(double[][], double[], int, int, UnitSphereRandomVectorGenerator)	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java
6533= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction:normal()	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java
6534= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction:illumination()	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java
6535= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction:MicrosphereSurfaceElement(double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java
6536= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction:store(double, Map.Entry<RealVector,Double>)	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java
6537= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.MicrosphereSurfaceElement:reset()	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java
6538= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction:cosAngle(RealVector, RealVector)	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java
6539= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.MicrosphereSurfaceElement:normal()	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java
6540= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction:value(double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java
6541= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.MicrosphereSurfaceElement:store(double, Map.Entry<RealVector,Double>)	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java
6542= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.MicrosphereSurfaceElement:MicrosphereSurfaceElement(double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java
6543= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction:reset()	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java
6544= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.MicrosphereSurfaceElement:illumination()	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java
6545= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction:sample()	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java
6546= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.MicrosphereSurfaceElement:sample()	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java
6547= org.apache.commons.math3.analysis.solvers.SecantSolver:SecantSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/SecantSolver.java
6548= org.apache.commons.math3.analysis.solvers.SecantSolver:doSolve()	/src/main/java/org/apache/commons/math3/analysis/solvers/SecantSolver.java
6549= org.apache.commons.math3.analysis.solvers.SecantSolver:SecantSolver(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/SecantSolver.java
6550= org.apache.commons.math3.analysis.solvers.SecantSolver:SecantSolver()	/src/main/java/org/apache/commons/math3/analysis/solvers/SecantSolver.java
6551= org.apache.commons.math3.stat.descriptive.rank.Min:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Min.java
6552= org.apache.commons.math3.stat.descriptive.rank.Min:Min(Min)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Min.java
6553= org.apache.commons.math3.stat.descriptive.rank.Min:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Min.java
6554= org.apache.commons.math3.stat.descriptive.rank.Min:Min()	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Min.java
6555= org.apache.commons.math3.stat.descriptive.rank.Min:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Min.java
6556= org.apache.commons.math3.stat.descriptive.rank.Min:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Min.java
6557= org.apache.commons.math3.stat.descriptive.rank.Min:copy(Min, Min)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Min.java
6558= org.apache.commons.math3.stat.descriptive.rank.Min:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Min.java
6559= org.apache.commons.math3.stat.descriptive.rank.Min:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Min.java
6560= org.apache.commons.math3.special.ErfTest:testErf0()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6561= org.apache.commons.math3.special.ErfTest:testErfInvInfinite()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6562= org.apache.commons.math3.special.ErfTest:testErf3291()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6563= org.apache.commons.math3.special.ErfTest:testTwoArgumentErf()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6564= org.apache.commons.math3.special.ErfTest:testErf2807()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6565= org.apache.commons.math3.special.ErfTest:testErf2576()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6566= org.apache.commons.math3.special.ErfTest:testLargeValues()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6567= org.apache.commons.math3.special.ErfTest:testErfcMaple()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6568= org.apache.commons.math3.special.ErfTest:testErfcInv()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6569= org.apache.commons.math3.special.ErfTest:testErfcGnu()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6570= org.apache.commons.math3.special.ErfTest:testErfcInvNaN()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6571= org.apache.commons.math3.special.ErfTest:testErfInvNaN()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6572= org.apache.commons.math3.special.ErfTest:testErfInv()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6573= org.apache.commons.math3.special.ErfTest:testErfGnu()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6574= org.apache.commons.math3.special.ErfTest:testErfcInvInfinite()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6575= org.apache.commons.math3.special.ErfTest:testErf1960()	/src/test/java/org/apache/commons/math3/special/ErfTest.java
6576= org.apache.commons.math3.optimization.PointVectorValuePair:getValue()	/src/main/java/org/apache/commons/math3/optimization/PointVectorValuePair.java
6577= org.apache.commons.math3.optimization.PointVectorValuePair:PointVectorValuePair(double[], double[], boolean)	/src/main/java/org/apache/commons/math3/optimization/PointVectorValuePair.java
6578= org.apache.commons.math3.optimization.PointVectorValuePair:getPointRef()	/src/main/java/org/apache/commons/math3/optimization/PointVectorValuePair.java
6579= org.apache.commons.math3.optimization.PointVectorValuePair:getValueRef()	/src/main/java/org/apache/commons/math3/optimization/PointVectorValuePair.java
6580= org.apache.commons.math3.optimization.PointVectorValuePair:PointVectorValuePair(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/PointVectorValuePair.java
6581= org.apache.commons.math3.optimization.PointVectorValuePair:getPoint()	/src/main/java/org/apache/commons/math3/optimization/PointVectorValuePair.java
6582= org.apache.commons.math3.optimization.PointVectorValuePair:DataTransferObject(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/PointVectorValuePair.java
6583= org.apache.commons.math3.optimization.PointVectorValuePair.DataTransferObject:DataTransferObject(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/PointVectorValuePair.java
6584= org.apache.commons.math3.optimization.PointVectorValuePair:readResolve()	/src/main/java/org/apache/commons/math3/optimization/PointVectorValuePair.java
6585= org.apache.commons.math3.optimization.PointVectorValuePair:writeReplace()	/src/main/java/org/apache/commons/math3/optimization/PointVectorValuePair.java
6586= org.apache.commons.math3.optimization.PointVectorValuePair.DataTransferObject:readResolve()	/src/main/java/org/apache/commons/math3/optimization/PointVectorValuePair.java
6587= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2D:generate(Collection<Vector2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2D.java
6588= org.apache.commons.math3.fraction.BigFraction:getDenominatorAsInt()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6589= org.apache.commons.math3.fraction.BigFraction:subtract(int)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6590= org.apache.commons.math3.fraction.BigFraction:getNumeratorAsInt()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6591= org.apache.commons.math3.fraction.BigFraction:add(BigFraction)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6592= org.apache.commons.math3.fraction.BigFraction:divide(int)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6593= org.apache.commons.math3.fraction.BigFraction:BigFraction(int, int)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6594= org.apache.commons.math3.fraction.BigFraction:divide(BigInteger)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6595= org.apache.commons.math3.fraction.BigFraction:pow(double)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6596= org.apache.commons.math3.fraction.BigFraction:subtract(BigInteger)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6597= org.apache.commons.math3.fraction.BigFraction:equals(Object)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6598= org.apache.commons.math3.fraction.BigFraction:subtract(long)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6599= org.apache.commons.math3.fraction.BigFraction:subtract(BigFraction)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6600= org.apache.commons.math3.fraction.BigFraction:abs()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6601= org.apache.commons.math3.fraction.BigFraction:compareTo(BigFraction)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6602= org.apache.commons.math3.fraction.BigFraction:negate()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6603= org.apache.commons.math3.fraction.BigFraction:multiply(BigInteger)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6604= org.apache.commons.math3.fraction.BigFraction:multiply(int)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6605= org.apache.commons.math3.fraction.BigFraction:BigFraction(long, long)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6606= org.apache.commons.math3.fraction.BigFraction:getField()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6607= org.apache.commons.math3.fraction.BigFraction:getDenominatorAsLong()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6608= org.apache.commons.math3.fraction.BigFraction:getNumerator()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6609= org.apache.commons.math3.fraction.BigFraction:bigDecimalValue()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6610= org.apache.commons.math3.fraction.BigFraction:multiply(long)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6611= org.apache.commons.math3.fraction.BigFraction:multiply(BigFraction)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6612= org.apache.commons.math3.fraction.BigFraction:bigDecimalValue(int, int)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6613= org.apache.commons.math3.fraction.BigFraction:BigFraction(int)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6614= org.apache.commons.math3.fraction.BigFraction:floatValue()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6615= org.apache.commons.math3.fraction.BigFraction:BigFraction(double)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6616= org.apache.commons.math3.fraction.BigFraction:toString()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6617= org.apache.commons.math3.fraction.BigFraction:add(BigInteger)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6618= org.apache.commons.math3.fraction.BigFraction:BigFraction(BigInteger)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6619= org.apache.commons.math3.fraction.BigFraction:reduce()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6620= org.apache.commons.math3.fraction.BigFraction:BigFraction(double, double, int)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6621= org.apache.commons.math3.fraction.BigFraction:intValue()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6622= org.apache.commons.math3.fraction.BigFraction:BigFraction(long)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6623= org.apache.commons.math3.fraction.BigFraction:getDenominator()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6624= org.apache.commons.math3.fraction.BigFraction:add(int)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6625= org.apache.commons.math3.fraction.BigFraction:BigFraction(double, double, int, int)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6626= org.apache.commons.math3.fraction.BigFraction:bigDecimalValue(int)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6627= org.apache.commons.math3.fraction.BigFraction:pow(long)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6628= org.apache.commons.math3.fraction.BigFraction:add(long)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6629= org.apache.commons.math3.fraction.BigFraction:hashCode()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6630= org.apache.commons.math3.fraction.BigFraction:percentageValue()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6631= org.apache.commons.math3.fraction.BigFraction:longValue()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6632= org.apache.commons.math3.fraction.BigFraction:pow(BigInteger)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6633= org.apache.commons.math3.fraction.BigFraction:getReducedFraction(int, int)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6634= org.apache.commons.math3.fraction.BigFraction:BigFraction(double, int)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6635= org.apache.commons.math3.fraction.BigFraction:doubleValue()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6636= org.apache.commons.math3.fraction.BigFraction:BigFraction(BigInteger, BigInteger)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6637= org.apache.commons.math3.fraction.BigFraction:reciprocal()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6638= org.apache.commons.math3.fraction.BigFraction:getNumeratorAsLong()	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6639= org.apache.commons.math3.fraction.BigFraction:divide(BigFraction)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6640= org.apache.commons.math3.fraction.BigFraction:pow(int)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6641= org.apache.commons.math3.fraction.BigFraction:divide(long)	/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
6642= org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java
6643= org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:store(PAIR)	/src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java
6644= org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:BaseMultiStartMultivariateOptimizer(BaseMultivariateOptimizer<PAIR>, int, RandomVectorGenerator)	/src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java
6645= org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:getEvaluations()	/src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java
6646= org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:optimize(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java
6647= org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:getOptima()	/src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java
6648= org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:clear()	/src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java
6649= org.apache.commons.math3.linear.SymmLQ:solveInPlace(RealLinearOperator, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6650= org.apache.commons.math3.linear.SymmLQ:getCheck()	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6651= org.apache.commons.math3.linear.SymmLQ:SymmLQ(IterationManager, double, boolean)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6652= org.apache.commons.math3.linear.SymmLQ:solve(RealLinearOperator, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6653= org.apache.commons.math3.linear.SymmLQ.State:updateNorms()	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6654= org.apache.commons.math3.linear.SymmLQ:betaEqualsZero()	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6655= org.apache.commons.math3.linear.SymmLQ:solve(RealLinearOperator, RealLinearOperator, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6656= org.apache.commons.math3.linear.SymmLQ:getNormOfResidual()	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6657= org.apache.commons.math3.linear.SymmLQ:solve(RealLinearOperator, RealLinearOperator, RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6658= org.apache.commons.math3.linear.SymmLQ:solveInPlace(RealLinearOperator, RealLinearOperator, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6659= org.apache.commons.math3.linear.SymmLQ:throwNPDLOException(RealLinearOperator, RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6660= org.apache.commons.math3.linear.SymmLQ:solve(RealLinearOperator, RealLinearOperator, RealVector, boolean, double)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6661= org.apache.commons.math3.linear.SymmLQ:solve(RealLinearOperator, RealVector, boolean, double)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6662= org.apache.commons.math3.linear.SymmLQ.State:update()	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6663= org.apache.commons.math3.linear.SymmLQ:update()	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6664= org.apache.commons.math3.linear.SymmLQ.State:init()	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6665= org.apache.commons.math3.linear.SymmLQ:updateNorms()	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6666= org.apache.commons.math3.linear.SymmLQ.State:hasConverged()	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6667= org.apache.commons.math3.linear.SymmLQ.State:State(RealLinearOperator, RealLinearOperator, RealVector, boolean, double, double, boolean)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6668= org.apache.commons.math3.linear.SymmLQ.State:daxpbypz(double, RealVector, double, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6669= org.apache.commons.math3.linear.SymmLQ:SymmLQ(int, double, boolean)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6670= org.apache.commons.math3.linear.SymmLQ:solveInPlace(RealLinearOperator, RealLinearOperator, RealVector, RealVector, boolean, double)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6671= org.apache.commons.math3.linear.SymmLQ.State:throwNPDLOException(RealLinearOperator, RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6672= org.apache.commons.math3.linear.SymmLQ:solve(RealLinearOperator, RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6673= org.apache.commons.math3.linear.SymmLQ.State:<clinit0>	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6674= org.apache.commons.math3.linear.SymmLQ.State:daxpy(double, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6675= org.apache.commons.math3.linear.SymmLQ:<clinit0>	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6676= org.apache.commons.math3.linear.SymmLQ:hasConverged()	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6677= org.apache.commons.math3.linear.SymmLQ:State(RealLinearOperator, RealLinearOperator, RealVector, boolean, double, double, boolean)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6678= org.apache.commons.math3.linear.SymmLQ.State:checkSymmetry(RealLinearOperator, RealVector, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6679= org.apache.commons.math3.linear.SymmLQ:refineSolution(RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6680= org.apache.commons.math3.linear.SymmLQ:init()	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6681= org.apache.commons.math3.linear.SymmLQ.State:getNormOfResidual()	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6682= org.apache.commons.math3.linear.SymmLQ:checkSymmetry(RealLinearOperator, RealVector, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6683= org.apache.commons.math3.linear.SymmLQ.State:refineSolution(RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6684= org.apache.commons.math3.linear.SymmLQ:bEqualsNullVector()	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6685= org.apache.commons.math3.linear.SymmLQ.State:bEqualsNullVector()	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6686= org.apache.commons.math3.linear.SymmLQ:daxpbypz(double, RealVector, double, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6687= org.apache.commons.math3.linear.SymmLQ:daxpy(double, RealVector, RealVector)	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6688= org.apache.commons.math3.linear.SymmLQ.State:betaEqualsZero()	/src/main/java/org/apache/commons/math3/linear/SymmLQ.java
6689= org.apache.commons.math3.geometry.spherical.twod.Sphere2D:Sphere2D()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Sphere2D.java
6690= org.apache.commons.math3.geometry.spherical.twod.Sphere2D:getDimension()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Sphere2D.java
6691= org.apache.commons.math3.geometry.spherical.twod.Sphere2D:getInstance()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Sphere2D.java
6692= org.apache.commons.math3.geometry.spherical.twod.Sphere2D:getSubSpace()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Sphere2D.java
6693= org.apache.commons.math3.geometry.spherical.twod.Sphere2D:readResolve()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/Sphere2D.java
6694= org.apache.commons.math3.genetics.FixedElapsedTime:isSatisfied(Population)	/src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java
6695= org.apache.commons.math3.genetics.FixedElapsedTime:FixedElapsedTime(long)	/src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java
6696= org.apache.commons.math3.genetics.FixedElapsedTime:FixedElapsedTime(long, TimeUnit)	/src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java
6697= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testKirby2()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6698= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testRedundantEquations()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6699= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:LinearProblem(double[][], double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6700= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6701= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testCircleFittingBadInit()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6702= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testCircleFittingGoodInit()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6703= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest.LinearProblem:LinearProblem(double[][], double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6704= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testInconsistentEquations()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6705= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest.LinearProblem:getModelFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6706= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest.LinearProblem:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6707= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest.LinearProblem:getTarget()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6708= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testInconsistentSizes2()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6709= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testGetIterations()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6710= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:getModelFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6711= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6712= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testTrivial()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6713= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testOneSet()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6714= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testInconsistentSizes1()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6715= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testNonInvertible()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6716= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testIllConditioned()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6717= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testMoreEstimatedParametersUnsorted()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6718= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testCircleFitting()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6719= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testHahn1()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6720= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testTwoSets()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6721= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:createOptimizer()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6722= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:doTestStRD(StatisticalReferenceDataset, double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6723= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:getTarget()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6724= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testNoDependency()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6725= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testMoreEstimatedParametersSimple()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6726= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest.LinearProblem:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6727= org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest:testQRColumnsPermutation()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerAbstractTest.java
6728= org.apache.commons.math3.optim.SimplePointChecker:SimplePointChecker(double, double)	/src/main/java/org/apache/commons/math3/optim/SimplePointChecker.java
6729= org.apache.commons.math3.optim.SimplePointChecker:SimplePointChecker(double, double, int)	/src/main/java/org/apache/commons/math3/optim/SimplePointChecker.java
6730= org.apache.commons.math3.optim.SimplePointChecker:converged(int, PAIR, PAIR)	/src/main/java/org/apache/commons/math3/optim/SimplePointChecker.java
6731= org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunction:value(long)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunction.java
6732= org.apache.commons.math3.genetics.OrderedCrossover:crossover(Chromosome, Chromosome)	/src/main/java/org/apache/commons/math3/genetics/OrderedCrossover.java
6733= org.apache.commons.math3.genetics.OrderedCrossover:mate(AbstractListChromosome<T>, AbstractListChromosome<T>)	/src/main/java/org/apache/commons/math3/genetics/OrderedCrossover.java
6734= org.apache.commons.math3.random.GaussianRandomGeneratorTest:testMeanAndStandardDeviation()	/src/test/java/org/apache/commons/math3/random/GaussianRandomGeneratorTest.java
6735= org.apache.commons.math3.stat.descriptive.rank.Percentile:evaluate(double[], int, int, double)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6736= org.apache.commons.math3.stat.descriptive.rank.Percentile:evaluate(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6737= org.apache.commons.math3.stat.descriptive.rank.Percentile:getQuantile()	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6738= org.apache.commons.math3.stat.descriptive.rank.Percentile:Percentile()	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6739= org.apache.commons.math3.stat.descriptive.rank.Percentile:insertionSort(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6740= org.apache.commons.math3.stat.descriptive.rank.Percentile:Percentile(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6741= org.apache.commons.math3.stat.descriptive.rank.Percentile:copy(Percentile, Percentile)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6742= org.apache.commons.math3.stat.descriptive.rank.Percentile:Percentile(Percentile)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6743= org.apache.commons.math3.stat.descriptive.rank.Percentile:setData(double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6744= org.apache.commons.math3.stat.descriptive.rank.Percentile:select(double[], int[], int)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6745= org.apache.commons.math3.stat.descriptive.rank.Percentile:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6746= org.apache.commons.math3.stat.descriptive.rank.Percentile:setQuantile(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6747= org.apache.commons.math3.stat.descriptive.rank.Percentile:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6748= org.apache.commons.math3.stat.descriptive.rank.Percentile:medianOf3(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6749= org.apache.commons.math3.stat.descriptive.rank.Percentile:evaluate(double[], double)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6750= org.apache.commons.math3.stat.descriptive.rank.Percentile:partition(double[], int, int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6751= org.apache.commons.math3.stat.descriptive.rank.Percentile:setData(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java
6752= org.apache.commons.math3.random.MersenneTwister:setSeed(int)	/src/main/java/org/apache/commons/math3/random/MersenneTwister.java
6753= org.apache.commons.math3.random.MersenneTwister:next(int)	/src/main/java/org/apache/commons/math3/random/MersenneTwister.java
6754= org.apache.commons.math3.random.MersenneTwister:MersenneTwister()	/src/main/java/org/apache/commons/math3/random/MersenneTwister.java
6755= org.apache.commons.math3.random.MersenneTwister:MersenneTwister(int)	/src/main/java/org/apache/commons/math3/random/MersenneTwister.java
6756= org.apache.commons.math3.random.MersenneTwister:setSeed(int[])	/src/main/java/org/apache/commons/math3/random/MersenneTwister.java
6757= org.apache.commons.math3.random.MersenneTwister:MersenneTwister(long)	/src/main/java/org/apache/commons/math3/random/MersenneTwister.java
6758= org.apache.commons.math3.random.MersenneTwister:setSeed(long)	/src/main/java/org/apache/commons/math3/random/MersenneTwister.java
6759= org.apache.commons.math3.random.MersenneTwister:MersenneTwister(int[])	/src/main/java/org/apache/commons/math3/random/MersenneTwister.java
6760= org.apache.commons.math3.geometry.partitioning.SubHyperplane:reunite(SubHyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/SubHyperplane.java
6761= org.apache.commons.math3.geometry.partitioning.SubHyperplane:copySelf()	/src/main/java/org/apache/commons/math3/geometry/partitioning/SubHyperplane.java
6762= org.apache.commons.math3.geometry.partitioning.SubHyperplane:getMinus()	/src/main/java/org/apache/commons/math3/geometry/partitioning/SubHyperplane.java
6763= org.apache.commons.math3.geometry.partitioning.SubHyperplane:getHyperplane()	/src/main/java/org/apache/commons/math3/geometry/partitioning/SubHyperplane.java
6764= org.apache.commons.math3.geometry.partitioning.SubHyperplane.SplitSubHyperplane:getMinus()	/src/main/java/org/apache/commons/math3/geometry/partitioning/SubHyperplane.java
6765= org.apache.commons.math3.geometry.partitioning.SubHyperplane.SplitSubHyperplane:SplitSubHyperplane(SubHyperplane<U>, SubHyperplane<U>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/SubHyperplane.java
6766= org.apache.commons.math3.geometry.partitioning.SubHyperplane:split(Hyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/SubHyperplane.java
6767= org.apache.commons.math3.geometry.partitioning.SubHyperplane.SplitSubHyperplane:getPlus()	/src/main/java/org/apache/commons/math3/geometry/partitioning/SubHyperplane.java
6768= org.apache.commons.math3.geometry.partitioning.SubHyperplane:side(Hyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/SubHyperplane.java
6769= org.apache.commons.math3.geometry.partitioning.SubHyperplane:SplitSubHyperplane(SubHyperplane<U>, SubHyperplane<U>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/SubHyperplane.java
6770= org.apache.commons.math3.geometry.partitioning.SubHyperplane:isEmpty()	/src/main/java/org/apache/commons/math3/geometry/partitioning/SubHyperplane.java
6771= org.apache.commons.math3.geometry.partitioning.SubHyperplane:getSize()	/src/main/java/org/apache/commons/math3/geometry/partitioning/SubHyperplane.java
6772= org.apache.commons.math3.geometry.partitioning.SubHyperplane:getPlus()	/src/main/java/org/apache/commons/math3/geometry/partitioning/SubHyperplane.java
6773= org.apache.commons.math3.stat.descriptive.moment.FourthMoment:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/FourthMoment.java
6774= org.apache.commons.math3.stat.descriptive.moment.FourthMoment:FourthMoment(FourthMoment)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/FourthMoment.java
6775= org.apache.commons.math3.stat.descriptive.moment.FourthMoment:FourthMoment()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/FourthMoment.java
6776= org.apache.commons.math3.stat.descriptive.moment.FourthMoment:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/FourthMoment.java
6777= org.apache.commons.math3.stat.descriptive.moment.FourthMoment:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/FourthMoment.java
6778= org.apache.commons.math3.stat.descriptive.moment.FourthMoment:copy(FourthMoment, FourthMoment)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/FourthMoment.java
6779= org.apache.commons.math3.stat.descriptive.moment.FourthMoment:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/FourthMoment.java
6780= org.apache.commons.math3.analysis.function.Logistic.Parametric:gradient(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Logistic.java
6781= org.apache.commons.math3.analysis.function.Logistic:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Logistic.java
6782= org.apache.commons.math3.analysis.function.Logistic:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Logistic.java
6783= org.apache.commons.math3.analysis.function.Logistic:value(double, double, double, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Logistic.java
6784= org.apache.commons.math3.analysis.function.Logistic:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Logistic.java
6785= org.apache.commons.math3.analysis.function.Logistic:gradient(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Logistic.java
6786= org.apache.commons.math3.analysis.function.Logistic:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Logistic.java
6787= org.apache.commons.math3.analysis.function.Logistic:Logistic(double, double, double, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Logistic.java
6788= org.apache.commons.math3.analysis.function.Logistic.Parametric:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Logistic.java
6789= org.apache.commons.math3.analysis.function.Logistic.Parametric:validateParameters(double[])	/src/main/java/org/apache/commons/math3/analysis/function/Logistic.java
6790= org.apache.commons.math3.analysis.function.Logistic:validateParameters(double[])	/src/main/java/org/apache/commons/math3/analysis/function/Logistic.java
6791= org.apache.commons.math3.optimization.univariate.BracketFinder:getLo()	/src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java
6792= org.apache.commons.math3.optimization.univariate.BracketFinder:getHi()	/src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java
6793= org.apache.commons.math3.optimization.univariate.BracketFinder:getFMid()	/src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java
6794= org.apache.commons.math3.optimization.univariate.BracketFinder:getFLo()	/src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java
6795= org.apache.commons.math3.optimization.univariate.BracketFinder:getMid()	/src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java
6796= org.apache.commons.math3.optimization.univariate.BracketFinder:BracketFinder()	/src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java
6797= org.apache.commons.math3.optimization.univariate.BracketFinder:BracketFinder(double, int)	/src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java
6798= org.apache.commons.math3.optimization.univariate.BracketFinder:getFHi()	/src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java
6799= org.apache.commons.math3.optimization.univariate.BracketFinder:search(UnivariateFunction, GoalType, double, double)	/src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java
6800= org.apache.commons.math3.optimization.univariate.BracketFinder:getMaxEvaluations()	/src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java
6801= org.apache.commons.math3.optimization.univariate.BracketFinder:getEvaluations()	/src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java
6802= org.apache.commons.math3.optimization.univariate.BracketFinder:eval(UnivariateFunction, double)	/src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java
6803= org.apache.commons.math3.transform.FastSineTransformer:transform(double[], TransformType)	/src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java
6804= org.apache.commons.math3.transform.FastSineTransformer:transform(UnivariateFunction, double, double, int, TransformType)	/src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java
6805= org.apache.commons.math3.transform.FastSineTransformer:FastSineTransformer(DstNormalization)	/src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java
6806= org.apache.commons.math3.transform.FastSineTransformer:fst(double[])	/src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java
6807= org.apache.commons.math3.analysis.differentiation.GradientFunction:GradientFunction(MultivariateDifferentiableFunction)	/src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java
6808= org.apache.commons.math3.analysis.differentiation.GradientFunction:value(double[])	/src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java
6809= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.NoBoundsMapper:boundedToUnbounded(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6810= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.UpperBoundMapper:UpperBoundMapper(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6811= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.UpperBoundMapper:unboundedToBounded(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6812= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:UpperBoundMapper(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6813= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:LowerUpperBoundMapper(double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6814= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.NoBoundsMapper:unboundedToBounded(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6815= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.NoBoundsMapper:NoBoundsMapper()	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6816= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.LowerUpperBoundMapper:LowerUpperBoundMapper(double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6817= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:LowerBoundMapper(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6818= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.LowerBoundMapper:boundedToUnbounded(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6819= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.LowerBoundMapper:unboundedToBounded(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6820= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.LowerBoundMapper:LowerBoundMapper(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6821= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:boundedToUnbounded(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6822= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.LowerUpperBoundMapper:unboundedToBounded(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6823= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:MultivariateFunctionMappingAdapter(MultivariateFunction, double[], double[])	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6824= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:NoBoundsMapper()	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6825= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.Mapper:unboundedToBounded(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6826= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.Mapper:boundedToUnbounded(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6827= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:unboundedToBounded(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6828= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.UpperBoundMapper:boundedToUnbounded(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6829= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.LowerUpperBoundMapper:boundedToUnbounded(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6830= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:boundedToUnbounded(double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6831= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:unboundedToBounded(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6832= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:value(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java
6833= org.apache.commons.math3.linear.LUDecomposition:getL()	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6834= org.apache.commons.math3.linear.LUDecomposition:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6835= org.apache.commons.math3.linear.LUDecomposition:getP()	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6836= org.apache.commons.math3.linear.LUDecomposition.Solver:solve(RealVector)	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6837= org.apache.commons.math3.linear.LUDecomposition:getSolver()	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6838= org.apache.commons.math3.linear.LUDecomposition.Solver:solve(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6839= org.apache.commons.math3.linear.LUDecomposition:getDeterminant()	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6840= org.apache.commons.math3.linear.LUDecomposition:LUDecomposition(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6841= org.apache.commons.math3.linear.LUDecomposition.Solver:getInverse()	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6842= org.apache.commons.math3.linear.LUDecomposition:getInverse()	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6843= org.apache.commons.math3.linear.LUDecomposition.Solver:isNonSingular()	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6844= org.apache.commons.math3.linear.LUDecomposition:solve(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6845= org.apache.commons.math3.linear.LUDecomposition:solve(RealVector)	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6846= org.apache.commons.math3.linear.LUDecomposition:Solver(double[][], int[], boolean)	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6847= org.apache.commons.math3.linear.LUDecomposition:getU()	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6848= org.apache.commons.math3.linear.LUDecomposition:getPivot()	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6849= org.apache.commons.math3.linear.LUDecomposition.Solver:Solver(double[][], int[], boolean)	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6850= org.apache.commons.math3.linear.LUDecomposition:LUDecomposition(RealMatrix, double)	/src/main/java/org/apache/commons/math3/linear/LUDecomposition.java
6851= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:fit(MixtureMultivariateNormalDistribution)	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6852= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.DataRow:equals(Object)	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6853= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:getLogLikelihood()	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6854= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.DataRow:compareTo(DataRow)	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6855= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:estimate(double[][], int)	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6856= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:getRow()	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6857= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.DataRow:DataRow(double[])	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6858= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.DataRow:hashCode()	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6859= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:compareTo(DataRow)	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6860= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:equals(Object)	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6861= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:DataRow(double[])	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6862= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.DataRow:getRow()	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6863= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:MultivariateNormalMixtureExpectationMaximization(double[][])	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6864= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:fit(MixtureMultivariateNormalDistribution, int, double)	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6865= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:getFittedModel()	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6866= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:hashCode()	/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java
6867= org.apache.commons.math3.util.Precision:Precision()	/src/main/java/org/apache/commons/math3/util/Precision.java
6868= org.apache.commons.math3.util.Precision:representableDelta(double, double)	/src/main/java/org/apache/commons/math3/util/Precision.java
6869= org.apache.commons.math3.util.Precision:equals(float, float)	/src/main/java/org/apache/commons/math3/util/Precision.java
6870= org.apache.commons.math3.util.Precision:equalsIncludingNaN(float, float, float)	/src/main/java/org/apache/commons/math3/util/Precision.java
6871= org.apache.commons.math3.util.Precision:compareTo(double, double, double)	/src/main/java/org/apache/commons/math3/util/Precision.java
6872= org.apache.commons.math3.util.Precision:equalsWithRelativeTolerance(double, double, double)	/src/main/java/org/apache/commons/math3/util/Precision.java
6873= org.apache.commons.math3.util.Precision:roundUnscaled(double, double, int)	/src/main/java/org/apache/commons/math3/util/Precision.java
6874= org.apache.commons.math3.util.Precision:equalsIncludingNaN(double, double, double)	/src/main/java/org/apache/commons/math3/util/Precision.java
6875= org.apache.commons.math3.util.Precision:equalsIncludingNaN(float, float)	/src/main/java/org/apache/commons/math3/util/Precision.java
6876= org.apache.commons.math3.util.Precision:equals(double, double, double)	/src/main/java/org/apache/commons/math3/util/Precision.java
6877= org.apache.commons.math3.util.Precision:round(double, int, int)	/src/main/java/org/apache/commons/math3/util/Precision.java
6878= org.apache.commons.math3.util.Precision:round(float, int)	/src/main/java/org/apache/commons/math3/util/Precision.java
6879= org.apache.commons.math3.util.Precision:round(float, int, int)	/src/main/java/org/apache/commons/math3/util/Precision.java
6880= org.apache.commons.math3.util.Precision:equals(double, double, int)	/src/main/java/org/apache/commons/math3/util/Precision.java
6881= org.apache.commons.math3.util.Precision:equalsIncludingNaN(float, float, int)	/src/main/java/org/apache/commons/math3/util/Precision.java
6882= org.apache.commons.math3.util.Precision:equalsIncludingNaN(double, double)	/src/main/java/org/apache/commons/math3/util/Precision.java
6883= org.apache.commons.math3.util.Precision:<clinit0>	/src/main/java/org/apache/commons/math3/util/Precision.java
6884= org.apache.commons.math3.util.Precision:round(double, int)	/src/main/java/org/apache/commons/math3/util/Precision.java
6885= org.apache.commons.math3.util.Precision:compareTo(double, double, int)	/src/main/java/org/apache/commons/math3/util/Precision.java
6886= org.apache.commons.math3.util.Precision:equals(float, float, int)	/src/main/java/org/apache/commons/math3/util/Precision.java
6887= org.apache.commons.math3.util.Precision:equals(double, double)	/src/main/java/org/apache/commons/math3/util/Precision.java
6888= org.apache.commons.math3.util.Precision:equals(float, float, float)	/src/main/java/org/apache/commons/math3/util/Precision.java
6889= org.apache.commons.math3.util.Precision:equalsIncludingNaN(double, double, int)	/src/main/java/org/apache/commons/math3/util/Precision.java
6890= org.apache.commons.math3.special.BetaTest:testLogBetaNegativePositive()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6891= org.apache.commons.math3.special.BetaTest:testLogBetaPositiveNegative()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6892= org.apache.commons.math3.special.BetaTest:testLogBetaPositiveNan()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6893= org.apache.commons.math3.special.BetaTest:logGammaSum(double, double)	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6894= org.apache.commons.math3.special.BetaTest:testRegularizedBetaNegativePositivePositive()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6895= org.apache.commons.math3.special.BetaTest:testLogBeta(double, double, double)	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6896= org.apache.commons.math3.special.BetaTest:testRegularizedBetaPositiveNegativePositive()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6897= org.apache.commons.math3.special.BetaTest:testRegularizedBetaNanPositivePositive()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6898= org.apache.commons.math3.special.BetaTest:testLogGammaMinusLogGammaSumPrecondition2()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6899= org.apache.commons.math3.special.BetaTest:testLogBetaNanPositive()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6900= org.apache.commons.math3.special.BetaTest:testLogBetaPositiveZero()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6901= org.apache.commons.math3.special.BetaTest:testLogGammaMinusLogGammaSumPrecondition1()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6902= org.apache.commons.math3.special.BetaTest:testRegularizedBetaZeroPositivePositive()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6903= org.apache.commons.math3.special.BetaTest:testRegularizedBetaPositivePositiveZero()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6904= org.apache.commons.math3.special.BetaTest:<clinit0>	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6905= org.apache.commons.math3.special.BetaTest:testLogBetaPositivePositive()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6906= org.apache.commons.math3.special.BetaTest:testRegularizedBetaPositiveNanPositive()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6907= org.apache.commons.math3.special.BetaTest:logGammaMinusLogGammaSum(double, double)	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6908= org.apache.commons.math3.special.BetaTest:testRegularizedBetaTinyArgument()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6909= org.apache.commons.math3.special.BetaTest:testRegularizedBetaPositiveZeroPositive()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6910= org.apache.commons.math3.special.BetaTest:testLogBetaZeroPositive()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6911= org.apache.commons.math3.special.BetaTest:testLogGammaSumPrecondition1()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6912= org.apache.commons.math3.special.BetaTest:testLogGammaSumPrecondition2()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6913= org.apache.commons.math3.special.BetaTest:sumDeltaMinusDeltaSum(double, double)	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6914= org.apache.commons.math3.special.BetaTest:testLogGammaSumPrecondition3()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6915= org.apache.commons.math3.special.BetaTest:testLogGammaSumPrecondition4()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6916= org.apache.commons.math3.special.BetaTest:testRegularizedBetaPositivePositivePositive()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6917= org.apache.commons.math3.special.BetaTest:testRegularizedBeta(double, double, double, double)	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6918= org.apache.commons.math3.special.BetaTest:testMath1067()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6919= org.apache.commons.math3.special.BetaTest:testLogBeta()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6920= org.apache.commons.math3.special.BetaTest:testSumDeltaMinusDeltaSum()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6921= org.apache.commons.math3.special.BetaTest:testLogGammaMinusLogGammaSum()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6922= org.apache.commons.math3.special.BetaTest:testSumDeltaMinusDeltaSumPrecondition1()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6923= org.apache.commons.math3.special.BetaTest:testSumDeltaMinusDeltaSumPrecondition2()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6924= org.apache.commons.math3.special.BetaTest:testRegularizedBetaPositivePositiveNegative()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6925= org.apache.commons.math3.special.BetaTest:testRegularizedBetaPositivePositiveNan()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6926= org.apache.commons.math3.special.BetaTest:testLogGammaSum()	/src/test/java/org/apache/commons/math3/special/BetaTest.java
6927= org.apache.commons.math3.stat.regression.ModelSpecificationException:ModelSpecificationException(Localizable, Object)	/src/main/java/org/apache/commons/math3/stat/regression/ModelSpecificationException.java
6928= org.apache.commons.math3.linear.MatrixUtils:serializeRealMatrix(RealMatrix, ObjectOutputStream)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6929= org.apache.commons.math3.linear.MatrixUtils:createColumnRealMatrix(double[])	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6930= org.apache.commons.math3.linear.MatrixUtils:getConvertedMatrix()	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6931= org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(AnyMatrix, int, int)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6932= org.apache.commons.math3.linear.MatrixUtils:createRealDiagonalMatrix(double[])	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6933= org.apache.commons.math3.linear.MatrixUtils.BigFractionMatrixConverter:start(int, int, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6934= org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(AnyMatrix, int)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6935= org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(AnyMatrix, int)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6936= org.apache.commons.math3.linear.MatrixUtils:deserializeRealMatrix(Object, String, ObjectInputStream)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6937= org.apache.commons.math3.linear.MatrixUtils:createFieldIdentityMatrix(Field<T>, int)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6938= org.apache.commons.math3.linear.MatrixUtils:inverse(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6939= org.apache.commons.math3.linear.MatrixUtils:solveLowerTriangularSystem(RealMatrix, RealVector)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6940= org.apache.commons.math3.linear.MatrixUtils:checkSubtractionCompatible(AnyMatrix, AnyMatrix)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6941= org.apache.commons.math3.linear.MatrixUtils:checkMultiplicationCompatible(AnyMatrix, AnyMatrix)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6942= org.apache.commons.math3.linear.MatrixUtils:start(int, int, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6943= org.apache.commons.math3.linear.MatrixUtils:FractionMatrixConverter()	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6944= org.apache.commons.math3.linear.MatrixUtils:checkSymmetric(RealMatrix, double)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6945= org.apache.commons.math3.linear.MatrixUtils:createRealVector(double[])	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6946= org.apache.commons.math3.linear.MatrixUtils:visit(int, int, Fraction)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6947= org.apache.commons.math3.linear.MatrixUtils:createRowRealMatrix(double[])	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6948= org.apache.commons.math3.linear.MatrixUtils:createFieldMatrix(T[][])	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6949= org.apache.commons.math3.linear.MatrixUtils.BigFractionMatrixConverter:getConvertedMatrix()	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6950= org.apache.commons.math3.linear.MatrixUtils:fractionMatrixToRealMatrix(FieldMatrix<Fraction>)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6951= org.apache.commons.math3.linear.MatrixUtils:deserializeRealVector(Object, String, ObjectInputStream)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6952= org.apache.commons.math3.linear.MatrixUtils:createRowFieldMatrix(T[])	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6953= org.apache.commons.math3.linear.MatrixUtils:checkAdditionCompatible(AnyMatrix, AnyMatrix)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6954= org.apache.commons.math3.linear.MatrixUtils:inverse(RealMatrix, double)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6955= org.apache.commons.math3.linear.MatrixUtils:isSymmetric(RealMatrix, double)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6956= org.apache.commons.math3.linear.MatrixUtils:MatrixUtils()	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6957= org.apache.commons.math3.linear.MatrixUtils:checkSubMatrixIndex(AnyMatrix, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6958= org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(double[][])	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6959= org.apache.commons.math3.linear.MatrixUtils:bigFractionMatrixToRealMatrix(FieldMatrix<BigFraction>)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6960= org.apache.commons.math3.linear.MatrixUtils:createRealIdentityMatrix(int)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6961= org.apache.commons.math3.linear.MatrixUtils:solveUpperTriangularSystem(RealMatrix, RealVector)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6962= org.apache.commons.math3.linear.MatrixUtils.FractionMatrixConverter:getConvertedMatrix()	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6963= org.apache.commons.math3.linear.MatrixUtils.FractionMatrixConverter:start(int, int, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6964= org.apache.commons.math3.linear.MatrixUtils.FractionMatrixConverter:FractionMatrixConverter()	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6965= org.apache.commons.math3.linear.MatrixUtils:isSymmetricInternal(RealMatrix, double, boolean)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6966= org.apache.commons.math3.linear.MatrixUtils.BigFractionMatrixConverter:BigFractionMatrixConverter()	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6967= org.apache.commons.math3.linear.MatrixUtils:createFieldVector(T[])	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6968= org.apache.commons.math3.linear.MatrixUtils:createColumnFieldMatrix(T[])	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6969= org.apache.commons.math3.linear.MatrixUtils.FractionMatrixConverter:visit(int, int, Fraction)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6970= org.apache.commons.math3.linear.MatrixUtils:createFieldDiagonalMatrix(T[])	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6971= org.apache.commons.math3.linear.MatrixUtils:createFieldMatrix(Field<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6972= org.apache.commons.math3.linear.MatrixUtils:BigFractionMatrixConverter()	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6973= org.apache.commons.math3.linear.MatrixUtils.BigFractionMatrixConverter:visit(int, int, BigFraction)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6974= org.apache.commons.math3.linear.MatrixUtils:blockInverse(RealMatrix, int)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6975= org.apache.commons.math3.linear.MatrixUtils:checkSubMatrixIndex(AnyMatrix, int[], int[])	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6976= org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6977= org.apache.commons.math3.linear.MatrixUtils:serializeRealVector(RealVector, ObjectOutputStream)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6978= org.apache.commons.math3.linear.MatrixUtils:visit(int, int, BigFraction)	/src/main/java/org/apache/commons/math3/linear/MatrixUtils.java
6979= org.apache.commons.math3.geometry.euclidean.threed.RotationOrder:getA3()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/RotationOrder.java
6980= org.apache.commons.math3.geometry.euclidean.threed.RotationOrder:getA1()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/RotationOrder.java
6981= org.apache.commons.math3.geometry.euclidean.threed.RotationOrder:toString()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/RotationOrder.java
6982= org.apache.commons.math3.geometry.euclidean.threed.RotationOrder:getA2()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/RotationOrder.java
6983= org.apache.commons.math3.geometry.euclidean.threed.RotationOrder:RotationOrder(String, Vector3D, Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/RotationOrder.java
6984= org.apache.commons.math3.ml.clustering.Clusterable:getPoint()	/src/main/java/org/apache/commons/math3/ml/clustering/Clusterable.java
6985= org.apache.commons.math3.linear.ArrayFieldVector:dotProduct(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
6986= org.apache.commons.math3.linear.ArrayFieldVector:mapInvToSelf()	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
6987= org.apache.commons.math3.linear.ArrayFieldVector:mapSubtractToSelf(T)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
6988= org.apache.commons.math3.linear.ArrayFieldVector:hashCode()	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
6989= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(ArrayFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
6990= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(ArrayFieldVector<T>, T[])	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
6991= org.apache.commons.math3.linear.ArrayFieldVector:append(T)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
6992= org.apache.commons.math3.linear.ArrayFieldVector:dotProduct(ArrayFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
6993= org.apache.commons.math3.linear.ArrayFieldVector:ebeMultiply(ArrayFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
6994= org.apache.commons.math3.linear.ArrayFieldVector:getData()	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
6995= org.apache.commons.math3.linear.ArrayFieldVector:checkVectorDimensions(int)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
6996= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(T[], T[])	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
6997= org.apache.commons.math3.linear.ArrayFieldVector:setSubVector(int, FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
6998= org.apache.commons.math3.linear.ArrayFieldVector:set(int, ArrayFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
6999= org.apache.commons.math3.linear.ArrayFieldVector:walkInDefaultOrder(FieldVectorChangingVisitor<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7000= org.apache.commons.math3.linear.ArrayFieldVector:subtract(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7001= org.apache.commons.math3.linear.ArrayFieldVector:outerProduct(ArrayFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7002= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(T[], ArrayFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7003= org.apache.commons.math3.linear.ArrayFieldVector:mapAddToSelf(T)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7004= org.apache.commons.math3.linear.ArrayFieldVector:ebeDivide(ArrayFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7005= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(Field<T>, T[], T[])	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7006= org.apache.commons.math3.linear.ArrayFieldVector:getField()	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7007= org.apache.commons.math3.linear.ArrayFieldVector:copy()	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7008= org.apache.commons.math3.linear.ArrayFieldVector:projection(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7009= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(ArrayFieldVector<T>, boolean)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7010= org.apache.commons.math3.linear.ArrayFieldVector:subtract(ArrayFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7011= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7012= org.apache.commons.math3.linear.ArrayFieldVector:outerProduct(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7013= org.apache.commons.math3.linear.ArrayFieldVector:walkInOptimizedOrder(FieldVectorChangingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7014= org.apache.commons.math3.linear.ArrayFieldVector:append(ArrayFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7015= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(int, T)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7016= org.apache.commons.math3.linear.ArrayFieldVector:append(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7017= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(T[])	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7018= org.apache.commons.math3.linear.ArrayFieldVector:mapAdd(T)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7019= org.apache.commons.math3.linear.ArrayFieldVector:setEntry(int, T)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7020= org.apache.commons.math3.linear.ArrayFieldVector:mapDivide(T)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7021= org.apache.commons.math3.linear.ArrayFieldVector:equals(Object)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7022= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(Field<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7023= org.apache.commons.math3.linear.ArrayFieldVector:ebeMultiply(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7024= org.apache.commons.math3.linear.ArrayFieldVector:mapMultiply(T)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7025= org.apache.commons.math3.linear.ArrayFieldVector:getDimension()	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7026= org.apache.commons.math3.linear.ArrayFieldVector:getDataRef()	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7027= org.apache.commons.math3.linear.ArrayFieldVector:set(T)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7028= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(ArrayFieldVector<T>, ArrayFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7029= org.apache.commons.math3.linear.ArrayFieldVector:checkVectorDimensions(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7030= org.apache.commons.math3.linear.ArrayFieldVector:add(ArrayFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7031= org.apache.commons.math3.linear.ArrayFieldVector:mapDivideToSelf(T)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7032= org.apache.commons.math3.linear.ArrayFieldVector:ebeDivide(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7033= org.apache.commons.math3.linear.ArrayFieldVector:walkInDefaultOrder(FieldVectorChangingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7034= org.apache.commons.math3.linear.ArrayFieldVector:add(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7035= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(T[], boolean)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7036= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(Field<T>, T[])	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7037= org.apache.commons.math3.linear.ArrayFieldVector:walkInOptimizedOrder(FieldVectorChangingVisitor<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7038= org.apache.commons.math3.linear.ArrayFieldVector:walkInDefaultOrder(FieldVectorPreservingVisitor<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7039= org.apache.commons.math3.linear.ArrayFieldVector:projection(ArrayFieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7040= org.apache.commons.math3.linear.ArrayFieldVector:getEntry(int)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7041= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(T[], int, int)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7042= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(Field<T>, T[], int, int)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7043= org.apache.commons.math3.linear.ArrayFieldVector:mapInv()	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7044= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(Field<T>, T[], boolean)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7045= org.apache.commons.math3.linear.ArrayFieldVector:mapMultiplyToSelf(T)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7046= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(Field<T>, int)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7047= org.apache.commons.math3.linear.ArrayFieldVector:checkIndices(int, int)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7048= org.apache.commons.math3.linear.ArrayFieldVector:toArray()	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7049= org.apache.commons.math3.linear.ArrayFieldVector:walkInDefaultOrder(FieldVectorPreservingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7050= org.apache.commons.math3.linear.ArrayFieldVector:walkInOptimizedOrder(FieldVectorPreservingVisitor<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7051= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(FieldVector<T>, FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7052= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(T[], FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7053= org.apache.commons.math3.linear.ArrayFieldVector:ArrayFieldVector(FieldVector<T>, T[])	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7054= org.apache.commons.math3.linear.ArrayFieldVector:mapSubtract(T)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7055= org.apache.commons.math3.linear.ArrayFieldVector:getSubVector(int, int)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7056= org.apache.commons.math3.linear.ArrayFieldVector:checkIndex(int)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7057= org.apache.commons.math3.linear.ArrayFieldVector:walkInOptimizedOrder(FieldVectorPreservingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java
7058= org.apache.commons.math3.optim.AbstractConvergenceChecker:AbstractConvergenceChecker(double, double)	/src/main/java/org/apache/commons/math3/optim/AbstractConvergenceChecker.java
7059= org.apache.commons.math3.optim.AbstractConvergenceChecker:getAbsoluteThreshold()	/src/main/java/org/apache/commons/math3/optim/AbstractConvergenceChecker.java
7060= org.apache.commons.math3.optim.AbstractConvergenceChecker:getRelativeThreshold()	/src/main/java/org/apache/commons/math3/optim/AbstractConvergenceChecker.java
7061= org.apache.commons.math3.optim.AbstractConvergenceChecker:converged(int, PAIR, PAIR)	/src/main/java/org/apache/commons/math3/optim/AbstractConvergenceChecker.java
7062= org.apache.commons.math3.analysis.UnivariateFunction:value(double)	/src/main/java/org/apache/commons/math3/analysis/UnivariateFunction.java
7063= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:MultiDirectionalSimplex(int, double, double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java
7064= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:MultiDirectionalSimplex(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java
7065= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:MultiDirectionalSimplex(double[], double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java
7066= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:evaluateNewSimplex(MultivariateFunction, PointValuePair[], double, Comparator<PointValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java
7067= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:MultiDirectionalSimplex(int)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java
7068= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:iterate(MultivariateFunction, Comparator<PointValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java
7069= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:MultiDirectionalSimplex(double[][], double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java
7070= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:MultiDirectionalSimplex(int, double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java
7071= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:MultiDirectionalSimplex(int, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java
7072= org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:MultiDirectionalSimplex(double[][])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java
7073= org.apache.commons.math3.ode.ParameterJacobianProvider:computeParameterJacobian(double, double[], double[], String, double[])	/src/main/java/org/apache/commons/math3/ode/ParameterJacobianProvider.java
7074= org.apache.commons.math3.exception.NotANumberException:NotANumberException()	/src/main/java/org/apache/commons/math3/exception/NotANumberException.java
7075= org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:nextVector()	/src/main/java/org/apache/commons/math3/random/CorrelatedRandomVectorGenerator.java
7076= org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:getGenerator()	/src/main/java/org/apache/commons/math3/random/CorrelatedRandomVectorGenerator.java
7077= org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:getRootMatrix()	/src/main/java/org/apache/commons/math3/random/CorrelatedRandomVectorGenerator.java
7078= org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:CorrelatedRandomVectorGenerator(double[], RealMatrix, double, NormalizedRandomGenerator)	/src/main/java/org/apache/commons/math3/random/CorrelatedRandomVectorGenerator.java
7079= org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:getRank()	/src/main/java/org/apache/commons/math3/random/CorrelatedRandomVectorGenerator.java
7080= org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:CorrelatedRandomVectorGenerator(RealMatrix, double, NormalizedRandomGenerator)	/src/main/java/org/apache/commons/math3/random/CorrelatedRandomVectorGenerator.java
7081= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem:getJacobian()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7082= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem.Evaluation:getSigma(double)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7083= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem:getParameterSize()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7084= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem:getCost()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7085= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem:getStart()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7086= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem.Evaluation:getRMS()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7087= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem:getSigma(double)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7088= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem:getRMS()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7089= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem.Evaluation:getJacobian()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7090= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem.Evaluation:getCovariances(double)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7091= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem.Evaluation:getCost()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7092= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem:getPoint()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7093= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem:getResiduals()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7094= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem.Evaluation:getPoint()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7095= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem:evaluate(RealVector)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7096= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem:getCovariances(double)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7097= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem.Evaluation:getResiduals()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7098= org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem:getObservationSize()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java
7099= org.apache.commons.math3.analysis.solvers.RiddersSolver:RiddersSolver(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/RiddersSolver.java
7100= org.apache.commons.math3.analysis.solvers.RiddersSolver:RiddersSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/RiddersSolver.java
7101= org.apache.commons.math3.analysis.solvers.RiddersSolver:RiddersSolver()	/src/main/java/org/apache/commons/math3/analysis/solvers/RiddersSolver.java
7102= org.apache.commons.math3.analysis.solvers.RiddersSolver:doSolve()	/src/main/java/org/apache/commons/math3/analysis/solvers/RiddersSolver.java
7103= org.apache.commons.math3.genetics.GeneticAlgorithm:getCrossoverRate()	/src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java
7104= org.apache.commons.math3.genetics.GeneticAlgorithm:getCrossoverPolicy()	/src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java
7105= org.apache.commons.math3.genetics.GeneticAlgorithm:getSelectionPolicy()	/src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java
7106= org.apache.commons.math3.genetics.GeneticAlgorithm:evolve(Population, StoppingCondition)	/src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java
7107= org.apache.commons.math3.genetics.GeneticAlgorithm:setRandomGenerator(RandomGenerator)	/src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java
7108= org.apache.commons.math3.genetics.GeneticAlgorithm:GeneticAlgorithm(CrossoverPolicy, double, MutationPolicy, double, SelectionPolicy)	/src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java
7109= org.apache.commons.math3.genetics.GeneticAlgorithm:getMutationPolicy()	/src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java
7110= org.apache.commons.math3.genetics.GeneticAlgorithm:getRandomGenerator()	/src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java
7111= org.apache.commons.math3.genetics.GeneticAlgorithm:getMutationRate()	/src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java
7112= org.apache.commons.math3.genetics.GeneticAlgorithm:getGenerationsEvolved()	/src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java
7113= org.apache.commons.math3.genetics.GeneticAlgorithm:nextGeneration(Population)	/src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java
7114= org.apache.commons.math3.ml.neuralnet.MapUtilsTest:testFindClosestNeuron()	/src/test/java/org/apache/commons/math3/ml/neuralnet/MapUtilsTest.java
7115= org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory:value(long)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunctionFactory.java
7116= org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory:exponentialDecay(double, double, long)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunctionFactory.java
7117= org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory:quasiSigmoidDecay(double, double, long)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunctionFactory.java
7118= org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory:NeighbourhoodSizeFunctionFactory()	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunctionFactory.java
7119= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java
7120= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:value(double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java
7121= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:evaluate(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java
7122= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:getNewtonCoefficients()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java
7123= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:computeCoefficients()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java
7124= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:getCoefficients()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java
7125= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:PolynomialFunctionNewtonForm(double, double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java
7126= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:verifyInputArray(double, double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java
7127= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:degree()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java
7128= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:getCenters()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java
7129= org.apache.commons.math3.optim.MaxEval:MaxEval(int)	/src/main/java/org/apache/commons/math3/optim/MaxEval.java
7130= org.apache.commons.math3.optim.MaxEval:getMaxEval()	/src/main/java/org/apache/commons/math3/optim/MaxEval.java
7131= org.apache.commons.math3.optim.MaxEval:unlimited()	/src/main/java/org/apache/commons/math3/optim/MaxEval.java
7132= org.apache.commons.math3.stat.data.LotteryTest:getResourceName()	/src/test/java/org/apache/commons/math3/stat/data/LotteryTest.java
7133= org.apache.commons.math3.analysis.UnivariateVectorFunction:value(double)	/src/main/java/org/apache/commons/math3/analysis/UnivariateVectorFunction.java
7134= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:ClassicalRungeKuttaStepInterpolator(ClassicalRungeKuttaStepInterpolator)	/src/main/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java
7135= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:doCopy()	/src/main/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java
7136= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:computeInterpolatedStateAndDerivatives(double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java
7137= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:ClassicalRungeKuttaStepInterpolator()	/src/main/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java
7138= org.apache.commons.math3.distribution.SaddlePointExpansion:logBinomialProbability(int, int, double, double)	/src/main/java/org/apache/commons/math3/distribution/SaddlePointExpansion.java
7139= org.apache.commons.math3.distribution.SaddlePointExpansion:getDeviancePart(double, double)	/src/main/java/org/apache/commons/math3/distribution/SaddlePointExpansion.java
7140= org.apache.commons.math3.distribution.SaddlePointExpansion:getStirlingError(double)	/src/main/java/org/apache/commons/math3/distribution/SaddlePointExpansion.java
7141= org.apache.commons.math3.distribution.SaddlePointExpansion:SaddlePointExpansion()	/src/main/java/org/apache/commons/math3/distribution/SaddlePointExpansion.java
7142= org.apache.commons.math3.stat.descriptive.moment.GeometricMean:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java
7143= org.apache.commons.math3.stat.descriptive.moment.GeometricMean:copy(GeometricMean, GeometricMean)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java
7144= org.apache.commons.math3.stat.descriptive.moment.GeometricMean:GeometricMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java
7145= org.apache.commons.math3.stat.descriptive.moment.GeometricMean:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java
7146= org.apache.commons.math3.stat.descriptive.moment.GeometricMean:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java
7147= org.apache.commons.math3.stat.descriptive.moment.GeometricMean:GeometricMean(SumOfLogs)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java
7148= org.apache.commons.math3.stat.descriptive.moment.GeometricMean:setSumLogImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java
7149= org.apache.commons.math3.stat.descriptive.moment.GeometricMean:checkEmpty()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java
7150= org.apache.commons.math3.stat.descriptive.moment.GeometricMean:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java
7151= org.apache.commons.math3.stat.descriptive.moment.GeometricMean:GeometricMean(GeometricMean)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java
7152= org.apache.commons.math3.stat.descriptive.moment.GeometricMean:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java
7153= org.apache.commons.math3.stat.descriptive.moment.GeometricMean:getSumLogImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java
7154= org.apache.commons.math3.stat.descriptive.moment.GeometricMean:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java
7155= org.apache.commons.math3.Field:getOne()	/src/main/java/org/apache/commons/math3/Field.java
7156= org.apache.commons.math3.Field:getRuntimeClass()	/src/main/java/org/apache/commons/math3/Field.java
7157= org.apache.commons.math3.Field:getZero()	/src/main/java/org/apache/commons/math3/Field.java
7158= org.apache.commons.math3.stat.descriptive.StatisticalSummary:getMax()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummary.java
7159= org.apache.commons.math3.stat.descriptive.StatisticalSummary:getMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummary.java
7160= org.apache.commons.math3.stat.descriptive.StatisticalSummary:getStandardDeviation()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummary.java
7161= org.apache.commons.math3.stat.descriptive.StatisticalSummary:getSum()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummary.java
7162= org.apache.commons.math3.stat.descriptive.StatisticalSummary:getVariance()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummary.java
7163= org.apache.commons.math3.stat.descriptive.StatisticalSummary:getMin()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummary.java
7164= org.apache.commons.math3.stat.descriptive.StatisticalSummary:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/StatisticalSummary.java
7165= org.apache.commons.math3.optimization.SimpleValueChecker:converged(int, PointValuePair, PointValuePair)	/src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java
7166= org.apache.commons.math3.optimization.SimpleValueChecker:SimpleValueChecker()	/src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java
7167= org.apache.commons.math3.optimization.SimpleValueChecker:SimpleValueChecker(double, double)	/src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java
7168= org.apache.commons.math3.optimization.SimpleValueChecker:SimpleValueChecker(double, double, int)	/src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java
7169= org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex:MultiDirectionalSimplex(int, double, double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultiDirectionalSimplex.java
7170= org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex:MultiDirectionalSimplex(int, double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultiDirectionalSimplex.java
7171= org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex:MultiDirectionalSimplex(int, double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultiDirectionalSimplex.java
7172= org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex:MultiDirectionalSimplex(double[][])	/src/main/java/org/apache/commons/math3/optimization/direct/MultiDirectionalSimplex.java
7173= org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex:MultiDirectionalSimplex(double[][], double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultiDirectionalSimplex.java
7174= org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex:MultiDirectionalSimplex(double[], double, double)	/src/main/java/org/apache/commons/math3/optimization/direct/MultiDirectionalSimplex.java
7175= org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex:iterate(MultivariateFunction, Comparator<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/direct/MultiDirectionalSimplex.java
7176= org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex:MultiDirectionalSimplex(double[])	/src/main/java/org/apache/commons/math3/optimization/direct/MultiDirectionalSimplex.java
7177= org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex:evaluateNewSimplex(MultivariateFunction, PointValuePair[], double, Comparator<PointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/direct/MultiDirectionalSimplex.java
7178= org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex:MultiDirectionalSimplex(int)	/src/main/java/org/apache/commons/math3/optimization/direct/MultiDirectionalSimplex.java
7179= org.apache.commons.math3.geometry.partitioning.BoundaryProjection:getOffset()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryProjection.java
7180= org.apache.commons.math3.geometry.partitioning.BoundaryProjection:getProjected()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryProjection.java
7181= org.apache.commons.math3.geometry.partitioning.BoundaryProjection:getOriginal()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryProjection.java
7182= org.apache.commons.math3.geometry.partitioning.BoundaryProjection:BoundaryProjection(Point<S>, Point<S>, double)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryProjection.java
7183= org.apache.commons.math3.analysis.function.Sinh:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Sinh.java
7184= org.apache.commons.math3.analysis.function.Sinh:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Sinh.java
7185= org.apache.commons.math3.analysis.function.Sinh:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Sinh.java
7186= org.apache.commons.math3.linear.FieldMatrixChangingVisitor:visit(int, int, T)	/src/main/java/org/apache/commons/math3/linear/FieldMatrixChangingVisitor.java
7187= org.apache.commons.math3.linear.FieldMatrixChangingVisitor:start(int, int, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrixChangingVisitor.java
7188= org.apache.commons.math3.linear.FieldMatrixChangingVisitor:end()	/src/main/java/org/apache/commons/math3/linear/FieldMatrixChangingVisitor.java
7189= org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic:buildQuadrilateral(Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/AklToussaintHeuristic.java
7190= org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic:insideQuadrilateral(Vector2D, List<Vector2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/AklToussaintHeuristic.java
7191= org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic:AklToussaintHeuristic()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/AklToussaintHeuristic.java
7192= org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic:reducePoints(Collection<Vector2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/AklToussaintHeuristic.java
7193= org.apache.commons.math3.util.Incrementor:Incrementor()	/src/main/java/org/apache/commons/math3/util/Incrementor.java
7194= org.apache.commons.math3.util.Incrementor:canIncrement()	/src/main/java/org/apache/commons/math3/util/Incrementor.java
7195= org.apache.commons.math3.util.Incrementor:resetCount()	/src/main/java/org/apache/commons/math3/util/Incrementor.java
7196= org.apache.commons.math3.util.Incrementor:Incrementor(int)	/src/main/java/org/apache/commons/math3/util/Incrementor.java
7197= org.apache.commons.math3.util.Incrementor:setMaximalCount(int)	/src/main/java/org/apache/commons/math3/util/Incrementor.java
7198= org.apache.commons.math3.util.Incrementor:incrementCount()	/src/main/java/org/apache/commons/math3/util/Incrementor.java
7199= org.apache.commons.math3.util.Incrementor:Incrementor(int, MaxCountExceededCallback)	/src/main/java/org/apache/commons/math3/util/Incrementor.java
7200= org.apache.commons.math3.util.Incrementor:trigger(int)	/src/main/java/org/apache/commons/math3/util/Incrementor.java
7201= org.apache.commons.math3.util.Incrementor:getCount()	/src/main/java/org/apache/commons/math3/util/Incrementor.java
7202= org.apache.commons.math3.util.Incrementor:getMaximalCount()	/src/main/java/org/apache/commons/math3/util/Incrementor.java
7203= org.apache.commons.math3.util.Incrementor:incrementCount(int)	/src/main/java/org/apache/commons/math3/util/Incrementor.java
7204= org.apache.commons.math3.util.Incrementor.MaxCountExceededCallback:trigger(int)	/src/main/java/org/apache/commons/math3/util/Incrementor.java
7205= org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient:ObjectiveFunctionGradient(MultivariateVectorFunction)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunctionGradient.java
7206= org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient:getObjectiveFunctionGradient()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunctionGradient.java
7207= org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer:getConvexCellsInsidePoints()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/PropertiesComputer.java
7208= org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer:visitLeafNode(BSPTree<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/PropertiesComputer.java
7209= org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer:visitInternalNode(BSPTree<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/PropertiesComputer.java
7210= org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer:getArea()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/PropertiesComputer.java
7211= org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer:PropertiesComputer(double)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/PropertiesComputer.java
7212= org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer:visitOrder(BSPTree<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/PropertiesComputer.java
7213= org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer:convexCellBarycenter(Vertex)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/PropertiesComputer.java
7214= org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer:getBarycenter()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/PropertiesComputer.java
7215= org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer:convexCellArea(Vertex)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/PropertiesComputer.java
7216= org.apache.commons.math3.optim.nonlinear.vector.jacobian.RandomStraightLinePointGenerator:RandomStraightLinePointGenerator(double, double, double, double, double, long)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RandomStraightLinePointGenerator.java
7217= org.apache.commons.math3.optim.nonlinear.vector.jacobian.RandomStraightLinePointGenerator:create()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RandomStraightLinePointGenerator.java
7218= org.apache.commons.math3.optim.nonlinear.vector.jacobian.RandomStraightLinePointGenerator:generate(int)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/RandomStraightLinePointGenerator.java
7219= org.apache.commons.math3.optim.MaxIter:MaxIter(int)	/src/main/java/org/apache/commons/math3/optim/MaxIter.java
7220= org.apache.commons.math3.optim.MaxIter:getMaxIter()	/src/main/java/org/apache/commons/math3/optim/MaxIter.java
7221= org.apache.commons.math3.optim.MaxIter:unlimited()	/src/main/java/org/apache/commons/math3/optim/MaxIter.java
7222= org.apache.commons.math3.analysis.interpolation.MultivariateInterpolator:interpolate(double[][], double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java
7223= org.apache.commons.math3.genetics.RandomKey:RandomKey(List<Double>)	/src/main/java/org/apache/commons/math3/genetics/RandomKey.java
7224= org.apache.commons.math3.genetics.RandomKey:isSame(Chromosome)	/src/main/java/org/apache/commons/math3/genetics/RandomKey.java
7225= org.apache.commons.math3.genetics.RandomKey:checkValidity(List<Double>)	/src/main/java/org/apache/commons/math3/genetics/RandomKey.java
7226= org.apache.commons.math3.genetics.RandomKey:comparatorPermutation(List<S>, Comparator<S>)	/src/main/java/org/apache/commons/math3/genetics/RandomKey.java
7227= org.apache.commons.math3.genetics.RandomKey:decode(List<T>)	/src/main/java/org/apache/commons/math3/genetics/RandomKey.java
7228= org.apache.commons.math3.genetics.RandomKey:randomPermutation(int)	/src/main/java/org/apache/commons/math3/genetics/RandomKey.java
7229= org.apache.commons.math3.genetics.RandomKey:identityPermutation(int)	/src/main/java/org/apache/commons/math3/genetics/RandomKey.java
7230= org.apache.commons.math3.genetics.RandomKey:RandomKey(Double[])	/src/main/java/org/apache/commons/math3/genetics/RandomKey.java
7231= org.apache.commons.math3.genetics.RandomKey:toString()	/src/main/java/org/apache/commons/math3/genetics/RandomKey.java
7232= org.apache.commons.math3.genetics.RandomKey:baseSequence(int)	/src/main/java/org/apache/commons/math3/genetics/RandomKey.java
7233= org.apache.commons.math3.genetics.RandomKey:inducedPermutation(List<S>, List<S>)	/src/main/java/org/apache/commons/math3/genetics/RandomKey.java
7234= org.apache.commons.math3.genetics.RandomKey:decodeGeneric(List<S>, List<Double>, List<Double>)	/src/main/java/org/apache/commons/math3/genetics/RandomKey.java
7235= org.apache.commons.math3.special.GammaTest:testInvGamma1pm1()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7236= org.apache.commons.math3.special.GammaTest:checkRelativeError(String, double, double, double)	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7237= org.apache.commons.math3.special.GammaTest:testLogGammaZero()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7238= org.apache.commons.math3.special.GammaTest:testDigammaSmallArgs()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7239= org.apache.commons.math3.special.GammaTest:testGamma()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7240= org.apache.commons.math3.special.GammaTest:testRegularizedGammaPositiveNegative()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7241= org.apache.commons.math3.special.GammaTest:testRegularizedGammaPositiveZero()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7242= org.apache.commons.math3.special.GammaTest:testRegularizedGammaPositivePositive()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7243= org.apache.commons.math3.special.GammaTest:testDigammaLargeArgs()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7244= org.apache.commons.math3.special.GammaTest:testRegularizedGammaNegativePositive()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7245= org.apache.commons.math3.special.GammaTest:testLogGamma1p()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7246= org.apache.commons.math3.special.GammaTest:testInvGamma1pm1Precondition2()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7247= org.apache.commons.math3.special.GammaTest:testLogGammaNan()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7248= org.apache.commons.math3.special.GammaTest:testInvGamma1pm1Precondition1()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7249= org.apache.commons.math3.special.GammaTest:testRegularizedGammaPositiveNan()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7250= org.apache.commons.math3.special.GammaTest:testLogGammaNegative()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7251= org.apache.commons.math3.special.GammaTest:testRegularizedGammaZeroPositive()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7252= org.apache.commons.math3.special.GammaTest:testLogGammaPositive()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7253= org.apache.commons.math3.special.GammaTest:testTrigamma()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7254= org.apache.commons.math3.special.GammaTest:testLogGamma()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7255= org.apache.commons.math3.special.GammaTest:testLogGamma1pPrecondition1()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7256= org.apache.commons.math3.special.GammaTest:testLogGamma1pPrecondition2()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7257= org.apache.commons.math3.special.GammaTest:testRegularizedGammaNanPositive()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7258= org.apache.commons.math3.special.GammaTest:testGammaNegativeInteger()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7259= org.apache.commons.math3.special.GammaTest:testRegularizedGamma(double, double, double)	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7260= org.apache.commons.math3.special.GammaTest:testLogGammaPrecondition2()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7261= org.apache.commons.math3.special.GammaTest:testLogGammaPrecondition1()	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7262= org.apache.commons.math3.special.GammaTest:testLogGamma(double, double)	/src/test/java/org/apache/commons/math3/special/GammaTest.java
7263= org.apache.commons.math3.random.Well512a:Well512a()	/src/main/java/org/apache/commons/math3/random/Well512a.java
7264= org.apache.commons.math3.random.Well512a:Well512a(int[])	/src/main/java/org/apache/commons/math3/random/Well512a.java
7265= org.apache.commons.math3.random.Well512a:Well512a(long)	/src/main/java/org/apache/commons/math3/random/Well512a.java
7266= org.apache.commons.math3.random.Well512a:next(int)	/src/main/java/org/apache/commons/math3/random/Well512a.java
7267= org.apache.commons.math3.random.Well512a:Well512a(int)	/src/main/java/org/apache/commons/math3/random/Well512a.java
7268= org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableVectorFunction:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableVectorFunction.java
7269= org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer:getOptima()	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateMultiStartOptimizer.java
7270= org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer:getMaxEvaluations()	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateMultiStartOptimizer.java
7271= org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer:getEvaluations()	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateMultiStartOptimizer.java
7272= org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer:getConvergenceChecker()	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateMultiStartOptimizer.java
7273= org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer:sortPairs(GoalType)	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateMultiStartOptimizer.java
7274= org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer:compare(PointValuePair, PointValuePair)	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateMultiStartOptimizer.java
7275= org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer:BaseMultivariateMultiStartOptimizer(BaseMultivariateOptimizer<FUNC>, int, RandomVectorGenerator)	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateMultiStartOptimizer.java
7276= org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer:optimize(int, FUNC, GoalType, double[])	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateMultiStartOptimizer.java
7277= org.apache.commons.math3.distribution.ZipfDistribution:calculateNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/ZipfDistribution.java
7278= org.apache.commons.math3.distribution.ZipfDistribution:generalizedHarmonic(int, double)	/src/main/java/org/apache/commons/math3/distribution/ZipfDistribution.java
7279= org.apache.commons.math3.distribution.ZipfDistribution:logProbability(int)	/src/main/java/org/apache/commons/math3/distribution/ZipfDistribution.java
7280= org.apache.commons.math3.distribution.ZipfDistribution:ZipfDistribution(RandomGenerator, int, double)	/src/main/java/org/apache/commons/math3/distribution/ZipfDistribution.java
7281= org.apache.commons.math3.distribution.ZipfDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/ZipfDistribution.java
7282= org.apache.commons.math3.distribution.ZipfDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/ZipfDistribution.java
7283= org.apache.commons.math3.distribution.ZipfDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/ZipfDistribution.java
7284= org.apache.commons.math3.distribution.ZipfDistribution:calculateNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/ZipfDistribution.java
7285= org.apache.commons.math3.distribution.ZipfDistribution:probability(int)	/src/main/java/org/apache/commons/math3/distribution/ZipfDistribution.java
7286= org.apache.commons.math3.distribution.ZipfDistribution:getNumberOfElements()	/src/main/java/org/apache/commons/math3/distribution/ZipfDistribution.java
7287= org.apache.commons.math3.distribution.ZipfDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/ZipfDistribution.java
7288= org.apache.commons.math3.distribution.ZipfDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/ZipfDistribution.java
7289= org.apache.commons.math3.distribution.ZipfDistribution:cumulativeProbability(int)	/src/main/java/org/apache/commons/math3/distribution/ZipfDistribution.java
7290= org.apache.commons.math3.distribution.ZipfDistribution:ZipfDistribution(int, double)	/src/main/java/org/apache/commons/math3/distribution/ZipfDistribution.java
7291= org.apache.commons.math3.distribution.ZipfDistribution:getExponent()	/src/main/java/org/apache/commons/math3/distribution/ZipfDistribution.java
7292= org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator:UncorrelatedRandomVectorGenerator(int, NormalizedRandomGenerator)	/src/main/java/org/apache/commons/math3/random/UncorrelatedRandomVectorGenerator.java
7293= org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator:UncorrelatedRandomVectorGenerator(double[], double[], NormalizedRandomGenerator)	/src/main/java/org/apache/commons/math3/random/UncorrelatedRandomVectorGenerator.java
7294= org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator:nextVector()	/src/main/java/org/apache/commons/math3/random/UncorrelatedRandomVectorGenerator.java
7295= org.apache.commons.math3.random.Well19937cTest:makeGenerator()	/src/test/java/org/apache/commons/math3/random/Well19937cTest.java
7296= org.apache.commons.math3.random.Well19937cTest:testReferenceCode()	/src/test/java/org/apache/commons/math3/random/Well19937cTest.java
7297= org.apache.commons.math3.analysis.interpolation.UnivariateInterpolator:interpolate(double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java
7298= org.apache.commons.math3.ml.distance.ManhattanDistanceTest:test()	/src/test/java/org/apache/commons/math3/ml/distance/ManhattanDistanceTest.java
7299= org.apache.commons.math3.ml.distance.ManhattanDistanceTest:testZero()	/src/test/java/org/apache/commons/math3/ml/distance/ManhattanDistanceTest.java
7300= org.apache.commons.math3.analysis.function.Atan:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Atan.java
7301= org.apache.commons.math3.analysis.function.Atan:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Atan.java
7302= org.apache.commons.math3.analysis.function.Atan:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Atan.java
7303= org.apache.commons.math3.linear.FieldMatrix:walkInRowOrder(FieldMatrixPreservingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7304= org.apache.commons.math3.linear.FieldMatrix:multiplyEntry(int, int, T)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7305= org.apache.commons.math3.linear.FieldMatrix:operate(T[])	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7306= org.apache.commons.math3.linear.FieldMatrix:setColumnVector(int, FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7307= org.apache.commons.math3.linear.FieldMatrix:walkInRowOrder(FieldMatrixPreservingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7308= org.apache.commons.math3.linear.FieldMatrix:walkInOptimizedOrder(FieldMatrixPreservingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7309= org.apache.commons.math3.linear.FieldMatrix:preMultiply(T[])	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7310= org.apache.commons.math3.linear.FieldMatrix:getColumnMatrix(int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7311= org.apache.commons.math3.linear.FieldMatrix:copy()	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7312= org.apache.commons.math3.linear.FieldMatrix:walkInOptimizedOrder(FieldMatrixPreservingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7313= org.apache.commons.math3.linear.FieldMatrix:preMultiply(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7314= org.apache.commons.math3.linear.FieldMatrix:transpose()	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7315= org.apache.commons.math3.linear.FieldMatrix:power(int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7316= org.apache.commons.math3.linear.FieldMatrix:getSubMatrix(int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7317= org.apache.commons.math3.linear.FieldMatrix:setRowMatrix(int, FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7318= org.apache.commons.math3.linear.FieldMatrix:walkInOptimizedOrder(FieldMatrixChangingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7319= org.apache.commons.math3.linear.FieldMatrix:getRowVector(int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7320= org.apache.commons.math3.linear.FieldMatrix:walkInRowOrder(FieldMatrixChangingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7321= org.apache.commons.math3.linear.FieldMatrix:getColumn(int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7322= org.apache.commons.math3.linear.FieldMatrix:walkInOptimizedOrder(FieldMatrixChangingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7323= org.apache.commons.math3.linear.FieldMatrix:setEntry(int, int, T)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7324= org.apache.commons.math3.linear.FieldMatrix:walkInRowOrder(FieldMatrixChangingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7325= org.apache.commons.math3.linear.FieldMatrix:walkInColumnOrder(FieldMatrixChangingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7326= org.apache.commons.math3.linear.FieldMatrix:setColumn(int, T[])	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7327= org.apache.commons.math3.linear.FieldMatrix:setSubMatrix(T[][], int, int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7328= org.apache.commons.math3.linear.FieldMatrix:addToEntry(int, int, T)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7329= org.apache.commons.math3.linear.FieldMatrix:getField()	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7330= org.apache.commons.math3.linear.FieldMatrix:getEntry(int, int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7331= org.apache.commons.math3.linear.FieldMatrix:getSubMatrix(int[], int[])	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7332= org.apache.commons.math3.linear.FieldMatrix:walkInColumnOrder(FieldMatrixPreservingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7333= org.apache.commons.math3.linear.FieldMatrix:getColumnVector(int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7334= org.apache.commons.math3.linear.FieldMatrix:scalarMultiply(T)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7335= org.apache.commons.math3.linear.FieldMatrix:setColumnMatrix(int, FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7336= org.apache.commons.math3.linear.FieldMatrix:walkInColumnOrder(FieldMatrixPreservingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7337= org.apache.commons.math3.linear.FieldMatrix:copySubMatrix(int[], int[], T[][])	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7338= org.apache.commons.math3.linear.FieldMatrix:createMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7339= org.apache.commons.math3.linear.FieldMatrix:getRow(int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7340= org.apache.commons.math3.linear.FieldMatrix:setRowVector(int, FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7341= org.apache.commons.math3.linear.FieldMatrix:getData()	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7342= org.apache.commons.math3.linear.FieldMatrix:copySubMatrix(int, int, int, int, T[][])	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7343= org.apache.commons.math3.linear.FieldMatrix:add(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7344= org.apache.commons.math3.linear.FieldMatrix:setRow(int, T[])	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7345= org.apache.commons.math3.linear.FieldMatrix:preMultiply(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7346= org.apache.commons.math3.linear.FieldMatrix:getRowMatrix(int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7347= org.apache.commons.math3.linear.FieldMatrix:walkInColumnOrder(FieldMatrixChangingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7348= org.apache.commons.math3.linear.FieldMatrix:getTrace()	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7349= org.apache.commons.math3.linear.FieldMatrix:multiply(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7350= org.apache.commons.math3.linear.FieldMatrix:operate(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7351= org.apache.commons.math3.linear.FieldMatrix:subtract(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7352= org.apache.commons.math3.linear.FieldMatrix:scalarAdd(T)	/src/main/java/org/apache/commons/math3/linear/FieldMatrix.java
7353= org.apache.commons.math3.optimization.univariate.BrentOptimizer:BrentOptimizer(double, double)	/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java
7354= org.apache.commons.math3.optimization.univariate.BrentOptimizer:best(UnivariatePointValuePair, UnivariatePointValuePair, boolean)	/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java
7355= org.apache.commons.math3.optimization.univariate.BrentOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java
7356= org.apache.commons.math3.optimization.univariate.BrentOptimizer:BrentOptimizer(double, double, ConvergenceChecker<UnivariatePointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java
7357= org.apache.commons.math3.stat.inference.ChiSquareTest:ChiSquareTest()	/src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java
7358= org.apache.commons.math3.stat.inference.ChiSquareTest:chiSquareDataSetsComparison(long[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java
7359= org.apache.commons.math3.stat.inference.ChiSquareTest:chiSquare(double[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java
7360= org.apache.commons.math3.stat.inference.ChiSquareTest:chiSquareTest(long[][], double)	/src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java
7361= org.apache.commons.math3.stat.inference.ChiSquareTest:chiSquareTestDataSetsComparison(long[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java
7362= org.apache.commons.math3.stat.inference.ChiSquareTest:chiSquareTestDataSetsComparison(long[], long[], double)	/src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java
7363= org.apache.commons.math3.stat.inference.ChiSquareTest:checkArray(long[][])	/src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java
7364= org.apache.commons.math3.stat.inference.ChiSquareTest:chiSquareTest(long[][])	/src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java
7365= org.apache.commons.math3.stat.inference.ChiSquareTest:chiSquare(long[][])	/src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java
7366= org.apache.commons.math3.stat.inference.ChiSquareTest:chiSquareTest(double[], long[], double)	/src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java
7367= org.apache.commons.math3.stat.inference.ChiSquareTest:chiSquareTest(double[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java
7368= org.apache.commons.math3.geometry.euclidean.threed.Rotation:applyTo(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7369= org.apache.commons.math3.geometry.euclidean.threed.Rotation:Rotation(Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7370= org.apache.commons.math3.geometry.euclidean.threed.Rotation:getMatrix()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7371= org.apache.commons.math3.geometry.euclidean.threed.Rotation:getQ1()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7372= org.apache.commons.math3.geometry.euclidean.threed.Rotation:Rotation(Vector3D, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7373= org.apache.commons.math3.geometry.euclidean.threed.Rotation:getQ2()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7374= org.apache.commons.math3.geometry.euclidean.threed.Rotation:getQ0()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7375= org.apache.commons.math3.geometry.euclidean.threed.Rotation:getQ3()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7376= org.apache.commons.math3.geometry.euclidean.threed.Rotation:revert()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7377= org.apache.commons.math3.geometry.euclidean.threed.Rotation:orthogonalizeMatrix(double[][], double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7378= org.apache.commons.math3.geometry.euclidean.threed.Rotation:mat2quat(double[][])	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7379= org.apache.commons.math3.geometry.euclidean.threed.Rotation:Rotation(double[][], double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7380= org.apache.commons.math3.geometry.euclidean.threed.Rotation:getAngles(RotationOrder)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7381= org.apache.commons.math3.geometry.euclidean.threed.Rotation:applyInverseTo(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7382= org.apache.commons.math3.geometry.euclidean.threed.Rotation:Rotation(double, double, double, double, boolean)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7383= org.apache.commons.math3.geometry.euclidean.threed.Rotation:getAxis()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7384= org.apache.commons.math3.geometry.euclidean.threed.Rotation:distance(Rotation, Rotation)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7385= org.apache.commons.math3.geometry.euclidean.threed.Rotation:Rotation(Vector3D, Vector3D, Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7386= org.apache.commons.math3.geometry.euclidean.threed.Rotation:applyTo(double[], double[])	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7387= org.apache.commons.math3.geometry.euclidean.threed.Rotation:applyInverseTo(Rotation)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7388= org.apache.commons.math3.geometry.euclidean.threed.Rotation:applyInverseTo(double[], double[])	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7389= org.apache.commons.math3.geometry.euclidean.threed.Rotation:getAngle()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7390= org.apache.commons.math3.geometry.euclidean.threed.Rotation:applyTo(Rotation)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7391= org.apache.commons.math3.geometry.euclidean.threed.Rotation:Rotation(RotationOrder, double, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
7392= org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:getConvergenceChecker()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresAdapter.java
7393= org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:LeastSquaresAdapter(LeastSquaresProblem)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresAdapter.java
7394= org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:evaluate(RealVector)	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresAdapter.java
7395= org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:getEvaluationCounter()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresAdapter.java
7396= org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:getParameterSize()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresAdapter.java
7397= org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:getIterationCounter()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresAdapter.java
7398= org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:getStart()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresAdapter.java
7399= org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter:getObservationSize()	/src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresAdapter.java
7400= org.apache.commons.math3.fitting.WeightedObservedPoint:getX()	/src/main/java/org/apache/commons/math3/fitting/WeightedObservedPoint.java
7401= org.apache.commons.math3.fitting.WeightedObservedPoint:getY()	/src/main/java/org/apache/commons/math3/fitting/WeightedObservedPoint.java
7402= org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()	/src/main/java/org/apache/commons/math3/fitting/WeightedObservedPoint.java
7403= org.apache.commons.math3.fitting.WeightedObservedPoint:WeightedObservedPoint(double, double, double)	/src/main/java/org/apache/commons/math3/fitting/WeightedObservedPoint.java
7404= org.apache.commons.math3.stat.ranking.RankingAlgorithm:rank(double[])	/src/main/java/org/apache/commons/math3/stat/ranking/RankingAlgorithm.java
7405= org.apache.commons.math3.distribution.NormalDistribution:inverseCumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7406= org.apache.commons.math3.distribution.NormalDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7407= org.apache.commons.math3.distribution.NormalDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7408= org.apache.commons.math3.distribution.NormalDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7409= org.apache.commons.math3.distribution.NormalDistribution:NormalDistribution(RandomGenerator, double, double)	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7410= org.apache.commons.math3.distribution.NormalDistribution:NormalDistribution(RandomGenerator, double, double, double)	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7411= org.apache.commons.math3.distribution.NormalDistribution:getSolverAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7412= org.apache.commons.math3.distribution.NormalDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7413= org.apache.commons.math3.distribution.NormalDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7414= org.apache.commons.math3.distribution.NormalDistribution:getMean()	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7415= org.apache.commons.math3.distribution.NormalDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7416= org.apache.commons.math3.distribution.NormalDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7417= org.apache.commons.math3.distribution.NormalDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7418= org.apache.commons.math3.distribution.NormalDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7419= org.apache.commons.math3.distribution.NormalDistribution:cumulativeProbability(double, double)	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7420= org.apache.commons.math3.distribution.NormalDistribution:probability(double, double)	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7421= org.apache.commons.math3.distribution.NormalDistribution:NormalDistribution(double, double)	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7422= org.apache.commons.math3.distribution.NormalDistribution:NormalDistribution(double, double, double)	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7423= org.apache.commons.math3.distribution.NormalDistribution:getStandardDeviation()	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7424= org.apache.commons.math3.distribution.NormalDistribution:logDensity(double)	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7425= org.apache.commons.math3.distribution.NormalDistribution:NormalDistribution()	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7426= org.apache.commons.math3.distribution.NormalDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java
7427= org.apache.commons.math3.transform.FastFourierTransformer:getDimensionSizes()	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7428= org.apache.commons.math3.transform.FastFourierTransformer.MultiDimensionalComplexMatrix:getDimensionSizes()	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7429= org.apache.commons.math3.transform.FastFourierTransformer:set(Complex, int)	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7430= org.apache.commons.math3.transform.FastFourierTransformer:normalizeTransformedData(double[][], DftNormalization, TransformType)	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7431= org.apache.commons.math3.transform.FastFourierTransformer:getArray()	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7432= org.apache.commons.math3.transform.FastFourierTransformer.MultiDimensionalComplexMatrix:getArray()	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7433= org.apache.commons.math3.transform.FastFourierTransformer.MultiDimensionalComplexMatrix:clone(MultiDimensionalComplexMatrix)	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7434= org.apache.commons.math3.transform.FastFourierTransformer:clone(MultiDimensionalComplexMatrix)	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7435= org.apache.commons.math3.transform.FastFourierTransformer:get(int)	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7436= org.apache.commons.math3.transform.FastFourierTransformer:clone()	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7437= org.apache.commons.math3.transform.FastFourierTransformer:transform(UnivariateFunction, double, double, int, TransformType)	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7438= org.apache.commons.math3.transform.FastFourierTransformer:mdfft(Object, TransformType)	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7439= org.apache.commons.math3.transform.FastFourierTransformer.MultiDimensionalComplexMatrix:set(Complex, int)	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7440= org.apache.commons.math3.transform.FastFourierTransformer:bitReversalShuffle2(double[], double[])	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7441= org.apache.commons.math3.transform.FastFourierTransformer:MultiDimensionalComplexMatrix(Object)	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7442= org.apache.commons.math3.transform.FastFourierTransformer.MultiDimensionalComplexMatrix:clone()	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7443= org.apache.commons.math3.transform.FastFourierTransformer:transform(double[], TransformType)	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7444= org.apache.commons.math3.transform.FastFourierTransformer.MultiDimensionalComplexMatrix:MultiDimensionalComplexMatrix(Object)	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7445= org.apache.commons.math3.transform.FastFourierTransformer:FastFourierTransformer(DftNormalization)	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7446= org.apache.commons.math3.transform.FastFourierTransformer:transform(Complex[], TransformType)	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7447= org.apache.commons.math3.transform.FastFourierTransformer:mdfft(MultiDimensionalComplexMatrix, TransformType, int, int[])	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7448= org.apache.commons.math3.transform.FastFourierTransformer.MultiDimensionalComplexMatrix:get(int)	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7449= org.apache.commons.math3.transform.FastFourierTransformer:transformInPlace(double[][], DftNormalization, TransformType)	/src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
7450= org.apache.commons.math3.linear.FieldMatrixPreservingVisitor:end()	/src/main/java/org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.java
7451= org.apache.commons.math3.linear.FieldMatrixPreservingVisitor:start(int, int, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.java
7452= org.apache.commons.math3.linear.FieldMatrixPreservingVisitor:visit(int, int, T)	/src/main/java/org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.java
7453= org.apache.commons.math3.genetics.BinaryChromosome:BinaryChromosome(List<Integer>)	/src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java
7454= org.apache.commons.math3.genetics.BinaryChromosome:randomBinaryRepresentation(int)	/src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java
7455= org.apache.commons.math3.genetics.BinaryChromosome:BinaryChromosome(Integer[])	/src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java
7456= org.apache.commons.math3.genetics.BinaryChromosome:checkValidity(List<Integer>)	/src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java
7457= org.apache.commons.math3.genetics.BinaryChromosome:isSame(Chromosome)	/src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java
7458= org.apache.commons.math3.stat.data.CertifiedDataAbstractTest:loadData()	/src/test/java/org/apache/commons/math3/stat/data/CertifiedDataAbstractTest.java
7459= org.apache.commons.math3.stat.data.CertifiedDataAbstractTest:getResourceName()	/src/test/java/org/apache/commons/math3/stat/data/CertifiedDataAbstractTest.java
7460= org.apache.commons.math3.stat.data.CertifiedDataAbstractTest:setUp()	/src/test/java/org/apache/commons/math3/stat/data/CertifiedDataAbstractTest.java
7461= org.apache.commons.math3.stat.data.CertifiedDataAbstractTest:tearDown()	/src/test/java/org/apache/commons/math3/stat/data/CertifiedDataAbstractTest.java
7462= org.apache.commons.math3.stat.data.CertifiedDataAbstractTest:testCertifiedValues()	/src/test/java/org/apache/commons/math3/stat/data/CertifiedDataAbstractTest.java
7463= org.apache.commons.math3.stat.data.CertifiedDataAbstractTest:getMaximumAbsoluteError()	/src/test/java/org/apache/commons/math3/stat/data/CertifiedDataAbstractTest.java
7464= org.apache.commons.math3.stat.data.CertifiedDataAbstractTest:getProperty(Object, String)	/src/test/java/org/apache/commons/math3/stat/data/CertifiedDataAbstractTest.java
7465= org.apache.commons.math3.ode.ExpandableStatefulODE:getTotalDimension()	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7466= org.apache.commons.math3.ode.ExpandableStatefulODE:setPrimaryState(double[])	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7467= org.apache.commons.math3.ode.ExpandableStatefulODE:getPrimary()	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7468= org.apache.commons.math3.ode.ExpandableStatefulODE:ExpandableStatefulODE(FirstOrderDifferentialEquations)	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7469= org.apache.commons.math3.ode.ExpandableStatefulODE:getSecondaryState(int)	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7470= org.apache.commons.math3.ode.ExpandableStatefulODE:computeDerivatives(double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7471= org.apache.commons.math3.ode.ExpandableStatefulODE:getPrimaryStateDot()	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7472= org.apache.commons.math3.ode.ExpandableStatefulODE:addSecondaryEquations(SecondaryEquations)	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7473= org.apache.commons.math3.ode.ExpandableStatefulODE:getPrimaryMapper()	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7474= org.apache.commons.math3.ode.ExpandableStatefulODE:setSecondaryState(int, double[])	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7475= org.apache.commons.math3.ode.ExpandableStatefulODE:setCompleteState(double[])	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7476= org.apache.commons.math3.ode.ExpandableStatefulODE:setTime(double)	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7477= org.apache.commons.math3.ode.ExpandableStatefulODE:getTime()	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7478= org.apache.commons.math3.ode.ExpandableStatefulODE:getSecondaryMappers()	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7479= org.apache.commons.math3.ode.ExpandableStatefulODE:getSecondaryStateDot(int)	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7480= org.apache.commons.math3.ode.ExpandableStatefulODE:getPrimaryState()	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7481= org.apache.commons.math3.ode.ExpandableStatefulODE.SecondaryComponent:SecondaryComponent(SecondaryEquations, int)	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7482= org.apache.commons.math3.ode.ExpandableStatefulODE:getCompleteState()	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7483= org.apache.commons.math3.ode.ExpandableStatefulODE:SecondaryComponent(SecondaryEquations, int)	/src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java
7484= org.apache.commons.math3.exception.InsufficientDataException:InsufficientDataException(Localizable, Object)	/src/main/java/org/apache/commons/math3/exception/InsufficientDataException.java
7485= org.apache.commons.math3.exception.InsufficientDataException:InsufficientDataException()	/src/main/java/org/apache/commons/math3/exception/InsufficientDataException.java
7486= org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizer:DifferentiableMultivariateVectorMultiStartOptimizer(DifferentiableMultivariateVectorOptimizer, int, RandomVectorGenerator)	/src/main/java/org/apache/commons/math3/optimization/DifferentiableMultivariateVectorMultiStartOptimizer.java
7487= org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain:MonotoneChain(boolean)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/MonotoneChain.java
7488= org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain:MonotoneChain(boolean, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/MonotoneChain.java
7489= org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain:MonotoneChain()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/MonotoneChain.java
7490= org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain:findHullVertices(Collection<Vector2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/MonotoneChain.java
7491= org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain:compare(Vector2D, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/MonotoneChain.java
7492= org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain:updateHull(Vector2D, List<Vector2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/MonotoneChain.java
7493= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression:calculateBeta()	/src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java
7494= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression:calculateAdjustedRSquared()	/src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java
7495= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression:calculateResidualSumOfSquares()	/src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java
7496= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression:OLSMultipleLinearRegression(double)	/src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java
7497= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression:calculateRSquared()	/src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java
7498= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression:newXSampleData(double[][])	/src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java
7499= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression:OLSMultipleLinearRegression()	/src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java
7500= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression:newSampleData(double[], double[][])	/src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java
7501= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression:calculateHat()	/src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java
7502= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression:calculateTotalSumOfSquares()	/src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java
7503= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression:newSampleData(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java
7504= org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression:calculateBetaVariance()	/src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java
7505= org.apache.commons.math3.exception.NonMonotonicSequenceException:NonMonotonicSequenceException(Number, Number, int)	/src/main/java/org/apache/commons/math3/exception/NonMonotonicSequenceException.java
7506= org.apache.commons.math3.exception.NonMonotonicSequenceException:getDirection()	/src/main/java/org/apache/commons/math3/exception/NonMonotonicSequenceException.java
7507= org.apache.commons.math3.exception.NonMonotonicSequenceException:getPrevious()	/src/main/java/org/apache/commons/math3/exception/NonMonotonicSequenceException.java
7508= org.apache.commons.math3.exception.NonMonotonicSequenceException:getStrict()	/src/main/java/org/apache/commons/math3/exception/NonMonotonicSequenceException.java
7509= org.apache.commons.math3.exception.NonMonotonicSequenceException:NonMonotonicSequenceException(Number, Number, int, MathArrays.OrderDirection, boolean)	/src/main/java/org/apache/commons/math3/exception/NonMonotonicSequenceException.java
7510= org.apache.commons.math3.exception.NonMonotonicSequenceException:getIndex()	/src/main/java/org/apache/commons/math3/exception/NonMonotonicSequenceException.java
7511= org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction:getObjectiveFunction()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunction.java
7512= org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction:ObjectiveFunction(MultivariateFunction)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunction.java
7513= org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver:solve(int, FUNC, double, double, AllowedSolution)	/src/main/java/org/apache/commons/math3/analysis/solvers/BracketedUnivariateSolver.java
7514= org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver:solve(int, FUNC, double, double, double, AllowedSolution)	/src/main/java/org/apache/commons/math3/analysis/solvers/BracketedUnivariateSolver.java
7515= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:buildPolynomial(int, List<BigFraction>, RecurrenceCoefficientsGenerator)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7516= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.JacobiKey:hashCode()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7517= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:generate(int)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7518= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:createLegendrePolynomial(int)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7519= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.JacobiKey:JacobiKey(int, int)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7520= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:equals(Object)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7521= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.JacobiKey:equals(Object)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7522= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:hashCode()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7523= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:createHermitePolynomial(int)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7524= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator:generate(int)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7525= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:shift(double[], double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7526= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:computeUpToDegree(int, int, RecurrenceCoefficientsGenerator, List<BigFraction>)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7527= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:<clinit0>	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7528= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:createLaguerrePolynomial(int)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7529= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:PolynomialsUtils()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7530= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:createChebyshevPolynomial(int)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7531= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:createJacobiPolynomial(int, int, int)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7532= org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:JacobiKey(int, int)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
7533= org.apache.commons.math3.linear.DefaultFieldMatrixChangingVisitor:start(int, int, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/DefaultFieldMatrixChangingVisitor.java
7534= org.apache.commons.math3.linear.DefaultFieldMatrixChangingVisitor:end()	/src/main/java/org/apache/commons/math3/linear/DefaultFieldMatrixChangingVisitor.java
7535= org.apache.commons.math3.linear.DefaultFieldMatrixChangingVisitor:visit(int, int, T)	/src/main/java/org/apache/commons/math3/linear/DefaultFieldMatrixChangingVisitor.java
7536= org.apache.commons.math3.linear.DefaultFieldMatrixChangingVisitor:DefaultFieldMatrixChangingVisitor(T)	/src/main/java/org/apache/commons/math3/linear/DefaultFieldMatrixChangingVisitor.java
7537= org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder:getEdges()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/EdgesBuilder.java
7538= org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder:visitOrder(BSPTree<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/EdgesBuilder.java
7539= org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder:EdgesBuilder(BSPTree<Sphere2D>, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/EdgesBuilder.java
7540= org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder:getFollowingEdge(Edge)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/EdgesBuilder.java
7541= org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder:visitInternalNode(BSPTree<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/EdgesBuilder.java
7542= org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder:visitLeafNode(BSPTree<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/EdgesBuilder.java
7543= org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder:addContribution(SubCircle, boolean, BSPTree<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/EdgesBuilder.java
7544= org.apache.commons.math3.genetics.SelectionPolicy:select(Population)	/src/main/java/org/apache/commons/math3/genetics/SelectionPolicy.java
7545= org.apache.commons.math3.analysis.function.Acosh:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Acosh.java
7546= org.apache.commons.math3.analysis.function.Acosh:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Acosh.java
7547= org.apache.commons.math3.analysis.function.Acosh:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Acosh.java
7548= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getSumsq()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7549= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getSummary()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7550= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:copy(SynchronizedSummaryStatistics, SynchronizedSummaryStatistics)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7551= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getPopulationVariance()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7552= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:setGeoMeanImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7553= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getVarianceImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7554= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getSumLogImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7555= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getSumsqImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7556= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getSum()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7557= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7558= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:setVarianceImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7559= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getMaxImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7560= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getGeometricMean()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7561= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:setMaxImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7562= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getGeoMeanImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7563= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:SynchronizedSummaryStatistics(SynchronizedSummaryStatistics)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7564= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getMax()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7565= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:toString()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7566= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:setSumsqImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7567= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:setSumImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7568= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:setMinImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7569= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getVariance()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7570= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:hashCode()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7571= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:setSumLogImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7572= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getMeanImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7573= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getSumImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7574= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:SynchronizedSummaryStatistics()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7575= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:addValue(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7576= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getMin()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7577= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getMinImpl()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7578= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:equals(Object)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7579= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7580= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:getStandardDeviation()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7581= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7582= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:setMeanImpl(StorelessUnivariateStatistic)	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7583= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java
7584= org.apache.commons.math3.distribution.EnumeratedRealDistribution:inverseCumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/EnumeratedRealDistribution.java
7585= org.apache.commons.math3.distribution.EnumeratedRealDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedRealDistribution.java
7586= org.apache.commons.math3.distribution.EnumeratedRealDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedRealDistribution.java
7587= org.apache.commons.math3.distribution.EnumeratedRealDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedRealDistribution.java
7588= org.apache.commons.math3.distribution.EnumeratedRealDistribution:probability(double)	/src/main/java/org/apache/commons/math3/distribution/EnumeratedRealDistribution.java
7589= org.apache.commons.math3.distribution.EnumeratedRealDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedRealDistribution.java
7590= org.apache.commons.math3.distribution.EnumeratedRealDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedRealDistribution.java
7591= org.apache.commons.math3.distribution.EnumeratedRealDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/EnumeratedRealDistribution.java
7592= org.apache.commons.math3.distribution.EnumeratedRealDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/EnumeratedRealDistribution.java
7593= org.apache.commons.math3.distribution.EnumeratedRealDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedRealDistribution.java
7594= org.apache.commons.math3.distribution.EnumeratedRealDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedRealDistribution.java
7595= org.apache.commons.math3.distribution.EnumeratedRealDistribution:EnumeratedRealDistribution(RandomGenerator, double[], double[])	/src/main/java/org/apache/commons/math3/distribution/EnumeratedRealDistribution.java
7596= org.apache.commons.math3.distribution.EnumeratedRealDistribution:EnumeratedRealDistribution(double[], double[])	/src/main/java/org/apache/commons/math3/distribution/EnumeratedRealDistribution.java
7597= org.apache.commons.math3.distribution.EnumeratedRealDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedRealDistribution.java
7598= org.apache.commons.math3.optim.PointValuePair.DataTransferObject:readResolve()	/src/main/java/org/apache/commons/math3/optim/PointValuePair.java
7599= org.apache.commons.math3.optim.PointValuePair:PointValuePair(double[], double, boolean)	/src/main/java/org/apache/commons/math3/optim/PointValuePair.java
7600= org.apache.commons.math3.optim.PointValuePair.DataTransferObject:DataTransferObject(double[], double)	/src/main/java/org/apache/commons/math3/optim/PointValuePair.java
7601= org.apache.commons.math3.optim.PointValuePair:writeReplace()	/src/main/java/org/apache/commons/math3/optim/PointValuePair.java
7602= org.apache.commons.math3.optim.PointValuePair:getPointRef()	/src/main/java/org/apache/commons/math3/optim/PointValuePair.java
7603= org.apache.commons.math3.optim.PointValuePair:readResolve()	/src/main/java/org/apache/commons/math3/optim/PointValuePair.java
7604= org.apache.commons.math3.optim.PointValuePair:PointValuePair(double[], double)	/src/main/java/org/apache/commons/math3/optim/PointValuePair.java
7605= org.apache.commons.math3.optim.PointValuePair:getPoint()	/src/main/java/org/apache/commons/math3/optim/PointValuePair.java
7606= org.apache.commons.math3.optim.PointValuePair:DataTransferObject(double[], double)	/src/main/java/org/apache/commons/math3/optim/PointValuePair.java
7607= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:updateMembershipMatrix()	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7608= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:FuzzyKMeansClusterer(int, double, int, DistanceMeasure)	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7609= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:initializeMembershipMatrix()	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7610= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:FuzzyKMeansClusterer(int, double, int, DistanceMeasure, double, RandomGenerator)	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7611= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:getFuzziness()	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7612= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:getK()	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7613= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:getClusters()	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7614= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:getMembershipMatrix()	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7615= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:cluster(Collection<T>)	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7616= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:saveMembershipMatrix(double[][])	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7617= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:calculateMaxMembershipChange(double[][])	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7618= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:getRandomGenerator()	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7619= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:getEpsilon()	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7620= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:getDataPoints()	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7621= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:getObjectiveFunctionValue()	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7622= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:updateClusterCenters()	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7623= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:getMaxIterations()	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7624= org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:FuzzyKMeansClusterer(int, double)	/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
7625= org.apache.commons.math3.ode.nonstiff.AdamsIntegrator:AdamsIntegrator(String, int, int, double, double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsIntegrator.java
7626= org.apache.commons.math3.ode.nonstiff.AdamsIntegrator:AdamsIntegrator(String, int, int, double, double, double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsIntegrator.java
7627= org.apache.commons.math3.ode.nonstiff.AdamsIntegrator:updateHighOrderDerivativesPhase1(Array2DRowRealMatrix)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsIntegrator.java
7628= org.apache.commons.math3.ode.nonstiff.AdamsIntegrator:updateHighOrderDerivativesPhase2(double[], double[], Array2DRowRealMatrix)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsIntegrator.java
7629= org.apache.commons.math3.ode.nonstiff.AdamsIntegrator:integrate(ExpandableStatefulODE, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsIntegrator.java
7630= org.apache.commons.math3.ode.nonstiff.AdamsIntegrator:initializeHighOrderDerivatives(double, double[], double[][], double[][])	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsIntegrator.java
7631= org.apache.commons.math3.optimization.SimpleBounds:SimpleBounds(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/SimpleBounds.java
7632= org.apache.commons.math3.optimization.SimpleBounds:getUpper()	/src/main/java/org/apache/commons/math3/optimization/SimpleBounds.java
7633= org.apache.commons.math3.optimization.SimpleBounds:getLower()	/src/main/java/org/apache/commons/math3/optimization/SimpleBounds.java
7634= org.apache.commons.math3.geometry.partitioning.Region:getTree(boolean)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Region.java
7635= org.apache.commons.math3.geometry.partitioning.Region:isEmpty()	/src/main/java/org/apache/commons/math3/geometry/partitioning/Region.java
7636= org.apache.commons.math3.geometry.partitioning.Region:checkPoint(Point<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Region.java
7637= org.apache.commons.math3.geometry.partitioning.Region:contains(Region<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Region.java
7638= org.apache.commons.math3.geometry.partitioning.Region:getBarycenter()	/src/main/java/org/apache/commons/math3/geometry/partitioning/Region.java
7639= org.apache.commons.math3.geometry.partitioning.Region:getBoundarySize()	/src/main/java/org/apache/commons/math3/geometry/partitioning/Region.java
7640= org.apache.commons.math3.geometry.partitioning.Region:getSize()	/src/main/java/org/apache/commons/math3/geometry/partitioning/Region.java
7641= org.apache.commons.math3.geometry.partitioning.Region:side(Hyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Region.java
7642= org.apache.commons.math3.geometry.partitioning.Region:copySelf()	/src/main/java/org/apache/commons/math3/geometry/partitioning/Region.java
7643= org.apache.commons.math3.geometry.partitioning.Region:projectToBoundary(Point<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Region.java
7644= org.apache.commons.math3.geometry.partitioning.Region:isEmpty(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Region.java
7645= org.apache.commons.math3.geometry.partitioning.Region:buildNew(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Region.java
7646= org.apache.commons.math3.geometry.partitioning.Region:isFull()	/src/main/java/org/apache/commons/math3/geometry/partitioning/Region.java
7647= org.apache.commons.math3.geometry.partitioning.Region:intersection(SubHyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Region.java
7648= org.apache.commons.math3.geometry.partitioning.Region:isFull(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/Region.java
7649= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:dotProduct(Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7650= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:subtract(double, Vector<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7651= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:hashCode()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7652= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:Vector3D(double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7653= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:orthogonal()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7654= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:getNormInf()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7655= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:distanceSq(Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7656= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:subtract(Vector<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7657= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:isNaN()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7658= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:crossProduct(Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7659= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:toString(NumberFormat)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7660= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:negate()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7661= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:distance(Point<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7662= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:Vector3D(double[])	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7663= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:Vector3D(double, Vector3D, double, Vector3D, double, Vector3D, double, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7664= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:Vector3D(double, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7665= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:isInfinite()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7666= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:getNorm()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7667= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:getDelta()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7668= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:add(double, Vector<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7669= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:normalize()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7670= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:getNorm1()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7671= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:getNormSq()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7672= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:toString()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7673= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:distance1(Vector<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7674= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:distance1(Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7675= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:equals(Object)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7676= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:distanceSq(Vector<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7677= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:getSpace()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7678= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:getZ()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7679= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:angle(Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7680= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:crossProduct(Vector<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7681= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:distanceInf(Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7682= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:getY()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7683= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:distanceInf(Vector<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7684= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:getX()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7685= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:Vector3D(double, Vector3D, double, Vector3D, double, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7686= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:getAlpha()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7687= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:Vector3D(double, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7688= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:getZero()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7689= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:add(Vector<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7690= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:scalarMultiply(double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7691= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:toArray()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7692= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:distance(Vector<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7693= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:Vector3D(double, Vector3D, double, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7694= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:distance(Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7695= org.apache.commons.math3.geometry.euclidean.threed.Vector3D:dotProduct(Vector<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
7696= org.apache.commons.math3.fraction.BigFractionFormat:parseNextBigInteger(String, ParsePosition)	/src/main/java/org/apache/commons/math3/fraction/BigFractionFormat.java
7697= org.apache.commons.math3.fraction.BigFractionFormat:parse(String)	/src/main/java/org/apache/commons/math3/fraction/BigFractionFormat.java
7698= org.apache.commons.math3.fraction.BigFractionFormat:getImproperInstance()	/src/main/java/org/apache/commons/math3/fraction/BigFractionFormat.java
7699= org.apache.commons.math3.fraction.BigFractionFormat:BigFractionFormat()	/src/main/java/org/apache/commons/math3/fraction/BigFractionFormat.java
7700= org.apache.commons.math3.fraction.BigFractionFormat:getProperInstance(Locale)	/src/main/java/org/apache/commons/math3/fraction/BigFractionFormat.java
7701= org.apache.commons.math3.fraction.BigFractionFormat:BigFractionFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/fraction/BigFractionFormat.java
7702= org.apache.commons.math3.fraction.BigFractionFormat:BigFractionFormat(NumberFormat, NumberFormat)	/src/main/java/org/apache/commons/math3/fraction/BigFractionFormat.java
7703= org.apache.commons.math3.fraction.BigFractionFormat:parse(String, ParsePosition)	/src/main/java/org/apache/commons/math3/fraction/BigFractionFormat.java
7704= org.apache.commons.math3.fraction.BigFractionFormat:getImproperInstance(Locale)	/src/main/java/org/apache/commons/math3/fraction/BigFractionFormat.java
7705= org.apache.commons.math3.fraction.BigFractionFormat:format(Object, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/fraction/BigFractionFormat.java
7706= org.apache.commons.math3.fraction.BigFractionFormat:getAvailableLocales()	/src/main/java/org/apache/commons/math3/fraction/BigFractionFormat.java
7707= org.apache.commons.math3.fraction.BigFractionFormat:formatBigFraction(BigFraction)	/src/main/java/org/apache/commons/math3/fraction/BigFractionFormat.java
7708= org.apache.commons.math3.fraction.BigFractionFormat:getProperInstance()	/src/main/java/org/apache/commons/math3/fraction/BigFractionFormat.java
7709= org.apache.commons.math3.fraction.BigFractionFormat:format(BigFraction, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/fraction/BigFractionFormat.java
7710= org.apache.commons.math3.random.RandomVectorGenerator:nextVector()	/src/main/java/org/apache/commons/math3/random/RandomVectorGenerator.java
7711= org.apache.commons.math3.optim.SimpleBounds:getLower()	/src/main/java/org/apache/commons/math3/optim/SimpleBounds.java
7712= org.apache.commons.math3.optim.SimpleBounds:unbounded(int)	/src/main/java/org/apache/commons/math3/optim/SimpleBounds.java
7713= org.apache.commons.math3.optim.SimpleBounds:SimpleBounds(double[], double[])	/src/main/java/org/apache/commons/math3/optim/SimpleBounds.java
7714= org.apache.commons.math3.optim.SimpleBounds:getUpper()	/src/main/java/org/apache/commons/math3/optim/SimpleBounds.java
7715= org.apache.commons.math3.fitting.GaussianCurveFitter:withMaxIterations(int)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7716= org.apache.commons.math3.fitting.GaussianCurveFitter.ParameterGuesser:ParameterGuesser(Collection<WeightedObservedPoint>)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7717= org.apache.commons.math3.fitting.GaussianCurveFitter.ParameterGuesser:sortObservations(Collection<WeightedObservedPoint>)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7718= org.apache.commons.math3.fitting.GaussianCurveFitter:findMaxY(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7719= org.apache.commons.math3.fitting.GaussianCurveFitter.ParameterGuesser:isBetween(double, double, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7720= org.apache.commons.math3.fitting.GaussianCurveFitter.ParameterGuesser:getInterpolationPointsForY(WeightedObservedPoint[], int, int, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7721= org.apache.commons.math3.fitting.GaussianCurveFitter:getProblem(Collection<WeightedObservedPoint>)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7722= org.apache.commons.math3.fitting.GaussianCurveFitter:GaussianCurveFitter(double[], int)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7723= org.apache.commons.math3.fitting.GaussianCurveFitter.ParameterGuesser:interpolateXAtY(WeightedObservedPoint[], int, int, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7724= org.apache.commons.math3.fitting.GaussianCurveFitter:getInterpolationPointsForY(WeightedObservedPoint[], int, int, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7725= org.apache.commons.math3.fitting.GaussianCurveFitter:gradient(double, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7726= org.apache.commons.math3.fitting.GaussianCurveFitter:basicGuess(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7727= org.apache.commons.math3.fitting.GaussianCurveFitter.ParameterGuesser:basicGuess(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7728= org.apache.commons.math3.fitting.GaussianCurveFitter:guess()	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7729= org.apache.commons.math3.fitting.GaussianCurveFitter:ParameterGuesser(Collection<WeightedObservedPoint>)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7730= org.apache.commons.math3.fitting.GaussianCurveFitter:compare(WeightedObservedPoint, WeightedObservedPoint)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7731= org.apache.commons.math3.fitting.GaussianCurveFitter.ParameterGuesser:compare(WeightedObservedPoint, WeightedObservedPoint)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7732= org.apache.commons.math3.fitting.GaussianCurveFitter:create()	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7733= org.apache.commons.math3.fitting.GaussianCurveFitter:withStartPoint(double[])	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7734= org.apache.commons.math3.fitting.GaussianCurveFitter.ParameterGuesser:findMaxY(WeightedObservedPoint[])	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7735= org.apache.commons.math3.fitting.GaussianCurveFitter:sortObservations(Collection<WeightedObservedPoint>)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7736= org.apache.commons.math3.fitting.GaussianCurveFitter:isBetween(double, double, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7737= org.apache.commons.math3.fitting.GaussianCurveFitter:value(double, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7738= org.apache.commons.math3.fitting.GaussianCurveFitter:interpolateXAtY(WeightedObservedPoint[], int, int, double)	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7739= org.apache.commons.math3.fitting.GaussianCurveFitter.ParameterGuesser:guess()	/src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java
7740= org.apache.commons.math3.ode.sampling.StepInterpolator:getInterpolatedState()	/src/main/java/org/apache/commons/math3/ode/sampling/StepInterpolator.java
7741= org.apache.commons.math3.ode.sampling.StepInterpolator:getInterpolatedSecondaryDerivatives(int)	/src/main/java/org/apache/commons/math3/ode/sampling/StepInterpolator.java
7742= org.apache.commons.math3.ode.sampling.StepInterpolator:getInterpolatedDerivatives()	/src/main/java/org/apache/commons/math3/ode/sampling/StepInterpolator.java
7743= org.apache.commons.math3.ode.sampling.StepInterpolator:copy()	/src/main/java/org/apache/commons/math3/ode/sampling/StepInterpolator.java
7744= org.apache.commons.math3.ode.sampling.StepInterpolator:getCurrentTime()	/src/main/java/org/apache/commons/math3/ode/sampling/StepInterpolator.java
7745= org.apache.commons.math3.ode.sampling.StepInterpolator:isForward()	/src/main/java/org/apache/commons/math3/ode/sampling/StepInterpolator.java
7746= org.apache.commons.math3.ode.sampling.StepInterpolator:setInterpolatedTime(double)	/src/main/java/org/apache/commons/math3/ode/sampling/StepInterpolator.java
7747= org.apache.commons.math3.ode.sampling.StepInterpolator:getPreviousTime()	/src/main/java/org/apache/commons/math3/ode/sampling/StepInterpolator.java
7748= org.apache.commons.math3.ode.sampling.StepInterpolator:getInterpolatedTime()	/src/main/java/org/apache/commons/math3/ode/sampling/StepInterpolator.java
7749= org.apache.commons.math3.ode.sampling.StepInterpolator:getInterpolatedSecondaryState(int)	/src/main/java/org/apache/commons/math3/ode/sampling/StepInterpolator.java
7750= org.apache.commons.math3.transform.FastHadamardTransformer:transform(int[])	/src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java
7751= org.apache.commons.math3.transform.FastHadamardTransformer:transform(UnivariateFunction, double, double, int, TransformType)	/src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java
7752= org.apache.commons.math3.transform.FastHadamardTransformer:transform(double[], TransformType)	/src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java
7753= org.apache.commons.math3.transform.FastHadamardTransformer:fht(int[])	/src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java
7754= org.apache.commons.math3.transform.FastHadamardTransformer:fht(double[])	/src/main/java/org/apache/commons/math3/transform/FastHadamardTransformer.java
7755= org.apache.commons.math3.ml.distance.CanberraDistanceTest:testZero()	/src/test/java/org/apache/commons/math3/ml/distance/CanberraDistanceTest.java
7756= org.apache.commons.math3.ml.distance.CanberraDistanceTest:testZero2()	/src/test/java/org/apache/commons/math3/ml/distance/CanberraDistanceTest.java
7757= org.apache.commons.math3.ml.distance.CanberraDistanceTest:test()	/src/test/java/org/apache/commons/math3/ml/distance/CanberraDistanceTest.java
7758= RealFunctionValidation:findStaticMethod(String, String, List<Class<?>>)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7759= RealFunctionValidation:create(Properties)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7760= RealFunctionValidation.ApplicationProperties:getPropertyAsInteger(Properties, String)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7761= RealFunctionValidation:parsePrimitiveType(String)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7762= RealFunctionValidation.ApplicationProperties:findStaticMethod(String, String, List<Class<?>>)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7763= RealFunctionValidation.MissingRequiredPropertyException:MissingRequiredPropertyException(String)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7764= RealFunctionValidation.ApplicationProperties:create(Properties)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7765= RealFunctionValidation.ApplicationProperties:getPropertyAsString(Properties, String)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7766= RealFunctionValidation.ApplicationProperties:parsePrimitiveType(String)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7767= RealFunctionValidation:getPropertyAsString(Properties, String)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7768= RealFunctionValidation:main(String[])	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7769= RealFunctionValidation:getPropertyAsInteger(Properties, String)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7770= RealFunctionValidation:assessAccuracy(Method, DataInputStream, DataOutputStream)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7771= RealFunctionValidation:MissingRequiredPropertyException(String)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7772= RealFunctionValidation:readAndWritePrimitiveValue(DataInputStream, DataOutputStream, Class<?>)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7773= RealFunctionValidation:run(ApplicationProperties)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7774= RealFunctionValidation.ApplicationProperties:ApplicationProperties(String, String, String, String, int, int, int)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7775= RealFunctionValidation:ApplicationProperties(String, String, String, String, int, int, int)	/src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java
7776= org.apache.commons.math3.distribution.GammaDistribution:GammaDistribution(RandomGenerator, double, double, double)	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7777= org.apache.commons.math3.distribution.GammaDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7778= org.apache.commons.math3.distribution.GammaDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7779= org.apache.commons.math3.distribution.GammaDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7780= org.apache.commons.math3.distribution.GammaDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7781= org.apache.commons.math3.distribution.GammaDistribution:GammaDistribution(RandomGenerator, double, double)	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7782= org.apache.commons.math3.distribution.GammaDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7783= org.apache.commons.math3.distribution.GammaDistribution:getAlpha()	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7784= org.apache.commons.math3.distribution.GammaDistribution:logDensity(double)	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7785= org.apache.commons.math3.distribution.GammaDistribution:GammaDistribution(double, double)	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7786= org.apache.commons.math3.distribution.GammaDistribution:getSolverAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7787= org.apache.commons.math3.distribution.GammaDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7788= org.apache.commons.math3.distribution.GammaDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7789= org.apache.commons.math3.distribution.GammaDistribution:GammaDistribution(double, double, double)	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7790= org.apache.commons.math3.distribution.GammaDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7791= org.apache.commons.math3.distribution.GammaDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7792= org.apache.commons.math3.distribution.GammaDistribution:getBeta()	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7793= org.apache.commons.math3.distribution.GammaDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7794= org.apache.commons.math3.distribution.GammaDistribution:getShape()	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7795= org.apache.commons.math3.distribution.GammaDistribution:getScale()	/src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
7796= org.apache.commons.math3.analysis.FunctionUtils:combine(BivariateFunction, UnivariateFunction, UnivariateFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7797= org.apache.commons.math3.analysis.FunctionUtils:derivative()	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7798= org.apache.commons.math3.analysis.FunctionUtils:fix2ndArgument(BivariateFunction, double)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7799= org.apache.commons.math3.analysis.FunctionUtils:multiply(UnivariateFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7800= org.apache.commons.math3.analysis.FunctionUtils:toDifferentiableUnivariateFunction(UnivariateDifferentiableFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7801= org.apache.commons.math3.analysis.FunctionUtils:toMultivariateDifferentiableVectorFunction(DifferentiableMultivariateVectorFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7802= org.apache.commons.math3.analysis.FunctionUtils:collector(BivariateFunction, double)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7803= org.apache.commons.math3.analysis.FunctionUtils:sample(UnivariateFunction, double, double, int)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7804= org.apache.commons.math3.analysis.FunctionUtils:FunctionUtils()	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7805= org.apache.commons.math3.analysis.FunctionUtils:add(DifferentiableUnivariateFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7806= org.apache.commons.math3.analysis.FunctionUtils:toMultivariateDifferentiableFunction(DifferentiableMultivariateFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7807= org.apache.commons.math3.analysis.FunctionUtils:partialDerivative(int)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7808= org.apache.commons.math3.analysis.FunctionUtils:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7809= org.apache.commons.math3.analysis.FunctionUtils:value(DerivativeStructure[])	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7810= org.apache.commons.math3.analysis.FunctionUtils:jacobian()	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7811= org.apache.commons.math3.analysis.FunctionUtils:add(UnivariateDifferentiableFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7812= org.apache.commons.math3.analysis.FunctionUtils:add(UnivariateFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7813= org.apache.commons.math3.analysis.FunctionUtils:compose(UnivariateFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7814= org.apache.commons.math3.analysis.FunctionUtils:collector(BivariateFunction, UnivariateFunction, double)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7815= org.apache.commons.math3.analysis.FunctionUtils:compose(UnivariateDifferentiableFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7816= org.apache.commons.math3.analysis.FunctionUtils:compose(DifferentiableUnivariateFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7817= org.apache.commons.math3.analysis.FunctionUtils:multiply(DifferentiableUnivariateFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7818= org.apache.commons.math3.analysis.FunctionUtils:multiply(UnivariateDifferentiableFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7819= org.apache.commons.math3.analysis.FunctionUtils:value(double)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7820= org.apache.commons.math3.analysis.FunctionUtils:toUnivariateDifferential(DifferentiableUnivariateFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7821= org.apache.commons.math3.analysis.FunctionUtils:toDifferentiableMultivariateFunction(MultivariateDifferentiableFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7822= org.apache.commons.math3.analysis.FunctionUtils:fix1stArgument(BivariateFunction, double)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7823= org.apache.commons.math3.analysis.FunctionUtils:toDifferentiableMultivariateVectorFunction(MultivariateDifferentiableVectorFunction)	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7824= org.apache.commons.math3.analysis.FunctionUtils:gradient()	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7825= org.apache.commons.math3.analysis.FunctionUtils:value(double[])	/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
7826= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory:quasiSigmoidDecay(double, double, long)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactory.java
7827= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory:value(long)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactory.java
7828= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory:exponentialDecay(double, double, long)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactory.java
7829= org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory:LearningFactorFunctionFactory()	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactory.java
7830= org.apache.commons.math3.random.Well44497a:Well44497a(int[])	/src/main/java/org/apache/commons/math3/random/Well44497a.java
7831= org.apache.commons.math3.random.Well44497a:Well44497a(int)	/src/main/java/org/apache/commons/math3/random/Well44497a.java
7832= org.apache.commons.math3.random.Well44497a:next(int)	/src/main/java/org/apache/commons/math3/random/Well44497a.java
7833= org.apache.commons.math3.random.Well44497a:Well44497a()	/src/main/java/org/apache/commons/math3/random/Well44497a.java
7834= org.apache.commons.math3.random.Well44497a:Well44497a(long)	/src/main/java/org/apache/commons/math3/random/Well44497a.java
7835= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDatasetFactory:getModelDerivatives(double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDatasetFactory.java
7836= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDatasetFactory:createMGH17()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDatasetFactory.java
7837= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDatasetFactory:getModelValue(double, double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDatasetFactory.java
7838= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDatasetFactory:createAll()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDatasetFactory.java
7839= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDatasetFactory:createKirby2()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDatasetFactory.java
7840= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDatasetFactory:createHahn1()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDatasetFactory.java
7841= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDatasetFactory:StatisticalReferenceDatasetFactory()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDatasetFactory.java
7842= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDatasetFactory:createBufferedReaderFromResource(String)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDatasetFactory.java
7843= org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDatasetFactory:createLanczos1()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDatasetFactory.java
7844= org.apache.commons.math3.analysis.interpolation.LinearInterpolator:interpolate(double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java
7845= org.apache.commons.math3.exception.MathRuntimeException:MathRuntimeException(Localizable, Object)	/src/main/java/org/apache/commons/math3/exception/MathRuntimeException.java
7846= org.apache.commons.math3.exception.MathRuntimeException:getMessage()	/src/main/java/org/apache/commons/math3/exception/MathRuntimeException.java
7847= org.apache.commons.math3.exception.MathRuntimeException:getLocalizedMessage()	/src/main/java/org/apache/commons/math3/exception/MathRuntimeException.java
7848= org.apache.commons.math3.exception.MathRuntimeException:getContext()	/src/main/java/org/apache/commons/math3/exception/MathRuntimeException.java
7849= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP:getAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
7850= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP:solve(int, UnivariateDfpFunction, Dfp, Dfp, Dfp, AllowedSolution)	/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
7851= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP:getMaxEvaluations()	/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
7852= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP:getFunctionValueAccuracy()	/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
7853= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP:getRelativeAccuracy()	/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
7854= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP:solve(int, UnivariateDfpFunction, Dfp, Dfp, AllowedSolution)	/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
7855= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP:getMaximalOrder()	/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
7856= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP:getEvaluations()	/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
7857= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP:BracketingNthOrderBrentSolverDFP(Dfp, Dfp, Dfp, int)	/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
7858= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP:guessX(Dfp, Dfp[], Dfp[], int, int)	/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
7859= org.apache.commons.math3.geometry.partitioning.BoundaryAttribute:getPlusOutside()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.java
7860= org.apache.commons.math3.geometry.partitioning.BoundaryAttribute:BoundaryAttribute(SubHyperplane<S>, SubHyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.java
7861= org.apache.commons.math3.geometry.partitioning.BoundaryAttribute:getPlusInside()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryAttribute.java
7862= org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClustererTest:dimension2()	/src/test/java/org/apache/commons/math3/ml/clustering/MultiKMeansPlusPlusClustererTest.java
7863= org.apache.commons.math3.stat.inference.GTest:rootLogLikelihoodRatio(long, long, long, long)	/src/main/java/org/apache/commons/math3/stat/inference/GTest.java
7864= org.apache.commons.math3.stat.inference.GTest:gTestDataSetsComparison(long[], long[], double)	/src/main/java/org/apache/commons/math3/stat/inference/GTest.java
7865= org.apache.commons.math3.stat.inference.GTest:gTestIntrinsic(double[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/GTest.java
7866= org.apache.commons.math3.stat.inference.GTest:entropy(long[][])	/src/main/java/org/apache/commons/math3/stat/inference/GTest.java
7867= org.apache.commons.math3.stat.inference.GTest:gTest(double[], long[], double)	/src/main/java/org/apache/commons/math3/stat/inference/GTest.java
7868= org.apache.commons.math3.stat.inference.GTest:gTest(double[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/GTest.java
7869= org.apache.commons.math3.stat.inference.GTest:gTestDataSetsComparison(long[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/GTest.java
7870= org.apache.commons.math3.stat.inference.GTest:entropy(long[])	/src/main/java/org/apache/commons/math3/stat/inference/GTest.java
7871= org.apache.commons.math3.stat.inference.GTest:g(double[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/GTest.java
7872= org.apache.commons.math3.stat.inference.GTest:gDataSetsComparison(long[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/GTest.java
7873= org.apache.commons.math3.util.BigReal:getRoundingMode()	/src/main/java/org/apache/commons/math3/util/BigReal.java
7874= org.apache.commons.math3.util.BigReal:BigReal(BigInteger, int)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7875= org.apache.commons.math3.util.BigReal:setRoundingMode(RoundingMode)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7876= org.apache.commons.math3.util.BigReal:BigReal(char[], int, int, MathContext)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7877= org.apache.commons.math3.util.BigReal:BigReal(BigDecimal)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7878= org.apache.commons.math3.util.BigReal:BigReal(char[])	/src/main/java/org/apache/commons/math3/util/BigReal.java
7879= org.apache.commons.math3.util.BigReal:BigReal(BigInteger, MathContext)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7880= org.apache.commons.math3.util.BigReal:BigReal(int, MathContext)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7881= org.apache.commons.math3.util.BigReal:compareTo(BigReal)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7882= org.apache.commons.math3.util.BigReal:doubleValue()	/src/main/java/org/apache/commons/math3/util/BigReal.java
7883= org.apache.commons.math3.util.BigReal:add(BigReal)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7884= org.apache.commons.math3.util.BigReal:BigReal(long, MathContext)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7885= org.apache.commons.math3.util.BigReal:BigReal(char[], MathContext)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7886= org.apache.commons.math3.util.BigReal:BigReal(long)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7887= org.apache.commons.math3.util.BigReal:subtract(BigReal)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7888= org.apache.commons.math3.util.BigReal:BigReal(String)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7889= org.apache.commons.math3.util.BigReal:equals(Object)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7890= org.apache.commons.math3.util.BigReal:multiply(int)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7891= org.apache.commons.math3.util.BigReal:BigReal(double)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7892= org.apache.commons.math3.util.BigReal:hashCode()	/src/main/java/org/apache/commons/math3/util/BigReal.java
7893= org.apache.commons.math3.util.BigReal:getField()	/src/main/java/org/apache/commons/math3/util/BigReal.java
7894= org.apache.commons.math3.util.BigReal:BigReal(int)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7895= org.apache.commons.math3.util.BigReal:BigReal(BigInteger, int, MathContext)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7896= org.apache.commons.math3.util.BigReal:BigReal(double, MathContext)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7897= org.apache.commons.math3.util.BigReal:multiply(BigReal)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7898= org.apache.commons.math3.util.BigReal:BigReal(String, MathContext)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7899= org.apache.commons.math3.util.BigReal:setScale(int)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7900= org.apache.commons.math3.util.BigReal:reciprocal()	/src/main/java/org/apache/commons/math3/util/BigReal.java
7901= org.apache.commons.math3.util.BigReal:BigReal(char[], int, int)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7902= org.apache.commons.math3.util.BigReal:divide(BigReal)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7903= org.apache.commons.math3.util.BigReal:negate()	/src/main/java/org/apache/commons/math3/util/BigReal.java
7904= org.apache.commons.math3.util.BigReal:BigReal(BigInteger)	/src/main/java/org/apache/commons/math3/util/BigReal.java
7905= org.apache.commons.math3.util.BigReal:getScale()	/src/main/java/org/apache/commons/math3/util/BigReal.java
7906= org.apache.commons.math3.util.BigReal:bigDecimalValue()	/src/main/java/org/apache/commons/math3/util/BigReal.java
7907= org.apache.commons.math3.analysis.interpolation.TrivariateGridInterpolator:interpolate(double[], double[], double[], double[][][])	/src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java
7908= org.apache.commons.math3.optim.BaseMultivariateOptimizer:optimize(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/BaseMultivariateOptimizer.java
7909= org.apache.commons.math3.optim.BaseMultivariateOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/BaseMultivariateOptimizer.java
7910= org.apache.commons.math3.optim.BaseMultivariateOptimizer:checkParameters()	/src/main/java/org/apache/commons/math3/optim/BaseMultivariateOptimizer.java
7911= org.apache.commons.math3.optim.BaseMultivariateOptimizer:getStartPoint()	/src/main/java/org/apache/commons/math3/optim/BaseMultivariateOptimizer.java
7912= org.apache.commons.math3.optim.BaseMultivariateOptimizer:BaseMultivariateOptimizer(ConvergenceChecker<PAIR>)	/src/main/java/org/apache/commons/math3/optim/BaseMultivariateOptimizer.java
7913= org.apache.commons.math3.optim.BaseMultivariateOptimizer:getLowerBound()	/src/main/java/org/apache/commons/math3/optim/BaseMultivariateOptimizer.java
7914= org.apache.commons.math3.optim.BaseMultivariateOptimizer:getUpperBound()	/src/main/java/org/apache/commons/math3/optim/BaseMultivariateOptimizer.java
7915= org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer:compare(PointValuePair, PointValuePair)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizer.java
7916= org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer:store(PointValuePair)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizer.java
7917= org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer:clear()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizer.java
7918= org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer:getPairComparator()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizer.java
7919= org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer:getOptima()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizer.java
7920= org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer:MultiStartMultivariateOptimizer(MultivariateOptimizer, int, RandomVectorGenerator)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizer.java
7921= org.apache.commons.math3.linear.RealLinearOperator:getColumnDimension()	/src/main/java/org/apache/commons/math3/linear/RealLinearOperator.java
7922= org.apache.commons.math3.linear.RealLinearOperator:getRowDimension()	/src/main/java/org/apache/commons/math3/linear/RealLinearOperator.java
7923= org.apache.commons.math3.linear.RealLinearOperator:operateTranspose(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealLinearOperator.java
7924= org.apache.commons.math3.linear.RealLinearOperator:isTransposable()	/src/main/java/org/apache/commons/math3/linear/RealLinearOperator.java
7925= org.apache.commons.math3.linear.RealLinearOperator:operate(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealLinearOperator.java
7926= org.apache.commons.math3.stat.regression.RegressionResults:hasIntercept()	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7927= org.apache.commons.math3.stat.regression.RegressionResults:getStdErrorOfEstimates()	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7928= org.apache.commons.math3.stat.regression.RegressionResults:getNumberOfParameters()	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7929= org.apache.commons.math3.stat.regression.RegressionResults:RegressionResults()	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7930= org.apache.commons.math3.stat.regression.RegressionResults:getParameterEstimate(int)	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7931= org.apache.commons.math3.stat.regression.RegressionResults:RegressionResults(double[], double[][], boolean, long, int, double, double, double, boolean, boolean)	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7932= org.apache.commons.math3.stat.regression.RegressionResults:getTotalSumSquares()	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7933= org.apache.commons.math3.stat.regression.RegressionResults:getAdjustedRSquared()	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7934= org.apache.commons.math3.stat.regression.RegressionResults:getRegressionSumSquares()	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7935= org.apache.commons.math3.stat.regression.RegressionResults:getErrorSumSquares()	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7936= org.apache.commons.math3.stat.regression.RegressionResults:getVcvElement(int, int)	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7937= org.apache.commons.math3.stat.regression.RegressionResults:getMeanSquareError()	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7938= org.apache.commons.math3.stat.regression.RegressionResults:getRSquared()	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7939= org.apache.commons.math3.stat.regression.RegressionResults:getCovarianceOfParameters(int, int)	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7940= org.apache.commons.math3.stat.regression.RegressionResults:getStdErrorOfEstimate(int)	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7941= org.apache.commons.math3.stat.regression.RegressionResults:getN()	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7942= org.apache.commons.math3.stat.regression.RegressionResults:getParameterEstimates()	/src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java
7943= org.apache.commons.math3.optimization.Target:Target(double[])	/src/main/java/org/apache/commons/math3/optimization/Target.java
7944= org.apache.commons.math3.optimization.Target:getTarget()	/src/main/java/org/apache/commons/math3/optimization/Target.java
7945= org.apache.commons.math3.random.RandomDataImpl:nextSecureHexString(int)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7946= org.apache.commons.math3.random.RandomDataImpl:nextInversionDeviate(RealDistribution)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7947= org.apache.commons.math3.random.RandomDataImpl:nextInt(int, int)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7948= org.apache.commons.math3.random.RandomDataImpl:nextPoisson(double)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7949= org.apache.commons.math3.random.RandomDataImpl:nextGaussian(double, double)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7950= org.apache.commons.math3.random.RandomDataImpl:nextGamma(double, double)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7951= org.apache.commons.math3.random.RandomDataImpl:nextSecureInt(int, int)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7952= org.apache.commons.math3.random.RandomDataImpl:reSeed(long)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7953= org.apache.commons.math3.random.RandomDataImpl:reSeed()	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7954= org.apache.commons.math3.random.RandomDataImpl:nextPascal(int, double)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7955= org.apache.commons.math3.random.RandomDataImpl:setSecureAlgorithm(String, String)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7956= org.apache.commons.math3.random.RandomDataImpl:RandomDataImpl(RandomGenerator)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7957= org.apache.commons.math3.random.RandomDataImpl:nextF(double, double)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7958= org.apache.commons.math3.random.RandomDataImpl:reSeedSecure()	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7959= org.apache.commons.math3.random.RandomDataImpl:nextCauchy(double, double)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7960= org.apache.commons.math3.random.RandomDataImpl:nextInversionDeviate(IntegerDistribution)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7961= org.apache.commons.math3.random.RandomDataImpl:nextSecureLong(long, long)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7962= org.apache.commons.math3.random.RandomDataImpl:nextUniform(double, double)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7963= org.apache.commons.math3.random.RandomDataImpl:nextExponential(double)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7964= org.apache.commons.math3.random.RandomDataImpl:nextChiSquare(double)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7965= org.apache.commons.math3.random.RandomDataImpl:nextBeta(double, double)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7966= org.apache.commons.math3.random.RandomDataImpl:reSeedSecure(long)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7967= org.apache.commons.math3.random.RandomDataImpl:nextHypergeometric(int, int, int)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7968= org.apache.commons.math3.random.RandomDataImpl:nextSample(Collection<?>, int)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7969= org.apache.commons.math3.random.RandomDataImpl:nextZipf(int, double)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7970= org.apache.commons.math3.random.RandomDataImpl:nextUniform(double, double, boolean)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7971= org.apache.commons.math3.random.RandomDataImpl:nextT(double)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7972= org.apache.commons.math3.random.RandomDataImpl:nextBinomial(int, double)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7973= org.apache.commons.math3.random.RandomDataImpl:getDelegate()	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7974= org.apache.commons.math3.random.RandomDataImpl:nextWeibull(double, double)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7975= org.apache.commons.math3.random.RandomDataImpl:nextLong(long, long)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7976= org.apache.commons.math3.random.RandomDataImpl:RandomDataImpl()	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7977= org.apache.commons.math3.random.RandomDataImpl:nextHexString(int)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7978= org.apache.commons.math3.random.RandomDataImpl:nextPermutation(int, int)	/src/main/java/org/apache/commons/math3/random/RandomDataImpl.java
7979= org.apache.commons.math3.analysis.function.Acos:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Acos.java
7980= org.apache.commons.math3.analysis.function.Acos:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Acos.java
7981= org.apache.commons.math3.analysis.function.Acos:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Acos.java
7982= org.apache.commons.math3.linear.SchurTransformer:transform()	/src/main/java/org/apache/commons/math3/linear/SchurTransformer.java
7983= org.apache.commons.math3.linear.SchurTransformer:getT()	/src/main/java/org/apache/commons/math3/linear/SchurTransformer.java
7984= org.apache.commons.math3.linear.SchurTransformer:performDoubleQRStep(int, int, int, ShiftInfo, double[])	/src/main/java/org/apache/commons/math3/linear/SchurTransformer.java
7985= org.apache.commons.math3.linear.SchurTransformer:getNorm()	/src/main/java/org/apache/commons/math3/linear/SchurTransformer.java
7986= org.apache.commons.math3.linear.SchurTransformer:initQRStep(int, int, ShiftInfo, double[])	/src/main/java/org/apache/commons/math3/linear/SchurTransformer.java
7987= org.apache.commons.math3.linear.SchurTransformer:getP()	/src/main/java/org/apache/commons/math3/linear/SchurTransformer.java
7988= org.apache.commons.math3.linear.SchurTransformer:computeShift(int, int, int, ShiftInfo)	/src/main/java/org/apache/commons/math3/linear/SchurTransformer.java
7989= org.apache.commons.math3.linear.SchurTransformer:getPT()	/src/main/java/org/apache/commons/math3/linear/SchurTransformer.java
7990= org.apache.commons.math3.linear.SchurTransformer:SchurTransformer(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/SchurTransformer.java
7991= org.apache.commons.math3.linear.SchurTransformer:findSmallSubDiagonalElement(int, double)	/src/main/java/org/apache/commons/math3/linear/SchurTransformer.java
7992= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D:retrieveLineSegments()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHull2D.java
7993= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D:createRegion()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHull2D.java
7994= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D:ConvexHull2D(Vector2D[], double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHull2D.java
7995= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D:isConvex(Vector2D[])	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHull2D.java
7996= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D:getVertices()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHull2D.java
7997= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D:getLineSegments()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHull2D.java
7998= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate(double[], double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
7999= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:PolynomialFunction(double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8000= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:hashCode()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8001= org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8002= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:subtract(PolynomialFunction)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8003= org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric:gradient(double, double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8004= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:differentiate(double[])	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8005= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:getCoefficients()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8006= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:degree()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8007= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:add(PolynomialFunction)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8008= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:polynomialDerivative()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8009= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:gradient(double, double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8010= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:derivative()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8011= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8012= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:equals(Object)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8013= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:negate()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8014= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8015= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:toString(double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8016= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:toString()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8017= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:multiply(PolynomialFunction)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8018= org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java
8019= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:SphericalPolygonsSet(double, S2Point)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java
8020= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:computeGeometricalProperties()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java
8021= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:getBoundaryLoops()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java
8022= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:SphericalPolygonsSet(Vector3D, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java
8023= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:getOutsidePoints()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java
8024= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:SphericalPolygonsSet(Vector3D, Vector3D, double, int, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java
8025= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:SphericalPolygonsSet(BSPTree<Sphere2D>, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java
8026= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:verticesToTree(double, S2Point)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java
8027= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:getInsidePoints()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java
8028= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:SphericalPolygonsSet(double)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java
8029= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:getEnclosingCap()	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java
8030= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:createRegularPolygonVertices(Vector3D, Vector3D, double, int)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java
8031= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:SphericalPolygonsSet(Collection<SubHyperplane<Sphere2D>>, double)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java
8032= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:insertEdges(double, BSPTree<Sphere2D>, List<Edge>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java
8033= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet:buildNew(BSPTree<Sphere2D>)	/src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java
8034= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest:testConsistency()	/src/test/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java
8035= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest:testIncrementation()	/src/test/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java
8036= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java
8037= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest:testCopyConsistency()	/src/test/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java
8038= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest:testSerial()	/src/test/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java
8039= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest:testSerialization()	/src/test/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java
8040= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest:testMomentSmallSamples()	/src/test/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java
8041= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java
8042= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest:testEqualsAndHashCode()	/src/test/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java
8043= org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest:checkClearValue(StorelessUnivariateStatistic)	/src/test/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java
8044= org.apache.commons.math3.analysis.solvers.MullerSolver:MullerSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/MullerSolver.java
8045= org.apache.commons.math3.analysis.solvers.MullerSolver:solve(double, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/MullerSolver.java
8046= org.apache.commons.math3.analysis.solvers.MullerSolver:MullerSolver(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/MullerSolver.java
8047= org.apache.commons.math3.analysis.solvers.MullerSolver:MullerSolver()	/src/main/java/org/apache/commons/math3/analysis/solvers/MullerSolver.java
8048= org.apache.commons.math3.analysis.solvers.MullerSolver:doSolve()	/src/main/java/org/apache/commons/math3/analysis/solvers/MullerSolver.java
8049= org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator:EulerStepInterpolator(EulerStepInterpolator)	/src/main/java/org/apache/commons/math3/ode/nonstiff/EulerStepInterpolator.java
8050= org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator:computeInterpolatedStateAndDerivatives(double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/EulerStepInterpolator.java
8051= org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator:doCopy()	/src/main/java/org/apache/commons/math3/ode/nonstiff/EulerStepInterpolator.java
8052= org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator:EulerStepInterpolator()	/src/main/java/org/apache/commons/math3/ode/nonstiff/EulerStepInterpolator.java
8053= org.apache.commons.math3.exception.MaxCountExceededException:MaxCountExceededException(Localizable, Number, Object)	/src/main/java/org/apache/commons/math3/exception/MaxCountExceededException.java
8054= org.apache.commons.math3.exception.MaxCountExceededException:MaxCountExceededException(Number)	/src/main/java/org/apache/commons/math3/exception/MaxCountExceededException.java
8055= org.apache.commons.math3.exception.MaxCountExceededException:getMax()	/src/main/java/org/apache/commons/math3/exception/MaxCountExceededException.java
8056= org.apache.commons.math3.linear.SingularOperatorException:SingularOperatorException()	/src/main/java/org/apache/commons/math3/linear/SingularOperatorException.java
8057= org.apache.commons.math3.analysis.function.Pow:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Pow.java
8058= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter:unboundedToBounded(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8059= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.LowerUpperBoundMapper:unboundedToBounded(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8060= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.LowerBoundMapper:unboundedToBounded(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8061= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter:boundedToUnbounded(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8062= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter:LowerUpperBoundMapper(double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8063= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.UpperBoundMapper:UpperBoundMapper(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8064= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter:boundedToUnbounded(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8065= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.LowerBoundMapper:boundedToUnbounded(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8066= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter:MultivariateFunctionMappingAdapter(MultivariateFunction, double[], double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8067= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.LowerUpperBoundMapper:LowerUpperBoundMapper(double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8068= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.Mapper:unboundedToBounded(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8069= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.NoBoundsMapper:unboundedToBounded(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8070= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter:unboundedToBounded(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8071= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter:UpperBoundMapper(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8072= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.UpperBoundMapper:boundedToUnbounded(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8073= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter:LowerBoundMapper(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8074= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.NoBoundsMapper:boundedToUnbounded(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8075= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.LowerUpperBoundMapper:boundedToUnbounded(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8076= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.UpperBoundMapper:unboundedToBounded(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8077= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter:value(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8078= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.Mapper:boundedToUnbounded(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8079= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.LowerBoundMapper:LowerBoundMapper(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
8080= org.apache.commons.math3.exception.NoBracketingException:getFLo()	/src/main/java/org/apache/commons/math3/exception/NoBracketingException.java
8081= org.apache.commons.math3.exception.NoBracketingException:NoBracketingException(double, double, double, double)	/src/main/java/org/apache/commons/math3/exception/NoBracketingException.java
8082= org.apache.commons.math3.exception.NoBracketingException:getLo()	/src/main/java/org/apache/commons/math3/exception/NoBracketingException.java
8083= org.apache.commons.math3.exception.NoBracketingException:getHi()	/src/main/java/org/apache/commons/math3/exception/NoBracketingException.java
8084= org.apache.commons.math3.exception.NoBracketingException:getFHi()	/src/main/java/org/apache/commons/math3/exception/NoBracketingException.java
8085= org.apache.commons.math3.exception.NoBracketingException:NoBracketingException(Localizable, double, double, double, double, Object)	/src/main/java/org/apache/commons/math3/exception/NoBracketingException.java
8086= org.apache.commons.math3.optimization.SimplePointChecker:converged(int, PAIR, PAIR)	/src/main/java/org/apache/commons/math3/optimization/SimplePointChecker.java
8087= org.apache.commons.math3.optimization.SimplePointChecker:SimplePointChecker(double, double, int)	/src/main/java/org/apache/commons/math3/optimization/SimplePointChecker.java
8088= org.apache.commons.math3.optimization.SimplePointChecker:SimplePointChecker(double, double)	/src/main/java/org/apache/commons/math3/optimization/SimplePointChecker.java
8089= org.apache.commons.math3.optimization.SimplePointChecker:SimplePointChecker()	/src/main/java/org/apache/commons/math3/optimization/SimplePointChecker.java
8090= org.apache.commons.math3.util.DoubleArray:addElement(double)	/src/main/java/org/apache/commons/math3/util/DoubleArray.java
8091= org.apache.commons.math3.util.DoubleArray:getNumElements()	/src/main/java/org/apache/commons/math3/util/DoubleArray.java
8092= org.apache.commons.math3.util.DoubleArray:addElements(double[])	/src/main/java/org/apache/commons/math3/util/DoubleArray.java
8093= org.apache.commons.math3.util.DoubleArray:addElementRolling(double)	/src/main/java/org/apache/commons/math3/util/DoubleArray.java
8094= org.apache.commons.math3.util.DoubleArray:clear()	/src/main/java/org/apache/commons/math3/util/DoubleArray.java
8095= org.apache.commons.math3.util.DoubleArray:getElement(int)	/src/main/java/org/apache/commons/math3/util/DoubleArray.java
8096= org.apache.commons.math3.util.DoubleArray:setElement(int, double)	/src/main/java/org/apache/commons/math3/util/DoubleArray.java
8097= org.apache.commons.math3.util.DoubleArray:getElements()	/src/main/java/org/apache/commons/math3/util/DoubleArray.java
8098= org.apache.commons.math3.stat.descriptive.moment.VectorialMean:increment(double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialMean.java
8099= org.apache.commons.math3.stat.descriptive.moment.VectorialMean:equals(Object)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialMean.java
8100= org.apache.commons.math3.stat.descriptive.moment.VectorialMean:VectorialMean(int)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialMean.java
8101= org.apache.commons.math3.stat.descriptive.moment.VectorialMean:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialMean.java
8102= org.apache.commons.math3.stat.descriptive.moment.VectorialMean:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialMean.java
8103= org.apache.commons.math3.stat.descriptive.moment.VectorialMean:hashCode()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialMean.java
8104= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testFloatDirect()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8105= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextSecureLongNegativeToPositiveRange()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8106= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextInt2()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8107= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextIntNeg()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8108= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextSecureIntIAE()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8109= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextBooleanDirect()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8110= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextSecureLongNegativeRange()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8111= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNexBytes()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8112= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextSecureLongPositiveRange()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8113= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextSecureHex()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8114= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextSecureIntNegativeRange()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8115= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testSeeding()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8116= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextIntDirect()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8117= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextLongDirect()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8118= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextSecureIntNegativeToPositiveRange()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8119= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextIntIAE2()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8120= org.apache.commons.math3.random.RandomGeneratorAbstractTest:checkSameSequence(RandomGenerator, RandomGenerator)	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8121= org.apache.commons.math3.random.RandomGeneratorAbstractTest:makeGenerator()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8122= org.apache.commons.math3.random.RandomGeneratorAbstractTest:setUp()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8123= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextSecureIntPositiveRange()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8124= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextFloatDirect()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8125= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextSecureLongIAE()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8126= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNexBoolean2()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8127= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testDoubleDirect()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8128= org.apache.commons.math3.random.RandomGeneratorAbstractTest:testNextLong2()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8129= org.apache.commons.math3.random.RandomGeneratorAbstractTest:RandomGeneratorAbstractTest()	/src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java
8130= org.apache.commons.math3.genetics.ListPopulation:getPopulationSize()	/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java
8131= org.apache.commons.math3.genetics.ListPopulation:iterator()	/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java
8132= org.apache.commons.math3.genetics.ListPopulation:getChromosomes()	/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java
8133= org.apache.commons.math3.genetics.ListPopulation:addChromosomes(Collection<Chromosome>)	/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java
8134= org.apache.commons.math3.genetics.ListPopulation:ListPopulation(int)	/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java
8135= org.apache.commons.math3.genetics.ListPopulation:setChromosomes(List<Chromosome>)	/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java
8136= org.apache.commons.math3.genetics.ListPopulation:setPopulationLimit(int)	/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java
8137= org.apache.commons.math3.genetics.ListPopulation:getChromosomeList()	/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java
8138= org.apache.commons.math3.genetics.ListPopulation:getFittestChromosome()	/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java
8139= org.apache.commons.math3.genetics.ListPopulation:getPopulationLimit()	/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java
8140= org.apache.commons.math3.genetics.ListPopulation:addChromosome(Chromosome)	/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java
8141= org.apache.commons.math3.genetics.ListPopulation:ListPopulation(List<Chromosome>, int)	/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java
8142= org.apache.commons.math3.genetics.ListPopulation:toString()	/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java
8143= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleProblem:addPoint(double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleProblem.java
8144= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleProblem:weight()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleProblem.java
8145= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleProblem:CircleProblem(double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleProblem.java
8146= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleProblem:target()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleProblem.java
8147= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleProblem:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleProblem.java
8148= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleProblem:jacobian(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleProblem.java
8149= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleProblem:getModelFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleProblem.java
8150= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleProblem:CircleProblem(double, double, int)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleProblem.java
8151= org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleProblem:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/CircleProblem.java
8152= org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer:MultiKMeansPlusPlusClusterer(KMeansPlusPlusClusterer<T>, int, ClusterEvaluator<T>)	/src/main/java/org/apache/commons/math3/ml/clustering/MultiKMeansPlusPlusClusterer.java
8153= org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer:getClusterEvaluator()	/src/main/java/org/apache/commons/math3/ml/clustering/MultiKMeansPlusPlusClusterer.java
8154= org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer:cluster(Collection<T>)	/src/main/java/org/apache/commons/math3/ml/clustering/MultiKMeansPlusPlusClusterer.java
8155= org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer:getClusterer()	/src/main/java/org/apache/commons/math3/ml/clustering/MultiKMeansPlusPlusClusterer.java
8156= org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer:getNumTrials()	/src/main/java/org/apache/commons/math3/ml/clustering/MultiKMeansPlusPlusClusterer.java
8157= org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer:MultiKMeansPlusPlusClusterer(KMeansPlusPlusClusterer<T>, int)	/src/main/java/org/apache/commons/math3/ml/clustering/MultiKMeansPlusPlusClusterer.java
8158= org.apache.commons.math3.dfp.Dfp:nextAfter(Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8159= org.apache.commons.math3.dfp.Dfp:Dfp(Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8160= org.apache.commons.math3.dfp.Dfp:copysign(Dfp, Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8161= org.apache.commons.math3.dfp.Dfp:add(Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8162= org.apache.commons.math3.dfp.Dfp:tanh()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8163= org.apache.commons.math3.dfp.Dfp:linearCombination(Dfp, Dfp, Dfp, Dfp, Dfp, Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8164= org.apache.commons.math3.dfp.Dfp:linearCombination(Dfp[], Dfp[])	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8165= org.apache.commons.math3.dfp.Dfp:log1p()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8166= org.apache.commons.math3.dfp.Dfp:newInstance(double)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8167= org.apache.commons.math3.dfp.Dfp:round()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8168= org.apache.commons.math3.dfp.Dfp:power10K(int)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8169= org.apache.commons.math3.dfp.Dfp:acosh()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8170= org.apache.commons.math3.dfp.Dfp:intLog10()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8171= org.apache.commons.math3.dfp.Dfp:newInstance()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8172= org.apache.commons.math3.dfp.Dfp:tan()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8173= org.apache.commons.math3.dfp.Dfp:trunc(DfpField.RoundingMode)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8174= org.apache.commons.math3.dfp.Dfp:intValue()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8175= org.apache.commons.math3.dfp.Dfp:newInstance(long)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8176= org.apache.commons.math3.dfp.Dfp:multiply(double)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8177= org.apache.commons.math3.dfp.Dfp:toSplitDouble()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8178= org.apache.commons.math3.dfp.Dfp:cos()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8179= org.apache.commons.math3.dfp.Dfp:hashCode()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8180= org.apache.commons.math3.dfp.Dfp:acos()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8181= org.apache.commons.math3.dfp.Dfp:Dfp(DfpField, byte, byte)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8182= org.apache.commons.math3.dfp.Dfp:log10K()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8183= org.apache.commons.math3.dfp.Dfp:log()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8184= org.apache.commons.math3.dfp.Dfp:add(double)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8185= org.apache.commons.math3.dfp.Dfp:atan()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8186= org.apache.commons.math3.dfp.Dfp:Dfp(DfpField, byte)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8187= org.apache.commons.math3.dfp.Dfp:shiftRight()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8188= org.apache.commons.math3.dfp.Dfp:rint()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8189= org.apache.commons.math3.dfp.Dfp:compare(Dfp, Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8190= org.apache.commons.math3.dfp.Dfp:Dfp(DfpField, long)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8191= org.apache.commons.math3.dfp.Dfp:dotrap(int, String, Dfp, Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8192= org.apache.commons.math3.dfp.Dfp:subtract(double)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8193= org.apache.commons.math3.dfp.Dfp:getField()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8194= org.apache.commons.math3.dfp.Dfp:classify()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8195= org.apache.commons.math3.dfp.Dfp:remainder(double)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8196= org.apache.commons.math3.dfp.Dfp:asinh()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8197= org.apache.commons.math3.dfp.Dfp:floor()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8198= org.apache.commons.math3.dfp.Dfp:getTwo()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8199= org.apache.commons.math3.dfp.Dfp:shiftLeft()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8200= org.apache.commons.math3.dfp.Dfp:Dfp(DfpField, double)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8201= org.apache.commons.math3.dfp.Dfp:pow(double)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8202= org.apache.commons.math3.dfp.Dfp:lessThan(Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8203= org.apache.commons.math3.dfp.Dfp:equals(Object)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8204= org.apache.commons.math3.dfp.Dfp:divide(double)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8205= org.apache.commons.math3.dfp.Dfp:round(int)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8206= org.apache.commons.math3.dfp.Dfp:hypot(Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8207= org.apache.commons.math3.dfp.Dfp:unequal(Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8208= org.apache.commons.math3.dfp.Dfp:complement(int)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8209= org.apache.commons.math3.dfp.Dfp:getReal()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8210= org.apache.commons.math3.dfp.Dfp:divide(int)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8211= org.apache.commons.math3.dfp.Dfp:Dfp(DfpField)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8212= org.apache.commons.math3.dfp.Dfp:negativeOrNull()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8213= org.apache.commons.math3.dfp.Dfp:exp()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8214= org.apache.commons.math3.dfp.Dfp:ceil()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8215= org.apache.commons.math3.dfp.Dfp:multiply(Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8216= org.apache.commons.math3.dfp.Dfp:atanh()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8217= org.apache.commons.math3.dfp.Dfp:positiveOrNull()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8218= org.apache.commons.math3.dfp.Dfp:strictlyPositive()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8219= org.apache.commons.math3.dfp.Dfp:multiplyFast(int)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8220= org.apache.commons.math3.dfp.Dfp:signum()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8221= org.apache.commons.math3.dfp.Dfp:getRadixDigits()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8222= org.apache.commons.math3.dfp.Dfp:subtract(Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8223= org.apache.commons.math3.dfp.Dfp:isInfinite()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8224= org.apache.commons.math3.dfp.Dfp:divide(Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8225= org.apache.commons.math3.dfp.Dfp:expm1()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8226= org.apache.commons.math3.dfp.Dfp:getOne()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8227= org.apache.commons.math3.dfp.Dfp:isNaN()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8228= org.apache.commons.math3.dfp.Dfp:abs()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8229= org.apache.commons.math3.dfp.Dfp:newInstance(Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8230= org.apache.commons.math3.dfp.Dfp:isZero()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8231= org.apache.commons.math3.dfp.Dfp:newInstance(byte)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8232= org.apache.commons.math3.dfp.Dfp:newInstance(String)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8233= org.apache.commons.math3.dfp.Dfp:newInstance(byte, byte)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8234= org.apache.commons.math3.dfp.Dfp:linearCombination(double, Dfp, double, Dfp, double, Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8235= org.apache.commons.math3.dfp.Dfp:pow(int)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8236= org.apache.commons.math3.dfp.Dfp:remainder(Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8237= org.apache.commons.math3.dfp.Dfp:multiply(int)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8238= org.apache.commons.math3.dfp.Dfp:sin()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8239= org.apache.commons.math3.dfp.Dfp:sinh()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8240= org.apache.commons.math3.dfp.Dfp:cbrt()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8241= org.apache.commons.math3.dfp.Dfp:asin()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8242= org.apache.commons.math3.dfp.Dfp:dfp2sci()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8243= org.apache.commons.math3.dfp.Dfp:scalb(int)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8244= org.apache.commons.math3.dfp.Dfp:linearCombination(double, Dfp, double, Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8245= org.apache.commons.math3.dfp.Dfp:cosh()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8246= org.apache.commons.math3.dfp.Dfp:copySign(double)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8247= org.apache.commons.math3.dfp.Dfp:atan2(Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8248= org.apache.commons.math3.dfp.Dfp:getZero()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8249= org.apache.commons.math3.dfp.Dfp:Dfp(DfpField, String)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8250= org.apache.commons.math3.dfp.Dfp:rootN(int)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8251= org.apache.commons.math3.dfp.Dfp:newInstance(int)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8252= org.apache.commons.math3.dfp.Dfp:sqrt()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8253= org.apache.commons.math3.dfp.Dfp:strictlyNegative()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8254= org.apache.commons.math3.dfp.Dfp:log10()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8255= org.apache.commons.math3.dfp.Dfp:Dfp(DfpField, int)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8256= org.apache.commons.math3.dfp.Dfp:linearCombination(Dfp, Dfp, Dfp, Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8257= org.apache.commons.math3.dfp.Dfp:linearCombination(double[], Dfp[])	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8258= org.apache.commons.math3.dfp.Dfp:toDouble()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8259= org.apache.commons.math3.dfp.Dfp:reciprocal()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8260= org.apache.commons.math3.dfp.Dfp:trap(int, String, Dfp, Dfp, Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8261= org.apache.commons.math3.dfp.Dfp:linearCombination(Dfp, Dfp, Dfp, Dfp, Dfp, Dfp, Dfp, Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8262= org.apache.commons.math3.dfp.Dfp:power10(int)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8263= org.apache.commons.math3.dfp.Dfp:toString()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8264= org.apache.commons.math3.dfp.Dfp:pow(Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8265= org.apache.commons.math3.dfp.Dfp:copySign(Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8266= org.apache.commons.math3.dfp.Dfp:dfp2string()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8267= org.apache.commons.math3.dfp.Dfp:greaterThan(Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8268= org.apache.commons.math3.dfp.Dfp:linearCombination(double, Dfp, double, Dfp, double, Dfp, double, Dfp)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8269= org.apache.commons.math3.dfp.Dfp:align(int)	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8270= org.apache.commons.math3.dfp.Dfp:negate()	/src/main/java/org/apache/commons/math3/dfp/Dfp.java
8271= org.apache.commons.math3.analysis.interpolation.BivariateGridInterpolator:interpolate(double[], double[], double[][])	/src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java
8272= org.apache.commons.math3.geometry.euclidean.threed.SubPlane:SubPlane(Hyperplane<Euclidean3D>, Region<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java
8273= org.apache.commons.math3.geometry.euclidean.threed.SubPlane:side(Hyperplane<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java
8274= org.apache.commons.math3.geometry.euclidean.threed.SubPlane:split(Hyperplane<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java
8275= org.apache.commons.math3.geometry.euclidean.threed.SubPlane:buildNew(Hyperplane<Euclidean3D>, Region<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java
8276= org.apache.commons.math3.genetics.NPointCrossover:mate(AbstractListChromosome<T>, AbstractListChromosome<T>)	/src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java
8277= org.apache.commons.math3.genetics.NPointCrossover:NPointCrossover(int)	/src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java
8278= org.apache.commons.math3.genetics.NPointCrossover:getCrossoverPoints()	/src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java
8279= org.apache.commons.math3.genetics.NPointCrossover:crossover(Chromosome, Chromosome)	/src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java
8280= org.apache.commons.math3.ml.distance.ChebyshevDistanceTest:testZero()	/src/test/java/org/apache/commons/math3/ml/distance/ChebyshevDistanceTest.java
8281= org.apache.commons.math3.ml.distance.ChebyshevDistanceTest:test()	/src/test/java/org/apache/commons/math3/ml/distance/ChebyshevDistanceTest.java
8282= org.apache.commons.math3.fraction.FractionConversionException:FractionConversionException(double, long, long)	/src/main/java/org/apache/commons/math3/fraction/FractionConversionException.java
8283= org.apache.commons.math3.fraction.FractionConversionException:FractionConversionException(double, int)	/src/main/java/org/apache/commons/math3/fraction/FractionConversionException.java
8284= org.apache.commons.math3.distribution.ChiSquaredDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8285= org.apache.commons.math3.distribution.ChiSquaredDistribution:getSolverAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8286= org.apache.commons.math3.distribution.ChiSquaredDistribution:ChiSquaredDistribution(double)	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8287= org.apache.commons.math3.distribution.ChiSquaredDistribution:ChiSquaredDistribution(RandomGenerator, double, double)	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8288= org.apache.commons.math3.distribution.ChiSquaredDistribution:logDensity(double)	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8289= org.apache.commons.math3.distribution.ChiSquaredDistribution:ChiSquaredDistribution(RandomGenerator, double)	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8290= org.apache.commons.math3.distribution.ChiSquaredDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8291= org.apache.commons.math3.distribution.ChiSquaredDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8292= org.apache.commons.math3.distribution.ChiSquaredDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8293= org.apache.commons.math3.distribution.ChiSquaredDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8294= org.apache.commons.math3.distribution.ChiSquaredDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8295= org.apache.commons.math3.distribution.ChiSquaredDistribution:ChiSquaredDistribution(double, double)	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8296= org.apache.commons.math3.distribution.ChiSquaredDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8297= org.apache.commons.math3.distribution.ChiSquaredDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8298= org.apache.commons.math3.distribution.ChiSquaredDistribution:getDegreesOfFreedom()	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8299= org.apache.commons.math3.distribution.ChiSquaredDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java
8300= org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest:populationStandardDeviation(double[])	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviationTest.java
8301= org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest:testPopulation()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviationTest.java
8302= org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviationTest.java
8303= org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviationTest.java
8304= org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest:testNaN()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviationTest.java
8305= org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:buildNew(Hyperplane<S>, Region<T>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.java
8306= org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:recurseTransform(BSPTree<T>, Hyperplane<S>, Transform<S,T>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.java
8307= org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:isEmpty()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.java
8308= org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:reunite(SubHyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.java
8309= org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:side(Hyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.java
8310= org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:copySelf()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.java
8311= org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:getRemainingRegion()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.java
8312= org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:applyTransform(Transform<S,T>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.java
8313= org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:getSize()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.java
8314= org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:split(Hyperplane<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.java
8315= org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:getHyperplane()	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.java
8316= org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:AbstractSubHyperplane(Hyperplane<S>, Region<T>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.java
8317= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator:MicrosphereInterpolator(int, int)	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java
8318= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator:interpolate(double[][], double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java
8319= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator:MicrosphereInterpolator()	/src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java
8320= org.apache.commons.math3.analysis.DifferentiableUnivariateMatrixFunction:derivative()	/src/main/java/org/apache/commons/math3/analysis/DifferentiableUnivariateMatrixFunction.java
8321= org.apache.commons.math3.optim.SimpleVectorValueCheckerTest:testIterationCheck()	/src/test/java/org/apache/commons/math3/optim/SimpleVectorValueCheckerTest.java
8322= org.apache.commons.math3.optim.SimpleVectorValueCheckerTest:testIterationCheckDisabled()	/src/test/java/org/apache/commons/math3/optim/SimpleVectorValueCheckerTest.java
8323= org.apache.commons.math3.optim.SimpleVectorValueCheckerTest:testIterationCheckPrecondition()	/src/test/java/org/apache/commons/math3/optim/SimpleVectorValueCheckerTest.java
8324= org.apache.commons.math3.random.JDKRandomGenerator:setSeed(int)	/src/main/java/org/apache/commons/math3/random/JDKRandomGenerator.java
8325= org.apache.commons.math3.random.JDKRandomGenerator:setSeed(int[])	/src/main/java/org/apache/commons/math3/random/JDKRandomGenerator.java
8326= org.apache.commons.math3.random.Well44497b:Well44497b(long)	/src/main/java/org/apache/commons/math3/random/Well44497b.java
8327= org.apache.commons.math3.random.Well44497b:next(int)	/src/main/java/org/apache/commons/math3/random/Well44497b.java
8328= org.apache.commons.math3.random.Well44497b:Well44497b(int)	/src/main/java/org/apache/commons/math3/random/Well44497b.java
8329= org.apache.commons.math3.random.Well44497b:Well44497b(int[])	/src/main/java/org/apache/commons/math3/random/Well44497b.java
8330= org.apache.commons.math3.random.Well44497b:Well44497b()	/src/main/java/org/apache/commons/math3/random/Well44497b.java
8331= org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer:optimize(int, FUNC, GoalType, double, double, double)	/src/main/java/org/apache/commons/math3/optimization/univariate/BaseUnivariateOptimizer.java
8332= org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer:optimize(int, FUNC, GoalType, double, double)	/src/main/java/org/apache/commons/math3/optimization/univariate/BaseUnivariateOptimizer.java
8333= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:optimize(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.java
8334= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:computeObjectiveValue(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.java
8335= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:MultivariateOptimizer(ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.java
8336= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.java
8337= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:getGoalType()	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.java
8338= org.apache.commons.math3.distribution.PoissonDistribution:PoissonDistribution(RandomGenerator, double, double, int)	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8339= org.apache.commons.math3.distribution.PoissonDistribution:PoissonDistribution(double, double)	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8340= org.apache.commons.math3.distribution.PoissonDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8341= org.apache.commons.math3.distribution.PoissonDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8342= org.apache.commons.math3.distribution.PoissonDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8343= org.apache.commons.math3.distribution.PoissonDistribution:PoissonDistribution(double)	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8344= org.apache.commons.math3.distribution.PoissonDistribution:PoissonDistribution(double, double, int)	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8345= org.apache.commons.math3.distribution.PoissonDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8346= org.apache.commons.math3.distribution.PoissonDistribution:probability(int)	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8347= org.apache.commons.math3.distribution.PoissonDistribution:cumulativeProbability(int)	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8348= org.apache.commons.math3.distribution.PoissonDistribution:PoissonDistribution(double, int)	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8349= org.apache.commons.math3.distribution.PoissonDistribution:logProbability(int)	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8350= org.apache.commons.math3.distribution.PoissonDistribution:normalApproximateProbability(int)	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8351= org.apache.commons.math3.distribution.PoissonDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8352= org.apache.commons.math3.distribution.PoissonDistribution:getMean()	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8353= org.apache.commons.math3.distribution.PoissonDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8354= org.apache.commons.math3.distribution.PoissonDistribution:nextPoisson(double)	/src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java
8355= org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator:HighamHall54Integrator(double, double, double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/HighamHall54Integrator.java
8356= org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator:HighamHall54Integrator(double, double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/HighamHall54Integrator.java
8357= org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator:getOrder()	/src/main/java/org/apache/commons/math3/ode/nonstiff/HighamHall54Integrator.java
8358= org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator:estimateError(double[][], double[], double[], double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/HighamHall54Integrator.java
8359= org.apache.commons.math3.ode.sampling.DummyStepHandler:init(double, double[], double)	/src/main/java/org/apache/commons/math3/ode/sampling/DummyStepHandler.java
8360= org.apache.commons.math3.ode.sampling.DummyStepHandler:handleStep(StepInterpolator, boolean)	/src/main/java/org/apache/commons/math3/ode/sampling/DummyStepHandler.java
8361= org.apache.commons.math3.ode.sampling.DummyStepHandler:readResolve()	/src/main/java/org/apache/commons/math3/ode/sampling/DummyStepHandler.java
8362= org.apache.commons.math3.ode.sampling.DummyStepHandler:getInstance()	/src/main/java/org/apache/commons/math3/ode/sampling/DummyStepHandler.java
8363= org.apache.commons.math3.ode.sampling.DummyStepHandler:DummyStepHandler()	/src/main/java/org/apache/commons/math3/ode/sampling/DummyStepHandler.java
8364= org.apache.commons.math3.exception.MathParseException:MathParseException(String, int, Class<?>)	/src/main/java/org/apache/commons/math3/exception/MathParseException.java
8365= org.apache.commons.math3.exception.MathParseException:MathParseException(String, int)	/src/main/java/org/apache/commons/math3/exception/MathParseException.java
8366= org.apache.commons.math3.stat.regression.UpdatingMultipleLinearRegression:regress()	/src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java
8367= org.apache.commons.math3.stat.regression.UpdatingMultipleLinearRegression:addObservation(double[], double)	/src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java
8368= org.apache.commons.math3.stat.regression.UpdatingMultipleLinearRegression:hasIntercept()	/src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java
8369= org.apache.commons.math3.stat.regression.UpdatingMultipleLinearRegression:addObservations(double[][], double[])	/src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java
8370= org.apache.commons.math3.stat.regression.UpdatingMultipleLinearRegression:getN()	/src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java
8371= org.apache.commons.math3.stat.regression.UpdatingMultipleLinearRegression:regress(int[])	/src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java
8372= org.apache.commons.math3.stat.regression.UpdatingMultipleLinearRegression:clear()	/src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java
8373= org.apache.commons.math3.geometry.Point:distance(Point<S>)	/src/main/java/org/apache/commons/math3/geometry/Point.java
8374= org.apache.commons.math3.geometry.Point:isNaN()	/src/main/java/org/apache/commons/math3/geometry/Point.java
8375= org.apache.commons.math3.geometry.Point:getSpace()	/src/main/java/org/apache/commons/math3/geometry/Point.java
8376= org.apache.commons.math3.optim.nonlinear.scalar.LineSearch:LineSearch(MultivariateOptimizer, double, double, double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/LineSearch.java
8377= org.apache.commons.math3.optim.nonlinear.scalar.LineSearch:search(double[], double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/LineSearch.java
8378= org.apache.commons.math3.optim.nonlinear.scalar.LineSearch:value(double)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/LineSearch.java
8379= org.apache.commons.math3.ode.EquationsMapper:getDimension()	/src/main/java/org/apache/commons/math3/ode/EquationsMapper.java
8380= org.apache.commons.math3.ode.EquationsMapper:getFirstIndex()	/src/main/java/org/apache/commons/math3/ode/EquationsMapper.java
8381= org.apache.commons.math3.ode.EquationsMapper:insertEquationData(double[], double[])	/src/main/java/org/apache/commons/math3/ode/EquationsMapper.java
8382= org.apache.commons.math3.ode.EquationsMapper:extractEquationData(double[], double[])	/src/main/java/org/apache/commons/math3/ode/EquationsMapper.java
8383= org.apache.commons.math3.ode.EquationsMapper:EquationsMapper(int, int)	/src/main/java/org/apache/commons/math3/ode/EquationsMapper.java
8384= org.apache.commons.math3.ml.clustering.DBSCANClustererTest:testNegativeMinPts()	/src/test/java/org/apache/commons/math3/ml/clustering/DBSCANClustererTest.java
8385= org.apache.commons.math3.ml.clustering.DBSCANClustererTest:testCluster()	/src/test/java/org/apache/commons/math3/ml/clustering/DBSCANClustererTest.java
8386= org.apache.commons.math3.ml.clustering.DBSCANClustererTest:testNegativeEps()	/src/test/java/org/apache/commons/math3/ml/clustering/DBSCANClustererTest.java
8387= org.apache.commons.math3.ml.clustering.DBSCANClustererTest:testNullDataset()	/src/test/java/org/apache/commons/math3/ml/clustering/DBSCANClustererTest.java
8388= org.apache.commons.math3.ml.clustering.DBSCANClustererTest:testSingleLink()	/src/test/java/org/apache/commons/math3/ml/clustering/DBSCANClustererTest.java
8389= org.apache.commons.math3.ml.clustering.DBSCANClustererTest:testGetMinPts()	/src/test/java/org/apache/commons/math3/ml/clustering/DBSCANClustererTest.java
8390= org.apache.commons.math3.ml.clustering.DBSCANClustererTest:testGetEps()	/src/test/java/org/apache/commons/math3/ml/clustering/DBSCANClustererTest.java
8391= org.apache.commons.math3.linear.HessenbergTransformer:getPT()	/src/main/java/org/apache/commons/math3/linear/HessenbergTransformer.java
8392= org.apache.commons.math3.linear.HessenbergTransformer:getP()	/src/main/java/org/apache/commons/math3/linear/HessenbergTransformer.java
8393= org.apache.commons.math3.linear.HessenbergTransformer:HessenbergTransformer(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/HessenbergTransformer.java
8394= org.apache.commons.math3.linear.HessenbergTransformer:transform()	/src/main/java/org/apache/commons/math3/linear/HessenbergTransformer.java
8395= org.apache.commons.math3.linear.HessenbergTransformer:getH()	/src/main/java/org/apache/commons/math3/linear/HessenbergTransformer.java
8396= org.apache.commons.math3.linear.HessenbergTransformer:getHouseholderVectorsRef()	/src/main/java/org/apache/commons/math3/linear/HessenbergTransformer.java
8397= org.apache.commons.math3.optim.InitialGuess:InitialGuess(double[])	/src/main/java/org/apache/commons/math3/optim/InitialGuess.java
8398= org.apache.commons.math3.optim.InitialGuess:getInitialGuess()	/src/main/java/org/apache/commons/math3/optim/InitialGuess.java
8399= org.apache.commons.math3.stat.inference.TestUtils:gDataSetsComparison(long[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8400= org.apache.commons.math3.stat.inference.TestUtils:kolmogorovSmirnovTest(RealDistribution, double[], double)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8401= org.apache.commons.math3.stat.inference.TestUtils:tTest(double, double[], double)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8402= org.apache.commons.math3.stat.inference.TestUtils:t(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8403= org.apache.commons.math3.stat.inference.TestUtils:tTest(double[], double[], double)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8404= org.apache.commons.math3.stat.inference.TestUtils:t(double, double[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8405= org.apache.commons.math3.stat.inference.TestUtils:t(StatisticalSummary, StatisticalSummary)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8406= org.apache.commons.math3.stat.inference.TestUtils:gTest(double[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8407= org.apache.commons.math3.stat.inference.TestUtils:gTestDataSetsComparison(long[], long[], double)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8408= org.apache.commons.math3.stat.inference.TestUtils:tTest(double, StatisticalSummary)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8409= org.apache.commons.math3.stat.inference.TestUtils:exactP(double, int, int, boolean)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8410= org.apache.commons.math3.stat.inference.TestUtils:homoscedasticTTest(StatisticalSummary, StatisticalSummary)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8411= org.apache.commons.math3.stat.inference.TestUtils:tTest(double, double[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8412= org.apache.commons.math3.stat.inference.TestUtils:kolmogorovSmirnovTest(RealDistribution, double[], boolean)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8413= org.apache.commons.math3.stat.inference.TestUtils:pairedT(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8414= org.apache.commons.math3.stat.inference.TestUtils:tTest(StatisticalSummary, StatisticalSummary)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8415= org.apache.commons.math3.stat.inference.TestUtils:tTest(double, StatisticalSummary, double)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8416= org.apache.commons.math3.stat.inference.TestUtils:chiSquareTest(double[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8417= org.apache.commons.math3.stat.inference.TestUtils:chiSquareDataSetsComparison(long[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8418= org.apache.commons.math3.stat.inference.TestUtils:pairedTTest(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8419= org.apache.commons.math3.stat.inference.TestUtils:gTestDataSetsComparison(long[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8420= org.apache.commons.math3.stat.inference.TestUtils:pairedTTest(double[], double[], double)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8421= org.apache.commons.math3.stat.inference.TestUtils:gTestIntrinsic(double[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8422= org.apache.commons.math3.stat.inference.TestUtils:kolmogorovSmirnovStatistic(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8423= org.apache.commons.math3.stat.inference.TestUtils:chiSquareTestDataSetsComparison(long[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8424= org.apache.commons.math3.stat.inference.TestUtils:homoscedasticT(StatisticalSummary, StatisticalSummary)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8425= org.apache.commons.math3.stat.inference.TestUtils:chiSquare(long[][])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8426= org.apache.commons.math3.stat.inference.TestUtils:chiSquareTestDataSetsComparison(long[], long[], double)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8427= org.apache.commons.math3.stat.inference.TestUtils:TestUtils()	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8428= org.apache.commons.math3.stat.inference.TestUtils:kolmogorovSmirnovTest(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8429= org.apache.commons.math3.stat.inference.TestUtils:oneWayAnovaTest(Collection<double[]>, double)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8430= org.apache.commons.math3.stat.inference.TestUtils:chiSquareTest(long[][])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8431= org.apache.commons.math3.stat.inference.TestUtils:oneWayAnovaFValue(Collection<double[]>)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8432= org.apache.commons.math3.stat.inference.TestUtils:oneWayAnovaPValue(Collection<double[]>)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8433= org.apache.commons.math3.stat.inference.TestUtils:kolmogorovSmirnovTest(double[], double[], boolean)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8434= org.apache.commons.math3.stat.inference.TestUtils:rootLogLikelihoodRatio(long, long, long, long)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8435= org.apache.commons.math3.stat.inference.TestUtils:kolmogorovSmirnovTest(RealDistribution, double[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8436= org.apache.commons.math3.stat.inference.TestUtils:monteCarloP(double, int, int, boolean, int)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8437= org.apache.commons.math3.stat.inference.TestUtils:tTest(StatisticalSummary, StatisticalSummary, double)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8438= org.apache.commons.math3.stat.inference.TestUtils:homoscedasticTTest(double[], double[], double)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8439= org.apache.commons.math3.stat.inference.TestUtils:approximateP(double, int, int)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8440= org.apache.commons.math3.stat.inference.TestUtils:chiSquare(double[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8441= org.apache.commons.math3.stat.inference.TestUtils:kolmogorovSmirnovStatistic(RealDistribution, double[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8442= org.apache.commons.math3.stat.inference.TestUtils:homoscedasticT(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8443= org.apache.commons.math3.stat.inference.TestUtils:tTest(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8444= org.apache.commons.math3.stat.inference.TestUtils:g(double[], long[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8445= org.apache.commons.math3.stat.inference.TestUtils:t(double, StatisticalSummary)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8446= org.apache.commons.math3.stat.inference.TestUtils:chiSquareTest(double[], long[], double)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8447= org.apache.commons.math3.stat.inference.TestUtils:homoscedasticTTest(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8448= org.apache.commons.math3.stat.inference.TestUtils:gTest(double[], long[], double)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8449= org.apache.commons.math3.stat.inference.TestUtils:chiSquareTest(long[][], double)	/src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java
8450= org.apache.commons.math3.analysis.function.Max:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Max.java
8451= org.apache.commons.math3.linear.Array2DRowRealMatrix:walkInColumnOrder(RealMatrixChangingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8452= org.apache.commons.math3.linear.Array2DRowRealMatrix:copyOut()	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8453= org.apache.commons.math3.linear.Array2DRowRealMatrix:walkInColumnOrder(RealMatrixChangingVisitor)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8454= org.apache.commons.math3.linear.Array2DRowRealMatrix:getEntry(int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8455= org.apache.commons.math3.linear.Array2DRowRealMatrix:Array2DRowRealMatrix(double[][], boolean)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8456= org.apache.commons.math3.linear.Array2DRowRealMatrix:addToEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8457= org.apache.commons.math3.linear.Array2DRowRealMatrix:walkInColumnOrder(RealMatrixPreservingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8458= org.apache.commons.math3.linear.Array2DRowRealMatrix:subtract(Array2DRowRealMatrix)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8459= org.apache.commons.math3.linear.Array2DRowRealMatrix:copyIn(double[][])	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8460= org.apache.commons.math3.linear.Array2DRowRealMatrix:operate(double[])	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8461= org.apache.commons.math3.linear.Array2DRowRealMatrix:walkInRowOrder(RealMatrixPreservingVisitor)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8462= org.apache.commons.math3.linear.Array2DRowRealMatrix:Array2DRowRealMatrix(double[][])	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8463= org.apache.commons.math3.linear.Array2DRowRealMatrix:Array2DRowRealMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8464= org.apache.commons.math3.linear.Array2DRowRealMatrix:getColumnDimension()	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8465= org.apache.commons.math3.linear.Array2DRowRealMatrix:getDataRef()	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8466= org.apache.commons.math3.linear.Array2DRowRealMatrix:setEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8467= org.apache.commons.math3.linear.Array2DRowRealMatrix:copy()	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8468= org.apache.commons.math3.linear.Array2DRowRealMatrix:setSubMatrix(double[][], int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8469= org.apache.commons.math3.linear.Array2DRowRealMatrix:walkInColumnOrder(RealMatrixPreservingVisitor)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8470= org.apache.commons.math3.linear.Array2DRowRealMatrix:createMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8471= org.apache.commons.math3.linear.Array2DRowRealMatrix:getData()	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8472= org.apache.commons.math3.linear.Array2DRowRealMatrix:preMultiply(double[])	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8473= org.apache.commons.math3.linear.Array2DRowRealMatrix:getRowDimension()	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8474= org.apache.commons.math3.linear.Array2DRowRealMatrix:add(Array2DRowRealMatrix)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8475= org.apache.commons.math3.linear.Array2DRowRealMatrix:multiplyEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8476= org.apache.commons.math3.linear.Array2DRowRealMatrix:walkInRowOrder(RealMatrixChangingVisitor)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8477= org.apache.commons.math3.linear.Array2DRowRealMatrix:walkInRowOrder(RealMatrixChangingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8478= org.apache.commons.math3.linear.Array2DRowRealMatrix:Array2DRowRealMatrix()	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8479= org.apache.commons.math3.linear.Array2DRowRealMatrix:multiply(Array2DRowRealMatrix)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8480= org.apache.commons.math3.linear.Array2DRowRealMatrix:walkInRowOrder(RealMatrixPreservingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8481= org.apache.commons.math3.linear.Array2DRowRealMatrix:Array2DRowRealMatrix(double[])	/src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java
8482= org.apache.commons.math3.util.MathUtils:hash(double)	/src/main/java/org/apache/commons/math3/util/MathUtils.java
8483= org.apache.commons.math3.util.MathUtils:normalizeAngle(double, double)	/src/main/java/org/apache/commons/math3/util/MathUtils.java
8484= org.apache.commons.math3.util.MathUtils:checkNotNull(Object)	/src/main/java/org/apache/commons/math3/util/MathUtils.java
8485= org.apache.commons.math3.util.MathUtils:checkFinite(double[])	/src/main/java/org/apache/commons/math3/util/MathUtils.java
8486= org.apache.commons.math3.util.MathUtils:hash(double[])	/src/main/java/org/apache/commons/math3/util/MathUtils.java
8487= org.apache.commons.math3.util.MathUtils:equals(double, double)	/src/main/java/org/apache/commons/math3/util/MathUtils.java
8488= org.apache.commons.math3.util.MathUtils:checkNotNull(Object, Localizable, Object)	/src/main/java/org/apache/commons/math3/util/MathUtils.java
8489= org.apache.commons.math3.util.MathUtils:copySign(int, int)	/src/main/java/org/apache/commons/math3/util/MathUtils.java
8490= org.apache.commons.math3.util.MathUtils:copySign(byte, byte)	/src/main/java/org/apache/commons/math3/util/MathUtils.java
8491= org.apache.commons.math3.util.MathUtils:reduce(double, double, double)	/src/main/java/org/apache/commons/math3/util/MathUtils.java
8492= org.apache.commons.math3.util.MathUtils:checkFinite(double)	/src/main/java/org/apache/commons/math3/util/MathUtils.java
8493= org.apache.commons.math3.util.MathUtils:copySign(short, short)	/src/main/java/org/apache/commons/math3/util/MathUtils.java
8494= org.apache.commons.math3.util.MathUtils:copySign(long, long)	/src/main/java/org/apache/commons/math3/util/MathUtils.java
8495= org.apache.commons.math3.util.MathUtils:MathUtils()	/src/main/java/org/apache/commons/math3/util/MathUtils.java
8496= org.apache.commons.math3.distribution.AbstractIntegerDistribution:solveInverseCumulativeProbability(double, int, int)	/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java
8497= org.apache.commons.math3.distribution.AbstractIntegerDistribution:logProbability(int)	/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java
8498= org.apache.commons.math3.distribution.AbstractIntegerDistribution:cumulativeProbability(int, int)	/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java
8499= org.apache.commons.math3.distribution.AbstractIntegerDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java
8500= org.apache.commons.math3.distribution.AbstractIntegerDistribution:AbstractIntegerDistribution()	/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java
8501= org.apache.commons.math3.distribution.AbstractIntegerDistribution:inverseCumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java
8502= org.apache.commons.math3.distribution.AbstractIntegerDistribution:sample(int)	/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java
8503= org.apache.commons.math3.distribution.AbstractIntegerDistribution:AbstractIntegerDistribution(RandomGenerator)	/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java
8504= org.apache.commons.math3.distribution.AbstractIntegerDistribution:checkedCumulativeProbability(int)	/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java
8505= org.apache.commons.math3.distribution.AbstractIntegerDistribution:reseedRandomGenerator(long)	/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java
8506= org.apache.commons.math3.linear.RealVectorChangingVisitor:visit(int, double)	/src/main/java/org/apache/commons/math3/linear/RealVectorChangingVisitor.java
8507= org.apache.commons.math3.linear.RealVectorChangingVisitor:start(int, int, int)	/src/main/java/org/apache/commons/math3/linear/RealVectorChangingVisitor.java
8508= org.apache.commons.math3.linear.RealVectorChangingVisitor:end()	/src/main/java/org/apache/commons/math3/linear/RealVectorChangingVisitor.java
8509= org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D:Euclidean2D()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Euclidean2D.java
8510= org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D:getInstance()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Euclidean2D.java
8511= org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D:readResolve()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Euclidean2D.java
8512= org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D:getSubSpace()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Euclidean2D.java
8513= org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D:getDimension()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Euclidean2D.java
8514= org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer:compare(PointVectorValuePair, PointVectorValuePair)	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer.java
8515= org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer:getOptima()	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer.java
8516= org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer:optimize(int, FUNC, double[], double[], double[])	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer.java
8517= org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer:getMaxEvaluations()	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer.java
8518= org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer:weightedResidual(PointVectorValuePair)	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer.java
8519= org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer:BaseMultivariateVectorMultiStartOptimizer(BaseMultivariateVectorOptimizer<FUNC>, int, RandomVectorGenerator)	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer.java
8520= org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer:getEvaluations()	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer.java
8521= org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer:getConvergenceChecker()	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer.java
8522= org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer:sortPairs(double[], double[])	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer.java
8523= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.QuadraticProblem:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8524= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest:addPoint(double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8525= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest:testBevington()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8526= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.QuadraticProblem:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8527= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.QuadraticProblem:addPoint(double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8528= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.BevingtonProblem:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8529= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest:testConstraintsUnsupported()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8530= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.BevingtonProblem:BevingtonProblem()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8531= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.QuadraticProblem:getModelFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8532= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest:createOptimizer()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8533= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest:QuadraticProblem()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8534= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8535= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest:BevingtonProblem()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8536= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest:testControlParameters()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8537= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.BevingtonProblem:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8538= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8539= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.BevingtonProblem:addPoint(double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8540= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest:checkEstimate(ModelFunction, ModelFunctionJacobian, double, int, double, double, double, boolean)	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8541= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.QuadraticProblem:QuadraticProblem()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8542= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.BevingtonProblem:getModelFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8543= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest:getModelFunction()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8544= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest:testNonInvertible()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8545= org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest:testCircleFitting2()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizerTest.java
8546= org.apache.commons.math3.geometry.euclidean.threed.Line:reset(Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8547= org.apache.commons.math3.geometry.euclidean.threed.Line:closestPoint(Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8548= org.apache.commons.math3.geometry.euclidean.threed.Line:toSubSpace(Point<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8549= org.apache.commons.math3.geometry.euclidean.threed.Line:contains(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8550= org.apache.commons.math3.geometry.euclidean.threed.Line:Line(Vector3D, Vector3D, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8551= org.apache.commons.math3.geometry.euclidean.threed.Line:getOrigin()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8552= org.apache.commons.math3.geometry.euclidean.threed.Line:Line(Vector3D, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8553= org.apache.commons.math3.geometry.euclidean.threed.Line:intersection(Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8554= org.apache.commons.math3.geometry.euclidean.threed.Line:toSpace(Point<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8555= org.apache.commons.math3.geometry.euclidean.threed.Line:isSimilarTo(Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8556= org.apache.commons.math3.geometry.euclidean.threed.Line:getDirection()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8557= org.apache.commons.math3.geometry.euclidean.threed.Line:Line(Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8558= org.apache.commons.math3.geometry.euclidean.threed.Line:distance(Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8559= org.apache.commons.math3.geometry.euclidean.threed.Line:revert()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8560= org.apache.commons.math3.geometry.euclidean.threed.Line:toSpace(Vector<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8561= org.apache.commons.math3.geometry.euclidean.threed.Line:getAbscissa(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8562= org.apache.commons.math3.geometry.euclidean.threed.Line:getTolerance()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8563= org.apache.commons.math3.geometry.euclidean.threed.Line:pointAt(double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8564= org.apache.commons.math3.geometry.euclidean.threed.Line:wholeLine()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8565= org.apache.commons.math3.geometry.euclidean.threed.Line:distance(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8566= org.apache.commons.math3.geometry.euclidean.threed.Line:toSubSpace(Vector<Euclidean3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
8567= org.apache.commons.math3.exception.NullArgumentException:NullArgumentException(Localizable, Object)	/src/main/java/org/apache/commons/math3/exception/NullArgumentException.java
8568= org.apache.commons.math3.exception.NullArgumentException:NullArgumentException()	/src/main/java/org/apache/commons/math3/exception/NullArgumentException.java
8569= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator:value(T)	/src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java
8570= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator:derivatives(T, int)	/src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java
8571= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator:FieldHermiteInterpolator()	/src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java
8572= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator:addSamplePoint(T, T[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java
8573= org.apache.commons.math3.stat.ranking.NaturalRanking:removeNaNs(IntDoublePair[])	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8574= org.apache.commons.math3.stat.ranking.NaturalRanking:getValue()	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8575= org.apache.commons.math3.stat.ranking.NaturalRanking:resolveTie(double[], List<Integer>)	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8576= org.apache.commons.math3.stat.ranking.NaturalRanking.IntDoublePair:IntDoublePair(double, int)	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8577= org.apache.commons.math3.stat.ranking.NaturalRanking.IntDoublePair:getPosition()	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8578= org.apache.commons.math3.stat.ranking.NaturalRanking:compareTo(IntDoublePair)	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8579= org.apache.commons.math3.stat.ranking.NaturalRanking:getTiesStrategy()	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8580= org.apache.commons.math3.stat.ranking.NaturalRanking:containsNaNs(IntDoublePair[])	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8581= org.apache.commons.math3.stat.ranking.NaturalRanking:restoreNaNs(double[], List<Integer>)	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8582= org.apache.commons.math3.stat.ranking.NaturalRanking:getPosition()	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8583= org.apache.commons.math3.stat.ranking.NaturalRanking:NaturalRanking(NaNStrategy)	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8584= org.apache.commons.math3.stat.ranking.NaturalRanking:NaturalRanking(NaNStrategy, RandomGenerator)	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8585= org.apache.commons.math3.stat.ranking.NaturalRanking.IntDoublePair:getValue()	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8586= org.apache.commons.math3.stat.ranking.NaturalRanking:NaturalRanking(RandomGenerator)	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8587= org.apache.commons.math3.stat.ranking.NaturalRanking:recodeNaNs(IntDoublePair[], double)	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8588= org.apache.commons.math3.stat.ranking.NaturalRanking.IntDoublePair:compareTo(IntDoublePair)	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8589= org.apache.commons.math3.stat.ranking.NaturalRanking:NaturalRanking(NaNStrategy, TiesStrategy)	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8590= org.apache.commons.math3.stat.ranking.NaturalRanking:fill(double[], List<Integer>, double)	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8591= org.apache.commons.math3.stat.ranking.NaturalRanking:NaturalRanking(TiesStrategy)	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8592= org.apache.commons.math3.stat.ranking.NaturalRanking:rank(double[])	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8593= org.apache.commons.math3.stat.ranking.NaturalRanking:getNanStrategy()	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8594= org.apache.commons.math3.stat.ranking.NaturalRanking:NaturalRanking()	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8595= org.apache.commons.math3.stat.ranking.NaturalRanking:getNanPositions(IntDoublePair[])	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8596= org.apache.commons.math3.stat.ranking.NaturalRanking:IntDoublePair(double, int)	/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
8597= org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver:solve(int, FUNC, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java
8598= org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver:getRelativeAccuracy()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java
8599= org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver:getAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java
8600= org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver:solve(int, FUNC, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java
8601= org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver:getMaxEvaluations()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java
8602= org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver:getFunctionValueAccuracy()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java
8603= org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver:solve(int, FUNC, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java
8604= org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver:getEvaluations()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java
8605= org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest:createSummaryStatistics()	/src/test/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatisticsTest.java
8606= org.apache.commons.math3.fitting.WeightedObservedPoints:add(double, double)	/src/main/java/org/apache/commons/math3/fitting/WeightedObservedPoints.java
8607= org.apache.commons.math3.fitting.WeightedObservedPoints:add(double, double, double)	/src/main/java/org/apache/commons/math3/fitting/WeightedObservedPoints.java
8608= org.apache.commons.math3.fitting.WeightedObservedPoints:toList()	/src/main/java/org/apache/commons/math3/fitting/WeightedObservedPoints.java
8609= org.apache.commons.math3.fitting.WeightedObservedPoints:clear()	/src/main/java/org/apache/commons/math3/fitting/WeightedObservedPoints.java
8610= org.apache.commons.math3.fitting.WeightedObservedPoints:add(WeightedObservedPoint)	/src/main/java/org/apache/commons/math3/fitting/WeightedObservedPoints.java
8611= org.apache.commons.math3.analysis.function.Signum:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Signum.java
8612= org.apache.commons.math3.linear.RealVector:getDimension()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8613= org.apache.commons.math3.linear.RealVector:subtract(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8614= org.apache.commons.math3.linear.RealVector:checkVectorDimensions(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8615= org.apache.commons.math3.linear.RealVector:checkIndices(int, int)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8616= org.apache.commons.math3.linear.RealVector:checkVectorDimensions(int)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8617= org.apache.commons.math3.linear.RealVector:mapMultiply(double)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8618= org.apache.commons.math3.linear.RealVector:combine(double, double, RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8619= org.apache.commons.math3.linear.RealVector.Entry:setIndex(int)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8620= org.apache.commons.math3.linear.RealVector:getNorm()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8621= org.apache.commons.math3.linear.RealVector.SparseEntryIterator:SparseEntryIterator()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8622= org.apache.commons.math3.linear.RealVector:setEntry(int, double)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8623= org.apache.commons.math3.linear.RealVector:isNaN()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8624= org.apache.commons.math3.linear.RealVector:next()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8625= org.apache.commons.math3.linear.RealVector.SparseEntryIterator:remove()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8626= org.apache.commons.math3.linear.RealVector:getMaxValue()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8627= org.apache.commons.math3.linear.RealVector:cosine(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8628= org.apache.commons.math3.linear.RealVector:projection(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8629= org.apache.commons.math3.linear.RealVector:walkInDefaultOrder(RealVectorPreservingVisitor, int, int)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8630= org.apache.commons.math3.linear.RealVector:walkInOptimizedOrder(RealVectorPreservingVisitor)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8631= org.apache.commons.math3.linear.RealVector:walkInDefaultOrder(RealVectorChangingVisitor)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8632= org.apache.commons.math3.linear.RealVector:getIndex()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8633= org.apache.commons.math3.linear.RealVector:walkInOptimizedOrder(RealVectorChangingVisitor)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8634= org.apache.commons.math3.linear.RealVector:SparseEntryIterator()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8635= org.apache.commons.math3.linear.RealVector:add(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8636= org.apache.commons.math3.linear.RealVector:mapSubtractToSelf(double)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8637= org.apache.commons.math3.linear.RealVector:mapAddToSelf(double)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8638= org.apache.commons.math3.linear.RealVector:unmodifiableRealVector(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8639= org.apache.commons.math3.linear.RealVector:advance(Entry)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8640= org.apache.commons.math3.linear.RealVector.SparseEntryIterator:hasNext()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8641= :setValue(double)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8642= org.apache.commons.math3.linear.RealVector:addToEntry(int, double)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8643= org.apache.commons.math3.linear.RealVector:equals(Object)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8644= org.apache.commons.math3.linear.RealVector.SparseEntryIterator:next()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8645= org.apache.commons.math3.linear.RealVector:Entry()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8646= org.apache.commons.math3.linear.RealVector.Entry:getIndex()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8647= org.apache.commons.math3.linear.RealVector:walkInDefaultOrder(RealVectorPreservingVisitor)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8648= org.apache.commons.math3.linear.RealVector:append(double)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8649= org.apache.commons.math3.linear.RealVector:ebeMultiply(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8650= org.apache.commons.math3.linear.RealVector:outerProduct(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8651= org.apache.commons.math3.linear.RealVector:set(double)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8652= org.apache.commons.math3.linear.RealVector:toArray()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8653= org.apache.commons.math3.linear.RealVector:getMinValue()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8654= org.apache.commons.math3.linear.RealVector:unitize()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8655= org.apache.commons.math3.linear.RealVector:mapDivideToSelf(double)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8656= org.apache.commons.math3.linear.RealVector:getMaxIndex()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8657= org.apache.commons.math3.linear.RealVector:mapDivide(double)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8658= org.apache.commons.math3.linear.RealVector:mapAdd(double)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8659= org.apache.commons.math3.linear.RealVector:hashCode()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8660= org.apache.commons.math3.linear.RealVector:mapSubtract(double)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8661= org.apache.commons.math3.linear.RealVector:map(UnivariateFunction)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8662= org.apache.commons.math3.linear.RealVector:getDistance(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8663= org.apache.commons.math3.linear.RealVector.SparseEntryIterator:advance(Entry)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8664= org.apache.commons.math3.linear.RealVector:iterator()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8665= org.apache.commons.math3.linear.RealVector:mapToSelf(UnivariateFunction)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8666= org.apache.commons.math3.linear.RealVector:walkInDefaultOrder(RealVectorChangingVisitor, int, int)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8667= org.apache.commons.math3.linear.RealVector:setValue(double)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8668= org.apache.commons.math3.linear.RealVector:isInfinite()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8669= org.apache.commons.math3.linear.RealVector:getSubVector(int, int)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8670= org.apache.commons.math3.linear.RealVector:append(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8671= org.apache.commons.math3.linear.RealVector:getL1Norm()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8672= org.apache.commons.math3.linear.RealVector:mapMultiplyToSelf(double)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8673= org.apache.commons.math3.linear.RealVector:checkIndex(int)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8674= org.apache.commons.math3.linear.RealVector:walkInOptimizedOrder(RealVectorChangingVisitor, int, int)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8675= org.apache.commons.math3.linear.RealVector:getLInfDistance(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8676= org.apache.commons.math3.linear.RealVector:hasNext()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8677= :getValue()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8678= org.apache.commons.math3.linear.RealVector:copy()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8679= org.apache.commons.math3.linear.RealVector.Entry:Entry()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8680= org.apache.commons.math3.linear.RealVector:ebeDivide(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8681= org.apache.commons.math3.linear.RealVector:sparseIterator()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8682= org.apache.commons.math3.linear.RealVector:setSubVector(int, RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8683= org.apache.commons.math3.linear.RealVector:getMinIndex()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8684= org.apache.commons.math3.linear.RealVector:getL1Distance(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8685= org.apache.commons.math3.linear.RealVector:walkInOptimizedOrder(RealVectorPreservingVisitor, int, int)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8686= org.apache.commons.math3.linear.RealVector:combineToSelf(double, double, RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8687= org.apache.commons.math3.linear.RealVector:getValue()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8688= org.apache.commons.math3.linear.RealVector.Entry:getValue()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8689= org.apache.commons.math3.linear.RealVector.Entry:setValue(double)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8690= org.apache.commons.math3.linear.RealVector:getEntry(int)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8691= org.apache.commons.math3.linear.RealVector:remove()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8692= org.apache.commons.math3.linear.RealVector:dotProduct(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8693= org.apache.commons.math3.linear.RealVector:getLInfNorm()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8694= org.apache.commons.math3.linear.RealVector:unitVector()	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8695= org.apache.commons.math3.linear.RealVector:setIndex(int)	/src/main/java/org/apache/commons/math3/linear/RealVector.java
8696= org.apache.commons.math3.stat.descriptive.summary.SumOfSquares:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfSquares.java
8697= org.apache.commons.math3.stat.descriptive.summary.SumOfSquares:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfSquares.java
8698= org.apache.commons.math3.stat.descriptive.summary.SumOfSquares:SumOfSquares(SumOfSquares)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfSquares.java
8699= org.apache.commons.math3.stat.descriptive.summary.SumOfSquares:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfSquares.java
8700= org.apache.commons.math3.stat.descriptive.summary.SumOfSquares:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfSquares.java
8701= org.apache.commons.math3.stat.descriptive.summary.SumOfSquares:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfSquares.java
8702= org.apache.commons.math3.stat.descriptive.summary.SumOfSquares:SumOfSquares()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfSquares.java
8703= org.apache.commons.math3.stat.descriptive.summary.SumOfSquares:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfSquares.java
8704= org.apache.commons.math3.stat.descriptive.summary.SumOfSquares:copy(SumOfSquares, SumOfSquares)	/src/main/java/org/apache/commons/math3/stat/descriptive/summary/SumOfSquares.java
8705= org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker:SimpleUnivariateValueChecker(double, double, int)	/src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java
8706= org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker:SimpleUnivariateValueChecker(double, double)	/src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java
8707= org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker:converged(int, UnivariatePointValuePair, UnivariatePointValuePair)	/src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java
8708= org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker:SimpleUnivariateValueChecker()	/src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java
8709= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:testCopy()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8710= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:testGetValues()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8711= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:setQuantile(double)	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8712= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:testRemoval()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8713= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.goodPercentile:copy()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8714= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.subPercentile:evaluate(double[])	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8715= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.deepMean:copy()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8716= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.subPercentile:evaluate(double[], int, int)	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8717= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:testSummaryConsistency()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8718= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:checkremoval(DescriptiveStatistics, int, double, double, double)	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8719= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.badPercentile:evaluate(double[])	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8720= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:testSetterInjection()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8721= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:evaluate(double[], int, int)	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8722= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.goodPercentile:setQuantile(double)	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8723= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.deepMean:evaluate(double[], int, int)	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8724= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.goodPercentile:evaluate(double[], int, int)	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8725= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:testPercentileSetter()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8726= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.subPercentile:copy()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8727= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:test20090720()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8728= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.badPercentile:evaluate(double[], int, int)	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8729= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:copy()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8730= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.deepMean:evaluate(double[])	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8731= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:testShuffledStatistics()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8732= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:testWindowSize()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8733= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.badPercentile:copy()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8734= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:createDescriptiveStatistics()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8735= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:evaluate(double[])	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8736= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.goodPercentile:evaluate(double[])	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8737= org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest:testToString()	/src/test/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatisticsTest.java
8738= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:GraggBulirschStoerIntegrator(double, double, double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
8739= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:initializeArrays()	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
8740= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:setStabilityCheck(boolean, int, int, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
8741= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:setControlFactors(double, double, double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
8742= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:setInterpolationControl(boolean, int)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
8743= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:rescale(double[], double[], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
8744= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:extrapolate(int, int, double[][], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
8745= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:addStepHandler(StepHandler)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
8746= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:integrate(ExpandableStatefulODE, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
8747= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:addEventHandler(EventHandler, double, double, int, UnivariateSolver)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
8748= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:setOrderControl(int, double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
8749= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:GraggBulirschStoerIntegrator(double, double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
8750= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:tryStep(double, double[], double, int, double[], double[][], double[], double[], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
8751= org.apache.commons.math3.stat.descriptive.moment.Skewness:Skewness()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java
8752= org.apache.commons.math3.stat.descriptive.moment.Skewness:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java
8753= org.apache.commons.math3.stat.descriptive.moment.Skewness:copy(Skewness, Skewness)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java
8754= org.apache.commons.math3.stat.descriptive.moment.Skewness:Skewness(ThirdMoment)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java
8755= org.apache.commons.math3.stat.descriptive.moment.Skewness:Skewness(Skewness)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java
8756= org.apache.commons.math3.stat.descriptive.moment.Skewness:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java
8757= org.apache.commons.math3.stat.descriptive.moment.Skewness:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java
8758= org.apache.commons.math3.stat.descriptive.moment.Skewness:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java
8759= org.apache.commons.math3.stat.descriptive.moment.Skewness:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java
8760= org.apache.commons.math3.stat.descriptive.moment.Skewness:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java
8761= org.apache.commons.math3.dfp.UnivariateDfpFunction:value(Dfp)	/src/main/java/org/apache/commons/math3/dfp/UnivariateDfpFunction.java
8762= org.apache.commons.math3.stat.descriptive.moment.VarianceTest:testPopulation()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VarianceTest.java
8763= org.apache.commons.math3.stat.descriptive.moment.VarianceTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VarianceTest.java
8764= org.apache.commons.math3.stat.descriptive.moment.VarianceTest:testNaN()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VarianceTest.java
8765= org.apache.commons.math3.stat.descriptive.moment.VarianceTest:expectedWeightedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VarianceTest.java
8766= org.apache.commons.math3.stat.descriptive.moment.VarianceTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VarianceTest.java
8767= org.apache.commons.math3.stat.descriptive.moment.VarianceTest:populationVariance(double[])	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VarianceTest.java
8768= org.apache.commons.math3.stat.descriptive.moment.VarianceTest:testWeightedVariance()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VarianceTest.java
8769= org.apache.commons.math3.ode.sampling.StepNormalizerBounds:lastIncluded()	/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizerBounds.java
8770= org.apache.commons.math3.ode.sampling.StepNormalizerBounds:firstIncluded()	/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizerBounds.java
8771= org.apache.commons.math3.ode.sampling.StepNormalizerBounds:StepNormalizerBounds(boolean, boolean)	/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizerBounds.java
8772= org.apache.commons.math3.fraction.ProperFractionFormat:setWholeFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/fraction/ProperFractionFormat.java
8773= org.apache.commons.math3.fraction.ProperFractionFormat:ProperFractionFormat(NumberFormat, NumberFormat, NumberFormat)	/src/main/java/org/apache/commons/math3/fraction/ProperFractionFormat.java
8774= org.apache.commons.math3.fraction.ProperFractionFormat:format(Fraction, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/fraction/ProperFractionFormat.java
8775= org.apache.commons.math3.fraction.ProperFractionFormat:parse(String, ParsePosition)	/src/main/java/org/apache/commons/math3/fraction/ProperFractionFormat.java
8776= org.apache.commons.math3.fraction.ProperFractionFormat:ProperFractionFormat()	/src/main/java/org/apache/commons/math3/fraction/ProperFractionFormat.java
8777= org.apache.commons.math3.fraction.ProperFractionFormat:getWholeFormat()	/src/main/java/org/apache/commons/math3/fraction/ProperFractionFormat.java
8778= org.apache.commons.math3.fraction.ProperFractionFormat:ProperFractionFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/fraction/ProperFractionFormat.java
8779= org.apache.commons.math3.random.RandomAdaptor:nextDouble()	/src/main/java/org/apache/commons/math3/random/RandomAdaptor.java
8780= org.apache.commons.math3.random.RandomAdaptor:nextGaussian()	/src/main/java/org/apache/commons/math3/random/RandomAdaptor.java
8781= org.apache.commons.math3.random.RandomAdaptor:setSeed(long)	/src/main/java/org/apache/commons/math3/random/RandomAdaptor.java
8782= org.apache.commons.math3.random.RandomAdaptor:createAdaptor(RandomGenerator)	/src/main/java/org/apache/commons/math3/random/RandomAdaptor.java
8783= org.apache.commons.math3.random.RandomAdaptor:RandomAdaptor()	/src/main/java/org/apache/commons/math3/random/RandomAdaptor.java
8784= org.apache.commons.math3.random.RandomAdaptor:nextInt(int)	/src/main/java/org/apache/commons/math3/random/RandomAdaptor.java
8785= org.apache.commons.math3.random.RandomAdaptor:nextBytes(byte[])	/src/main/java/org/apache/commons/math3/random/RandomAdaptor.java
8786= org.apache.commons.math3.random.RandomAdaptor:setSeed(int)	/src/main/java/org/apache/commons/math3/random/RandomAdaptor.java
8787= org.apache.commons.math3.random.RandomAdaptor:nextLong()	/src/main/java/org/apache/commons/math3/random/RandomAdaptor.java
8788= org.apache.commons.math3.random.RandomAdaptor:nextInt()	/src/main/java/org/apache/commons/math3/random/RandomAdaptor.java
8789= org.apache.commons.math3.random.RandomAdaptor:RandomAdaptor(RandomGenerator)	/src/main/java/org/apache/commons/math3/random/RandomAdaptor.java
8790= org.apache.commons.math3.random.RandomAdaptor:nextBoolean()	/src/main/java/org/apache/commons/math3/random/RandomAdaptor.java
8791= org.apache.commons.math3.random.RandomAdaptor:setSeed(int[])	/src/main/java/org/apache/commons/math3/random/RandomAdaptor.java
8792= org.apache.commons.math3.random.RandomAdaptor:nextFloat()	/src/main/java/org/apache/commons/math3/random/RandomAdaptor.java
8793= org.apache.commons.math3.optimization.BaseMultivariateVectorOptimizer:optimize(int, FUNC, double[], double[], double[])	/src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorOptimizer.java
8794= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:getNearestCluster(Collection<CentroidCluster<T>>, T)	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8795= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:getMaxIterations()	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8796= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:getPointFromLargestVarianceCluster(Collection<CentroidCluster<T>>)	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8797= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:KMeansPlusPlusClusterer(int, int, DistanceMeasure, RandomGenerator, EmptyClusterStrategy)	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8798= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:getPointFromLargestNumberCluster(Collection<? extends Cluster<T>>)	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8799= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:getRandomGenerator()	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8800= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:chooseInitialCenters(Collection<T>)	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8801= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:getEmptyClusterStrategy()	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8802= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:KMeansPlusPlusClusterer(int, int)	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8803= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:assignPointsToClusters(List<CentroidCluster<T>>, Collection<T>, int[])	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8804= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:getFarthestPoint(Collection<CentroidCluster<T>>)	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8805= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:KMeansPlusPlusClusterer(int, int, DistanceMeasure, RandomGenerator)	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8806= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:KMeansPlusPlusClusterer(int)	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8807= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:KMeansPlusPlusClusterer(int, int, DistanceMeasure)	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8808= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:getK()	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8809= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:cluster(Collection<T>)	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8810= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:centroidOf(Collection<T>, int)	/src/main/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer.java
8811= org.apache.commons.math3.geometry.partitioning.BoundaryProjector:singularProjection(Point<S>, Hyperplane<S>, Region<T>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryProjector.java
8812= org.apache.commons.math3.geometry.partitioning.BoundaryProjector:BoundaryProjector(Point<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryProjector.java
8813= org.apache.commons.math3.geometry.partitioning.BoundaryProjector:addRegion(SubHyperplane<S>, List<Region<T>>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryProjector.java
8814= org.apache.commons.math3.geometry.partitioning.BoundaryProjector:belongsToPart(Point<S>, Hyperplane<S>, Region<T>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryProjector.java
8815= org.apache.commons.math3.geometry.partitioning.BoundaryProjector:boundaryRegions(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryProjector.java
8816= org.apache.commons.math3.geometry.partitioning.BoundaryProjector:visitOrder(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryProjector.java
8817= org.apache.commons.math3.geometry.partitioning.BoundaryProjector:getProjection()	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryProjector.java
8818= org.apache.commons.math3.geometry.partitioning.BoundaryProjector:visitLeafNode(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryProjector.java
8819= org.apache.commons.math3.geometry.partitioning.BoundaryProjector:visitInternalNode(BSPTree<S>)	/src/main/java/org/apache/commons/math3/geometry/partitioning/BoundaryProjector.java
8820= org.apache.commons.math3.genetics.PermutationChromosome:decode(List<T>)	/src/main/java/org/apache/commons/math3/genetics/PermutationChromosome.java
8821= org.apache.commons.math3.random.ISAACTest:testReference()	/src/test/java/org/apache/commons/math3/random/ISAACTest.java
8822= org.apache.commons.math3.random.ISAACTest:getActualSequence(ISAACRandom)	/src/test/java/org/apache/commons/math3/random/ISAACTest.java
8823= org.apache.commons.math3.random.ISAACTest:makeGenerator()	/src/test/java/org/apache/commons/math3/random/ISAACTest.java
8824= org.apache.commons.math3.exception.NotStrictlyPositiveException:NotStrictlyPositiveException(Number)	/src/main/java/org/apache/commons/math3/exception/NotStrictlyPositiveException.java
8825= org.apache.commons.math3.exception.NotStrictlyPositiveException:NotStrictlyPositiveException(Localizable, Number)	/src/main/java/org/apache/commons/math3/exception/NotStrictlyPositiveException.java
8826= org.apache.commons.math3.stat.regression.MultipleLinearRegression:estimateResiduals()	/src/main/java/org/apache/commons/math3/stat/regression/MultipleLinearRegression.java
8827= org.apache.commons.math3.stat.regression.MultipleLinearRegression:estimateRegressionParameters()	/src/main/java/org/apache/commons/math3/stat/regression/MultipleLinearRegression.java
8828= org.apache.commons.math3.stat.regression.MultipleLinearRegression:estimateRegressionParametersVariance()	/src/main/java/org/apache/commons/math3/stat/regression/MultipleLinearRegression.java
8829= org.apache.commons.math3.stat.regression.MultipleLinearRegression:estimateRegressandVariance()	/src/main/java/org/apache/commons/math3/stat/regression/MultipleLinearRegression.java
8830= org.apache.commons.math3.stat.regression.MultipleLinearRegression:estimateRegressionParametersStandardErrors()	/src/main/java/org/apache/commons/math3/stat/regression/MultipleLinearRegression.java
8831= org.apache.commons.math3.distribution.EnumeratedIntegerDistribution:EnumeratedIntegerDistribution(RandomGenerator, int[], double[])	/src/main/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistribution.java
8832= org.apache.commons.math3.distribution.EnumeratedIntegerDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistribution.java
8833= org.apache.commons.math3.distribution.EnumeratedIntegerDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistribution.java
8834= org.apache.commons.math3.distribution.EnumeratedIntegerDistribution:EnumeratedIntegerDistribution(int[], double[])	/src/main/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistribution.java
8835= org.apache.commons.math3.distribution.EnumeratedIntegerDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistribution.java
8836= org.apache.commons.math3.distribution.EnumeratedIntegerDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistribution.java
8837= org.apache.commons.math3.distribution.EnumeratedIntegerDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistribution.java
8838= org.apache.commons.math3.distribution.EnumeratedIntegerDistribution:probability(int)	/src/main/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistribution.java
8839= org.apache.commons.math3.distribution.EnumeratedIntegerDistribution:cumulativeProbability(int)	/src/main/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistribution.java
8840= org.apache.commons.math3.distribution.EnumeratedIntegerDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistribution.java
8841= org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer:optimize(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/GradientMultivariateOptimizer.java
8842= org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer:GradientMultivariateOptimizer(ConvergenceChecker<PointValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/GradientMultivariateOptimizer.java
8843= org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer:computeObjectiveGradient(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/GradientMultivariateOptimizer.java
8844= org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/GradientMultivariateOptimizer.java
8845= org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:ModelFunction(MultivariateVectorFunction)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/ModelFunction.java
8846= org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:getModelFunction()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/ModelFunction.java
8847= org.apache.commons.math3.ml.distance.EarthMoversDistanceTest:test()	/src/test/java/org/apache/commons/math3/ml/distance/EarthMoversDistanceTest.java
8848= org.apache.commons.math3.ml.distance.EarthMoversDistanceTest:testZero()	/src/test/java/org/apache/commons/math3/ml/distance/EarthMoversDistanceTest.java
8849= org.apache.commons.math3.ml.distance.EarthMoversDistanceTest:testZero2()	/src/test/java/org/apache/commons/math3/ml/distance/EarthMoversDistanceTest.java
8850= org.apache.commons.math3.optim.OptimizationProblem:getIterationCounter()	/src/main/java/org/apache/commons/math3/optim/OptimizationProblem.java
8851= org.apache.commons.math3.optim.OptimizationProblem:getEvaluationCounter()	/src/main/java/org/apache/commons/math3/optim/OptimizationProblem.java
8852= org.apache.commons.math3.optim.OptimizationProblem:getConvergenceChecker()	/src/main/java/org/apache/commons/math3/optim/OptimizationProblem.java
8853= org.apache.commons.math3.linear.RealMatrixChangingVisitor:visit(int, int, double)	/src/main/java/org/apache/commons/math3/linear/RealMatrixChangingVisitor.java
8854= org.apache.commons.math3.linear.RealMatrixChangingVisitor:end()	/src/main/java/org/apache/commons/math3/linear/RealMatrixChangingVisitor.java
8855= org.apache.commons.math3.linear.RealMatrixChangingVisitor:start(int, int, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/RealMatrixChangingVisitor.java
8856= org.apache.commons.math3.random.SobolSequenceGenerator:nextVector()	/src/main/java/org/apache/commons/math3/random/SobolSequenceGenerator.java
8857= org.apache.commons.math3.random.SobolSequenceGenerator:initDirectionVector(int, int, int[])	/src/main/java/org/apache/commons/math3/random/SobolSequenceGenerator.java
8858= org.apache.commons.math3.random.SobolSequenceGenerator:getNextIndex()	/src/main/java/org/apache/commons/math3/random/SobolSequenceGenerator.java
8859= org.apache.commons.math3.random.SobolSequenceGenerator:skipTo(int)	/src/main/java/org/apache/commons/math3/random/SobolSequenceGenerator.java
8860= org.apache.commons.math3.random.SobolSequenceGenerator:SobolSequenceGenerator(int)	/src/main/java/org/apache/commons/math3/random/SobolSequenceGenerator.java
8861= org.apache.commons.math3.random.SobolSequenceGenerator:initFromStream(InputStream)	/src/main/java/org/apache/commons/math3/random/SobolSequenceGenerator.java
8862= org.apache.commons.math3.random.SobolSequenceGenerator:SobolSequenceGenerator(int, InputStream)	/src/main/java/org/apache/commons/math3/random/SobolSequenceGenerator.java
8863= org.apache.commons.math3.fitting.AbstractCurveFitter:getProblem(Collection<WeightedObservedPoint>)	/src/main/java/org/apache/commons/math3/fitting/AbstractCurveFitter.java
8864= org.apache.commons.math3.fitting.AbstractCurveFitter.TheoreticalValuesFunction:getModelFunction()	/src/main/java/org/apache/commons/math3/fitting/AbstractCurveFitter.java
8865= org.apache.commons.math3.fitting.AbstractCurveFitter:getOptimizer()	/src/main/java/org/apache/commons/math3/fitting/AbstractCurveFitter.java
8866= org.apache.commons.math3.fitting.AbstractCurveFitter:getModelFunction()	/src/main/java/org/apache/commons/math3/fitting/AbstractCurveFitter.java
8867= org.apache.commons.math3.fitting.AbstractCurveFitter.TheoreticalValuesFunction:TheoreticalValuesFunction(ParametricUnivariateFunction, Collection<WeightedObservedPoint>)	/src/main/java/org/apache/commons/math3/fitting/AbstractCurveFitter.java
8868= org.apache.commons.math3.fitting.AbstractCurveFitter.TheoreticalValuesFunction:value(double[])	/src/main/java/org/apache/commons/math3/fitting/AbstractCurveFitter.java
8869= org.apache.commons.math3.fitting.AbstractCurveFitter:value(double[])	/src/main/java/org/apache/commons/math3/fitting/AbstractCurveFitter.java
8870= org.apache.commons.math3.fitting.AbstractCurveFitter.TheoreticalValuesFunction:getModelFunctionJacobian()	/src/main/java/org/apache/commons/math3/fitting/AbstractCurveFitter.java
8871= org.apache.commons.math3.fitting.AbstractCurveFitter:fit(Collection<WeightedObservedPoint>)	/src/main/java/org/apache/commons/math3/fitting/AbstractCurveFitter.java
8872= org.apache.commons.math3.fitting.AbstractCurveFitter:TheoreticalValuesFunction(ParametricUnivariateFunction, Collection<WeightedObservedPoint>)	/src/main/java/org/apache/commons/math3/fitting/AbstractCurveFitter.java
8873= org.apache.commons.math3.fitting.AbstractCurveFitter:getModelFunctionJacobian()	/src/main/java/org/apache/commons/math3/fitting/AbstractCurveFitter.java
8874= org.apache.commons.math3.linear.AbstractRealMatrix:multiplyEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8875= org.apache.commons.math3.linear.AbstractRealMatrix:walkInOptimizedOrder(RealMatrixChangingVisitor)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8876= org.apache.commons.math3.linear.AbstractRealMatrix:walkInRowOrder(RealMatrixPreservingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8877= org.apache.commons.math3.linear.AbstractRealMatrix:walkInOptimizedOrder(RealMatrixPreservingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8878= org.apache.commons.math3.linear.AbstractRealMatrix:getColumnVector(int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8879= org.apache.commons.math3.linear.AbstractRealMatrix:start(int, int, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8880= org.apache.commons.math3.linear.AbstractRealMatrix:end()	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8881= org.apache.commons.math3.linear.AbstractRealMatrix:scalarMultiply(double)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8882= org.apache.commons.math3.linear.AbstractRealMatrix:getData()	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8883= org.apache.commons.math3.linear.AbstractRealMatrix:walkInRowOrder(RealMatrixPreservingVisitor)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8884= org.apache.commons.math3.linear.AbstractRealMatrix:copySubMatrix(int[], int[], double[][])	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8885= org.apache.commons.math3.linear.AbstractRealMatrix:walkInOptimizedOrder(RealMatrixChangingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8886= org.apache.commons.math3.linear.AbstractRealMatrix:getRowMatrix(int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8887= org.apache.commons.math3.linear.AbstractRealMatrix:getRow(int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8888= org.apache.commons.math3.linear.AbstractRealMatrix:copy()	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8889= org.apache.commons.math3.linear.AbstractRealMatrix:getEntry(int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8890= org.apache.commons.math3.linear.AbstractRealMatrix:toString()	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8891= org.apache.commons.math3.linear.AbstractRealMatrix:power(int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8892= org.apache.commons.math3.linear.AbstractRealMatrix:setRow(int, double[])	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8893= org.apache.commons.math3.linear.AbstractRealMatrix:walkInColumnOrder(RealMatrixPreservingVisitor)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8894= org.apache.commons.math3.linear.AbstractRealMatrix:getSubMatrix(int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8895= org.apache.commons.math3.linear.AbstractRealMatrix:walkInRowOrder(RealMatrixChangingVisitor)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8896= org.apache.commons.math3.linear.AbstractRealMatrix:getColumnDimension()	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8897= org.apache.commons.math3.linear.AbstractRealMatrix:scalarAdd(double)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8898= org.apache.commons.math3.linear.AbstractRealMatrix:preMultiply(RealVector)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8899= org.apache.commons.math3.linear.AbstractRealMatrix:addToEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8900= org.apache.commons.math3.linear.AbstractRealMatrix:walkInColumnOrder(RealMatrixChangingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8901= org.apache.commons.math3.linear.AbstractRealMatrix:subtract(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8902= org.apache.commons.math3.linear.AbstractRealMatrix:walkInOptimizedOrder(RealMatrixPreservingVisitor)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8903= org.apache.commons.math3.linear.AbstractRealMatrix:setRowVector(int, RealVector)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8904= org.apache.commons.math3.linear.AbstractRealMatrix:isSquare()	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8905= org.apache.commons.math3.linear.AbstractRealMatrix:getRowDimension()	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8906= org.apache.commons.math3.linear.AbstractRealMatrix:setRowMatrix(int, RealMatrix)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8907= org.apache.commons.math3.linear.AbstractRealMatrix:setColumnVector(int, RealVector)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8908= org.apache.commons.math3.linear.AbstractRealMatrix:operate(double[])	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8909= org.apache.commons.math3.linear.AbstractRealMatrix:setSubMatrix(double[][], int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8910= org.apache.commons.math3.linear.AbstractRealMatrix:setColumn(int, double[])	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8911= org.apache.commons.math3.linear.AbstractRealMatrix:setColumnMatrix(int, RealMatrix)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8912= org.apache.commons.math3.linear.AbstractRealMatrix:equals(Object)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8913= org.apache.commons.math3.linear.AbstractRealMatrix:getNorm()	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8914= org.apache.commons.math3.linear.AbstractRealMatrix:multiply(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8915= org.apache.commons.math3.linear.AbstractRealMatrix:copySubMatrix(int, int, int, int, double[][])	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8916= org.apache.commons.math3.linear.AbstractRealMatrix:add(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8917= org.apache.commons.math3.linear.AbstractRealMatrix:createMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8918= org.apache.commons.math3.linear.AbstractRealMatrix:transpose()	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8919= org.apache.commons.math3.linear.AbstractRealMatrix:getTrace()	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8920= org.apache.commons.math3.linear.AbstractRealMatrix:visit(int, int, double)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8921= org.apache.commons.math3.linear.AbstractRealMatrix:walkInColumnOrder(RealMatrixChangingVisitor)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8922= org.apache.commons.math3.linear.AbstractRealMatrix:operate(RealVector)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8923= org.apache.commons.math3.linear.AbstractRealMatrix:getRowVector(int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8924= org.apache.commons.math3.linear.AbstractRealMatrix:AbstractRealMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8925= org.apache.commons.math3.linear.AbstractRealMatrix:getColumn(int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8926= org.apache.commons.math3.linear.AbstractRealMatrix:walkInRowOrder(RealMatrixChangingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8927= org.apache.commons.math3.linear.AbstractRealMatrix:preMultiply(RealMatrix)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8928= org.apache.commons.math3.linear.AbstractRealMatrix:getColumnMatrix(int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8929= org.apache.commons.math3.linear.AbstractRealMatrix:getSubMatrix(int[], int[])	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8930= org.apache.commons.math3.linear.AbstractRealMatrix:setEntry(int, int, double)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8931= org.apache.commons.math3.linear.AbstractRealMatrix:walkInColumnOrder(RealMatrixPreservingVisitor, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8932= org.apache.commons.math3.linear.AbstractRealMatrix:<clinit0>	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8933= org.apache.commons.math3.linear.AbstractRealMatrix:hashCode()	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8934= org.apache.commons.math3.linear.AbstractRealMatrix:getFrobeniusNorm()	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8935= org.apache.commons.math3.linear.AbstractRealMatrix:AbstractRealMatrix()	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8936= org.apache.commons.math3.linear.AbstractRealMatrix:preMultiply(double[])	/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
8937= org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator:ballOnSupport(List<Vector3D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphereGenerator.java
8938= org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator:minor(BigFraction[], BigFraction[], BigFraction[])	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphereGenerator.java
8939= org.apache.commons.math3.analysis.function.HarmonicOscillator:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java
8940= org.apache.commons.math3.analysis.function.HarmonicOscillator:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java
8941= org.apache.commons.math3.analysis.function.HarmonicOscillator.Parametric:validateParameters(double[])	/src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java
8942= org.apache.commons.math3.analysis.function.HarmonicOscillator:HarmonicOscillator(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java
8943= org.apache.commons.math3.analysis.function.HarmonicOscillator:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java
8944= org.apache.commons.math3.analysis.function.HarmonicOscillator.Parametric:gradient(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java
8945= org.apache.commons.math3.analysis.function.HarmonicOscillator:validateParameters(double[])	/src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java
8946= org.apache.commons.math3.analysis.function.HarmonicOscillator.Parametric:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java
8947= org.apache.commons.math3.analysis.function.HarmonicOscillator:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java
8948= org.apache.commons.math3.analysis.function.HarmonicOscillator:gradient(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java
8949= org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction:BicubicSplineFunction(double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8950= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction:partialDerivativeXX(double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8951= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction:computePartialDerivatives()	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8952= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction:partialDerivativeY(double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8953= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction:isValidPoint(double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8954= org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction:partialDerivativeY()	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8955= org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction:partialDerivativeX()	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8956= org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction:computePartialDerivatives()	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8957= org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction:partialDerivativeYY()	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8958= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction:partialDerivativeYY(double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8959= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction:computeSplineCoefficients(double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8960= org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction:partialDerivativeXY()	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8961= org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction:partialDerivativeXX()	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8962= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction:partialDerivative(int, double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8963= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction:BicubicSplineInterpolatingFunction(double[], double[], double[][], double[][], double[][], double[][])	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8964= org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction:apply(double[], double[], double[][])	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8965= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8966= org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8967= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction:partialDerivativeXY(double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8968= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction:partialDerivativeX(double, double)	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8969= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction:searchIndex(double, double[])	/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
8970= org.apache.commons.math3.optim.BaseOptimizer:incrementIterationCount()	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8971= org.apache.commons.math3.optim.BaseOptimizer.MaxIterCallback:trigger(int)	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8972= org.apache.commons.math3.optim.BaseOptimizer:BaseOptimizer(ConvergenceChecker<PAIR>, int, int)	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8973= org.apache.commons.math3.optim.BaseOptimizer:getMaxEvaluations()	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8974= org.apache.commons.math3.optim.BaseOptimizer:getIterations()	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8975= org.apache.commons.math3.optim.BaseOptimizer.MaxEvalCallback:trigger(int)	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8976= org.apache.commons.math3.optim.BaseOptimizer:getMaxIterations()	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8977= org.apache.commons.math3.optim.BaseOptimizer:getConvergenceChecker()	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8978= org.apache.commons.math3.optim.BaseOptimizer:optimize(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8979= org.apache.commons.math3.optim.BaseOptimizer:optimize()	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8980= org.apache.commons.math3.optim.BaseOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8981= org.apache.commons.math3.optim.BaseOptimizer:trigger(int)	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8982= org.apache.commons.math3.optim.BaseOptimizer:incrementEvaluationCount()	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8983= org.apache.commons.math3.optim.BaseOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8984= org.apache.commons.math3.optim.BaseOptimizer:getEvaluations()	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8985= org.apache.commons.math3.optim.BaseOptimizer:BaseOptimizer(ConvergenceChecker<PAIR>)	/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
8986= org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariancesTest:setUp()	/src/test/java/org/apache/commons/math3/ml/clustering/evaluation/SumOfClusterVariancesTest.java
8987= org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariancesTest:testScore()	/src/test/java/org/apache/commons/math3/ml/clustering/evaluation/SumOfClusterVariancesTest.java
8988= org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariancesTest:testOrdering()	/src/test/java/org/apache/commons/math3/ml/clustering/evaluation/SumOfClusterVariancesTest.java
8989= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:readBaseExternal(ObjectInput)	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
8990= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:storeTime(double)	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
8991= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:getInterpolatedDerivatives()	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
8992= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:isForward()	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
8993= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:doFinalize()	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
8994= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:getGlobalCurrentTime()	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
8995= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:doCopy()	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
8996= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:shift()	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
8997= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:copy()	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
8998= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:getInterpolatedSecondaryDerivatives(int)	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
8999= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:AbstractStepInterpolator()	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9000= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:getGlobalPreviousTime()	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9001= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:evaluateCompleteInterpolatedState()	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9002= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:allocateInterpolatedArrays(int)	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9003= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:getInterpolatedTime()	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9004= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:writeBaseExternal(ObjectOutput)	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9005= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:writeExternal(ObjectOutput)	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9006= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:reinitialize(double[], boolean, EquationsMapper, EquationsMapper[])	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9007= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:computeInterpolatedStateAndDerivatives(double, double)	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9008= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:setInterpolatedTime(double)	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9009= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:setSoftPreviousTime(double)	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9010= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:readExternal(ObjectInput)	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9011= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:AbstractStepInterpolator(AbstractStepInterpolator)	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9012= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:getCurrentTime()	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9013= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:getPreviousTime()	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9014= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:finalizeStep()	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9015= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:setSoftCurrentTime(double)	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9016= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:getInterpolatedState()	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9017= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:getInterpolatedSecondaryState(int)	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9018= org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:AbstractStepInterpolator(double[], boolean, EquationsMapper, EquationsMapper[])	/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
9019= org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D.NoSubSpaceException:NoSubSpaceException()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Euclidean1D.java
9020= org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D:Euclidean1D()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Euclidean1D.java
9021= org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D:getDimension()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Euclidean1D.java
9022= org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D:getSubSpace()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Euclidean1D.java
9023= org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D:getInstance()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Euclidean1D.java
9024= org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D:readResolve()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Euclidean1D.java
9025= org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D:NoSubSpaceException()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Euclidean1D.java
9026= org.apache.commons.math3.stat.inference.OneWayAnova:OneWayAnova()	/src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java
9027= org.apache.commons.math3.stat.inference.OneWayAnova:anovaPValue(Collection<double[]>)	/src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java
9028= org.apache.commons.math3.stat.inference.OneWayAnova:anovaFValue(Collection<double[]>)	/src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java
9029= org.apache.commons.math3.stat.inference.OneWayAnova:anovaStats(Collection<SummaryStatistics>, boolean)	/src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java
9030= org.apache.commons.math3.stat.inference.OneWayAnova:AnovaStats(int, int, double)	/src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java
9031= org.apache.commons.math3.stat.inference.OneWayAnova:anovaTest(Collection<double[]>, double)	/src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java
9032= org.apache.commons.math3.stat.inference.OneWayAnova.AnovaStats:AnovaStats(int, int, double)	/src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java
9033= org.apache.commons.math3.stat.inference.OneWayAnova:anovaPValue(Collection<SummaryStatistics>, boolean)	/src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java
9034= org.apache.commons.math3.stat.inference.OneWayAnova:anovaStats(Collection<double[]>)	/src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java
9035= org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java
9036= org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction:getPolynomials()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java
9037= org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction:getKnots()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java
9038= org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction:isValidPoint(double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java
9039= org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction:PolynomialSplineFunction(double, PolynomialFunction)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java
9040= org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction:derivative()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java
9041= org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction:polynomialSplineDerivative()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java
9042= org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction:value(double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java
9043= org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction:getN()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java
9044= org.apache.commons.math3.optim.SimpleValueCheckerTest:testIterationCheck()	/src/test/java/org/apache/commons/math3/optim/SimpleValueCheckerTest.java
9045= org.apache.commons.math3.optim.SimpleValueCheckerTest:testIterationCheckPrecondition()	/src/test/java/org/apache/commons/math3/optim/SimpleValueCheckerTest.java
9046= org.apache.commons.math3.optim.SimpleValueCheckerTest:testIterationCheckDisabled()	/src/test/java/org/apache/commons/math3/optim/SimpleValueCheckerTest.java
9047= org.apache.commons.math3.optimization.Weight:Weight(double[])	/src/main/java/org/apache/commons/math3/optimization/Weight.java
9048= org.apache.commons.math3.optimization.Weight:Weight(RealMatrix)	/src/main/java/org/apache/commons/math3/optimization/Weight.java
9049= org.apache.commons.math3.optimization.Weight:getWeight()	/src/main/java/org/apache/commons/math3/optimization/Weight.java
9050= org.apache.commons.math3.distribution.EnumeratedDistribution:sample(int)	/src/main/java/org/apache/commons/math3/distribution/EnumeratedDistribution.java
9051= org.apache.commons.math3.distribution.EnumeratedDistribution:getPmf()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedDistribution.java
9052= org.apache.commons.math3.distribution.EnumeratedDistribution:EnumeratedDistribution(List<Pair<T,Double>>)	/src/main/java/org/apache/commons/math3/distribution/EnumeratedDistribution.java
9053= org.apache.commons.math3.distribution.EnumeratedDistribution:sample()	/src/main/java/org/apache/commons/math3/distribution/EnumeratedDistribution.java
9054= org.apache.commons.math3.distribution.EnumeratedDistribution:reseedRandomGenerator(long)	/src/main/java/org/apache/commons/math3/distribution/EnumeratedDistribution.java
9055= org.apache.commons.math3.distribution.EnumeratedDistribution:probability(T)	/src/main/java/org/apache/commons/math3/distribution/EnumeratedDistribution.java
9056= org.apache.commons.math3.distribution.EnumeratedDistribution:sample(int, T[])	/src/main/java/org/apache/commons/math3/distribution/EnumeratedDistribution.java
9057= org.apache.commons.math3.distribution.EnumeratedDistribution:EnumeratedDistribution(RandomGenerator, List<Pair<T,Double>>)	/src/main/java/org/apache/commons/math3/distribution/EnumeratedDistribution.java
9058= org.apache.commons.math3.geometry.euclidean.twod.Line:setOriginOffset(double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9059= org.apache.commons.math3.geometry.euclidean.twod.Line:wholeHyperplane()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9060= org.apache.commons.math3.geometry.euclidean.twod.Line:copySelf()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9061= org.apache.commons.math3.geometry.euclidean.twod.Line:getOffset(Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9062= org.apache.commons.math3.geometry.euclidean.twod.Line:getOffset(Point<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9063= org.apache.commons.math3.geometry.euclidean.twod.Line.LineTransform:apply(Point<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9064= org.apache.commons.math3.geometry.euclidean.twod.Line:wholeSpace()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9065= org.apache.commons.math3.geometry.euclidean.twod.Line:contains(Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9066= org.apache.commons.math3.geometry.euclidean.twod.Line:getPointAt(Vector1D, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9067= org.apache.commons.math3.geometry.euclidean.twod.Line:toSubSpace(Point<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9068= org.apache.commons.math3.geometry.euclidean.twod.Line:Line(Vector2D, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9069= org.apache.commons.math3.geometry.euclidean.twod.Line:getReverse()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9070= org.apache.commons.math3.geometry.euclidean.twod.Line:toSpace(Vector<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9071= org.apache.commons.math3.geometry.euclidean.twod.Line:sameOrientationAs(Hyperplane<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9072= org.apache.commons.math3.geometry.euclidean.twod.Line:revertSelf()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9073= org.apache.commons.math3.geometry.euclidean.twod.Line:setAngle(double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9074= org.apache.commons.math3.geometry.euclidean.twod.Line:getTransform(AffineTransform)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9075= org.apache.commons.math3.geometry.euclidean.twod.Line.LineTransform:apply(SubHyperplane<Euclidean1D>, Hyperplane<Euclidean2D>, Hyperplane<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9076= org.apache.commons.math3.geometry.euclidean.twod.Line:Line(double, double, double, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9077= org.apache.commons.math3.geometry.euclidean.twod.Line:isParallelTo(Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9078= org.apache.commons.math3.geometry.euclidean.twod.Line:reset(Vector2D, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9079= org.apache.commons.math3.geometry.euclidean.twod.Line:getTolerance()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9080= org.apache.commons.math3.geometry.euclidean.twod.Line:Line(Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9081= org.apache.commons.math3.geometry.euclidean.twod.Line:apply(SubHyperplane<Euclidean1D>, Hyperplane<Euclidean2D>, Hyperplane<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9082= org.apache.commons.math3.geometry.euclidean.twod.Line:Line(Vector2D, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9083= org.apache.commons.math3.geometry.euclidean.twod.Line:toSubSpace(Vector<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9084= org.apache.commons.math3.geometry.euclidean.twod.Line:intersection(Line)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9085= org.apache.commons.math3.geometry.euclidean.twod.Line:project(Point<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9086= org.apache.commons.math3.geometry.euclidean.twod.Line:apply(Point<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9087= org.apache.commons.math3.geometry.euclidean.twod.Line:translateToPoint(Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9088= org.apache.commons.math3.geometry.euclidean.twod.Line:apply(Hyperplane<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9089= org.apache.commons.math3.geometry.euclidean.twod.Line.LineTransform:LineTransform(AffineTransform)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9090= org.apache.commons.math3.geometry.euclidean.twod.Line:reset(Vector2D, Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9091= org.apache.commons.math3.geometry.euclidean.twod.Line:LineTransform(AffineTransform)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9092= org.apache.commons.math3.geometry.euclidean.twod.Line:toSpace(Point<Euclidean1D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9093= org.apache.commons.math3.geometry.euclidean.twod.Line.LineTransform:apply(Hyperplane<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9094= org.apache.commons.math3.geometry.euclidean.twod.Line:getOffset(Vector<Euclidean2D>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9095= org.apache.commons.math3.geometry.euclidean.twod.Line:Line(Vector2D, Vector2D, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9096= org.apache.commons.math3.geometry.euclidean.twod.Line:getAngle()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9097= org.apache.commons.math3.geometry.euclidean.twod.Line:distance(Vector2D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9098= org.apache.commons.math3.geometry.euclidean.twod.Line:getOriginOffset()	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9099= org.apache.commons.math3.geometry.euclidean.twod.Line:Line(Vector2D, double, double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
9100= org.apache.commons.math3.analysis.function.Minus:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Minus.java
9101= org.apache.commons.math3.analysis.function.Minus:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Minus.java
9102= org.apache.commons.math3.analysis.function.Minus:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Minus.java
9103= org.apache.commons.math3.linear.AbstractFieldMatrix:getRowVector(int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9104= org.apache.commons.math3.linear.AbstractFieldMatrix:setEntry(int, int, T)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9105= org.apache.commons.math3.linear.AbstractFieldMatrix:subtract(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9106= org.apache.commons.math3.linear.AbstractFieldMatrix:start(int, int, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9107= org.apache.commons.math3.linear.AbstractFieldMatrix:walkInRowOrder(FieldMatrixChangingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9108= org.apache.commons.math3.linear.AbstractFieldMatrix:add(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9109= org.apache.commons.math3.linear.AbstractFieldMatrix:createMatrix(int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9110= org.apache.commons.math3.linear.AbstractFieldMatrix:getColumnMatrix(int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9111= org.apache.commons.math3.linear.AbstractFieldMatrix:toString()	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9112= org.apache.commons.math3.linear.AbstractFieldMatrix:checkSubtractionCompatible(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9113= org.apache.commons.math3.linear.AbstractFieldMatrix:buildArray(Field<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9114= org.apache.commons.math3.linear.AbstractFieldMatrix:getTrace()	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9115= org.apache.commons.math3.linear.AbstractFieldMatrix:extractField(T[])	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9116= org.apache.commons.math3.linear.AbstractFieldMatrix:getRowDimension()	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9117= org.apache.commons.math3.linear.AbstractFieldMatrix:checkRowIndex(int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9118= org.apache.commons.math3.linear.AbstractFieldMatrix:checkMultiplicationCompatible(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9119= org.apache.commons.math3.linear.AbstractFieldMatrix:copySubMatrix(int[], int[], T[][])	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9120= org.apache.commons.math3.linear.AbstractFieldMatrix:setRowMatrix(int, FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9121= org.apache.commons.math3.linear.AbstractFieldMatrix:setColumnVector(int, FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9122= org.apache.commons.math3.linear.AbstractFieldMatrix:walkInOptimizedOrder(FieldMatrixChangingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9123= org.apache.commons.math3.linear.AbstractFieldMatrix:scalarAdd(T)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9124= org.apache.commons.math3.linear.AbstractFieldMatrix:isSquare()	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9125= org.apache.commons.math3.linear.AbstractFieldMatrix:scalarMultiply(T)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9126= org.apache.commons.math3.linear.AbstractFieldMatrix:checkAdditionCompatible(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9127= org.apache.commons.math3.linear.AbstractFieldMatrix:getRow(int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9128= org.apache.commons.math3.linear.AbstractFieldMatrix:AbstractFieldMatrix(Field<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9129= org.apache.commons.math3.linear.AbstractFieldMatrix:setSubMatrix(T[][], int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9130= org.apache.commons.math3.linear.AbstractFieldMatrix:walkInOptimizedOrder(FieldMatrixPreservingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9131= org.apache.commons.math3.linear.AbstractFieldMatrix:getSubMatrix(int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9132= org.apache.commons.math3.linear.AbstractFieldMatrix:buildArray(Field<T>, int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9133= org.apache.commons.math3.linear.AbstractFieldMatrix:addToEntry(int, int, T)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9134= org.apache.commons.math3.linear.AbstractFieldMatrix:setRow(int, T[])	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9135= org.apache.commons.math3.linear.AbstractFieldMatrix:preMultiply(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9136= org.apache.commons.math3.linear.AbstractFieldMatrix:getField()	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9137= org.apache.commons.math3.linear.AbstractFieldMatrix:multiplyEntry(int, int, T)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9138= org.apache.commons.math3.linear.AbstractFieldMatrix:checkSubMatrixIndex(int[], int[])	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9139= org.apache.commons.math3.linear.AbstractFieldMatrix:equals(Object)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9140= org.apache.commons.math3.linear.AbstractFieldMatrix:preMultiply(T[])	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9141= org.apache.commons.math3.linear.AbstractFieldMatrix:checkColumnIndex(int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9142= org.apache.commons.math3.linear.AbstractFieldMatrix:extractField(T[][])	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9143= org.apache.commons.math3.linear.AbstractFieldMatrix:copy()	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9144= org.apache.commons.math3.linear.AbstractFieldMatrix:getRowMatrix(int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9145= org.apache.commons.math3.linear.AbstractFieldMatrix:operate(T[])	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9146= org.apache.commons.math3.linear.AbstractFieldMatrix:walkInRowOrder(FieldMatrixChangingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9147= org.apache.commons.math3.linear.AbstractFieldMatrix:AbstractFieldMatrix()	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9148= org.apache.commons.math3.linear.AbstractFieldMatrix:getData()	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9149= org.apache.commons.math3.linear.AbstractFieldMatrix:getColumnDimension()	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9150= org.apache.commons.math3.linear.AbstractFieldMatrix:hashCode()	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9151= org.apache.commons.math3.linear.AbstractFieldMatrix:setColumn(int, T[])	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9152= org.apache.commons.math3.linear.AbstractFieldMatrix:setColumnMatrix(int, FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9153= org.apache.commons.math3.linear.AbstractFieldMatrix:walkInRowOrder(FieldMatrixPreservingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9154= org.apache.commons.math3.linear.AbstractFieldMatrix:multiply(FieldMatrix<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9155= org.apache.commons.math3.linear.AbstractFieldMatrix:transpose()	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9156= org.apache.commons.math3.linear.AbstractFieldMatrix:walkInColumnOrder(FieldMatrixPreservingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9157= org.apache.commons.math3.linear.AbstractFieldMatrix:walkInOptimizedOrder(FieldMatrixPreservingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9158= org.apache.commons.math3.linear.AbstractFieldMatrix:checkSubMatrixIndex(int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9159= org.apache.commons.math3.linear.AbstractFieldMatrix:setRowVector(int, FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9160= org.apache.commons.math3.linear.AbstractFieldMatrix:getColumnVector(int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9161= org.apache.commons.math3.linear.AbstractFieldMatrix:walkInRowOrder(FieldMatrixPreservingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9162= org.apache.commons.math3.linear.AbstractFieldMatrix:walkInColumnOrder(FieldMatrixChangingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9163= org.apache.commons.math3.linear.AbstractFieldMatrix:walkInColumnOrder(FieldMatrixPreservingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9164= org.apache.commons.math3.linear.AbstractFieldMatrix:getColumn(int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9165= org.apache.commons.math3.linear.AbstractFieldMatrix:walkInColumnOrder(FieldMatrixChangingVisitor<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9166= org.apache.commons.math3.linear.AbstractFieldMatrix:getEntry(int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9167= org.apache.commons.math3.linear.AbstractFieldMatrix:preMultiply(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9168= org.apache.commons.math3.linear.AbstractFieldMatrix:AbstractFieldMatrix(Field<T>, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9169= org.apache.commons.math3.linear.AbstractFieldMatrix:walkInOptimizedOrder(FieldMatrixChangingVisitor<T>, int, int, int, int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9170= org.apache.commons.math3.linear.AbstractFieldMatrix:operate(FieldVector<T>)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9171= org.apache.commons.math3.linear.AbstractFieldMatrix:power(int)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9172= org.apache.commons.math3.linear.AbstractFieldMatrix:visit(int, int, T)	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9173= org.apache.commons.math3.linear.AbstractFieldMatrix:getSubMatrix(int[], int[])	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9174= org.apache.commons.math3.linear.AbstractFieldMatrix:copySubMatrix(int, int, int, int, T[][])	/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
9175= org.apache.commons.math3.analysis.integration.SimpsonIntegrator:SimpsonIntegrator(int, int)	/src/main/java/org/apache/commons/math3/analysis/integration/SimpsonIntegrator.java
9176= org.apache.commons.math3.analysis.integration.SimpsonIntegrator:SimpsonIntegrator(double, double, int, int)	/src/main/java/org/apache/commons/math3/analysis/integration/SimpsonIntegrator.java
9177= org.apache.commons.math3.analysis.integration.SimpsonIntegrator:doIntegrate()	/src/main/java/org/apache/commons/math3/analysis/integration/SimpsonIntegrator.java
9178= org.apache.commons.math3.analysis.integration.SimpsonIntegrator:SimpsonIntegrator()	/src/main/java/org/apache/commons/math3/analysis/integration/SimpsonIntegrator.java
9179= org.apache.commons.math3.exception.util.ExceptionContextProvider:getContext()	/src/main/java/org/apache/commons/math3/exception/util/ExceptionContextProvider.java
9180= org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest:testMoreEstimatedParametersSimple()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizerTest.java
9181= org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest:createOptimizer()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizerTest.java
9182= org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest:testHahn1()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizerTest.java
9183= org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest:testMoreEstimatedParametersUnsorted()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizerTest.java
9184= org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest:testMaxEvaluations()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizerTest.java
9185= org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest:testCircleFittingBadInit()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizerTest.java
9186= org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest:testConstraintsUnsupported()	/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizerTest.java
9187= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver:BracketingNthOrderBrentSolver()	/src/main/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver.java
9188= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver:BracketingNthOrderBrentSolver(double, int)	/src/main/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver.java
9189= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver:solve(int, UnivariateFunction, double, double, double, AllowedSolution)	/src/main/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver.java
9190= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver:solve(int, UnivariateFunction, double, double, AllowedSolution)	/src/main/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver.java
9191= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver:BracketingNthOrderBrentSolver(double, double, double, int)	/src/main/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver.java
9192= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver:guessX(double, double[], double[], int, int)	/src/main/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver.java
9193= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver:BracketingNthOrderBrentSolver(double, double, int)	/src/main/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver.java
9194= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver:getMaximalOrder()	/src/main/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver.java
9195= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver:doSolve()	/src/main/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver.java
9196= org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest:testSpecialValues()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMeanTest.java
9197= org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMeanTest.java
9198= org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMeanTest.java
9199= org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunction:ExponentialDecayFunction(double, double, long)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/util/ExponentialDecayFunction.java
9200= org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunction:value(long)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/util/ExponentialDecayFunction.java
9201= org.apache.commons.math3.ode.SecondOrderIntegrator:integrate(SecondOrderDifferentialEquations, double, double[], double[], double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/SecondOrderIntegrator.java
9202= org.apache.commons.math3.fraction.BigFractionField:BigFractionField()	/src/main/java/org/apache/commons/math3/fraction/BigFractionField.java
9203= org.apache.commons.math3.fraction.BigFractionField:getOne()	/src/main/java/org/apache/commons/math3/fraction/BigFractionField.java
9204= org.apache.commons.math3.fraction.BigFractionField:getRuntimeClass()	/src/main/java/org/apache/commons/math3/fraction/BigFractionField.java
9205= org.apache.commons.math3.fraction.BigFractionField:readResolve()	/src/main/java/org/apache/commons/math3/fraction/BigFractionField.java
9206= org.apache.commons.math3.fraction.BigFractionField:getInstance()	/src/main/java/org/apache/commons/math3/fraction/BigFractionField.java
9207= org.apache.commons.math3.fraction.BigFractionField:getZero()	/src/main/java/org/apache/commons/math3/fraction/BigFractionField.java
9208= org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest:createVector()	/src/test/java/org/apache/commons/math3/linear/UnmodifiableOpenMapRealVectorTest.java
9209= org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest:createMultivariateSummaryStatistics(int, boolean)	/src/test/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatisticsTest.java
9210= org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:doCopy()	/src/main/java/org/apache/commons/math3/ode/nonstiff/GillStepInterpolator.java
9211= org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:computeInterpolatedStateAndDerivatives(double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GillStepInterpolator.java
9212= org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:GillStepInterpolator()	/src/main/java/org/apache/commons/math3/ode/nonstiff/GillStepInterpolator.java
9213= org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:GillStepInterpolator(GillStepInterpolator)	/src/main/java/org/apache/commons/math3/ode/nonstiff/GillStepInterpolator.java
9214= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testModelWithNoArtificialVars()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9215= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testMath290GEQ()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9216= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testMath434PivotRowSelection2()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9217= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testRestrictVariablesToNonNegative()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9218= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testMath828()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9219= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testTrivialModel()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9220= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testMath713NegativeVariable()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9221= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testEpsilon()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9222= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testDegeneracy()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9223= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testMath828Cycle()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9224= org.apache.commons.math3.optimization.linear.SimplexSolverTest:validSolution(PointValuePair, List<LinearConstraint>, double)	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9225= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testUnboundedSolution()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9226= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testMath434UnfeasibleSolution()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9227= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testMath434NegativeVariable()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9228= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testMinimization()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9229= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testMath288()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9230= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testMath293()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9231= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testMath286()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9232= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testSolutionWithNegativeDecisionVariable()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9233= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testInfeasibleSolution()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9234= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testMath434PivotRowSelection()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9235= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testMath272()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9236= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testSingleVariableAndConstraint()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9237= org.apache.commons.math3.optimization.linear.SimplexSolverTest:equationFromString(int, String)	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9238= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testMath781()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9239= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testMath290LEQ()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9240= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testSimplexSolver()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9241= org.apache.commons.math3.optimization.linear.SimplexSolverTest:testLargeModel()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java
9242= org.apache.commons.math3.genetics.RandomKeyTest:compare(String, String)	/src/test/java/org/apache/commons/math3/genetics/RandomKeyTest.java
9243= org.apache.commons.math3.genetics.RandomKeyTest:testConstructor2()	/src/test/java/org/apache/commons/math3/genetics/RandomKeyTest.java
9244= org.apache.commons.math3.genetics.RandomKeyTest:testInvalidRepresentation()	/src/test/java/org/apache/commons/math3/genetics/RandomKeyTest.java
9245= org.apache.commons.math3.genetics.RandomKeyTest:testIdentityPermutation()	/src/test/java/org/apache/commons/math3/genetics/RandomKeyTest.java
9246= org.apache.commons.math3.genetics.RandomKeyTest:testComparatorPermutation()	/src/test/java/org/apache/commons/math3/genetics/RandomKeyTest.java
9247= org.apache.commons.math3.genetics.RandomKeyTest:testConstructor1()	/src/test/java/org/apache/commons/math3/genetics/RandomKeyTest.java
9248= org.apache.commons.math3.genetics.RandomKeyTest:testInducedPermutation()	/src/test/java/org/apache/commons/math3/genetics/RandomKeyTest.java
9249= org.apache.commons.math3.genetics.RandomKeyTest:testEqualRepr()	/src/test/java/org/apache/commons/math3/genetics/RandomKeyTest.java
9250= org.apache.commons.math3.genetics.RandomKeyTest:testRandomPermutation()	/src/test/java/org/apache/commons/math3/genetics/RandomKeyTest.java
9251= org.apache.commons.math3.genetics.RandomKeyTest:testDecode()	/src/test/java/org/apache/commons/math3/genetics/RandomKeyTest.java
9252= org.apache.commons.math3.genetics.RandomKeyTest:testIsSame()	/src/test/java/org/apache/commons/math3/genetics/RandomKeyTest.java
9253= org.apache.commons.math3.random.SynchronizedRandomGeneratorTest:doTestMath899(boolean, int, int, int)	/src/test/java/org/apache/commons/math3/random/SynchronizedRandomGeneratorTest.java
9254= org.apache.commons.math3.random.SynchronizedRandomGeneratorTest:testAdapter()	/src/test/java/org/apache/commons/math3/random/SynchronizedRandomGeneratorTest.java
9255= org.apache.commons.math3.random.SynchronizedRandomGeneratorTest:testMath899Sync()	/src/test/java/org/apache/commons/math3/random/SynchronizedRandomGeneratorTest.java
9256= org.apache.commons.math3.random.SynchronizedRandomGeneratorTest:call()	/src/test/java/org/apache/commons/math3/random/SynchronizedRandomGeneratorTest.java
9257= org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest:testWilcoxonSignedRankInputValidation()	/src/test/java/org/apache/commons/math3/stat/inference/WilcoxonSignedRankTestTest.java
9258= org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest:testWilcoxonSignedRankSimple()	/src/test/java/org/apache/commons/math3/stat/inference/WilcoxonSignedRankTestTest.java
9259= org.apache.commons.math3.geometry.euclidean.threed.SphereGeneratorTest:testSupport3Points()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SphereGeneratorTest.java
9260= org.apache.commons.math3.geometry.euclidean.threed.SphereGeneratorTest:testSupport4Points()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SphereGeneratorTest.java
9261= org.apache.commons.math3.geometry.euclidean.threed.SphereGeneratorTest:testSupport2Points()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SphereGeneratorTest.java
9262= org.apache.commons.math3.geometry.euclidean.threed.SphereGeneratorTest:testRandom()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SphereGeneratorTest.java
9263= org.apache.commons.math3.geometry.euclidean.threed.SphereGeneratorTest:testSupport0Point()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SphereGeneratorTest.java
9264= org.apache.commons.math3.geometry.euclidean.threed.SphereGeneratorTest:testSupport1Point()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SphereGeneratorTest.java
9265= org.apache.commons.math3.geometry.euclidean.threed.SphereGeneratorTest:testDegeneratedCase()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SphereGeneratorTest.java
9266= org.apache.commons.math3.linear.SparseFieldMatrixTest:testGetEntry()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9267= org.apache.commons.math3.linear.SparseFieldMatrixTest:testAddFail()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9268= org.apache.commons.math3.linear.SparseFieldMatrixTest:testPremultiply()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9269= org.apache.commons.math3.linear.SparseFieldMatrixTest:testTrace()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9270= org.apache.commons.math3.linear.SparseFieldMatrixTest:testGetRowMatrix()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9271= org.apache.commons.math3.linear.SparseFieldMatrixTest:testSetSubMatrix()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9272= org.apache.commons.math3.linear.SparseFieldMatrixTest:createSparseMatrix(Fraction[][])	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9273= org.apache.commons.math3.linear.SparseFieldMatrixTest:testMultiply()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9274= org.apache.commons.math3.linear.SparseFieldMatrixTest:testDimensions()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9275= org.apache.commons.math3.linear.SparseFieldMatrixTest:testGetColumnVector()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9276= org.apache.commons.math3.linear.SparseFieldMatrixTest:testCopyFunctions()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9277= org.apache.commons.math3.linear.SparseFieldMatrixTest:columnToVector(Fraction[][])	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9278= org.apache.commons.math3.linear.SparseFieldMatrixTest:testGetVectors()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9279= org.apache.commons.math3.linear.SparseFieldMatrixTest:testSubMatrix()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9280= org.apache.commons.math3.linear.SparseFieldMatrixTest:testOperate()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9281= org.apache.commons.math3.linear.SparseFieldMatrixTest:SparseFieldMatrixTest()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9282= org.apache.commons.math3.linear.SparseFieldMatrixTest:testAdd()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9283= org.apache.commons.math3.linear.SparseFieldMatrixTest:assertClose(String, FieldMatrix<Fraction>, FieldMatrix<Fraction>, double)	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9284= org.apache.commons.math3.linear.SparseFieldMatrixTest:testPremultiplyVector()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9285= org.apache.commons.math3.linear.SparseFieldMatrixTest:testExamples()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9286= org.apache.commons.math3.linear.SparseFieldMatrixTest:testMultiply2()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9287= org.apache.commons.math3.linear.SparseFieldMatrixTest:testMath209()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9288= org.apache.commons.math3.linear.SparseFieldMatrixTest:testGetColumnMatrix()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9289= org.apache.commons.math3.linear.SparseFieldMatrixTest:testGetRowVector()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9290= org.apache.commons.math3.linear.SparseFieldMatrixTest:testScalarAdd()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9291= org.apache.commons.math3.linear.SparseFieldMatrixTest:testEqualsAndHashCode()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9292= org.apache.commons.math3.linear.SparseFieldMatrixTest:testTranspose()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9293= org.apache.commons.math3.linear.SparseFieldMatrixTest:assertClose(String, Fraction[], Fraction[], double)	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9294= org.apache.commons.math3.linear.SparseFieldMatrixTest:testPlusMinus()	/src/test/java/org/apache/commons/math3/linear/SparseFieldMatrixTest.java
9295= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:getResult()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9296= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:evaluate(double[], double, int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9297= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:StandardDeviation(StandardDeviation)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9298= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:evaluate(double[])	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9299= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:increment(double)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9300= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:getN()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9301= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:StandardDeviation()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9302= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:StandardDeviation(SecondMoment)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9303= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:setBiasCorrected(boolean)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9304= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:clear()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9305= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:isBiasCorrected()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9306= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:evaluate(double[], int, int)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9307= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:copy(StandardDeviation, StandardDeviation)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9308= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:StandardDeviation(boolean, SecondMoment)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9309= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:StandardDeviation(boolean)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9310= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:evaluate(double[], double)	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9311= org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:copy()	/src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java
9312= org.apache.commons.math3.genetics.AbstractListChromosome:getRepresentation()	/src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java
9313= org.apache.commons.math3.genetics.AbstractListChromosome:AbstractListChromosome(T[])	/src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java
9314= org.apache.commons.math3.genetics.AbstractListChromosome:AbstractListChromosome(List<T>, boolean)	/src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java
9315= org.apache.commons.math3.genetics.AbstractListChromosome:checkValidity(List<T>)	/src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java
9316= org.apache.commons.math3.genetics.AbstractListChromosome:newFixedLengthChromosome(List<T>)	/src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java
9317= org.apache.commons.math3.genetics.AbstractListChromosome:toString()	/src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java
9318= org.apache.commons.math3.genetics.AbstractListChromosome:AbstractListChromosome(List<T>)	/src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java
9319= org.apache.commons.math3.genetics.AbstractListChromosome:getLength()	/src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java
9320= org.apache.commons.math3.stat.descriptive.ListUnivariateImpl:clear()	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImpl.java
9321= org.apache.commons.math3.stat.descriptive.ListUnivariateImpl:ListUnivariateImpl(List<Object>)	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImpl.java
9322= org.apache.commons.math3.stat.descriptive.ListUnivariateImpl:addObject(Object)	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImpl.java
9323= org.apache.commons.math3.stat.descriptive.ListUnivariateImpl:getValues()	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImpl.java
9324= org.apache.commons.math3.stat.descriptive.ListUnivariateImpl:setWindowSize(int)	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImpl.java
9325= org.apache.commons.math3.stat.descriptive.ListUnivariateImpl:getN()	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImpl.java
9326= org.apache.commons.math3.stat.descriptive.ListUnivariateImpl:apply(UnivariateStatistic)	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImpl.java
9327= org.apache.commons.math3.stat.descriptive.ListUnivariateImpl:ListUnivariateImpl()	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImpl.java
9328= org.apache.commons.math3.stat.descriptive.ListUnivariateImpl:getElement(int)	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImpl.java
9329= org.apache.commons.math3.stat.descriptive.ListUnivariateImpl:getTransformer()	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImpl.java
9330= org.apache.commons.math3.stat.descriptive.ListUnivariateImpl:addValue(double)	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImpl.java
9331= org.apache.commons.math3.stat.descriptive.ListUnivariateImpl:ListUnivariateImpl(List<Object>, NumberTransformer)	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImpl.java
9332= org.apache.commons.math3.stat.descriptive.ListUnivariateImpl:setTransformer(NumberTransformer)	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImpl.java
9333= org.apache.commons.math3.exception.OutOfRangeExceptionTest:testAccessors()	/src/test/java/org/apache/commons/math3/exception/OutOfRangeExceptionTest.java
9334= org.apache.commons.math3.optim.AbstractOptimizationProblem:getIterationCounter()	/src/main/java/org/apache/commons/math3/optim/AbstractOptimizationProblem.java
9335= org.apache.commons.math3.optim.AbstractOptimizationProblem.MaxIterCallback:trigger(int)	/src/main/java/org/apache/commons/math3/optim/AbstractOptimizationProblem.java
9336= org.apache.commons.math3.optim.AbstractOptimizationProblem:getConvergenceChecker()	/src/main/java/org/apache/commons/math3/optim/AbstractOptimizationProblem.java
9337= org.apache.commons.math3.optim.AbstractOptimizationProblem:AbstractOptimizationProblem(int, int, ConvergenceChecker<PAIR>)	/src/main/java/org/apache/commons/math3/optim/AbstractOptimizationProblem.java
9338= org.apache.commons.math3.optim.AbstractOptimizationProblem:trigger(int)	/src/main/java/org/apache/commons/math3/optim/AbstractOptimizationProblem.java
9339= org.apache.commons.math3.optim.AbstractOptimizationProblem:getEvaluationCounter()	/src/main/java/org/apache/commons/math3/optim/AbstractOptimizationProblem.java
9340= org.apache.commons.math3.optim.AbstractOptimizationProblem.MaxEvalCallback:trigger(int)	/src/main/java/org/apache/commons/math3/optim/AbstractOptimizationProblem.java
9341= org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:checkParameters()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java
9342= org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:getTargetSize()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java
9343= org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:MultivariateVectorOptimizer(ConvergenceChecker<PointVectorValuePair>)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java
9344= org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:getTarget()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java
9345= org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:optimize(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java
9346= org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:getWeight()	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java
9347= org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:parseOptimizationData(OptimizationData)	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java
9348= org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:computeObjectiveValue(double[])	/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java
9349= org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizer:MultivariateDifferentiableMultiStartOptimizer(MultivariateDifferentiableOptimizer, int, RandomVectorGenerator)	/src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableMultiStartOptimizer.java
9350= org.apache.commons.math3.analysis.function.Identity:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Identity.java
9351= org.apache.commons.math3.analysis.function.Identity:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Identity.java
9352= org.apache.commons.math3.analysis.function.Identity:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Identity.java
9353= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest:testSmallDistances()	/src/test/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClustererTest.java
9354= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest:setUp()	/src/test/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClustererTest.java
9355= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest:testPerformClusterAnalysisToManyClusters()	/src/test/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClustererTest.java
9356= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest:testPerformClusterAnalysisDegenerate()	/src/test/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClustererTest.java
9357= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest:testCertainSpace()	/src/test/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClustererTest.java
9358= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest:compute(double[], double[])	/src/test/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClustererTest.java
9359= org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest.CloseDistance:compute(double[], double[])	/src/test/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClustererTest.java
9360= org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:getStartValue()	/src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java
9361= org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:computeObjectiveValue(double)	/src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java
9362= org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:BaseAbstractUnivariateOptimizer(ConvergenceChecker<UnivariatePointValuePair>)	/src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java
9363= org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:getMaxEvaluations()	/src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java
9364= org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:getConvergenceChecker()	/src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java
9365= org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:getMax()	/src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java
9366= org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:getMin()	/src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java
9367= org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:getGoalType()	/src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java
9368= org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:optimize(int, UnivariateFunction, GoalType, double, double)	/src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java
9369= org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:doOptimize()	/src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java
9370= org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:getEvaluations()	/src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java
9371= org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:optimize(int, UnivariateFunction, GoalType, double, double, double)	/src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java
9372= org.apache.commons.math3.distribution.FDistributionTest:testPreconditions()	/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
9373= org.apache.commons.math3.distribution.FDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
9374= org.apache.commons.math3.distribution.FDistributionTest:testInverseCumulativeProbabilityExtremes()	/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
9375= org.apache.commons.math3.distribution.FDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
9376= org.apache.commons.math3.distribution.FDistributionTest:setUp()	/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
9377= org.apache.commons.math3.distribution.FDistributionTest:testCumulativeProbabilityExtremes()	/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
9378= org.apache.commons.math3.distribution.FDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
9379= org.apache.commons.math3.distribution.FDistributionTest:testDfAccessors()	/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
9380= org.apache.commons.math3.distribution.FDistributionTest:testSmallDegreesOfFreedom()	/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
9381= org.apache.commons.math3.distribution.FDistributionTest:testMath785()	/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
9382= org.apache.commons.math3.distribution.FDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
9383= org.apache.commons.math3.distribution.FDistributionTest:testLargeDegreesOfFreedom()	/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
9384= org.apache.commons.math3.distribution.FDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
9385= org.apache.commons.math3.stat.inference.TTest:tTest(double[], double[], double)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9386= org.apache.commons.math3.stat.inference.TTest:homoscedasticT(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9387= org.apache.commons.math3.stat.inference.TTest:t(double, double, double, double)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9388= org.apache.commons.math3.stat.inference.TTest:checkSignificanceLevel(double)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9389= org.apache.commons.math3.stat.inference.TTest:t(double, StatisticalSummary)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9390= org.apache.commons.math3.stat.inference.TTest:checkSampleData(double[])	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9391= org.apache.commons.math3.stat.inference.TTest:pairedTTest(double[], double[], double)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9392= org.apache.commons.math3.stat.inference.TTest:tTest(StatisticalSummary, StatisticalSummary, double)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9393= org.apache.commons.math3.stat.inference.TTest:homoscedasticT(StatisticalSummary, StatisticalSummary)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9394= org.apache.commons.math3.stat.inference.TTest:t(double, double[])	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9395= org.apache.commons.math3.stat.inference.TTest:homoscedasticTTest(double, double, double, double, double, double)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9396= org.apache.commons.math3.stat.inference.TTest:tTest(double, StatisticalSummary, double)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9397= org.apache.commons.math3.stat.inference.TTest:tTest(double, double[], double)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9398= org.apache.commons.math3.stat.inference.TTest:tTest(double, double[])	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9399= org.apache.commons.math3.stat.inference.TTest:pairedTTest(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9400= org.apache.commons.math3.stat.inference.TTest:tTest(double, StatisticalSummary)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9401= org.apache.commons.math3.stat.inference.TTest:t(double, double, double, double, double, double)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9402= org.apache.commons.math3.stat.inference.TTest:homoscedasticT(double, double, double, double, double, double)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9403= org.apache.commons.math3.stat.inference.TTest:checkSampleData(StatisticalSummary)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9404= org.apache.commons.math3.stat.inference.TTest:tTest(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9405= org.apache.commons.math3.stat.inference.TTest:homoscedasticTTest(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9406= org.apache.commons.math3.stat.inference.TTest:tTest(double, double, double, double, double, double)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9407= org.apache.commons.math3.stat.inference.TTest:tTest(double, double, double, double)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9408= org.apache.commons.math3.stat.inference.TTest:homoscedasticTTest(StatisticalSummary, StatisticalSummary)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9409= org.apache.commons.math3.stat.inference.TTest:df(double, double, double, double)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9410= org.apache.commons.math3.stat.inference.TTest:homoscedasticTTest(double[], double[], double)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9411= org.apache.commons.math3.stat.inference.TTest:tTest(StatisticalSummary, StatisticalSummary)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9412= org.apache.commons.math3.stat.inference.TTest:pairedT(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9413= org.apache.commons.math3.stat.inference.TTest:t(double[], double[])	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9414= org.apache.commons.math3.stat.inference.TTest:t(StatisticalSummary, StatisticalSummary)	/src/main/java/org/apache/commons/math3/stat/inference/TTest.java
9415= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm:getInterpolatingValues()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java
9416= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm:PolynomialFunctionLagrangeForm(double, double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java
9417= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm:evaluate(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java
9418= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm:degree()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java
9419= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm:computeCoefficients()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java
9420= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm:verifyInterpolationArray(double, double, boolean)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java
9421= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm:value(double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java
9422= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm:getInterpolatingPoints()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java
9423= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm:getCoefficients()	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java
9424= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm:evaluateInternal(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java
9425= org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizer:MultivariateDifferentiableVectorMultiStartOptimizer(MultivariateDifferentiableVectorOptimizer, int, RandomVectorGenerator)	/src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizer.java
9426= org.apache.commons.math3.ml.distance.EuclideanDistanceTest:testZero()	/src/test/java/org/apache/commons/math3/ml/distance/EuclideanDistanceTest.java
9427= org.apache.commons.math3.ml.distance.EuclideanDistanceTest:test()	/src/test/java/org/apache/commons/math3/ml/distance/EuclideanDistanceTest.java
9428= org.apache.commons.math3.analysis.function.Asin:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Asin.java
9429= org.apache.commons.math3.analysis.function.Asin:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Asin.java
9430= org.apache.commons.math3.analysis.function.Asin:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Asin.java
9431= org.apache.commons.math3.random.RandomDataGeneratorTest:checkNextSecureLongUniform(int, int)	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9432= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextBinomial()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9433= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextSecureIntPositiveRange()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9434= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextIntNegativeRange()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9435= org.apache.commons.math3.random.RandomDataGeneratorTest:checkNextUniformUniform(double, double)	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9436= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextHex()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9437= org.apache.commons.math3.random.RandomDataGeneratorTest:findSample(Object[], Object[])	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9438= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextGamma()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9439= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextF()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9440= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextIntExtremeValues()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9441= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextZipf()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9442= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextUniformUniformMaximalInterval()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9443= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextHypergeometric()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9444= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextSecureLongPositiveRange()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9445= org.apache.commons.math3.random.RandomDataGeneratorTest:testConfig()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9446= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextUniformUniformNegativeToPositiveBounds()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9447= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextSecureLongNegativeRange()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9448= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextSecureLongNegativeToPositiveRange()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9449= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextCauchy()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9450= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextSecureIntIAE()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9451= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextExponential()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9452= org.apache.commons.math3.random.RandomDataGeneratorTest:testReseed()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9453= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextSecureIntNegativeToPositiveRange()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9454= org.apache.commons.math3.random.RandomDataGeneratorTest:checkNextSecureIntUniform(int, int)	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9455= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextIntWideRange()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9456= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextSecureIntNegativeRange()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9457= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextUniformIAE()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9458= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextLongNegativeRange()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9459= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextWeibull()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9460= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextLongNegativeToPositiveRange()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9461= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextInversionDeviate()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9462= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextIntNegativeToPositiveRange()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9463= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextLongExtremeValues()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9464= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextSecureLongIAE()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9465= org.apache.commons.math3.random.RandomDataGeneratorTest:RandomDataGeneratorTest()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9466= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextPoisson()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9467= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextSample()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9468= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextUniformUniformPositiveBounds()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9469= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextChiSquare()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9470= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextPascal()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9471= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextIntPositiveRange()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9472= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextLongIAE()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9473= org.apache.commons.math3.random.RandomDataGeneratorTest:checkNextLongUniform(long, long)	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9474= org.apache.commons.math3.random.RandomDataGeneratorTest:findPerm(int[][], int[])	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9475= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextIntIAE()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9476= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextSecureHex()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9477= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextGaussian()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9478= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextUniformUniformNegaiveBounds()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9479= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextPoissonConsistency()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9480= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextT()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9481= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextLongWideRange()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9482= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextPermutation()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9483= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextLongPositiveRange()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9484= org.apache.commons.math3.random.RandomDataGeneratorTest:checkNextPoissonConsistency(double)	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9485= org.apache.commons.math3.random.RandomDataGeneratorTest:checkNextIntUniform(int, int)	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9486= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextBeta()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9487= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextUniformExtremeValues()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9488= org.apache.commons.math3.random.RandomDataGeneratorTest:testNextUniformExclusiveEndpoints()	/src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java
9489= org.apache.commons.math3.distribution.WeibullDistribution:WeibullDistribution(double, double, double)	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9490= org.apache.commons.math3.distribution.WeibullDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9491= org.apache.commons.math3.distribution.WeibullDistribution:getScale()	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9492= org.apache.commons.math3.distribution.WeibullDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9493= org.apache.commons.math3.distribution.WeibullDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9494= org.apache.commons.math3.distribution.WeibullDistribution:calculateNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9495= org.apache.commons.math3.distribution.WeibullDistribution:WeibullDistribution(double, double)	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9496= org.apache.commons.math3.distribution.WeibullDistribution:WeibullDistribution(RandomGenerator, double, double)	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9497= org.apache.commons.math3.distribution.WeibullDistribution:inverseCumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9498= org.apache.commons.math3.distribution.WeibullDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9499= org.apache.commons.math3.distribution.WeibullDistribution:WeibullDistribution(RandomGenerator, double, double, double)	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9500= org.apache.commons.math3.distribution.WeibullDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9501= org.apache.commons.math3.distribution.WeibullDistribution:getShape()	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9502= org.apache.commons.math3.distribution.WeibullDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9503= org.apache.commons.math3.distribution.WeibullDistribution:logDensity(double)	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9504= org.apache.commons.math3.distribution.WeibullDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9505= org.apache.commons.math3.distribution.WeibullDistribution:calculateNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9506= org.apache.commons.math3.distribution.WeibullDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9507= org.apache.commons.math3.distribution.WeibullDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9508= org.apache.commons.math3.distribution.WeibullDistribution:getSolverAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java
9509= org.apache.commons.math3.ml.clustering.DoublePoint:DoublePoint(double[])	/src/main/java/org/apache/commons/math3/ml/clustering/DoublePoint.java
9510= org.apache.commons.math3.ml.clustering.DoublePoint:getPoint()	/src/main/java/org/apache/commons/math3/ml/clustering/DoublePoint.java
9511= org.apache.commons.math3.ml.clustering.DoublePoint:equals(Object)	/src/main/java/org/apache/commons/math3/ml/clustering/DoublePoint.java
9512= org.apache.commons.math3.ml.clustering.DoublePoint:toString()	/src/main/java/org/apache/commons/math3/ml/clustering/DoublePoint.java
9513= org.apache.commons.math3.ml.clustering.DoublePoint:DoublePoint(int[])	/src/main/java/org/apache/commons/math3/ml/clustering/DoublePoint.java
9514= org.apache.commons.math3.ml.clustering.DoublePoint:hashCode()	/src/main/java/org/apache/commons/math3/ml/clustering/DoublePoint.java
9515= org.apache.commons.math3.random.RandomGenerator:nextInt(int)	/src/main/java/org/apache/commons/math3/random/RandomGenerator.java
9516= org.apache.commons.math3.random.RandomGenerator:nextGaussian()	/src/main/java/org/apache/commons/math3/random/RandomGenerator.java
9517= org.apache.commons.math3.random.RandomGenerator:setSeed(int)	/src/main/java/org/apache/commons/math3/random/RandomGenerator.java
9518= org.apache.commons.math3.random.RandomGenerator:nextInt()	/src/main/java/org/apache/commons/math3/random/RandomGenerator.java
9519= org.apache.commons.math3.random.RandomGenerator:nextBoolean()	/src/main/java/org/apache/commons/math3/random/RandomGenerator.java
9520= org.apache.commons.math3.random.RandomGenerator:setSeed(long)	/src/main/java/org/apache/commons/math3/random/RandomGenerator.java
9521= org.apache.commons.math3.random.RandomGenerator:nextLong()	/src/main/java/org/apache/commons/math3/random/RandomGenerator.java
9522= org.apache.commons.math3.random.RandomGenerator:nextDouble()	/src/main/java/org/apache/commons/math3/random/RandomGenerator.java
9523= org.apache.commons.math3.random.RandomGenerator:nextBytes(byte[])	/src/main/java/org/apache/commons/math3/random/RandomGenerator.java
9524= org.apache.commons.math3.random.RandomGenerator:nextFloat()	/src/main/java/org/apache/commons/math3/random/RandomGenerator.java
9525= org.apache.commons.math3.random.RandomGenerator:setSeed(int[])	/src/main/java/org/apache/commons/math3/random/RandomGenerator.java
9526= org.apache.commons.math3.util.CompositeFormat:parseAndIgnoreWhitespace(String, ParsePosition)	/src/main/java/org/apache/commons/math3/util/CompositeFormat.java
9527= org.apache.commons.math3.util.CompositeFormat:parseNextCharacter(String, ParsePosition)	/src/main/java/org/apache/commons/math3/util/CompositeFormat.java
9528= org.apache.commons.math3.util.CompositeFormat:parseFixedstring(String, String, ParsePosition)	/src/main/java/org/apache/commons/math3/util/CompositeFormat.java
9529= org.apache.commons.math3.util.CompositeFormat:getDefaultNumberFormat()	/src/main/java/org/apache/commons/math3/util/CompositeFormat.java
9530= org.apache.commons.math3.util.CompositeFormat:parseNumber(String, NumberFormat, ParsePosition)	/src/main/java/org/apache/commons/math3/util/CompositeFormat.java
9531= org.apache.commons.math3.util.CompositeFormat:formatDouble(double, NumberFormat, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/util/CompositeFormat.java
9532= org.apache.commons.math3.util.CompositeFormat:parseNumber(String, double, ParsePosition)	/src/main/java/org/apache/commons/math3/util/CompositeFormat.java
9533= org.apache.commons.math3.util.CompositeFormat:getDefaultNumberFormat(Locale)	/src/main/java/org/apache/commons/math3/util/CompositeFormat.java
9534= org.apache.commons.math3.util.CompositeFormat:CompositeFormat()	/src/main/java/org/apache/commons/math3/util/CompositeFormat.java
9535= org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D:readResolve()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Euclidean3D.java
9536= org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D:Euclidean3D()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Euclidean3D.java
9537= org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D:getDimension()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Euclidean3D.java
9538= org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D:getInstance()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Euclidean3D.java
9539= org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D:getSubSpace()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Euclidean3D.java
9540= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testParseNan()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9541= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testForgottenPrefix()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9542= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testNan()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9543= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testForgottenSeparator()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9544= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testParseSimpleWithDecimals()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9545= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9546= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testDefaultFormatVector2D()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9547= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testNonDefaultSetting()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9548= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testForgottenSuffix()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9549= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:getLocale()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9550= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testNegativeX()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9551= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testParseNonDefaultSetting()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9552= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testNegativeZ()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9553= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testNegativeY()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9554= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testParseNegativeInfinity()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9555= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testSimpleNoDecimals()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9556= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testParseNegativeAll()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9557= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:tesNegativeInfinity()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9558= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testParseNegativeZ()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9559= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testParseSimpleWithDecimalsTrunc()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9560= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testParseNegativeY()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9561= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testSimpleWithDecimalsTrunc()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9562= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testParseNegativeX()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9563= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testConstructorSingleFormat()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9564= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testSimpleWithDecimals()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9565= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testParseIgnoredWhitespace()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9566= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testParsePositiveInfinity()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9567= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testPositiveInfinity()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9568= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testParseSimpleNoDecimals()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9569= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:Vector2DFormatAbstractTest()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9570= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatAbstractTest:testParseZeroX()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatAbstractTest.java
9571= org.apache.commons.math3.optim.SimpleVectorValueChecker:converged(int, PointVectorValuePair, PointVectorValuePair)	/src/main/java/org/apache/commons/math3/optim/SimpleVectorValueChecker.java
9572= org.apache.commons.math3.optim.SimpleVectorValueChecker:SimpleVectorValueChecker(double, double)	/src/main/java/org/apache/commons/math3/optim/SimpleVectorValueChecker.java
9573= org.apache.commons.math3.optim.SimpleVectorValueChecker:SimpleVectorValueChecker(double, double, int)	/src/main/java/org/apache/commons/math3/optim/SimpleVectorValueChecker.java
9574= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset.LeastSquaresProblem:getModelFunction()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9575= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getNumObservations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9576= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset.LeastSquaresProblem:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9577= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getData()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9578= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getX(int)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9579= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getNumParameters()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9580= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset.LeastSquaresProblem:value(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9581= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:StatisticalReferenceDataset(BufferedReader)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9582= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getStartingPoint(int)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9583= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getLeastSquaresProblem()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9584= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9585= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getNumStartingPoints()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9586= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:value(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9587= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getName()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9588= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getModelDerivatives(double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9589= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getParameters()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9590= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getParameter(int)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9591= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getModelFunction()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9592= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getY(int)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9593= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getResidualSumOfSquares()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9594= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getModelValue(double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9595= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:findLineNumbers(String, Iterable<String>)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9596= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getParametersStandardDeviations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9597= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset:getParameterStandardDeviation(int)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDataset.java
9598= org.apache.commons.math3.stat.inference.TTestTest:testTwoSampleTHomoscedastic()	/src/test/java/org/apache/commons/math3/stat/inference/TTestTest.java
9599= org.apache.commons.math3.stat.inference.TTestTest:testTwoSampleTHeterscedastic()	/src/test/java/org/apache/commons/math3/stat/inference/TTestTest.java
9600= org.apache.commons.math3.stat.inference.TTestTest:testOneSampleT()	/src/test/java/org/apache/commons/math3/stat/inference/TTestTest.java
9601= org.apache.commons.math3.stat.inference.TTestTest:testPaired()	/src/test/java/org/apache/commons/math3/stat/inference/TTestTest.java
9602= org.apache.commons.math3.stat.inference.TTestTest:testSmallSamples()	/src/test/java/org/apache/commons/math3/stat/inference/TTestTest.java
9603= org.apache.commons.math3.stat.inference.TTestTest:setUp()	/src/test/java/org/apache/commons/math3/stat/inference/TTestTest.java
9604= org.apache.commons.math3.stat.inference.TTestTest:testOneSampleTTest()	/src/test/java/org/apache/commons/math3/stat/inference/TTestTest.java
9605= org.apache.commons.math3.optim.linear.SimplexTableauTest:testDropPhase1Objective()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexTableauTest.java
9606= org.apache.commons.math3.optim.linear.SimplexTableauTest:createFunction()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexTableauTest.java
9607= org.apache.commons.math3.optim.linear.SimplexTableauTest:testTableauWithNoArtificialVars()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexTableauTest.java
9608= org.apache.commons.math3.optim.linear.SimplexTableauTest:testSerial()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexTableauTest.java
9609= org.apache.commons.math3.optim.linear.SimplexTableauTest:createConstraints()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexTableauTest.java
9610= org.apache.commons.math3.optim.linear.SimplexTableauTest:testInitialization()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexTableauTest.java
9611= org.apache.commons.math3.optim.linear.SimplexTableauTest:assertMatrixEquals(double[][], double[][])	/src/test/java/org/apache/commons/math3/optim/linear/SimplexTableauTest.java
9612= org.apache.commons.math3.distribution.LevyDistribution:density(double)	/src/main/java/org/apache/commons/math3/distribution/LevyDistribution.java
9613= org.apache.commons.math3.distribution.LevyDistribution:inverseCumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/LevyDistribution.java
9614= org.apache.commons.math3.distribution.LevyDistribution:isSupportLowerBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/LevyDistribution.java
9615= org.apache.commons.math3.distribution.LevyDistribution:isSupportConnected()	/src/main/java/org/apache/commons/math3/distribution/LevyDistribution.java
9616= org.apache.commons.math3.distribution.LevyDistribution:getScale()	/src/main/java/org/apache/commons/math3/distribution/LevyDistribution.java
9617= org.apache.commons.math3.distribution.LevyDistribution:getNumericalVariance()	/src/main/java/org/apache/commons/math3/distribution/LevyDistribution.java
9618= org.apache.commons.math3.distribution.LevyDistribution:getSupportUpperBound()	/src/main/java/org/apache/commons/math3/distribution/LevyDistribution.java
9619= org.apache.commons.math3.distribution.LevyDistribution:getNumericalMean()	/src/main/java/org/apache/commons/math3/distribution/LevyDistribution.java
9620= org.apache.commons.math3.distribution.LevyDistribution:isSupportUpperBoundInclusive()	/src/main/java/org/apache/commons/math3/distribution/LevyDistribution.java
9621= org.apache.commons.math3.distribution.LevyDistribution:cumulativeProbability(double)	/src/main/java/org/apache/commons/math3/distribution/LevyDistribution.java
9622= org.apache.commons.math3.distribution.LevyDistribution:logDensity(double)	/src/main/java/org/apache/commons/math3/distribution/LevyDistribution.java
9623= org.apache.commons.math3.distribution.LevyDistribution:getSupportLowerBound()	/src/main/java/org/apache/commons/math3/distribution/LevyDistribution.java
9624= org.apache.commons.math3.distribution.LevyDistribution:LevyDistribution(RandomGenerator, double, double)	/src/main/java/org/apache/commons/math3/distribution/LevyDistribution.java
9625= org.apache.commons.math3.distribution.LevyDistribution:getLocation()	/src/main/java/org/apache/commons/math3/distribution/LevyDistribution.java
9626= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:testSampling()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9627= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9628= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:testInverseCumulativeProbabilities()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9629= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:tearDown()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9630= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:setCumulativeTestPoints(int[])	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9631= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:makeInverseCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9632= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:testLogDensities()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9633= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:getInverseCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9634= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:verifyCumulativeProbabilities()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9635= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:getCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9636= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:setInverseCumulativeTestValues(int[])	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9637= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:setTolerance(double)	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9638= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:setDistribution(IntegerDistribution)	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9639= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:getDensityTestPoints()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9640= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:getTolerance()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9641= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:getCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9642= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:makeLogDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9643= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:testConsistencyAtSupportBounds()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9644= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:verifyDensities()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9645= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:getDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9646= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:setUp()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9647= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:testCumulativeProbabilities()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9648= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9649= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:verifyLogDensities()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9650= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9651= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:setDensityTestValues(double[])	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9652= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:testIllegalArguments()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9653= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:makeInverseCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9654= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:verifyInverseCumulativeProbabilities()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9655= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:setInverseCumulativeTestPoints(double[])	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9656= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:setCumulativeTestValues(double[])	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9657= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9658= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:testDensities()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9659= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:makeDensityTestPoints()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9660= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:setDensityTestPoints(int[])	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9661= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:getDistribution()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9662= org.apache.commons.math3.distribution.IntegerDistributionAbstractTest:getInverseCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java
9663= org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:AdaptiveStepsizeIntegrator(String, double, double, double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator.java
9664= org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:sanityChecks(ExpandableStatefulODE, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator.java
9665= org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:filterStep(double, boolean, boolean)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator.java
9666= org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:getMaxStep()	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator.java
9667= org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:AdaptiveStepsizeIntegrator(String, double, double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator.java
9668= org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:resetInternalState()	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator.java
9669= org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:getCurrentStepStart()	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator.java
9670= org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:setStepSizeControl(double, double, double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator.java
9671= org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:getMinStep()	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator.java
9672= org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:setStepSizeControl(double, double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator.java
9673= org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:setInitialStepSize(double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator.java
9674= org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:initializeStep(boolean, int, double[], double, double[], double[], double[], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator.java
9675= org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:integrate(ExpandableStatefulODE, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator.java
9676= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:checkGetSubMatrix(RealMatrix, double[][], int, int, int, int, boolean)	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9677= org.apache.commons.math3.linear.Array2DRowRealMatrixTest.GetVisitor:getCount()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9678= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testGetSubMatrix()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9679= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testGetRowVector()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9680= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testPremultiplyVector()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9681= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testCopySubMatrix()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9682= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:permuteRows(RealMatrix, int[])	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9683= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testGetRow()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9684= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testAddFail()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9685= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testSetRowVector()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9686= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testGetVectors()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9687= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testTranspose()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9688= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:columnToArray(double[][])	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9689= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testMultiply2()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9690= org.apache.commons.math3.linear.Array2DRowRealMatrixTest.SetVisitor:visit(int, int, double)	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9691= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testTrace()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9692= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testMath209()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9693= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:checkGetSubMatrix(RealMatrix, double[][], int[], int[], boolean)	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9694= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testSetSubMatrix()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9695= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testSetColumnVector()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9696= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:checkArrays(double[], double[])	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9697= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:createIdenticalCopy(double[][])	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9698= org.apache.commons.math3.linear.Array2DRowRealMatrixTest.GetVisitor:visit(int, int, double)	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9699= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testGetColumnVector()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9700= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testPremultiply()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9701= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testSetRowMatrix()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9702= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testToString()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9703= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testExamples()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9704= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testSetColumn()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9705= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testGetEntry()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9706= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testSetColumnMatrix()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9707= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testScalarAdd()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9708= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testMultiply()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9709= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:splitLU(RealMatrix, double[][], double[][])	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9710= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testOperate()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9711= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:visit(int, int, double)	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9712= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testGetColumnMatrix()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9713= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:columnToVector(double[][])	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9714= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testSetRow()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9715= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testPlusMinus()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9716= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testNorm()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9717= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testDimensions()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9718= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testSerial()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9719= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testPower()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9720= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testFrobeniusNorm()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9721= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testGetRowMatrix()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9722= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testCopyFunctions()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9723= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:checkCopy(RealMatrix, double[][], int, int, int, int, boolean)	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9724= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testWalk()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9725= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:getCount()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9726= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testEqualsAndHashCode()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9727= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testAdd()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9728= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:testGetColumn()	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9729= org.apache.commons.math3.linear.Array2DRowRealMatrixTest:checkCopy(RealMatrix, double[][], int[], int[], boolean)	/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java
9730= org.apache.commons.math3.analysis.function.Gaussian:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java
9731= org.apache.commons.math3.analysis.function.Gaussian.Parametric:validateParameters(double[])	/src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java
9732= org.apache.commons.math3.analysis.function.Gaussian.Parametric:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java
9733= org.apache.commons.math3.analysis.function.Gaussian:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java
9734= org.apache.commons.math3.analysis.function.Gaussian:Gaussian()	/src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java
9735= org.apache.commons.math3.analysis.function.Gaussian:Gaussian(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java
9736= org.apache.commons.math3.analysis.function.Gaussian:validateParameters(double[])	/src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java
9737= org.apache.commons.math3.analysis.function.Gaussian:value(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java
9738= org.apache.commons.math3.analysis.function.Gaussian:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java
9739= org.apache.commons.math3.analysis.function.Gaussian:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java
9740= org.apache.commons.math3.analysis.function.Gaussian:gradient(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java
9741= org.apache.commons.math3.analysis.function.Gaussian.Parametric:gradient(double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java
9742= org.apache.commons.math3.analysis.function.Gaussian:Gaussian(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java
9743= org.apache.commons.math3.linear.AnyMatrix:getRowDimension()	/src/main/java/org/apache/commons/math3/linear/AnyMatrix.java
9744= org.apache.commons.math3.linear.AnyMatrix:getColumnDimension()	/src/main/java/org/apache/commons/math3/linear/AnyMatrix.java
9745= org.apache.commons.math3.linear.AnyMatrix:isSquare()	/src/main/java/org/apache/commons/math3/linear/AnyMatrix.java
9746= org.apache.commons.math3.ode.UnknownParameterException:UnknownParameterException(String)	/src/main/java/org/apache/commons/math3/ode/UnknownParameterException.java
9747= org.apache.commons.math3.ode.UnknownParameterException:getName()	/src/main/java/org/apache/commons/math3/ode/UnknownParameterException.java
9748= org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction:UnivariateObjectiveFunction(UnivariateFunction)	/src/main/java/org/apache/commons/math3/optim/univariate/UnivariateObjectiveFunction.java
9749= org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction:getObjectiveFunction()	/src/main/java/org/apache/commons/math3/optim/univariate/UnivariateObjectiveFunction.java
9750= org.apache.commons.math3.ode.sampling.FixedStepHandler:init(double, double[], double)	/src/main/java/org/apache/commons/math3/ode/sampling/FixedStepHandler.java
9751= org.apache.commons.math3.ode.sampling.FixedStepHandler:handleStep(double, double[], double[], boolean)	/src/main/java/org/apache/commons/math3/ode/sampling/FixedStepHandler.java
9752= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest:doOptimize()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java
9753= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest:testGetRMS()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java
9754= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest:testComputeSigma()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java
9755= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest:createOptimizer()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java
9756= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest:testGetChiSquare()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java
9757= org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest:testSimplistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VectorialCovarianceTest.java
9758= org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest:testSerial()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VectorialCovarianceTest.java
9759= org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest:testMismatch()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VectorialCovarianceTest.java
9760= org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest:VectorialCovarianceTest()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VectorialCovarianceTest.java
9761= org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest:testBasicStats()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VectorialCovarianceTest.java
9762= org.apache.commons.math3.optimization.fitting.HarmonicFitterTest:testUnsorted()	/src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java
9763= org.apache.commons.math3.optimization.fitting.HarmonicFitterTest:testInitialGuess()	/src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java
9764= org.apache.commons.math3.optimization.fitting.HarmonicFitterTest:testPreconditions1()	/src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java
9765= org.apache.commons.math3.optimization.fitting.HarmonicFitterTest:testNoError()	/src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java
9766= org.apache.commons.math3.optimization.fitting.HarmonicFitterTest:testMath844()	/src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java
9767= org.apache.commons.math3.optimization.fitting.HarmonicFitterTest:test1PercentError()	/src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java
9768= org.apache.commons.math3.optimization.fitting.HarmonicFitterTest:testTinyVariationsData()	/src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java
9769= org.apache.commons.math3.fitting.CurveFitter:value(double[])	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9770= org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(double, double)	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9771= org.apache.commons.math3.fitting.CurveFitter:TheoreticalValuesFunction(ParametricUnivariateFunction)	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9772= org.apache.commons.math3.fitting.CurveFitter:fit(T, double[])	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9773= org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(WeightedObservedPoint)	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9774= org.apache.commons.math3.fitting.CurveFitter:getModelFunction()	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9775= org.apache.commons.math3.fitting.CurveFitter:getModelFunctionJacobian()	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9776= org.apache.commons.math3.fitting.CurveFitter.TheoreticalValuesFunction:value(double[])	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9777= org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(double, double, double)	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9778= org.apache.commons.math3.fitting.CurveFitter:CurveFitter(MultivariateVectorOptimizer)	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9779= org.apache.commons.math3.fitting.CurveFitter.TheoreticalValuesFunction:getModelFunction()	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9780= org.apache.commons.math3.fitting.CurveFitter:fit(int, T, double[])	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9781= org.apache.commons.math3.fitting.CurveFitter.TheoreticalValuesFunction:getModelFunctionJacobian()	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9782= org.apache.commons.math3.fitting.CurveFitter.TheoreticalValuesFunction:TheoreticalValuesFunction(ParametricUnivariateFunction)	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9783= org.apache.commons.math3.fitting.CurveFitter:getObservations()	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9784= org.apache.commons.math3.fitting.CurveFitter:clearObservations()	/src/main/java/org/apache/commons/math3/fitting/CurveFitter.java
9785= org.apache.commons.math3.util.TestBean:setX(Double)	/src/test/java/org/apache/commons/math3/util/TestBean.java
9786= org.apache.commons.math3.util.TestBean:setY(String)	/src/test/java/org/apache/commons/math3/util/TestBean.java
9787= org.apache.commons.math3.util.TestBean:getX()	/src/test/java/org/apache/commons/math3/util/TestBean.java
9788= org.apache.commons.math3.util.TestBean:getY()	/src/test/java/org/apache/commons/math3/util/TestBean.java
9789= org.apache.commons.math3.util.TestBean:setZ(Double)	/src/test/java/org/apache/commons/math3/util/TestBean.java
9790= org.apache.commons.math3.util.TestBean:getZ()	/src/test/java/org/apache/commons/math3/util/TestBean.java
9791= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat:getInstance()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat.java
9792= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat:Vector1DFormat()	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat.java
9793= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat:Vector1DFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat.java
9794= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat:Vector1DFormat(String, String, NumberFormat)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat.java
9795= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat:getInstance(Locale)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat.java
9796= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat:Vector1DFormat(String, String)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat.java
9797= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat:parse(String)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat.java
9798= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat:parse(String, ParsePosition)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat.java
9799= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat:format(Vector<Euclidean1D>, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat.java
9800= org.apache.commons.math3.genetics.StoppingCondition:isSatisfied(Population)	/src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java
9801= org.apache.commons.math3.analysis.TrivariateFunction:value(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/TrivariateFunction.java
9802= org.apache.commons.math3.linear.RRQRDecompositionTest:testQOrthogonal()	/src/test/java/org/apache/commons/math3/linear/RRQRDecompositionTest.java
9803= org.apache.commons.math3.linear.RRQRDecompositionTest:testDimensions()	/src/test/java/org/apache/commons/math3/linear/RRQRDecompositionTest.java
9804= org.apache.commons.math3.linear.RRQRDecompositionTest:checkQOrthogonal(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/RRQRDecompositionTest.java
9805= org.apache.commons.math3.linear.RRQRDecompositionTest:checkTrapezoidal(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/RRQRDecompositionTest.java
9806= org.apache.commons.math3.linear.RRQRDecompositionTest:checkUpperTriangular(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/RRQRDecompositionTest.java
9807= org.apache.commons.math3.linear.RRQRDecompositionTest:testRank()	/src/test/java/org/apache/commons/math3/linear/RRQRDecompositionTest.java
9808= org.apache.commons.math3.linear.RRQRDecompositionTest:createTestMatrix(Random, int, int)	/src/test/java/org/apache/commons/math3/linear/RRQRDecompositionTest.java
9809= org.apache.commons.math3.linear.RRQRDecompositionTest:checkDimension(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/RRQRDecompositionTest.java
9810= org.apache.commons.math3.linear.RRQRDecompositionTest:testNonInvertible()	/src/test/java/org/apache/commons/math3/linear/RRQRDecompositionTest.java
9811= org.apache.commons.math3.linear.RRQRDecompositionTest:testAPEqualQR()	/src/test/java/org/apache/commons/math3/linear/RRQRDecompositionTest.java
9812= org.apache.commons.math3.linear.RRQRDecompositionTest:testRUpperTriangular()	/src/test/java/org/apache/commons/math3/linear/RRQRDecompositionTest.java
9813= org.apache.commons.math3.linear.RRQRDecompositionTest:visit(int, int, double)	/src/test/java/org/apache/commons/math3/linear/RRQRDecompositionTest.java
9814= org.apache.commons.math3.linear.RRQRDecompositionTest:checkAPEqualQR(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/RRQRDecompositionTest.java
9815= org.apache.commons.math3.linear.RRQRDecompositionTest:testHTrapezoidal()	/src/test/java/org/apache/commons/math3/linear/RRQRDecompositionTest.java
9816= org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest:testAccessors()	/src/test/java/org/apache/commons/math3/exception/NumberIsTooLargeExceptionTest.java
9817= org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:getMaximalIterationCount()	/src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java
9818= org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:getIterations()	/src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java
9819= org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:computeObjectiveValue(double)	/src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java
9820= org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:getMax()	/src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java
9821= org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:getMinimalIterationCount()	/src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java
9822= org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:integrate(int, UnivariateFunction, double, double)	/src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java
9823= org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:getAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java
9824= org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:BaseAbstractUnivariateIntegrator(double, double)	/src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java
9825= org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:BaseAbstractUnivariateIntegrator(int, int)	/src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java
9826= org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:BaseAbstractUnivariateIntegrator(double, double, int, int)	/src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java
9827= org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:setup(int, UnivariateFunction, double, double)	/src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java
9828= org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:getRelativeAccuracy()	/src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java
9829= org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:getMin()	/src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java
9830= org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:getEvaluations()	/src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java
9831= org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:doIntegrate()	/src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java
9832= org.apache.commons.math3.linear.RealVectorFormat:RealVectorFormat(String, String, String)	/src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java
9833= org.apache.commons.math3.linear.RealVectorFormat:RealVectorFormat(String, String, String, NumberFormat)	/src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java
9834= org.apache.commons.math3.linear.RealVectorFormat:parse(String, ParsePosition)	/src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java
9835= org.apache.commons.math3.linear.RealVectorFormat:getAvailableLocales()	/src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java
9836= org.apache.commons.math3.linear.RealVectorFormat:getInstance(Locale)	/src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java
9837= org.apache.commons.math3.linear.RealVectorFormat:format(RealVector, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java
9838= org.apache.commons.math3.linear.RealVectorFormat:parse(String)	/src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java
9839= org.apache.commons.math3.linear.RealVectorFormat:RealVectorFormat()	/src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java
9840= org.apache.commons.math3.linear.RealVectorFormat:getPrefix()	/src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java
9841= org.apache.commons.math3.linear.RealVectorFormat:format(RealVector)	/src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java
9842= org.apache.commons.math3.linear.RealVectorFormat:getInstance()	/src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java
9843= org.apache.commons.math3.linear.RealVectorFormat:getFormat()	/src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java
9844= org.apache.commons.math3.linear.RealVectorFormat:getSuffix()	/src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java
9845= org.apache.commons.math3.linear.RealVectorFormat:RealVectorFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java
9846= org.apache.commons.math3.linear.RealVectorFormat:getSeparator()	/src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java
9847= org.apache.commons.math3.dfp.DfpField:getE()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9848= org.apache.commons.math3.dfp.DfpField:newDfp(byte)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9849= org.apache.commons.math3.dfp.DfpField:getSqr3Reciprocal()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9850= org.apache.commons.math3.dfp.DfpField:split(String)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9851= org.apache.commons.math3.dfp.DfpField:computeStringConstants(int)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9852= org.apache.commons.math3.dfp.DfpField:computeLn(Dfp, Dfp, Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9853= org.apache.commons.math3.dfp.DfpField:newDfp(int)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9854= org.apache.commons.math3.dfp.DfpField:setIEEEFlags(int)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9855= org.apache.commons.math3.dfp.DfpField:computeExp(Dfp, Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9856= org.apache.commons.math3.dfp.DfpField:newDfp(double)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9857= org.apache.commons.math3.dfp.DfpField:getESplit()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9858= org.apache.commons.math3.dfp.DfpField:getRoundingMode()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9859= org.apache.commons.math3.dfp.DfpField:getSqr3()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9860= org.apache.commons.math3.dfp.DfpField:getLn2()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9861= org.apache.commons.math3.dfp.DfpField:getSqr2()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9862= org.apache.commons.math3.dfp.DfpField:newDfp()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9863= org.apache.commons.math3.dfp.DfpField:newDfp(String)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9864= org.apache.commons.math3.dfp.DfpField:getPiSplit()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9865= org.apache.commons.math3.dfp.DfpField:getLn5()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9866= org.apache.commons.math3.dfp.DfpField:computePi(Dfp, Dfp, Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9867= org.apache.commons.math3.dfp.DfpField:setIEEEFlagsBits(int)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9868= org.apache.commons.math3.dfp.DfpField:getTwo()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9869= org.apache.commons.math3.dfp.DfpField:getIEEEFlags()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9870= org.apache.commons.math3.dfp.DfpField:getLn10()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9871= org.apache.commons.math3.dfp.DfpField:getRadixDigits()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9872= org.apache.commons.math3.dfp.DfpField:setRoundingMode(RoundingMode)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9873= org.apache.commons.math3.dfp.DfpField:clearIEEEFlags()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9874= org.apache.commons.math3.dfp.DfpField:getRuntimeClass()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9875= org.apache.commons.math3.dfp.DfpField:getSqr2Split()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9876= org.apache.commons.math3.dfp.DfpField:getPi()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9877= org.apache.commons.math3.dfp.DfpField:DfpField(int)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9878= org.apache.commons.math3.dfp.DfpField:newDfp(byte, byte)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9879= org.apache.commons.math3.dfp.DfpField:DfpField(int, boolean)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9880= org.apache.commons.math3.dfp.DfpField:getZero()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9881= org.apache.commons.math3.dfp.DfpField:newDfp(Dfp)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9882= org.apache.commons.math3.dfp.DfpField:getOne()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9883= org.apache.commons.math3.dfp.DfpField:getLn2Split()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9884= org.apache.commons.math3.dfp.DfpField:newDfp(long)	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9885= org.apache.commons.math3.dfp.DfpField:getSqr2Reciprocal()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9886= org.apache.commons.math3.dfp.DfpField:getLn5Split()	/src/main/java/org/apache/commons/math3/dfp/DfpField.java
9887= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:BaseAbstractUnivariateSolver(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9888= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:getFunctionValueAccuracy()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9889= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:setup(int, FUNC, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9890= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:getRelativeAccuracy()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9891= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:BaseAbstractUnivariateSolver(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9892= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:verifyBracketing(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9893= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:BaseAbstractUnivariateSolver(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9894= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:getMaxEvaluations()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9895= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:computeObjectiveValue(double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9896= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:getStartValue()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9897= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:getMin()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9898= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:verifyInterval(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9899= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:verifySequence(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9900= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:isSequence(double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9901= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:solve(int, FUNC, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9902= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:solve(int, FUNC, double, double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9903= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:solve(int, FUNC, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9904= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:doSolve()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9905= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:getAbsoluteAccuracy()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9906= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:incrementEvaluationCount()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9907= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:getEvaluations()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9908= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:isBracketing(double, double)	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9909= org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:getMax()	/src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java
9910= org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction:QuasiSigmoidDecayFunction(double, double, long)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/util/QuasiSigmoidDecayFunction.java
9911= org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction:value(long)	/src/main/java/org/apache/commons/math3/ml/neuralnet/sofm/util/QuasiSigmoidDecayFunction.java
9912= org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest:getFieldName(RotationOrder)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationOrderTest.java
9913= org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest:testName()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationOrderTest.java
9914= org.apache.commons.math3.genetics.ListPopulationTest:testGetFittestChromosome()	/src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java
9915= org.apache.commons.math3.genetics.ListPopulationTest:testChromosomes()	/src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java
9916= org.apache.commons.math3.genetics.ListPopulationTest:testAddTooManyChromosomesSingleCall()	/src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java
9917= org.apache.commons.math3.genetics.ListPopulationTest:testSetPopulationLimitTooSmall()	/src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java
9918= org.apache.commons.math3.genetics.ListPopulationTest:testConstructorListOfChromosomesBiggerThanPopulationSize()	/src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java
9919= org.apache.commons.math3.genetics.ListPopulationTest:nextGeneration()	/src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java
9920= org.apache.commons.math3.genetics.ListPopulationTest:testAddTooManyChromosomes()	/src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java
9921= org.apache.commons.math3.genetics.ListPopulationTest:testConstructorPopulationLimitNotPositive()	/src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java
9922= org.apache.commons.math3.genetics.ListPopulationTest:testChromosomeListConstructorPopulationLimitNotPositive()	/src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java
9923= org.apache.commons.math3.genetics.ListPopulationTest:testIterator()	/src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java
9924= org.apache.commons.math3.genetics.ListPopulationTest:testSetPopulationLimit()	/src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java
9925= org.apache.commons.math3.genetics.ListPopulationTest:fitness()	/src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java
9926= org.apache.commons.math3.analysis.function.Log10:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Log10.java
9927= org.apache.commons.math3.analysis.function.Log10:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Log10.java
9928= org.apache.commons.math3.analysis.function.Log10:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Log10.java
9929= org.apache.commons.math3.ml.clustering.Clusterer:getDistanceMeasure()	/src/main/java/org/apache/commons/math3/ml/clustering/Clusterer.java
9930= org.apache.commons.math3.ml.clustering.Clusterer:distance(Clusterable, Clusterable)	/src/main/java/org/apache/commons/math3/ml/clustering/Clusterer.java
9931= org.apache.commons.math3.ml.clustering.Clusterer:Clusterer(DistanceMeasure)	/src/main/java/org/apache/commons/math3/ml/clustering/Clusterer.java
9932= org.apache.commons.math3.ml.clustering.Clusterer:cluster(Collection<T>)	/src/main/java/org/apache/commons/math3/ml/clustering/Clusterer.java
9933= org.apache.commons.math3.optimization.PointValuePair:getPointRef()	/src/main/java/org/apache/commons/math3/optimization/PointValuePair.java
9934= org.apache.commons.math3.optimization.PointValuePair:DataTransferObject(double[], double)	/src/main/java/org/apache/commons/math3/optimization/PointValuePair.java
9935= org.apache.commons.math3.optimization.PointValuePair:PointValuePair(double[], double)	/src/main/java/org/apache/commons/math3/optimization/PointValuePair.java
9936= org.apache.commons.math3.optimization.PointValuePair:writeReplace()	/src/main/java/org/apache/commons/math3/optimization/PointValuePair.java
9937= org.apache.commons.math3.optimization.PointValuePair:PointValuePair(double[], double, boolean)	/src/main/java/org/apache/commons/math3/optimization/PointValuePair.java
9938= org.apache.commons.math3.optimization.PointValuePair.DataTransferObject:DataTransferObject(double[], double)	/src/main/java/org/apache/commons/math3/optimization/PointValuePair.java
9939= org.apache.commons.math3.optimization.PointValuePair:readResolve()	/src/main/java/org/apache/commons/math3/optimization/PointValuePair.java
9940= org.apache.commons.math3.optimization.PointValuePair.DataTransferObject:readResolve()	/src/main/java/org/apache/commons/math3/optimization/PointValuePair.java
9941= org.apache.commons.math3.optimization.PointValuePair:getPoint()	/src/main/java/org/apache/commons/math3/optimization/PointValuePair.java
9942= org.apache.commons.math3.geometry.euclidean.twod.Vector2DTest:testCrossProduct()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DTest.java
9943= org.apache.commons.math3.ode.FirstOrderConverter:computeDerivatives(double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/FirstOrderConverter.java
9944= org.apache.commons.math3.ode.FirstOrderConverter:FirstOrderConverter(SecondOrderDifferentialEquations)	/src/main/java/org/apache/commons/math3/ode/FirstOrderConverter.java
9945= org.apache.commons.math3.ode.FirstOrderConverter:getDimension()	/src/main/java/org/apache/commons/math3/ode/FirstOrderConverter.java
9946= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:getZ()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9947= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:getX()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9948= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distanceSq(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9949= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:add(FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9950= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:angle(FieldVector3D<T>, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9951= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:FieldVector3D(T, FieldVector3D<T>, T, FieldVector3D<T>, T, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9952= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:hashCode()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9953= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:subtract(double, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9954= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:getDelta()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9955= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distance1(FieldVector3D<T>, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9956= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distance(Vector3D, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9957= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:isNaN()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9958= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distanceInf(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9959= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:FieldVector3D(T, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9960= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:dotProduct(FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9961= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:isInfinite()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9962= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distanceInf(FieldVector3D<T>, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9963= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:getNorm()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9964= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distance(FieldVector3D<T>, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9965= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:toVector3D()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9966= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:subtract(double, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9967= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:scalarMultiply(T)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9968= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distance(FieldVector3D<T>, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9969= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distanceInf(FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9970= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:equals(Object)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9971= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:add(T, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9972= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:subtract(T, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9973= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:toArray()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9974= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:add(double, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9975= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:crossProduct(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9976= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:negate()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9977= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:FieldVector3D(T, T)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9978= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distanceSq(FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9979= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:FieldVector3D(double, FieldVector3D<T>, double, FieldVector3D<T>, double, FieldVector3D<T>, double, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9980= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:getNorm1()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9981= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:getNormInf()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9982= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:FieldVector3D(double, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9983= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:getY()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9984= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:FieldVector3D(T[])	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9985= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:angle(FieldVector3D<T>, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9986= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:dotProduct(FieldVector3D<T>, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9987= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:crossProduct(FieldVector3D<T>, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9988= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:crossProduct(Vector3D, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9989= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:FieldVector3D(double, FieldVector3D<T>, double, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9990= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:crossProduct(FieldVector3D<T>, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9991= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:orthogonal()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9992= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:subtract(T, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9993= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:FieldVector3D(T, Vector3D, T, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9994= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:add(T, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9995= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:crossProduct(FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9996= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:toString()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9997= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:subtract(FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9998= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distance1(FieldVector3D<T>, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
9999= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:subtract(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10000= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distance1(Vector3D, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10001= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:FieldVector3D(T, FieldVector3D<T>, T, FieldVector3D<T>, T, FieldVector3D<T>, T, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10002= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:FieldVector3D(T, Vector3D, T, Vector3D, T, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10003= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:add(double, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10004= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:angle(Vector3D, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10005= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:scalarMultiply(double)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10006= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distanceSq(FieldVector3D<T>, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10007= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:dotProduct(Vector3D, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10008= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distanceInf(FieldVector3D<T>, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10009= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distance1(FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10010= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:getNormSq()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10011= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:FieldVector3D(T, T, T)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10012= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:dotProduct(FieldVector3D<T>, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10013= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:dotProduct(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10014= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:toString(NumberFormat)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10015= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:normalize()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10016= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distanceInf(Vector3D, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10017= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distanceSq(Vector3D, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10018= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:add(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10019= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distance(FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10020= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distanceSq(FieldVector3D<T>, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10021= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:FieldVector3D(T, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10022= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distance(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10023= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:getAlpha()	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10024= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:FieldVector3D(double, FieldVector3D<T>, double, FieldVector3D<T>, double, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10025= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:distance1(Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10026= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:FieldVector3D(T, FieldVector3D<T>, T, FieldVector3D<T>)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10027= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:FieldVector3D(T, Vector3D, T, Vector3D, T, Vector3D, T, Vector3D)	/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10028= org.apache.commons.math3.random.BitsStreamGeneratorTest.BitRandom:BitRandom()	/src/test/java/org/apache/commons/math3/random/BitsStreamGeneratorTest.java
10029= org.apache.commons.math3.random.BitsStreamGeneratorTest:setSeed(long)	/src/test/java/org/apache/commons/math3/random/BitsStreamGeneratorTest.java
10030= org.apache.commons.math3.random.BitsStreamGeneratorTest:makeGenerator()	/src/test/java/org/apache/commons/math3/random/BitsStreamGeneratorTest.java
10031= org.apache.commons.math3.random.BitsStreamGeneratorTest:BitsStreamGeneratorTest()	/src/test/java/org/apache/commons/math3/random/BitsStreamGeneratorTest.java
10032= org.apache.commons.math3.random.BitsStreamGeneratorTest:next(int)	/src/test/java/org/apache/commons/math3/random/BitsStreamGeneratorTest.java
10033= org.apache.commons.math3.random.BitsStreamGeneratorTest:setSeed(int[])	/src/test/java/org/apache/commons/math3/random/BitsStreamGeneratorTest.java
10034= org.apache.commons.math3.random.BitsStreamGeneratorTest.TestBitStreamGenerator:setSeed(long)	/src/test/java/org/apache/commons/math3/random/BitsStreamGeneratorTest.java
10035= org.apache.commons.math3.random.BitsStreamGeneratorTest.BitRandom:nextBits(int)	/src/test/java/org/apache/commons/math3/random/BitsStreamGeneratorTest.java
10036= org.apache.commons.math3.random.BitsStreamGeneratorTest:setSeed(int)	/src/test/java/org/apache/commons/math3/random/BitsStreamGeneratorTest.java
10037= org.apache.commons.math3.random.BitsStreamGeneratorTest:nextBits(int)	/src/test/java/org/apache/commons/math3/random/BitsStreamGeneratorTest.java
10038= org.apache.commons.math3.random.BitsStreamGeneratorTest.TestBitStreamGenerator:next(int)	/src/test/java/org/apache/commons/math3/random/BitsStreamGeneratorTest.java
10039= org.apache.commons.math3.random.BitsStreamGeneratorTest.TestBitStreamGenerator:setSeed(int)	/src/test/java/org/apache/commons/math3/random/BitsStreamGeneratorTest.java
10040= org.apache.commons.math3.random.BitsStreamGeneratorTest.TestBitStreamGenerator:setSeed(int[])	/src/test/java/org/apache/commons/math3/random/BitsStreamGeneratorTest.java
10041= org.apache.commons.math3.random.BitsStreamGeneratorTest:BitRandom()	/src/test/java/org/apache/commons/math3/random/BitsStreamGeneratorTest.java
10042= org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer:UnivariateMultiStartOptimizer(BaseUnivariateOptimizer<FUNC>, int, RandomGenerator)	/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizer.java
10043= org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer:getConvergenceChecker()	/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizer.java
10044= org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer:optimize(int, FUNC, GoalType, double, double)	/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizer.java
10045= org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer:sortPairs(GoalType)	/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizer.java
10046= org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer:getEvaluations()	/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizer.java
10047= org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer:compare(UnivariatePointValuePair, UnivariatePointValuePair)	/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizer.java
10048= org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer:getMaxEvaluations()	/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizer.java
10049= org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer:getOptima()	/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizer.java
10050= org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer:optimize(int, FUNC, GoalType, double, double, double)	/src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizer.java
10051= org.apache.commons.math3.fraction.AbstractFormat:parseNextCharacter(String, ParsePosition)	/src/main/java/org/apache/commons/math3/fraction/AbstractFormat.java
10052= org.apache.commons.math3.fraction.AbstractFormat:AbstractFormat()	/src/main/java/org/apache/commons/math3/fraction/AbstractFormat.java
10053= org.apache.commons.math3.fraction.AbstractFormat:getDenominatorFormat()	/src/main/java/org/apache/commons/math3/fraction/AbstractFormat.java
10054= org.apache.commons.math3.fraction.AbstractFormat:getNumeratorFormat()	/src/main/java/org/apache/commons/math3/fraction/AbstractFormat.java
10055= org.apache.commons.math3.fraction.AbstractFormat:getDefaultNumberFormat()	/src/main/java/org/apache/commons/math3/fraction/AbstractFormat.java
10056= org.apache.commons.math3.fraction.AbstractFormat:setNumeratorFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/fraction/AbstractFormat.java
10057= org.apache.commons.math3.fraction.AbstractFormat:setDenominatorFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/fraction/AbstractFormat.java
10058= org.apache.commons.math3.fraction.AbstractFormat:format(long, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/fraction/AbstractFormat.java
10059= org.apache.commons.math3.fraction.AbstractFormat:parseAndIgnoreWhitespace(String, ParsePosition)	/src/main/java/org/apache/commons/math3/fraction/AbstractFormat.java
10060= org.apache.commons.math3.fraction.AbstractFormat:getDefaultNumberFormat(Locale)	/src/main/java/org/apache/commons/math3/fraction/AbstractFormat.java
10061= org.apache.commons.math3.fraction.AbstractFormat:format(double, StringBuffer, FieldPosition)	/src/main/java/org/apache/commons/math3/fraction/AbstractFormat.java
10062= org.apache.commons.math3.fraction.AbstractFormat:AbstractFormat(NumberFormat, NumberFormat)	/src/main/java/org/apache/commons/math3/fraction/AbstractFormat.java
10063= org.apache.commons.math3.fraction.AbstractFormat:AbstractFormat(NumberFormat)	/src/main/java/org/apache/commons/math3/fraction/AbstractFormat.java
10064= org.apache.commons.math3.optimization.fitting.GaussianFitterTest:testFit07()	/src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java
10065= org.apache.commons.math3.optimization.fitting.GaussianFitterTest:testFit06()	/src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java
10066= org.apache.commons.math3.optimization.fitting.GaussianFitterTest:testFit05()	/src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java
10067= org.apache.commons.math3.optimization.fitting.GaussianFitterTest:testFit04()	/src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java
10068= org.apache.commons.math3.optimization.fitting.GaussianFitterTest:testMath798()	/src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java
10069= org.apache.commons.math3.optimization.fitting.GaussianFitterTest:testMath519()	/src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java
10070= org.apache.commons.math3.optimization.fitting.GaussianFitterTest:testFit03()	/src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java
10071= org.apache.commons.math3.optimization.fitting.GaussianFitterTest:testFit02()	/src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java
10072= org.apache.commons.math3.optimization.fitting.GaussianFitterTest:testFit01()	/src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java
10073= org.apache.commons.math3.optimization.fitting.GaussianFitterTest:addDatasetToGaussianFitter(double[][], GaussianFitter)	/src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java
10074= org.apache.commons.math3.ml.clustering.FuzzyKMeansClustererTest:testCluster()	/src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java
10075= org.apache.commons.math3.ml.clustering.FuzzyKMeansClustererTest:testGetters()	/src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java
10076= org.apache.commons.math3.ml.clustering.FuzzyKMeansClustererTest:testTooSmallFuzzynessFactor()	/src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java
10077= org.apache.commons.math3.ml.clustering.FuzzyKMeansClustererTest:testNullDataset()	/src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java
10078= org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest:testSwissFertility()	/src/test/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelationTest.java
10079= org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest:createRealMatrix(double[], int, int)	/src/test/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelationTest.java
10080= org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest:testInsufficientData()	/src/test/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelationTest.java
10081= org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest:createLowerTriangularRealMatrix(double[], int)	/src/test/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelationTest.java
10082= org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest:testConstant()	/src/test/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelationTest.java
10083= org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest:testStdErrorConsistency()	/src/test/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelationTest.java
10084= org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest:testCovarianceConsistency()	/src/test/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelationTest.java
10085= org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest:testPValueNearZero()	/src/test/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelationTest.java
10086= org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest:fillUpper(RealMatrix, double)	/src/test/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelationTest.java
10087= org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest:testLongly()	/src/test/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelationTest.java
10088= org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest:testConsistency()	/src/test/java/org/apache/commons/math3/stat/correlation/PearsonsCorrelationTest.java
10089= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest:testZero()	/src/test/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolatorTest.java
10090= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest:testRandomPolynomialsFirstDerivative()	/src/test/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolatorTest.java
10091= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest:testWikipedia()	/src/test/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolatorTest.java
10092= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest:randomPolynomial(int, Random)	/src/test/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolatorTest.java
10093= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest:testMixedDerivatives()	/src/test/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolatorTest.java
10094= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest:testEmptySampleDerivative()	/src/test/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolatorTest.java
10095= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest:testSine()	/src/test/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolatorTest.java
10096= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest:testDuplicatedAbscissa()	/src/test/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolatorTest.java
10097= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest:testQuadratic()	/src/test/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolatorTest.java
10098= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest:testRandomPolynomialsValuesOnly()	/src/test/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolatorTest.java
10099= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest:testOnePointParabola()	/src/test/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolatorTest.java
10100= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest:testEmptySampleValue()	/src/test/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolatorTest.java
10101= org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest:testSquareRoot()	/src/test/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolatorTest.java
10102= org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest:testProductAndGeometricMean()	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImplTest.java
10103= org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest:testStats()	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImplTest.java
10104= org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest:testN0andN1Conditions()	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImplTest.java
10105= org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest:testSkewAndKurtosis()	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImplTest.java
10106= org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest:testSerialization()	/src/test/java/org/apache/commons/math3/stat/descriptive/ListUnivariateImplTest.java
10107= org.apache.commons.math3.analysis.DifferentiableMultivariateFunction:partialDerivative(int)	/src/main/java/org/apache/commons/math3/analysis/DifferentiableMultivariateFunction.java
10108= org.apache.commons.math3.analysis.DifferentiableMultivariateFunction:gradient()	/src/main/java/org/apache/commons/math3/analysis/DifferentiableMultivariateFunction.java
10109= org.apache.commons.math3.util.Pair:toString()	/src/main/java/org/apache/commons/math3/util/Pair.java
10110= org.apache.commons.math3.util.Pair:create(K, V)	/src/main/java/org/apache/commons/math3/util/Pair.java
10111= org.apache.commons.math3.util.Pair:Pair(Pair<? extends K,? extends V>)	/src/main/java/org/apache/commons/math3/util/Pair.java
10112= org.apache.commons.math3.util.Pair:getSecond()	/src/main/java/org/apache/commons/math3/util/Pair.java
10113= org.apache.commons.math3.util.Pair:hashCode()	/src/main/java/org/apache/commons/math3/util/Pair.java
10114= org.apache.commons.math3.util.Pair:Pair(K, V)	/src/main/java/org/apache/commons/math3/util/Pair.java
10115= org.apache.commons.math3.util.Pair:getFirst()	/src/main/java/org/apache/commons/math3/util/Pair.java
10116= org.apache.commons.math3.util.Pair:getKey()	/src/main/java/org/apache/commons/math3/util/Pair.java
10117= org.apache.commons.math3.util.Pair:equals(Object)	/src/main/java/org/apache/commons/math3/util/Pair.java
10118= org.apache.commons.math3.util.Pair:getValue()	/src/main/java/org/apache/commons/math3/util/Pair.java
10119= org.apache.commons.math3.fitting.leastsquares.MinpackTest:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10120= org.apache.commons.math3.fitting.leastsquares.MinpackTest.LinearRank1Function:LinearRank1Function(int, int, double, double, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10121= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackJennrichSampson()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10122= org.apache.commons.math3.fitting.leastsquares.MinpackTest:HelicalValleyFunction(double[], double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10123= org.apache.commons.math3.fitting.leastsquares.MinpackTest.Box3DimensionalFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10124= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackBrownDennis()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10125= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackChebyquad()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10126= org.apache.commons.math3.fitting.leastsquares.MinpackTest:WatsonFunction(int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10127= org.apache.commons.math3.fitting.leastsquares.MinpackTest.BardFunction:BardFunction(double, double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10128= org.apache.commons.math3.fitting.leastsquares.MinpackTest.WatsonFunction:WatsonFunction(int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10129= org.apache.commons.math3.fitting.leastsquares.MinpackTest.FreudensteinRothFunction:FreudensteinRothFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10130= org.apache.commons.math3.fitting.leastsquares.MinpackTest.Osborne2Function:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10131= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackBrownAlmostLinear()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10132= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MinpackFunction:getN()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10133= org.apache.commons.math3.fitting.leastsquares.MinpackTest.LinearFullRankFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10134= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MinpackFunction:value(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10135= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackLinearRank1ZeroColsAndRows()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10136= org.apache.commons.math3.fitting.leastsquares.MinpackTest:minpackTest(MinpackFunction, boolean)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10137= org.apache.commons.math3.fitting.leastsquares.MinpackTest.BrownAlmostLinearFunction:BrownAlmostLinearFunction(int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10138= org.apache.commons.math3.fitting.leastsquares.MinpackTest:BrownDennisFunction(int, double[], double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10139= org.apache.commons.math3.fitting.leastsquares.MinpackTest.LinearRank1Function:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10140= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MinpackFunction:getWeight()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10141= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackOsborne1()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10142= org.apache.commons.math3.fitting.leastsquares.MinpackTest.Box3DimensionalFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10143= org.apache.commons.math3.fitting.leastsquares.MinpackTest:RosenbrockFunction(double[], double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10144= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MinpackFunction:setCostAccuracy(double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10145= org.apache.commons.math3.fitting.leastsquares.MinpackTest:KowalikOsborneFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10146= org.apache.commons.math3.fitting.leastsquares.MinpackTest.WatsonFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10147= org.apache.commons.math3.fitting.leastsquares.MinpackTest:setCostAccuracy(double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10148= org.apache.commons.math3.fitting.leastsquares.MinpackTest:MinpackFunction(int, double[], double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10149= org.apache.commons.math3.fitting.leastsquares.MinpackTest.Osborne1Function:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10150= org.apache.commons.math3.fitting.leastsquares.MinpackTest:buildArray(int, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10151= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackBard()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10152= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackMeyer()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10153= org.apache.commons.math3.fitting.leastsquares.MinpackTest:ChebyquadFunction(int, int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10154= org.apache.commons.math3.fitting.leastsquares.MinpackTest.Osborne1Function:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10155= org.apache.commons.math3.fitting.leastsquares.MinpackTest.HelicalValleyFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10156= org.apache.commons.math3.fitting.leastsquares.MinpackTest.KowalikOsborneFunction:KowalikOsborneFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10157= org.apache.commons.math3.fitting.leastsquares.MinpackTest:checkTheoreticalMinCost(double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10158= org.apache.commons.math3.fitting.leastsquares.MinpackTest:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10159= org.apache.commons.math3.fitting.leastsquares.MinpackTest.Box3DimensionalFunction:Box3DimensionalFunction(int, double[], double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10160= org.apache.commons.math3.fitting.leastsquares.MinpackTest.PowellSingularFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10161= org.apache.commons.math3.fitting.leastsquares.MinpackTest.WatsonFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10162= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackBox3Dimensional()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10163= org.apache.commons.math3.fitting.leastsquares.MinpackTest:buildChebyquadArray(int, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10164= org.apache.commons.math3.fitting.leastsquares.MinpackTest.LinearRank1Function:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10165= org.apache.commons.math3.fitting.leastsquares.MinpackTest.PowellSingularFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10166= org.apache.commons.math3.fitting.leastsquares.MinpackTest.HelicalValleyFunction:HelicalValleyFunction(double[], double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10167= org.apache.commons.math3.fitting.leastsquares.MinpackTest.ChebyquadFunction:buildChebyquadArray(int, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10168= org.apache.commons.math3.fitting.leastsquares.MinpackTest:value(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10169= org.apache.commons.math3.fitting.leastsquares.MinpackTest:BardFunction(double, double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10170= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackOsborne2()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10171= org.apache.commons.math3.fitting.leastsquares.MinpackTest.BrownDennisFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10172= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackKowalikOsborne()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10173= org.apache.commons.math3.fitting.leastsquares.MinpackTest.LinearRank1ZeroColsAndRowsFunction:LinearRank1ZeroColsAndRowsFunction(int, int, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10174= org.apache.commons.math3.fitting.leastsquares.MinpackTest.FreudensteinRothFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10175= org.apache.commons.math3.fitting.leastsquares.MinpackTest:LinearFullRankFunction(int, int, double, double, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10176= org.apache.commons.math3.fitting.leastsquares.MinpackTest:checkTheoreticalMinParams(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10177= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackPowellSingular()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10178= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackRosenbrok()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10179= org.apache.commons.math3.fitting.leastsquares.MinpackTest.BrownAlmostLinearFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10180= org.apache.commons.math3.fitting.leastsquares.MinpackTest.KowalikOsborneFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10181= org.apache.commons.math3.fitting.leastsquares.MinpackTest.JennrichSampsonFunction:JennrichSampsonFunction(int, double[], double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10182= org.apache.commons.math3.fitting.leastsquares.MinpackTest.LinearRank1ZeroColsAndRowsFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10183= org.apache.commons.math3.fitting.leastsquares.MinpackTest:LinearRank1ZeroColsAndRowsFunction(int, int, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10184= org.apache.commons.math3.fitting.leastsquares.MinpackTest.BardFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10185= org.apache.commons.math3.fitting.leastsquares.MinpackTest.BrownDennisFunction:BrownDennisFunction(int, double[], double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10186= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackHelicalValley()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10187= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MinpackFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10188= org.apache.commons.math3.fitting.leastsquares.MinpackTest.KowalikOsborneFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10189= org.apache.commons.math3.fitting.leastsquares.MinpackTest.Osborne2Function:Osborne2Function(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10190= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackWatson()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10191= org.apache.commons.math3.fitting.leastsquares.MinpackTest.LinearFullRankFunction:LinearFullRankFunction(int, int, double, double, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10192= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MinpackFunction:setParamsAccuracy(double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10193= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MinpackFunction:checkTheoreticalMinParams(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10194= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MinpackFunction:MinpackFunction(int, double[], double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10195= org.apache.commons.math3.fitting.leastsquares.MinpackTest.RosenbrockFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10196= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackLinearRank1()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10197= org.apache.commons.math3.fitting.leastsquares.MinpackTest:Box3DimensionalFunction(int, double[], double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10198= org.apache.commons.math3.fitting.leastsquares.MinpackTest:setParamsAccuracy(double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10199= org.apache.commons.math3.fitting.leastsquares.MinpackTest.Osborne2Function:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10200= org.apache.commons.math3.fitting.leastsquares.MinpackTest.LinearFullRankFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10201= org.apache.commons.math3.fitting.leastsquares.MinpackTest.ChebyquadFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10202= org.apache.commons.math3.fitting.leastsquares.MinpackTest.LinearRank1ZeroColsAndRowsFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10203= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MinpackFunction:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10204= org.apache.commons.math3.fitting.leastsquares.MinpackTest:getN()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10205= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MinpackFunction:getTarget()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10206= org.apache.commons.math3.fitting.leastsquares.MinpackTest.HelicalValleyFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10207= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MinpackFunction:buildArray(int, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10208= org.apache.commons.math3.fitting.leastsquares.MinpackTest.JennrichSampsonFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10209= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MeyerFunction:MeyerFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10210= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MinpackFunction:getModelFunction()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10211= org.apache.commons.math3.fitting.leastsquares.MinpackTest.RosenbrockFunction:RosenbrockFunction(double[], double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10212= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MinpackFunction:getStartPoint()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10213= org.apache.commons.math3.fitting.leastsquares.MinpackTest:getModelFunction()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10214= org.apache.commons.math3.fitting.leastsquares.MinpackTest:FreudensteinRothFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10215= org.apache.commons.math3.fitting.leastsquares.MinpackTest:Osborne2Function(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10216= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MeyerFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10217= org.apache.commons.math3.fitting.leastsquares.MinpackTest:getStartPoint()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10218= org.apache.commons.math3.fitting.leastsquares.MinpackTest:BrownAlmostLinearFunction(int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10219= org.apache.commons.math3.fitting.leastsquares.MinpackTest:JennrichSampsonFunction(int, double[], double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10220= org.apache.commons.math3.fitting.leastsquares.MinpackTest.BardFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10221= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MeyerFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10222= org.apache.commons.math3.fitting.leastsquares.MinpackTest.Osborne1Function:Osborne1Function(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10223= org.apache.commons.math3.fitting.leastsquares.MinpackTest.ChebyquadFunction:ChebyquadFunction(int, int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10224= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackFreudensteinRoth()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10225= org.apache.commons.math3.fitting.leastsquares.MinpackTest:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10226= org.apache.commons.math3.fitting.leastsquares.MinpackTest.ChebyquadFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10227= org.apache.commons.math3.fitting.leastsquares.MinpackTest.PowellSingularFunction:PowellSingularFunction(double[], double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10228= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MinpackFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10229= org.apache.commons.math3.fitting.leastsquares.MinpackTest.JennrichSampsonFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10230= org.apache.commons.math3.fitting.leastsquares.MinpackTest:PowellSingularFunction(double[], double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10231= org.apache.commons.math3.fitting.leastsquares.MinpackTest:Osborne1Function(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10232= org.apache.commons.math3.fitting.leastsquares.MinpackTest.BrownAlmostLinearFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10233= org.apache.commons.math3.fitting.leastsquares.MinpackTest.BrownDennisFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10234= org.apache.commons.math3.fitting.leastsquares.MinpackTest:LinearRank1Function(int, int, double, double, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10235= org.apache.commons.math3.fitting.leastsquares.MinpackTest.RosenbrockFunction:computeValue(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10236= org.apache.commons.math3.fitting.leastsquares.MinpackTest:testMinpackLinearFullRank()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10237= org.apache.commons.math3.fitting.leastsquares.MinpackTest:getWeight()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10238= org.apache.commons.math3.fitting.leastsquares.MinpackTest.MinpackFunction:checkTheoreticalMinCost(double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10239= org.apache.commons.math3.fitting.leastsquares.MinpackTest:getTarget()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10240= org.apache.commons.math3.fitting.leastsquares.MinpackTest:MeyerFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10241= org.apache.commons.math3.fitting.leastsquares.MinpackTest.FreudensteinRothFunction:computeJacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java
10242= org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java
10243= org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java
10244= org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest:testEvents()	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java
10245= org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java
10246= org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest:testKepler()	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java
10247= org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest:testWrongDerivative()	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java
10248= org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest:testMinStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java
10249= org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest:testEventsNoConvergence()	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java
10250= org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest:testSanityChecks()	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java
10251= org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest:testIncreasingTolerance()	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java
10252= org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java
10253= org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest:testEventsErrors()	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java
10254= org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest:testBackward()	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java
10255= org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java
10256= org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java
10257= org.apache.commons.math3.analysis.DifferentiableUnivariateFunction:derivative()	/src/main/java/org/apache/commons/math3/analysis/DifferentiableUnivariateFunction.java
10258= org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorTest:testGetPoints()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorTest.java
10259= org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorTest:testIntegrate()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorTest.java
10260= org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorTest:testGetWeights()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorTest.java
10261= org.apache.commons.math3.stat.ranking.NaturalRankingTest:testDefault()	/src/test/java/org/apache/commons/math3/stat/ranking/NaturalRankingTest.java
10262= org.apache.commons.math3.stat.ranking.NaturalRankingTest:testNaNsFailed()	/src/test/java/org/apache/commons/math3/stat/ranking/NaturalRankingTest.java
10263= org.apache.commons.math3.stat.ranking.NaturalRankingTest:testNaNsMaximalTiesMinimum()	/src/test/java/org/apache/commons/math3/stat/ranking/NaturalRankingTest.java
10264= org.apache.commons.math3.stat.ranking.NaturalRankingTest:testNaNsMinimalTiesAverage()	/src/test/java/org/apache/commons/math3/stat/ranking/NaturalRankingTest.java
10265= org.apache.commons.math3.stat.ranking.NaturalRankingTest:testNoNaNsFailed()	/src/test/java/org/apache/commons/math3/stat/ranking/NaturalRankingTest.java
10266= org.apache.commons.math3.stat.ranking.NaturalRankingTest:testNaNsRemovedTiesSequential()	/src/test/java/org/apache/commons/math3/stat/ranking/NaturalRankingTest.java
10267= org.apache.commons.math3.stat.ranking.NaturalRankingTest:testNaNsAndInfs()	/src/test/java/org/apache/commons/math3/stat/ranking/NaturalRankingTest.java
10268= org.apache.commons.math3.stat.ranking.NaturalRankingTest:testNaNsMinimalTiesMaximum()	/src/test/java/org/apache/commons/math3/stat/ranking/NaturalRankingTest.java
10269= org.apache.commons.math3.stat.ranking.NaturalRankingTest:testNaNsFixedTiesRandom()	/src/test/java/org/apache/commons/math3/stat/ranking/NaturalRankingTest.java
10270= org.apache.commons.math3.genetics.ChromosomeTest:DummyChromosome(int)	/src/test/java/org/apache/commons/math3/genetics/ChromosomeTest.java
10271= org.apache.commons.math3.genetics.ChromosomeTest:testFindSameChromosome()	/src/test/java/org/apache/commons/math3/genetics/ChromosomeTest.java
10272= org.apache.commons.math3.genetics.ChromosomeTest:nextGeneration()	/src/test/java/org/apache/commons/math3/genetics/ChromosomeTest.java
10273= org.apache.commons.math3.genetics.ChromosomeTest.DummyChromosome:DummyChromosome(int)	/src/test/java/org/apache/commons/math3/genetics/ChromosomeTest.java
10274= org.apache.commons.math3.genetics.ChromosomeTest:isSame(Chromosome)	/src/test/java/org/apache/commons/math3/genetics/ChromosomeTest.java
10275= org.apache.commons.math3.genetics.ChromosomeTest:testCompareTo()	/src/test/java/org/apache/commons/math3/genetics/ChromosomeTest.java
10276= org.apache.commons.math3.genetics.ChromosomeTest.DummyChromosome:isSame(Chromosome)	/src/test/java/org/apache/commons/math3/genetics/ChromosomeTest.java
10277= org.apache.commons.math3.genetics.ChromosomeTest:fitness()	/src/test/java/org/apache/commons/math3/genetics/ChromosomeTest.java
10278= org.apache.commons.math3.genetics.Fitness:fitness()	/src/main/java/org/apache/commons/math3/genetics/Fitness.java
10279= org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:SymmetricGaussIntegrator(double[], double[])	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/SymmetricGaussIntegrator.java
10280= org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:SymmetricGaussIntegrator(Pair<double[],double[]>)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/SymmetricGaussIntegrator.java
10281= org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:integrate(UnivariateFunction)	/src/main/java/org/apache/commons/math3/analysis/integration/gauss/SymmetricGaussIntegrator.java
10282= org.apache.commons.math3.util.ArithmeticUtilsTest:testGcd()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10283= org.apache.commons.math3.util.ArithmeticUtilsTest:testSubAndCheck()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10284= org.apache.commons.math3.util.ArithmeticUtilsTest:testSubAndCheckErrorMessage()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10285= org.apache.commons.math3.util.ArithmeticUtilsTest:testSubAndCheckLongFailure(long, long)	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10286= org.apache.commons.math3.util.ArithmeticUtilsTest:testPowNegativeLong()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10287= org.apache.commons.math3.util.ArithmeticUtilsTest:testPowMinusOneLong()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10288= org.apache.commons.math3.util.ArithmeticUtilsTest:testPowNegativeIntOverflow()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10289= org.apache.commons.math3.util.ArithmeticUtilsTest:testPow()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10290= org.apache.commons.math3.util.ArithmeticUtilsTest:testMulAndCheckLong()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10291= org.apache.commons.math3.util.ArithmeticUtilsTest:testLcm()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10292= org.apache.commons.math3.util.ArithmeticUtilsTest:testGcdConsistency()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10293= org.apache.commons.math3.util.ArithmeticUtilsTest:testGcdLong()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10294= org.apache.commons.math3.util.ArithmeticUtilsTest:testLcmLong()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10295= org.apache.commons.math3.util.ArithmeticUtilsTest:testSubAndCheckLong()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10296= org.apache.commons.math3.util.ArithmeticUtilsTest:testIsPowerOfTwo()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10297= org.apache.commons.math3.util.ArithmeticUtilsTest:testMulAndCheck()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10298= org.apache.commons.math3.util.ArithmeticUtilsTest:testPowOneInt()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10299= org.apache.commons.math3.util.ArithmeticUtilsTest:testAddAndCheck()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10300= org.apache.commons.math3.util.ArithmeticUtilsTest:testPowMinusOneInt()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10301= org.apache.commons.math3.util.ArithmeticUtilsTest:testAddAndCheckLong()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10302= org.apache.commons.math3.util.ArithmeticUtilsTest:testAddAndCheckLongFailure(long, long)	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10303= org.apache.commons.math3.util.ArithmeticUtilsTest:testPowIntOverflow()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10304= org.apache.commons.math3.util.ArithmeticUtilsTest:testMulAndCheckLongFailure(long, long)	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10305= org.apache.commons.math3.util.ArithmeticUtilsTest:testPowLongOverflow()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10306= org.apache.commons.math3.util.ArithmeticUtilsTest:testPowNegativeInt()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10307= org.apache.commons.math3.util.ArithmeticUtilsTest:testPowOneLong()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10308= org.apache.commons.math3.util.ArithmeticUtilsTest:testPowLong()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10309= org.apache.commons.math3.util.ArithmeticUtilsTest:testPowNegativeLongOverflow()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10310= org.apache.commons.math3.util.ArithmeticUtilsTest:testPowInt()	/src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java
10311= org.apache.commons.math3.distribution.TDistributionTest:testPreconditions()	/src/test/java/org/apache/commons/math3/distribution/TDistributionTest.java
10312= org.apache.commons.math3.distribution.TDistributionTest:nistData()	/src/test/java/org/apache/commons/math3/distribution/TDistributionTest.java
10313= org.apache.commons.math3.distribution.TDistributionTest:testSmallDf()	/src/test/java/org/apache/commons/math3/distribution/TDistributionTest.java
10314= org.apache.commons.math3.distribution.TDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/TDistributionTest.java
10315= org.apache.commons.math3.distribution.TDistributionTest:testDfAccessors()	/src/test/java/org/apache/commons/math3/distribution/TDistributionTest.java
10316= org.apache.commons.math3.distribution.TDistributionTest:testCumulativeProbabilityAgainstStackOverflow()	/src/test/java/org/apache/commons/math3/distribution/TDistributionTest.java
10317= org.apache.commons.math3.distribution.TDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/TDistributionTest.java
10318= org.apache.commons.math3.distribution.TDistributionTest:testInverseCumulativeProbabilityExtremes()	/src/test/java/org/apache/commons/math3/distribution/TDistributionTest.java
10319= org.apache.commons.math3.distribution.TDistributionTest:makeNistResults(double[], int)	/src/test/java/org/apache/commons/math3/distribution/TDistributionTest.java
10320= org.apache.commons.math3.distribution.TDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/TDistributionTest.java
10321= org.apache.commons.math3.distribution.TDistributionTest:setUp()	/src/test/java/org/apache/commons/math3/distribution/TDistributionTest.java
10322= org.apache.commons.math3.distribution.TDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/TDistributionTest.java
10323= org.apache.commons.math3.distribution.TDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/TDistributionTest.java
10324= org.apache.commons.math3.linear.LUDecompositionTest:testUUpperTriangular()	/src/test/java/org/apache/commons/math3/linear/LUDecompositionTest.java
10325= org.apache.commons.math3.linear.LUDecompositionTest:testNonSquare()	/src/test/java/org/apache/commons/math3/linear/LUDecompositionTest.java
10326= org.apache.commons.math3.linear.LUDecompositionTest:testSingular()	/src/test/java/org/apache/commons/math3/linear/LUDecompositionTest.java
10327= org.apache.commons.math3.linear.LUDecompositionTest:testMatricesValues2()	/src/test/java/org/apache/commons/math3/linear/LUDecompositionTest.java
10328= org.apache.commons.math3.linear.LUDecompositionTest:testPPermutation()	/src/test/java/org/apache/commons/math3/linear/LUDecompositionTest.java
10329= org.apache.commons.math3.linear.LUDecompositionTest:testMatricesValues1()	/src/test/java/org/apache/commons/math3/linear/LUDecompositionTest.java
10330= org.apache.commons.math3.linear.LUDecompositionTest:testDimensions()	/src/test/java/org/apache/commons/math3/linear/LUDecompositionTest.java
10331= org.apache.commons.math3.linear.LUDecompositionTest:testLLowerTriangular()	/src/test/java/org/apache/commons/math3/linear/LUDecompositionTest.java
10332= org.apache.commons.math3.linear.LUDecompositionTest:testPAEqualLU()	/src/test/java/org/apache/commons/math3/linear/LUDecompositionTest.java
10333= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest:testQuinticFunction()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonFormTest.java
10334= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest:testParameters()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonFormTest.java
10335= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest:testDerivative()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonFormTest.java
10336= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest:testLinearFunction()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonFormTest.java
10337= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest:testQuadraticFunction()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonFormTest.java
10338= org.apache.commons.math3.ode.TestProblem4:Bounce()	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10339= org.apache.commons.math3.ode.TestProblem4.Bounce:Bounce()	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10340= org.apache.commons.math3.ode.TestProblem4.Bounce:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10341= org.apache.commons.math3.ode.TestProblem4.Stop:Stop()	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10342= org.apache.commons.math3.ode.TestProblem4.Bounce:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10343= org.apache.commons.math3.ode.TestProblem4:computeTheoreticalState(double)	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10344= org.apache.commons.math3.ode.TestProblem4:TestProblem4()	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10345= org.apache.commons.math3.ode.TestProblem4:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10346= org.apache.commons.math3.ode.TestProblem4:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10347= org.apache.commons.math3.ode.TestProblem4.Stop:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10348= org.apache.commons.math3.ode.TestProblem4:Stop()	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10349= org.apache.commons.math3.ode.TestProblem4:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10350= org.apache.commons.math3.ode.TestProblem4.Bounce:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10351= org.apache.commons.math3.ode.TestProblem4.Stop:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10352= org.apache.commons.math3.ode.TestProblem4:doComputeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10353= org.apache.commons.math3.ode.TestProblem4.Stop:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10354= org.apache.commons.math3.ode.TestProblem4:TestProblem4(TestProblem4)	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10355= org.apache.commons.math3.ode.TestProblem4:getEventsHandlers()	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10356= org.apache.commons.math3.ode.TestProblem4:getTheoreticalEventsTimes()	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10357= org.apache.commons.math3.ode.TestProblem4.Bounce:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10358= org.apache.commons.math3.ode.TestProblem4.Stop:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10359= org.apache.commons.math3.ode.TestProblem4:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10360= org.apache.commons.math3.ode.TestProblem4:copy()	/src/test/java/org/apache/commons/math3/ode/TestProblem4.java
10361= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator.Corrector:visit(int, int, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java
10362= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator:integrate(ExpandableStatefulODE, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java
10363= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator:AdamsMoultonIntegrator(int, double, double, double, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java
10364= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator:visit(int, int, double)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java
10365= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator:end()	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java
10366= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator:start(int, int, int, int, int, int)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java
10367= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator.Corrector:Corrector(double[], double[], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java
10368= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator:AdamsMoultonIntegrator(int, double, double, double[], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java
10369= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator:Corrector(double[], double[], double[])	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java
10370= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator.Corrector:start(int, int, int, int, int, int)	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java
10371= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator.Corrector:end()	/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java
10372= org.apache.commons.math3.linear.QRSolverTest:testUnderdetermined()	/src/test/java/org/apache/commons/math3/linear/QRSolverTest.java
10373= org.apache.commons.math3.linear.QRSolverTest:visit(int, int, double)	/src/test/java/org/apache/commons/math3/linear/QRSolverTest.java
10374= org.apache.commons.math3.linear.QRSolverTest:testRank()	/src/test/java/org/apache/commons/math3/linear/QRSolverTest.java
10375= org.apache.commons.math3.linear.QRSolverTest:testSolveDimensionErrors()	/src/test/java/org/apache/commons/math3/linear/QRSolverTest.java
10376= org.apache.commons.math3.linear.QRSolverTest:testSolve()	/src/test/java/org/apache/commons/math3/linear/QRSolverTest.java
10377= org.apache.commons.math3.linear.QRSolverTest:createTestMatrix(Random, int, int)	/src/test/java/org/apache/commons/math3/linear/QRSolverTest.java
10378= org.apache.commons.math3.linear.QRSolverTest:testOverdetermined()	/src/test/java/org/apache/commons/math3/linear/QRSolverTest.java
10379= org.apache.commons.math3.linear.QRSolverTest:testSolveRankErrors()	/src/test/java/org/apache/commons/math3/linear/QRSolverTest.java
10380= org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest:testCumulativeDensityFunction()	/src/test/java/org/apache/commons/math3/distribution/KolmogorovSmirnovDistributionTest.java
10381= org.apache.commons.math3.fraction.BigFractionFormatTest:testParseInvalidDenominator()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10382= org.apache.commons.math3.fraction.BigFractionFormatTest:getLocale()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10383= org.apache.commons.math3.fraction.BigFractionFormatTest:testParse()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10384= org.apache.commons.math3.fraction.BigFractionFormatTest:testParseInteger()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10385= org.apache.commons.math3.fraction.BigFractionFormatTest:testDoubleFormat()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10386= org.apache.commons.math3.fraction.BigFractionFormatTest:testLongFormat()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10387= org.apache.commons.math3.fraction.BigFractionFormatTest:testParseNegative()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10388= org.apache.commons.math3.fraction.BigFractionFormatTest:testParseInvalid()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10389= org.apache.commons.math3.fraction.BigFractionFormatTest:testDenominatorFormat()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10390= org.apache.commons.math3.fraction.BigFractionFormatTest:testFormatZero()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10391= org.apache.commons.math3.fraction.BigFractionFormatTest:testFormatNegative()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10392= org.apache.commons.math3.fraction.BigFractionFormatTest:testParseProperNegative()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10393= org.apache.commons.math3.fraction.BigFractionFormatTest:testFormatImproperNegative()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10394= org.apache.commons.math3.fraction.BigFractionFormatTest:testFormat()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10395= org.apache.commons.math3.fraction.BigFractionFormatTest:testWholeFormat()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10396= org.apache.commons.math3.fraction.BigFractionFormatTest:testParseProper()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10397= org.apache.commons.math3.fraction.BigFractionFormatTest:testParseProperInvalidMinus()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10398= org.apache.commons.math3.fraction.BigFractionFormatTest:testParseBig()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10399= org.apache.commons.math3.fraction.BigFractionFormatTest:setUp()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10400= org.apache.commons.math3.fraction.BigFractionFormatTest:testNumeratorFormat()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10401= org.apache.commons.math3.fraction.BigFractionFormatTest:testFormatImproper()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFormatTest.java
10402= org.apache.commons.math3.analysis.function.Cos:value(double)	/src/main/java/org/apache/commons/math3/analysis/function/Cos.java
10403= org.apache.commons.math3.analysis.function.Cos:value(DerivativeStructure)	/src/main/java/org/apache/commons/math3/analysis/function/Cos.java
10404= org.apache.commons.math3.analysis.function.Cos:derivative()	/src/main/java/org/apache/commons/math3/analysis/function/Cos.java
10405= org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest:VectorialMeanTest()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VectorialMeanTest.java
10406= org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest:testBasicStats()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VectorialMeanTest.java
10407= org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest:testSimplistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VectorialMeanTest.java
10408= org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest:testMismatch()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VectorialMeanTest.java
10409= org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest:testSerial()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/VectorialMeanTest.java
10410= org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest:testMoreThanOnePeriodCoverage()	/src/test/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolatorTest.java
10411= org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest:testTooFewSamples()	/src/test/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolatorTest.java
10412= org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest:testSine()	/src/test/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolatorTest.java
10413= org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest:testLessThanOnePeriodCoverage()	/src/test/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolatorTest.java
10414= org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest:testUnsortedSamples()	/src/test/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolatorTest.java
10415= org.apache.commons.math3.optimization.general.RandomCirclePointGenerator:RandomCirclePointGenerator(double, double, double, double, double, long)	/src/test/java/org/apache/commons/math3/optimization/general/RandomCirclePointGenerator.java
10416= org.apache.commons.math3.optimization.general.RandomCirclePointGenerator:create()	/src/test/java/org/apache/commons/math3/optimization/general/RandomCirclePointGenerator.java
10417= org.apache.commons.math3.optimization.general.RandomCirclePointGenerator:generate(int)	/src/test/java/org/apache/commons/math3/optimization/general/RandomCirclePointGenerator.java
10418= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testSolveAccuracySin()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10419= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testMisc()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10420= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testBracketCentered()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10421= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testSolveSin()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10422= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testNullFunction()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10423= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testBracketLow()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10424= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testSolveBadAccuracy()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10425= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testBadMaximumIterations()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10426= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testBracketSin()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10427= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testBracketLinear()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10428= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testSolveAccuracyNull()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10429= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testSolveNull()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10430= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testSolveNoRoot()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10431= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testBracketExponential()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10432= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testSolveBadEndpoints()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10433= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testBracketHigh()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10434= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testBadInitial()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10435= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testBadAdditive()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10436= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testBadEndpoints()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10437= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testBracketEndpointRoot()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10438= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:testIterationExceeded()	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10439= org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest:value(double)	/src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java
10440= org.apache.commons.math3.optim.linear.SimplexSolverTest:testDegeneracy()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10441= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath434NegativeVariable()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10442= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath781()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10443= org.apache.commons.math3.optim.linear.SimplexSolverTest:testTrivialModel()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10444= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath434PivotRowSelection()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10445= org.apache.commons.math3.optim.linear.SimplexSolverTest:testRestrictVariablesToNonNegative()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10446= org.apache.commons.math3.optim.linear.SimplexSolverTest:testLargeModel()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10447= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath434UnfeasibleSolution()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10448= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath930()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10449= org.apache.commons.math3.optim.linear.SimplexSolverTest:createMath930Constraints()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10450= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMinimization()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10451= org.apache.commons.math3.optim.linear.SimplexSolverTest:testSolutionCallback()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10452= org.apache.commons.math3.optim.linear.SimplexSolverTest:validSolution(PointValuePair, List<LinearConstraint>, double)	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10453= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath434PivotRowSelection2()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10454= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath288()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10455= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath286()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10456= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath828Cycle()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10457= org.apache.commons.math3.optim.linear.SimplexSolverTest:testModelWithNoArtificialVars()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10458= org.apache.commons.math3.optim.linear.SimplexSolverTest:testEpsilon()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10459= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath713NegativeVariable()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10460= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath842Cycle()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10461= org.apache.commons.math3.optim.linear.SimplexSolverTest:testUnboundedSolution()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10462= org.apache.commons.math3.optim.linear.SimplexSolverTest:testSolutionWithNegativeDecisionVariable()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10463= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath290GEQ()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10464= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath290LEQ()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10465= org.apache.commons.math3.optim.linear.SimplexSolverTest:testInfeasibleSolution()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10466= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath272()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10467= org.apache.commons.math3.optim.linear.SimplexSolverTest:testSingleVariableAndConstraint()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10468= org.apache.commons.math3.optim.linear.SimplexSolverTest:equationFromString(int, String)	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10469= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath293()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10470= org.apache.commons.math3.optim.linear.SimplexSolverTest:testSimplexSolver()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10471= org.apache.commons.math3.optim.linear.SimplexSolverTest:testMath828()	/src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java
10472= org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest:testAccessors()	/src/test/java/org/apache/commons/math3/exception/NumberIsTooSmallExceptionTest.java
10473= org.apache.commons.math3.geometry.euclidean.threed.Euclidean3DTest:testSubSpace()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Euclidean3DTest.java
10474= org.apache.commons.math3.geometry.euclidean.threed.Euclidean3DTest:testSerialization()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Euclidean3DTest.java
10475= org.apache.commons.math3.geometry.euclidean.threed.Euclidean3DTest:testDimension()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Euclidean3DTest.java
10476= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest:testQuadraticFunction()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java
10477= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest:testLinearFunction()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java
10478= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest:testParameters()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java
10479= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest:testQuinticFunction()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java
10480= org.apache.commons.math3.analysis.integration.gauss.HermiteTest:testNormalMean()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/HermiteTest.java
10481= org.apache.commons.math3.analysis.integration.gauss.HermiteTest:testNormalDistribution()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/HermiteTest.java
10482= org.apache.commons.math3.analysis.integration.gauss.HermiteTest:value(double)	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/HermiteTest.java
10483= org.apache.commons.math3.analysis.integration.gauss.HermiteTest:testNormalVariance()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/HermiteTest.java
10484= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest:testMinStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegratorTest.java
10485= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest:testIncreasingTolerance()	/src/test/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegratorTest.java
10486= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest:exceedMaxEvaluations()	/src/test/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegratorTest.java
10487= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest:backward()	/src/test/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegratorTest.java
10488= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest:polynomial()	/src/test/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegratorTest.java
10489= org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest:dimensionCheck()	/src/test/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegratorTest.java
10490= org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest:testEqualsAndHashCode()	/src/test/java/org/apache/commons/math3/stat/descriptive/StatisticalSummaryValuesTest.java
10491= org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest:verifyEquality(StatisticalSummaryValues, StatisticalSummaryValues)	/src/test/java/org/apache/commons/math3/stat/descriptive/StatisticalSummaryValuesTest.java
10492= org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest:testSerialization()	/src/test/java/org/apache/commons/math3/stat/descriptive/StatisticalSummaryValuesTest.java
10493= org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest:testToString()	/src/test/java/org/apache/commons/math3/stat/descriptive/StatisticalSummaryValuesTest.java
10494= org.apache.commons.math3.random.AbstractRandomGeneratorTest:makeGenerator()	/src/test/java/org/apache/commons/math3/random/AbstractRandomGeneratorTest.java
10495= org.apache.commons.math3.random.AbstractRandomGeneratorTest:AbstractRandomGeneratorTest()	/src/test/java/org/apache/commons/math3/random/AbstractRandomGeneratorTest.java
10496= org.apache.commons.math3.genetics.CycleCrossoverTest:testCrossoverDimensionMismatchException()	/src/test/java/org/apache/commons/math3/genetics/CycleCrossoverTest.java
10497= org.apache.commons.math3.genetics.CycleCrossoverTest:testCrossoverInvalidFixedLengthChromosomeSecond()	/src/test/java/org/apache/commons/math3/genetics/CycleCrossoverTest.java
10498= org.apache.commons.math3.genetics.CycleCrossoverTest:testCrossoverExample2()	/src/test/java/org/apache/commons/math3/genetics/CycleCrossoverTest.java
10499= org.apache.commons.math3.genetics.CycleCrossoverTest:testCrossoverExample()	/src/test/java/org/apache/commons/math3/genetics/CycleCrossoverTest.java
10500= org.apache.commons.math3.genetics.CycleCrossoverTest:fitness()	/src/test/java/org/apache/commons/math3/genetics/CycleCrossoverTest.java
10501= org.apache.commons.math3.genetics.CycleCrossoverTest:testCrossover()	/src/test/java/org/apache/commons/math3/genetics/CycleCrossoverTest.java
10502= org.apache.commons.math3.genetics.CycleCrossoverTest:testCrossoverInvalidFixedLengthChromosomeFirst()	/src/test/java/org/apache/commons/math3/genetics/CycleCrossoverTest.java
10503= org.apache.commons.math3.fitting.PolynomialCurveFitter:PolynomialCurveFitter(double[], int)	/src/main/java/org/apache/commons/math3/fitting/PolynomialCurveFitter.java
10504= org.apache.commons.math3.fitting.PolynomialCurveFitter:create(int)	/src/main/java/org/apache/commons/math3/fitting/PolynomialCurveFitter.java
10505= org.apache.commons.math3.fitting.PolynomialCurveFitter:withStartPoint(double[])	/src/main/java/org/apache/commons/math3/fitting/PolynomialCurveFitter.java
10506= org.apache.commons.math3.fitting.PolynomialCurveFitter:withMaxIterations(int)	/src/main/java/org/apache/commons/math3/fitting/PolynomialCurveFitter.java
10507= org.apache.commons.math3.fitting.PolynomialCurveFitter:getProblem(Collection<WeightedObservedPoint>)	/src/main/java/org/apache/commons/math3/fitting/PolynomialCurveFitter.java
10508= org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest:testMath891Matrix()	/src/test/java/org/apache/commons/math3/stat/correlation/SpearmansRankCorrelationTest.java
10509= org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest:testSwiss()	/src/test/java/org/apache/commons/math3/stat/correlation/SpearmansRankCorrelationTest.java
10510= org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest:testInsufficientData()	/src/test/java/org/apache/commons/math3/stat/correlation/SpearmansRankCorrelationTest.java
10511= org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest:testLongly()	/src/test/java/org/apache/commons/math3/stat/correlation/SpearmansRankCorrelationTest.java
10512= org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest:testCovarianceConsistency()	/src/test/java/org/apache/commons/math3/stat/correlation/SpearmansRankCorrelationTest.java
10513= org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest:testMath891Array()	/src/test/java/org/apache/commons/math3/stat/correlation/SpearmansRankCorrelationTest.java
10514= org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest:testStdErrorConsistency()	/src/test/java/org/apache/commons/math3/stat/correlation/SpearmansRankCorrelationTest.java
10515= org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest:testConstant()	/src/test/java/org/apache/commons/math3/stat/correlation/SpearmansRankCorrelationTest.java
10516= org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest:testConsistency()	/src/test/java/org/apache/commons/math3/stat/correlation/SpearmansRankCorrelationTest.java
10517= org.apache.commons.math3.ml.neuralnet.UpdateAction:update(Network, double[])	/src/main/java/org/apache/commons/math3/ml/neuralnet/UpdateAction.java
10518= org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactoryTest:testQuasiSigmoidDecayPrecondition1()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunctionFactoryTest.java
10519= org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactoryTest:testExponentialDecayPrecondition1()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunctionFactoryTest.java
10520= org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactoryTest:testQuasiSigmoidDecayPrecondition4()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunctionFactoryTest.java
10521= org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactoryTest:testExponentialDecayPrecondition2()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunctionFactoryTest.java
10522= org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactoryTest:testQuasiSigmoidDecayPrecondition3()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunctionFactoryTest.java
10523= org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactoryTest:testExponentialDecayTrivial()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunctionFactoryTest.java
10524= org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactoryTest:testQuasiSigmoidDecayTrivial()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunctionFactoryTest.java
10525= org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactoryTest:testExponentialDecayPrecondition3()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunctionFactoryTest.java
10526= org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactoryTest:testExponentialDecayPrecondition4()	/src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunctionFactoryTest.java
10527= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:testAddToEntry()	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10528= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:testSetSubVector()	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10529= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:equals(double, double)	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10530= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:equals(RealVector, RealVector)	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10531= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:testGetEntry()	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10532= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:testSparseIterator()	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10533= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:createParameter(Class<?>)	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10534= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:equals(RealVector, double[])	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10535= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:testSetEntry()	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10536= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:testGetSubVector()	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10537= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:testIterator()	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10538= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:equals(double[], double[])	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10539= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:callMethod(Method, RealVector, Object)	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10540= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:testAllButExcluded()	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10541= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:equals(Object, Object)	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10542= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:createVector()	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10543= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:equals(RealMatrix, RealMatrix)	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10544= org.apache.commons.math3.linear.UnmodifiableRealVectorAbstractTest:<clinit0>	/src/test/java/org/apache/commons/math3/linear/UnmodifiableRealVectorAbstractTest.java
10545= org.apache.commons.math3.fraction.FractionTest:testNegate()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10546= org.apache.commons.math3.fraction.FractionTest:checkIntegerOverflow(double)	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10547= org.apache.commons.math3.fraction.FractionTest:testAbs()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10548= org.apache.commons.math3.fraction.FractionTest:testEqualsAndHashCode()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10549= org.apache.commons.math3.fraction.FractionTest:testToString()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10550= org.apache.commons.math3.fraction.FractionTest:testIntValue()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10551= org.apache.commons.math3.fraction.FractionTest:testLongValue()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10552= org.apache.commons.math3.fraction.FractionTest:testFloatValue()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10553= org.apache.commons.math3.fraction.FractionTest:testDivide()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10554= org.apache.commons.math3.fraction.FractionTest:testGetReducedFraction()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10555= org.apache.commons.math3.fraction.FractionTest:testConstructorDouble()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10556= org.apache.commons.math3.fraction.FractionTest:testMath835()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10557= org.apache.commons.math3.fraction.FractionTest:testCompareTo()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10558= org.apache.commons.math3.fraction.FractionTest:testGoldenRatio()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10559= org.apache.commons.math3.fraction.FractionTest:testMultiply()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10560= org.apache.commons.math3.fraction.FractionTest:testSerial()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10561= org.apache.commons.math3.fraction.FractionTest:testSubtract()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10562= org.apache.commons.math3.fraction.FractionTest:testDoubleValue()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10563= org.apache.commons.math3.fraction.FractionTest:testDigitLimitConstructor()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10564= org.apache.commons.math3.fraction.FractionTest:testConstructor()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10565= org.apache.commons.math3.fraction.FractionTest:testDoubleConstructor()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10566= org.apache.commons.math3.fraction.FractionTest:testIntegerOverflow()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10567= org.apache.commons.math3.fraction.FractionTest:testEpsilonLimitConstructor()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10568= org.apache.commons.math3.fraction.FractionTest:testPercentage()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10569= org.apache.commons.math3.fraction.FractionTest:testAdd()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10570= org.apache.commons.math3.fraction.FractionTest:assertFraction(int, int, Fraction)	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10571= org.apache.commons.math3.fraction.FractionTest:testReciprocal()	/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
10572= org.apache.commons.math3.analysis.BivariateFunction:value(double, double)	/src/main/java/org/apache/commons/math3/analysis/BivariateFunction.java
10573= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatTest:getLocale()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatTest.java
10574= org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormatTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormatTest.java
10575= org.apache.commons.math3.optimization.fitting.CurveFitterTest:gradient(double, double)	/src/test/java/org/apache/commons/math3/optimization/fitting/CurveFitterTest.java
10576= org.apache.commons.math3.optimization.fitting.CurveFitterTest:testMath372()	/src/test/java/org/apache/commons/math3/optimization/fitting/CurveFitterTest.java
10577= org.apache.commons.math3.optimization.fitting.CurveFitterTest:value(double, double)	/src/test/java/org/apache/commons/math3/optimization/fitting/CurveFitterTest.java
10578= org.apache.commons.math3.optimization.fitting.CurveFitterTest.SimpleInverseFunction:gradient(double, double)	/src/test/java/org/apache/commons/math3/optimization/fitting/CurveFitterTest.java
10579= org.apache.commons.math3.optimization.fitting.CurveFitterTest:testMath303()	/src/test/java/org/apache/commons/math3/optimization/fitting/CurveFitterTest.java
10580= org.apache.commons.math3.optimization.fitting.CurveFitterTest.SimpleInverseFunction:value(double, double)	/src/test/java/org/apache/commons/math3/optimization/fitting/CurveFitterTest.java
10581= org.apache.commons.math3.optimization.fitting.CurveFitterTest:testMath304()	/src/test/java/org/apache/commons/math3/optimization/fitting/CurveFitterTest.java
10582= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest.BiQuadratic:getLower()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10583= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest.BiQuadratic:getBoundedYOptimum()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10584= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest:testHalfBounded()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10585= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest:testStartSimplexOutsideRange()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10586= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest:getLower()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10587= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest:getBoundedXOptimum()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10588= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest.BiQuadratic:getBoundedXOptimum()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10589= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10590= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest:BiQuadratic(double, double, double, double, double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10591= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest:testUnbounded()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10592= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest:testOptimumOutsideRange()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10593= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest.BiQuadratic:BiQuadratic(double, double, double, double, double, double)	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10594= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest.BiQuadratic:value(double[])	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10595= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest:getBoundedYOptimum()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10596= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest:testStartSimplexInsideRange()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10597= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest:getUpper()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10598= org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest.BiQuadratic:getUpper()	/src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java
10599= org.apache.commons.math3.stat.interval.AgrestiCoullIntervalTest:testStandardInterval()	/src/test/java/org/apache/commons/math3/stat/interval/AgrestiCoullIntervalTest.java
10600= org.apache.commons.math3.stat.interval.AgrestiCoullIntervalTest:createBinomialConfidenceInterval()	/src/test/java/org/apache/commons/math3/stat/interval/AgrestiCoullIntervalTest.java
10601= org.apache.commons.math3.fitting.leastsquares.EvaluationTestValidation:builder(StraightLineProblem)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTestValidation.java
10602= org.apache.commons.math3.fitting.leastsquares.EvaluationTestValidation:testParametersErrorMonteCarloParameters()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTestValidation.java
10603= org.apache.commons.math3.fitting.leastsquares.EvaluationTestValidation:getChi2N(LeastSquaresProblem, RealVector)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTestValidation.java
10604= org.apache.commons.math3.fitting.leastsquares.EvaluationTestValidation:testParametersErrorMonteCarloObservations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTestValidation.java
10605= org.apache.commons.math3.distribution.LevyDistributionTest:testSupport()	/src/test/java/org/apache/commons/math3/distribution/LevyDistributionTest.java
10606= org.apache.commons.math3.distribution.LevyDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/LevyDistributionTest.java
10607= org.apache.commons.math3.distribution.LevyDistributionTest:makeLogDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/LevyDistributionTest.java
10608= org.apache.commons.math3.distribution.LevyDistributionTest:testParameters()	/src/test/java/org/apache/commons/math3/distribution/LevyDistributionTest.java
10609= org.apache.commons.math3.distribution.LevyDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/LevyDistributionTest.java
10610= org.apache.commons.math3.distribution.LevyDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/LevyDistributionTest.java
10611= org.apache.commons.math3.distribution.LevyDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/LevyDistributionTest.java
10612= org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest:testAccessors()	/src/test/java/org/apache/commons/math3/exception/NotStrictlyPositiveExceptionTest.java
10613= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest:testLinearFunction2D()	/src/test/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatorTest.java
10614= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest:testParaboloid2D()	/src/test/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatorTest.java
10615= org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest:value(double[])	/src/test/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatorTest.java
10616= org.apache.commons.math3.ode.TestProblem3:TestProblem3()	/src/test/java/org/apache/commons/math3/ode/TestProblem3.java
10617= org.apache.commons.math3.ode.TestProblem3:TestProblem3(double)	/src/test/java/org/apache/commons/math3/ode/TestProblem3.java
10618= org.apache.commons.math3.ode.TestProblem3:computeTheoreticalState(double)	/src/test/java/org/apache/commons/math3/ode/TestProblem3.java
10619= org.apache.commons.math3.ode.TestProblem3:TestProblem3(TestProblem3)	/src/test/java/org/apache/commons/math3/ode/TestProblem3.java
10620= org.apache.commons.math3.ode.TestProblem3:copy()	/src/test/java/org/apache/commons/math3/ode/TestProblem3.java
10621= org.apache.commons.math3.ode.TestProblem3:doComputeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/TestProblem3.java
10622= org.apache.commons.math3.distribution.RealDistributionAbstractTest:testCumulativeProbabilities()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10623= org.apache.commons.math3.distribution.RealDistributionAbstractTest:getCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10624= org.apache.commons.math3.distribution.RealDistributionAbstractTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10625= org.apache.commons.math3.distribution.RealDistributionAbstractTest:getInverseCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10626= org.apache.commons.math3.distribution.RealDistributionAbstractTest:testIsSupportLowerBoundInclusive()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10627= org.apache.commons.math3.distribution.RealDistributionAbstractTest:verifyCumulativeProbabilities()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10628= org.apache.commons.math3.distribution.RealDistributionAbstractTest:verifyDensities()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10629= org.apache.commons.math3.distribution.RealDistributionAbstractTest:getTolerance()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10630= org.apache.commons.math3.distribution.RealDistributionAbstractTest:setInverseCumulativeTestPoints(double[])	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10631= org.apache.commons.math3.distribution.RealDistributionAbstractTest:value(double)	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10632= org.apache.commons.math3.distribution.RealDistributionAbstractTest:getDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10633= org.apache.commons.math3.distribution.RealDistributionAbstractTest:getDistribution()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10634= org.apache.commons.math3.distribution.RealDistributionAbstractTest:getInverseCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10635= org.apache.commons.math3.distribution.RealDistributionAbstractTest:setCumulativeTestPoints(double[])	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10636= org.apache.commons.math3.distribution.RealDistributionAbstractTest:setDistribution(RealDistribution)	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10637= org.apache.commons.math3.distribution.RealDistributionAbstractTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10638= org.apache.commons.math3.distribution.RealDistributionAbstractTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10639= org.apache.commons.math3.distribution.RealDistributionAbstractTest:makeLogDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10640= org.apache.commons.math3.distribution.RealDistributionAbstractTest:setInverseCumulativeTestValues(double[])	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10641= org.apache.commons.math3.distribution.RealDistributionAbstractTest:testIsSupportUpperBoundInclusive()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10642= org.apache.commons.math3.distribution.RealDistributionAbstractTest:testInverseCumulativeProbabilities()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10643= org.apache.commons.math3.distribution.RealDistributionAbstractTest:testSampling()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10644= org.apache.commons.math3.distribution.RealDistributionAbstractTest:getCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10645= org.apache.commons.math3.distribution.RealDistributionAbstractTest:makeInverseCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10646= org.apache.commons.math3.distribution.RealDistributionAbstractTest:setUp()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10647= org.apache.commons.math3.distribution.RealDistributionAbstractTest:setCumulativeTestValues(double[])	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10648= org.apache.commons.math3.distribution.RealDistributionAbstractTest:makeInverseCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10649= org.apache.commons.math3.distribution.RealDistributionAbstractTest:testIllegalArguments()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10650= org.apache.commons.math3.distribution.RealDistributionAbstractTest:testLogDensities()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10651= org.apache.commons.math3.distribution.RealDistributionAbstractTest:verifyLogDensities()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10652= org.apache.commons.math3.distribution.RealDistributionAbstractTest:tearDown()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10653= org.apache.commons.math3.distribution.RealDistributionAbstractTest:verifyInverseCumulativeProbabilities()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10654= org.apache.commons.math3.distribution.RealDistributionAbstractTest:setTolerance(double)	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10655= org.apache.commons.math3.distribution.RealDistributionAbstractTest:testDensities()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10656= org.apache.commons.math3.distribution.RealDistributionAbstractTest:testDensityIntegrals()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10657= org.apache.commons.math3.distribution.RealDistributionAbstractTest:testDistributionClone()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10658= org.apache.commons.math3.distribution.RealDistributionAbstractTest:testConsistency()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10659= org.apache.commons.math3.distribution.RealDistributionAbstractTest:setDensityTestValues(double[])	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10660= org.apache.commons.math3.distribution.RealDistributionAbstractTest:deepClone()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10661= org.apache.commons.math3.distribution.RealDistributionAbstractTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java
10662= org.apache.commons.math3.util.DoubleArrayAbstractTest:testAdd1000()	/src/test/java/org/apache/commons/math3/util/DoubleArrayAbstractTest.java
10663= org.apache.commons.math3.util.DoubleArrayAbstractTest:testGetValues()	/src/test/java/org/apache/commons/math3/util/DoubleArrayAbstractTest.java
10664= org.apache.commons.math3.util.DoubleArrayAbstractTest:testMinMax()	/src/test/java/org/apache/commons/math3/util/DoubleArrayAbstractTest.java
10665= org.apache.commons.math3.util.DoubleArrayAbstractTest:testAddElementRolling()	/src/test/java/org/apache/commons/math3/util/DoubleArrayAbstractTest.java
10666= org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest:testQuinticZero()	/src/test/java/org/apache/commons/math3/analysis/solvers/NewtonRaphsonSolverTest.java
10667= org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest:testSinZero()	/src/test/java/org/apache/commons/math3/analysis/solvers/NewtonRaphsonSolverTest.java
10668= org.apache.commons.math3.linear.ArrayFieldVectorTest:dotProduct(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10669= org.apache.commons.math3.linear.ArrayFieldVectorTest:testWalkInOptimizedOrderChangingVisitor2()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10670= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:dotProduct(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10671= org.apache.commons.math3.linear.ArrayFieldVectorTest:set(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10672= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:buildArray(int)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10673= org.apache.commons.math3.linear.ArrayFieldVectorTest:start(int, int, int)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10674= org.apache.commons.math3.linear.ArrayFieldVectorTest:testMisc()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10675= org.apache.commons.math3.linear.ArrayFieldVectorTest:dotProduct(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10676= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:append(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10677= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:mapSubtract(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10678= org.apache.commons.math3.linear.ArrayFieldVectorTest:testZeroVectors()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10679= org.apache.commons.math3.linear.ArrayFieldVectorTest:append(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10680= org.apache.commons.math3.linear.ArrayFieldVectorTest:outerProduct(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10681= org.apache.commons.math3.linear.ArrayFieldVectorTest:getEntry(int)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10682= org.apache.commons.math3.linear.ArrayFieldVectorTest:getField()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10683= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:mapDivide(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10684= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:mapDivideToSelf(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10685= org.apache.commons.math3.linear.ArrayFieldVectorTest:setSubVector(int, T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10686= org.apache.commons.math3.linear.ArrayFieldVectorTest:testMapFunctions()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10687= org.apache.commons.math3.linear.ArrayFieldVectorTest:mapSubtractToSelf(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10688= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:ebeMultiply(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10689= org.apache.commons.math3.linear.ArrayFieldVectorTest:toArray()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10690= org.apache.commons.math3.linear.ArrayFieldVectorTest:testWalkInDefaultOrderPreservingVisitor2()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10691= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:ebeDivide(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10692= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:getSubVector(int, int)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10693= org.apache.commons.math3.linear.ArrayFieldVectorTest:mapAddToSelf(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10694= org.apache.commons.math3.linear.ArrayFieldVectorTest:end()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10695= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:unsupported()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10696= org.apache.commons.math3.linear.ArrayFieldVectorTest:testWalkInOptimizedOrderChangingVisitor3()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10697= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:FieldVectorTestImpl(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10698= org.apache.commons.math3.linear.ArrayFieldVectorTest:testWalkInDefaultOrderChangingVisitor1()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10699= org.apache.commons.math3.linear.ArrayFieldVectorTest:testWalkInOptimizedOrderPreservingVisitor3()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10700= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:subtract(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10701= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:setEntry(int, T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10702= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:mapInv()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10703= org.apache.commons.math3.linear.ArrayFieldVectorTest:testOuterProduct()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10704= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:mapSubtractToSelf(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10705= org.apache.commons.math3.linear.ArrayFieldVectorTest:projection(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10706= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:projection(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10707= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:set(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10708= org.apache.commons.math3.linear.ArrayFieldVectorTest:ebeMultiply(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10709= org.apache.commons.math3.linear.ArrayFieldVectorTest:testDataInOut()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10710= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:getEntry(int)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10711= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:dotProduct(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10712= org.apache.commons.math3.linear.ArrayFieldVectorTest:visit(int, Fraction)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10713= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:mapMultiplyToSelf(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10714= org.apache.commons.math3.linear.ArrayFieldVectorTest:mapInv()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10715= org.apache.commons.math3.linear.ArrayFieldVectorTest:append(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10716= org.apache.commons.math3.linear.ArrayFieldVectorTest:copy()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10717= org.apache.commons.math3.linear.ArrayFieldVectorTest:testWalkInDefaultOrderPreservingVisitor3()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10718= org.apache.commons.math3.linear.ArrayFieldVectorTest:ebeDivide(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10719= org.apache.commons.math3.linear.ArrayFieldVectorTest:getDimension()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10720= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:outerProduct(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10721= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:setSubVector(int, T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10722= org.apache.commons.math3.linear.ArrayFieldVectorTest:add(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10723= org.apache.commons.math3.linear.ArrayFieldVectorTest:testWalkInDefaultOrderChangingVisitor2()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10724= org.apache.commons.math3.linear.ArrayFieldVectorTest:FieldVectorTestImpl(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10725= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:getField()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10726= org.apache.commons.math3.linear.ArrayFieldVectorTest:outerProduct(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10727= org.apache.commons.math3.linear.ArrayFieldVectorTest:mapDivideToSelf(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10728= org.apache.commons.math3.linear.ArrayFieldVectorTest:testWalkInOptimizedOrderPreservingVisitor2()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10729= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:mapMultiply(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10730= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:ebeMultiply(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10731= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:append(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10732= org.apache.commons.math3.linear.ArrayFieldVectorTest:testSerial()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10733= org.apache.commons.math3.linear.ArrayFieldVectorTest:setSubVector(int, FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10734= org.apache.commons.math3.linear.ArrayFieldVectorTest:ebeMultiply(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10735= org.apache.commons.math3.linear.ArrayFieldVectorTest:checkArray(String, Fraction[], Fraction[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10736= org.apache.commons.math3.linear.ArrayFieldVectorTest:mapInvToSelf()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10737= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:getData()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10738= org.apache.commons.math3.linear.ArrayFieldVectorTest:testBasicFunctions()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10739= org.apache.commons.math3.linear.ArrayFieldVectorTest:testConstructors()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10740= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:mapAdd(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10741= org.apache.commons.math3.linear.ArrayFieldVectorTest:ebeDivide(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10742= org.apache.commons.math3.linear.ArrayFieldVectorTest:append(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10743= org.apache.commons.math3.linear.ArrayFieldVectorTest:mapSubtract(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10744= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:ebeDivide(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10745= org.apache.commons.math3.linear.ArrayFieldVectorTest:mapDivide(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10746= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:projection(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10747= org.apache.commons.math3.linear.ArrayFieldVectorTest:testWalkInOptimizedOrderChangingVisitor1()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10748= org.apache.commons.math3.linear.ArrayFieldVectorTest:testWalkInDefaultOrderChangingVisitor3()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10749= org.apache.commons.math3.linear.ArrayFieldVectorTest:getSubVector(int, int)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10750= org.apache.commons.math3.linear.ArrayFieldVectorTest:create(int)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10751= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:mapAddToSelf(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10752= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:append(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10753= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:subtract(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10754= org.apache.commons.math3.linear.ArrayFieldVectorTest:testWalkInOptimizedOrderPreservingVisitor1()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10755= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:getDimension()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10756= org.apache.commons.math3.linear.ArrayFieldVectorTest:getData()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10757= org.apache.commons.math3.linear.ArrayFieldVectorTest:projection(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10758= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:add(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10759= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:add(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10760= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:copy()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10761= org.apache.commons.math3.linear.ArrayFieldVectorTest:buildArray(int)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10762= org.apache.commons.math3.linear.ArrayFieldVectorTest:subtract(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10763= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:outerProduct(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10764= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:setSubVector(int, FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10765= org.apache.commons.math3.linear.ArrayFieldVectorTest:setEntry(int, T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10766= org.apache.commons.math3.linear.ArrayFieldVectorTest:add(T[])	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10767= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:mapInvToSelf()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10768= org.apache.commons.math3.linear.ArrayFieldVectorTest:testWalkInDefaultOrderPreservingVisitor1()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10769= org.apache.commons.math3.linear.ArrayFieldVectorTest.FieldVectorTestImpl:toArray()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10770= org.apache.commons.math3.linear.ArrayFieldVectorTest:mapAdd(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10771= org.apache.commons.math3.linear.ArrayFieldVectorTest:unsupported()	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10772= org.apache.commons.math3.linear.ArrayFieldVectorTest:subtract(FieldVector<T>)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10773= org.apache.commons.math3.linear.ArrayFieldVectorTest:mapMultiplyToSelf(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10774= org.apache.commons.math3.linear.ArrayFieldVectorTest:mapMultiply(T)	/src/test/java/org/apache/commons/math3/linear/ArrayFieldVectorTest.java
10775= org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction:value(DerivativeStructure[])	/src/main/java/org/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction.java
10776= org.apache.commons.math3.random.UniformRandomGeneratorTest:testMeanAndStandardDeviation()	/src/test/java/org/apache/commons/math3/random/UniformRandomGeneratorTest.java
10777= org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest:createDescriptiveStatistics()	/src/test/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java
10778= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:getY(int)	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10779= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:getLeastSquaresProblem()	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10780= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:getNumObservations()	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10781= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:getNumParameters()	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10782= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:StatisticalReferenceDataset(BufferedReader)	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10783= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10784= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:value(double[])	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10785= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:getName()	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10786= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:getModelValue(double, DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10787= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:getParameter(int)	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10788= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:getResidualSumOfSquares()	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10789= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:findLineNumbers(String, Iterable<String>)	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10790= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:getX(int)	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10791= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:getNumStartingPoints()	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10792= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:getStartingPoint(int)	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10793= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:getParameters()	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10794= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:getParameterStandardDeviation(int)	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10795= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:getData()	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10796= org.apache.commons.math3.optimization.general.StatisticalReferenceDataset:getParametersStandardDeviations()	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java
10797= org.apache.commons.math3.ode.nonstiff.LutherStepInterpolatorTest:derivativesConsistency()	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherStepInterpolatorTest.java
10798= org.apache.commons.math3.ode.nonstiff.LutherStepInterpolatorTest:serialization()	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherStepInterpolatorTest.java
10799= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testConstructors()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10800= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testDistanceInf()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10801= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testCoordinates()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10802= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testAngle()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10803= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testAdd()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10804= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testCrossProductCancellation()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10805= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testSubtract()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10806= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testNegate()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10807= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testAccurateCrossProduct()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10808= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testDistance()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10809= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testEquals()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10810= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testInfinite()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10811= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testDotProduct()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10812= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testAccurateDotProduct()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10813= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testNormInf()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10814= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testDistanceSq()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10815= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testVectorialProducts()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10816= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testCrossProduct()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10817= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testWrongDimension()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10818= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testAngularSeparation()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10819= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testToString()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10820= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testZero()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10821= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testNorm1()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10822= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testAngular()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10823= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testNormSq()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10824= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testNorm()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10825= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testNormalize()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10826= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testDistance1()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10827= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testOrthogonal()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10828= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testSpace()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10829= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testNaN()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10830= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testHash()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10831= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:testScalarProduct()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10832= org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest:checkVector(Vector3D, double, double, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java
10833= org.apache.commons.math3.linear.ArrayRealVectorTest:testGetDataRef()	/src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java
10834= org.apache.commons.math3.linear.ArrayRealVectorTest:testZeroVectors()	/src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java
10835= org.apache.commons.math3.linear.ArrayRealVectorTest:testConstructors()	/src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java
10836= org.apache.commons.math3.linear.ArrayRealVectorTest:testPredicates()	/src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java
10837= org.apache.commons.math3.linear.ArrayRealVectorTest:create(double[])	/src/test/java/org/apache/commons/math3/linear/ArrayRealVectorTest.java
10838= org.apache.commons.math3.stat.descriptive.moment.InteractionTest:testInteraction()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/InteractionTest.java
10839= org.apache.commons.math3.ml.neuralnet.Neuron:compareAndSetFeatures(double[], double[])	/src/main/java/org/apache/commons/math3/ml/neuralnet/Neuron.java
10840= org.apache.commons.math3.ml.neuralnet.Neuron:getSize()	/src/main/java/org/apache/commons/math3/ml/neuralnet/Neuron.java
10841= org.apache.commons.math3.ml.neuralnet.Neuron.SerializationProxy:SerializationProxy(long, double[])	/src/main/java/org/apache/commons/math3/ml/neuralnet/Neuron.java
10842= org.apache.commons.math3.ml.neuralnet.Neuron:getFeatures()	/src/main/java/org/apache/commons/math3/ml/neuralnet/Neuron.java
10843= org.apache.commons.math3.ml.neuralnet.Neuron:SerializationProxy(long, double[])	/src/main/java/org/apache/commons/math3/ml/neuralnet/Neuron.java
10844= org.apache.commons.math3.ml.neuralnet.Neuron.SerializationProxy:readResolve()	/src/main/java/org/apache/commons/math3/ml/neuralnet/Neuron.java
10845= org.apache.commons.math3.ml.neuralnet.Neuron:Neuron(long, double[])	/src/main/java/org/apache/commons/math3/ml/neuralnet/Neuron.java
10846= org.apache.commons.math3.ml.neuralnet.Neuron:containSameValues(double[], double[])	/src/main/java/org/apache/commons/math3/ml/neuralnet/Neuron.java
10847= org.apache.commons.math3.ml.neuralnet.Neuron:getIdentifier()	/src/main/java/org/apache/commons/math3/ml/neuralnet/Neuron.java
10848= org.apache.commons.math3.ml.neuralnet.Neuron:writeReplace()	/src/main/java/org/apache/commons/math3/ml/neuralnet/Neuron.java
10849= org.apache.commons.math3.ml.neuralnet.Neuron:readResolve()	/src/main/java/org/apache/commons/math3/ml/neuralnet/Neuron.java
10850= org.apache.commons.math3.ml.neuralnet.Neuron:readObject(ObjectInputStream)	/src/main/java/org/apache/commons/math3/ml/neuralnet/Neuron.java
10851= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testIllConditioned()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10852= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testInconsistentSizes2()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10853= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testNoDependency()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10854= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testInconsistentSizes1()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10855= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.LinearProblem:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10856= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testInconsistentEquations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10857= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:fail(LeastSquaresOptimizer)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10858= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:getModelFunction()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10859= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testNonInvertible()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10860= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:converged(int, Evaluation, Evaluation)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10861= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testTwoSets()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10862= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testKirby2()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10863= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:getOptimizer()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10864= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.LinearProblem:value(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10865= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.LinearProblem:getTarget()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10866= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testCircleFitting()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10867= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testCircleFittingGoodInit()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10868= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:builder(CircleVectorial)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10869= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testQRColumnsPermutation()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10870= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:getTarget()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10871= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testGetIterations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10872= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:getMaxIterations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10873= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testTrivial()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10874= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:assertEquals(double, RealVector, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10875= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.LinearProblem:LinearProblem(double[][], double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10876= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:value(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10877= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testCircleFittingBadInit()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10878= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testPointCopy()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10879= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10880= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.LinearProblem:getBuilder()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10881= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testRedundantEquations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10882= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:getBuilder()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10883= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:value(RealVector)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10884= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:doTestStRD(StatisticalReferenceDataset, LeastSquaresOptimizer, double, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10885= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testMoreEstimatedParametersUnsorted()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10886= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:builder(StatisticalReferenceDataset)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10887= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:LinearProblem(double[][], double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10888= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:base()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10889= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testHahn1()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10890= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest.LinearProblem:getModelFunction()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10891= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testMoreEstimatedParametersSimple()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10892= org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest:testOneSet()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java
10893= org.apache.commons.math3.stat.correlation.StorelessCovarianceTest:testLonglyByRow()	/src/test/java/org/apache/commons/math3/stat/correlation/StorelessCovarianceTest.java
10894= org.apache.commons.math3.stat.correlation.StorelessCovarianceTest:testLonglySimpleCov()	/src/test/java/org/apache/commons/math3/stat/correlation/StorelessCovarianceTest.java
10895= org.apache.commons.math3.stat.correlation.StorelessCovarianceTest:testSymmetry()	/src/test/java/org/apache/commons/math3/stat/correlation/StorelessCovarianceTest.java
10896= org.apache.commons.math3.stat.correlation.StorelessCovarianceTest:createRealMatrix(double[], int, int)	/src/test/java/org/apache/commons/math3/stat/correlation/StorelessCovarianceTest.java
10897= org.apache.commons.math3.stat.correlation.StorelessCovarianceTest:testSwissFertilityByRow()	/src/test/java/org/apache/commons/math3/stat/correlation/StorelessCovarianceTest.java
10898= org.apache.commons.math3.stat.correlation.StorelessCovarianceTest:testLonglySimpleVar()	/src/test/java/org/apache/commons/math3/stat/correlation/StorelessCovarianceTest.java
10899= org.apache.commons.math3.stat.correlation.StorelessCovarianceTest:testEquivalence()	/src/test/java/org/apache/commons/math3/stat/correlation/StorelessCovarianceTest.java
10900= org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest:value(double[])	/src/test/java/org/apache/commons/math3/optimization/MultivariateMultiStartOptimizerTest.java
10901= org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest:Rosenbrock()	/src/test/java/org/apache/commons/math3/optimization/MultivariateMultiStartOptimizerTest.java
10902= org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest.Rosenbrock:Rosenbrock()	/src/test/java/org/apache/commons/math3/optimization/MultivariateMultiStartOptimizerTest.java
10903= org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest:testRosenbrock()	/src/test/java/org/apache/commons/math3/optimization/MultivariateMultiStartOptimizerTest.java
10904= org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest:getCount()	/src/test/java/org/apache/commons/math3/optimization/MultivariateMultiStartOptimizerTest.java
10905= org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest.Rosenbrock:getCount()	/src/test/java/org/apache/commons/math3/optimization/MultivariateMultiStartOptimizerTest.java
10906= org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest.Rosenbrock:value(double[])	/src/test/java/org/apache/commons/math3/optimization/MultivariateMultiStartOptimizerTest.java
10907= org.apache.commons.math3.genetics.ElitisticListPopulationTest:testNextGeneration()	/src/test/java/org/apache/commons/math3/genetics/ElitisticListPopulationTest.java
10908= org.apache.commons.math3.genetics.ElitisticListPopulationTest:testChromosomeListConstructorTooHigh()	/src/test/java/org/apache/commons/math3/genetics/ElitisticListPopulationTest.java
10909= org.apache.commons.math3.genetics.ElitisticListPopulationTest:testSetElitismRate()	/src/test/java/org/apache/commons/math3/genetics/ElitisticListPopulationTest.java
10910= org.apache.commons.math3.genetics.ElitisticListPopulationTest:DummyChromosome()	/src/test/java/org/apache/commons/math3/genetics/ElitisticListPopulationTest.java
10911= org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome:DummyChromosome()	/src/test/java/org/apache/commons/math3/genetics/ElitisticListPopulationTest.java
10912= org.apache.commons.math3.genetics.ElitisticListPopulationTest:testSetElitismRateTooHigh()	/src/test/java/org/apache/commons/math3/genetics/ElitisticListPopulationTest.java
10913= org.apache.commons.math3.genetics.ElitisticListPopulationTest:testSetElitismRateTooLow()	/src/test/java/org/apache/commons/math3/genetics/ElitisticListPopulationTest.java
10914= org.apache.commons.math3.genetics.ElitisticListPopulationTest:testChromosomeListConstructorTooLow()	/src/test/java/org/apache/commons/math3/genetics/ElitisticListPopulationTest.java
10915= org.apache.commons.math3.genetics.ElitisticListPopulationTest:testConstructorTooLow()	/src/test/java/org/apache/commons/math3/genetics/ElitisticListPopulationTest.java
10916= org.apache.commons.math3.genetics.ElitisticListPopulationTest:testConstructorTooHigh()	/src/test/java/org/apache/commons/math3/genetics/ElitisticListPopulationTest.java
10917= org.apache.commons.math3.genetics.ElitisticListPopulationTest.DummyChromosome:fitness()	/src/test/java/org/apache/commons/math3/genetics/ElitisticListPopulationTest.java
10918= org.apache.commons.math3.genetics.ElitisticListPopulationTest:fitness()	/src/test/java/org/apache/commons/math3/genetics/ElitisticListPopulationTest.java
10919= org.apache.commons.math3.analysis.MultivariateMatrixFunction:value(double[])	/src/main/java/org/apache/commons/math3/analysis/MultivariateMatrixFunction.java
10920= org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest:getExpectedValue(int)	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionParametricTest.java
10921= org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest:LegendreHighPrecisionParametricTest(int, int, double, double)	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionParametricTest.java
10922= org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest:getParameters()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionParametricTest.java
10923= org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest:testIsValidPoint()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunctionTest.java
10924= org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest:testConstructor()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunctionTest.java
10925= org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest:findKnot(double[], double)	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunctionTest.java
10926= org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest:testValues()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunctionTest.java
10927= org.apache.commons.math3.stat.interval.ClopperPearsonIntervalTest:testStandardInterval()	/src/test/java/org/apache/commons/math3/stat/interval/ClopperPearsonIntervalTest.java
10928= org.apache.commons.math3.stat.interval.ClopperPearsonIntervalTest:createBinomialConfidenceInterval()	/src/test/java/org/apache/commons/math3/stat/interval/ClopperPearsonIntervalTest.java
10929= org.apache.commons.math3.fitting.PolynomialFitter:fit(int, double[])	/src/main/java/org/apache/commons/math3/fitting/PolynomialFitter.java
10930= org.apache.commons.math3.fitting.PolynomialFitter:fit(double[])	/src/main/java/org/apache/commons/math3/fitting/PolynomialFitter.java
10931= org.apache.commons.math3.fitting.PolynomialFitter:PolynomialFitter(MultivariateVectorOptimizer)	/src/main/java/org/apache/commons/math3/fitting/PolynomialFitter.java
10932= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:testCollinearPointsReverse()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10933= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:testAllIdentical()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10934= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:testIdenticalPoints()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10935= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:testClosePoints()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10936= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:isConvex(ConvexHull2D, boolean)	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10937= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:checkConvexHull(Collection<Vector2D>, ConvexHull2D)	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10938= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:setUp()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10939= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:testEmpty()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10940= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:testCollinearPoints()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10941= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:checkPointsInsideHullRegion(Collection<Vector2D>, ConvexHull2D, boolean)	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10942= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:testCollinearPointsIncludedReverse()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10943= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:checkConvexHull(Collection<Vector2D>, ConvexHull2D, boolean)	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10944= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:testTwoPoints()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10945= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:testOnePoint()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10946= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:createConvexHullGenerator(boolean)	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10947= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:testCollinearPointsIncluded()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10948= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:testIdenticalPoints2()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10949= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:reducePoints(Collection<Vector2D>)	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10950= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:testConvexHull()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10951= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:createRandomPoints(int)	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10952= org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2DAbstractTest:testNullArgument()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java
10953= org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest:testMessage()	/src/test/java/org/apache/commons/math3/exception/TooManyEvaluationsExceptionTest.java
10954= org.apache.commons.math3.fraction.FractionFormatTest:testLongFormat()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10955= org.apache.commons.math3.fraction.FractionFormatTest:testParse()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10956= org.apache.commons.math3.fraction.FractionFormatTest:testParseOne1()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10957= org.apache.commons.math3.fraction.FractionFormatTest:testParseOne2()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10958= org.apache.commons.math3.fraction.FractionFormatTest:testParseInteger()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10959= org.apache.commons.math3.fraction.FractionFormatTest:testWholeFormat()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10960= org.apache.commons.math3.fraction.FractionFormatTest:testFormatImproper()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10961= org.apache.commons.math3.fraction.FractionFormatTest:testParseProperInvalidMinus()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10962= org.apache.commons.math3.fraction.FractionFormatTest:testFormatImproperNegative()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10963= org.apache.commons.math3.fraction.FractionFormatTest:testParseZero2()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10964= org.apache.commons.math3.fraction.FractionFormatTest:testParseZero1()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10965= org.apache.commons.math3.fraction.FractionFormatTest:testDenominatorFormat()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10966= org.apache.commons.math3.fraction.FractionFormatTest:testFormatNegative()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10967= org.apache.commons.math3.fraction.FractionFormatTest:setUp()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10968= org.apache.commons.math3.fraction.FractionFormatTest:testFormat()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10969= org.apache.commons.math3.fraction.FractionFormatTest:testParseInvalidDenominator()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10970= org.apache.commons.math3.fraction.FractionFormatTest:testParseNegative()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10971= org.apache.commons.math3.fraction.FractionFormatTest:testFormatZero()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10972= org.apache.commons.math3.fraction.FractionFormatTest:testParseProper()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10973= org.apache.commons.math3.fraction.FractionFormatTest:testDoubleFormat()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10974= org.apache.commons.math3.fraction.FractionFormatTest:testNumeratorFormat()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10975= org.apache.commons.math3.fraction.FractionFormatTest:getLocale()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10976= org.apache.commons.math3.fraction.FractionFormatTest:testParseInvalid()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10977= org.apache.commons.math3.fraction.FractionFormatTest:testParseProperNegative()	/src/test/java/org/apache/commons/math3/fraction/FractionFormatTest.java
10978= org.apache.commons.math3.optimization.general.MinpackTest.MinpackFunction:setCostAccuracy(double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10979= org.apache.commons.math3.optimization.general.MinpackTest:Osborne2Function(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10980= org.apache.commons.math3.optimization.general.MinpackTest:setParamsAccuracy(double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10981= org.apache.commons.math3.optimization.general.MinpackTest.HelicalValleyFunction:HelicalValleyFunction(double[], double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10982= org.apache.commons.math3.optimization.general.MinpackTest:FreudensteinRothFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10983= org.apache.commons.math3.optimization.general.MinpackTest:ChebyquadFunction(int, int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10984= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackFreudensteinRoth()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10985= org.apache.commons.math3.optimization.general.MinpackTest.RosenbrockFunction:RosenbrockFunction(double[], double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10986= org.apache.commons.math3.optimization.general.MinpackTest.WatsonFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10987= org.apache.commons.math3.optimization.general.MinpackTest:HelicalValleyFunction(double[], double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10988= org.apache.commons.math3.optimization.general.MinpackTest:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10989= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackOsborne2()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10990= org.apache.commons.math3.optimization.general.MinpackTest.Osborne1Function:Osborne1Function(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10991= org.apache.commons.math3.optimization.general.MinpackTest:Osborne1Function(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10992= org.apache.commons.math3.optimization.general.MinpackTest.MinpackFunction:checkTheoreticalMinCost(double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10993= org.apache.commons.math3.optimization.general.MinpackTest.JennrichSampsonFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10994= org.apache.commons.math3.optimization.general.MinpackTest.WatsonFunction:WatsonFunction(int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10995= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackLinearRank1ZeroColsAndRows()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10996= org.apache.commons.math3.optimization.general.MinpackTest.LinearFullRankFunction:LinearFullRankFunction(int, int, double, double, double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10997= org.apache.commons.math3.optimization.general.MinpackTest.Osborne2Function:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10998= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackBox3Dimensional()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
10999= org.apache.commons.math3.optimization.general.MinpackTest:getTarget()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11000= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackLinearRank1()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11001= org.apache.commons.math3.optimization.general.MinpackTest:getWeight()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11002= org.apache.commons.math3.optimization.general.MinpackTest.MinpackFunction:MinpackFunction(int, double[], double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11003= org.apache.commons.math3.optimization.general.MinpackTest:BardFunction(double, double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11004= org.apache.commons.math3.optimization.general.MinpackTest.Osborne1Function:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11005= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackLinearFullRank()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11006= org.apache.commons.math3.optimization.general.MinpackTest.BrownDennisFunction:BrownDennisFunction(int, double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11007= org.apache.commons.math3.optimization.general.MinpackTest:checkTheoreticalMinParams(PointVectorValuePair)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11008= org.apache.commons.math3.optimization.general.MinpackTest.LinearRank1ZeroColsAndRowsFunction:LinearRank1ZeroColsAndRowsFunction(int, int, double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11009= org.apache.commons.math3.optimization.general.MinpackTest.MinpackFunction:checkTheoreticalMinParams(PointVectorValuePair)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11010= org.apache.commons.math3.optimization.general.MinpackTest:minpackTest(MinpackFunction, boolean)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11011= org.apache.commons.math3.optimization.general.MinpackTest.FreudensteinRothFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11012= org.apache.commons.math3.optimization.general.MinpackTest:LinearRank1ZeroColsAndRowsFunction(int, int, double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11013= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackOsborne1()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11014= org.apache.commons.math3.optimization.general.MinpackTest:buildArray(int, double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11015= org.apache.commons.math3.optimization.general.MinpackTest.KowalikOsborneFunction:KowalikOsborneFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11016= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackHelicalValley()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11017= org.apache.commons.math3.optimization.general.MinpackTest.BardFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11018= org.apache.commons.math3.optimization.general.MinpackTest.ChebyquadFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11019= org.apache.commons.math3.optimization.general.MinpackTest.MinpackFunction:getN()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11020= org.apache.commons.math3.optimization.general.MinpackTest:KowalikOsborneFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11021= org.apache.commons.math3.optimization.general.MinpackTest:checkTheoreticalMinCost(double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11022= org.apache.commons.math3.optimization.general.MinpackTest:value(double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11023= org.apache.commons.math3.optimization.general.MinpackTest.HelicalValleyFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11024= org.apache.commons.math3.optimization.general.MinpackTest.BrownDennisFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11025= org.apache.commons.math3.optimization.general.MinpackTest.MeyerFunction:MeyerFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11026= org.apache.commons.math3.optimization.general.MinpackTest.ChebyquadFunction:ChebyquadFunction(int, int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11027= org.apache.commons.math3.optimization.general.MinpackTest:setCostAccuracy(double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11028= org.apache.commons.math3.optimization.general.MinpackTest:MeyerFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11029= org.apache.commons.math3.optimization.general.MinpackTest:JennrichSampsonFunction(int, double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11030= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackBrownAlmostLinear()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11031= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackWatson()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11032= org.apache.commons.math3.optimization.general.MinpackTest.MinpackFunction:buildArray(int, double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11033= org.apache.commons.math3.optimization.general.MinpackTest.Box3DimensionalFunction:Box3DimensionalFunction(int, double[], double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11034= org.apache.commons.math3.optimization.general.MinpackTest.MinpackFunction:getStartPoint()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11035= org.apache.commons.math3.optimization.general.MinpackTest:LinearRank1Function(int, int, double, double, double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11036= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackBrownDennis()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11037= org.apache.commons.math3.optimization.general.MinpackTest.BrownAlmostLinearFunction:BrownAlmostLinearFunction(int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11038= org.apache.commons.math3.optimization.general.MinpackTest.Osborne2Function:Osborne2Function(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11039= org.apache.commons.math3.optimization.general.MinpackTest:MinpackFunction(int, double[], double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11040= org.apache.commons.math3.optimization.general.MinpackTest.BardFunction:BardFunction(double, double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11041= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackBard()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11042= org.apache.commons.math3.optimization.general.MinpackTest.RosenbrockFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11043= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackKowalikOsborne()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11044= org.apache.commons.math3.optimization.general.MinpackTest.LinearRank1Function:LinearRank1Function(int, int, double, double, double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11045= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackPowellSingular()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11046= org.apache.commons.math3.optimization.general.MinpackTest.MinpackFunction:value(double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11047= org.apache.commons.math3.optimization.general.MinpackTest.JennrichSampsonFunction:JennrichSampsonFunction(int, double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11048= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackMeyer()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11049= org.apache.commons.math3.optimization.general.MinpackTest:WatsonFunction(int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11050= org.apache.commons.math3.optimization.general.MinpackTest:BrownAlmostLinearFunction(int, double, double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11051= org.apache.commons.math3.optimization.general.MinpackTest:PowellSingularFunction(double[], double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11052= org.apache.commons.math3.optimization.general.MinpackTest:BrownDennisFunction(int, double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11053= org.apache.commons.math3.optimization.general.MinpackTest.LinearRank1ZeroColsAndRowsFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11054= org.apache.commons.math3.optimization.general.MinpackTest.Box3DimensionalFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11055= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackJennrichSampson()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11056= org.apache.commons.math3.optimization.general.MinpackTest.MinpackFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11057= org.apache.commons.math3.optimization.general.MinpackTest:buildChebyquadArray(int, double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11058= org.apache.commons.math3.optimization.general.MinpackTest.MinpackFunction:setParamsAccuracy(double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11059= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackChebyquad()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11060= org.apache.commons.math3.optimization.general.MinpackTest.PowellSingularFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11061= org.apache.commons.math3.optimization.general.MinpackTest:Box3DimensionalFunction(int, double[], double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11062= org.apache.commons.math3.optimization.general.MinpackTest:testMinpackRosenbrok()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11063= org.apache.commons.math3.optimization.general.MinpackTest.FreudensteinRothFunction:FreudensteinRothFunction(double[], double, double, double[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11064= org.apache.commons.math3.optimization.general.MinpackTest.PowellSingularFunction:PowellSingularFunction(double[], double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11065= org.apache.commons.math3.optimization.general.MinpackTest:RosenbrockFunction(double[], double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11066= org.apache.commons.math3.optimization.general.MinpackTest.KowalikOsborneFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11067= org.apache.commons.math3.optimization.general.MinpackTest:getStartPoint()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11068= org.apache.commons.math3.optimization.general.MinpackTest.MeyerFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11069= org.apache.commons.math3.optimization.general.MinpackTest.LinearFullRankFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11070= org.apache.commons.math3.optimization.general.MinpackTest:LinearFullRankFunction(int, int, double, double, double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11071= org.apache.commons.math3.optimization.general.MinpackTest.ChebyquadFunction:buildChebyquadArray(int, double)	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11072= org.apache.commons.math3.optimization.general.MinpackTest.LinearRank1Function:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11073= org.apache.commons.math3.optimization.general.MinpackTest.MinpackFunction:getTarget()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11074= org.apache.commons.math3.optimization.general.MinpackTest.MinpackFunction:getWeight()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11075= org.apache.commons.math3.optimization.general.MinpackTest.BrownAlmostLinearFunction:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11076= org.apache.commons.math3.optimization.general.MinpackTest:getN()	/src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java
11077= org.apache.commons.math3.util.CombinationsTest:testLexicographicComparatorWrongIterate1()	/src/test/java/org/apache/commons/math3/util/CombinationsTest.java
11078= org.apache.commons.math3.util.CombinationsTest:testLexicographicComparatorWrongIterate2()	/src/test/java/org/apache/commons/math3/util/CombinationsTest.java
11079= org.apache.commons.math3.util.CombinationsTest:checkLexicographicIterator(Combinations)	/src/test/java/org/apache/commons/math3/util/CombinationsTest.java
11080= org.apache.commons.math3.util.CombinationsTest:testLexicographicComparatorUnsorted()	/src/test/java/org/apache/commons/math3/util/CombinationsTest.java
11081= org.apache.commons.math3.util.CombinationsTest:testAccessor1()	/src/test/java/org/apache/commons/math3/util/CombinationsTest.java
11082= org.apache.commons.math3.util.CombinationsTest:testCombinationsIteratorFail()	/src/test/java/org/apache/commons/math3/util/CombinationsTest.java
11083= org.apache.commons.math3.util.CombinationsTest:testAccessor2()	/src/test/java/org/apache/commons/math3/util/CombinationsTest.java
11084= org.apache.commons.math3.util.CombinationsTest:testEmptyCombination()	/src/test/java/org/apache/commons/math3/util/CombinationsTest.java
11085= org.apache.commons.math3.util.CombinationsTest:testLexicographicComparator()	/src/test/java/org/apache/commons/math3/util/CombinationsTest.java
11086= org.apache.commons.math3.util.CombinationsTest:testLexicographicComparatorWrongIterate3()	/src/test/java/org/apache/commons/math3/util/CombinationsTest.java
11087= org.apache.commons.math3.util.CombinationsTest:testFullSetCombination()	/src/test/java/org/apache/commons/math3/util/CombinationsTest.java
11088= org.apache.commons.math3.util.CombinationsTest:testLexicographicComparatorWrongIterate4()	/src/test/java/org/apache/commons/math3/util/CombinationsTest.java
11089= org.apache.commons.math3.util.CombinationsTest:testLexicographicIterator()	/src/test/java/org/apache/commons/math3/util/CombinationsTest.java
11090= org.apache.commons.math3.linear.RealVectorFormatTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatTest.java
11091= org.apache.commons.math3.linear.RealVectorFormatTest:getLocale()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatTest.java
11092= org.apache.commons.math3.ode.sampling.DummyStepInterpolator:computeInterpolatedStateAndDerivatives(double, double)	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolator.java
11093= org.apache.commons.math3.ode.sampling.DummyStepInterpolator:readExternal(ObjectInput)	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolator.java
11094= org.apache.commons.math3.ode.sampling.DummyStepInterpolator:DummyStepInterpolator(double[], double[], boolean)	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolator.java
11095= org.apache.commons.math3.ode.sampling.DummyStepInterpolator:DummyStepInterpolator(DummyStepInterpolator)	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolator.java
11096= org.apache.commons.math3.ode.sampling.DummyStepInterpolator:DummyStepInterpolator()	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolator.java
11097= org.apache.commons.math3.ode.sampling.DummyStepInterpolator:writeExternal(ObjectOutput)	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolator.java
11098= org.apache.commons.math3.ode.sampling.DummyStepInterpolator:doCopy()	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolator.java
11099= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testSideHyper()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11100= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testSplitAtEnd()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11101= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testSpecialConstruction()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11102= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testFullEqualEndPoints()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11103= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testSideEmbedded()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11104= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testArc()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11105= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testSide()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11106= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testMultiple()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11107= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testShiftedAngles()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11108= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testSplitOverlapping()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11109= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testWrapAround2PiArc()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11110= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testEmptyTree()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11111= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testIntersection()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11112= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testSinglePoint()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11113= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testSideOverlapping()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11114= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testSplitWithinEpsilon()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11115= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testInconsistentState()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11116= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testFarSplit()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11117= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testEmpty()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11118= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testFullCircle()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11119= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testSplitOver2Pi()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11120= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testDifference()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11121= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testWrongInterval()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11122= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testTiny()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11123= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testSplitEmbedded()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11124= org.apache.commons.math3.geometry.spherical.oned.ArcsSetTest:testIteration()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcsSetTest.java
11125= org.apache.commons.math3.random.Well19937aTest:makeGenerator()	/src/test/java/org/apache/commons/math3/random/Well19937aTest.java
11126= org.apache.commons.math3.random.Well19937aTest:testReferenceCode()	/src/test/java/org/apache/commons/math3/random/Well19937aTest.java
11127= org.apache.commons.math3.analysis.solvers.BrentSolverTest:testSinZero()	/src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java
11128= org.apache.commons.math3.analysis.solvers.BrentSolverTest:testRootEndpoints()	/src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java
11129= org.apache.commons.math3.analysis.solvers.BrentSolverTest:testBadEndpoints()	/src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java
11130= org.apache.commons.math3.analysis.solvers.BrentSolverTest:value(double)	/src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java
11131= org.apache.commons.math3.analysis.solvers.BrentSolverTest:testQuinticZero()	/src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java
11132= org.apache.commons.math3.analysis.solvers.BrentSolverTest:testMath832()	/src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java
11133= org.apache.commons.math3.analysis.solvers.BrentSolverTest:testInitialGuess()	/src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java
11134= org.apache.commons.math3.stat.descriptive.summary.SumLogTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/SumLogTest.java
11135= org.apache.commons.math3.stat.descriptive.summary.SumLogTest:checkClearValue(StorelessUnivariateStatistic)	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/SumLogTest.java
11136= org.apache.commons.math3.stat.descriptive.summary.SumLogTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/SumLogTest.java
11137= org.apache.commons.math3.stat.descriptive.summary.SumLogTest:testSpecialValues()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/SumLogTest.java
11138= org.apache.commons.math3.geometry.euclidean.threed.PlaneTest:testThreePoints()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PlaneTest.java
11139= org.apache.commons.math3.geometry.euclidean.threed.PlaneTest:testTranslate()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PlaneTest.java
11140= org.apache.commons.math3.geometry.euclidean.threed.PlaneTest:testIntersection2()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PlaneTest.java
11141= org.apache.commons.math3.geometry.euclidean.threed.PlaneTest:testSimilar()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PlaneTest.java
11142= org.apache.commons.math3.geometry.euclidean.threed.PlaneTest:testPoint()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PlaneTest.java
11143= org.apache.commons.math3.geometry.euclidean.threed.PlaneTest:testIntersection()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PlaneTest.java
11144= org.apache.commons.math3.geometry.euclidean.threed.PlaneTest:testIntersection3()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PlaneTest.java
11145= org.apache.commons.math3.geometry.euclidean.threed.PlaneTest:testOffset()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PlaneTest.java
11146= org.apache.commons.math3.geometry.euclidean.threed.PlaneTest:testRotate()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PlaneTest.java
11147= org.apache.commons.math3.geometry.euclidean.threed.PlaneTest:testContains()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PlaneTest.java
11148= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testAllTiesInY()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11149= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testBalancedJumble()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11150= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testSingleElement()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11151= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testAllTiesInBoth()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11152= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testAllTiesInX()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11153= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testSimpleReversed()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11154= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:test2dDoubleArray()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11155= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testOrderedTies()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11156= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testSimpleOrderedPowerOf2()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11157= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testTwoElements()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11158= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testLargeArray()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11159= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testLongly()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11160= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:setUp()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11161= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testSimpleOrdered()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11162= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testSimpleJumble()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11163= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testBlockMatrix()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11164= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testSimpleReversedPowerOf2()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11165= org.apache.commons.math3.stat.correlation.KendallsCorrelationTest:testSwiss()	/src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java
11166= org.apache.commons.math3.optimization.SimplePointCheckerTest:testIterationCheck()	/src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java
11167= org.apache.commons.math3.optimization.SimplePointCheckerTest:testIterationCheckDisabled()	/src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java
11168= org.apache.commons.math3.optimization.SimplePointCheckerTest:testIterationCheckPrecondition()	/src/test/java/org/apache/commons/math3/optimization/SimplePointCheckerTest.java
11169= org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory:FeatureInitializerFactory()	/src/main/java/org/apache/commons/math3/ml/neuralnet/FeatureInitializerFactory.java
11170= org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory:value()	/src/main/java/org/apache/commons/math3/ml/neuralnet/FeatureInitializerFactory.java
11171= org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory:randomize(RealDistribution, FeatureInitializer)	/src/main/java/org/apache/commons/math3/ml/neuralnet/FeatureInitializerFactory.java
11172= org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory:uniform(RandomGenerator, double, double)	/src/main/java/org/apache/commons/math3/ml/neuralnet/FeatureInitializerFactory.java
11173= org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory:function(UnivariateFunction, double, double)	/src/main/java/org/apache/commons/math3/ml/neuralnet/FeatureInitializerFactory.java
11174= org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory:uniform(double, double)	/src/main/java/org/apache/commons/math3/ml/neuralnet/FeatureInitializerFactory.java
11175= org.apache.commons.math3.fitting.leastsquares.RandomStraightLinePointGenerator:RandomStraightLinePointGenerator(double, double, double, double, double, long)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/RandomStraightLinePointGenerator.java
11176= org.apache.commons.math3.fitting.leastsquares.RandomStraightLinePointGenerator:create()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/RandomStraightLinePointGenerator.java
11177= org.apache.commons.math3.fitting.leastsquares.RandomStraightLinePointGenerator:generate(int)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/RandomStraightLinePointGenerator.java
11178= org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest:value(double, double)	/src/test/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java
11179= org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest:testPlane()	/src/test/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java
11180= org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest:testParaboloid()	/src/test/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java
11181= org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest:testPreconditions()	/src/test/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java
11182= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest:serialization()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java
11183= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java
11184= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest:derivativesConsistency()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java
11185= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java
11186= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest:checklone()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java
11187= org.apache.commons.math3.exception.util.ArgUtilsTest:create(List<Object>)	/src/test/java/org/apache/commons/math3/exception/util/ArgUtilsTest.java
11188= org.apache.commons.math3.exception.util.ArgUtilsTest:testFlatten()	/src/test/java/org/apache/commons/math3/exception/util/ArgUtilsTest.java
11189= org.apache.commons.math3.distribution.CauchyDistributionTest:testPreconditions()	/src/test/java/org/apache/commons/math3/distribution/CauchyDistributionTest.java
11190= org.apache.commons.math3.distribution.CauchyDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/CauchyDistributionTest.java
11191= org.apache.commons.math3.distribution.CauchyDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/CauchyDistributionTest.java
11192= org.apache.commons.math3.distribution.CauchyDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/CauchyDistributionTest.java
11193= org.apache.commons.math3.distribution.CauchyDistributionTest:testMedian()	/src/test/java/org/apache/commons/math3/distribution/CauchyDistributionTest.java
11194= org.apache.commons.math3.distribution.CauchyDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/CauchyDistributionTest.java
11195= org.apache.commons.math3.distribution.CauchyDistributionTest:testInverseCumulativeProbabilityExtremes()	/src/test/java/org/apache/commons/math3/distribution/CauchyDistributionTest.java
11196= org.apache.commons.math3.distribution.CauchyDistributionTest:setUp()	/src/test/java/org/apache/commons/math3/distribution/CauchyDistributionTest.java
11197= org.apache.commons.math3.distribution.CauchyDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/CauchyDistributionTest.java
11198= org.apache.commons.math3.distribution.CauchyDistributionTest:testScale()	/src/test/java/org/apache/commons/math3/distribution/CauchyDistributionTest.java
11199= org.apache.commons.math3.genetics.BinaryChromosomeTest:testRandomConstructor()	/src/test/java/org/apache/commons/math3/genetics/BinaryChromosomeTest.java
11200= org.apache.commons.math3.genetics.BinaryChromosomeTest:testInvalidConstructor()	/src/test/java/org/apache/commons/math3/genetics/BinaryChromosomeTest.java
11201= org.apache.commons.math3.genetics.BinaryChromosomeTest:testIsSame()	/src/test/java/org/apache/commons/math3/genetics/BinaryChromosomeTest.java
11202= org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/FirstMomentTest.java
11203= org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/FirstMomentTest.java
11204= org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChainTest:testConvergenceException()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/MonotoneChainTest.java
11205= org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChainTest:createConvexHullGenerator(boolean)	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/MonotoneChainTest.java
11206= org.apache.commons.math3.linear.SingularValueSolverTest:testSolve()	/src/test/java/org/apache/commons/math3/linear/SingularValueSolverTest.java
11207= org.apache.commons.math3.linear.SingularValueSolverTest:testSingular()	/src/test/java/org/apache/commons/math3/linear/SingularValueSolverTest.java
11208= org.apache.commons.math3.linear.SingularValueSolverTest:testSolveDimensionErrors()	/src/test/java/org/apache/commons/math3/linear/SingularValueSolverTest.java
11209= org.apache.commons.math3.linear.SingularValueSolverTest:testMath320B()	/src/test/java/org/apache/commons/math3/linear/SingularValueSolverTest.java
11210= org.apache.commons.math3.linear.SingularValueSolverTest:testConditionNumber()	/src/test/java/org/apache/commons/math3/linear/SingularValueSolverTest.java
11211= org.apache.commons.math3.linear.SingularValueSolverTest:testLeastSquareSolve()	/src/test/java/org/apache/commons/math3/linear/SingularValueSolverTest.java
11212= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testHighDegreeLegendre()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11213= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:checkPolynomial(PolynomialFunction, String)	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11214= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testHermiteOrthogonality()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11215= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testJacobiEvaluationAt1()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11216= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testFirstChebyshevPolynomials()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11217= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testShift()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11218= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testJacobiLegendre()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11219= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:checkNullPolynomial(PolynomialFunction)	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11220= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testChebyshevBounds()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11221= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testLaguerreOrthogonality()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11222= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testLegendreOrthogonality()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11223= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:checkOrthogonality(PolynomialFunction, PolynomialFunction, UnivariateFunction, double, double, double, double)	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11224= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:checkPolynomial(PolynomialFunction, long, String)	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11225= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testChebyshevOrthogonality()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11226= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testFirstLaguerrePolynomials()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11227= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testChebyshevDifferentials()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11228= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testLegendreDifferentials()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11229= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testJacobiOrthogonality()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11230= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testLaguerreDifferentials()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11231= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testFirstLegendrePolynomials()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11232= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testFirstHermitePolynomials()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11233= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:value(double)	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11234= org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest:testHermiteDifferentials()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtilsTest.java
11235= org.apache.commons.math3.util.MathUtilsTest:testSignByte()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11236= org.apache.commons.math3.util.MathUtilsTest:testArrayHash()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11237= org.apache.commons.math3.util.MathUtilsTest:testEqualsDouble()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11238= org.apache.commons.math3.util.MathUtilsTest:testIndicatorShort()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11239= org.apache.commons.math3.util.MathUtilsTest:testPermutedArrayHash()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11240= org.apache.commons.math3.util.MathUtilsTest:testCheckNotNull1()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11241= org.apache.commons.math3.util.MathUtilsTest:testCheckNotNull2()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11242= org.apache.commons.math3.util.MathUtilsTest:testNormalizeAngle()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11243= org.apache.commons.math3.util.MathUtilsTest:testSignInt()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11244= org.apache.commons.math3.util.MathUtilsTest:testIndicatorByte()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11245= org.apache.commons.math3.util.MathUtilsTest:testCopySignByte2()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11246= org.apache.commons.math3.util.MathUtilsTest:testIndicatorInt()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11247= org.apache.commons.math3.util.MathUtilsTest:testReduce()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11248= org.apache.commons.math3.util.MathUtilsTest:testCopySignByte()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11249= org.apache.commons.math3.util.MathUtilsTest:testIndicatorLong()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11250= org.apache.commons.math3.util.MathUtilsTest:testHash()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11251= org.apache.commons.math3.util.MathUtilsTest:testSignLong()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11252= org.apache.commons.math3.util.MathUtilsTest:testReduceComparedWithNormalizeAngle()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11253= org.apache.commons.math3.util.MathUtilsTest:testSignShort()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11254= org.apache.commons.math3.util.MathUtilsTest:testCheckFinite()	/src/test/java/org/apache/commons/math3/util/MathUtilsTest.java
11255= org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest:getParameters()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/HermiteParametricTest.java
11256= org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest:HermiteParametricTest(int, int, double, double)	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/HermiteParametricTest.java
11257= org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest:getExpectedValue(int)	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/HermiteParametricTest.java
11258= org.apache.commons.math3.optimization.general.CircleScalar:getRadius(DerivativeStructure, DerivativeStructure)	/src/test/java/org/apache/commons/math3/optimization/general/CircleScalar.java
11259= org.apache.commons.math3.optimization.general.CircleScalar:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/CircleScalar.java
11260= org.apache.commons.math3.optimization.general.CircleScalar:value(double[])	/src/test/java/org/apache/commons/math3/optimization/general/CircleScalar.java
11261= org.apache.commons.math3.optimization.general.CircleScalar:distance(Vector2D, DerivativeStructure, DerivativeStructure)	/src/test/java/org/apache/commons/math3/optimization/general/CircleScalar.java
11262= org.apache.commons.math3.optimization.general.CircleScalar:CircleScalar()	/src/test/java/org/apache/commons/math3/optimization/general/CircleScalar.java
11263= org.apache.commons.math3.optimization.general.CircleScalar:getRadius(Vector2D)	/src/test/java/org/apache/commons/math3/optimization/general/CircleScalar.java
11264= org.apache.commons.math3.optimization.general.CircleScalar:addPoint(double, double)	/src/test/java/org/apache/commons/math3/optimization/general/CircleScalar.java
11265= org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest:testAccessors()	/src/test/java/org/apache/commons/math3/linear/MatrixDimensionMismatchExceptionTest.java
11266= org.apache.commons.math3.geometry.spherical.oned.LimitAngleTest:testReversedLimit()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/LimitAngleTest.java
11267= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest:testCoordinatesStoC()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinatesTest.java
11268= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest:testCoordinatesCtoS()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinatesTest.java
11269= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest:testGradient()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinatesTest.java
11270= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest:testHessian()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinatesTest.java
11271= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest:testSerialization()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinatesTest.java
11272= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest:valueCartesian(DerivativeStructure, DerivativeStructure, DerivativeStructure)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinatesTest.java
11273= org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest:valueSpherical(DerivativeStructure, DerivativeStructure, DerivativeStructure)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinatesTest.java
11274= org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest:testIterationCheckDisabled()	/src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java
11275= org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest:testIterationCheckPrecondition()	/src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java
11276= org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest:testIterationCheck()	/src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java
11277= org.apache.commons.math3.genetics.DummyListChromosome:DummyListChromosome(List<Integer>)	/src/test/java/org/apache/commons/math3/genetics/DummyListChromosome.java
11278= org.apache.commons.math3.genetics.DummyListChromosome:fitness()	/src/test/java/org/apache/commons/math3/genetics/DummyListChromosome.java
11279= org.apache.commons.math3.genetics.DummyListChromosome:checkValidity(List<Integer>)	/src/test/java/org/apache/commons/math3/genetics/DummyListChromosome.java
11280= org.apache.commons.math3.genetics.DummyListChromosome:hashCode()	/src/test/java/org/apache/commons/math3/genetics/DummyListChromosome.java
11281= org.apache.commons.math3.genetics.DummyListChromosome:DummyListChromosome(Integer[])	/src/test/java/org/apache/commons/math3/genetics/DummyListChromosome.java
11282= org.apache.commons.math3.genetics.DummyListChromosome:equals(Object)	/src/test/java/org/apache/commons/math3/genetics/DummyListChromosome.java
11283= org.apache.commons.math3.genetics.DummyListChromosome:newFixedLengthChromosome(List<Integer>)	/src/test/java/org/apache/commons/math3/genetics/DummyListChromosome.java
11284= org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest:derivativesConsistency()	/src/test/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolatorTest.java
11285= org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest:serialization()	/src/test/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolatorTest.java
11286= org.apache.commons.math3.stat.correlation.CovarianceTest:testInsufficientData()	/src/test/java/org/apache/commons/math3/stat/correlation/CovarianceTest.java
11287= org.apache.commons.math3.stat.correlation.CovarianceTest:testConsistency()	/src/test/java/org/apache/commons/math3/stat/correlation/CovarianceTest.java
11288= org.apache.commons.math3.stat.correlation.CovarianceTest:createRealMatrix(double[], int, int)	/src/test/java/org/apache/commons/math3/stat/correlation/CovarianceTest.java
11289= org.apache.commons.math3.stat.correlation.CovarianceTest:testSwissFertility()	/src/test/java/org/apache/commons/math3/stat/correlation/CovarianceTest.java
11290= org.apache.commons.math3.stat.correlation.CovarianceTest:testConstant()	/src/test/java/org/apache/commons/math3/stat/correlation/CovarianceTest.java
11291= org.apache.commons.math3.stat.correlation.CovarianceTest:testOneColumn()	/src/test/java/org/apache/commons/math3/stat/correlation/CovarianceTest.java
11292= org.apache.commons.math3.stat.correlation.CovarianceTest:testLongly()	/src/test/java/org/apache/commons/math3/stat/correlation/CovarianceTest.java
11293= org.apache.commons.math3.random.RandomAdaptorTest.ConstantGenerator:nextBytes(byte[])	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11294= org.apache.commons.math3.random.RandomAdaptorTest:nextFloat()	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11295= org.apache.commons.math3.random.RandomAdaptorTest.ConstantGenerator:ConstantGenerator(double)	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11296= org.apache.commons.math3.random.RandomAdaptorTest:testAdaptor()	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11297= org.apache.commons.math3.random.RandomAdaptorTest.ConstantGenerator:ConstantGenerator()	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11298= org.apache.commons.math3.random.RandomAdaptorTest.ConstantGenerator:setSeed(int[])	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11299= org.apache.commons.math3.random.RandomAdaptorTest.ConstantGenerator:setSeed(long)	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11300= org.apache.commons.math3.random.RandomAdaptorTest:setSeed(int[])	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11301= org.apache.commons.math3.random.RandomAdaptorTest:checkConstant(Random)	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11302= org.apache.commons.math3.random.RandomAdaptorTest:ConstantGenerator(double)	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11303= org.apache.commons.math3.random.RandomAdaptorTest:ConstantGenerator()	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11304= org.apache.commons.math3.random.RandomAdaptorTest:nextDouble()	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11305= org.apache.commons.math3.random.RandomAdaptorTest:nextGaussian()	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11306= org.apache.commons.math3.random.RandomAdaptorTest.ConstantGenerator:nextGaussian()	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11307= org.apache.commons.math3.random.RandomAdaptorTest.ConstantGenerator:setSeed(int)	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11308= org.apache.commons.math3.random.RandomAdaptorTest:nextLong()	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11309= org.apache.commons.math3.random.RandomAdaptorTest:nextInt(int)	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11310= org.apache.commons.math3.random.RandomAdaptorTest:nextInt()	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11311= org.apache.commons.math3.random.RandomAdaptorTest:nextBytes(byte[])	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11312= org.apache.commons.math3.random.RandomAdaptorTest.ConstantGenerator:nextFloat()	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11313= org.apache.commons.math3.random.RandomAdaptorTest:nextBoolean()	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11314= org.apache.commons.math3.random.RandomAdaptorTest:setSeed(int)	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11315= org.apache.commons.math3.random.RandomAdaptorTest.ConstantGenerator:nextInt()	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11316= org.apache.commons.math3.random.RandomAdaptorTest.ConstantGenerator:nextInt(int)	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11317= org.apache.commons.math3.random.RandomAdaptorTest:setSeed(long)	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11318= org.apache.commons.math3.random.RandomAdaptorTest.ConstantGenerator:nextBoolean()	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11319= org.apache.commons.math3.random.RandomAdaptorTest.ConstantGenerator:nextDouble()	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11320= org.apache.commons.math3.random.RandomAdaptorTest.ConstantGenerator:nextLong()	/src/test/java/org/apache/commons/math3/random/RandomAdaptorTest.java
11321= org.apache.commons.math3.stat.descriptive.summary.SumTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/SumTest.java
11322= org.apache.commons.math3.stat.descriptive.summary.SumTest:testWeightedSum()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/SumTest.java
11323= org.apache.commons.math3.stat.descriptive.summary.SumTest:testSpecialValues()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/SumTest.java
11324= org.apache.commons.math3.stat.descriptive.summary.SumTest:checkClearValue(StorelessUnivariateStatistic)	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/SumTest.java
11325= org.apache.commons.math3.stat.descriptive.summary.SumTest:expectedWeightedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/SumTest.java
11326= org.apache.commons.math3.stat.descriptive.summary.SumTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/SumTest.java
11327= org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristicTest:reducePoints(Collection<Vector2D>)	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/AklToussaintHeuristicTest.java
11328= org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristicTest:createConvexHullGenerator(boolean)	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/hull/AklToussaintHeuristicTest.java
11329= org.apache.commons.math3.fraction.BigFractionTest:testEpsilonLimitConstructor()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11330= org.apache.commons.math3.fraction.BigFractionTest:testDivide()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11331= org.apache.commons.math3.fraction.BigFractionTest:testAbs()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11332= org.apache.commons.math3.fraction.BigFractionTest:testSerial()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11333= org.apache.commons.math3.fraction.BigFractionTest:testGetReducedFraction()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11334= org.apache.commons.math3.fraction.BigFractionTest:testEqualsAndHashCode()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11335= org.apache.commons.math3.fraction.BigFractionTest:testMath340()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11336= org.apache.commons.math3.fraction.BigFractionTest:testConstructor()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11337= org.apache.commons.math3.fraction.BigFractionTest:testGoldenRatio()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11338= org.apache.commons.math3.fraction.BigFractionTest:testMultiply()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11339= org.apache.commons.math3.fraction.BigFractionTest:testLongValue()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11340= org.apache.commons.math3.fraction.BigFractionTest:testDoubleConstructor()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11341= org.apache.commons.math3.fraction.BigFractionTest:testDoubleValue()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11342= org.apache.commons.math3.fraction.BigFractionTest:testPow()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11343= org.apache.commons.math3.fraction.BigFractionTest:testPercentage()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11344= org.apache.commons.math3.fraction.BigFractionTest:testPositiveValueOverflow()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11345= org.apache.commons.math3.fraction.BigFractionTest:testDoubleValueForLargeNumeratorAndDenominator()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11346= org.apache.commons.math3.fraction.BigFractionTest:testNegate()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11347= org.apache.commons.math3.fraction.BigFractionTest:testDigitLimitConstructor()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11348= org.apache.commons.math3.fraction.BigFractionTest:testIntValue()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11349= org.apache.commons.math3.fraction.BigFractionTest:testReciprocal()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11350= org.apache.commons.math3.fraction.BigFractionTest:assertFraction(int, int, BigFraction)	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11351= org.apache.commons.math3.fraction.BigFractionTest:testSubtract()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11352= org.apache.commons.math3.fraction.BigFractionTest:testFloatValueForLargeNumeratorAndDenominator()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11353= org.apache.commons.math3.fraction.BigFractionTest:assertFraction(long, long, BigFraction)	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11354= org.apache.commons.math3.fraction.BigFractionTest:testConstructorDouble()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11355= org.apache.commons.math3.fraction.BigFractionTest:testBigDecimalValue()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11356= org.apache.commons.math3.fraction.BigFractionTest:testAdd()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11357= org.apache.commons.math3.fraction.BigFractionTest:testNegativeValueOverflow()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11358= org.apache.commons.math3.fraction.BigFractionTest:testFloatValue()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11359= org.apache.commons.math3.fraction.BigFractionTest:testCompareTo()	/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
11360= org.apache.commons.math3.analysis.solvers.NewtonSolverTest:value(double)	/src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java
11361= org.apache.commons.math3.analysis.solvers.NewtonSolverTest:testSinZero()	/src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java
11362= org.apache.commons.math3.analysis.solvers.NewtonSolverTest:derivative()	/src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java
11363= org.apache.commons.math3.analysis.solvers.NewtonSolverTest:testQuinticZero()	/src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java
11364= org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest:backward()	/src/test/java/org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegratorTest.java
11365= org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest:polynomial()	/src/test/java/org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegratorTest.java
11366= org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest:exceedMaxEvaluations()	/src/test/java/org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegratorTest.java
11367= org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest:testIncreasingTolerance()	/src/test/java/org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegratorTest.java
11368= org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest:dimensionCheck()	/src/test/java/org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegratorTest.java
11369= org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest:testMinStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegratorTest.java
11370= org.apache.commons.math3.distribution.PoissonDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11371= org.apache.commons.math3.distribution.PoissonDistributionTest:testDegenerateInverseCumulativeProbability()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11372= org.apache.commons.math3.distribution.PoissonDistributionTest:PoissonDistributionTest()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11373= org.apache.commons.math3.distribution.PoissonDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11374= org.apache.commons.math3.distribution.PoissonDistributionTest:testMean()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11375= org.apache.commons.math3.distribution.PoissonDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11376= org.apache.commons.math3.distribution.PoissonDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11377= org.apache.commons.math3.distribution.PoissonDistributionTest:makeLogDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11378= org.apache.commons.math3.distribution.PoissonDistributionTest:testLargeMeanCumulativeProbability()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11379= org.apache.commons.math3.distribution.PoissonDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11380= org.apache.commons.math3.distribution.PoissonDistributionTest:testCumulativeProbabilitySpecial()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11381= org.apache.commons.math3.distribution.PoissonDistributionTest:testNormalApproximateProbability()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11382= org.apache.commons.math3.distribution.PoissonDistributionTest:makeInverseCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11383= org.apache.commons.math3.distribution.PoissonDistributionTest:testNegativeMean()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11384= org.apache.commons.math3.distribution.PoissonDistributionTest:testLargeMeanInverseCumulativeProbability()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11385= org.apache.commons.math3.distribution.PoissonDistributionTest:makeDensityTestPoints()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11386= org.apache.commons.math3.distribution.PoissonDistributionTest:checkProbability(PoissonDistribution, int)	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11387= org.apache.commons.math3.distribution.PoissonDistributionTest:makeInverseCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/PoissonDistributionTest.java
11388= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDatasetFactory:createHahn1()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDatasetFactory.java
11389= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDatasetFactory:createMGH17()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDatasetFactory.java
11390= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDatasetFactory:createAll()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDatasetFactory.java
11391= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDatasetFactory:StatisticalReferenceDatasetFactory()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDatasetFactory.java
11392= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDatasetFactory:createKirby2()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDatasetFactory.java
11393= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDatasetFactory:getModelDerivatives(double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDatasetFactory.java
11394= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDatasetFactory:createLanczos1()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDatasetFactory.java
11395= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDatasetFactory:createBufferedReaderFromResource(String)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDatasetFactory.java
11396= org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDatasetFactory:getModelValue(double, double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StatisticalReferenceDatasetFactory.java
11397= org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest:testIllegalArguments()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolatorTest.java
11398= org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest:verifyInterpolation(UnivariateFunction, double, double)	/src/test/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolatorTest.java
11399= org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest:testInterpolateLinearDegenerateTwoSegment()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolatorTest.java
11400= org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest:testInterpolateLinear()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolatorTest.java
11401= org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest:testInterpolateLinearDegenerateThreeSegment()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolatorTest.java
11402= org.apache.commons.math3.exception.util.LocalizedFormatsTest:testNoOpEnglishTranslation()	/src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java
11403= org.apache.commons.math3.exception.util.LocalizedFormatsTest:testMessageNumber()	/src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java
11404= org.apache.commons.math3.exception.util.LocalizedFormatsTest:testAllPropertiesCorrespondToKeys()	/src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java
11405= org.apache.commons.math3.exception.util.LocalizedFormatsTest:testVariablePartsConsistency()	/src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java
11406= org.apache.commons.math3.exception.util.LocalizedFormatsTest:testAllKeysPresentInPropertiesFiles()	/src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java
11407= org.apache.commons.math3.exception.util.LocalizedFormatsTest:testNoMissingFrenchTranslation()	/src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java
11408= org.apache.commons.math3.linear.ConjugateGradientTest:testUnpreconditionedSolution()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11409= org.apache.commons.math3.linear.ConjugateGradientTest:testPreconditionedResidual()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11410= org.apache.commons.math3.linear.ConjugateGradientTest:testUnpreconditionedNormOfResidual()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11411= org.apache.commons.math3.linear.ConjugateGradientTest:testPreconditionedSolution2()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11412= org.apache.commons.math3.linear.ConjugateGradientTest:testUnpreconditionedSolutionWithInitialGuess()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11413= org.apache.commons.math3.linear.ConjugateGradientTest:testNonSquareOperator()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11414= org.apache.commons.math3.linear.ConjugateGradientTest:testPreconditionedNormOfResidual()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11415= org.apache.commons.math3.linear.ConjugateGradientTest:doTestVectorsAreUnmodifiable(IterationEvent)	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11416= org.apache.commons.math3.linear.ConjugateGradientTest:testMismatchedOperatorDimensions()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11417= org.apache.commons.math3.linear.ConjugateGradientTest:testUnpreconditionedResidual()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11418= org.apache.commons.math3.linear.ConjugateGradientTest:iterationStarted(IterationEvent)	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11419= org.apache.commons.math3.linear.ConjugateGradientTest:getRowDimension()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11420= org.apache.commons.math3.linear.ConjugateGradientTest:iterationPerformed(IterationEvent)	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11421= org.apache.commons.math3.linear.ConjugateGradientTest:testNonSquarePreconditioner()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11422= org.apache.commons.math3.linear.ConjugateGradientTest:testUnpreconditionedInPlaceSolutionWithInitialGuess()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11423= org.apache.commons.math3.linear.ConjugateGradientTest:getColumnDimension()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11424= org.apache.commons.math3.linear.ConjugateGradientTest:testDimensionMismatchRightHandSide()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11425= org.apache.commons.math3.linear.ConjugateGradientTest:testPreconditionedSolution()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11426= org.apache.commons.math3.linear.ConjugateGradientTest:testDimensionMismatchSolution()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11427= org.apache.commons.math3.linear.ConjugateGradientTest:initializationPerformed(IterationEvent)	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11428= org.apache.commons.math3.linear.ConjugateGradientTest:doTestNormOfResidual(IterationEvent)	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11429= org.apache.commons.math3.linear.ConjugateGradientTest:operate(RealVector)	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11430= org.apache.commons.math3.linear.ConjugateGradientTest:testNonPositiveDefinitePreconditioner()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11431= org.apache.commons.math3.linear.ConjugateGradientTest:terminationPerformed(IterationEvent)	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11432= org.apache.commons.math3.linear.ConjugateGradientTest:testEventManagement()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11433= org.apache.commons.math3.linear.ConjugateGradientTest:testNonPositiveDefiniteLinearOperator()	/src/test/java/org/apache/commons/math3/linear/ConjugateGradientTest.java
11434= org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest:testSinFunction()	/src/test/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegratorTest.java
11435= org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest:testIssue464()	/src/test/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegratorTest.java
11436= org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest:exactIntegration(PolynomialFunction, double, double)	/src/test/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegratorTest.java
11437= org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest:testQuinticFunction()	/src/test/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegratorTest.java
11438= org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest:value(double)	/src/test/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegratorTest.java
11439= org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest:testExactIntegration()	/src/test/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegratorTest.java
11440= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest:testConstants()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionTest.java
11441= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest:testAddition()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionTest.java
11442= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest:testLinear()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionTest.java
11443= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest:checkNullPolynomial(PolynomialFunction)	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionTest.java
11444= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest:testQuintic()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionTest.java
11445= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest:testString()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionTest.java
11446= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest:testfirstDerivativeComparison()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionTest.java
11447= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest:testSerial()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionTest.java
11448= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest:testMath341()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionTest.java
11449= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest:testSubtraction()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionTest.java
11450= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest:checkPolynomial(PolynomialFunction, String)	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionTest.java
11451= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest:testQuadratic()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionTest.java
11452= org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest:testMultiplication()	/src/test/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionTest.java
11453= org.apache.commons.math3.util.FastMathTestPerformance:report(String, long, long, long)	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11454= org.apache.commons.math3.util.FastMathTestPerformance:call()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11455= org.apache.commons.math3.util.FastMathTestPerformance:testCosh()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11456= org.apache.commons.math3.util.FastMathTestPerformance:testLog()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11457= org.apache.commons.math3.util.FastMathTestPerformance:testExpm1()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11458= org.apache.commons.math3.util.FastMathTestPerformance:testPow()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11459= org.apache.commons.math3.util.FastMathTestPerformance:testAcos()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11460= org.apache.commons.math3.util.FastMathTestPerformance:testCbrt()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11461= org.apache.commons.math3.util.FastMathTestPerformance:testSinh()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11462= org.apache.commons.math3.util.FastMathTestPerformance:testCos()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11463= org.apache.commons.math3.util.FastMathTestPerformance:testSqrt()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11464= org.apache.commons.math3.util.FastMathTestPerformance:testTan()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11465= org.apache.commons.math3.util.FastMathTestPerformance:testSimpleBenchmark()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11466= org.apache.commons.math3.util.FastMathTestPerformance:header()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11467= org.apache.commons.math3.util.FastMathTestPerformance:testAtan2()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11468= org.apache.commons.math3.util.FastMathTestPerformance:testHypot()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11469= org.apache.commons.math3.util.FastMathTestPerformance:testAtan()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11470= org.apache.commons.math3.util.FastMathTestPerformance:testAbs()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11471= org.apache.commons.math3.util.FastMathTestPerformance:testLog1p()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11472= org.apache.commons.math3.util.FastMathTestPerformance:testLog10()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11473= org.apache.commons.math3.util.FastMathTestPerformance:testSin()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11474= org.apache.commons.math3.util.FastMathTestPerformance:testTanh()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11475= org.apache.commons.math3.util.FastMathTestPerformance:testExp()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11476= org.apache.commons.math3.util.FastMathTestPerformance:testAsin()	/src/test/java/org/apache/commons/math3/util/FastMathTestPerformance.java
11477= org.apache.commons.math3.linear.SchurTransformerTest:testNonSquare()	/src/test/java/org/apache/commons/math3/linear/SchurTransformerTest.java
11478= org.apache.commons.math3.linear.SchurTransformerTest:testAEqualPTPt()	/src/test/java/org/apache/commons/math3/linear/SchurTransformerTest.java
11479= org.apache.commons.math3.linear.SchurTransformerTest:testPTOrthogonal()	/src/test/java/org/apache/commons/math3/linear/SchurTransformerTest.java
11480= org.apache.commons.math3.linear.SchurTransformerTest:testMath848()	/src/test/java/org/apache/commons/math3/linear/SchurTransformerTest.java
11481= org.apache.commons.math3.linear.SchurTransformerTest:checkSchurForm(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/SchurTransformerTest.java
11482= org.apache.commons.math3.linear.SchurTransformerTest:checkMatricesValues(double[][], double[][], double[][])	/src/test/java/org/apache/commons/math3/linear/SchurTransformerTest.java
11483= org.apache.commons.math3.linear.SchurTransformerTest:testSchurForm()	/src/test/java/org/apache/commons/math3/linear/SchurTransformerTest.java
11484= org.apache.commons.math3.linear.SchurTransformerTest:checkAEqualPTPt(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/SchurTransformerTest.java
11485= org.apache.commons.math3.linear.SchurTransformerTest:testRandomDataNormalDistribution()	/src/test/java/org/apache/commons/math3/linear/SchurTransformerTest.java
11486= org.apache.commons.math3.linear.SchurTransformerTest:checkOrthogonal(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/SchurTransformerTest.java
11487= org.apache.commons.math3.linear.SchurTransformerTest:testRandomData()	/src/test/java/org/apache/commons/math3/linear/SchurTransformerTest.java
11488= org.apache.commons.math3.linear.SchurTransformerTest:testPOrthogonal()	/src/test/java/org/apache/commons/math3/linear/SchurTransformerTest.java
11489= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:value(double[])	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11490= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testTwoSets()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11491= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testNonInvertible()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11492= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testOneSet()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11493= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testInconsistentSizes1()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11494= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testCircleFitting()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11495= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:LinearProblem(double[][], double[])	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11496= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testInconsistentSizes2()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11497= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testMoreEstimatedParametersSimple()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11498= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testInconsistentEquations()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11499= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testMoreEstimatedParametersUnsorted()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11500= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testCircleFittingBadInit()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11501= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testTrivial()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11502= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest.LinearProblem:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11503= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testCircleFittingGoodInit()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11504= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testKirby2()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11505= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testIllConditioned()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11506= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testRedundantEquations()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11507= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testNoDependency()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11508= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testQRColumnsPermutation()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11509= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest.LinearProblem:LinearProblem(double[][], double[])	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11510= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest.LinearProblem:value(double[])	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11511= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:testHahn1()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11512= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:doTestStRD(StatisticalReferenceDataset, double, double)	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11513= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11514= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest:createOptimizer()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java
11515= org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FrenchVector3DFormatTest.java
11516= org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest:getLocale()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FrenchVector3DFormatTest.java
11517= org.apache.commons.math3.optimization.univariate.BracketFinderTest:testIntervalBoundsOrdering()	/src/test/java/org/apache/commons/math3/optimization/univariate/BracketFinderTest.java
11518= org.apache.commons.math3.optimization.univariate.BracketFinderTest:testMinimumIsOnIntervalBoundary()	/src/test/java/org/apache/commons/math3/optimization/univariate/BracketFinderTest.java
11519= org.apache.commons.math3.optimization.univariate.BracketFinderTest:value(double)	/src/test/java/org/apache/commons/math3/optimization/univariate/BracketFinderTest.java
11520= org.apache.commons.math3.optimization.univariate.BracketFinderTest:testCubicMax()	/src/test/java/org/apache/commons/math3/optimization/univariate/BracketFinderTest.java
11521= org.apache.commons.math3.optimization.univariate.BracketFinderTest:testCubicMin()	/src/test/java/org/apache/commons/math3/optimization/univariate/BracketFinderTest.java
11522= org.apache.commons.math3.stat.descriptive.summary.SumSqTest:testSpecialValues()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/SumSqTest.java
11523= org.apache.commons.math3.stat.descriptive.summary.SumSqTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/SumSqTest.java
11524= org.apache.commons.math3.stat.descriptive.summary.SumSqTest:checkClearValue(StorelessUnivariateStatistic)	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/SumSqTest.java
11525= org.apache.commons.math3.stat.descriptive.summary.SumSqTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/SumSqTest.java
11526= org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/SecondMomentTest.java
11527= org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/SecondMomentTest.java
11528= org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest:length(double[])	/src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java
11529= org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest:test2DDistribution()	/src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java
11530= org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest:testPlane()	/src/test/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java
11531= org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest:testWave()	/src/test/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java
11532= org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest:testPreconditions()	/src/test/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java
11533= org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest:value(double, double, double)	/src/test/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java
11534= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest:testDecreasingSteps()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11535= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest.KeplerStepHandler:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11536= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11537= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest:testStepSize()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11538= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11539= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest.KeplerStepHandler:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11540= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest:testDimensionCheck()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11541= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11542= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11543= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest:testBackward()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11544= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest.KeplerStepHandler:KeplerStepHandler(TestProblem3)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11545= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest:testBigStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11546= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest:KeplerStepHandler(TestProblem3)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11547= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest:testUnstableDerivative()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11548= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest:testSmallStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11549= org.apache.commons.math3.ode.nonstiff.GillIntegratorTest:testKepler()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java
11550= org.apache.commons.math3.stat.FrequencyTest:testPcts()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11551= org.apache.commons.math3.stat.FrequencyTest:testIntegerValues()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11552= org.apache.commons.math3.stat.FrequencyTest:testMerge()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11553= org.apache.commons.math3.stat.FrequencyTest:testSerial()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11554= org.apache.commons.math3.stat.FrequencyTest:testEmptyTable()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11555= org.apache.commons.math3.stat.FrequencyTest:testGetUniqueCount()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11556= org.apache.commons.math3.stat.FrequencyTest:testModeDoubleNan()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11557= org.apache.commons.math3.stat.FrequencyTest:testModeFloatNan()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11558= org.apache.commons.math3.stat.FrequencyTest:setUp()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11559= org.apache.commons.math3.stat.FrequencyTest:testNonComparablePct()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11560= org.apache.commons.math3.stat.FrequencyTest:testMode()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11561= org.apache.commons.math3.stat.FrequencyTest:testIncrement()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11562= org.apache.commons.math3.stat.FrequencyTest:testAdd()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11563= org.apache.commons.math3.stat.FrequencyTest:testNonComparableCumPct()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11564= org.apache.commons.math3.stat.FrequencyTest:testMergeCollection()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11565= org.apache.commons.math3.stat.FrequencyTest:testToString()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11566= org.apache.commons.math3.stat.FrequencyTest:testCounts()	/src/test/java/org/apache/commons/math3/stat/FrequencyTest.java
11567= org.apache.commons.math3.geometry.spherical.oned.S1PointTest:testDistance()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/S1PointTest.java
11568= org.apache.commons.math3.geometry.spherical.oned.S1PointTest:testSpace()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/S1PointTest.java
11569= org.apache.commons.math3.geometry.spherical.oned.S1PointTest:testNaN()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/S1PointTest.java
11570= org.apache.commons.math3.geometry.spherical.oned.S1PointTest:testS1Point()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/S1PointTest.java
11571= org.apache.commons.math3.geometry.spherical.oned.S1PointTest:testEquals()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/S1PointTest.java
11572= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithQRTest:testMaxEvaluations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithQRTest.java
11573= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithQRTest:testMoreEstimatedParametersUnsorted()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithQRTest.java
11574= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithQRTest:getMaxIterations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithQRTest.java
11575= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithQRTest:testHahn1()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithQRTest.java
11576= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithQRTest:getOptimizer()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithQRTest.java
11577= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithQRTest:testCircleFittingBadInit()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithQRTest.java
11578= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:testIssue596()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11579= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11580= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:testKepler()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11581= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11582= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11583= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:VariableStepHandler()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11584= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler:KeplerStepHandler(TestProblem3)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11585= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11586= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:testIntegratorControls()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11587= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11588= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:testUnstableDerivative()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11589= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:getMaxError(FirstOrderIntegrator, TestProblemAbstract)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11590= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:testIncreasingTolerance()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11591= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11592= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:testBackward()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11593= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler:VariableStepHandler()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11594= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:testTooLargeFirstStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11595= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11596= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11597= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:testMinStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11598= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:testVariableSteps()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11599= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:testNullIntervalCheck()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11600= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:testDimensionCheck()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11601= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:KeplerStepHandler(TestProblem3)	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11602= org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest:testEvents()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java
11603= org.apache.commons.math3.analysis.solvers.BisectionSolverTest:testQuinticZero()	/src/test/java/org/apache/commons/math3/analysis/solvers/BisectionSolverTest.java
11604= org.apache.commons.math3.analysis.solvers.BisectionSolverTest:testMath369()	/src/test/java/org/apache/commons/math3/analysis/solvers/BisectionSolverTest.java
11605= org.apache.commons.math3.analysis.solvers.BisectionSolverTest:testSinZero()	/src/test/java/org/apache/commons/math3/analysis/solvers/BisectionSolverTest.java
11606= org.apache.commons.math3.distribution.ZipfDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/ZipfDistributionTest.java
11607= org.apache.commons.math3.distribution.ZipfDistributionTest:makeInverseCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/ZipfDistributionTest.java
11608= org.apache.commons.math3.distribution.ZipfDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/ZipfDistributionTest.java
11609= org.apache.commons.math3.distribution.ZipfDistributionTest:testPreconditions1()	/src/test/java/org/apache/commons/math3/distribution/ZipfDistributionTest.java
11610= org.apache.commons.math3.distribution.ZipfDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/ZipfDistributionTest.java
11611= org.apache.commons.math3.distribution.ZipfDistributionTest:testPreconditions2()	/src/test/java/org/apache/commons/math3/distribution/ZipfDistributionTest.java
11612= org.apache.commons.math3.distribution.ZipfDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/ZipfDistributionTest.java
11613= org.apache.commons.math3.distribution.ZipfDistributionTest:makeDensityTestPoints()	/src/test/java/org/apache/commons/math3/distribution/ZipfDistributionTest.java
11614= org.apache.commons.math3.distribution.ZipfDistributionTest:ZipfDistributionTest()	/src/test/java/org/apache/commons/math3/distribution/ZipfDistributionTest.java
11615= org.apache.commons.math3.distribution.ZipfDistributionTest:makeLogDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/ZipfDistributionTest.java
11616= org.apache.commons.math3.distribution.ZipfDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/ZipfDistributionTest.java
11617= org.apache.commons.math3.distribution.ZipfDistributionTest:makeInverseCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/ZipfDistributionTest.java
11618= org.apache.commons.math3.exception.util.ExceptionContextTest.Unserializable:Unserializable()	/src/test/java/org/apache/commons/math3/exception/util/ExceptionContextTest.java
11619= org.apache.commons.math3.exception.util.ExceptionContextTest:Unserializable()	/src/test/java/org/apache/commons/math3/exception/util/ExceptionContextTest.java
11620= org.apache.commons.math3.exception.util.ExceptionContextTest:testMessageChain()	/src/test/java/org/apache/commons/math3/exception/util/ExceptionContextTest.java
11621= org.apache.commons.math3.exception.util.ExceptionContextTest:testSerialize()	/src/test/java/org/apache/commons/math3/exception/util/ExceptionContextTest.java
11622= org.apache.commons.math3.exception.util.ExceptionContextTest:testSerializeUnserializable()	/src/test/java/org/apache/commons/math3/exception/util/ExceptionContextTest.java
11623= org.apache.commons.math3.exception.util.ExceptionContextTest:testContext()	/src/test/java/org/apache/commons/math3/exception/util/ExceptionContextTest.java
11624= org.apache.commons.math3.exception.util.ExceptionContextTest:testNoArgAddMessage()	/src/test/java/org/apache/commons/math3/exception/util/ExceptionContextTest.java
11625= org.apache.commons.math3.genetics.OnePointCrossoverTest:testCrossover()	/src/test/java/org/apache/commons/math3/genetics/OnePointCrossoverTest.java
11626= org.apache.commons.math3.util.ResizableDoubleArrayTest:testAddElementRolling()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11627= org.apache.commons.math3.util.ResizableDoubleArrayTest:testAdd1000()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11628= org.apache.commons.math3.util.ResizableDoubleArrayTest:testConstructors()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11629= org.apache.commons.math3.util.ResizableDoubleArrayTest:testCompute()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11630= org.apache.commons.math3.util.ResizableDoubleArrayTest:verifyInequality(ResizableDoubleArray, ResizableDoubleArray)	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11631= org.apache.commons.math3.util.ResizableDoubleArrayTest:testSetElementArbitraryExpansion2()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11632= org.apache.commons.math3.util.ResizableDoubleArrayTest:testDiscard()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11633= org.apache.commons.math3.util.ResizableDoubleArrayTest:testGetArrayRef()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11634= org.apache.commons.math3.util.ResizableDoubleArrayTest:testSetElementArbitraryExpansion1()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11635= org.apache.commons.math3.util.ResizableDoubleArrayTest:testWithInitialCapacity()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11636= org.apache.commons.math3.util.ResizableDoubleArrayTest:evaluate(double[])	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11637= org.apache.commons.math3.util.ResizableDoubleArrayTest:setUp()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11638= org.apache.commons.math3.util.ResizableDoubleArrayTest:evaluate(double[], int, int)	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11639= org.apache.commons.math3.util.ResizableDoubleArrayTest:tearDown()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11640= org.apache.commons.math3.util.ResizableDoubleArrayTest:testSetNumberOfElements()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11641= org.apache.commons.math3.util.ResizableDoubleArrayTest:testMutators()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11642= org.apache.commons.math3.util.ResizableDoubleArrayTest:verifyEquality(ResizableDoubleArray, ResizableDoubleArray)	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11643= org.apache.commons.math3.util.ResizableDoubleArrayTest:testEqualsAndHashCode()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11644= org.apache.commons.math3.util.ResizableDoubleArrayTest:testSubstitute()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11645= org.apache.commons.math3.util.ResizableDoubleArrayTest:testAddElements()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11646= org.apache.commons.math3.util.ResizableDoubleArrayTest:testWithInitialCapacityAndExpansionFactor()	/src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java
11647= org.apache.commons.math3.geometry.euclidean.twod.SegmentTest:testDistance()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SegmentTest.java
11648= org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest:testParameters()	/src/test/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegratorTest.java
11649= org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest:testQuinticFunction()	/src/test/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegratorTest.java
11650= org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest:testSinFunction()	/src/test/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegratorTest.java
11651= org.apache.commons.math3.analysis.MonitoredFunction:getCallsCount()	/src/test/java/org/apache/commons/math3/analysis/MonitoredFunction.java
11652= org.apache.commons.math3.analysis.MonitoredFunction:value(double)	/src/test/java/org/apache/commons/math3/analysis/MonitoredFunction.java
11653= org.apache.commons.math3.analysis.MonitoredFunction:setCallsCount(int)	/src/test/java/org/apache/commons/math3/analysis/MonitoredFunction.java
11654= org.apache.commons.math3.analysis.MonitoredFunction:MonitoredFunction(UnivariateFunction)	/src/test/java/org/apache/commons/math3/analysis/MonitoredFunction.java
11655= org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest:testFixedState()	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolatorTest.java
11656= org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest:BadStepInterpolator()	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolatorTest.java
11657= org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest:testSerialization()	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolatorTest.java
11658= org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest:BadStepInterpolator(double[], boolean)	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolatorTest.java
11659= org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest:doFinalize()	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolatorTest.java
11660= org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator:BadStepInterpolator(double[], boolean)	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolatorTest.java
11661= org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator:doFinalize()	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolatorTest.java
11662= org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest:testNoReset()	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolatorTest.java
11663= org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest:testImpossibleSerialization()	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolatorTest.java
11664= org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator:BadStepInterpolator()	/src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolatorTest.java
11665= org.apache.commons.math3.stat.CertifiedDataTest:testSummaryStatistics()	/src/test/java/org/apache/commons/math3/stat/CertifiedDataTest.java
11666= org.apache.commons.math3.stat.CertifiedDataTest:loadStats(String, Object)	/src/test/java/org/apache/commons/math3/stat/CertifiedDataTest.java
11667= org.apache.commons.math3.stat.CertifiedDataTest:testDescriptiveStatistics()	/src/test/java/org/apache/commons/math3/stat/CertifiedDataTest.java
11668= org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest:testMath789()	/src/test/java/org/apache/commons/math3/linear/RectangularCholeskyDecompositionTest.java
11669= org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest:testFullRank()	/src/test/java/org/apache/commons/math3/linear/RectangularCholeskyDecompositionTest.java
11670= org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest:testDecomposition3x3()	/src/test/java/org/apache/commons/math3/linear/RectangularCholeskyDecompositionTest.java
11671= org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest:composeAndTest(RealMatrix, int)	/src/test/java/org/apache/commons/math3/linear/RectangularCholeskyDecompositionTest.java
11672= org.apache.commons.math3.geometry.euclidean.threed.LineTest:testContains()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java
11673= org.apache.commons.math3.geometry.euclidean.threed.LineTest:testLineDistance()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java
11674= org.apache.commons.math3.geometry.euclidean.threed.LineTest:testClosest()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java
11675= org.apache.commons.math3.geometry.euclidean.threed.LineTest:testPointDistance()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java
11676= org.apache.commons.math3.geometry.euclidean.threed.LineTest:testIntersection()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java
11677= org.apache.commons.math3.geometry.euclidean.threed.LineTest:testRevert()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java
11678= org.apache.commons.math3.geometry.euclidean.threed.LineTest:testSimilar()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java
11679= org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest:testSinMin()	/src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java
11680= org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest:testQuinticMin()	/src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java
11681= org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest:testBadFunction()	/src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java
11682= org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest:value(double)	/src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java
11683= org.apache.commons.math3.analysis.solvers.MullerSolver2Test:testExpm1Function()	/src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java
11684= org.apache.commons.math3.analysis.solvers.MullerSolver2Test:testSinFunction()	/src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java
11685= org.apache.commons.math3.analysis.solvers.MullerSolver2Test:testQuinticFunction()	/src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java
11686= org.apache.commons.math3.analysis.solvers.MullerSolver2Test:testParameters()	/src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java
11687= org.apache.commons.math3.linear.EigenDecompositionTest:isIncludedColumn(double[], RealMatrix, double)	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11688= org.apache.commons.math3.linear.EigenDecompositionTest:testDimension4WithSplit()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11689= org.apache.commons.math3.linear.EigenDecompositionTest:testEigenvalues()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11690= org.apache.commons.math3.linear.EigenDecompositionTest:testDimension2()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11691= org.apache.commons.math3.linear.EigenDecompositionTest:testDimensions()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11692= org.apache.commons.math3.linear.EigenDecompositionTest:testDimension3()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11693= org.apache.commons.math3.linear.EigenDecompositionTest:setUp()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11694= org.apache.commons.math3.linear.EigenDecompositionTest:testMath1051()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11695= org.apache.commons.math3.linear.EigenDecompositionTest:testSquareRoot()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11696= org.apache.commons.math3.linear.EigenDecompositionTest:testDimension4WithoutSplit()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11697= org.apache.commons.math3.linear.EigenDecompositionTest:testMathpbx03()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11698= org.apache.commons.math3.linear.EigenDecompositionTest:testDistinctEigenvalues()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11699= org.apache.commons.math3.linear.EigenDecompositionTest:testMath308()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11700= org.apache.commons.math3.linear.EigenDecompositionTest:testMathpbx02()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11701= org.apache.commons.math3.linear.EigenDecompositionTest:testUnsymmetric()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11702= org.apache.commons.math3.linear.EigenDecompositionTest:testRandomUnsymmetricMatrix()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11703= org.apache.commons.math3.linear.EigenDecompositionTest:testNormalDistributionUnsymmetricMatrix()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11704= org.apache.commons.math3.linear.EigenDecompositionTest:testTinyValues()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11705= org.apache.commons.math3.linear.EigenDecompositionTest:checkUnsymmetricMatrix(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11706= org.apache.commons.math3.linear.EigenDecompositionTest:testDiagonal()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11707= org.apache.commons.math3.linear.EigenDecompositionTest:testMath848()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11708= org.apache.commons.math3.linear.EigenDecompositionTest:isIncludedValue(double, double[], double)	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11709= org.apache.commons.math3.linear.EigenDecompositionTest:testSquareRootNonSymmetric()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11710= org.apache.commons.math3.linear.EigenDecompositionTest:testVOrthogonal()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11711= org.apache.commons.math3.linear.EigenDecompositionTest:testRepeatedEigenvalue()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11712= org.apache.commons.math3.linear.EigenDecompositionTest:testEigenvectors()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11713= org.apache.commons.math3.linear.EigenDecompositionTest:tearDown()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11714= org.apache.commons.math3.linear.EigenDecompositionTest:checkEigenValues(double[], EigenDecomposition, double)	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11715= org.apache.commons.math3.linear.EigenDecompositionTest:testDimension3MultipleRoot()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11716= org.apache.commons.math3.linear.EigenDecompositionTest:createOrthogonalMatrix(Random, int)	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11717= org.apache.commons.math3.linear.EigenDecompositionTest:testDimension1()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11718= org.apache.commons.math3.linear.EigenDecompositionTest:checkEigenVector(double[], EigenDecomposition, double)	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11719= org.apache.commons.math3.linear.EigenDecompositionTest:testBigMatrix()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11720= org.apache.commons.math3.linear.EigenDecompositionTest:testZeroDivide()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11721= org.apache.commons.math3.linear.EigenDecompositionTest:createTestMatrix(Random, double[])	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11722= org.apache.commons.math3.linear.EigenDecompositionTest:testSymmetric()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11723= org.apache.commons.math3.linear.EigenDecompositionTest:testSquareRootNonPositiveDefinite()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11724= org.apache.commons.math3.linear.EigenDecompositionTest:testTridiagonal()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11725= org.apache.commons.math3.linear.EigenDecompositionTest:testAEqualVDVt()	/src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java
11726= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:testSmallStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11727= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:KeplerHandler(TestProblem3)	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11728= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11729= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:testMissedEndEvent()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11730= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:testSanityChecks()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11731= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:testBigStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11732= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:testDecreasingSteps()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11733= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:testKepler()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11734= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11735= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler:KeplerHandler(TestProblem3)	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11736= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11737= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11738= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11739= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:testStepSize()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11740= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11741= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:testBackward()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11742= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11743= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11744= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java
11745= org.apache.commons.math3.stat.descriptive.summary.ProductTest:checkClearValue(StorelessUnivariateStatistic)	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/ProductTest.java
11746= org.apache.commons.math3.stat.descriptive.summary.ProductTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/ProductTest.java
11747= org.apache.commons.math3.stat.descriptive.summary.ProductTest:testSpecialValues()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/ProductTest.java
11748= org.apache.commons.math3.stat.descriptive.summary.ProductTest:testWeightedProduct()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/ProductTest.java
11749= org.apache.commons.math3.stat.descriptive.summary.ProductTest:expectedWeightedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/ProductTest.java
11750= org.apache.commons.math3.stat.descriptive.summary.ProductTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/ProductTest.java
11751= org.apache.commons.math3.stat.descriptive.summary.ProductTest:getTolerance()	/src/test/java/org/apache/commons/math3/stat/descriptive/summary/ProductTest.java
11752= org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest:testDerivativesConsistency()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillStepInterpolatorTest.java
11753= org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest:serialization()	/src/test/java/org/apache/commons/math3/ode/nonstiff/GillStepInterpolatorTest.java
11754= org.apache.commons.math3.stat.descriptive.moment.KurtosisTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/KurtosisTest.java
11755= org.apache.commons.math3.stat.descriptive.moment.KurtosisTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/KurtosisTest.java
11756= org.apache.commons.math3.stat.descriptive.moment.KurtosisTest:testNaN()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/KurtosisTest.java
11757= org.apache.commons.math3.optimization.general.RandomStraightLinePointGenerator:generate(int)	/src/test/java/org/apache/commons/math3/optimization/general/RandomStraightLinePointGenerator.java
11758= org.apache.commons.math3.optimization.general.RandomStraightLinePointGenerator:RandomStraightLinePointGenerator(double, double, double, double, double, long)	/src/test/java/org/apache/commons/math3/optimization/general/RandomStraightLinePointGenerator.java
11759= org.apache.commons.math3.optimization.general.RandomStraightLinePointGenerator:create()	/src/test/java/org/apache/commons/math3/optimization/general/RandomStraightLinePointGenerator.java
11760= org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest:testParameters()	/src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java
11761= org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest:testSinFunction()	/src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java
11762= org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest:testExpm1Function()	/src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java
11763= org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest:partialerror(double, double)	/src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java
11764= org.apache.commons.math3.random.Well44497aTest:testReferenceCode()	/src/test/java/org/apache/commons/math3/random/Well44497aTest.java
11765= org.apache.commons.math3.random.Well44497aTest:makeGenerator()	/src/test/java/org/apache/commons/math3/random/Well44497aTest.java
11766= org.apache.commons.math3.analysis.integration.MidPointIntegratorTest:testSinFunction()	/src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java
11767= org.apache.commons.math3.analysis.integration.MidPointIntegratorTest:testQuinticFunction()	/src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java
11768= org.apache.commons.math3.analysis.integration.MidPointIntegratorTest:testLowAccuracy()	/src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java
11769= org.apache.commons.math3.analysis.integration.MidPointIntegratorTest:testParameters()	/src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java
11770= org.apache.commons.math3.linear.RealMatrixFormatTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatTest.java
11771= org.apache.commons.math3.linear.RealMatrixFormatTest:getLocale()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatTest.java
11772= org.apache.commons.math3.geometry.spherical.oned.ArcTest:testFullCircle()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcTest.java
11773= org.apache.commons.math3.geometry.spherical.oned.ArcTest:testTolerance()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcTest.java
11774= org.apache.commons.math3.geometry.spherical.oned.ArcTest:testWrongInterval()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcTest.java
11775= org.apache.commons.math3.geometry.spherical.oned.ArcTest:testArc()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcTest.java
11776= org.apache.commons.math3.geometry.spherical.oned.ArcTest:testSmall()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/ArcTest.java
11777= org.apache.commons.math3.fitting.leastsquares.CircleProblem:CircleProblem(double, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleProblem.java
11778= org.apache.commons.math3.fitting.leastsquares.CircleProblem:jacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleProblem.java
11779= org.apache.commons.math3.fitting.leastsquares.CircleProblem:target()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleProblem.java
11780= org.apache.commons.math3.fitting.leastsquares.CircleProblem:addPoint(double, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleProblem.java
11781= org.apache.commons.math3.fitting.leastsquares.CircleProblem:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleProblem.java
11782= org.apache.commons.math3.fitting.leastsquares.CircleProblem:CircleProblem(double, double, int)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleProblem.java
11783= org.apache.commons.math3.fitting.leastsquares.CircleProblem:value(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleProblem.java
11784= org.apache.commons.math3.fitting.leastsquares.CircleProblem:weight()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleProblem.java
11785= org.apache.commons.math3.fitting.leastsquares.CircleProblem:getModelFunction()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleProblem.java
11786= org.apache.commons.math3.distribution.TriangularDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/TriangularDistributionTest.java
11787= org.apache.commons.math3.distribution.TriangularDistributionTest:makeInverseCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/TriangularDistributionTest.java
11788= org.apache.commons.math3.distribution.TriangularDistributionTest:testPreconditions4()	/src/test/java/org/apache/commons/math3/distribution/TriangularDistributionTest.java
11789= org.apache.commons.math3.distribution.TriangularDistributionTest:testPreconditions3()	/src/test/java/org/apache/commons/math3/distribution/TriangularDistributionTest.java
11790= org.apache.commons.math3.distribution.TriangularDistributionTest:testPreconditions2()	/src/test/java/org/apache/commons/math3/distribution/TriangularDistributionTest.java
11791= org.apache.commons.math3.distribution.TriangularDistributionTest:testPreconditions1()	/src/test/java/org/apache/commons/math3/distribution/TriangularDistributionTest.java
11792= org.apache.commons.math3.distribution.TriangularDistributionTest:testMeanVariance()	/src/test/java/org/apache/commons/math3/distribution/TriangularDistributionTest.java
11793= org.apache.commons.math3.distribution.TriangularDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/TriangularDistributionTest.java
11794= org.apache.commons.math3.distribution.TriangularDistributionTest:testGetUpperBound()	/src/test/java/org/apache/commons/math3/distribution/TriangularDistributionTest.java
11795= org.apache.commons.math3.distribution.TriangularDistributionTest:testGetLowerBound()	/src/test/java/org/apache/commons/math3/distribution/TriangularDistributionTest.java
11796= org.apache.commons.math3.distribution.TriangularDistributionTest:setUp()	/src/test/java/org/apache/commons/math3/distribution/TriangularDistributionTest.java
11797= org.apache.commons.math3.distribution.TriangularDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/TriangularDistributionTest.java
11798= org.apache.commons.math3.distribution.TriangularDistributionTest:makeInverseCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/TriangularDistributionTest.java
11799= org.apache.commons.math3.distribution.TriangularDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/TriangularDistributionTest.java
11800= org.apache.commons.math3.util.PrecisionTest:testEqualsWithAllowedDelta()	/src/test/java/org/apache/commons/math3/util/PrecisionTest.java
11801= org.apache.commons.math3.util.PrecisionTest:testMath843()	/src/test/java/org/apache/commons/math3/util/PrecisionTest.java
11802= org.apache.commons.math3.util.PrecisionTest:testEqualsIncludingNaNWithAllowedDelta()	/src/test/java/org/apache/commons/math3/util/PrecisionTest.java
11803= org.apache.commons.math3.util.PrecisionTest:testEqualsWithRelativeTolerance()	/src/test/java/org/apache/commons/math3/util/PrecisionTest.java
11804= org.apache.commons.math3.util.PrecisionTest:testEqualsWithAllowedUlps()	/src/test/java/org/apache/commons/math3/util/PrecisionTest.java
11805= org.apache.commons.math3.util.PrecisionTest:testCompareToEpsilon()	/src/test/java/org/apache/commons/math3/util/PrecisionTest.java
11806= org.apache.commons.math3.util.PrecisionTest:testRepresentableDelta()	/src/test/java/org/apache/commons/math3/util/PrecisionTest.java
11807= org.apache.commons.math3.util.PrecisionTest:testMath475()	/src/test/java/org/apache/commons/math3/util/PrecisionTest.java
11808= org.apache.commons.math3.util.PrecisionTest:testIssue721()	/src/test/java/org/apache/commons/math3/util/PrecisionTest.java
11809= org.apache.commons.math3.util.PrecisionTest:testEqualsIncludingNaN()	/src/test/java/org/apache/commons/math3/util/PrecisionTest.java
11810= org.apache.commons.math3.util.PrecisionTest:testFloatEqualsWithAllowedUlps()	/src/test/java/org/apache/commons/math3/util/PrecisionTest.java
11811= org.apache.commons.math3.util.PrecisionTest:testRoundFloat()	/src/test/java/org/apache/commons/math3/util/PrecisionTest.java
11812= org.apache.commons.math3.util.PrecisionTest:testEqualsIncludingNaNWithAllowedUlps()	/src/test/java/org/apache/commons/math3/util/PrecisionTest.java
11813= org.apache.commons.math3.util.PrecisionTest:testCompareToMaxUlps()	/src/test/java/org/apache/commons/math3/util/PrecisionTest.java
11814= org.apache.commons.math3.util.PrecisionTest:testRoundDouble()	/src/test/java/org/apache/commons/math3/util/PrecisionTest.java
11815= org.apache.commons.math3.linear.SparseRealVectorTest:testEbeMultiplyMixedTypes()	/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java
11816= org.apache.commons.math3.linear.SparseRealVectorTest:createFunctions()	/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java
11817= org.apache.commons.math3.linear.SparseRealVectorTest:testConcurrentModification()	/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java
11818= org.apache.commons.math3.linear.SparseRealVectorTest:testEbeDivideSameType()	/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java
11819= org.apache.commons.math3.linear.SparseRealVectorTest:create(double[])	/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java
11820= org.apache.commons.math3.linear.SparseRealVectorTest:testConstructors()	/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java
11821= org.apache.commons.math3.linear.SparseRealVectorTest:testEbeMultiplySameType()	/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java
11822= org.apache.commons.math3.primes.PrimesTest:assertNextPrimeException(int, Throwable)	/src/test/java/org/apache/commons/math3/primes/PrimesTest.java
11823= org.apache.commons.math3.primes.PrimesTest:product(List<Integer>)	/src/test/java/org/apache/commons/math3/primes/PrimesTest.java
11824= org.apache.commons.math3.primes.PrimesTest:checkPrimeFactors(List<Integer>)	/src/test/java/org/apache/commons/math3/primes/PrimesTest.java
11825= org.apache.commons.math3.primes.PrimesTest:sum(List<Integer>)	/src/test/java/org/apache/commons/math3/primes/PrimesTest.java
11826= org.apache.commons.math3.primes.PrimesTest:testPrimeFactors()	/src/test/java/org/apache/commons/math3/primes/PrimesTest.java
11827= org.apache.commons.math3.primes.PrimesTest:<clinit0>	/src/test/java/org/apache/commons/math3/primes/PrimesTest.java
11828= org.apache.commons.math3.primes.PrimesTest:testIsPrime()	/src/test/java/org/apache/commons/math3/primes/PrimesTest.java
11829= org.apache.commons.math3.primes.PrimesTest:assertPrimeFactorsException(int, Throwable)	/src/test/java/org/apache/commons/math3/primes/PrimesTest.java
11830= org.apache.commons.math3.primes.PrimesTest:testNextPrime()	/src/test/java/org/apache/commons/math3/primes/PrimesTest.java
11831= org.apache.commons.math3.genetics.UniformCrossoverTest:testCrossover()	/src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java
11832= org.apache.commons.math3.genetics.UniformCrossoverTest:testCrossoverDimensionMismatchException()	/src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java
11833= org.apache.commons.math3.genetics.UniformCrossoverTest:testCrossoverInvalidFixedLengthChromosomeFirst()	/src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java
11834= org.apache.commons.math3.genetics.UniformCrossoverTest:testRatioTooHigh()	/src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java
11835= org.apache.commons.math3.genetics.UniformCrossoverTest:fitness()	/src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java
11836= org.apache.commons.math3.genetics.UniformCrossoverTest:setUpBeforeClass()	/src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java
11837= org.apache.commons.math3.genetics.UniformCrossoverTest:testCrossoverInvalidFixedLengthChromosomeSecond()	/src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java
11838= org.apache.commons.math3.genetics.UniformCrossoverTest:performCrossover(double)	/src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java
11839= org.apache.commons.math3.genetics.UniformCrossoverTest:testRatioTooLow()	/src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java
11840= org.apache.commons.math3.ode.sampling.StepNormalizerTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerTest.java
11841= org.apache.commons.math3.ode.sampling.StepNormalizerTest:handleStep(double, double[], double[], boolean)	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerTest.java
11842= org.apache.commons.math3.ode.sampling.StepNormalizerTest:setLastSeen(boolean)	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerTest.java
11843= org.apache.commons.math3.ode.sampling.StepNormalizerTest:setUp()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerTest.java
11844= org.apache.commons.math3.ode.sampling.StepNormalizerTest:tearDown()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerTest.java
11845= org.apache.commons.math3.ode.sampling.StepNormalizerTest:checkValue(double, double)	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerTest.java
11846= org.apache.commons.math3.ode.sampling.StepNormalizerTest:testBeforeEnd()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerTest.java
11847= org.apache.commons.math3.ode.sampling.StepNormalizerTest:StepNormalizerTest()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerTest.java
11848= org.apache.commons.math3.ode.sampling.StepNormalizerTest:testBoundaries()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerTest.java
11849= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testStepSizeUnstability()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11850= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testWrongOrder()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11851= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testGaussian()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11852= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testSerialization()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11853= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testMatrixFunction()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11854= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testLinear()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11855= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testTooLargeStep()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11856= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testBounds()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11857= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testWrongOrderMatrix()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11858= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testWrongNumberOfPoints()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11859= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testWrongOrderVector()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11860= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testConstant()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11861= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testVectorFunction()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11862= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testSeveralFreeParameters()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11863= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testBoundedSqrt()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11864= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:testWrongStepSize()	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11865= org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest:value(double)	/src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java
11866= org.apache.commons.math3.geometry.euclidean.twod.FrenchVector2DFormatTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/FrenchVector2DFormatTest.java
11867= org.apache.commons.math3.geometry.euclidean.twod.FrenchVector2DFormatTest:getLocale()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/FrenchVector2DFormatTest.java
11868= org.apache.commons.math3.geometry.enclosing.WelzlEncloser3DTest:testLargeSamples()	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser3DTest.java
11869= org.apache.commons.math3.geometry.enclosing.WelzlEncloser3DTest:checkSphere(List<Vector3D>, double)	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser3DTest.java
11870= org.apache.commons.math3.geometry.enclosing.WelzlEncloser3DTest:testReducingBall()	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser3DTest.java
11871= org.apache.commons.math3.geometry.enclosing.WelzlEncloser3DTest:checkSphere(List<Vector3D>)	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser3DTest.java
11872= org.apache.commons.math3.geometry.enclosing.WelzlEncloser3DTest:testNoPoints()	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser3DTest.java
11873= org.apache.commons.math3.geometry.enclosing.WelzlEncloser3DTest:testNullList()	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser3DTest.java
11874= org.apache.commons.math3.geometry.enclosing.WelzlEncloser3DTest:testInfiniteLoop()	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser3DTest.java
11875= org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest:testPopulation()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/SemiVarianceTest.java
11876= org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest:testVarianceDecompMeanCutoff()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/SemiVarianceTest.java
11877= org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest:testSingleUp()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/SemiVarianceTest.java
11878= org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest:testInsufficientData()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/SemiVarianceTest.java
11879= org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest:testNoVariance()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/SemiVarianceTest.java
11880= org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest:testVarianceDecompNonMeanCutoff()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/SemiVarianceTest.java
11881= org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest:testSample()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/SemiVarianceTest.java
11882= org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest:testNonMeanCutoffs()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/SemiVarianceTest.java
11883= org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest:testSingleDown()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/SemiVarianceTest.java
11884= org.apache.commons.math3.geometry.spherical.oned.Sphere1Test:testDimension()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/Sphere1Test.java
11885= org.apache.commons.math3.geometry.spherical.oned.Sphere1Test:testSubSpace()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/Sphere1Test.java
11886= org.apache.commons.math3.geometry.spherical.oned.Sphere1Test:testSerialization()	/src/test/java/org/apache/commons/math3/geometry/spherical/oned/Sphere1Test.java
11887= org.apache.commons.math3.linear.BlockRealMatrixTest:testCopySubMatrix()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11888= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetSubMatrix()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11889= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetRowVector()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11890= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetColumnVector()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11891= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetSetRowLarge()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11892= org.apache.commons.math3.linear.BlockRealMatrixTest:checkCopy(RealMatrix, double[][], int, int, int, int)	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11893= org.apache.commons.math3.linear.BlockRealMatrixTest:testOperateLarge()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11894= org.apache.commons.math3.linear.BlockRealMatrixTest:testSetSubMatrix()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11895= org.apache.commons.math3.linear.BlockRealMatrixTest:assertClose(RealMatrix, RealMatrix, double)	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11896= org.apache.commons.math3.linear.BlockRealMatrixTest:testOperate()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11897= org.apache.commons.math3.linear.BlockRealMatrixTest.GetVisitor:getCount()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11898= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetSetMatrixLarge()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11899= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetRowMatrix()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11900= org.apache.commons.math3.linear.BlockRealMatrixTest:testSetRowVector()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11901= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetVectors()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11902= org.apache.commons.math3.linear.BlockRealMatrixTest:testTrace()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11903= org.apache.commons.math3.linear.BlockRealMatrixTest:testExamples()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11904= org.apache.commons.math3.linear.BlockRealMatrixTest.GetVisitor:visit(int, int, double)	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11905= org.apache.commons.math3.linear.BlockRealMatrixTest:testToString()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11906= org.apache.commons.math3.linear.BlockRealMatrixTest:testPremultiplyVector()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11907= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetColumnMatrix()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11908= org.apache.commons.math3.linear.BlockRealMatrixTest:checkCopy(RealMatrix, double[][], int[], int[])	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11909= org.apache.commons.math3.linear.BlockRealMatrixTest:assertClose(double[], double[], double)	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11910= org.apache.commons.math3.linear.BlockRealMatrixTest.SetVisitor:visit(int, int, double)	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11911= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetSetColumnVectorLarge()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11912= org.apache.commons.math3.linear.BlockRealMatrixTest:testSetColumn()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11913= org.apache.commons.math3.linear.BlockRealMatrixTest:testSetRowMatrix()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11914= org.apache.commons.math3.linear.BlockRealMatrixTest:checkGetSubMatrix(RealMatrix, double[][], int[], int[])	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11915= org.apache.commons.math3.linear.BlockRealMatrixTest:testSetColumnMatrix()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11916= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetSetColumnLarge()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11917= org.apache.commons.math3.linear.BlockRealMatrixTest:columnToVector(double[][])	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11918= org.apache.commons.math3.linear.BlockRealMatrixTest:testDimensions()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11919= org.apache.commons.math3.linear.BlockRealMatrixTest:testAdd()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11920= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetRow()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11921= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetColumn()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11922= org.apache.commons.math3.linear.BlockRealMatrixTest:columnToArray(double[][])	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11923= org.apache.commons.math3.linear.BlockRealMatrixTest:testTranspose()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11924= org.apache.commons.math3.linear.BlockRealMatrixTest:testOperatePremultiplyLarge()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11925= org.apache.commons.math3.linear.BlockRealMatrixTest:testEqualsAndHashCode()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11926= org.apache.commons.math3.linear.BlockRealMatrixTest:testSerial()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11927= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetSetRowVectorLarge()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11928= org.apache.commons.math3.linear.BlockRealMatrixTest:testScalarAdd()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11929= org.apache.commons.math3.linear.BlockRealMatrixTest:testSeveralBlocks()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11930= org.apache.commons.math3.linear.BlockRealMatrixTest:testFrobeniusNorm()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11931= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetEntry()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11932= org.apache.commons.math3.linear.BlockRealMatrixTest:testCopyFunctions()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11933= org.apache.commons.math3.linear.BlockRealMatrixTest:testSetColumnVector()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11934= org.apache.commons.math3.linear.BlockRealMatrixTest:createRandomMatrix(Random, int, int)	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11935= org.apache.commons.math3.linear.BlockRealMatrixTest:checkGetSubMatrix(RealMatrix, double[][], int, int, int, int)	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11936= org.apache.commons.math3.linear.BlockRealMatrixTest:testAddFail()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11937= org.apache.commons.math3.linear.BlockRealMatrixTest:visit(int, int, double)	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11938= org.apache.commons.math3.linear.BlockRealMatrixTest:testPlusMinus()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11939= org.apache.commons.math3.linear.BlockRealMatrixTest:testMath209()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11940= org.apache.commons.math3.linear.BlockRealMatrixTest:testMultiply2()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11941= org.apache.commons.math3.linear.BlockRealMatrixTest:testWalk()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11942= org.apache.commons.math3.linear.BlockRealMatrixTest:testNorm()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11943= org.apache.commons.math3.linear.BlockRealMatrixTest:checkArrays(double[], double[])	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11944= org.apache.commons.math3.linear.BlockRealMatrixTest:getCount()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11945= org.apache.commons.math3.linear.BlockRealMatrixTest:testSetRow()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11946= org.apache.commons.math3.linear.BlockRealMatrixTest:testPremultiply()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11947= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetSetRowMatrixLarge()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11948= org.apache.commons.math3.linear.BlockRealMatrixTest:testGetSetColumnMatrixLarge()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11949= org.apache.commons.math3.linear.BlockRealMatrixTest:testMultiply()	/src/test/java/org/apache/commons/math3/linear/BlockRealMatrixTest.java
11950= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler:wasLastSeen()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11951= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11952= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest:testKepler()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11953= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest:VariableHandler()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11954= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11955= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest:testSmallLastStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11956= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler:DP54SmallLastHandler(double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11957= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest:testIncreasingTolerance()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11958= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest:testMinStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11959= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest:testVariableSteps()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11960= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest:KeplerHandler(TestProblem3)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11961= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest:testDimensionCheck()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11962= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11963= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11964= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest:DP54SmallLastHandler(double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11965= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler:VariableHandler()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11966= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11967= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler:KeplerHandler(TestProblem3)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11968= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11969= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest:testBackward()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11970= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11971= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest:wasLastSeen()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11972= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest:testEvents()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11973= org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java
11974= org.apache.commons.math3.optimization.univariate.BrentOptimizerTest:testBoundaries()	/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
11975= org.apache.commons.math3.optimization.univariate.BrentOptimizerTest:testQuinticMin()	/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
11976= org.apache.commons.math3.optimization.univariate.BrentOptimizerTest:testKeepInitIfBest()	/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
11977= org.apache.commons.math3.optimization.univariate.BrentOptimizerTest:testQuinticMax()	/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
11978= org.apache.commons.math3.optimization.univariate.BrentOptimizerTest:testSinMin()	/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
11979= org.apache.commons.math3.optimization.univariate.BrentOptimizerTest:testMinEndpoints()	/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
11980= org.apache.commons.math3.optimization.univariate.BrentOptimizerTest:testMath832()	/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
11981= org.apache.commons.math3.optimization.univariate.BrentOptimizerTest:testQuinticMinStatistics()	/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
11982= org.apache.commons.math3.optimization.univariate.BrentOptimizerTest:testSinMinWithValueChecker()	/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
11983= org.apache.commons.math3.optimization.univariate.BrentOptimizerTest:value(double)	/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
11984= org.apache.commons.math3.optimization.univariate.BrentOptimizerTest:testMath855()	/src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java
11985= org.apache.commons.math3.analysis.solvers.LaguerreSolverTest:testLinearFunction()	/src/test/java/org/apache/commons/math3/analysis/solvers/LaguerreSolverTest.java
11986= org.apache.commons.math3.analysis.solvers.LaguerreSolverTest:testParameters()	/src/test/java/org/apache/commons/math3/analysis/solvers/LaguerreSolverTest.java
11987= org.apache.commons.math3.analysis.solvers.LaguerreSolverTest:testQuinticFunction()	/src/test/java/org/apache/commons/math3/analysis/solvers/LaguerreSolverTest.java
11988= org.apache.commons.math3.analysis.solvers.LaguerreSolverTest:testQuadraticFunction()	/src/test/java/org/apache/commons/math3/analysis/solvers/LaguerreSolverTest.java
11989= org.apache.commons.math3.analysis.solvers.LaguerreSolverTest:testQuinticFunction2()	/src/test/java/org/apache/commons/math3/analysis/solvers/LaguerreSolverTest.java
11990= org.apache.commons.math3.optimization.general.StatisticalReferenceDatasetFactory:getModelValue(double, DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java
11991= org.apache.commons.math3.optimization.general.StatisticalReferenceDatasetFactory:createAll()	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java
11992= org.apache.commons.math3.optimization.general.StatisticalReferenceDatasetFactory:StatisticalReferenceDatasetFactory()	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java
11993= org.apache.commons.math3.optimization.general.StatisticalReferenceDatasetFactory:createHahn1()	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java
11994= org.apache.commons.math3.optimization.general.StatisticalReferenceDatasetFactory:createLanczos1()	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java
11995= org.apache.commons.math3.optimization.general.StatisticalReferenceDatasetFactory:createBufferedReaderFromResource(String)	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java
11996= org.apache.commons.math3.optimization.general.StatisticalReferenceDatasetFactory:createKirby2()	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java
11997= org.apache.commons.math3.optimization.general.StatisticalReferenceDatasetFactory:createMGH17()	/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java
11998= org.apache.commons.math3.random.Well512aTest:testReferenceCode()	/src/test/java/org/apache/commons/math3/random/Well512aTest.java
11999= org.apache.commons.math3.random.Well512aTest:makeGenerator()	/src/test/java/org/apache/commons/math3/random/Well512aTest.java
12000= org.apache.commons.math3.fitting.leastsquares.EvaluationTest:testComputeRMS()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTest.java
12001= org.apache.commons.math3.fitting.leastsquares.EvaluationTest:testComputeResiduals()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTest.java
12002= org.apache.commons.math3.fitting.leastsquares.EvaluationTest:builder(StatisticalReferenceDataset)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTest.java
12003= org.apache.commons.math3.fitting.leastsquares.EvaluationTest:testComputeValueAndJacobian()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTest.java
12004= org.apache.commons.math3.fitting.leastsquares.EvaluationTest:testComputeSigma()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTest.java
12005= org.apache.commons.math3.fitting.leastsquares.EvaluationTest:testEvaluateCopiesPoint()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTest.java
12006= org.apache.commons.math3.fitting.leastsquares.EvaluationTest:testComputeCovariance()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTest.java
12007= org.apache.commons.math3.fitting.leastsquares.EvaluationTest:value(RealVector)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTest.java
12008= org.apache.commons.math3.fitting.leastsquares.EvaluationTest:testComputeCost()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTest.java
12009= org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest:testInterpolateLinearDegenerateThreeSegment()	/src/test/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolatorTest.java
12010= org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest:verifyConsistency(PolynomialSplineFunction, double)	/src/test/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolatorTest.java
12011= org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest:verifyInterpolation(UnivariateFunction, double, double)	/src/test/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolatorTest.java
12012= org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest:testInterpolateLinear()	/src/test/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolatorTest.java
12013= org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest:testInterpolateLinearDegenerateTwoSegment()	/src/test/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolatorTest.java
12014= org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest:testInterpolateSin()	/src/test/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolatorTest.java
12015= org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest:testIllegalArguments()	/src/test/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolatorTest.java
12016= org.apache.commons.math3.genetics.OrderedCrossoverTest:testCrossover()	/src/test/java/org/apache/commons/math3/genetics/OrderedCrossoverTest.java
12017= org.apache.commons.math3.genetics.OrderedCrossoverTest:fitness()	/src/test/java/org/apache/commons/math3/genetics/OrderedCrossoverTest.java
12018= org.apache.commons.math3.genetics.OrderedCrossoverTest:testCrossoverInvalidFixedLengthChromosomeSecond()	/src/test/java/org/apache/commons/math3/genetics/OrderedCrossoverTest.java
12019= org.apache.commons.math3.genetics.OrderedCrossoverTest:testCrossoverDimensionMismatchException()	/src/test/java/org/apache/commons/math3/genetics/OrderedCrossoverTest.java
12020= org.apache.commons.math3.genetics.OrderedCrossoverTest:testCrossoverInvalidFixedLengthChromosomeFirst()	/src/test/java/org/apache/commons/math3/genetics/OrderedCrossoverTest.java
12021= org.apache.commons.math3.linear.RRQRSolverTest:testUnderdetermined()	/src/test/java/org/apache/commons/math3/linear/RRQRSolverTest.java
12022= org.apache.commons.math3.linear.RRQRSolverTest:testRank()	/src/test/java/org/apache/commons/math3/linear/RRQRSolverTest.java
12023= org.apache.commons.math3.linear.RRQRSolverTest:testSolve()	/src/test/java/org/apache/commons/math3/linear/RRQRSolverTest.java
12024= org.apache.commons.math3.linear.RRQRSolverTest:visit(int, int, double)	/src/test/java/org/apache/commons/math3/linear/RRQRSolverTest.java
12025= org.apache.commons.math3.linear.RRQRSolverTest:testOverdetermined()	/src/test/java/org/apache/commons/math3/linear/RRQRSolverTest.java
12026= org.apache.commons.math3.linear.RRQRSolverTest:testSolveRankErrors()	/src/test/java/org/apache/commons/math3/linear/RRQRSolverTest.java
12027= org.apache.commons.math3.linear.RRQRSolverTest:createTestMatrix(Random, int, int)	/src/test/java/org/apache/commons/math3/linear/RRQRSolverTest.java
12028= org.apache.commons.math3.linear.RRQRSolverTest:testSolveDimensionErrors()	/src/test/java/org/apache/commons/math3/linear/RRQRSolverTest.java
12029= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:generate()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12030= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testPutAbsentOnExisting()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12031= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testGetFromEmpty()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12032= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testContainsKey()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12033= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testPutKeysWithCollision2()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12034= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testRemove2()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12035= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testCopy()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12036= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testGetAbsent()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12037= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testPutKeysWithCollisions()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12038= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testRemoveAbsent()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12039= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testIterator()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12040= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testRemoveFromEmpty()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12041= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testPutAndGetWith0ExpectedSize()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12042= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testPutAndGet()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12043= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:assertPutAndGet(OpenIntToDoubleHashMap, int, Set<Integer>)	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12044= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testPutOnExisting()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12045= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testRemove()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12046= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:setUp()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12047= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:createFromJavaMap()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12048= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testPutAndGetWithExpectedSize()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12049= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:assertPutAndGet(OpenIntToDoubleHashMap)	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12050= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:testConcurrentModification()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12051= org.apache.commons.math3.util.OpenIntToDoubleHashMapTest:generateAbsent()	/src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java
12052= org.apache.commons.math3.ode.ContinuousOutputModelTest:ContinuousOutputModelTest()	/src/test/java/org/apache/commons/math3/ode/ContinuousOutputModelTest.java
12053= org.apache.commons.math3.ode.ContinuousOutputModelTest:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/ContinuousOutputModelTest.java
12054= org.apache.commons.math3.ode.ContinuousOutputModelTest:buildInterpolator(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/ContinuousOutputModelTest.java
12055= org.apache.commons.math3.ode.ContinuousOutputModelTest:checkValue(double, double)	/src/test/java/org/apache/commons/math3/ode/ContinuousOutputModelTest.java
12056= org.apache.commons.math3.ode.ContinuousOutputModelTest:testModelsMerging()	/src/test/java/org/apache/commons/math3/ode/ContinuousOutputModelTest.java
12057= org.apache.commons.math3.ode.ContinuousOutputModelTest:tearDown()	/src/test/java/org/apache/commons/math3/ode/ContinuousOutputModelTest.java
12058= org.apache.commons.math3.ode.ContinuousOutputModelTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/ContinuousOutputModelTest.java
12059= org.apache.commons.math3.ode.ContinuousOutputModelTest:setUp()	/src/test/java/org/apache/commons/math3/ode/ContinuousOutputModelTest.java
12060= org.apache.commons.math3.ode.ContinuousOutputModelTest:testErrorConditions()	/src/test/java/org/apache/commons/math3/ode/ContinuousOutputModelTest.java
12061= org.apache.commons.math3.ode.ContinuousOutputModelTest:checkAppendError(ContinuousOutputModel, double, double[], double)	/src/test/java/org/apache/commons/math3/ode/ContinuousOutputModelTest.java
12062= org.apache.commons.math3.ode.ContinuousOutputModelTest:testRandomAccess()	/src/test/java/org/apache/commons/math3/ode/ContinuousOutputModelTest.java
12063= org.apache.commons.math3.ode.ContinuousOutputModelTest:testBoundaries()	/src/test/java/org/apache/commons/math3/ode/ContinuousOutputModelTest.java
12064= org.apache.commons.math3.linear.SparseFieldVectorTest:assertClose(String, Fraction[], Fraction[], double)	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12065= org.apache.commons.math3.linear.SparseFieldVectorTest:testWalkInDefaultOrderPreservingVisitor1()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12066= org.apache.commons.math3.linear.SparseFieldVectorTest:testWalkInOptimizedOrderPreservingVisitor1()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12067= org.apache.commons.math3.linear.SparseFieldVectorTest:testWalkInOptimizedOrderPreservingVisitor2()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12068= org.apache.commons.math3.linear.SparseFieldVectorTest:testWalkInOptimizedOrderPreservingVisitor3()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12069= org.apache.commons.math3.linear.SparseFieldVectorTest:start(int, int, int)	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12070= org.apache.commons.math3.linear.SparseFieldVectorTest:testWalkInOptimizedOrderChangingVisitor1()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12071= org.apache.commons.math3.linear.SparseFieldVectorTest:create(int)	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12072= org.apache.commons.math3.linear.SparseFieldVectorTest:testMisc()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12073= org.apache.commons.math3.linear.SparseFieldVectorTest:testWalkInOptimizedOrderChangingVisitor3()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12074= org.apache.commons.math3.linear.SparseFieldVectorTest:testBasicFunctions()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12075= org.apache.commons.math3.linear.SparseFieldVectorTest:testWalkInOptimizedOrderChangingVisitor2()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12076= org.apache.commons.math3.linear.SparseFieldVectorTest:testMapFunctions()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12077= org.apache.commons.math3.linear.SparseFieldVectorTest:testWalkInDefaultOrderChangingVisitor1()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12078= org.apache.commons.math3.linear.SparseFieldVectorTest:end()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12079= org.apache.commons.math3.linear.SparseFieldVectorTest:testWalkInDefaultOrderChangingVisitor3()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12080= org.apache.commons.math3.linear.SparseFieldVectorTest:visit(int, Fraction)	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12081= org.apache.commons.math3.linear.SparseFieldVectorTest:testWalkInDefaultOrderChangingVisitor2()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12082= org.apache.commons.math3.linear.SparseFieldVectorTest:testOuterProduct()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12083= org.apache.commons.math3.linear.SparseFieldVectorTest:testPredicates()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12084= org.apache.commons.math3.linear.SparseFieldVectorTest:assertEquals(String, Fraction[], Fraction[])	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12085= org.apache.commons.math3.linear.SparseFieldVectorTest:testWalkInDefaultOrderPreservingVisitor2()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12086= org.apache.commons.math3.linear.SparseFieldVectorTest:testWalkInDefaultOrderPreservingVisitor3()	/src/test/java/org/apache/commons/math3/linear/SparseFieldVectorTest.java
12087= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testSinhDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12088= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testSinhAsinh()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12089= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testCbrtPow3()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12090= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testField()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12091= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testTangentDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12092= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testSerialization()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12093= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testOneParameterConstructor()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12094= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testLogExp()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12095= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testTaylorPolynomial()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12096= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testToDegreesDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12097= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testCompose()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12098= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testAtan2()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12099= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testPowDoubleDS()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12100= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testTanhAtanh()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12101= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testAdd()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12102= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testWrongVariableIndex()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12103= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testLog10Definition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12104= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testLog1pDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12105= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testTrigo()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12106= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testLinearCombination1DoubleDS()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12107= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testHypotNeglectible()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12108= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testVariableWithoutDerivative1()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12109= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testLinearCombination1DSDS()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12110= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testSqrtDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12111= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testExpression()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12112= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testRootNSingularity()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12113= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testLog10Power()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12114= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testTanhDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12115= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testTanAtan()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12116= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testHypotSpecial()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12117= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testExpm1Definition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12118= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testPrimitiveSubtract()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12119= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testSubtract()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12120= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testPowReciprocalPow()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12121= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testHypotDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12122= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testTaylorAtan2()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12123= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:build(double)	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12124= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testCompositionOneVariableY()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12125= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testConstant()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12126= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testCreateConstant()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12127= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testLog1pExpm1()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12128= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testToRadiansDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12129= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testCopySign()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12130= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testAbs()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12131= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testLinearCombination2DoubleDS()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12132= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testSinCos()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12133= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testPrimitiveRemainder()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12134= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testHypotNoOverflow()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12135= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:checkEquals(DerivativeStructure, DerivativeStructure, double)	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12136= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testLog()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12137= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testCeilFloorRintLong()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12138= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testExp()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12139= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testOneOrderConstructor()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12140= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testDegRad()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12141= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testCbrtDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12142= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testCoshDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12143= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testSqrtPow2()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12144= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testVariableWithoutDerivative0()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12145= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:checkF0F1(DerivativeStructure, double, double)	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12146= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testNegate()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12147= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testCoshAcosh()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12148= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testPrimitiveAdd()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12149= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testLinearCombination2DSDS()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12150= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testAtan2SpecialCases()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12151= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testComposeMismatchedDimensions()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12152= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testReciprocal()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12153= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testPrimitiveMultiply()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12154= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testSignum()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12155= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testMissingOrders()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12156= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testMultiply()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12157= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testTooLargeOrder()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12158= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testVariable()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12159= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testCosAcos()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12160= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testSinAsin()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12161= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testRemainder()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12162= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testCompositionOneVariableX()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12163= org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest:testPow()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java
12164= org.apache.commons.math3.geometry.euclidean.twod.SubLineTest:testNoSegments()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
12165= org.apache.commons.math3.geometry.euclidean.twod.SubLineTest:testHalfInfinitePos()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
12166= org.apache.commons.math3.geometry.euclidean.twod.SubLineTest:testIntersectionParallel()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
12167= org.apache.commons.math3.geometry.euclidean.twod.SubLineTest:testNoEndPoints()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
12168= org.apache.commons.math3.geometry.euclidean.twod.SubLineTest:testHalfInfiniteNeg()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
12169= org.apache.commons.math3.geometry.euclidean.twod.SubLineTest:testIntersectionOutsideOutside()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
12170= org.apache.commons.math3.geometry.euclidean.twod.SubLineTest:testIntersectionInsideBoundary()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
12171= org.apache.commons.math3.geometry.euclidean.twod.SubLineTest:testSeveralSegments()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
12172= org.apache.commons.math3.geometry.euclidean.twod.SubLineTest:testIntersectionInsideInside()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
12173= org.apache.commons.math3.geometry.euclidean.twod.SubLineTest:testIntersectionBoundaryOutside()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
12174= org.apache.commons.math3.geometry.euclidean.twod.SubLineTest:testEndPoints()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
12175= org.apache.commons.math3.geometry.euclidean.twod.SubLineTest:testIntersectionInsideOutside()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
12176= org.apache.commons.math3.geometry.euclidean.twod.SubLineTest:testIntersectionBoundaryBoundary()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
12177= org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest:testTestNegative()	/src/test/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatisticTest.java
12178= org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest:testTestPositive()	/src/test/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatisticTest.java
12179= org.apache.commons.math3.distribution.WeibullDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/WeibullDistributionTest.java
12180= org.apache.commons.math3.distribution.WeibullDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/WeibullDistributionTest.java
12181= org.apache.commons.math3.distribution.WeibullDistributionTest:testInverseCumulativeProbabilityExtremes()	/src/test/java/org/apache/commons/math3/distribution/WeibullDistributionTest.java
12182= org.apache.commons.math3.distribution.WeibullDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/WeibullDistributionTest.java
12183= org.apache.commons.math3.distribution.WeibullDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/WeibullDistributionTest.java
12184= org.apache.commons.math3.distribution.WeibullDistributionTest:testAlpha()	/src/test/java/org/apache/commons/math3/distribution/WeibullDistributionTest.java
12185= org.apache.commons.math3.distribution.WeibullDistributionTest:testBeta()	/src/test/java/org/apache/commons/math3/distribution/WeibullDistributionTest.java
12186= org.apache.commons.math3.distribution.WeibullDistributionTest:testInverseCumulativeProbabilitySmallPAccuracy()	/src/test/java/org/apache/commons/math3/distribution/WeibullDistributionTest.java
12187= org.apache.commons.math3.distribution.WeibullDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/WeibullDistributionTest.java
12188= org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest:testNoPoints()	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser2DTest.java
12189= org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest:testLargeSamples()	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser2DTest.java
12190= org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest:checkDisk(List<Vector2D>)	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser2DTest.java
12191= org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest:checkDisk(List<Vector2D>, List<Vector2D>)	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser2DTest.java
12192= org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest:testNullList()	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser2DTest.java
12193= org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest:buildList(double)	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser2DTest.java
12194= org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest:testRegularPoints()	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser2DTest.java
12195= org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest:testReducingBall1()	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser2DTest.java
12196= org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest:testReducingBall2()	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser2DTest.java
12197= org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest:testSolutionOnDiameter()	/src/test/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser2DTest.java
12198= org.apache.commons.math3.genetics.NPointCrossoverTest:testNumberIsTooLargeException()	/src/test/java/org/apache/commons/math3/genetics/NPointCrossoverTest.java
12199= org.apache.commons.math3.genetics.NPointCrossoverTest:testCrossoverInvalidFixedLengthChromosomeFirst()	/src/test/java/org/apache/commons/math3/genetics/NPointCrossoverTest.java
12200= org.apache.commons.math3.genetics.NPointCrossoverTest:fitness()	/src/test/java/org/apache/commons/math3/genetics/NPointCrossoverTest.java
12201= org.apache.commons.math3.genetics.NPointCrossoverTest:detectCrossoverPoints(BinaryChromosome, BinaryChromosome, BinaryChromosome)	/src/test/java/org/apache/commons/math3/genetics/NPointCrossoverTest.java
12202= org.apache.commons.math3.genetics.NPointCrossoverTest:testCrossoverDimensionMismatchException()	/src/test/java/org/apache/commons/math3/genetics/NPointCrossoverTest.java
12203= org.apache.commons.math3.genetics.NPointCrossoverTest:testCrossoverInvalidFixedLengthChromosomeSecond()	/src/test/java/org/apache/commons/math3/genetics/NPointCrossoverTest.java
12204= org.apache.commons.math3.genetics.NPointCrossoverTest:testCrossover()	/src/test/java/org/apache/commons/math3/genetics/NPointCrossoverTest.java
12205= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12206= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:testEvaluationCount()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12207= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.BevingtonProblem:value(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12208= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.QuadraticProblem:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12209= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:testBevington()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12210= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:testNonInvertible()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12211= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.QuadraticProblem:QuadraticProblem()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12212= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.BevingtonProblem:getModelFunction()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12213= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:testControlParameters()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12214= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:QuadraticProblem()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12215= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:testCircleFitting2()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12216= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:builder(BevingtonProblem)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12217= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.BevingtonProblem:BevingtonProblem()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12218= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.BevingtonProblem:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12219= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.QuadraticProblem:addPoint(double, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12220= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:BevingtonProblem()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12221= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.BevingtonProblem:addPoint(double, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12222= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:checkEstimate(CircleVectorial, double, int, double, double, double, boolean)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12223= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:value(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12224= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:getModelFunction()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12225= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.QuadraticProblem:getModelFunction()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12226= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:converged(int, Evaluation, Evaluation)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12227= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest.QuadraticProblem:value(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12228= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:getOptimizer()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12229= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:addPoint(double, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12230= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:builder(CircleProblem)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12231= org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest:getMaxIterations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java
12232= org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest:getExpMul()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputOverlapTest.java
12233= org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest:getStart()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputOverlapTest.java
12234= org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest:getExpIncRev()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputOverlapTest.java
12235= org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest:getExpMulRev()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputOverlapTest.java
12236= org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest:getO()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputOverlapTest.java
12237= org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest:getEnd()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputOverlapTest.java
12238= org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest:getExpInc()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputOverlapTest.java
12239= org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest:value(double)	/src/test/java/org/apache/commons/math3/analysis/solvers/RegulaFalsiSolverTest.java
12240= org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest:getQuinticEvalCounts()	/src/test/java/org/apache/commons/math3/analysis/solvers/RegulaFalsiSolverTest.java
12241= org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest:getSolver()	/src/test/java/org/apache/commons/math3/analysis/solvers/RegulaFalsiSolverTest.java
12242= org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest:testIssue631()	/src/test/java/org/apache/commons/math3/analysis/solvers/RegulaFalsiSolverTest.java
12243= org.apache.commons.math3.optimization.PointVectorValuePairTest:testSerial()	/src/test/java/org/apache/commons/math3/optimization/PointVectorValuePairTest.java
12244= org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMomentTest.java
12245= org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMomentTest.java
12246= org.apache.commons.math3.ode.TestProblemAbstract:getDimension()	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12247= org.apache.commons.math3.ode.TestProblemAbstract:getCalls()	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12248= org.apache.commons.math3.ode.TestProblemAbstract:getFinalTime()	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12249= org.apache.commons.math3.ode.TestProblemAbstract:TestProblemAbstract(TestProblemAbstract)	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12250= org.apache.commons.math3.ode.TestProblemAbstract:setErrorScale(double[])	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12251= org.apache.commons.math3.ode.TestProblemAbstract:getInitialTime()	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12252= org.apache.commons.math3.ode.TestProblemAbstract:computeTheoreticalState(double)	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12253= org.apache.commons.math3.ode.TestProblemAbstract:TestProblemAbstract()	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12254= org.apache.commons.math3.ode.TestProblemAbstract:getTheoreticalEventsTimes()	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12255= org.apache.commons.math3.ode.TestProblemAbstract:setInitialConditions(double, double[])	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12256= org.apache.commons.math3.ode.TestProblemAbstract:getEventsHandlers()	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12257= org.apache.commons.math3.ode.TestProblemAbstract:setFinalConditions(double)	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12258= org.apache.commons.math3.ode.TestProblemAbstract:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12259= org.apache.commons.math3.ode.TestProblemAbstract:doComputeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12260= org.apache.commons.math3.ode.TestProblemAbstract:copy()	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12261= org.apache.commons.math3.ode.TestProblemAbstract:getErrorScale()	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12262= org.apache.commons.math3.ode.TestProblemAbstract:getInitialState()	/src/test/java/org/apache/commons/math3/ode/TestProblemAbstract.java
12263= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:testCircleFitting()	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12264= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:value(double[])	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12265= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest.LinearProblem:value(double[])	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12266= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:testOneSet()	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12267= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:testInconsistentEquations()	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12268= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:LinearProblem(double[][], double[])	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12269= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:testTrivial()	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12270= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:testTwoSets()	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12271= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:testNoDependency()	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12272= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:testMoreEstimatedParametersSimple()	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12273= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:testMoreEstimatedParametersUnsorted()	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12274= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:testColumnsPermutation()	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12275= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:testRedundantEquations()	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12276= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:testNonInversible()	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12277= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:testIllConditioned()	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12278= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12279= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest.LinearProblem:LinearProblem(double[][], double[])	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12280= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest.LinearProblem:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12281= org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest:precondition(double[], double[])	/src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java
12282= org.apache.commons.math3.random.StableRandomGeneratorTest:testGaussianCase()	/src/test/java/org/apache/commons/math3/random/StableRandomGeneratorTest.java
12283= org.apache.commons.math3.random.StableRandomGeneratorTest:testBetaRangeAboveOne()	/src/test/java/org/apache/commons/math3/random/StableRandomGeneratorTest.java
12284= org.apache.commons.math3.random.StableRandomGeneratorTest:testBetaRangeBelowMinusOne()	/src/test/java/org/apache/commons/math3/random/StableRandomGeneratorTest.java
12285= org.apache.commons.math3.random.StableRandomGeneratorTest:testAlphaRangeAboveTwo()	/src/test/java/org/apache/commons/math3/random/StableRandomGeneratorTest.java
12286= org.apache.commons.math3.random.StableRandomGeneratorTest:testNextDouble()	/src/test/java/org/apache/commons/math3/random/StableRandomGeneratorTest.java
12287= org.apache.commons.math3.random.StableRandomGeneratorTest:testAlphaRangeBelowZero()	/src/test/java/org/apache/commons/math3/random/StableRandomGeneratorTest.java
12288= org.apache.commons.math3.random.StableRandomGeneratorTest:testCauchyCase()	/src/test/java/org/apache/commons/math3/random/StableRandomGeneratorTest.java
12289= org.apache.commons.math3.linear.FrenchRealVectorFormatTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/linear/FrenchRealVectorFormatTest.java
12290= org.apache.commons.math3.linear.FrenchRealVectorFormatTest:getLocale()	/src/test/java/org/apache/commons/math3/linear/FrenchRealVectorFormatTest.java
12291= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest:generatePartition(double[])	/src/test/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatisticsTest.java
12292= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest:testAggregationConsistency()	/src/test/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatisticsTest.java
12293= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest:testAggregateDegenerate()	/src/test/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatisticsTest.java
12294= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest:assertEquals(StatisticalSummary, StatisticalSummary, double)	/src/test/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatisticsTest.java
12295= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest:generateSample()	/src/test/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatisticsTest.java
12296= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest:testAggregate()	/src/test/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatisticsTest.java
12297= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest:testAggregateSpecialValues()	/src/test/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatisticsTest.java
12298= org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest:testAggregation()	/src/test/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatisticsTest.java
12299= org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations:<clinit0>	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestPermutations.java
12300= org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations.MinPermutations:fitness()	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestPermutations.java
12301= org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations:newFixedLengthChromosome(List<Double>)	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestPermutations.java
12302= org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations.MinPermutations:newFixedLengthChromosome(List<Double>)	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestPermutations.java
12303= org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations:randomPopulation()	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestPermutations.java
12304= org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations:MinPermutations(List<Double>)	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestPermutations.java
12305= org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations.MinPermutations:MinPermutations(List<Double>)	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestPermutations.java
12306= org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations:fitness()	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestPermutations.java
12307= org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations:test()	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestPermutations.java
12308= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:testStepSize()	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12309= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12310= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12311= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:testSingleStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12312= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:testKepler()	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12313= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12314= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest.KeplerHandler:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12315= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12316= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:testBigStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12317= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12318= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest.KeplerHandler:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12319= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:testMissedEndEvent()	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12320= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:testSanityChecks()	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12321= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest.KeplerHandler:KeplerHandler(TestProblem3)	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12322= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12323= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:testSmallStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12324= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:testBackward()	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12325= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12326= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:testDecreasingSteps()	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12327= org.apache.commons.math3.ode.nonstiff.LutherIntegratorTest:KeplerHandler(TestProblem3)	/src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java
12328= org.apache.commons.math3.ode.sampling.StepInterpolatorTestUtils:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/sampling/StepInterpolatorTestUtils.java
12329= org.apache.commons.math3.ode.sampling.StepInterpolatorTestUtils:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/sampling/StepInterpolatorTestUtils.java
12330= org.apache.commons.math3.ode.sampling.StepInterpolatorTestUtils:checkDerivativesConsistency(FirstOrderIntegrator, TestProblemAbstract, double)	/src/test/java/org/apache/commons/math3/ode/sampling/StepInterpolatorTestUtils.java
12331= org.apache.commons.math3.geometry.spherical.twod.SubCircleTest:testSPlit()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SubCircleTest.java
12332= org.apache.commons.math3.geometry.spherical.twod.SubCircleTest:create(Vector3D, Vector3D, Vector3D, double, double)	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SubCircleTest.java
12333= org.apache.commons.math3.geometry.spherical.twod.SubCircleTest:testFullCircle()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SubCircleTest.java
12334= org.apache.commons.math3.geometry.spherical.twod.SubCircleTest:testSide()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SubCircleTest.java
12335= org.apache.commons.math3.util.OpenIntToFieldTest:testPutOnExisting()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12336= org.apache.commons.math3.util.OpenIntToFieldTest:testRemove2()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12337= org.apache.commons.math3.util.OpenIntToFieldTest:testPutAndGetWith0ExpectedSize()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12338= org.apache.commons.math3.util.OpenIntToFieldTest:testPutAndGet()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12339= org.apache.commons.math3.util.OpenIntToFieldTest:testContainsKey()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12340= org.apache.commons.math3.util.OpenIntToFieldTest:testPutKeysWithCollision2()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12341= org.apache.commons.math3.util.OpenIntToFieldTest:generateAbsent()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12342= org.apache.commons.math3.util.OpenIntToFieldTest:setUp()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12343= org.apache.commons.math3.util.OpenIntToFieldTest:createFromJavaMap(Field<Fraction>)	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12344= org.apache.commons.math3.util.OpenIntToFieldTest:testGetAbsent()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12345= org.apache.commons.math3.util.OpenIntToFieldTest:assertPutAndGet(OpenIntToFieldHashMap<Fraction>, int, Set<Integer>)	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12346= org.apache.commons.math3.util.OpenIntToFieldTest:testPutKeysWithCollisions()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12347= org.apache.commons.math3.util.OpenIntToFieldTest:testRemove()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12348= org.apache.commons.math3.util.OpenIntToFieldTest:assertPutAndGet(OpenIntToFieldHashMap<Fraction>)	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12349= org.apache.commons.math3.util.OpenIntToFieldTest:testPutAbsentOnExisting()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12350= org.apache.commons.math3.util.OpenIntToFieldTest:testRemoveAbsent()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12351= org.apache.commons.math3.util.OpenIntToFieldTest:testCopy()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12352= org.apache.commons.math3.util.OpenIntToFieldTest:testPutAndGetWithExpectedSize()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12353= org.apache.commons.math3.util.OpenIntToFieldTest:testIterator()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12354= org.apache.commons.math3.util.OpenIntToFieldTest:testRemoveFromEmpty()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12355= org.apache.commons.math3.util.OpenIntToFieldTest:generate()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12356= org.apache.commons.math3.util.OpenIntToFieldTest:testConcurrentModification()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12357= org.apache.commons.math3.util.OpenIntToFieldTest:testGetFromEmpty()	/src/test/java/org/apache/commons/math3/util/OpenIntToFieldTest.java
12358= org.apache.commons.math3.linear.HilbertMatrix:HilbertMatrix(int)	/src/test/java/org/apache/commons/math3/linear/HilbertMatrix.java
12359= org.apache.commons.math3.linear.HilbertMatrix:getColumnDimension()	/src/test/java/org/apache/commons/math3/linear/HilbertMatrix.java
12360= org.apache.commons.math3.linear.HilbertMatrix:getRowDimension()	/src/test/java/org/apache/commons/math3/linear/HilbertMatrix.java
12361= org.apache.commons.math3.linear.HilbertMatrix:operate(RealVector)	/src/test/java/org/apache/commons/math3/linear/HilbertMatrix.java
12362= org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest:testWikipedia()	/src/test/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolatorTest.java
12363= org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest:testQuadratic()	/src/test/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolatorTest.java
12364= org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest:randomPolynomial(int, Random)	/src/test/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolatorTest.java
12365= org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest:testSquareRoot()	/src/test/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolatorTest.java
12366= org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest:testOnePointParabola()	/src/test/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolatorTest.java
12367= org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest:testZero()	/src/test/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolatorTest.java
12368= org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest:checkPolynomial(PolynomialFunction, PolynomialFunction)	/src/test/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolatorTest.java
12369= org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest:testMixedDerivatives()	/src/test/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolatorTest.java
12370= org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest:testEmptySample()	/src/test/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolatorTest.java
12371= org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest:testSine()	/src/test/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolatorTest.java
12372= org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest:testRandomPolynomialsValuesOnly()	/src/test/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolatorTest.java
12373= org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest:testDuplicatedAbscissa()	/src/test/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolatorTest.java
12374= org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest:testRandomPolynomialsFirstDerivative()	/src/test/java/org/apache/commons/math3/analysis/interpolation/HermiteInterpolatorTest.java
12375= org.apache.commons.math3.linear.SingularValueDecompositionTest:testIssue947()	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12376= org.apache.commons.math3.linear.SingularValueDecompositionTest:testRank()	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12377= org.apache.commons.math3.linear.SingularValueDecompositionTest:testDimensions()	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12378= org.apache.commons.math3.linear.SingularValueDecompositionTest:testConditionNumber()	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12379= org.apache.commons.math3.linear.SingularValueDecompositionTest:checkOrthogonal(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12380= org.apache.commons.math3.linear.SingularValueDecompositionTest:testHadamard()	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12381= org.apache.commons.math3.linear.SingularValueDecompositionTest:testMoreRows()	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12382= org.apache.commons.math3.linear.SingularValueDecompositionTest:loadRealMatrix(RealMatrix, String)	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12383= org.apache.commons.math3.linear.SingularValueDecompositionTest:testMoreColumns()	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12384= org.apache.commons.math3.linear.SingularValueDecompositionTest:testInverseConditionNumber()	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12385= org.apache.commons.math3.linear.SingularValueDecompositionTest:testVOrthogonal()	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12386= org.apache.commons.math3.linear.SingularValueDecompositionTest:checkAEqualUSVt(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12387= org.apache.commons.math3.linear.SingularValueDecompositionTest:testAEqualUSVt()	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12388= org.apache.commons.math3.linear.SingularValueDecompositionTest:testUOrthogonal()	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12389= org.apache.commons.math3.linear.SingularValueDecompositionTest:testStability2()	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12390= org.apache.commons.math3.linear.SingularValueDecompositionTest:testStability1()	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12391= org.apache.commons.math3.linear.SingularValueDecompositionTest:createTestMatrix(Random, int, int, double[])	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12392= org.apache.commons.math3.linear.SingularValueDecompositionTest:testMatricesValues1()	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12393= org.apache.commons.math3.linear.SingularValueDecompositionTest:useless_testMatricesValues2()	/src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java
12394= org.apache.commons.math3.distribution.ChiSquaredDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/ChiSquaredDistributionTest.java
12395= org.apache.commons.math3.distribution.ChiSquaredDistributionTest:makeInverseCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/ChiSquaredDistributionTest.java
12396= org.apache.commons.math3.distribution.ChiSquaredDistributionTest:testDfAccessors()	/src/test/java/org/apache/commons/math3/distribution/ChiSquaredDistributionTest.java
12397= org.apache.commons.math3.distribution.ChiSquaredDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/ChiSquaredDistributionTest.java
12398= org.apache.commons.math3.distribution.ChiSquaredDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/ChiSquaredDistributionTest.java
12399= org.apache.commons.math3.distribution.ChiSquaredDistributionTest:makeInverseCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/ChiSquaredDistributionTest.java
12400= org.apache.commons.math3.distribution.ChiSquaredDistributionTest:setUp()	/src/test/java/org/apache/commons/math3/distribution/ChiSquaredDistributionTest.java
12401= org.apache.commons.math3.distribution.ChiSquaredDistributionTest:checkDensity(double, double[], double[])	/src/test/java/org/apache/commons/math3/distribution/ChiSquaredDistributionTest.java
12402= org.apache.commons.math3.distribution.ChiSquaredDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/ChiSquaredDistributionTest.java
12403= org.apache.commons.math3.distribution.ChiSquaredDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/ChiSquaredDistributionTest.java
12404= org.apache.commons.math3.distribution.ChiSquaredDistributionTest:testSmallDf()	/src/test/java/org/apache/commons/math3/distribution/ChiSquaredDistributionTest.java
12405= org.apache.commons.math3.distribution.ChiSquaredDistributionTest:testDensity()	/src/test/java/org/apache/commons/math3/distribution/ChiSquaredDistributionTest.java
12406= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:getMin()	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12407= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:testFasterThanNewton()	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12408= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.TestFunction:getRoot()	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12409= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:getSolver()	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12410= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:TestFunction(double, double, double)	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12411= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:compare(TestFunction)	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12412= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:getMax()	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12413= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.TestFunction:getMax()	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12414= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:value(double)	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12415= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:compare(UnivariateDifferentiableFunction, double, double, double)	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12416= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:testConstructorsOK()	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12417= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.TestFunction:TestFunction(double, double, double)	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12418= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:getRoot()	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12419= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:testConvergenceOnFunctionAccuracy()	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12420= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:value(DerivativeStructure)	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12421= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.TestFunction:value(DerivativeStructure)	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12422= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:testInsufficientOrder1()	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12423= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:getQuinticEvalCounts()	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12424= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:testInsufficientOrder2()	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12425= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:testInsufficientOrder3()	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12426= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.TestFunction:getMin()	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12427= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest:testIssue716()	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12428= org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.TestFunction:value(double)	/src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java
12429= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest:testRosenbrock()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12430= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.Powell:Powell()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12431= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest:testMaximize2()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12432= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest:testMaximize1()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12433= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest:testPowell()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12434= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest:getCount()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12435= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest:testMaxIterations()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12436= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest:Powell()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12437= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.FourExtrema:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12438= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.Rosenbrock:Rosenbrock()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12439= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest:Rosenbrock()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12440= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.Powell:getCount()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12441= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.Rosenbrock:getCount()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12442= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest:testMinimize2()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12443= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12444= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest:testMinimize1()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12445= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.Powell:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12446= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest:testLeastSquares2()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12447= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest:testLeastSquares1()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12448= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest:testLeastSquares3()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12449= org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.Rosenbrock:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerNelderMeadTest.java
12450= org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest:testRepetition()	/src/test/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTreeTest.java
12451= org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest:buildTree(int[])	/src/test/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTreeTest.java
12452= org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest:value(AVLTree<Integer>.Node)	/src/test/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTreeTest.java
12453= org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest:testNavigation()	/src/test/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTreeTest.java
12454= org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest:testSearch()	/src/test/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTreeTest.java
12455= org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest:testInsert()	/src/test/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTreeTest.java
12456= org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest:testDelete1()	/src/test/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTreeTest.java
12457= org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest:checkOrder(AVLTree<Integer>)	/src/test/java/org/apache/commons/math3/geometry/partitioning/utilities/AVLTreeTest.java
12458= org.apache.commons.math3.PerfTestUtils:timesAndResults(int, int, boolean, Callable<Double>)	/src/test/java/org/apache/commons/math3/PerfTestUtils.java
12459= org.apache.commons.math3.PerfTestUtils.RunTest:RunTest(String)	/src/test/java/org/apache/commons/math3/PerfTestUtils.java
12460= org.apache.commons.math3.PerfTestUtils:getName()	/src/test/java/org/apache/commons/math3/PerfTestUtils.java
12461= org.apache.commons.math3.PerfTestUtils:call()	/src/test/java/org/apache/commons/math3/PerfTestUtils.java
12462= org.apache.commons.math3.PerfTestUtils:time(int, int, boolean, Callable<Double>)	/src/test/java/org/apache/commons/math3/PerfTestUtils.java
12463= org.apache.commons.math3.PerfTestUtils:timeAndReport(String, int, int, boolean, RunTest)	/src/test/java/org/apache/commons/math3/PerfTestUtils.java
12464= org.apache.commons.math3.PerfTestUtils:RunTest(String)	/src/test/java/org/apache/commons/math3/PerfTestUtils.java
12465= org.apache.commons.math3.PerfTestUtils.RunTest:call()	/src/test/java/org/apache/commons/math3/PerfTestUtils.java
12466= org.apache.commons.math3.PerfTestUtils.RunTest:getName()	/src/test/java/org/apache/commons/math3/PerfTestUtils.java
12467= org.apache.commons.math3.PerfTestUtils:timeAndReport(String, RunTest)	/src/test/java/org/apache/commons/math3/PerfTestUtils.java
12468= org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/FourthMomentTest.java
12469= org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/FourthMomentTest.java
12470= org.apache.commons.math3.ode.TestProblem1:copy()	/src/test/java/org/apache/commons/math3/ode/TestProblem1.java
12471= org.apache.commons.math3.ode.TestProblem1:TestProblem1(TestProblem1)	/src/test/java/org/apache/commons/math3/ode/TestProblem1.java
12472= org.apache.commons.math3.ode.TestProblem1:TestProblem1()	/src/test/java/org/apache/commons/math3/ode/TestProblem1.java
12473= org.apache.commons.math3.ode.TestProblem1:doComputeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/TestProblem1.java
12474= org.apache.commons.math3.ode.TestProblem1:computeTheoreticalState(double)	/src/test/java/org/apache/commons/math3/ode/TestProblem1.java
12475= org.apache.commons.math3.fitting.leastsquares.StraightLineProblem:x()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StraightLineProblem.java
12476= org.apache.commons.math3.fitting.leastsquares.StraightLineProblem:solve()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StraightLineProblem.java
12477= org.apache.commons.math3.fitting.leastsquares.StraightLineProblem.Model:value(double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StraightLineProblem.java
12478= org.apache.commons.math3.fitting.leastsquares.StraightLineProblem:addPoint(double, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StraightLineProblem.java
12479= org.apache.commons.math3.fitting.leastsquares.StraightLineProblem:y()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StraightLineProblem.java
12480= org.apache.commons.math3.fitting.leastsquares.StraightLineProblem:target()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StraightLineProblem.java
12481= org.apache.commons.math3.fitting.leastsquares.StraightLineProblem:value(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StraightLineProblem.java
12482= org.apache.commons.math3.fitting.leastsquares.StraightLineProblem:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StraightLineProblem.java
12483= org.apache.commons.math3.fitting.leastsquares.StraightLineProblem:Model(double, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StraightLineProblem.java
12484= org.apache.commons.math3.fitting.leastsquares.StraightLineProblem:value(double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StraightLineProblem.java
12485= org.apache.commons.math3.fitting.leastsquares.StraightLineProblem.Model:Model(double, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StraightLineProblem.java
12486= org.apache.commons.math3.fitting.leastsquares.StraightLineProblem:getModelFunction()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StraightLineProblem.java
12487= org.apache.commons.math3.fitting.leastsquares.StraightLineProblem:StraightLineProblem(double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StraightLineProblem.java
12488= org.apache.commons.math3.fitting.leastsquares.StraightLineProblem:jacobian(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StraightLineProblem.java
12489= org.apache.commons.math3.fitting.leastsquares.StraightLineProblem:weight()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/StraightLineProblem.java
12490= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testOppositeHyperplanes()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12491= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testUnlimitedSubHyperplane()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12492= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testBug20041003()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12493= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testIntersection()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12494= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testInfinite()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12495= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testChoppedHexagon()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12496= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:buildSegment(Vector2D, Vector2D)	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12497= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testEmpty()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12498= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testBox()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12499= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testConcentric()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12500= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testDifference()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12501= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testWrongUsage()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12502= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:intersectionAbscissa(Line, Line)	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12503= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testIssue880Simplified()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12504= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testLineIntersection()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12505= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testSimplyConnected()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12506= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testXor()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12507= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testIssue880Complete()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12508= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:buildSet(Vector2D[][])	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12509= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testStair()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12510= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testTooThinBox()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12511= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:buildHalfLine(Vector2D, Vector2D, boolean)	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12512= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testUnion()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12513= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testBug20040520()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12514= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testSingularPoint()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12515= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testSqueezedHexa()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12516= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testHole()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12517= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testEmptyDifference()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12518= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:buildLine(Vector2D, Vector2D)	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12519= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testDisjointPolygons()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12520= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:checkPoints(Region.Location, PolygonsSet, Vector2D[])	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12521= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:testFull()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12522= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:checkVertices(Vector2D[][], Vector2D[][])	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12523= org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest:checkInSegment(Vector2D, Vector2D, Vector2D, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java
12524= org.apache.commons.math3.analysis.differentiation.DSCompilerTest:testIncompatibleParams()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java
12525= org.apache.commons.math3.analysis.differentiation.DSCompilerTest:ordersToString(int[], String, String)	/src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java
12526= org.apache.commons.math3.analysis.differentiation.DSCompilerTest:testSize()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java
12527= org.apache.commons.math3.analysis.differentiation.DSCompilerTest:testSymmetry()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java
12528= org.apache.commons.math3.analysis.differentiation.DSCompilerTest:testIncompatibleOrder()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java
12529= org.apache.commons.math3.analysis.differentiation.DSCompilerTest:testCompositionRules()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java
12530= org.apache.commons.math3.analysis.differentiation.DSCompilerTest:orderToString(int, String, String)	/src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java
12531= org.apache.commons.math3.analysis.differentiation.DSCompilerTest:testMultiplicationRules()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java
12532= org.apache.commons.math3.analysis.differentiation.DSCompilerTest:checkIndices(int[], int)	/src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java
12533= org.apache.commons.math3.analysis.differentiation.DSCompilerTest:testIndices()	/src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java
12534= org.apache.commons.math3.geometry.spherical.twod.CircleTest:testXY()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/CircleTest.java
12535= org.apache.commons.math3.geometry.spherical.twod.CircleTest:testPhase()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/CircleTest.java
12536= org.apache.commons.math3.geometry.spherical.twod.CircleTest:testOffset()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/CircleTest.java
12537= org.apache.commons.math3.geometry.spherical.twod.CircleTest:checkArcIsInside(Circle, Circle)	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/CircleTest.java
12538= org.apache.commons.math3.geometry.spherical.twod.CircleTest:testSpace()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/CircleTest.java
12539= org.apache.commons.math3.geometry.spherical.twod.CircleTest:testSubSpace()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/CircleTest.java
12540= org.apache.commons.math3.geometry.spherical.twod.CircleTest:testReverse()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/CircleTest.java
12541= org.apache.commons.math3.geometry.spherical.twod.CircleTest:testEquator()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/CircleTest.java
12542= org.apache.commons.math3.geometry.spherical.twod.CircleTest:testTransform()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/CircleTest.java
12543= org.apache.commons.math3.geometry.spherical.twod.CircleTest:testInsideArc()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/CircleTest.java
12544= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java
12545= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest:testDimensionCheck()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java
12546= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest:testBackward()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java
12547= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest:testBigStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java
12548= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java
12549= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest:testDecreasingSteps()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java
12550= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest:testKepler()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java
12551= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest:testSmallStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java
12552= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java
12553= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java
12554= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java
12555= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest:testStepSize()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java
12556= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest:KeplerHandler(TestProblem3)	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java
12557= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java
12558= org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler:KeplerHandler(TestProblem3)	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java
12559= org.apache.commons.math3.complex.ComplexFieldTest:testSerial()	/src/test/java/org/apache/commons/math3/complex/ComplexFieldTest.java
12560= org.apache.commons.math3.complex.ComplexFieldTest:testOne()	/src/test/java/org/apache/commons/math3/complex/ComplexFieldTest.java
12561= org.apache.commons.math3.complex.ComplexFieldTest:testZero()	/src/test/java/org/apache/commons/math3/complex/ComplexFieldTest.java
12562= org.apache.commons.math3.optimization.general.CircleProblem:target()	/src/test/java/org/apache/commons/math3/optimization/general/CircleProblem.java
12563= org.apache.commons.math3.optimization.general.CircleProblem:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/CircleProblem.java
12564= org.apache.commons.math3.optimization.general.CircleProblem:value(double[])	/src/test/java/org/apache/commons/math3/optimization/general/CircleProblem.java
12565= org.apache.commons.math3.optimization.general.CircleProblem:CircleProblem(double, double)	/src/test/java/org/apache/commons/math3/optimization/general/CircleProblem.java
12566= org.apache.commons.math3.optimization.general.CircleProblem:weight()	/src/test/java/org/apache/commons/math3/optimization/general/CircleProblem.java
12567= org.apache.commons.math3.optimization.general.CircleProblem:addPoint(Vector2D)	/src/test/java/org/apache/commons/math3/optimization/general/CircleProblem.java
12568= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:getStart()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12569= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:getExpInc()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12570= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testMulLast()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12571= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testMulBoth()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12572= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:getArray(double[], int, int)	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12573= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testIncNeither()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12574= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testIncLast()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12575= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testIncFirst()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12576= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:handleStep(double, double[], double[], boolean)	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12577= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:getExpIncRev()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12578= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:doTest(StepNormalizerMode, StepNormalizerBounds, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12579= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:getExpMul()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12580= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testIncFirstRev()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12581= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testMulFirst()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12582= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:getEnd()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12583= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:getDimension()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12584= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12585= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:getExpMulRev()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12586= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testIncBothRev()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12587= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12588= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testMulNeitherRev()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12589= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testMulLastRev()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12590= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testIncLastRev()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12591= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testMulNeither()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12592= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testMulFirstRev()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12593= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:getO()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12594= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testIncNeitherRev()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12595= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testIncBoth()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12596= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase:testMulBothRev()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java
12597= org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/UnivariateStatisticAbstractTest.java
12598= org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/UnivariateStatisticAbstractTest.java
12599= org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest:testEvaluateArraySegment()	/src/test/java/org/apache/commons/math3/stat/descriptive/UnivariateStatisticAbstractTest.java
12600= org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest:testEvaluation()	/src/test/java/org/apache/commons/math3/stat/descriptive/UnivariateStatisticAbstractTest.java
12601= org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest:testWeightedConsistency()	/src/test/java/org/apache/commons/math3/stat/descriptive/UnivariateStatisticAbstractTest.java
12602= org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest:testEvaluateArraySegmentWeighted()	/src/test/java/org/apache/commons/math3/stat/descriptive/UnivariateStatisticAbstractTest.java
12603= org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest:testCopy()	/src/test/java/org/apache/commons/math3/stat/descriptive/UnivariateStatisticAbstractTest.java
12604= org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest:getTolerance()	/src/test/java/org/apache/commons/math3/stat/descriptive/UnivariateStatisticAbstractTest.java
12605= org.apache.commons.math3.linear.TriDiagonalTransformerTest:checkTriDiagonal(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/TriDiagonalTransformerTest.java
12606= org.apache.commons.math3.linear.TriDiagonalTransformerTest:checkNoAccessBelowDiagonal(double[][])	/src/test/java/org/apache/commons/math3/linear/TriDiagonalTransformerTest.java
12607= org.apache.commons.math3.linear.TriDiagonalTransformerTest:testQOrthogonal()	/src/test/java/org/apache/commons/math3/linear/TriDiagonalTransformerTest.java
12608= org.apache.commons.math3.linear.TriDiagonalTransformerTest:testTTriDiagonal()	/src/test/java/org/apache/commons/math3/linear/TriDiagonalTransformerTest.java
12609= org.apache.commons.math3.linear.TriDiagonalTransformerTest:testMatricesValues3()	/src/test/java/org/apache/commons/math3/linear/TriDiagonalTransformerTest.java
12610= org.apache.commons.math3.linear.TriDiagonalTransformerTest:testMatricesValues5()	/src/test/java/org/apache/commons/math3/linear/TriDiagonalTransformerTest.java
12611= org.apache.commons.math3.linear.TriDiagonalTransformerTest:testAEqualQTQt()	/src/test/java/org/apache/commons/math3/linear/TriDiagonalTransformerTest.java
12612= org.apache.commons.math3.linear.TriDiagonalTransformerTest:checkMatricesValues(double[][], double[][], double[], double[])	/src/test/java/org/apache/commons/math3/linear/TriDiagonalTransformerTest.java
12613= org.apache.commons.math3.linear.TriDiagonalTransformerTest:testQTOrthogonal()	/src/test/java/org/apache/commons/math3/linear/TriDiagonalTransformerTest.java
12614= org.apache.commons.math3.linear.TriDiagonalTransformerTest:testNoAccessBelowDiagonal()	/src/test/java/org/apache/commons/math3/linear/TriDiagonalTransformerTest.java
12615= org.apache.commons.math3.linear.TriDiagonalTransformerTest:testNonSquare()	/src/test/java/org/apache/commons/math3/linear/TriDiagonalTransformerTest.java
12616= org.apache.commons.math3.linear.TriDiagonalTransformerTest:checkAEqualQTQt(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/TriDiagonalTransformerTest.java
12617= org.apache.commons.math3.linear.TriDiagonalTransformerTest:checkOrthogonal(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/TriDiagonalTransformerTest.java
12618= org.apache.commons.math3.util.IncrementorTest:trigger(int)	/src/test/java/org/apache/commons/math3/util/IncrementorTest.java
12619= org.apache.commons.math3.util.IncrementorTest:testConstructor2()	/src/test/java/org/apache/commons/math3/util/IncrementorTest.java
12620= org.apache.commons.math3.util.IncrementorTest:testCanIncrement2()	/src/test/java/org/apache/commons/math3/util/IncrementorTest.java
12621= org.apache.commons.math3.util.IncrementorTest:testCanIncrement1()	/src/test/java/org/apache/commons/math3/util/IncrementorTest.java
12622= org.apache.commons.math3.util.IncrementorTest:testReset()	/src/test/java/org/apache/commons/math3/util/IncrementorTest.java
12623= org.apache.commons.math3.util.IncrementorTest:testConstructor1()	/src/test/java/org/apache/commons/math3/util/IncrementorTest.java
12624= org.apache.commons.math3.util.IncrementorTest:testAccessor()	/src/test/java/org/apache/commons/math3/util/IncrementorTest.java
12625= org.apache.commons.math3.util.IncrementorTest:testBelowMaxCount()	/src/test/java/org/apache/commons/math3/util/IncrementorTest.java
12626= org.apache.commons.math3.util.IncrementorTest:testBulkIncrement()	/src/test/java/org/apache/commons/math3/util/IncrementorTest.java
12627= org.apache.commons.math3.util.IncrementorTest:testAlternateException()	/src/test/java/org/apache/commons/math3/util/IncrementorTest.java
12628= org.apache.commons.math3.util.IncrementorTest:testAboveMaxCount()	/src/test/java/org/apache/commons/math3/util/IncrementorTest.java
12629= org.apache.commons.math3.linear.LUSolverTest:testSolve()	/src/test/java/org/apache/commons/math3/linear/LUSolverTest.java
12630= org.apache.commons.math3.linear.LUSolverTest:testSolveSingularityErrors()	/src/test/java/org/apache/commons/math3/linear/LUSolverTest.java
12631= org.apache.commons.math3.linear.LUSolverTest:testSolveDimensionErrors()	/src/test/java/org/apache/commons/math3/linear/LUSolverTest.java
12632= org.apache.commons.math3.linear.LUSolverTest:testDeterminant()	/src/test/java/org/apache/commons/math3/linear/LUSolverTest.java
12633= org.apache.commons.math3.linear.LUSolverTest:testSingular()	/src/test/java/org/apache/commons/math3/linear/LUSolverTest.java
12634= org.apache.commons.math3.linear.LUSolverTest:testThreshold()	/src/test/java/org/apache/commons/math3/linear/LUSolverTest.java
12635= org.apache.commons.math3.linear.LUSolverTest:getDeterminant(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/LUSolverTest.java
12636= org.apache.commons.math3.genetics.RandomKeyMutationTest:testMutate()	/src/test/java/org/apache/commons/math3/genetics/RandomKeyMutationTest.java
12637= org.apache.commons.math3.analysis.solvers.SecantSolverTest:getSolver()	/src/test/java/org/apache/commons/math3/analysis/solvers/SecantSolverTest.java
12638= org.apache.commons.math3.analysis.solvers.SecantSolverTest:getQuinticEvalCounts()	/src/test/java/org/apache/commons/math3/analysis/solvers/SecantSolverTest.java
12639= org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest:createVector()	/src/test/java/org/apache/commons/math3/linear/UnmodifiableArrayRealVectorTest.java
12640= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testAsin()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12641= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testHash()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12642= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testRemainderField()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12643= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testRound()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12644= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testLinearCombinationDF2()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12645= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testLinearCombinationDF4()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12646= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testGetField()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12647= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testMultiplyField()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12648= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testPowDouble()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12649= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testScalb()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12650= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testCos()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12651= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testLinearCombinationFaFa()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12652= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testRootN()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12653= org.apache.commons.math3.ExtendedFieldElementAbstractTest:checkRelative(double, T)	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12654= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testDivideDouble()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12655= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testMultiplyInt()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12656= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testLinearCombinationFF3()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12657= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testSubtractDouble()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12658= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testLog()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12659= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testCopySignField()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12660= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testAbs()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12661= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testRint()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12662= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testRemainderDouble()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12663= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testAtanh()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12664= org.apache.commons.math3.ExtendedFieldElementAbstractTest:generateDouble(RandomGenerator, int)	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12665= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testTan()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12666= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testExpm1()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12667= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testCeil()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12668= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testHypot()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12669= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testCopySignDouble()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12670= org.apache.commons.math3.ExtendedFieldElementAbstractTest:build(double)	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12671= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testCosh()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12672= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testSinh()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12673= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testSignum()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12674= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testLinearCombinationDF3()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12675= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testAsinh()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12676= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testAddField()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12677= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testFloor()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12678= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testSin()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12679= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testSubtractField()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12680= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testEquals()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12681= org.apache.commons.math3.ExtendedFieldElementAbstractTest:toFieldArray(double[])	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12682= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testAcosh()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12683= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testTanh()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12684= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testLinearCombinationFF2()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12685= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testAddDouble()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12686= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testMultiplyDouble()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12687= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testExp()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12688= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testSqrt()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12689= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testAtan2()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12690= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testPowInt()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12691= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testDivideField()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12692= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testLinearCombinationFF4()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12693= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testAcos()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12694= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testLog1p()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12695= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testCbrt()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12696= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testPowField()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12697= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testLinearCombinationDaFa()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12698= org.apache.commons.math3.ExtendedFieldElementAbstractTest:testAtan()	/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java
12699= org.apache.commons.math3.analysis.differentiation.GradientFunctionTest.EuclideanDistance:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java
12700= org.apache.commons.math3.analysis.differentiation.GradientFunctionTest.EuclideanDistance:value(double[])	/src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java
12701= org.apache.commons.math3.analysis.differentiation.GradientFunctionTest:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java
12702= org.apache.commons.math3.analysis.differentiation.GradientFunctionTest:gradient(double[])	/src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java
12703= org.apache.commons.math3.analysis.differentiation.GradientFunctionTest:value(double[])	/src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java
12704= org.apache.commons.math3.analysis.differentiation.GradientFunctionTest.EuclideanDistance:gradient(double[])	/src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java
12705= org.apache.commons.math3.analysis.differentiation.GradientFunctionTest:test2DDistance()	/src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java
12706= org.apache.commons.math3.analysis.differentiation.GradientFunctionTest:test3DDistance()	/src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java
12707= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithCholeskyTest:getOptimizer()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithCholeskyTest.java
12708= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithCholeskyTest:testMoreEstimatedParametersSimple()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithCholeskyTest.java
12709= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithCholeskyTest:testMaxEvaluations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithCholeskyTest.java
12710= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithCholeskyTest:testHahn1()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithCholeskyTest.java
12711= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithCholeskyTest:getMaxIterations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithCholeskyTest.java
12712= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithCholeskyTest:testMoreEstimatedParametersUnsorted()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithCholeskyTest.java
12713= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithCholeskyTest:testCircleFittingBadInit()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithCholeskyTest.java
12714= org.apache.commons.math3.distribution.GammaDistributionTest:testValue(double, double, double, double)	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12715= org.apache.commons.math3.distribution.GammaDistributionTest:doTestMath753(double, double, double, double, double, String)	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12716= org.apache.commons.math3.distribution.GammaDistributionTest:testProbabilities()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12717= org.apache.commons.math3.distribution.GammaDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12718= org.apache.commons.math3.distribution.GammaDistributionTest:density(double, double, double)	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12719= org.apache.commons.math3.distribution.GammaDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12720= org.apache.commons.math3.distribution.GammaDistributionTest:testValues()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12721= org.apache.commons.math3.distribution.GammaDistributionTest:setUp()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12722= org.apache.commons.math3.distribution.GammaDistributionTest:testMath753Shape1000()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12723= org.apache.commons.math3.distribution.GammaDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12724= org.apache.commons.math3.distribution.GammaDistributionTest:checkDensity(double, double, double[], double[])	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12725= org.apache.commons.math3.distribution.GammaDistributionTest:logGamma(double)	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12726= org.apache.commons.math3.distribution.GammaDistributionTest:testProbability(double, double, double, double)	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12727= org.apache.commons.math3.distribution.GammaDistributionTest:testInverseCumulativeProbabilityExtremes()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12728= org.apache.commons.math3.distribution.GammaDistributionTest:testMath753Shape100()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12729= org.apache.commons.math3.distribution.GammaDistributionTest:testMath753Shape8()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12730= org.apache.commons.math3.distribution.GammaDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12731= org.apache.commons.math3.distribution.GammaDistributionTest:testMath753Shape142()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12732= org.apache.commons.math3.distribution.GammaDistributionTest:testDensity()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12733= org.apache.commons.math3.distribution.GammaDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12734= org.apache.commons.math3.distribution.GammaDistributionTest:testMath753Shape10()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12735= org.apache.commons.math3.distribution.GammaDistributionTest:testParameterAccessors()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12736= org.apache.commons.math3.distribution.GammaDistributionTest:testMath753Shape1()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12737= org.apache.commons.math3.distribution.GammaDistributionTest:testPreconditions()	/src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java
12738= org.apache.commons.math3.fitting.PolynomialFitterTest:testMath798()	/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
12739= org.apache.commons.math3.fitting.PolynomialFitterTest:testRedundantUnsolvable()	/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
12740= org.apache.commons.math3.fitting.PolynomialFitterTest:testFit()	/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
12741= org.apache.commons.math3.fitting.PolynomialFitterTest:testMath798WithToleranceTooLowButNoException()	/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
12742= org.apache.commons.math3.fitting.PolynomialFitterTest:testRedundantSolvable()	/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
12743= org.apache.commons.math3.fitting.PolynomialFitterTest:buildRandomPolynomial(int, Random)	/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
12744= org.apache.commons.math3.fitting.PolynomialFitterTest:testSmallError()	/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
12745= org.apache.commons.math3.fitting.PolynomialFitterTest:testNoError()	/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
12746= org.apache.commons.math3.fitting.PolynomialFitterTest:testMath798WithToleranceTooLow()	/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
12747= org.apache.commons.math3.fitting.PolynomialFitterTest:doMath798(MultivariateVectorOptimizer, int, double[])	/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
12748= org.apache.commons.math3.fitting.PolynomialFitterTest:testLargeSample()	/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
12749= org.apache.commons.math3.fitting.PolynomialFitterTest:checkUnsolvableProblem(MultivariateVectorOptimizer, boolean)	/src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java
12750= org.apache.commons.math3.analysis.XMinus5Function:value(DerivativeStructure)	/src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java
12751= org.apache.commons.math3.analysis.XMinus5Function:value(double)	/src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java
12752= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testProblemDimensionTooSmall()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12753= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testTwoAxes()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12754= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testAckley()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12755= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testConstrainedRosen()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12756= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:Elli(double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12757= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testElliRotated()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12758= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.TwoAxes:TwoAxes()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12759= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Ackley:Ackley(double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12760= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testConstrainedRosenWithMoreInterpolationPoints()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12761= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:Cigar(double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12762= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.ElliRotated:ElliRotated()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12763= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Basis:Rotate(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12764= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.TwoAxes:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12765= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.CigTab:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12766= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Ackley:Ackley()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12767= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Ackley:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12768= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:CigTab()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12769= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testInitOutOfBounds()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12770= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testMaxEvaluations()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12771= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:Ackley(double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12772= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:point(int, double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12773= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:TwoAxes(double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12774= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Elli:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12775= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.CigTab:CigTab()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12776= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.MinusElli:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12777= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Rastrigin:Rastrigin()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12778= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.TwoAxes:TwoAxes(double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12779= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.ElliRotated:ElliRotated(double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12780= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testRastrigin()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12781= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:TwoAxes()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12782= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:Rastrigin(double, double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12783= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:GenBasis(int)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12784= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Elli:Elli(double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12785= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:ElliRotated()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12786= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Cigar:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12787= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Tablet:Tablet(double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12788= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Rastrigin:Rastrigin(double, double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12789= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Sphere:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12790= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.CigTab:CigTab(double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12791= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testDiffPow()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12792= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testBoundariesDimensionMismatch()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12793= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.DiffPow:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12794= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:Ackley()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12795= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12796= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.SsDiffPow:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12797= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:doTest(MultivariateFunction, double[], double[][], GoalType, double, double, int, int, PointValuePair, String)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12798= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Tablet:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12799= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:Cigar()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12800= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testMaximize()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12801= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:ElliRotated(double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12802= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:Elli()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12803= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:Rotate(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12804= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testTablet()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12805= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testCigTab()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12806= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Tablet:Tablet()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12807= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:Tablet(double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12808= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:Rastrigin()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12809= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:Tablet()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12810= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Rosen:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12811= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Basis:GenBasis(int)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12812= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testEllipse()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12813= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testCigar()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12814= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testSphere()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12815= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Cigar:Cigar(double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12816= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.ElliRotated:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12817= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testSsDiffPow()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12818= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Rastrigin:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12819= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:testRosen()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12820= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:CigTab(double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12821= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Cigar:Cigar()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12822= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:boundaries(int, double, double)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12823= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest:doTest(MultivariateFunction, double[], double[][], GoalType, double, double, int, PointValuePair)	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12824= org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.Elli:Elli()	/src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java
12825= org.apache.commons.math3.complex.FrenchComplexFormatTest:getLocale()	/src/test/java/org/apache/commons/math3/complex/FrenchComplexFormatTest.java
12826= org.apache.commons.math3.complex.FrenchComplexFormatTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/complex/FrenchComplexFormatTest.java
12827= org.apache.commons.math3.geometry.euclidean.twod.DiskGeneratorTest:testSupport3Points()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/DiskGeneratorTest.java
12828= org.apache.commons.math3.geometry.euclidean.twod.DiskGeneratorTest:testSupport0Point()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/DiskGeneratorTest.java
12829= org.apache.commons.math3.geometry.euclidean.twod.DiskGeneratorTest:testSupport1Point()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/DiskGeneratorTest.java
12830= org.apache.commons.math3.geometry.euclidean.twod.DiskGeneratorTest:testSupport2Points()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/DiskGeneratorTest.java
12831= org.apache.commons.math3.geometry.euclidean.twod.DiskGeneratorTest:testRandom()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/DiskGeneratorTest.java
12832= org.apache.commons.math3.stat.descriptive.moment.SkewnessTest:testNaN()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/SkewnessTest.java
12833= org.apache.commons.math3.stat.descriptive.moment.SkewnessTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/SkewnessTest.java
12834= org.apache.commons.math3.stat.descriptive.moment.SkewnessTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/SkewnessTest.java
12835= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest:derivativesConsistency()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java
12836= org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest:serialization()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java
12837= org.apache.commons.math3.ode.FirstOrderConverterTest:testSmallStep()	/src/test/java/org/apache/commons/math3/ode/FirstOrderConverterTest.java
12838= org.apache.commons.math3.ode.FirstOrderConverterTest.Equations:Equations(int, double)	/src/test/java/org/apache/commons/math3/ode/FirstOrderConverterTest.java
12839= org.apache.commons.math3.ode.FirstOrderConverterTest:integrateWithSpecifiedStep(double, double, double, double)	/src/test/java/org/apache/commons/math3/ode/FirstOrderConverterTest.java
12840= org.apache.commons.math3.ode.FirstOrderConverterTest.Equations:computeSecondDerivatives(double, double[], double[], double[])	/src/test/java/org/apache/commons/math3/ode/FirstOrderConverterTest.java
12841= org.apache.commons.math3.ode.FirstOrderConverterTest:testDoubleDimension()	/src/test/java/org/apache/commons/math3/ode/FirstOrderConverterTest.java
12842= org.apache.commons.math3.ode.FirstOrderConverterTest:testBigStep()	/src/test/java/org/apache/commons/math3/ode/FirstOrderConverterTest.java
12843= org.apache.commons.math3.ode.FirstOrderConverterTest:testDecreasingSteps()	/src/test/java/org/apache/commons/math3/ode/FirstOrderConverterTest.java
12844= org.apache.commons.math3.ode.FirstOrderConverterTest.Equations:getDimension()	/src/test/java/org/apache/commons/math3/ode/FirstOrderConverterTest.java
12845= org.apache.commons.math3.ode.FirstOrderConverterTest:Equations(int, double)	/src/test/java/org/apache/commons/math3/ode/FirstOrderConverterTest.java
12846= org.apache.commons.math3.ode.FirstOrderConverterTest:computeSecondDerivatives(double, double[], double[], double[])	/src/test/java/org/apache/commons/math3/ode/FirstOrderConverterTest.java
12847= org.apache.commons.math3.ode.FirstOrderConverterTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/FirstOrderConverterTest.java
12848= org.apache.commons.math3.geometry.spherical.twod.S2PointTest:testS2Point()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/S2PointTest.java
12849= org.apache.commons.math3.geometry.spherical.twod.S2PointTest:testNegativePolarAngle()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/S2PointTest.java
12850= org.apache.commons.math3.geometry.spherical.twod.S2PointTest:testEquals()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/S2PointTest.java
12851= org.apache.commons.math3.geometry.spherical.twod.S2PointTest:testNaN()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/S2PointTest.java
12852= org.apache.commons.math3.geometry.spherical.twod.S2PointTest:testDistance()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/S2PointTest.java
12853= org.apache.commons.math3.geometry.spherical.twod.S2PointTest:testSpace()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/S2PointTest.java
12854= org.apache.commons.math3.geometry.spherical.twod.S2PointTest:testTooLargePolarAngle()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/S2PointTest.java
12855= org.apache.commons.math3.genetics.DummyRandomKey:DummyRandomKey(Double[])	/src/test/java/org/apache/commons/math3/genetics/DummyRandomKey.java
12856= org.apache.commons.math3.genetics.DummyRandomKey:DummyRandomKey(List<Double>)	/src/test/java/org/apache/commons/math3/genetics/DummyRandomKey.java
12857= org.apache.commons.math3.genetics.DummyRandomKey:fitness()	/src/test/java/org/apache/commons/math3/genetics/DummyRandomKey.java
12858= org.apache.commons.math3.genetics.DummyRandomKey:newFixedLengthChromosome(List<Double>)	/src/test/java/org/apache/commons/math3/genetics/DummyRandomKey.java
12859= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:clear()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12860= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:incrementAll(double[])	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12861= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:copy()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12862= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:testStats()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12863= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:testEqualsAndHashCode()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12864= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:evaluate(double[], int, int)	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12865= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean:evaluate(double[], int, int)	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12866= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean:incrementAll(double[])	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12867= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:testSetterInjection()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12868= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:incrementAll(double[], int, int)	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12869= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean:clear()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12870= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean:incrementAll(double[], int, int)	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12871= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:testToString()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12872= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean:getResult()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12873= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:createMultivariateSummaryStatistics(int, boolean)	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12874= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:increment(double)	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12875= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:testSerialization()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12876= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:testN0andN1Conditions()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12877= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:getN()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12878= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean:getN()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12879= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:testShuffledStatistics()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12880= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean:copy()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12881= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:getResult()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12882= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:evaluate(double[])	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12883= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:testNaNContracts()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12884= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:testDimension()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12885= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest:testSetterIllegalState()	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12886= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean:increment(double)	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12887= org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean:evaluate(double[])	/src/test/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatisticsTest.java
12888= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testRootNSingularity()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12889= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testReciprocal()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12890= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testLog()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12891= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testExp()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12892= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testMult()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12893= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testCompose()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12894= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testNegate()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12895= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testHypotNeglectible()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12896= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testRemainder()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12897= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testDegRad()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12898= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testExpression()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12899= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testLinearCombination1DoubleDS()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12900= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testTaylorPolynomial()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12901= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testCompositionOneVariableX()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12902= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testPowReciprocalPow()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12903= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testDivision()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12904= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testExpm1Definition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12905= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testTangentDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12906= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testHypotNoOverflow()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12907= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testPrimitiveRemainder()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12908= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testSubtract()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12909= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testPow()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12910= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testMultiply()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12911= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testToRadiansDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12912= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testLinearCombination2DoubleDS()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12913= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testLog10Power()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12914= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testTanAtan()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12915= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testHypotSpecial()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12916= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testAtan2()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12917= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testSignum()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12918= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testCeilFloorRintLong()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12919= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testSerialization()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12920= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:build(double)	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12921= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testTanhDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12922= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testSinhDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12923= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testSinCos()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12924= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testVarMultInPlace()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12925= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testSqrtDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12926= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testToDegreesDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12927= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testAdd()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12928= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testLog10Definition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12929= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testField()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12930= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testVarAddition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12931= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testCbrtDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12932= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testLog1pDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12933= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testLogExp()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12934= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testCoshDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12935= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:checkF0F1(SparseGradient, double, double)	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12936= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testLinearCombination2DSDS()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12937= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testVariable()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12938= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testPrimitiveSubtract()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12939= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testPrimitiveMultiply()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12940= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testLog1pExpm1()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12941= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testSinhAsinh()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12942= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testCopySign()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12943= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testTrigo()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12944= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testTanhAtanh()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12945= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testCompositionOneVariableY()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12946= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testConstant()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12947= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testPowDoubleDS()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12948= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testHypotDefinition()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12949= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testCbrtPow3()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12950= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testSqrtPow2()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12951= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testCoshAcosh()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12952= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testPrimitiveAdd()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12953= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testLinearCombination1DSDS()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12954= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testSinAsin()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12955= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testSubtraction()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12956= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testAbs()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12957= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testAtan2SpecialCases()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12958= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testCosAcos()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12959= org.apache.commons.math3.analysis.differentiation.SparseGradientTest:testTaylorAtan2()	/src/test/java/org/apache/commons/math3/analysis/differentiation/SparseGradientTest.java
12960= org.apache.commons.math3.util.TransformerMapTest:testContainsTransformer()	/src/test/java/org/apache/commons/math3/util/TransformerMapTest.java
12961= org.apache.commons.math3.util.TransformerMapTest:testSerial()	/src/test/java/org/apache/commons/math3/util/TransformerMapTest.java
12962= org.apache.commons.math3.util.TransformerMapTest:testTransformers()	/src/test/java/org/apache/commons/math3/util/TransformerMapTest.java
12963= org.apache.commons.math3.util.TransformerMapTest:testClear()	/src/test/java/org/apache/commons/math3/util/TransformerMapTest.java
12964= org.apache.commons.math3.util.TransformerMapTest:testRemoveTransformer()	/src/test/java/org/apache/commons/math3/util/TransformerMapTest.java
12965= org.apache.commons.math3.util.TransformerMapTest:testPutTransformer()	/src/test/java/org/apache/commons/math3/util/TransformerMapTest.java
12966= org.apache.commons.math3.util.TransformerMapTest:testContainsClass()	/src/test/java/org/apache/commons/math3/util/TransformerMapTest.java
12967= org.apache.commons.math3.util.TransformerMapTest:testClasses()	/src/test/java/org/apache/commons/math3/util/TransformerMapTest.java
12968= org.apache.commons.math3.analysis.solvers.MullerSolverTest:testSinFunction()	/src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java
12969= org.apache.commons.math3.analysis.solvers.MullerSolverTest:testExpm1Function()	/src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java
12970= org.apache.commons.math3.analysis.solvers.MullerSolverTest:testParameters()	/src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java
12971= org.apache.commons.math3.analysis.solvers.MullerSolverTest:testQuinticFunction()	/src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java
12972= org.apache.commons.math3.linear.EigenSolverTest:testZeroMatrix()	/src/test/java/org/apache/commons/math3/linear/EigenSolverTest.java
12973= org.apache.commons.math3.linear.EigenSolverTest:testSolve()	/src/test/java/org/apache/commons/math3/linear/EigenSolverTest.java
12974= org.apache.commons.math3.linear.EigenSolverTest:testNonInvertible()	/src/test/java/org/apache/commons/math3/linear/EigenSolverTest.java
12975= org.apache.commons.math3.linear.EigenSolverTest:testNonInvertibleMath1045()	/src/test/java/org/apache/commons/math3/linear/EigenSolverTest.java
12976= org.apache.commons.math3.linear.EigenSolverTest:testInvertible()	/src/test/java/org/apache/commons/math3/linear/EigenSolverTest.java
12977= org.apache.commons.math3.linear.EigenSolverTest:testIsNonSingularTinyOutOfOrderEigenvalue()	/src/test/java/org/apache/commons/math3/linear/EigenSolverTest.java
12978= org.apache.commons.math3.linear.EigenSolverTest:testSolveDimensionErrors()	/src/test/java/org/apache/commons/math3/linear/EigenSolverTest.java
12979= org.apache.commons.math3.linear.EigenSolverTest:testInvertibleTinyValues()	/src/test/java/org/apache/commons/math3/linear/EigenSolverTest.java
12980= org.apache.commons.math3.fitting.WeightedObservedPointsTest:testToListCopy()	/src/test/java/org/apache/commons/math3/fitting/WeightedObservedPointsTest.java
12981= org.apache.commons.math3.fitting.WeightedObservedPointsTest:lastElementIsSame(WeightedObservedPoints, WeightedObservedPoint)	/src/test/java/org/apache/commons/math3/fitting/WeightedObservedPointsTest.java
12982= org.apache.commons.math3.fitting.WeightedObservedPointsTest:testClear()	/src/test/java/org/apache/commons/math3/fitting/WeightedObservedPointsTest.java
12983= org.apache.commons.math3.fitting.WeightedObservedPointsTest:testAdd1()	/src/test/java/org/apache/commons/math3/fitting/WeightedObservedPointsTest.java
12984= org.apache.commons.math3.fitting.WeightedObservedPointsTest:testAdd2()	/src/test/java/org/apache/commons/math3/fitting/WeightedObservedPointsTest.java
12985= org.apache.commons.math3.fitting.WeightedObservedPointsTest:testAdd3()	/src/test/java/org/apache/commons/math3/fitting/WeightedObservedPointsTest.java
12986= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest:getExpInc()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTest.java
12987= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest:getO()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTest.java
12988= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest:getExpIncRev()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTest.java
12989= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest:getExpMul()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTest.java
12990= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest:getExpMulRev()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTest.java
12991= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest:getStart()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTest.java
12992= org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest:getEnd()	/src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTest.java
12993= org.apache.commons.math3.distribution.GeometricDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java
12994= org.apache.commons.math3.distribution.GeometricDistributionTest:makeDensityTestPoints()	/src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java
12995= org.apache.commons.math3.distribution.GeometricDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java
12996= org.apache.commons.math3.distribution.GeometricDistributionTest:makeInverseCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java
12997= org.apache.commons.math3.distribution.GeometricDistributionTest:GeometricDistributionTest()	/src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java
12998= org.apache.commons.math3.distribution.GeometricDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java
12999= org.apache.commons.math3.distribution.GeometricDistributionTest:makeInverseCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java
13000= org.apache.commons.math3.distribution.GeometricDistributionTest:makeLogDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java
13001= org.apache.commons.math3.distribution.GeometricDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java
13002= org.apache.commons.math3.distribution.GeometricDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java
13003= org.apache.commons.math3.linear.BlockFieldMatrixTest:testSeveralBlocks()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13004= org.apache.commons.math3.linear.BlockFieldMatrixTest:testScalarAdd()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13005= org.apache.commons.math3.linear.BlockFieldMatrixTest:checkGetSubMatrix(FieldMatrix<Fraction>, Fraction[][], int[], int[])	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13006= org.apache.commons.math3.linear.BlockFieldMatrixTest.GetVisitor:getCount()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13007= org.apache.commons.math3.linear.BlockFieldMatrixTest:checkGetSubMatrix(FieldMatrix<Fraction>, Fraction[][], int, int, int, int)	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13008= org.apache.commons.math3.linear.BlockFieldMatrixTest:columnToVector(Fraction[][])	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13009= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetSetColumnLarge()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13010= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetSetRowVectorLarge()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13011= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetSetColumnMatrixLarge()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13012= org.apache.commons.math3.linear.BlockFieldMatrixTest:testPlusMinus()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13013= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetVectors()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13014= org.apache.commons.math3.linear.BlockFieldMatrixTest:getCount()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13015= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetRow()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13016= org.apache.commons.math3.linear.BlockFieldMatrixTest.GetVisitor:GetVisitor()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13017= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetSetRowLarge()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13018= org.apache.commons.math3.linear.BlockFieldMatrixTest:visit(int, int, Fraction)	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13019= org.apache.commons.math3.linear.BlockFieldMatrixTest:testMath209()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13020= org.apache.commons.math3.linear.BlockFieldMatrixTest:testExamples()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13021= org.apache.commons.math3.linear.BlockFieldMatrixTest:testOperateLarge()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13022= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetSubMatrix()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13023= org.apache.commons.math3.linear.BlockFieldMatrixTest:testSetRow()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13024= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetColumn()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13025= org.apache.commons.math3.linear.BlockFieldMatrixTest:checkCopy(FieldMatrix<Fraction>, Fraction[][], int, int, int, int)	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13026= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetSetRowMatrixLarge()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13027= org.apache.commons.math3.linear.BlockFieldMatrixTest:testSetRowVector()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13028= org.apache.commons.math3.linear.BlockFieldMatrixTest:SetVisitor()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13029= org.apache.commons.math3.linear.BlockFieldMatrixTest:testSetColumnVector()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13030= org.apache.commons.math3.linear.BlockFieldMatrixTest:testAddFail()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13031= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetColumnVector()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13032= org.apache.commons.math3.linear.BlockFieldMatrixTest:testMultiply2()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13033= org.apache.commons.math3.linear.BlockFieldMatrixTest:testPremultiply()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13034= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetRowMatrix()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13035= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetSetColumnVectorLarge()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13036= org.apache.commons.math3.linear.BlockFieldMatrixTest:testAdd()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13037= org.apache.commons.math3.linear.BlockFieldMatrixTest:testOperatePremultiplyLarge()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13038= org.apache.commons.math3.linear.BlockFieldMatrixTest:testCopySubMatrix()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13039= org.apache.commons.math3.linear.BlockFieldMatrixTest:testSetRowMatrix()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13040= org.apache.commons.math3.linear.BlockFieldMatrixTest:testSetSubMatrix()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13041= org.apache.commons.math3.linear.BlockFieldMatrixTest:testSetColumnMatrix()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13042= org.apache.commons.math3.linear.BlockFieldMatrixTest:testWalk()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13043= org.apache.commons.math3.linear.BlockFieldMatrixTest:checkCopy(FieldMatrix<Fraction>, Fraction[][], int[], int[])	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13044= org.apache.commons.math3.linear.BlockFieldMatrixTest:testToString()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13045= org.apache.commons.math3.linear.BlockFieldMatrixTest:testCopyFunctions()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13046= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetColumnMatrix()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13047= org.apache.commons.math3.linear.BlockFieldMatrixTest:testTrace()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13048= org.apache.commons.math3.linear.BlockFieldMatrixTest:testDimensions()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13049= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetEntry()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13050= org.apache.commons.math3.linear.BlockFieldMatrixTest:columnToArray(Fraction[][])	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13051= org.apache.commons.math3.linear.BlockFieldMatrixTest:testSerial()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13052= org.apache.commons.math3.linear.BlockFieldMatrixTest:testEqualsAndHashCode()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13053= org.apache.commons.math3.linear.BlockFieldMatrixTest:testTranspose()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13054= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetRowVector()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13055= org.apache.commons.math3.linear.BlockFieldMatrixTest:checkArrays(Fraction[], Fraction[])	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13056= org.apache.commons.math3.linear.BlockFieldMatrixTest:testPremultiplyVector()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13057= org.apache.commons.math3.linear.BlockFieldMatrixTest:testSetColumn()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13058= org.apache.commons.math3.linear.BlockFieldMatrixTest:testOperate()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13059= org.apache.commons.math3.linear.BlockFieldMatrixTest.GetVisitor:visit(int, int, Fraction)	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13060= org.apache.commons.math3.linear.BlockFieldMatrixTest.SetVisitor:visit(int, int, Fraction)	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13061= org.apache.commons.math3.linear.BlockFieldMatrixTest:testMultiply()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13062= org.apache.commons.math3.linear.BlockFieldMatrixTest:testGetSetMatrixLarge()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13063= org.apache.commons.math3.linear.BlockFieldMatrixTest:createRandomMatrix(Random, int, int)	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13064= org.apache.commons.math3.linear.BlockFieldMatrixTest:GetVisitor()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13065= org.apache.commons.math3.linear.BlockFieldMatrixTest.SetVisitor:SetVisitor()	/src/test/java/org/apache/commons/math3/linear/BlockFieldMatrixTest.java
13066= org.apache.commons.math3.analysis.function.StepFunctionTest:testPreconditions4()	/src/test/java/org/apache/commons/math3/analysis/function/StepFunctionTest.java
13067= org.apache.commons.math3.analysis.function.StepFunctionTest:testPreconditions3()	/src/test/java/org/apache/commons/math3/analysis/function/StepFunctionTest.java
13068= org.apache.commons.math3.analysis.function.StepFunctionTest:testPreconditions6()	/src/test/java/org/apache/commons/math3/analysis/function/StepFunctionTest.java
13069= org.apache.commons.math3.analysis.function.StepFunctionTest:testPreconditions5()	/src/test/java/org/apache/commons/math3/analysis/function/StepFunctionTest.java
13070= org.apache.commons.math3.analysis.function.StepFunctionTest:testPreconditions2()	/src/test/java/org/apache/commons/math3/analysis/function/StepFunctionTest.java
13071= org.apache.commons.math3.analysis.function.StepFunctionTest:testPreconditions1()	/src/test/java/org/apache/commons/math3/analysis/function/StepFunctionTest.java
13072= org.apache.commons.math3.analysis.function.StepFunctionTest:testSomeValues()	/src/test/java/org/apache/commons/math3/analysis/function/StepFunctionTest.java
13073= org.apache.commons.math3.analysis.function.StepFunctionTest:testEndpointBehavior()	/src/test/java/org/apache/commons/math3/analysis/function/StepFunctionTest.java
13074= org.apache.commons.math3.analysis.function.StepFunctionTest:testHeaviside()	/src/test/java/org/apache/commons/math3/analysis/function/StepFunctionTest.java
13075= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithLUTest:testMaxEvaluations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithLUTest.java
13076= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithLUTest:testCircleFittingBadInit()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithLUTest.java
13077= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithLUTest:getMaxIterations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithLUTest.java
13078= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithLUTest:testHahn1()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithLUTest.java
13079= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithLUTest:testMoreEstimatedParametersUnsorted()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithLUTest.java
13080= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithLUTest:testMoreEstimatedParametersSimple()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithLUTest.java
13081= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithLUTest:getOptimizer()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithLUTest.java
13082= org.apache.commons.math3.distribution.MultivariateNormalDistributionTest:testDensities()	/src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java
13083= org.apache.commons.math3.distribution.MultivariateNormalDistributionTest:testSampling()	/src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java
13084= org.apache.commons.math3.distribution.MultivariateNormalDistributionTest:testUnivariateDistribution()	/src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java
13085= org.apache.commons.math3.distribution.MultivariateNormalDistributionTest:testGetMean()	/src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java
13086= org.apache.commons.math3.distribution.MultivariateNormalDistributionTest:testGetCovarianceMatrix()	/src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java
13087= org.apache.commons.math3.linear.InverseHilbertMatrix:getEntry(int, int)	/src/test/java/org/apache/commons/math3/linear/InverseHilbertMatrix.java
13088= org.apache.commons.math3.linear.InverseHilbertMatrix:operate(RealVector)	/src/test/java/org/apache/commons/math3/linear/InverseHilbertMatrix.java
13089= org.apache.commons.math3.linear.InverseHilbertMatrix:getRowDimension()	/src/test/java/org/apache/commons/math3/linear/InverseHilbertMatrix.java
13090= org.apache.commons.math3.linear.InverseHilbertMatrix:InverseHilbertMatrix(int)	/src/test/java/org/apache/commons/math3/linear/InverseHilbertMatrix.java
13091= org.apache.commons.math3.linear.InverseHilbertMatrix:getColumnDimension()	/src/test/java/org/apache/commons/math3/linear/InverseHilbertMatrix.java
13092= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest:getUpper()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13093= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest:testUnbounded()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13094= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest:testHalfBounded()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13095= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest:getBoundedXOptimum()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13096= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest:testOptimumOutsideRange()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13097= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest:getLower()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13098= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest.BiQuadratic:getUpper()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13099= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest.BiQuadratic:getBoundedYOptimum()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13100= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest.BiQuadratic:getLower()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13101= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest:BiQuadratic(double, double, double, double, double, double)	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13102= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest.BiQuadratic:BiQuadratic(double, double, double, double, double, double)	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13103= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest:testStartSimplexInsideRange()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13104= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13105= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest.BiQuadratic:getBoundedXOptimum()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13106= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest:testStartSimplexOutsideRange()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13107= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest:getBoundedYOptimum()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13108= org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest.BiQuadratic:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java
13109= org.apache.commons.math3.stat.inference.TestUtilsTest:testGTestIndependance()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13110= org.apache.commons.math3.stat.inference.TestUtilsTest:testKSTwoSample()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13111= org.apache.commons.math3.stat.inference.TestUtilsTest:testSmallSamples()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13112= org.apache.commons.math3.stat.inference.TestUtilsTest:testOneSampleTTest()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13113= org.apache.commons.math3.stat.inference.TestUtilsTest:testChiSquareLargeTestStatistic()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13114= org.apache.commons.math3.stat.inference.TestUtilsTest:testChiSquare()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13115= org.apache.commons.math3.stat.inference.TestUtilsTest:testTwoSampleTHeterscedastic()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13116= org.apache.commons.math3.stat.inference.TestUtilsTest:testTwoSampleTHomoscedastic()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13117= org.apache.commons.math3.stat.inference.TestUtilsTest:testRootLogLikelihood()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13118= org.apache.commons.math3.stat.inference.TestUtilsTest:testChiSquareIndependence()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13119= org.apache.commons.math3.stat.inference.TestUtilsTest:testGTestGoodnesOfFit()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13120= org.apache.commons.math3.stat.inference.TestUtilsTest:testKSOneSample()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13121= org.apache.commons.math3.stat.inference.TestUtilsTest:testPaired()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13122= org.apache.commons.math3.stat.inference.TestUtilsTest:testChiSquareZeroCount()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13123= org.apache.commons.math3.stat.inference.TestUtilsTest:testOneSampleT()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13124= org.apache.commons.math3.stat.inference.TestUtilsTest:testOneWayAnovaUtils()	/src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java
13125= org.apache.commons.math3.geometry.euclidean.twod.LineTest:testDistance()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/LineTest.java
13126= org.apache.commons.math3.geometry.euclidean.twod.LineTest:testParallel()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/LineTest.java
13127= org.apache.commons.math3.geometry.euclidean.twod.LineTest:testIntersection()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/LineTest.java
13128= org.apache.commons.math3.geometry.euclidean.twod.LineTest:testContains()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/LineTest.java
13129= org.apache.commons.math3.geometry.euclidean.twod.LineTest:testOffset()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/LineTest.java
13130= org.apache.commons.math3.geometry.euclidean.twod.LineTest:testAbscissa()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/LineTest.java
13131= org.apache.commons.math3.geometry.euclidean.twod.LineTest:testTransform()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/LineTest.java
13132= org.apache.commons.math3.geometry.euclidean.twod.LineTest:testPointAt()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/LineTest.java
13133= org.apache.commons.math3.geometry.euclidean.twod.LineTest:testOriginOffset()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/LineTest.java
13134= org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest:serialization()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java
13135= org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest:derivativesConsistency()	/src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java
13136= org.apache.commons.math3.ode.JacobianMatricesTest.Brusselator:getDimension()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13137= org.apache.commons.math3.ode.JacobianMatricesTest.Circle:exactDyDom(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13138= org.apache.commons.math3.ode.JacobianMatricesTest:Circle(double[], double, double, double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13139= org.apache.commons.math3.ode.JacobianMatricesTest:computeParameterJacobian(double, double[], double[], String, double[])	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13140= org.apache.commons.math3.ode.JacobianMatricesTest.ParamBrusselator:getParameter(String)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13141= org.apache.commons.math3.ode.JacobianMatricesTest:testParameterizable()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13142= org.apache.commons.math3.ode.JacobianMatricesTest.Brusselator:Brusselator(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13143= org.apache.commons.math3.ode.JacobianMatricesTest.ParameterizedCircle:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13144= org.apache.commons.math3.ode.JacobianMatricesTest:dYdP0()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13145= org.apache.commons.math3.ode.JacobianMatricesTest.ParameterizedCircle:exactDyDcx(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13146= org.apache.commons.math3.ode.JacobianMatricesTest:setParameter(String, double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13147= org.apache.commons.math3.ode.JacobianMatricesTest:exactDyDcy(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13148= org.apache.commons.math3.ode.JacobianMatricesTest.ParamBrusselator:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13149= org.apache.commons.math3.ode.JacobianMatricesTest:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13150= org.apache.commons.math3.ode.JacobianMatricesTest:getParameter(String)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13151= org.apache.commons.math3.ode.JacobianMatricesTest:ParameterizedCircle(double[], double, double, double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13152= org.apache.commons.math3.ode.JacobianMatricesTest.ParameterizedCircle:exactY(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13153= org.apache.commons.math3.ode.JacobianMatricesTest.Circle:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13154= org.apache.commons.math3.ode.JacobianMatricesTest.Circle:computeParameterJacobian(double, double[], double[], String, double[])	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13155= org.apache.commons.math3.ode.JacobianMatricesTest.ParameterizedCircle:ParameterizedCircle(double[], double, double, double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13156= org.apache.commons.math3.ode.JacobianMatricesTest.ParameterizedCircle:exactDyDy0(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13157= org.apache.commons.math3.ode.JacobianMatricesTest.ParameterizedCircle:getParameter(String)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13158= org.apache.commons.math3.ode.JacobianMatricesTest:exactY(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13159= org.apache.commons.math3.ode.JacobianMatricesTest.ParamBrusselator:ParamBrusselator(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13160= org.apache.commons.math3.ode.JacobianMatricesTest:testLowAccuracyExternalDifferentiation()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13161= org.apache.commons.math3.ode.JacobianMatricesTest:ParamBrusselator(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13162= org.apache.commons.math3.ode.JacobianMatricesTest.Brusselator:dYdP0()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13163= org.apache.commons.math3.ode.JacobianMatricesTest:Brusselator(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13164= org.apache.commons.math3.ode.JacobianMatricesTest:computeMainStateJacobian(double, double[], double[], double[][])	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13165= org.apache.commons.math3.ode.JacobianMatricesTest.ParamBrusselator:dYdP1()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13166= org.apache.commons.math3.ode.JacobianMatricesTest.ParameterizedCircle:exactDyDom(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13167= org.apache.commons.math3.ode.JacobianMatricesTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13168= org.apache.commons.math3.ode.JacobianMatricesTest.Circle:computeMainStateJacobian(double, double[], double[], double[][])	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13169= org.apache.commons.math3.ode.JacobianMatricesTest:exactDyDcx(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13170= org.apache.commons.math3.ode.JacobianMatricesTest.ParamBrusselator:setParameter(String, double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13171= org.apache.commons.math3.ode.JacobianMatricesTest.Circle:Circle(double[], double, double, double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13172= org.apache.commons.math3.ode.JacobianMatricesTest:testInternalDifferentiation()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13173= org.apache.commons.math3.ode.JacobianMatricesTest:dYdP1()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13174= org.apache.commons.math3.ode.JacobianMatricesTest.Circle:exactDyDcy(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13175= org.apache.commons.math3.ode.JacobianMatricesTest.Brusselator:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13176= org.apache.commons.math3.ode.JacobianMatricesTest.Circle:exactY(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13177= org.apache.commons.math3.ode.JacobianMatricesTest.ParameterizedCircle:exactDyDcy(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13178= org.apache.commons.math3.ode.JacobianMatricesTest:exactDyDy0(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13179= org.apache.commons.math3.ode.JacobianMatricesTest.ParameterizedCircle:setParameter(String, double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13180= org.apache.commons.math3.ode.JacobianMatricesTest:testHighAccuracyExternalDifferentiation()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13181= org.apache.commons.math3.ode.JacobianMatricesTest.ParameterizedCircle:getDimension()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13182= org.apache.commons.math3.ode.JacobianMatricesTest.Circle:exactDyDcx(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13183= org.apache.commons.math3.ode.JacobianMatricesTest.Brusselator:computeParameterJacobian(double, double[], double[], String, double[])	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13184= org.apache.commons.math3.ode.JacobianMatricesTest.Brusselator:dYdP1()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13185= org.apache.commons.math3.ode.JacobianMatricesTest.Brusselator:computeMainStateJacobian(double, double[], double[], double[][])	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13186= org.apache.commons.math3.ode.JacobianMatricesTest.Circle:getDimension()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13187= org.apache.commons.math3.ode.JacobianMatricesTest.ParamBrusselator:getDimension()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13188= org.apache.commons.math3.ode.JacobianMatricesTest.ParamBrusselator:dYdP0()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13189= org.apache.commons.math3.ode.JacobianMatricesTest:testAnalyticalDifferentiation()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13190= org.apache.commons.math3.ode.JacobianMatricesTest:testFinalResult()	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13191= org.apache.commons.math3.ode.JacobianMatricesTest.Circle:exactDyDy0(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13192= org.apache.commons.math3.ode.JacobianMatricesTest:exactDyDom(double)	/src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java
13193= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest:testBevington()	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13194= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest:checkEstimate(MultivariateDifferentiableVectorFunction, double, int, double, double, double, boolean)	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13195= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest:BevingtonProblem()	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13196= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.BevingtonProblem:BevingtonProblem()	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13197= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest:value(double[])	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13198= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.QuadraticProblem:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13199= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.BevingtonProblem:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13200= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.QuadraticProblem:QuadraticProblem()	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13201= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.BevingtonProblem:value(double[])	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13202= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest:testMath199()	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13203= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest:QuadraticProblem()	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13204= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.QuadraticProblem:value(double[])	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13205= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest:testControlParameters()	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13206= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest:testCircleFitting2()	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13207= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13208= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.QuadraticProblem:addPoint(double, double)	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13209= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.BevingtonProblem:addPoint(double, double)	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13210= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest:addPoint(double, double)	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13211= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest:testNonInvertible()	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13212= org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest:createOptimizer()	/src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java
13213= org.apache.commons.math3.complex.ComplexTest:testNthRoot_normal_fourthRoot()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13214= org.apache.commons.math3.complex.ComplexTest:testMultiply()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13215= org.apache.commons.math3.complex.ComplexTest:testTanhCritical()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13216= org.apache.commons.math3.complex.ComplexTest:testEqualsNull()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13217= org.apache.commons.math3.complex.ComplexTest:testSin()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13218= org.apache.commons.math3.complex.ComplexTest:testNthRoot_normal_thirdRoot()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13219= org.apache.commons.math3.complex.ComplexTest:testSinhInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13220= org.apache.commons.math3.complex.ComplexTest:testSqrtRealZero()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13221= org.apache.commons.math3.complex.ComplexTest:TestComplex(double, double)	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13222= org.apache.commons.math3.complex.ComplexTest:testFloatingPointEquals()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13223= org.apache.commons.math3.complex.ComplexTest:testScalarMultiplyInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13224= org.apache.commons.math3.complex.ComplexTest:testFloatingPointEqualsPrecondition2()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13225= org.apache.commons.math3.complex.ComplexTest:testScalarAddNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13226= org.apache.commons.math3.complex.ComplexTest:testSinInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13227= org.apache.commons.math3.complex.ComplexTest:testSqrtPolar()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13228= org.apache.commons.math3.complex.ComplexTest.TestComplex:TestComplex(double, double)	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13229= org.apache.commons.math3.complex.ComplexTest:testAbsInfinite()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13230= org.apache.commons.math3.complex.ComplexTest:testScalarMultiply()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13231= org.apache.commons.math3.complex.ComplexTest:testCosInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13232= org.apache.commons.math3.complex.ComplexTest:testMultiplyNaNInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13233= org.apache.commons.math3.complex.ComplexTest:testPowNaNExponent()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13234= org.apache.commons.math3.complex.ComplexTest:testSqrtRealPositive()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13235= org.apache.commons.math3.complex.ComplexTest:testCosh()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13236= org.apache.commons.math3.complex.ComplexTest:testConjugate()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13237= org.apache.commons.math3.complex.ComplexTest:testScalarAdd()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13238= org.apache.commons.math3.complex.ComplexTest:testLogNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13239= org.apache.commons.math3.complex.ComplexTest:testAbs()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13240= org.apache.commons.math3.complex.ComplexTest:testReciprocalReal()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13241= org.apache.commons.math3.complex.ComplexTest:testPowZero()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13242= org.apache.commons.math3.complex.ComplexTest:testFloatingPointEqualsNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13243= org.apache.commons.math3.complex.ComplexTest:testScalarPowNaNExponent()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13244= org.apache.commons.math3.complex.ComplexTest:testCoshInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13245= org.apache.commons.math3.complex.ComplexTest:testCos()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13246= org.apache.commons.math3.complex.ComplexTest:testConjugateInfiinite()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13247= org.apache.commons.math3.complex.ComplexTest:testPowNaNBase()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13248= org.apache.commons.math3.complex.ComplexTest:testScalarPowInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13249= org.apache.commons.math3.complex.ComplexTest:testSinh()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13250= org.apache.commons.math3.complex.ComplexTest:testEqualsImaginaryDifference()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13251= org.apache.commons.math3.complex.ComplexTest:testFloatingPointEqualsWithAllowedDelta()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13252= org.apache.commons.math3.complex.ComplexTest:testScalarSubtractInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13253= org.apache.commons.math3.complex.ComplexTest:testAcosInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13254= org.apache.commons.math3.complex.ComplexTest:testScalarPowZero()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13255= org.apache.commons.math3.complex.ComplexTest:testExp()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13256= org.apache.commons.math3.complex.ComplexTest:testEqualsSame()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13257= org.apache.commons.math3.complex.ComplexTest:testAtanI()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13258= org.apache.commons.math3.complex.ComplexTest:testTanhInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13259= org.apache.commons.math3.complex.ComplexTest:testScalarDivideZero()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13260= org.apache.commons.math3.complex.ComplexTest:testDivideNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13261= org.apache.commons.math3.complex.ComplexTest:testFloatingPointEqualsWithRelativeTolerance()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13262= org.apache.commons.math3.complex.ComplexTest:testScalarDivide()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13263= org.apache.commons.math3.complex.ComplexTest:testReciprocalNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13264= org.apache.commons.math3.complex.ComplexTest:testNthRoot_cornercase_NAN_Inf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13265= org.apache.commons.math3.complex.ComplexTest:testPow()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13266= org.apache.commons.math3.complex.ComplexTest:testAtanNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13267= org.apache.commons.math3.complex.ComplexTest:testScalarDivideInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13268= org.apache.commons.math3.complex.ComplexTest:testConstructor()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13269= org.apache.commons.math3.complex.ComplexTest:testMath221()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13270= org.apache.commons.math3.complex.ComplexTest:testTanhNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13271= org.apache.commons.math3.complex.ComplexTest:testReciprocalZero()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13272= org.apache.commons.math3.complex.ComplexTest:testSqrtRealNegative()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13273= org.apache.commons.math3.complex.ComplexTest:testSinNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13274= org.apache.commons.math3.complex.ComplexTest:testDivideReal()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13275= org.apache.commons.math3.complex.ComplexTest:testAcosNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13276= org.apache.commons.math3.complex.ComplexTest:testEqualsTrue()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13277= org.apache.commons.math3.complex.ComplexTest:testEqualsRealDifference()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13278= org.apache.commons.math3.complex.ComplexTest:testAbsNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13279= org.apache.commons.math3.complex.ComplexTest:testScalarMultiplyNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13280= org.apache.commons.math3.complex.ComplexTest:testSubtract()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13281= org.apache.commons.math3.complex.ComplexTest:testSqrt1z()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13282= org.apache.commons.math3.complex.ComplexTest:testReciprocal()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13283= org.apache.commons.math3.complex.ComplexTest:testScalarPow()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13284= org.apache.commons.math3.complex.ComplexTest:testDivideNaNInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13285= org.apache.commons.math3.complex.ComplexTest:testAdd()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13286= org.apache.commons.math3.complex.ComplexTest:testNegate()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13287= org.apache.commons.math3.complex.ComplexTest:testSqrtImaginaryZero()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13288= org.apache.commons.math3.complex.ComplexTest:testEqualsClass()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13289= org.apache.commons.math3.complex.ComplexTest:testDivideInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13290= org.apache.commons.math3.complex.ComplexTest:testSqrt1zNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13291= org.apache.commons.math3.complex.ComplexTest.TestComplex:createComplex(double, double)	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13292= org.apache.commons.math3.complex.ComplexTest:testAtanInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13293= org.apache.commons.math3.complex.ComplexTest:testScalarPowNaNBase()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13294= org.apache.commons.math3.complex.ComplexTest:testScalarDivideNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13295= org.apache.commons.math3.complex.ComplexTest:testTanh()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13296= org.apache.commons.math3.complex.ComplexTest:testAtan()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13297= org.apache.commons.math3.complex.ComplexTest:testDivide()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13298= org.apache.commons.math3.complex.ComplexTest:testMultiplyInfInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13299= org.apache.commons.math3.complex.ComplexTest:testTanCritical()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13300= org.apache.commons.math3.complex.ComplexTest:testSinhNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13301= org.apache.commons.math3.complex.ComplexTest:testAsinInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13302= org.apache.commons.math3.complex.ComplexTest:testScalarSubtractNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13303= org.apache.commons.math3.complex.ComplexTest:testSerial()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13304= org.apache.commons.math3.complex.ComplexTest:testConstructorNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13305= org.apache.commons.math3.complex.ComplexTest:testReciprocalImaginary()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13306= org.apache.commons.math3.complex.ComplexTest:testLogZero()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13307= org.apache.commons.math3.complex.ComplexTest:testGetArgument()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13308= org.apache.commons.math3.complex.ComplexTest:testGetArgumentInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13309= org.apache.commons.math3.complex.ComplexTest:testScalarAddInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13310= org.apache.commons.math3.complex.ComplexTest:testPowInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13311= org.apache.commons.math3.complex.ComplexTest:testSqrtNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13312= org.apache.commons.math3.complex.ComplexTest:testDivideZero()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13313= org.apache.commons.math3.complex.ComplexTest:testSqrtImaginaryNegative()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13314= org.apache.commons.math3.complex.ComplexTest:testNthRoot_cornercase_thirdRoot_realPartZero()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13315= org.apache.commons.math3.complex.ComplexTest:testReciprocalInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13316= org.apache.commons.math3.complex.ComplexTest:testTan()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13317= org.apache.commons.math3.complex.ComplexTest:testConjugateNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13318= org.apache.commons.math3.complex.ComplexTest:testSubtractNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13319= org.apache.commons.math3.complex.ComplexTest:testCosNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13320= org.apache.commons.math3.complex.ComplexTest:testLog()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13321= org.apache.commons.math3.complex.ComplexTest.TestComplex:TestComplex(Complex)	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13322= org.apache.commons.math3.complex.ComplexTest:createComplex(double, double)	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13323= org.apache.commons.math3.complex.ComplexTest:testGetArgumentNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13324= org.apache.commons.math3.complex.ComplexTest:testpowNull()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13325= org.apache.commons.math3.complex.ComplexTest:testFloatingPointEqualsPrecondition1()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13326= org.apache.commons.math3.complex.ComplexTest:testCoshNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13327= org.apache.commons.math3.complex.ComplexTest:testNegateNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13328= org.apache.commons.math3.complex.ComplexTest:testDivideImaginary()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13329= org.apache.commons.math3.complex.ComplexTest:testTanInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13330= org.apache.commons.math3.complex.ComplexTest:testAddNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13331= org.apache.commons.math3.complex.ComplexTest:testExpNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13332= org.apache.commons.math3.complex.ComplexTest:testAcos()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13333= org.apache.commons.math3.complex.ComplexTest:testSqrtInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13334= org.apache.commons.math3.complex.ComplexTest:testSubtractInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13335= org.apache.commons.math3.complex.ComplexTest:testEqualsNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13336= org.apache.commons.math3.complex.ComplexTest:TestComplex(Complex)	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13337= org.apache.commons.math3.complex.ComplexTest:testLogInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13338= org.apache.commons.math3.complex.ComplexTest:testAsin()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13339= org.apache.commons.math3.complex.ComplexTest:testTanNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13340= org.apache.commons.math3.complex.ComplexTest:testAddInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13341= org.apache.commons.math3.complex.ComplexTest:testExpInf()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13342= org.apache.commons.math3.complex.ComplexTest:testDivideZeroZero()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13343= org.apache.commons.math3.complex.ComplexTest:testMultiplyNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13344= org.apache.commons.math3.complex.ComplexTest:testHashCode()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13345= org.apache.commons.math3.complex.ComplexTest:testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13346= org.apache.commons.math3.complex.ComplexTest:testScalarSubtract()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13347= org.apache.commons.math3.complex.ComplexTest:testAsinNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexTest.java
13348= org.apache.commons.math3.stat.descriptive.moment.MeanTest:testSmallSamples()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/MeanTest.java
13349= org.apache.commons.math3.stat.descriptive.moment.MeanTest:expectedWeightedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/MeanTest.java
13350= org.apache.commons.math3.stat.descriptive.moment.MeanTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/MeanTest.java
13351= org.apache.commons.math3.stat.descriptive.moment.MeanTest:testWeightedMean()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/MeanTest.java
13352= org.apache.commons.math3.stat.descriptive.moment.MeanTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/moment/MeanTest.java
13353= org.apache.commons.math3.fitting.HarmonicCurveFitterTest:testUnsorted()	/src/test/java/org/apache/commons/math3/fitting/HarmonicCurveFitterTest.java
13354= org.apache.commons.math3.fitting.HarmonicCurveFitterTest:testNoError()	/src/test/java/org/apache/commons/math3/fitting/HarmonicCurveFitterTest.java
13355= org.apache.commons.math3.fitting.HarmonicCurveFitterTest:test1PercentError()	/src/test/java/org/apache/commons/math3/fitting/HarmonicCurveFitterTest.java
13356= org.apache.commons.math3.fitting.HarmonicCurveFitterTest:testTinyVariationsData()	/src/test/java/org/apache/commons/math3/fitting/HarmonicCurveFitterTest.java
13357= org.apache.commons.math3.fitting.HarmonicCurveFitterTest:testInitialGuess()	/src/test/java/org/apache/commons/math3/fitting/HarmonicCurveFitterTest.java
13358= org.apache.commons.math3.fitting.HarmonicCurveFitterTest:testMath844()	/src/test/java/org/apache/commons/math3/fitting/HarmonicCurveFitterTest.java
13359= org.apache.commons.math3.fitting.HarmonicCurveFitterTest:testPreconditions1()	/src/test/java/org/apache/commons/math3/fitting/HarmonicCurveFitterTest.java
13360= org.apache.commons.math3.linear.OpenMapRealMatrixTest:testMath870()	/src/test/java/org/apache/commons/math3/linear/OpenMapRealMatrixTest.java
13361= org.apache.commons.math3.linear.OpenMapRealMatrixTest:testMath679()	/src/test/java/org/apache/commons/math3/linear/OpenMapRealMatrixTest.java
13362= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest:testPositiveOctantByVertices()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSetTest.java
13363= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest:testGeographicalMap()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSetTest.java
13364= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest:testNonConvex()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSetTest.java
13365= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest:testModeratlyComplexShape()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSetTest.java
13366= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest:testSouthHemisphere()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSetTest.java
13367= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest:create(Vector3D, Vector3D, Vector3D, double, double)	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSetTest.java
13368= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest:testFullSphere()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSetTest.java
13369= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest:buildSimpleZone(double[][])	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSetTest.java
13370= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest:testEmpty()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSetTest.java
13371= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest:testPositiveOctantByIntersection()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSetTest.java
13372= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest:testPartWithHole()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSetTest.java
13373= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest:testSeveralParts()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSetTest.java
13374= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest:testConcentricSubParts()	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSetTest.java
13375= org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest:s2Point(double, double)	/src/test/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSetTest.java
13376= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithSVDTest:testHahn1()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithSVDTest.java
13377= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithSVDTest:testGetIterations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithSVDTest.java
13378= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithSVDTest:testNonInvertible()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithSVDTest.java
13379= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithSVDTest:testMaxEvaluations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithSVDTest.java
13380= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithSVDTest:testCircleFittingBadInit()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithSVDTest.java
13381= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithSVDTest:getMaxIterations()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithSVDTest.java
13382= org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerWithSVDTest:getOptimizer()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerWithSVDTest.java
13383= org.apache.commons.math3.util.CombinatoricsUtilsTest:testCheckBinomial3()	/src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java
13384= org.apache.commons.math3.util.CombinatoricsUtilsTest:test0Choose0()	/src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java
13385= org.apache.commons.math3.util.CombinatoricsUtilsTest:testCheckBinomial1()	/src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java
13386= org.apache.commons.math3.util.CombinatoricsUtilsTest:testCheckBinomial2()	/src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java
13387= org.apache.commons.math3.util.CombinatoricsUtilsTest:testBinomialCoefficient()	/src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java
13388= org.apache.commons.math3.util.CombinatoricsUtilsTest:testStirlingS2()	/src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java
13389= org.apache.commons.math3.util.CombinatoricsUtilsTest:testStirlingS2NegativeN()	/src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java
13390= org.apache.commons.math3.util.CombinatoricsUtilsTest:testBinomialCoefficientLarge()	/src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java
13391= org.apache.commons.math3.util.CombinatoricsUtilsTest:testStirlingS2Overflow()	/src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java
13392= org.apache.commons.math3.util.CombinatoricsUtilsTest:factorial(int)	/src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java
13393= org.apache.commons.math3.util.CombinatoricsUtilsTest:testFactorial()	/src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java
13394= org.apache.commons.math3.util.CombinatoricsUtilsTest:testFactorialFail()	/src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java
13395= org.apache.commons.math3.util.CombinatoricsUtilsTest:binomialCoefficient(int, int)	/src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java
13396= org.apache.commons.math3.util.CombinatoricsUtilsTest:testBinomialCoefficientFail()	/src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java
13397= org.apache.commons.math3.util.CombinatoricsUtilsTest:testStirlingS2LargeK()	/src/test/java/org/apache/commons/math3/util/CombinatoricsUtilsTest.java
13398= org.apache.commons.math3.analysis.solvers.IllinoisSolverTest:getQuinticEvalCounts()	/src/test/java/org/apache/commons/math3/analysis/solvers/IllinoisSolverTest.java
13399= org.apache.commons.math3.analysis.solvers.IllinoisSolverTest:getSolver()	/src/test/java/org/apache/commons/math3/analysis/solvers/IllinoisSolverTest.java
13400= org.apache.commons.math3.linear.CholeskySolverTest:getDeterminant(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/CholeskySolverTest.java
13401= org.apache.commons.math3.linear.CholeskySolverTest:testDeterminant()	/src/test/java/org/apache/commons/math3/linear/CholeskySolverTest.java
13402= org.apache.commons.math3.linear.CholeskySolverTest:testSolve()	/src/test/java/org/apache/commons/math3/linear/CholeskySolverTest.java
13403= org.apache.commons.math3.linear.CholeskySolverTest:testSolveDimensionErrors()	/src/test/java/org/apache/commons/math3/linear/CholeskySolverTest.java
13404= org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest:value(double[])	/src/test/java/org/apache/commons/math3/analysis/differentiation/JacobianFunctionTest.java
13405= org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest.SphereMapping:value(double[])	/src/test/java/org/apache/commons/math3/analysis/differentiation/JacobianFunctionTest.java
13406= org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest.SphereMapping:jacobian(double[])	/src/test/java/org/apache/commons/math3/analysis/differentiation/JacobianFunctionTest.java
13407= org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/analysis/differentiation/JacobianFunctionTest.java
13408= org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest:SphereMapping(double)	/src/test/java/org/apache/commons/math3/analysis/differentiation/JacobianFunctionTest.java
13409= org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest:jacobian(double[])	/src/test/java/org/apache/commons/math3/analysis/differentiation/JacobianFunctionTest.java
13410= org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest:testSphere()	/src/test/java/org/apache/commons/math3/analysis/differentiation/JacobianFunctionTest.java
13411= org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest.SphereMapping:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/analysis/differentiation/JacobianFunctionTest.java
13412= org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest.SphereMapping:SphereMapping(double)	/src/test/java/org/apache/commons/math3/analysis/differentiation/JacobianFunctionTest.java
13413= org.apache.commons.math3.linear.QRDecompositionTest:createTestMatrix(Random, int, int)	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13414= org.apache.commons.math3.linear.QRDecompositionTest:checkAEqualQR(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13415= org.apache.commons.math3.linear.QRDecompositionTest:testNonInvertible()	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13416= org.apache.commons.math3.linear.QRDecompositionTest:testMatricesValues()	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13417= org.apache.commons.math3.linear.QRDecompositionTest:checkUpperTriangular(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13418= org.apache.commons.math3.linear.QRDecompositionTest:testQRSingular()	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13419= org.apache.commons.math3.linear.QRDecompositionTest:testHTrapezoidal()	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13420= org.apache.commons.math3.linear.QRDecompositionTest:checkQOrthogonal(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13421= org.apache.commons.math3.linear.QRDecompositionTest:visit(int, int, double)	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13422= org.apache.commons.math3.linear.QRDecompositionTest:checkTrapezoidal(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13423= org.apache.commons.math3.linear.QRDecompositionTest:checkDimension(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13424= org.apache.commons.math3.linear.QRDecompositionTest:testQOrthogonal()	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13425= org.apache.commons.math3.linear.QRDecompositionTest:testRUpperTriangular()	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13426= org.apache.commons.math3.linear.QRDecompositionTest:testDimensions()	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13427= org.apache.commons.math3.linear.QRDecompositionTest:testInvertShortWide()	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13428= org.apache.commons.math3.linear.QRDecompositionTest:testAEqualQR()	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13429= org.apache.commons.math3.linear.QRDecompositionTest:testInvertTallSkinny()	/src/test/java/org/apache/commons/math3/linear/QRDecompositionTest.java
13430= org.apache.commons.math3.ode.TestProblem6:TestProblem6(TestProblem6)	/src/test/java/org/apache/commons/math3/ode/TestProblem6.java
13431= org.apache.commons.math3.ode.TestProblem6:doComputeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/TestProblem6.java
13432= org.apache.commons.math3.ode.TestProblem6:computeTheoreticalState(double)	/src/test/java/org/apache/commons/math3/ode/TestProblem6.java
13433= org.apache.commons.math3.ode.TestProblem6:TestProblem6()	/src/test/java/org/apache/commons/math3/ode/TestProblem6.java
13434= org.apache.commons.math3.ode.TestProblem6:copy()	/src/test/java/org/apache/commons/math3/ode/TestProblem6.java
13435= org.apache.commons.math3.genetics.FixedElapsedTimeTest:testIsSatisfied()	/src/test/java/org/apache/commons/math3/genetics/FixedElapsedTimeTest.java
13436= org.apache.commons.math3.genetics.FixedElapsedTimeTest:addChromosome(Chromosome)	/src/test/java/org/apache/commons/math3/genetics/FixedElapsedTimeTest.java
13437= org.apache.commons.math3.genetics.FixedElapsedTimeTest:getPopulationLimit()	/src/test/java/org/apache/commons/math3/genetics/FixedElapsedTimeTest.java
13438= org.apache.commons.math3.genetics.FixedElapsedTimeTest:getPopulationSize()	/src/test/java/org/apache/commons/math3/genetics/FixedElapsedTimeTest.java
13439= org.apache.commons.math3.genetics.FixedElapsedTimeTest:iterator()	/src/test/java/org/apache/commons/math3/genetics/FixedElapsedTimeTest.java
13440= org.apache.commons.math3.genetics.FixedElapsedTimeTest:getFittestChromosome()	/src/test/java/org/apache/commons/math3/genetics/FixedElapsedTimeTest.java
13441= org.apache.commons.math3.genetics.FixedElapsedTimeTest:nextGeneration()	/src/test/java/org/apache/commons/math3/genetics/FixedElapsedTimeTest.java
13442= org.apache.commons.math3.stat.inference.GTestTest:testNegativeObservedCounts()	/src/test/java/org/apache/commons/math3/stat/inference/GTestTest.java
13443= org.apache.commons.math3.stat.inference.GTestTest:testGTestSetsComparisonBadCounts()	/src/test/java/org/apache/commons/math3/stat/inference/GTestTest.java
13444= org.apache.commons.math3.stat.inference.GTestTest:testUnmatchedArrays()	/src/test/java/org/apache/commons/math3/stat/inference/GTestTest.java
13445= org.apache.commons.math3.stat.inference.GTestTest:testGTestGoodnesOfFit2()	/src/test/java/org/apache/commons/math3/stat/inference/GTestTest.java
13446= org.apache.commons.math3.stat.inference.GTestTest:testBadAlpha()	/src/test/java/org/apache/commons/math3/stat/inference/GTestTest.java
13447= org.apache.commons.math3.stat.inference.GTestTest:testGTestGoodnesOfFit3()	/src/test/java/org/apache/commons/math3/stat/inference/GTestTest.java
13448= org.apache.commons.math3.stat.inference.GTestTest:testScaling()	/src/test/java/org/apache/commons/math3/stat/inference/GTestTest.java
13449= org.apache.commons.math3.stat.inference.GTestTest:testRootLogLikelihood()	/src/test/java/org/apache/commons/math3/stat/inference/GTestTest.java
13450= org.apache.commons.math3.stat.inference.GTestTest:testGTestIndependance1()	/src/test/java/org/apache/commons/math3/stat/inference/GTestTest.java
13451= org.apache.commons.math3.stat.inference.GTestTest:testGTestGoodnesOfFit1()	/src/test/java/org/apache/commons/math3/stat/inference/GTestTest.java
13452= org.apache.commons.math3.stat.inference.GTestTest:testGTestIndependance2()	/src/test/java/org/apache/commons/math3/stat/inference/GTestTest.java
13453= org.apache.commons.math3.stat.inference.GTestTest:testZeroExpectedCounts()	/src/test/java/org/apache/commons/math3/stat/inference/GTestTest.java
13454= org.apache.commons.math3.stat.inference.GTestTest:testGTestIndependance3()	/src/test/java/org/apache/commons/math3/stat/inference/GTestTest.java
13455= org.apache.commons.math3.optimization.direct.PowellOptimizerTest:testSumSinc()	/src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java
13456= org.apache.commons.math3.optimization.direct.PowellOptimizerTest:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java
13457= org.apache.commons.math3.optimization.direct.PowellOptimizerTest:doTest(MultivariateFunction, double[], double[], GoalType, double, double)	/src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java
13458= org.apache.commons.math3.optimization.direct.PowellOptimizerTest:testRelativeToleranceOnScaledValues()	/src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java
13459= org.apache.commons.math3.optimization.direct.PowellOptimizerTest:testMaximizeQuadratic()	/src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java
13460= org.apache.commons.math3.optimization.direct.PowellOptimizerTest:doTest(MultivariateFunction, double[], double[], GoalType, double, double, double)	/src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java
13461= org.apache.commons.math3.optimization.direct.PowellOptimizerTest:testQuadratic()	/src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java
13462= org.apache.commons.math3.analysis.function.LogitTest:testParametricUsage6()	/src/test/java/org/apache/commons/math3/analysis/function/LogitTest.java
13463= org.apache.commons.math3.analysis.function.LogitTest:testSomeValues()	/src/test/java/org/apache/commons/math3/analysis/function/LogitTest.java
13464= org.apache.commons.math3.analysis.function.LogitTest:testPreconditions1()	/src/test/java/org/apache/commons/math3/analysis/function/LogitTest.java
13465= org.apache.commons.math3.analysis.function.LogitTest:testParametricUsage2()	/src/test/java/org/apache/commons/math3/analysis/function/LogitTest.java
13466= org.apache.commons.math3.analysis.function.LogitTest:testParametricUsage3()	/src/test/java/org/apache/commons/math3/analysis/function/LogitTest.java
13467= org.apache.commons.math3.analysis.function.LogitTest:testParametricUsage4()	/src/test/java/org/apache/commons/math3/analysis/function/LogitTest.java
13468= org.apache.commons.math3.analysis.function.LogitTest:testPreconditions2()	/src/test/java/org/apache/commons/math3/analysis/function/LogitTest.java
13469= org.apache.commons.math3.analysis.function.LogitTest:testParametricUsage5()	/src/test/java/org/apache/commons/math3/analysis/function/LogitTest.java
13470= org.apache.commons.math3.analysis.function.LogitTest:testValueWithInverseFunction()	/src/test/java/org/apache/commons/math3/analysis/function/LogitTest.java
13471= org.apache.commons.math3.analysis.function.LogitTest:testDerivativesHighOrder()	/src/test/java/org/apache/commons/math3/analysis/function/LogitTest.java
13472= org.apache.commons.math3.analysis.function.LogitTest:testDerivative()	/src/test/java/org/apache/commons/math3/analysis/function/LogitTest.java
13473= org.apache.commons.math3.analysis.function.LogitTest:testDerivativeLargeArguments()	/src/test/java/org/apache/commons/math3/analysis/function/LogitTest.java
13474= org.apache.commons.math3.analysis.function.LogitTest:testParametricValue()	/src/test/java/org/apache/commons/math3/analysis/function/LogitTest.java
13475= org.apache.commons.math3.analysis.function.LogitTest:testDerivativesWithInverseFunction()	/src/test/java/org/apache/commons/math3/analysis/function/LogitTest.java
13476= org.apache.commons.math3.analysis.function.LogitTest:testParametricUsage1()	/src/test/java/org/apache/commons/math3/analysis/function/LogitTest.java
13477= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:testQuaternion()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13478= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:testVectorOnePair()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13479= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:testAxisAngle()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13480= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:testIssue801()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13481= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:testIssue639()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13482= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:testCompose()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13483= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:testVectorTwoPairs()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13484= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:checkVector(Vector3D, Vector3D)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13485= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:checkRotation(Rotation, double, double, double, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13486= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:testRevert()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13487= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:testSingularities()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13488= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:testMatrix()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13489= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:checkAngle(double, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13490= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:testAngles()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13491= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:testArray()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13492= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:testIdentity()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13493= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:testComposeInverse()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13494= org.apache.commons.math3.geometry.euclidean.threed.RotationTest:testApplyInverseTo()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java
13495= org.apache.commons.math3.distribution.HypergeometricDistributionTest:makeLogDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13496= org.apache.commons.math3.distribution.HypergeometricDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13497= org.apache.commons.math3.distribution.HypergeometricDistributionTest:HypergeometricDistributionTest()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13498= org.apache.commons.math3.distribution.HypergeometricDistributionTest:testDegenerateNoFailures()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13499= org.apache.commons.math3.distribution.HypergeometricDistributionTest:makeInverseCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13500= org.apache.commons.math3.distribution.HypergeometricDistributionTest:makeDensityTestPoints()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13501= org.apache.commons.math3.distribution.HypergeometricDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13502= org.apache.commons.math3.distribution.HypergeometricDistributionTest:testMoreLargeValues()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13503= org.apache.commons.math3.distribution.HypergeometricDistributionTest:makeInverseCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13504= org.apache.commons.math3.distribution.HypergeometricDistributionTest:testAccessors()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13505= org.apache.commons.math3.distribution.HypergeometricDistributionTest:testDegenerateNoSuccesses()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13506= org.apache.commons.math3.distribution.HypergeometricDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13507= org.apache.commons.math3.distribution.HypergeometricDistributionTest:testHypergeometricDistributionProbabilities(int, int, int, double[][])	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13508= org.apache.commons.math3.distribution.HypergeometricDistributionTest:testMath644()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13509= org.apache.commons.math3.distribution.HypergeometricDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13510= org.apache.commons.math3.distribution.HypergeometricDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13511= org.apache.commons.math3.distribution.HypergeometricDistributionTest:testMath1021()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13512= org.apache.commons.math3.distribution.HypergeometricDistributionTest:testDegenerateFullSample()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13513= org.apache.commons.math3.distribution.HypergeometricDistributionTest:testLargeValues()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13514= org.apache.commons.math3.distribution.HypergeometricDistributionTest:testPreconditions()	/src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java
13515= org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolatorTest.java
13516= org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest:derivativesConsistency()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolatorTest.java
13517= org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest:checklone()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolatorTest.java
13518= org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest:serialization()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolatorTest.java
13519= org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolatorTest.java
13520= org.apache.commons.math3.distribution.NormalDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13521= org.apache.commons.math3.distribution.NormalDistributionTest:verifyQuantiles()	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13522= org.apache.commons.math3.distribution.NormalDistributionTest:testGetMean()	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13523= org.apache.commons.math3.distribution.NormalDistributionTest:testDensity()	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13524= org.apache.commons.math3.distribution.NormalDistributionTest:testExtremeValues()	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13525= org.apache.commons.math3.distribution.NormalDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13526= org.apache.commons.math3.distribution.NormalDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13527= org.apache.commons.math3.distribution.NormalDistributionTest:checkDensity(double, double, double[], double[])	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13528= org.apache.commons.math3.distribution.NormalDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13529= org.apache.commons.math3.distribution.NormalDistributionTest:testInverseCumulativeProbabilityExtremes()	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13530= org.apache.commons.math3.distribution.NormalDistributionTest:testGetStandardDeviation()	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13531= org.apache.commons.math3.distribution.NormalDistributionTest:testQuantiles()	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13532= org.apache.commons.math3.distribution.NormalDistributionTest:setUp()	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13533= org.apache.commons.math3.distribution.NormalDistributionTest:testPreconditions()	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13534= org.apache.commons.math3.distribution.NormalDistributionTest:testMath280()	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13535= org.apache.commons.math3.distribution.NormalDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java
13536= org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest:testEqualsAndHashCode()	/src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java
13537= org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest:testOverrideMeanWithMathClass()	/src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java
13538= org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest:createSummaryStatistics()	/src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java
13539= org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest:testOverrideGeoMeanWithMathClass()	/src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java
13540= org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest:testSetterInjection()	/src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java
13541= org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest:testSerialization()	/src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java
13542= org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest:testStats()	/src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java
13543= org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest:testN0andN1Conditions()	/src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java
13544= org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest:testNaNContracts()	/src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java
13545= org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest:testProductAndGeometricMean()	/src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java
13546= org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest:testOverrideVarianceWithMathClass()	/src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java
13547= org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest:testSetterIllegalState()	/src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java
13548= org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest:verifySummary(SummaryStatistics, StatisticalSummary)	/src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java
13549= org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest:testGetSummary()	/src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java
13550= org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest:testCopy()	/src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java
13551= org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest:testMoreEstimatedParametersSimple()	/src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java
13552= org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest:testHahn1()	/src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java
13553= org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest:testMaxEvaluations()	/src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java
13554= org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest:testCircleFittingBadInit()	/src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java
13555= org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest:createOptimizer()	/src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java
13556= org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest:testMoreEstimatedParametersUnsorted()	/src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java
13557= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testPositiveInfinity()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13558= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testNan()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13559= org.apache.commons.math3.complex.ComplexFormatAbstractTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13560= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testParseSimpleWithDecimalsTrunc()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13561= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testParseNegativeBoth()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13562= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testSimpleWithDecimalsTrunc()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13563= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testGetRealFormat()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13564= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testParseNan()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13565= org.apache.commons.math3.complex.ComplexFormatAbstractTest:getLocale()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13566= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testNegativeReal()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13567= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testSimpleWithDecimals()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13568= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testNegativeInfinity()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13569= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testParseZeroReal()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13570= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testDifferentImaginaryChar()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13571= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testFormatNumber()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13572= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testZeroImaginary()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13573= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testForgottenImaginaryCharacter()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13574= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testPaseNegativeInfinity()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13575= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testZeroReal()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13576= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testParsePositiveInfinity()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13577= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testParseSimpleWithDecimals()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13578= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testGetImaginaryFormat()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13579= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testDefaultFormatComplex()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13580= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testTrimOneImaginary()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13581= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testSimpleNoDecimals()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13582= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testParseNegativeReal()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13583= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testParseNegativeImaginary()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13584= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testConstructorSingleFormat()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13585= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testNegativeImaginary()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13586= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testParseZeroImaginary()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13587= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testNegativeBoth()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13588= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testParseDifferentImaginaryChar()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13589= org.apache.commons.math3.complex.ComplexFormatAbstractTest:ComplexFormatAbstractTest()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13590= org.apache.commons.math3.complex.ComplexFormatAbstractTest:testParseSimpleNoDecimals()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java
13591= org.apache.commons.math3.linear.DiagonalMatrixTest:testSetNonDiagonalEntry()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13592= org.apache.commons.math3.linear.DiagonalMatrixTest:testSetNonDiagonalZero()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13593= org.apache.commons.math3.linear.DiagonalMatrixTest:testSetSubMatrix()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13594= org.apache.commons.math3.linear.DiagonalMatrixTest:testSubtract()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13595= org.apache.commons.math3.linear.DiagonalMatrixTest:testSetSubMatrixError()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13596= org.apache.commons.math3.linear.DiagonalMatrixTest:testInverseError()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13597= org.apache.commons.math3.linear.DiagonalMatrixTest:testMultiplyNonDiagonalZero()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13598= org.apache.commons.math3.linear.DiagonalMatrixTest:testInverseError2()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13599= org.apache.commons.math3.linear.DiagonalMatrixTest:testAddNonDiagonalEntry()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13600= org.apache.commons.math3.linear.DiagonalMatrixTest:testCreateError()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13601= org.apache.commons.math3.linear.DiagonalMatrixTest:testMultiplyNonDiagonalEntry()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13602= org.apache.commons.math3.linear.DiagonalMatrixTest:testPreMultiplyVector()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13603= org.apache.commons.math3.linear.DiagonalMatrixTest:testSetEntryOutOfRange()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13604= org.apache.commons.math3.linear.DiagonalMatrixTest:testMultiply2()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13605= org.apache.commons.math3.linear.DiagonalMatrixTest:testMultiply1()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13606= org.apache.commons.math3.linear.DiagonalMatrixTest:testOperate()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13607= org.apache.commons.math3.linear.DiagonalMatrixTest:testCopy()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13608= org.apache.commons.math3.linear.DiagonalMatrixTest:testGetData()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13609= org.apache.commons.math3.linear.DiagonalMatrixTest:testPreMultiply()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13610= org.apache.commons.math3.linear.DiagonalMatrixTest:testConstructor2()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13611= org.apache.commons.math3.linear.DiagonalMatrixTest:testNull()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13612= org.apache.commons.math3.linear.DiagonalMatrixTest:testConstructor1()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13613= org.apache.commons.math3.linear.DiagonalMatrixTest:testConstructor3()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13614= org.apache.commons.math3.linear.DiagonalMatrixTest:testCreate()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13615= org.apache.commons.math3.linear.DiagonalMatrixTest:testInverse()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13616= org.apache.commons.math3.linear.DiagonalMatrixTest:testAdd()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13617= org.apache.commons.math3.linear.DiagonalMatrixTest:testAddNonDiagonalZero()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13618= org.apache.commons.math3.linear.DiagonalMatrixTest:testAddToEntry()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13619= org.apache.commons.math3.linear.DiagonalMatrixTest:testMultiplyEntry()	/src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java
13620= org.apache.commons.math3.analysis.solvers.BaseSecantSolverAbstractTest:testSolutionRightSide()	/src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java
13621= org.apache.commons.math3.analysis.solvers.BaseSecantSolverAbstractTest:getQuinticEvalCounts()	/src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java
13622= org.apache.commons.math3.analysis.solvers.BaseSecantSolverAbstractTest:testSolutionLeftSide()	/src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java
13623= org.apache.commons.math3.analysis.solvers.BaseSecantSolverAbstractTest:getSolver()	/src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java
13624= org.apache.commons.math3.analysis.solvers.BaseSecantSolverAbstractTest:testRootEndpoints()	/src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java
13625= org.apache.commons.math3.analysis.solvers.BaseSecantSolverAbstractTest:testSinZero()	/src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java
13626= org.apache.commons.math3.analysis.solvers.BaseSecantSolverAbstractTest:getSolution(UnivariateSolver, int, UnivariateFunction, double, double, AllowedSolution)	/src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java
13627= org.apache.commons.math3.analysis.solvers.BaseSecantSolverAbstractTest:testSolutionAboveSide()	/src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java
13628= org.apache.commons.math3.analysis.solvers.BaseSecantSolverAbstractTest:testSolutionBelowSide()	/src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java
13629= org.apache.commons.math3.analysis.solvers.BaseSecantSolverAbstractTest:testQuinticZero()	/src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java
13630= org.apache.commons.math3.analysis.solvers.BaseSecantSolverAbstractTest:testBadEndpoints()	/src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java
13631= org.apache.commons.math3.util.ContinuedFractionTest:getA(int, double)	/src/test/java/org/apache/commons/math3/util/ContinuedFractionTest.java
13632= org.apache.commons.math3.util.ContinuedFractionTest:getB(int, double)	/src/test/java/org/apache/commons/math3/util/ContinuedFractionTest.java
13633= org.apache.commons.math3.util.ContinuedFractionTest:testGoldenRatio()	/src/test/java/org/apache/commons/math3/util/ContinuedFractionTest.java
13634= org.apache.commons.math3.fitting.HarmonicFitterTest:testInitialGuess()	/src/test/java/org/apache/commons/math3/fitting/HarmonicFitterTest.java
13635= org.apache.commons.math3.fitting.HarmonicFitterTest:testUnsorted()	/src/test/java/org/apache/commons/math3/fitting/HarmonicFitterTest.java
13636= org.apache.commons.math3.fitting.HarmonicFitterTest:test1PercentError()	/src/test/java/org/apache/commons/math3/fitting/HarmonicFitterTest.java
13637= org.apache.commons.math3.fitting.HarmonicFitterTest:testMath844()	/src/test/java/org/apache/commons/math3/fitting/HarmonicFitterTest.java
13638= org.apache.commons.math3.fitting.HarmonicFitterTest:testTinyVariationsData()	/src/test/java/org/apache/commons/math3/fitting/HarmonicFitterTest.java
13639= org.apache.commons.math3.fitting.HarmonicFitterTest:testNoError()	/src/test/java/org/apache/commons/math3/fitting/HarmonicFitterTest.java
13640= org.apache.commons.math3.fitting.HarmonicFitterTest:testPreconditions1()	/src/test/java/org/apache/commons/math3/fitting/HarmonicFitterTest.java
13641= org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest:testExactIntegration()	/src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java
13642= org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest:testQuinticFunction()	/src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java
13643= org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest:testIssue464()	/src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java
13644= org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest:exactIntegration(PolynomialFunction, double, double)	/src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java
13645= org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest:testSinFunction()	/src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java
13646= org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest:testNormalDistributionWithLargeSigma()	/src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java
13647= org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest:value(double)	/src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java
13648= org.apache.commons.math3.geometry.euclidean.oned.FrenchVector1DFormatTest:getLocale()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/FrenchVector1DFormatTest.java
13649= org.apache.commons.math3.geometry.euclidean.oned.FrenchVector1DFormatTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/FrenchVector1DFormatTest.java
13650= org.apache.commons.math3.ode.events.EventFilterTest:testHistoryDecreasingForward()	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13651= org.apache.commons.math3.ode.events.EventFilterTest:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13652= org.apache.commons.math3.ode.events.EventFilterTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13653= org.apache.commons.math3.ode.events.EventFilterTest.Event:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13654= org.apache.commons.math3.ode.events.EventFilterTest:testTwoOppositeFilters()	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13655= org.apache.commons.math3.ode.events.EventFilterTest.Event:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13656= org.apache.commons.math3.ode.events.EventFilterTest:testHistoryIncreasingBackward()	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13657= org.apache.commons.math3.ode.events.EventFilterTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13658= org.apache.commons.math3.ode.events.EventFilterTest:testHistoryDecreasingBackward()	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13659= org.apache.commons.math3.ode.events.EventFilterTest:testHistory(FilterType, double, double, double, double)	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13660= org.apache.commons.math3.ode.events.EventFilterTest:Event(boolean, boolean)	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13661= org.apache.commons.math3.ode.events.EventFilterTest:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13662= org.apache.commons.math3.ode.events.EventFilterTest.Event:getEventCount()	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13663= org.apache.commons.math3.ode.events.EventFilterTest:testIncreasingOnly()	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13664= org.apache.commons.math3.ode.events.EventFilterTest.Event:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13665= org.apache.commons.math3.ode.events.EventFilterTest.Event:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13666= org.apache.commons.math3.ode.events.EventFilterTest:getEventCount()	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13667= org.apache.commons.math3.ode.events.EventFilterTest.SineCosine:getDimension()	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13668= org.apache.commons.math3.ode.events.EventFilterTest.Event:Event(boolean, boolean)	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13669= org.apache.commons.math3.ode.events.EventFilterTest.SineCosine:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13670= org.apache.commons.math3.ode.events.EventFilterTest:testHistoryIncreasingForward()	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13671= org.apache.commons.math3.ode.events.EventFilterTest:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13672= org.apache.commons.math3.ode.events.EventFilterTest:testDecreasingOnly()	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13673= org.apache.commons.math3.ode.events.EventFilterTest:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/EventFilterTest.java
13674= org.apache.commons.math3.fitting.leastsquares.CircleVectorial:addPoint(double, double)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleVectorial.java
13675= org.apache.commons.math3.fitting.leastsquares.CircleVectorial:getModelFunctionJacobian()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleVectorial.java
13676= org.apache.commons.math3.fitting.leastsquares.CircleVectorial:getRadius(Vector2D)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleVectorial.java
13677= org.apache.commons.math3.fitting.leastsquares.CircleVectorial:value(double[])	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleVectorial.java
13678= org.apache.commons.math3.fitting.leastsquares.CircleVectorial:getModelFunction()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleVectorial.java
13679= org.apache.commons.math3.fitting.leastsquares.CircleVectorial:getN()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleVectorial.java
13680= org.apache.commons.math3.fitting.leastsquares.CircleVectorial:CircleVectorial()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/CircleVectorial.java
13681= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest:checkExactTable(int, int, double, double)	/src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java
13682= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest:checkApproximateTable(int, int, double, double, double)	/src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java
13683= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest:testOneSampleGaussianUniform()	/src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java
13684= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest:testTwoSampleSmallSampleExact()	/src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java
13685= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest:testTwoSampleExactP()	/src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java
13686= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest:testTwoSampleMonteCarlo()	/src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java
13687= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest:testTwoSampleApproximateP()	/src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java
13688= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest:testOneSampleUniformGaussian()	/src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java
13689= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest:testOneSampleGaussianGaussian()	/src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java
13690= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest:testCumulativeDensityFunction()	/src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java
13691= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest:testOneSampleGaussianGaussianSmallSample()	/src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java
13692= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest:testOneSampleUniformUniform()	/src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java
13693= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest:testOneSampleUniformUniformSmallSample()	/src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java
13694= org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest:testTwoSampleApproximateCritialValues()	/src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java
13695= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:Elli()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13696= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.ElliRotated:ElliRotated(double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13697= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testMath864()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13698= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:TwoAxes()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13699= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testTablet()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13700= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testSsDiffPow()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13701= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.CigTab:CigTab()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13702= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Tablet:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13703= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testElliRotated()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13704= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.ElliRotated:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13705= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testCigarWithBoundaries()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13706= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:ElliRotated()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13707= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.MinusElli:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13708= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testInitOutofbounds2()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13709= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Cigar:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13710= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testInputSigmaNegative()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13711= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:Ackley(double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13712= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:Rotate(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13713= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Elli:Elli(double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13714= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:doTest(MultivariateFunction, double[], double[], double[][], GoalType, int, boolean, int, double, double, double, int, PointValuePair)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13715= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testEllipse()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13716= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:point(int, double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13717= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.ElliRotated:ElliRotated()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13718= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:boundaries(int, double, double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13719= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Tablet:Tablet(double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13720= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testTwoAxes()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13721= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:Tablet()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13722= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:CigTab(double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13723= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Ackley:Ackley()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13724= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:Cigar(double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13725= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Rastrigin:Rastrigin()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13726= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testCigTab()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13727= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testRosen()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13728= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Ackley:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13729= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testInputSigmaDimensionMismatch()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13730= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testConstrainedRosen()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13731= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.CigTab:CigTab(double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13732= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Cigar:Cigar()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13733= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Tablet:Tablet()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13734= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testInputSigmaOutOfRange()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13735= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testMaximize()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13736= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Rosen:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13737= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:ElliRotated(double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13738= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Rastrigin:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13739= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:Tablet(double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13740= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:CigTab()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13741= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Sphere:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13742= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.TwoAxes:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13743= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testDiagonalRosen()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13744= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:Cigar()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13745= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.SsDiffPow:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13746= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testAckley()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13747= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Elli:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13748= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:Rastrigin()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13749= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:Rastrigin(double, double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13750= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:GenBasis(int)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13751= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.DiffPow:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13752= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Basis:Rotate(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13753= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:TwoAxes(double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13754= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testFitAccuracyDependsOnBoundary()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13755= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:Elli(double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13756= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Elli:Elli()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13757= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testSphere()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13758= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.TwoAxes:TwoAxes(double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13759= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testBoundariesDimensionMismatch()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13760= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13761= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Basis:GenBasis(int)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13762= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.TwoAxes:TwoAxes()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13763= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testCigar()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13764= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testDiffPow()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13765= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:Ackley()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13766= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testRastrigin()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13767= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Cigar:Cigar(double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13768= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Rastrigin:Rastrigin(double, double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13769= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.Ackley:Ackley(double)	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13770= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest:testInitOutofbounds1()	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13771= org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.CigTab:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java
13772= org.apache.commons.math3.linear.FieldMatrixImplTest.SetVisitor:SetVisitor()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13773= org.apache.commons.math3.linear.FieldMatrixImplTest:testPlusMinus()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13774= org.apache.commons.math3.linear.FieldMatrixImplTest.GetVisitor:visit(int, int, Fraction)	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13775= org.apache.commons.math3.linear.FieldMatrixImplTest:testDimensions()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13776= org.apache.commons.math3.linear.FieldMatrixImplTest.SetVisitor:visit(int, int, Fraction)	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13777= org.apache.commons.math3.linear.FieldMatrixImplTest:testPremultiplyVector()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13778= org.apache.commons.math3.linear.FieldMatrixImplTest:testGetRow()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13779= org.apache.commons.math3.linear.FieldMatrixImplTest:testGetSubMatrix()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13780= org.apache.commons.math3.linear.FieldMatrixImplTest:testSetRow()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13781= org.apache.commons.math3.linear.FieldMatrixImplTest:testScalarAdd()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13782= org.apache.commons.math3.linear.FieldMatrixImplTest:testGetRowVector()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13783= org.apache.commons.math3.linear.FieldMatrixImplTest:testWalk()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13784= org.apache.commons.math3.linear.FieldMatrixImplTest:visit(int, int, Fraction)	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13785= org.apache.commons.math3.linear.FieldMatrixImplTest:testPower()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13786= org.apache.commons.math3.linear.FieldMatrixImplTest:testGetVectors()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13787= org.apache.commons.math3.linear.FieldMatrixImplTest.GetVisitor:getCount()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13788= org.apache.commons.math3.linear.FieldMatrixImplTest:testGetRowMatrix()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13789= org.apache.commons.math3.linear.FieldMatrixImplTest:checkGetSubMatrix(FieldMatrix<Fraction>, Fraction[][], int[], int[])	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13790= org.apache.commons.math3.linear.FieldMatrixImplTest:testSetRowVector()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13791= org.apache.commons.math3.linear.FieldMatrixImplTest:splitLU(FieldMatrix<Fraction>, Fraction[][], Fraction[][])	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13792= org.apache.commons.math3.linear.FieldMatrixImplTest:GetVisitor()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13793= org.apache.commons.math3.linear.FieldMatrixImplTest:testGetColumn()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13794= org.apache.commons.math3.linear.FieldMatrixImplTest:columnToArray(Fraction[][])	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13795= org.apache.commons.math3.linear.FieldMatrixImplTest:columnToVector(Fraction[][])	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13796= org.apache.commons.math3.linear.FieldMatrixImplTest.GetVisitor:GetVisitor()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13797= org.apache.commons.math3.linear.FieldMatrixImplTest:testSerial()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13798= org.apache.commons.math3.linear.FieldMatrixImplTest:checkArrays(Fraction[], Fraction[])	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13799= org.apache.commons.math3.linear.FieldMatrixImplTest:testMultiply()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13800= org.apache.commons.math3.linear.FieldMatrixImplTest:testOperate()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13801= org.apache.commons.math3.linear.FieldMatrixImplTest:testMultiply2()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13802= org.apache.commons.math3.linear.FieldMatrixImplTest:testSetRowMatrix()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13803= org.apache.commons.math3.linear.FieldMatrixImplTest:checkCopy(FieldMatrix<Fraction>, Fraction[][], int[], int[])	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13804= org.apache.commons.math3.linear.FieldMatrixImplTest:testTranspose()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13805= org.apache.commons.math3.linear.FieldMatrixImplTest:testGetColumnVector()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13806= org.apache.commons.math3.linear.FieldMatrixImplTest:checkGetSubMatrix(FieldMatrix<Fraction>, Fraction[][], int, int, int, int)	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13807= org.apache.commons.math3.linear.FieldMatrixImplTest:testEqualsAndHashCode()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13808= org.apache.commons.math3.linear.FieldMatrixImplTest:testSetColumnVector()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13809= org.apache.commons.math3.linear.FieldMatrixImplTest:getCount()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13810= org.apache.commons.math3.linear.FieldMatrixImplTest:testMath209()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13811= org.apache.commons.math3.linear.FieldMatrixImplTest:testSetSubMatrix()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13812= org.apache.commons.math3.linear.FieldMatrixImplTest:testTrace()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13813= org.apache.commons.math3.linear.FieldMatrixImplTest:permuteRows(FieldMatrix<Fraction>, int[])	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13814= org.apache.commons.math3.linear.FieldMatrixImplTest:testCopyFunctions()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13815= org.apache.commons.math3.linear.FieldMatrixImplTest:testPremultiply()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13816= org.apache.commons.math3.linear.FieldMatrixImplTest:testGetColumnMatrix()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13817= org.apache.commons.math3.linear.FieldMatrixImplTest:testCopySubMatrix()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13818= org.apache.commons.math3.linear.FieldMatrixImplTest:testAdd()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13819= org.apache.commons.math3.linear.FieldMatrixImplTest:checkCopy(FieldMatrix<Fraction>, Fraction[][], int, int, int, int)	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13820= org.apache.commons.math3.linear.FieldMatrixImplTest:testGetEntry()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13821= org.apache.commons.math3.linear.FieldMatrixImplTest:testToString()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13822= org.apache.commons.math3.linear.FieldMatrixImplTest:testAddFail()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13823= org.apache.commons.math3.linear.FieldMatrixImplTest:testExamples()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13824= org.apache.commons.math3.linear.FieldMatrixImplTest:testSetColumn()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13825= org.apache.commons.math3.linear.FieldMatrixImplTest:testSetColumnMatrix()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13826= org.apache.commons.math3.linear.FieldMatrixImplTest:SetVisitor()	/src/test/java/org/apache/commons/math3/linear/FieldMatrixImplTest.java
13827= org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary:FindOnes(List<Integer>)	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestBinary.java
13828= org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary:newFixedLengthChromosome(List<Integer>)	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestBinary.java
13829= org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes:fitness()	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestBinary.java
13830= org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary:randomPopulation()	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestBinary.java
13831= org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes:FindOnes(List<Integer>)	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestBinary.java
13832= org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary:test()	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestBinary.java
13833= org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary.FindOnes:newFixedLengthChromosome(List<Integer>)	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestBinary.java
13834= org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary:fitness()	/src/test/java/org/apache/commons/math3/genetics/GeneticAlgorithmTestBinary.java
13835= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testNormalize()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13836= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testOrthogonal()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13837= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testCoordinates()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13838= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testNorm1()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13839= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testDistance1()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13840= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testNaN()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13841= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testSubtract()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13842= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testCrossProductCancellation()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13843= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:checkVector(FieldVector3D<DerivativeStructure>, double, double, double, double, double, double, double, double, double, double, double, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13844= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testAngularSeparation()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13845= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testDistanceInf()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13846= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testDistanceSq()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13847= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testNormInf()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13848= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:checkVector(FieldVector3D<DerivativeStructure>, double, double, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13849= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testScalarProduct()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13850= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testNormSq()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13851= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testDotProduct()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13852= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:createVector(double, double, double, int)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13853= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testAdd()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13854= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testAngular()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13855= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testWrongDimension()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13856= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testAccurateCrossProduct()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13857= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testAngle()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13858= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testToString()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13859= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:checkVector(FieldVector3D<DerivativeStructure>, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13860= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testNorm()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13861= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testConstructors()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13862= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testEquals()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13863= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testVectorialProducts()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13864= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testAccurateDotProduct()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13865= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testHash()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13866= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testInfinite()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13867= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testCrossProduct()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13868= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testDistance()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13869= org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest:testNegate()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3DTest.java
13870= org.apache.commons.math3.linear.CholeskyDecompositionTest:testDimensions()	/src/test/java/org/apache/commons/math3/linear/CholeskyDecompositionTest.java
13871= org.apache.commons.math3.linear.CholeskyDecompositionTest:testAEqualLLT()	/src/test/java/org/apache/commons/math3/linear/CholeskyDecompositionTest.java
13872= org.apache.commons.math3.linear.CholeskyDecompositionTest:testMatricesValues()	/src/test/java/org/apache/commons/math3/linear/CholeskyDecompositionTest.java
13873= org.apache.commons.math3.linear.CholeskyDecompositionTest:testNonSquare()	/src/test/java/org/apache/commons/math3/linear/CholeskyDecompositionTest.java
13874= org.apache.commons.math3.linear.CholeskyDecompositionTest:testMath274()	/src/test/java/org/apache/commons/math3/linear/CholeskyDecompositionTest.java
13875= org.apache.commons.math3.linear.CholeskyDecompositionTest:testNotPositiveDefinite()	/src/test/java/org/apache/commons/math3/linear/CholeskyDecompositionTest.java
13876= org.apache.commons.math3.linear.CholeskyDecompositionTest:testLLowerTriangular()	/src/test/java/org/apache/commons/math3/linear/CholeskyDecompositionTest.java
13877= org.apache.commons.math3.linear.CholeskyDecompositionTest:testNotSymmetricMatrixException()	/src/test/java/org/apache/commons/math3/linear/CholeskyDecompositionTest.java
13878= org.apache.commons.math3.linear.CholeskyDecompositionTest:testLTTransposed()	/src/test/java/org/apache/commons/math3/linear/CholeskyDecompositionTest.java
13879= org.apache.commons.math3.analysis.function.GaussianTest:testParametricGradient()	/src/test/java/org/apache/commons/math3/analysis/function/GaussianTest.java
13880= org.apache.commons.math3.analysis.function.GaussianTest:testPreconditions()	/src/test/java/org/apache/commons/math3/analysis/function/GaussianTest.java
13881= org.apache.commons.math3.analysis.function.GaussianTest:testDerivativesNaN()	/src/test/java/org/apache/commons/math3/analysis/function/GaussianTest.java
13882= org.apache.commons.math3.analysis.function.GaussianTest:testParametricUsage2()	/src/test/java/org/apache/commons/math3/analysis/function/GaussianTest.java
13883= org.apache.commons.math3.analysis.function.GaussianTest:testSomeValues()	/src/test/java/org/apache/commons/math3/analysis/function/GaussianTest.java
13884= org.apache.commons.math3.analysis.function.GaussianTest:testParametricUsage3()	/src/test/java/org/apache/commons/math3/analysis/function/GaussianTest.java
13885= org.apache.commons.math3.analysis.function.GaussianTest:testParametricUsage1()	/src/test/java/org/apache/commons/math3/analysis/function/GaussianTest.java
13886= org.apache.commons.math3.analysis.function.GaussianTest:testParametricUsage6()	/src/test/java/org/apache/commons/math3/analysis/function/GaussianTest.java
13887= org.apache.commons.math3.analysis.function.GaussianTest:testParametricUsage4()	/src/test/java/org/apache/commons/math3/analysis/function/GaussianTest.java
13888= org.apache.commons.math3.analysis.function.GaussianTest:testParametricUsage5()	/src/test/java/org/apache/commons/math3/analysis/function/GaussianTest.java
13889= org.apache.commons.math3.analysis.function.GaussianTest:testParametricValue()	/src/test/java/org/apache/commons/math3/analysis/function/GaussianTest.java
13890= org.apache.commons.math3.analysis.function.GaussianTest:testLargeArguments()	/src/test/java/org/apache/commons/math3/analysis/function/GaussianTest.java
13891= org.apache.commons.math3.analysis.function.GaussianTest:testDerivativeLargeArguments()	/src/test/java/org/apache/commons/math3/analysis/function/GaussianTest.java
13892= org.apache.commons.math3.analysis.function.GaussianTest:testDerivatives()	/src/test/java/org/apache/commons/math3/analysis/function/GaussianTest.java
13893= org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest:serialization()	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerStepInterpolatorTest.java
13894= org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest:noReset()	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerStepInterpolatorTest.java
13895= org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest:DummyIntegrator(RungeKuttaStepInterpolator)	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerStepInterpolatorTest.java
13896= org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest.DummyIntegrator:DummyIntegrator(RungeKuttaStepInterpolator)	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerStepInterpolatorTest.java
13897= org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest:interpolationInside()	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerStepInterpolatorTest.java
13898= org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest:derivativesConsistency()	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerStepInterpolatorTest.java
13899= org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest:interpolationAtBounds()	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerStepInterpolatorTest.java
13900= org.apache.commons.math3.distribution.LogNormalDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13901= org.apache.commons.math3.distribution.LogNormalDistributionTest:testDensity()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13902= org.apache.commons.math3.distribution.LogNormalDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13903= org.apache.commons.math3.distribution.LogNormalDistributionTest:verifyQuantiles()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13904= org.apache.commons.math3.distribution.LogNormalDistributionTest:makeInverseCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13905= org.apache.commons.math3.distribution.LogNormalDistributionTest:checkDensity(double, double, double[], double[])	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13906= org.apache.commons.math3.distribution.LogNormalDistributionTest:testQuantiles()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13907= org.apache.commons.math3.distribution.LogNormalDistributionTest:testGetShape()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13908= org.apache.commons.math3.distribution.LogNormalDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13909= org.apache.commons.math3.distribution.LogNormalDistributionTest:testInverseCumulativeProbabilityExtremes()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13910= org.apache.commons.math3.distribution.LogNormalDistributionTest:testGetScale()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13911= org.apache.commons.math3.distribution.LogNormalDistributionTest:setUp()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13912= org.apache.commons.math3.distribution.LogNormalDistributionTest:testMeanVariance()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13913= org.apache.commons.math3.distribution.LogNormalDistributionTest:testExtremeValues()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13914= org.apache.commons.math3.distribution.LogNormalDistributionTest:testTinyVariance()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13915= org.apache.commons.math3.distribution.LogNormalDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13916= org.apache.commons.math3.distribution.LogNormalDistributionTest:makeInverseCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13917= org.apache.commons.math3.distribution.LogNormalDistributionTest:testPreconditions()	/src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java
13918= org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest:heresBar()	/src/test/java/org/apache/commons/math3/stat/descriptive/MixedListUnivariateImplTest.java
13919= org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest.FooTransformer:transform(Object)	/src/test/java/org/apache/commons/math3/stat/descriptive/MixedListUnivariateImplTest.java
13920= org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest.Bar:heresBar()	/src/test/java/org/apache/commons/math3/stat/descriptive/MixedListUnivariateImplTest.java
13921= org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest:MixedListUnivariateImplTest()	/src/test/java/org/apache/commons/math3/stat/descriptive/MixedListUnivariateImplTest.java
13922= org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest:testProductAndGeometricMean()	/src/test/java/org/apache/commons/math3/stat/descriptive/MixedListUnivariateImplTest.java
13923= org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest:transform(Object)	/src/test/java/org/apache/commons/math3/stat/descriptive/MixedListUnivariateImplTest.java
13924= org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest:testN0andN1Conditions()	/src/test/java/org/apache/commons/math3/stat/descriptive/MixedListUnivariateImplTest.java
13925= org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest:testStats()	/src/test/java/org/apache/commons/math3/stat/descriptive/MixedListUnivariateImplTest.java
13926= org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest:testSkewAndKurtosis()	/src/test/java/org/apache/commons/math3/stat/descriptive/MixedListUnivariateImplTest.java
13927= org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest.BarTransformer:transform(Object)	/src/test/java/org/apache/commons/math3/stat/descriptive/MixedListUnivariateImplTest.java
13928= org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest:heresFoo()	/src/test/java/org/apache/commons/math3/stat/descriptive/MixedListUnivariateImplTest.java
13929= org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest.Foo:heresFoo()	/src/test/java/org/apache/commons/math3/stat/descriptive/MixedListUnivariateImplTest.java
13930= org.apache.commons.math3.filter.KalmanFilterTest:testTransitionControlMatrixMismatch()	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13931= org.apache.commons.math3.filter.KalmanFilterTest.Cannonball:getYVelocity()	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13932= org.apache.commons.math3.filter.KalmanFilterTest:step()	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13933= org.apache.commons.math3.filter.KalmanFilterTest.Cannonball:getXVelocity()	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13934= org.apache.commons.math3.filter.KalmanFilterTest:getY()	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13935= org.apache.commons.math3.filter.KalmanFilterTest:getX()	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13936= org.apache.commons.math3.filter.KalmanFilterTest:getYVelocity()	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13937= org.apache.commons.math3.filter.KalmanFilterTest:testConstant()	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13938= org.apache.commons.math3.filter.KalmanFilterTest:assertVectorEquals(double[], double[])	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13939= org.apache.commons.math3.filter.KalmanFilterTest:assertMatrixEquals(double[][], double[][])	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13940= org.apache.commons.math3.filter.KalmanFilterTest.Cannonball:getX()	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13941= org.apache.commons.math3.filter.KalmanFilterTest.Cannonball:getY()	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13942= org.apache.commons.math3.filter.KalmanFilterTest.Cannonball:Cannonball(double, double, double)	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13943= org.apache.commons.math3.filter.KalmanFilterTest:testTransitionMeasurementMatrixMismatch()	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13944= org.apache.commons.math3.filter.KalmanFilterTest:Cannonball(double, double, double)	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13945= org.apache.commons.math3.filter.KalmanFilterTest:getXVelocity()	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13946= org.apache.commons.math3.filter.KalmanFilterTest:testConstantAcceleration()	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13947= org.apache.commons.math3.filter.KalmanFilterTest:testCannonball()	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13948= org.apache.commons.math3.filter.KalmanFilterTest.Cannonball:step()	/src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java
13949= org.apache.commons.math3.complex.ComplexFormatTest:getLocale()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatTest.java
13950= org.apache.commons.math3.complex.ComplexFormatTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/complex/ComplexFormatTest.java
13951= org.apache.commons.math3.optimization.general.StraightLineProblem:value(double[])	/src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java
13952= org.apache.commons.math3.optimization.general.StraightLineProblem:addPoint(double, double)	/src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java
13953= org.apache.commons.math3.optimization.general.StraightLineProblem:weight()	/src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java
13954= org.apache.commons.math3.optimization.general.StraightLineProblem:Model(DerivativeStructure, DerivativeStructure)	/src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java
13955= org.apache.commons.math3.optimization.general.StraightLineProblem.Model:Model(DerivativeStructure, DerivativeStructure)	/src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java
13956= org.apache.commons.math3.optimization.general.StraightLineProblem:solve()	/src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java
13957= org.apache.commons.math3.optimization.general.StraightLineProblem:x()	/src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java
13958= org.apache.commons.math3.optimization.general.StraightLineProblem:y()	/src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java
13959= org.apache.commons.math3.optimization.general.StraightLineProblem:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java
13960= org.apache.commons.math3.optimization.general.StraightLineProblem:StraightLineProblem(double)	/src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java
13961= org.apache.commons.math3.optimization.general.StraightLineProblem.Model:value(DerivativeStructure)	/src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java
13962= org.apache.commons.math3.optimization.general.StraightLineProblem:value(double)	/src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java
13963= org.apache.commons.math3.optimization.general.StraightLineProblem.Model:value(double)	/src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java
13964= org.apache.commons.math3.optimization.general.StraightLineProblem:value(DerivativeStructure)	/src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java
13965= org.apache.commons.math3.optimization.general.StraightLineProblem:target()	/src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java
13966= org.apache.commons.math3.linear.FieldLUDecompositionTest:testDimensions()	/src/test/java/org/apache/commons/math3/linear/FieldLUDecompositionTest.java
13967= org.apache.commons.math3.linear.FieldLUDecompositionTest:testPAEqualLU()	/src/test/java/org/apache/commons/math3/linear/FieldLUDecompositionTest.java
13968= org.apache.commons.math3.linear.FieldLUDecompositionTest:testUUpperTriangular()	/src/test/java/org/apache/commons/math3/linear/FieldLUDecompositionTest.java
13969= org.apache.commons.math3.linear.FieldLUDecompositionTest:testLLowerTriangular()	/src/test/java/org/apache/commons/math3/linear/FieldLUDecompositionTest.java
13970= org.apache.commons.math3.linear.FieldLUDecompositionTest:testMatricesValues2()	/src/test/java/org/apache/commons/math3/linear/FieldLUDecompositionTest.java
13971= org.apache.commons.math3.linear.FieldLUDecompositionTest:testMatricesValues1()	/src/test/java/org/apache/commons/math3/linear/FieldLUDecompositionTest.java
13972= org.apache.commons.math3.linear.FieldLUDecompositionTest:testNonSquare()	/src/test/java/org/apache/commons/math3/linear/FieldLUDecompositionTest.java
13973= org.apache.commons.math3.linear.FieldLUDecompositionTest:testPPermutation()	/src/test/java/org/apache/commons/math3/linear/FieldLUDecompositionTest.java
13974= org.apache.commons.math3.linear.FieldLUDecompositionTest:testSingular()	/src/test/java/org/apache/commons/math3/linear/FieldLUDecompositionTest.java
13975= org.apache.commons.math3.analysis.solvers.PegasusSolverTest:getSolver()	/src/test/java/org/apache/commons/math3/analysis/solvers/PegasusSolverTest.java
13976= org.apache.commons.math3.analysis.solvers.PegasusSolverTest:getQuinticEvalCounts()	/src/test/java/org/apache/commons/math3/analysis/solvers/PegasusSolverTest.java
13977= org.apache.commons.math3.ode.events.ReappearingEventTest:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java
13978= org.apache.commons.math3.ode.events.ReappearingEventTest.Event:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java
13979= org.apache.commons.math3.ode.events.ReappearingEventTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java
13980= org.apache.commons.math3.ode.events.ReappearingEventTest.Event:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java
13981= org.apache.commons.math3.ode.events.ReappearingEventTest:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java
13982= org.apache.commons.math3.ode.events.ReappearingEventTest.Event:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java
13983= org.apache.commons.math3.ode.events.ReappearingEventTest.Event:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java
13984= org.apache.commons.math3.ode.events.ReappearingEventTest:testGragg()	/src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java
13985= org.apache.commons.math3.ode.events.ReappearingEventTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java
13986= org.apache.commons.math3.ode.events.ReappearingEventTest.Ode:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java
13987= org.apache.commons.math3.ode.events.ReappearingEventTest:testDormandPrince()	/src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java
13988= org.apache.commons.math3.ode.events.ReappearingEventTest:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java
13989= org.apache.commons.math3.ode.events.ReappearingEventTest.Ode:getDimension()	/src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java
13990= org.apache.commons.math3.ode.events.ReappearingEventTest:test(int)	/src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java
13991= org.apache.commons.math3.ode.events.ReappearingEventTest:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java
13992= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest.FourExtrema:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
13993= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
13994= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest:testPowell()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
13995= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest:getMaximumPosition()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
13996= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest:testMaximize1()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
13997= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest:testMaximize2()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
13998= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest:getMaximum()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
13999= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest.Gaussian2D:getMaximum()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
14000= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest.Gaussian2D:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
14001= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest:Gaussian2D(double, double, double)	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
14002= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest.Gaussian2D:Gaussian2D(double, double, double)	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
14003= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest:testMath283()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
14004= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest:testMinimize1()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
14005= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest.Gaussian2D:getMaximumPosition()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
14006= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest:testMinimize2()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
14007= org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest:testRosenbrock()	/src/test/java/org/apache/commons/math3/optimization/direct/SimplexOptimizerMultiDirectionalTest.java
14008= org.apache.commons.math3.analysis.function.SqrtTest:value(double)	/src/test/java/org/apache/commons/math3/analysis/function/SqrtTest.java
14009= org.apache.commons.math3.analysis.function.SqrtTest:testDerivativesHighOrder()	/src/test/java/org/apache/commons/math3/analysis/function/SqrtTest.java
14010= org.apache.commons.math3.analysis.function.SqrtTest:testComparison()	/src/test/java/org/apache/commons/math3/analysis/function/SqrtTest.java
14011= org.apache.commons.math3.analysis.function.SqrtTest:testDerivativeComparison()	/src/test/java/org/apache/commons/math3/analysis/function/SqrtTest.java
14012= org.apache.commons.math3.distribution.ParetoDistributionTest:makeInverseCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14013= org.apache.commons.math3.distribution.ParetoDistributionTest:testDensity()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14014= org.apache.commons.math3.distribution.ParetoDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14015= org.apache.commons.math3.distribution.ParetoDistributionTest:checkDensity(double, double, double[], double[])	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14016= org.apache.commons.math3.distribution.ParetoDistributionTest:testExtremeValues()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14017= org.apache.commons.math3.distribution.ParetoDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14018= org.apache.commons.math3.distribution.ParetoDistributionTest:testPreconditions()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14019= org.apache.commons.math3.distribution.ParetoDistributionTest:testMeanVariance()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14020= org.apache.commons.math3.distribution.ParetoDistributionTest:makeInverseCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14021= org.apache.commons.math3.distribution.ParetoDistributionTest:testInverseCumulativeProbabilityExtremes()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14022= org.apache.commons.math3.distribution.ParetoDistributionTest:testQuantiles()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14023= org.apache.commons.math3.distribution.ParetoDistributionTest:testGetScale()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14024= org.apache.commons.math3.distribution.ParetoDistributionTest:verifyQuantiles()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14025= org.apache.commons.math3.distribution.ParetoDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14026= org.apache.commons.math3.distribution.ParetoDistributionTest:testGetShape()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14027= org.apache.commons.math3.distribution.ParetoDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14028= org.apache.commons.math3.distribution.ParetoDistributionTest:setUp()	/src/test/java/org/apache/commons/math3/distribution/ParetoDistributionTest.java
14029= org.apache.commons.math3.distribution.PascalDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/PascalDistributionTest.java
14030= org.apache.commons.math3.distribution.PascalDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/PascalDistributionTest.java
14031= org.apache.commons.math3.distribution.PascalDistributionTest:setUp()	/src/test/java/org/apache/commons/math3/distribution/PascalDistributionTest.java
14032= org.apache.commons.math3.distribution.PascalDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/PascalDistributionTest.java
14033= org.apache.commons.math3.distribution.PascalDistributionTest:testDegenerate1()	/src/test/java/org/apache/commons/math3/distribution/PascalDistributionTest.java
14034= org.apache.commons.math3.distribution.PascalDistributionTest:makeInverseCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/PascalDistributionTest.java
14035= org.apache.commons.math3.distribution.PascalDistributionTest:testDegenerate0()	/src/test/java/org/apache/commons/math3/distribution/PascalDistributionTest.java
14036= org.apache.commons.math3.distribution.PascalDistributionTest:makeDensityTestPoints()	/src/test/java/org/apache/commons/math3/distribution/PascalDistributionTest.java
14037= org.apache.commons.math3.distribution.PascalDistributionTest:makeInverseCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/PascalDistributionTest.java
14038= org.apache.commons.math3.distribution.PascalDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/PascalDistributionTest.java
14039= org.apache.commons.math3.distribution.PascalDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/PascalDistributionTest.java
14040= org.apache.commons.math3.util.FastMathStrictComparisonTest:setupMethodCall(Method, Method, Type[], Object[][])	/src/test/java/org/apache/commons/math3/util/FastMathStrictComparisonTest.java
14041= org.apache.commons.math3.util.FastMathStrictComparisonTest:reportFailedResults(Method, Object[], Object, Object, int[])	/src/test/java/org/apache/commons/math3/util/FastMathStrictComparisonTest.java
14042= org.apache.commons.math3.util.FastMathStrictComparisonTest:test1()	/src/test/java/org/apache/commons/math3/util/FastMathStrictComparisonTest.java
14043= org.apache.commons.math3.util.FastMathStrictComparisonTest:isNumber(Double)	/src/test/java/org/apache/commons/math3/util/FastMathStrictComparisonTest.java
14044= org.apache.commons.math3.util.FastMathStrictComparisonTest:data()	/src/test/java/org/apache/commons/math3/util/FastMathStrictComparisonTest.java
14045= org.apache.commons.math3.util.FastMathStrictComparisonTest:FastMathStrictComparisonTest(Method, Method, Type[], Object[][])	/src/test/java/org/apache/commons/math3/util/FastMathStrictComparisonTest.java
14046= org.apache.commons.math3.util.FastMathStrictComparisonTest:isNumber(Float)	/src/test/java/org/apache/commons/math3/util/FastMathStrictComparisonTest.java
14047= org.apache.commons.math3.util.FastMathStrictComparisonTest:callMethods(Method, Method, Object[], int[])	/src/test/java/org/apache/commons/math3/util/FastMathStrictComparisonTest.java
14048= org.apache.commons.math3.genetics.TournamentSelectionTest:DummyChromosome()	/src/test/java/org/apache/commons/math3/genetics/TournamentSelectionTest.java
14049= org.apache.commons.math3.genetics.TournamentSelectionTest:fitness()	/src/test/java/org/apache/commons/math3/genetics/TournamentSelectionTest.java
14050= org.apache.commons.math3.genetics.TournamentSelectionTest:testSelect()	/src/test/java/org/apache/commons/math3/genetics/TournamentSelectionTest.java
14051= org.apache.commons.math3.genetics.TournamentSelectionTest.DummyChromosome:fitness()	/src/test/java/org/apache/commons/math3/genetics/TournamentSelectionTest.java
14052= org.apache.commons.math3.genetics.TournamentSelectionTest.DummyChromosome:DummyChromosome()	/src/test/java/org/apache/commons/math3/genetics/TournamentSelectionTest.java
14053= org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest:testSinFunction()	/src/test/java/org/apache/commons/math3/analysis/integration/SimpsonIntegratorTest.java
14054= org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest:testParameters()	/src/test/java/org/apache/commons/math3/analysis/integration/SimpsonIntegratorTest.java
14055= org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest:testQuinticFunction()	/src/test/java/org/apache/commons/math3/analysis/integration/SimpsonIntegratorTest.java
14056= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:RealMatrixFormatAbstractTest()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14057= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:getLocale()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14058= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testConstructorSingleFormat()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14059= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testForgottenSuffix()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14060= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testNonDefaultSetting()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14061= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testParseSimpleWithDecimalsTrunc()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14062= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testParseNoComponents()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14063= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testParseNegativeInfinity()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14064= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testNegativeSecondRow()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14065= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testPositiveInfinity()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14066= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testParsePositiveInfinity()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14067= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testParseNonDefaultSetting()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14068= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testParseSimpleWithDecimals()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14069= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testForgottenPrefix()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14070= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testSimpleWithDecimals()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14071= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14072= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testSimpleNoDecimals()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14073= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testParseNegativeAll()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14074= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testNan()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14075= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testParseIgnoredWhitespace()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14076= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testParseZeroComponent()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14077= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testParseNan()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14078= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testSimpleWithDecimalsTrunc()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14079= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testParseSimpleNoDecimals()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14080= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testParseNegativeComponent()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14081= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testParseManyComponents()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14082= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:tesNegativeInfinity()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14083= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testForgottenSeparator()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14084= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testDefaultFormat()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14085= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testNegativeComponent()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14086= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testParseSimpleWithClosingRowSeparator()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14087= org.apache.commons.math3.linear.RealMatrixFormatAbstractTest:testNegativeComponent2()	/src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java
14088= org.apache.commons.math3.fitting.GaussianFitterTest:testMath519()	/src/test/java/org/apache/commons/math3/fitting/GaussianFitterTest.java
14089= org.apache.commons.math3.fitting.GaussianFitterTest:testFit07()	/src/test/java/org/apache/commons/math3/fitting/GaussianFitterTest.java
14090= org.apache.commons.math3.fitting.GaussianFitterTest:addDatasetToGaussianFitter(double[][], GaussianFitter)	/src/test/java/org/apache/commons/math3/fitting/GaussianFitterTest.java
14091= org.apache.commons.math3.fitting.GaussianFitterTest:testFit06()	/src/test/java/org/apache/commons/math3/fitting/GaussianFitterTest.java
14092= org.apache.commons.math3.fitting.GaussianFitterTest:testFit05()	/src/test/java/org/apache/commons/math3/fitting/GaussianFitterTest.java
14093= org.apache.commons.math3.fitting.GaussianFitterTest:testFit04()	/src/test/java/org/apache/commons/math3/fitting/GaussianFitterTest.java
14094= org.apache.commons.math3.fitting.GaussianFitterTest:testFit03()	/src/test/java/org/apache/commons/math3/fitting/GaussianFitterTest.java
14095= org.apache.commons.math3.fitting.GaussianFitterTest:testMath798()	/src/test/java/org/apache/commons/math3/fitting/GaussianFitterTest.java
14096= org.apache.commons.math3.fitting.GaussianFitterTest:testFit02()	/src/test/java/org/apache/commons/math3/fitting/GaussianFitterTest.java
14097= org.apache.commons.math3.fitting.GaussianFitterTest:testFit01()	/src/test/java/org/apache/commons/math3/fitting/GaussianFitterTest.java
14098= org.apache.commons.math3.stat.descriptive.rank.MedianTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/MedianTest.java
14099= org.apache.commons.math3.stat.descriptive.rank.MedianTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/MedianTest.java
14100= org.apache.commons.math3.geometry.euclidean.oned.IntervalTest:testInfinite()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java
14101= org.apache.commons.math3.geometry.euclidean.oned.IntervalTest:testInterval()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java
14102= org.apache.commons.math3.geometry.euclidean.oned.IntervalTest:testSinglePoint()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java
14103= org.apache.commons.math3.geometry.euclidean.oned.IntervalTest:testTolerance()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java
14104= org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest:serialization()	/src/test/java/org/apache/commons/math3/ode/nonstiff/MidpointStepInterpolatorTest.java
14105= org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest:testDerivativesConsistency()	/src/test/java/org/apache/commons/math3/ode/nonstiff/MidpointStepInterpolatorTest.java
14106= org.apache.commons.math3.stat.inference.MannWhitneyUTestTest:testMannWhitneyUInputValidation()	/src/test/java/org/apache/commons/math3/stat/inference/MannWhitneyUTestTest.java
14107= org.apache.commons.math3.stat.inference.MannWhitneyUTestTest:testBigDataSet()	/src/test/java/org/apache/commons/math3/stat/inference/MannWhitneyUTestTest.java
14108= org.apache.commons.math3.stat.inference.MannWhitneyUTestTest:testMannWhitneyUSimple()	/src/test/java/org/apache/commons/math3/stat/inference/MannWhitneyUTestTest.java
14109= org.apache.commons.math3.dfp.DfpTest:testLog10K()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14110= org.apache.commons.math3.dfp.DfpTest:test(Dfp, Dfp, int, String)	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14111= org.apache.commons.math3.dfp.DfpTest:testCompare()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14112= org.apache.commons.math3.dfp.DfpTest:testByteConstructor()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14113= org.apache.commons.math3.dfp.DfpTest:testPower10K()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14114= org.apache.commons.math3.dfp.DfpTest:testPower10()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14115= org.apache.commons.math3.dfp.DfpTest:testToString()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14116= org.apache.commons.math3.dfp.DfpTest:tearDown()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14117= org.apache.commons.math3.dfp.DfpTest:testIntConstructor()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14118= org.apache.commons.math3.dfp.DfpTest:testRint()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14119= org.apache.commons.math3.dfp.DfpTest:testRemainder()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14120= org.apache.commons.math3.dfp.DfpTest:testLongConstructor()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14121= org.apache.commons.math3.dfp.DfpTest:testCeil()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14122= org.apache.commons.math3.dfp.DfpTest:testReciprocal()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14123= org.apache.commons.math3.dfp.DfpTest:testSpecialConstructors()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14124= org.apache.commons.math3.dfp.DfpTest:testDivide()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14125= org.apache.commons.math3.dfp.DfpTest:testSqrt()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14126= org.apache.commons.math3.dfp.DfpTest:testIsZero()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14127= org.apache.commons.math3.dfp.DfpTest:testLog10()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14128= org.apache.commons.math3.dfp.DfpTest:testSignPredicates()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14129= org.apache.commons.math3.dfp.DfpTest:testIssue567()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14130= org.apache.commons.math3.dfp.DfpTest:testMultiply()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14131= org.apache.commons.math3.dfp.DfpTest:cmptst(Dfp, Dfp, String, boolean, double)	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14132= org.apache.commons.math3.dfp.DfpTest:build(double)	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14133= org.apache.commons.math3.dfp.DfpTest:testAdd()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14134= org.apache.commons.math3.dfp.DfpTest:testNextAfter()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14135= org.apache.commons.math3.dfp.DfpTest:setUp()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14136= org.apache.commons.math3.dfp.DfpTest:testDivideInt()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14137= org.apache.commons.math3.dfp.DfpTest:testIntValue()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14138= org.apache.commons.math3.dfp.DfpTest:testRound()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14139= org.apache.commons.math3.dfp.DfpTest:testCopySign()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14140= org.apache.commons.math3.dfp.DfpTest:testFloor()	/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
14141= org.apache.commons.math3.transform.FastCosineTransformerTest:FastCosineTransformerTest(DctNormalization)	/src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java
14142= org.apache.commons.math3.transform.FastCosineTransformerTest:testAdHocData()	/src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java
14143= org.apache.commons.math3.transform.FastCosineTransformerTest:data()	/src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java
14144= org.apache.commons.math3.transform.FastCosineTransformerTest:createRealTransformer()	/src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java
14145= org.apache.commons.math3.transform.FastCosineTransformerTest:transform(double[], TransformType)	/src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java
14146= org.apache.commons.math3.transform.FastCosineTransformerTest:testSinFunction()	/src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java
14147= org.apache.commons.math3.transform.FastCosineTransformerTest:getValidDataSize(int)	/src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java
14148= org.apache.commons.math3.transform.FastCosineTransformerTest:testParameters()	/src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java
14149= org.apache.commons.math3.transform.FastCosineTransformerTest:getNumberOfInvalidDataSizes()	/src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java
14150= org.apache.commons.math3.transform.FastCosineTransformerTest:getRelativeTolerance(int)	/src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java
14151= org.apache.commons.math3.transform.FastCosineTransformerTest:getInvalidDataSize(int)	/src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java
14152= org.apache.commons.math3.transform.FastCosineTransformerTest:getValidLowerBound()	/src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java
14153= org.apache.commons.math3.transform.FastCosineTransformerTest:getValidFunction()	/src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java
14154= org.apache.commons.math3.transform.FastCosineTransformerTest:getValidUpperBound()	/src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java
14155= org.apache.commons.math3.transform.FastCosineTransformerTest:getNumberOfValidDataSizes()	/src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java
14156= org.apache.commons.math3.linear.SymmLQTest:saundersTest(int, boolean, boolean, double, double)	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14157= org.apache.commons.math3.linear.SymmLQTest:iterationStarted(IterationEvent)	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14158= org.apache.commons.math3.linear.SymmLQTest:testUnpreconditionedSolutionWithInitialGuess()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14159= org.apache.commons.math3.linear.SymmLQTest:testUnpreconditionedNormOfResidual()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14160= org.apache.commons.math3.linear.SymmLQTest:testMismatchedOperatorDimensions()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14161= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders20()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14162= org.apache.commons.math3.linear.SymmLQTest:testNonPositiveDefinitePreconditioner()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14163= org.apache.commons.math3.linear.SymmLQTest:testDimensionMismatchRightHandSide()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14164= org.apache.commons.math3.linear.SymmLQTest:testNonSquarePreconditioner()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14165= org.apache.commons.math3.linear.SymmLQTest:testPreconditionedSolution()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14166= org.apache.commons.math3.linear.SymmLQTest:testNonSquareOperator()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14167= org.apache.commons.math3.linear.SymmLQTest:testNonSelfAdjointOperator()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14168= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders15()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14169= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders16()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14170= org.apache.commons.math3.linear.SymmLQTest:testNonSelfAdjointPreconditioner()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14171= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders17()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14172= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders18()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14173= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders19()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14174= org.apache.commons.math3.linear.SymmLQTest:initializationPerformed(IterationEvent)	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14175= org.apache.commons.math3.linear.SymmLQTest:operate(RealVector)	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14176= org.apache.commons.math3.linear.SymmLQTest:getColumnDimension()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14177= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders1()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14178= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders10()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14179= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders11()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14180= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders12()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14181= org.apache.commons.math3.linear.SymmLQTest:testDimensionMismatchSolution()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14182= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders13()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14183= org.apache.commons.math3.linear.SymmLQTest:testPreconditionedNormOfResidual()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14184= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders14()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14185= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders7()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14186= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders6()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14187= org.apache.commons.math3.linear.SymmLQTest:testUnpreconditionedSolution()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14188= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders9()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14189= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders8()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14190= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders3()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14191= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders2()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14192= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders5()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14193= org.apache.commons.math3.linear.SymmLQTest:testSolveSaunders4()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14194= org.apache.commons.math3.linear.SymmLQTest:testUnpreconditionedInPlaceSolutionWithInitialGuess()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14195= org.apache.commons.math3.linear.SymmLQTest:testPreconditionedSolution2()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14196= org.apache.commons.math3.linear.SymmLQTest:getRowDimension()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14197= org.apache.commons.math3.linear.SymmLQTest:iterationPerformed(IterationEvent)	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14198= org.apache.commons.math3.linear.SymmLQTest:doTestNormOfResidual(IterationEvent)	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14199= org.apache.commons.math3.linear.SymmLQTest:testEventManagement()	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14200= org.apache.commons.math3.linear.SymmLQTest:terminationPerformed(IterationEvent)	/src/test/java/org/apache/commons/math3/linear/SymmLQTest.java
14201= org.apache.commons.math3.util.DefaultTransformerTest:testSerial()	/src/test/java/org/apache/commons/math3/util/DefaultTransformerTest.java
14202= org.apache.commons.math3.util.DefaultTransformerTest:testTransformInteger()	/src/test/java/org/apache/commons/math3/util/DefaultTransformerTest.java
14203= org.apache.commons.math3.util.DefaultTransformerTest:testTransformString()	/src/test/java/org/apache/commons/math3/util/DefaultTransformerTest.java
14204= org.apache.commons.math3.util.DefaultTransformerTest:testTransformObject()	/src/test/java/org/apache/commons/math3/util/DefaultTransformerTest.java
14205= org.apache.commons.math3.util.DefaultTransformerTest:testTransformBigDecimal()	/src/test/java/org/apache/commons/math3/util/DefaultTransformerTest.java
14206= org.apache.commons.math3.util.DefaultTransformerTest:testTransformDouble()	/src/test/java/org/apache/commons/math3/util/DefaultTransformerTest.java
14207= org.apache.commons.math3.util.DefaultTransformerTest:testTransformNull()	/src/test/java/org/apache/commons/math3/util/DefaultTransformerTest.java
14208= org.apache.commons.math3.complex.QuaternionTest:testNormalize()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14209= org.apache.commons.math3.complex.QuaternionTest:testAddQuaternionQuaternion()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14210= org.apache.commons.math3.complex.QuaternionTest:testIsPureQuaternion()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14211= org.apache.commons.math3.complex.QuaternionTest:testProductQuaternionQuaternion()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14212= org.apache.commons.math3.complex.QuaternionTest:testIsUnitQuaternion()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14213= org.apache.commons.math3.complex.QuaternionTest:testQuaternionEquals2()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14214= org.apache.commons.math3.complex.QuaternionTest:testProductQuaternionVector()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14215= org.apache.commons.math3.complex.QuaternionTest:testWrongDimension()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14216= org.apache.commons.math3.complex.QuaternionTest:testSubtractQuaternionQuaternion()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14217= org.apache.commons.math3.complex.QuaternionTest:testNormalizeFail()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14218= org.apache.commons.math3.complex.QuaternionTest:testGetInverse()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14219= org.apache.commons.math3.complex.QuaternionTest:testAccessors3()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14220= org.apache.commons.math3.complex.QuaternionTest:testAccessors2()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14221= org.apache.commons.math3.complex.QuaternionTest:testObjectEquals()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14222= org.apache.commons.math3.complex.QuaternionTest:testAccessors1()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14223= org.apache.commons.math3.complex.QuaternionTest:testDotProductQuaternionQuaternion()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14224= org.apache.commons.math3.complex.QuaternionTest:testPolarForm()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14225= org.apache.commons.math3.complex.QuaternionTest:testNorm()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14226= org.apache.commons.math3.complex.QuaternionTest:testToString()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14227= org.apache.commons.math3.complex.QuaternionTest:testQuaternionEquals()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14228= org.apache.commons.math3.complex.QuaternionTest:testConjugate()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14229= org.apache.commons.math3.complex.QuaternionTest:testScalarMultiplyDouble()	/src/test/java/org/apache/commons/math3/complex/QuaternionTest.java
14230= org.apache.commons.math3.analysis.integration.RombergIntegratorTest:testParameters()	/src/test/java/org/apache/commons/math3/analysis/integration/RombergIntegratorTest.java
14231= org.apache.commons.math3.analysis.integration.RombergIntegratorTest:testSinFunction()	/src/test/java/org/apache/commons/math3/analysis/integration/RombergIntegratorTest.java
14232= org.apache.commons.math3.analysis.integration.RombergIntegratorTest:testQuinticFunction()	/src/test/java/org/apache/commons/math3/analysis/integration/RombergIntegratorTest.java
14233= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest:testMaxIterationsPositive()	/src/test/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximizationTest.java
14234= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest:testMultipleColumnsRequired()	/src/test/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximizationTest.java
14235= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest:testConvergenceException()	/src/test/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximizationTest.java
14236= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest:testFit()	/src/test/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximizationTest.java
14237= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest:testNonJaggedData()	/src/test/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximizationTest.java
14238= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest:testNonEmptyData()	/src/test/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximizationTest.java
14239= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest:testInitialMixture()	/src/test/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximizationTest.java
14240= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest:testThresholdPositive()	/src/test/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximizationTest.java
14241= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest:getTestSamples()	/src/test/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximizationTest.java
14242= org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest:testIncompatibleIntialMixture()	/src/test/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximizationTest.java
14243= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest.DiceDistribution:DiceDistribution()	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14244= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest:testCumulativeProbabilitiesSingleArguments()	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14245= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest.DiceDistribution:cumulativeProbability(int)	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14246= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest.DiceDistribution:getSupportUpperBound()	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14247= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest:DiceDistribution()	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14248= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest.DiceDistribution:getSupportLowerBound()	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14249= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest.DiceDistribution:getNumericalVariance()	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14250= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest:testCumulativeProbabilitiesRangeArguments()	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14251= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest.DiceDistribution:isSupportConnected()	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14252= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest.DiceDistribution:getNumericalMean()	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14253= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest:probability(int)	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14254= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest:getNumericalVariance()	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14255= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest:cumulativeProbability(int)	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14256= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest:isSupportConnected()	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14257= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest.DiceDistribution:probability(int)	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14258= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest:getNumericalMean()	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14259= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest:getSupportUpperBound()	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14260= org.apache.commons.math3.distribution.AbstractIntegerDistributionTest:getSupportLowerBound()	/src/test/java/org/apache/commons/math3/distribution/AbstractIntegerDistributionTest.java
14261= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest:testHalfBounded()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14262= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest.BiQuadratic:getLower()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14263= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest:testOptimumOutsideRange()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14264= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest.BiQuadratic:getBoundedXOptimum()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14265= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest:BiQuadratic(double, double, double, double, double, double)	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14266= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest.BiQuadratic:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14267= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest:getBoundedYOptimum()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14268= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest:getLower()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14269= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest:value(double[])	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14270= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest.BiQuadratic:getBoundedYOptimum()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14271= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest.BiQuadratic:BiQuadratic(double, double, double, double, double, double)	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14272= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest:testUnbounded()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14273= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest:getUpper()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14274= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest:getBoundedXOptimum()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14275= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest.BiQuadratic:getUpper()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14276= org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest:testStartSimplexInsideRange()	/src/test/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapterTest.java
14277= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:createAngle(double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14278= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testQuaternion()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14279= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testAngles()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14280= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testIssue801()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14281= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:createAxis(double, double, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14282= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:createVector(double, double, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14283= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testRevert()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14284= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testVectorOnePair()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14285= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testDerivatives()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14286= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testIssue639()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14287= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testApplyInverseTo()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14288= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testIdentity()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14289= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testDoubleVectors()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14290= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testCompose()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14291= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:checkAngle(DerivativeStructure, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14292= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testDoubleRotations()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14293= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:createRotation(double[][], double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14294= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testVectorTwoPairs()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14295= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testArray()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14296= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:createRotation(double, double, double, double, boolean)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14297= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:checkVector(FieldVector3D<DerivativeStructure>, FieldVector3D<DerivativeStructure>)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14298= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testSingularities()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14299= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testAxisAngle()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14300= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testComposeInverse()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14301= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:testMatrix()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14302= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest:checkRotationDS(FieldRotation<DerivativeStructure>, double, double, double, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDSTest.java
14303= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetSubVectorInvalidIndex3()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14304= org.apache.commons.math3.linear.RealVectorAbstractTest:testMapSubtract()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14305= org.apache.commons.math3.linear.RealVectorAbstractTest:testOuterProductMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14306= org.apache.commons.math3.linear.RealVectorAbstractTest.RealVectorTestImpl:ebeDivide(RealVector)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14307= org.apache.commons.math3.linear.RealVectorAbstractTest:testWalkInOptimizedOrderPreservingVisitor1()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14308= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetL1Norm()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14309= org.apache.commons.math3.linear.RealVectorAbstractTest:testCombineToSelfMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14310= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestUnitVector(boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14311= org.apache.commons.math3.linear.RealVectorAbstractTest:RealVectorTestImpl(double[])	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14312= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestGetLInfDistance(boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14313= org.apache.commons.math3.linear.RealVectorAbstractTest:testToArray()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14314= org.apache.commons.math3.linear.RealVectorAbstractTest:testOuterProductSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14315= org.apache.commons.math3.linear.RealVectorAbstractTest:testUnitize()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14316= org.apache.commons.math3.linear.RealVectorAbstractTest:testIsInfinite()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14317= org.apache.commons.math3.linear.RealVectorAbstractTest:testCosineSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14318= org.apache.commons.math3.linear.RealVectorAbstractTest:testMap()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14319= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestMapFunction(UnivariateFunction, boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14320= org.apache.commons.math3.linear.RealVectorAbstractTest:testEbeDivideDimensionMismatch()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14321= org.apache.commons.math3.linear.RealVectorAbstractTest:testCombineSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14322= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestDotProductSpecialValues(boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14323= org.apache.commons.math3.linear.RealVectorAbstractTest:testEbeMultiplySameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14324= org.apache.commons.math3.linear.RealVectorAbstractTest:testSubtractSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14325= org.apache.commons.math3.linear.RealVectorAbstractTest:testWalkInOptimizedOrderChangingVisitor1()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14326= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestCosine(boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14327= org.apache.commons.math3.linear.RealVectorAbstractTest:testSetEntryInvalidIndex2()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14328= org.apache.commons.math3.linear.RealVectorAbstractTest:testWalkInDefaultOrderPreservingVisitor1()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14329= org.apache.commons.math3.linear.RealVectorAbstractTest:setEntry(int, double)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14330= org.apache.commons.math3.linear.RealVectorAbstractTest:testCombineToSelfDimensionMismatchMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14331= org.apache.commons.math3.linear.RealVectorAbstractTest:testMapSubtractToSelf()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14332= org.apache.commons.math3.linear.RealVectorAbstractTest:ebeDivide(RealVector)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14333= org.apache.commons.math3.linear.RealVectorAbstractTest:testProjectionDimensionMismatch()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14334= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetDistanceMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14335= org.apache.commons.math3.linear.RealVectorAbstractTest:testCombineDimensionMismatchMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14336= org.apache.commons.math3.linear.RealVectorAbstractTest:visit(int, double)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14337= org.apache.commons.math3.linear.RealVectorAbstractTest:testWalkInDefaultOrderChangingVisitor3()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14338= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetL1DistanceSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14339= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetSubVectorInvalidIndex4()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14340= org.apache.commons.math3.linear.RealVectorAbstractTest:createFunctions()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14341= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetSubVector()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14342= org.apache.commons.math3.linear.RealVectorAbstractTest:testSetSubVectorInvalidIndex1()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14343= org.apache.commons.math3.linear.RealVectorAbstractTest:isNaN()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14344= org.apache.commons.math3.linear.RealVectorAbstractTest:RealVectorAbstractTest()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14345= org.apache.commons.math3.linear.RealVectorAbstractTest:testSetSubVectorSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14346= org.apache.commons.math3.linear.RealVectorAbstractTest:end()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14347= org.apache.commons.math3.linear.RealVectorAbstractTest.RealVectorTestImpl:setEntry(int, double)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14348= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestOuterProduct(boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14349= org.apache.commons.math3.linear.RealVectorAbstractTest:testCosineRightNullVector()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14350= org.apache.commons.math3.linear.RealVectorAbstractTest:append(double)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14351= org.apache.commons.math3.linear.RealVectorAbstractTest.RealVectorTestImpl:isNaN()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14352= org.apache.commons.math3.linear.RealVectorAbstractTest:testSet()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14353= org.apache.commons.math3.linear.RealVectorAbstractTest.RealVectorTestImpl:unsupported()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14354= org.apache.commons.math3.linear.RealVectorAbstractTest:testSubtractDimensionMismatch()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14355= org.apache.commons.math3.linear.RealVectorAbstractTest:testDotProductDimensionMismatchMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14356= org.apache.commons.math3.linear.RealVectorAbstractTest:testMapAdd()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14357= org.apache.commons.math3.linear.RealVectorAbstractTest.RealVectorTestImpl:ebeMultiply(RealVector)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14358= org.apache.commons.math3.linear.RealVectorAbstractTest:testMinMax()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14359= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestAppendScalar(String, RealVector, double, double)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14360= org.apache.commons.math3.linear.RealVectorAbstractTest:testAddDimensionMismatch()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14361= org.apache.commons.math3.linear.RealVectorAbstractTest:isInfinite()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14362= org.apache.commons.math3.linear.RealVectorAbstractTest:testWalkInOptimizedOrderPreservingVisitor2()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14363= org.apache.commons.math3.linear.RealVectorAbstractTest:testEbeMultiplyMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14364= org.apache.commons.math3.linear.RealVectorAbstractTest:testEquals()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14365= org.apache.commons.math3.linear.RealVectorAbstractTest:testUnitizeNullVector()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14366= org.apache.commons.math3.linear.RealVectorAbstractTest:testSetSubVectorMixedType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14367= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetLInfDistanceDimensionMismatch()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14368= org.apache.commons.math3.linear.RealVectorAbstractTest:testIsNaN()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14369= org.apache.commons.math3.linear.RealVectorAbstractTest:testProjectionNullVector()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14370= org.apache.commons.math3.linear.RealVectorAbstractTest:testSetEntry()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14371= org.apache.commons.math3.linear.RealVectorAbstractTest:testSerial()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14372= org.apache.commons.math3.linear.RealVectorAbstractTest:testSetEntryInvalidIndex1()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14373= org.apache.commons.math3.linear.RealVectorAbstractTest.RealVectorTestImpl:RealVectorTestImpl(double[])	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14374= org.apache.commons.math3.linear.RealVectorAbstractTest:testMapMultiplyToSelf()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14375= org.apache.commons.math3.linear.RealVectorAbstractTest:testIterator()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14376= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestDotProductDimensionMismatch(boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14377= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetDimension()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14378= org.apache.commons.math3.linear.RealVectorAbstractTest:ebeMultiply(RealVector)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14379= org.apache.commons.math3.linear.RealVectorAbstractTest.RealVectorTestImpl:setSubVector(int, RealVector)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14380= org.apache.commons.math3.linear.RealVectorAbstractTest:testEbeDivideMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14381= org.apache.commons.math3.linear.RealVectorAbstractTest:testCombineMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14382= org.apache.commons.math3.linear.RealVectorAbstractTest:testWalkInDefaultOrderChangingVisitor2()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14383= org.apache.commons.math3.linear.RealVectorAbstractTest:testAddMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14384= org.apache.commons.math3.linear.RealVectorAbstractTest:start(int, int, int)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14385= org.apache.commons.math3.linear.RealVectorAbstractTest:getDimension()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14386= org.apache.commons.math3.linear.RealVectorAbstractTest:testDotProductDimensionMismatchSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14387= org.apache.commons.math3.linear.RealVectorAbstractTest:getEntry(int)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14388= org.apache.commons.math3.linear.RealVectorAbstractTest:testProjectionMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14389= org.apache.commons.math3.linear.RealVectorAbstractTest:testMapDivideToSelf()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14390= org.apache.commons.math3.linear.RealVectorAbstractTest:testAddToEntryInvalidIndex2()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14391= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestCombineDimensionMismatch(boolean, boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14392= org.apache.commons.math3.linear.RealVectorAbstractTest:testSetSubVectorInvalidIndex2()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14393= org.apache.commons.math3.linear.RealVectorAbstractTest:testMapMultiply()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14394= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetSubVectorInvalidIndex1()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14395= org.apache.commons.math3.linear.RealVectorAbstractTest:testProjectionSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14396= org.apache.commons.math3.linear.RealVectorAbstractTest:testMapDivide()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14397= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetLInfNorm()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14398= org.apache.commons.math3.linear.RealVectorAbstractTest:getSubVector(int, int)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14399= org.apache.commons.math3.linear.RealVectorAbstractTest.RealVectorTestImpl:isInfinite()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14400= org.apache.commons.math3.linear.RealVectorAbstractTest:testAddSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14401= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestCombine(boolean, boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14402= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestDotProductRegularValues(boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14403= org.apache.commons.math3.linear.RealVectorAbstractTest:setSubVector(int, RealVector)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14404= org.apache.commons.math3.linear.RealVectorAbstractTest:testUnitVectorNullVector()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14405= org.apache.commons.math3.linear.RealVectorAbstractTest.RealVectorTestImpl:append(RealVector)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14406= org.apache.commons.math3.linear.RealVectorAbstractTest:testCombineToSelfSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14407= org.apache.commons.math3.linear.RealVectorAbstractTest:testAddToEntry()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14408= org.apache.commons.math3.linear.RealVectorAbstractTest:testWalkInOptimizedOrderPreservingVisitor3()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14409= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetEntry()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14410= org.apache.commons.math3.linear.RealVectorAbstractTest:testMapToSelf()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14411= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetEntryInvalidIndex1()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14412= org.apache.commons.math3.linear.RealVectorAbstractTest:testWalkInOptimizedOrderChangingVisitor3()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14413= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetLInfDistanceSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14414= org.apache.commons.math3.linear.RealVectorAbstractTest:testWalkInDefaultOrderPreservingVisitor3()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14415= org.apache.commons.math3.linear.RealVectorAbstractTest:create(double[])	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14416= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestAppendVector(String, RealVector, RealVector, double)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14417= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetNorm()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14418= org.apache.commons.math3.linear.RealVectorAbstractTest:copy()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14419= org.apache.commons.math3.linear.RealVectorAbstractTest.RealVectorTestImpl:getSubVector(int, int)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14420= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetDistanceDimensionMismatch()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14421= org.apache.commons.math3.linear.RealVectorAbstractTest:createAlien(double[])	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14422= org.apache.commons.math3.linear.RealVectorAbstractTest:testCopy()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14423= org.apache.commons.math3.linear.RealVectorAbstractTest:testWalkInDefaultOrderChangingVisitor1()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14424= org.apache.commons.math3.linear.RealVectorAbstractTest:append(RealVector)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14425= org.apache.commons.math3.linear.RealVectorAbstractTest:testAppendVector()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14426= org.apache.commons.math3.linear.RealVectorAbstractTest:testUnitVector()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14427= org.apache.commons.math3.linear.RealVectorAbstractTest:testEbeDivideSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14428= org.apache.commons.math3.linear.RealVectorAbstractTest:testAddToEntryInvalidIndex1()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14429= org.apache.commons.math3.linear.RealVectorAbstractTest:testMapAddToSelf()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14430= org.apache.commons.math3.linear.RealVectorAbstractTest:unsupported()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14431= org.apache.commons.math3.linear.RealVectorAbstractTest:testCombineDimensionMismatchSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14432= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetSubVectorInvalidIndex2()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14433= org.apache.commons.math3.linear.RealVectorAbstractTest:testSetSubVectorInvalidIndex3()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14434= org.apache.commons.math3.linear.RealVectorAbstractTest:testSubtractMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14435= org.apache.commons.math3.linear.RealVectorAbstractTest:testCosineMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14436= org.apache.commons.math3.linear.RealVectorAbstractTest:testEbeMultiplyDimensionMismatch()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14437= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetLInfDistanceMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14438= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestEbeBinaryOperationDimensionMismatch(BinaryOperation)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14439= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestUnitVectorNullVector(boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14440= org.apache.commons.math3.linear.RealVectorAbstractTest:testDotProductMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14441= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetL1DistanceMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14442= org.apache.commons.math3.linear.RealVectorAbstractTest.RealVectorTestImpl:getEntry(int)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14443= org.apache.commons.math3.linear.RealVectorAbstractTest:getPreferredEntryValue()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14444= org.apache.commons.math3.linear.RealVectorAbstractTest:testDotProductSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14445= org.apache.commons.math3.linear.RealVectorAbstractTest:testAppendScalar()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14446= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestGetDistance(boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14447= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestGetL1Distance(boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14448= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetL1DistanceDimensionMismatch()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14449= org.apache.commons.math3.linear.RealVectorAbstractTest.RealVectorTestImpl:getDimension()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14450= org.apache.commons.math3.linear.RealVectorAbstractTest:testWalkInOptimizedOrderChangingVisitor2()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14451= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetEntryInvalidIndex2()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14452= org.apache.commons.math3.linear.RealVectorAbstractTest.RealVectorTestImpl:copy()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14453= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestEbeBinaryOperation(BinaryOperation, boolean, boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14454= org.apache.commons.math3.linear.RealVectorAbstractTest:testWalkInDefaultOrderPreservingVisitor2()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14455= org.apache.commons.math3.linear.RealVectorAbstractTest:testCombineToSelfDimensionMismatchSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14456= org.apache.commons.math3.linear.RealVectorAbstractTest:testGetDistanceSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14457= org.apache.commons.math3.linear.RealVectorAbstractTest:testCosineLeftNullVector()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14458= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestProjection(boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14459= org.apache.commons.math3.linear.RealVectorAbstractTest:doTestMapBinaryOperation(BinaryOperation, boolean)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14460= org.apache.commons.math3.linear.RealVectorAbstractTest:testCosineDimensionMismatch()	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14461= org.apache.commons.math3.linear.RealVectorAbstractTest.RealVectorTestImpl:append(double)	/src/test/java/org/apache/commons/math3/linear/RealVectorAbstractTest.java
14462= org.apache.commons.math3.ode.events.OverlappingEventsTest.Event:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java
14463= org.apache.commons.math3.ode.events.OverlappingEventsTest:testOverlappingEvents1()	/src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java
14464= org.apache.commons.math3.ode.events.OverlappingEventsTest.Event:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java
14465= org.apache.commons.math3.ode.events.OverlappingEventsTest.Event:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java
14466= org.apache.commons.math3.ode.events.OverlappingEventsTest:Event(int, int)	/src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java
14467= org.apache.commons.math3.ode.events.OverlappingEventsTest:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java
14468= org.apache.commons.math3.ode.events.OverlappingEventsTest.Event:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java
14469= org.apache.commons.math3.ode.events.OverlappingEventsTest:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java
14470= org.apache.commons.math3.ode.events.OverlappingEventsTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java
14471= org.apache.commons.math3.ode.events.OverlappingEventsTest:testOverlappingEvents0()	/src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java
14472= org.apache.commons.math3.ode.events.OverlappingEventsTest:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java
14473= org.apache.commons.math3.ode.events.OverlappingEventsTest:test(int)	/src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java
14474= org.apache.commons.math3.ode.events.OverlappingEventsTest:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java
14475= org.apache.commons.math3.ode.events.OverlappingEventsTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java
14476= org.apache.commons.math3.ode.events.OverlappingEventsTest.Event:Event(int, int)	/src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java
14477= org.apache.commons.math3.optimization.general.CircleVectorial:getRadius(DerivativeStructure, DerivativeStructure)	/src/test/java/org/apache/commons/math3/optimization/general/CircleVectorial.java
14478= org.apache.commons.math3.optimization.general.CircleVectorial:value(double[])	/src/test/java/org/apache/commons/math3/optimization/general/CircleVectorial.java
14479= org.apache.commons.math3.optimization.general.CircleVectorial:CircleVectorial()	/src/test/java/org/apache/commons/math3/optimization/general/CircleVectorial.java
14480= org.apache.commons.math3.optimization.general.CircleVectorial:getN()	/src/test/java/org/apache/commons/math3/optimization/general/CircleVectorial.java
14481= org.apache.commons.math3.optimization.general.CircleVectorial:addPoint(double, double)	/src/test/java/org/apache/commons/math3/optimization/general/CircleVectorial.java
14482= org.apache.commons.math3.optimization.general.CircleVectorial:distance(Vector2D, DerivativeStructure, DerivativeStructure)	/src/test/java/org/apache/commons/math3/optimization/general/CircleVectorial.java
14483= org.apache.commons.math3.optimization.general.CircleVectorial:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/general/CircleVectorial.java
14484= org.apache.commons.math3.optimization.general.CircleVectorial:getRadius(Vector2D)	/src/test/java/org/apache/commons/math3/optimization/general/CircleVectorial.java
14485= org.apache.commons.math3.analysis.function.LogisticTest:testGradientComponent1Component2Component3()	/src/test/java/org/apache/commons/math3/analysis/function/LogisticTest.java
14486= org.apache.commons.math3.analysis.function.LogisticTest:testSomeValues()	/src/test/java/org/apache/commons/math3/analysis/function/LogisticTest.java
14487= org.apache.commons.math3.analysis.function.LogisticTest:testGradientComponent0Component4()	/src/test/java/org/apache/commons/math3/analysis/function/LogisticTest.java
14488= org.apache.commons.math3.analysis.function.LogisticTest:testCompareDerivativeSigmoid()	/src/test/java/org/apache/commons/math3/analysis/function/LogisticTest.java
14489= org.apache.commons.math3.analysis.function.LogisticTest:testParametricUsage6()	/src/test/java/org/apache/commons/math3/analysis/function/LogisticTest.java
14490= org.apache.commons.math3.analysis.function.LogisticTest:testParametricUsage5()	/src/test/java/org/apache/commons/math3/analysis/function/LogisticTest.java
14491= org.apache.commons.math3.analysis.function.LogisticTest:testParametricUsage4()	/src/test/java/org/apache/commons/math3/analysis/function/LogisticTest.java
14492= org.apache.commons.math3.analysis.function.LogisticTest:testParametricUsage3()	/src/test/java/org/apache/commons/math3/analysis/function/LogisticTest.java
14493= org.apache.commons.math3.analysis.function.LogisticTest:testParametricUsage2()	/src/test/java/org/apache/commons/math3/analysis/function/LogisticTest.java
14494= org.apache.commons.math3.analysis.function.LogisticTest:testParametricUsage1()	/src/test/java/org/apache/commons/math3/analysis/function/LogisticTest.java
14495= org.apache.commons.math3.analysis.function.LogisticTest:testPreconditions2()	/src/test/java/org/apache/commons/math3/analysis/function/LogisticTest.java
14496= org.apache.commons.math3.analysis.function.LogisticTest:testPreconditions1()	/src/test/java/org/apache/commons/math3/analysis/function/LogisticTest.java
14497= org.apache.commons.math3.analysis.function.LogisticTest:testCompareSigmoid()	/src/test/java/org/apache/commons/math3/analysis/function/LogisticTest.java
14498= org.apache.commons.math3.analysis.function.LogisticTest:testGradientComponent5()	/src/test/java/org/apache/commons/math3/analysis/function/LogisticTest.java
14499= org.apache.commons.math3.genetics.FixedGenerationCountTest:getPopulationLimit()	/src/test/java/org/apache/commons/math3/genetics/FixedGenerationCountTest.java
14500= org.apache.commons.math3.genetics.FixedGenerationCountTest:iterator()	/src/test/java/org/apache/commons/math3/genetics/FixedGenerationCountTest.java
14501= org.apache.commons.math3.genetics.FixedGenerationCountTest:testIsSatisfied()	/src/test/java/org/apache/commons/math3/genetics/FixedGenerationCountTest.java
14502= org.apache.commons.math3.genetics.FixedGenerationCountTest:getFittestChromosome()	/src/test/java/org/apache/commons/math3/genetics/FixedGenerationCountTest.java
14503= org.apache.commons.math3.genetics.FixedGenerationCountTest:addChromosome(Chromosome)	/src/test/java/org/apache/commons/math3/genetics/FixedGenerationCountTest.java
14504= org.apache.commons.math3.genetics.FixedGenerationCountTest:getPopulationSize()	/src/test/java/org/apache/commons/math3/genetics/FixedGenerationCountTest.java
14505= org.apache.commons.math3.genetics.FixedGenerationCountTest:nextGeneration()	/src/test/java/org/apache/commons/math3/genetics/FixedGenerationCountTest.java
14506= org.apache.commons.math3.dfp.Decimal10:newInstance(Dfp)	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14507= org.apache.commons.math3.dfp.Decimal10:newInstance()	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14508= org.apache.commons.math3.dfp.Decimal10:newInstance(long)	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14509= org.apache.commons.math3.dfp.Decimal10:Decimal10(DfpField, int)	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14510= org.apache.commons.math3.dfp.Decimal10:Decimal10(DfpField, String)	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14511= org.apache.commons.math3.dfp.Decimal10:Decimal10(DfpField, long)	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14512= org.apache.commons.math3.dfp.Decimal10:Decimal10(Dfp)	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14513= org.apache.commons.math3.dfp.Decimal10:newInstance(byte, byte)	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14514= org.apache.commons.math3.dfp.Decimal10:newInstance(double)	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14515= org.apache.commons.math3.dfp.Decimal10:Decimal10(DfpField)	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14516= org.apache.commons.math3.dfp.Decimal10:Decimal10(DfpField, double)	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14517= org.apache.commons.math3.dfp.Decimal10:newInstance(byte)	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14518= org.apache.commons.math3.dfp.Decimal10:newInstance(int)	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14519= org.apache.commons.math3.dfp.Decimal10:newInstance(String)	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14520= org.apache.commons.math3.dfp.Decimal10:Decimal10(DfpField, byte, byte)	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14521= org.apache.commons.math3.dfp.Decimal10:getDecimalDigits()	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14522= org.apache.commons.math3.dfp.Decimal10:Decimal10(DfpField, byte)	/src/test/java/org/apache/commons/math3/dfp/Decimal10.java
14523= org.apache.commons.math3.analysis.SumSincFunction:value(double[])	/src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java
14524= org.apache.commons.math3.analysis.SumSincFunction:SumSincFunction(double)	/src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java
14525= org.apache.commons.math3.fitting.CurveFitterTest:value(double, double)	/src/test/java/org/apache/commons/math3/fitting/CurveFitterTest.java
14526= org.apache.commons.math3.fitting.CurveFitterTest:gradient(double, double)	/src/test/java/org/apache/commons/math3/fitting/CurveFitterTest.java
14527= org.apache.commons.math3.fitting.CurveFitterTest.SimpleInverseFunction:gradient(double, double)	/src/test/java/org/apache/commons/math3/fitting/CurveFitterTest.java
14528= org.apache.commons.math3.fitting.CurveFitterTest.SimpleInverseFunction:value(double, double)	/src/test/java/org/apache/commons/math3/fitting/CurveFitterTest.java
14529= org.apache.commons.math3.fitting.CurveFitterTest:testMath304()	/src/test/java/org/apache/commons/math3/fitting/CurveFitterTest.java
14530= org.apache.commons.math3.fitting.CurveFitterTest:testMath303()	/src/test/java/org/apache/commons/math3/fitting/CurveFitterTest.java
14531= org.apache.commons.math3.fitting.CurveFitterTest:testMath372()	/src/test/java/org/apache/commons/math3/fitting/CurveFitterTest.java
14532= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatTest.java
14533= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatTest:getLocale()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatTest.java
14534= org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerIntegratorTest.java
14535= org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest:testSmallStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerIntegratorTest.java
14536= org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest:testBigStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerIntegratorTest.java
14537= org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerIntegratorTest.java
14538= org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerIntegratorTest.java
14539= org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest:testDecreasingSteps()	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerIntegratorTest.java
14540= org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest:testStepSize()	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerIntegratorTest.java
14541= org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest:testDimensionCheck()	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerIntegratorTest.java
14542= org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest:testBackward()	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerIntegratorTest.java
14543= org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/EulerIntegratorTest.java
14544= org.apache.commons.math3.util.MultidimensionalCounterTest:testPreconditions()	/src/test/java/org/apache/commons/math3/util/MultidimensionalCounterTest.java
14545= org.apache.commons.math3.util.MultidimensionalCounterTest:testAccessors()	/src/test/java/org/apache/commons/math3/util/MultidimensionalCounterTest.java
14546= org.apache.commons.math3.util.MultidimensionalCounterTest:testIterationConsistency()	/src/test/java/org/apache/commons/math3/util/MultidimensionalCounterTest.java
14547= org.apache.commons.math3.util.MultidimensionalCounterTest:testIteratorNoMoreElements()	/src/test/java/org/apache/commons/math3/util/MultidimensionalCounterTest.java
14548= org.apache.commons.math3.util.MultidimensionalCounterTest:testMulti2UniConversion()	/src/test/java/org/apache/commons/math3/util/MultidimensionalCounterTest.java
14549= org.apache.commons.math3.util.MultidimensionalCounterTest:testIteratorPreconditions()	/src/test/java/org/apache/commons/math3/util/MultidimensionalCounterTest.java
14550= org.apache.commons.math3.util.MultidimensionalCounterTest:testIterator()	/src/test/java/org/apache/commons/math3/util/MultidimensionalCounterTest.java
14551= org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest:testCos()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionTest.java
14552= org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest:testInverse()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionTest.java
14553= org.apache.commons.math3.stat.inference.BinomialTestTest:testBinomialTestPValues()	/src/test/java/org/apache/commons/math3/stat/inference/BinomialTestTest.java
14554= org.apache.commons.math3.stat.inference.BinomialTestTest:testBinomialTestExceptions()	/src/test/java/org/apache/commons/math3/stat/inference/BinomialTestTest.java
14555= org.apache.commons.math3.stat.inference.BinomialTestTest:testBinomialTestAcceptReject()	/src/test/java/org/apache/commons/math3/stat/inference/BinomialTestTest.java
14556= org.apache.commons.math3.linear.MatrixUtilsTest:testCreateColumnFieldMatrix()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14557= org.apache.commons.math3.linear.MatrixUtilsTest:testInverseRealMatrix()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14558= org.apache.commons.math3.linear.MatrixUtilsTest:testBigFractionConverter()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14559= org.apache.commons.math3.linear.MatrixUtilsTest:testcreateFieldIdentityMatrix()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14560= org.apache.commons.math3.linear.MatrixUtilsTest:testSolveUpperTriangularSystem()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14561= org.apache.commons.math3.linear.MatrixUtilsTest:testInverseDiagonalMatrix()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14562= org.apache.commons.math3.linear.MatrixUtilsTest:testCreateColumnRealMatrix()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14563= org.apache.commons.math3.linear.MatrixUtilsTest:asFraction(double[])	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14564= org.apache.commons.math3.linear.MatrixUtilsTest:testCreateRealMatrix()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14565= org.apache.commons.math3.linear.MatrixUtilsTest:testInverseNonSquare()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14566= org.apache.commons.math3.linear.MatrixUtilsTest:checkIdentityFieldMatrix(FieldMatrix<Fraction>)	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14567= org.apache.commons.math3.linear.MatrixUtilsTest:testCreateRowFieldMatrix()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14568= org.apache.commons.math3.linear.MatrixUtilsTest:testBlockInverseNonInvertible()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14569= org.apache.commons.math3.linear.MatrixUtilsTest:testCheckSymmetric2()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14570= org.apache.commons.math3.linear.MatrixUtilsTest:testCreateRowRealMatrix()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14571= org.apache.commons.math3.linear.MatrixUtilsTest:testBlockInverse()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14572= org.apache.commons.math3.linear.MatrixUtilsTest:checkIdentityMatrix(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14573= org.apache.commons.math3.linear.MatrixUtilsTest:testCreateIdentityMatrix()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14574= org.apache.commons.math3.linear.MatrixUtilsTest:testIsSymmetric()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14575= org.apache.commons.math3.linear.MatrixUtilsTest:testFractionConverter()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14576= org.apache.commons.math3.linear.MatrixUtilsTest:testInverseSingular()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14577= org.apache.commons.math3.linear.MatrixUtilsTest:testcreateFieldMatrix()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14578= org.apache.commons.math3.linear.MatrixUtilsTest:asFraction(double[][])	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14579= org.apache.commons.math3.linear.MatrixUtilsTest:testSolveLowerTriangularSystem()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14580= org.apache.commons.math3.linear.MatrixUtilsTest:testCheckSymmetric1()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14581= org.apache.commons.math3.linear.MatrixUtilsTest:testIsSymmetricTolerance()	/src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java
14582= org.apache.commons.math3.linear.FieldLUSolverTest:testSingular()	/src/test/java/org/apache/commons/math3/linear/FieldLUSolverTest.java
14583= org.apache.commons.math3.linear.FieldLUSolverTest:testDeterminant()	/src/test/java/org/apache/commons/math3/linear/FieldLUSolverTest.java
14584= org.apache.commons.math3.linear.FieldLUSolverTest:createFractionMatrix(int[][])	/src/test/java/org/apache/commons/math3/linear/FieldLUSolverTest.java
14585= org.apache.commons.math3.linear.FieldLUSolverTest:testSolveDimensionErrors()	/src/test/java/org/apache/commons/math3/linear/FieldLUSolverTest.java
14586= org.apache.commons.math3.linear.FieldLUSolverTest:getDeterminant(FieldMatrix<Fraction>)	/src/test/java/org/apache/commons/math3/linear/FieldLUSolverTest.java
14587= org.apache.commons.math3.linear.FieldLUSolverTest:testSolveSingularityErrors()	/src/test/java/org/apache/commons/math3/linear/FieldLUSolverTest.java
14588= org.apache.commons.math3.linear.FieldLUSolverTest:testSolve()	/src/test/java/org/apache/commons/math3/linear/FieldLUSolverTest.java
14589= org.apache.commons.math3.complex.RootsOfUnityTest:testZeroNumberOfRoots()	/src/test/java/org/apache/commons/math3/complex/RootsOfUnityTest.java
14590= org.apache.commons.math3.complex.RootsOfUnityTest:testMathIllegalState2()	/src/test/java/org/apache/commons/math3/complex/RootsOfUnityTest.java
14591= org.apache.commons.math3.complex.RootsOfUnityTest:testMathIllegalState3()	/src/test/java/org/apache/commons/math3/complex/RootsOfUnityTest.java
14592= org.apache.commons.math3.complex.RootsOfUnityTest:doTestComputeRoots(RootsOfUnity)	/src/test/java/org/apache/commons/math3/complex/RootsOfUnityTest.java
14593= org.apache.commons.math3.complex.RootsOfUnityTest:testGetNumberOfRoots()	/src/test/java/org/apache/commons/math3/complex/RootsOfUnityTest.java
14594= org.apache.commons.math3.complex.RootsOfUnityTest:testMathIllegalState1()	/src/test/java/org/apache/commons/math3/complex/RootsOfUnityTest.java
14595= org.apache.commons.math3.complex.RootsOfUnityTest:testComputeRoots()	/src/test/java/org/apache/commons/math3/complex/RootsOfUnityTest.java
14596= org.apache.commons.math3.distribution.UniformIntegerDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/UniformIntegerDistributionTest.java
14597= org.apache.commons.math3.distribution.UniformIntegerDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/UniformIntegerDistributionTest.java
14598= org.apache.commons.math3.distribution.UniformIntegerDistributionTest:setUp()	/src/test/java/org/apache/commons/math3/distribution/UniformIntegerDistributionTest.java
14599= org.apache.commons.math3.distribution.UniformIntegerDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/UniformIntegerDistributionTest.java
14600= org.apache.commons.math3.distribution.UniformIntegerDistributionTest:makeInverseCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/UniformIntegerDistributionTest.java
14601= org.apache.commons.math3.distribution.UniformIntegerDistributionTest:makeInverseCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/UniformIntegerDistributionTest.java
14602= org.apache.commons.math3.distribution.UniformIntegerDistributionTest:makeDensityTestPoints()	/src/test/java/org/apache/commons/math3/distribution/UniformIntegerDistributionTest.java
14603= org.apache.commons.math3.distribution.UniformIntegerDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/UniformIntegerDistributionTest.java
14604= org.apache.commons.math3.distribution.UniformIntegerDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/UniformIntegerDistributionTest.java
14605= org.apache.commons.math3.transform.FastHadamardTransformerTest:checkIntTransform(int[], int[])	/src/test/java/org/apache/commons/math3/transform/FastHadamardTransformerTest.java
14606= org.apache.commons.math3.transform.FastHadamardTransformerTest:checkInverseDoubleTransform(int[], int[])	/src/test/java/org/apache/commons/math3/transform/FastHadamardTransformerTest.java
14607= org.apache.commons.math3.transform.FastHadamardTransformerTest:test8Points()	/src/test/java/org/apache/commons/math3/transform/FastHadamardTransformerTest.java
14608= org.apache.commons.math3.transform.FastHadamardTransformerTest:test4Points()	/src/test/java/org/apache/commons/math3/transform/FastHadamardTransformerTest.java
14609= org.apache.commons.math3.transform.FastHadamardTransformerTest:testNoIntInverse()	/src/test/java/org/apache/commons/math3/transform/FastHadamardTransformerTest.java
14610= org.apache.commons.math3.transform.FastHadamardTransformerTest:checkDoubleTransform(int[], int[])	/src/test/java/org/apache/commons/math3/transform/FastHadamardTransformerTest.java
14611= org.apache.commons.math3.transform.FastHadamardTransformerTest:test3Points()	/src/test/java/org/apache/commons/math3/transform/FastHadamardTransformerTest.java
14612= org.apache.commons.math3.transform.FastHadamardTransformerTest:checkAllTransforms(int[], int[])	/src/test/java/org/apache/commons/math3/transform/FastHadamardTransformerTest.java
14613= org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest:testIterationCheckPrecondition()	/src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java
14614= org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest:testIterationCheck()	/src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java
14615= org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest:testIterationCheckDisabled()	/src/test/java/org/apache/commons/math3/optimization/SimpleVectorValueCheckerTest.java
14616= org.apache.commons.math3.ode.events.EventStateTest.ResettingEvent:ResettingEvent(double)	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14617= org.apache.commons.math3.ode.events.EventStateTest:testIssue695()	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14618= org.apache.commons.math3.ode.events.EventStateTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14619= org.apache.commons.math3.ode.events.EventStateTest.ResettingEvent:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14620= org.apache.commons.math3.ode.events.EventStateTest:closeEvents()	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14621= org.apache.commons.math3.ode.events.EventStateTest.SecondaryStateEvent:SecondaryStateEvent(int, double)	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14622= org.apache.commons.math3.ode.events.EventStateTest:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14623= org.apache.commons.math3.ode.events.EventStateTest.SecondaryStateEvent:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14624= org.apache.commons.math3.ode.events.EventStateTest.ResettingEvent:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14625= org.apache.commons.math3.ode.events.EventStateTest:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14626= org.apache.commons.math3.ode.events.EventStateTest.SecondaryStateEvent:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14627= org.apache.commons.math3.ode.events.EventStateTest:computeDerivatives(double, double[], double[], double[], double[])	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14628= org.apache.commons.math3.ode.events.EventStateTest.SecondaryStateEvent:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14629= org.apache.commons.math3.ode.events.EventStateTest.ResettingEvent:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14630= org.apache.commons.math3.ode.events.EventStateTest:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14631= org.apache.commons.math3.ode.events.EventStateTest.SecondaryStateEvent:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14632= org.apache.commons.math3.ode.events.EventStateTest:testIssue965()	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14633= org.apache.commons.math3.ode.events.EventStateTest:ResettingEvent(double)	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14634= org.apache.commons.math3.ode.events.EventStateTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14635= org.apache.commons.math3.ode.events.EventStateTest:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14636= org.apache.commons.math3.ode.events.EventStateTest:SecondaryStateEvent(int, double)	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14637= org.apache.commons.math3.ode.events.EventStateTest.ResettingEvent:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java
14638= org.apache.commons.math3.analysis.function.SigmoidTest:testDerivativeLargeArguments()	/src/test/java/org/apache/commons/math3/analysis/function/SigmoidTest.java
14639= org.apache.commons.math3.analysis.function.SigmoidTest:testDerivative()	/src/test/java/org/apache/commons/math3/analysis/function/SigmoidTest.java
14640= org.apache.commons.math3.analysis.function.SigmoidTest:testSomeValues()	/src/test/java/org/apache/commons/math3/analysis/function/SigmoidTest.java
14641= org.apache.commons.math3.analysis.function.SigmoidTest:testParametricUsage3()	/src/test/java/org/apache/commons/math3/analysis/function/SigmoidTest.java
14642= org.apache.commons.math3.analysis.function.SigmoidTest:testParametricUsage4()	/src/test/java/org/apache/commons/math3/analysis/function/SigmoidTest.java
14643= org.apache.commons.math3.analysis.function.SigmoidTest:testDerivativesHighOrder()	/src/test/java/org/apache/commons/math3/analysis/function/SigmoidTest.java
14644= org.apache.commons.math3.analysis.function.SigmoidTest:testParametricUsage1()	/src/test/java/org/apache/commons/math3/analysis/function/SigmoidTest.java
14645= org.apache.commons.math3.analysis.function.SigmoidTest:testParametricUsage2()	/src/test/java/org/apache/commons/math3/analysis/function/SigmoidTest.java
14646= org.apache.commons.math3.analysis.function.SigmoidTest:testParametricValue()	/src/test/java/org/apache/commons/math3/analysis/function/SigmoidTest.java
14647= org.apache.commons.math3.dfp.DfpDecTest:testRoundDecimal10()	/src/test/java/org/apache/commons/math3/dfp/DfpDecTest.java
14648= org.apache.commons.math3.dfp.DfpDecTest:tearDown()	/src/test/java/org/apache/commons/math3/dfp/DfpDecTest.java
14649= org.apache.commons.math3.dfp.DfpDecTest:test(Dfp, Dfp, int, String)	/src/test/java/org/apache/commons/math3/dfp/DfpDecTest.java
14650= org.apache.commons.math3.dfp.DfpDecTest:testNextAfter()	/src/test/java/org/apache/commons/math3/dfp/DfpDecTest.java
14651= org.apache.commons.math3.dfp.DfpDecTest:testRound()	/src/test/java/org/apache/commons/math3/dfp/DfpDecTest.java
14652= org.apache.commons.math3.dfp.DfpDecTest:setUp()	/src/test/java/org/apache/commons/math3/dfp/DfpDecTest.java
14653= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation:testParametersErrorMonteCarloParameters()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTestValidation.java
14654= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation:testParametersErrorMonteCarloObservations()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTestValidation.java
14655= org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation:getChi2N(AbstractLeastSquaresOptimizer, StraightLineProblem, double[])	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTestValidation.java
14656= org.apache.commons.math3.optimization.general.DummyOptimizer:DummyOptimizer()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTestValidation.java
14657= org.apache.commons.math3.optimization.general.DummyOptimizer:doOptimize()	/src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTestValidation.java
14658= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest:testTetrahedron()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSetTest.java
14659= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest:testIssue780()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSetTest.java
14660= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest:visitInternalNode(BSPTree<Euclidean3D>)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSetTest.java
14661= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest:testTooThinBox()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSetTest.java
14662= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest:testIsometry()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSetTest.java
14663= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest:testCross()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSetTest.java
14664= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest:testBuildBox()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSetTest.java
14665= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest:checkFacet(SubPlane)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSetTest.java
14666= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest:visitOrder(BSPTree<Euclidean3D>)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSetTest.java
14667= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest:checkPoints(Region.Location, PolyhedronsSet, Vector3D[])	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSetTest.java
14668= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest:visitLeafNode(BSPTree<Euclidean3D>)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSetTest.java
14669= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest:testBox()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSetTest.java
14670= org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest:testWrongUsage()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSetTest.java
14671= org.apache.commons.math3.stat.descriptive.rank.MaxTest:testNaNs()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/MaxTest.java
14672= org.apache.commons.math3.stat.descriptive.rank.MaxTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/MaxTest.java
14673= org.apache.commons.math3.stat.descriptive.rank.MaxTest:testSpecialValues()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/MaxTest.java
14674= org.apache.commons.math3.stat.descriptive.rank.MaxTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/MaxTest.java
14675= org.apache.commons.math3.util.BigRealTest:testDoubleValue()	/src/test/java/org/apache/commons/math3/util/BigRealTest.java
14676= org.apache.commons.math3.util.BigRealTest:testSerial()	/src/test/java/org/apache/commons/math3/util/BigRealTest.java
14677= org.apache.commons.math3.util.BigRealTest:testAdd()	/src/test/java/org/apache/commons/math3/util/BigRealTest.java
14678= org.apache.commons.math3.util.BigRealTest:testNegate()	/src/test/java/org/apache/commons/math3/util/BigRealTest.java
14679= org.apache.commons.math3.util.BigRealTest:testReciprocal()	/src/test/java/org/apache/commons/math3/util/BigRealTest.java
14680= org.apache.commons.math3.util.BigRealTest:testBigDecimalValue()	/src/test/java/org/apache/commons/math3/util/BigRealTest.java
14681= org.apache.commons.math3.util.BigRealTest:testEqualsAndHashCode()	/src/test/java/org/apache/commons/math3/util/BigRealTest.java
14682= org.apache.commons.math3.util.BigRealTest:testDivisionByZero()	/src/test/java/org/apache/commons/math3/util/BigRealTest.java
14683= org.apache.commons.math3.util.BigRealTest:testConstructor()	/src/test/java/org/apache/commons/math3/util/BigRealTest.java
14684= org.apache.commons.math3.util.BigRealTest:testCompareTo()	/src/test/java/org/apache/commons/math3/util/BigRealTest.java
14685= org.apache.commons.math3.util.BigRealTest:testSubtract()	/src/test/java/org/apache/commons/math3/util/BigRealTest.java
14686= org.apache.commons.math3.util.BigRealTest:testDivide()	/src/test/java/org/apache/commons/math3/util/BigRealTest.java
14687= org.apache.commons.math3.util.BigRealTest:testReciprocalOfZero()	/src/test/java/org/apache/commons/math3/util/BigRealTest.java
14688= org.apache.commons.math3.util.BigRealTest:testMultiply()	/src/test/java/org/apache/commons/math3/util/BigRealTest.java
14689= org.apache.commons.math3.genetics.DummyBinaryChromosome:DummyBinaryChromosome(Integer[])	/src/test/java/org/apache/commons/math3/genetics/DummyBinaryChromosome.java
14690= org.apache.commons.math3.genetics.DummyBinaryChromosome:fitness()	/src/test/java/org/apache/commons/math3/genetics/DummyBinaryChromosome.java
14691= org.apache.commons.math3.genetics.DummyBinaryChromosome:DummyBinaryChromosome(List<Integer>)	/src/test/java/org/apache/commons/math3/genetics/DummyBinaryChromosome.java
14692= org.apache.commons.math3.genetics.DummyBinaryChromosome:newFixedLengthChromosome(List<Integer>)	/src/test/java/org/apache/commons/math3/genetics/DummyBinaryChromosome.java
14693= org.apache.commons.math3.stat.inference.ChiSquareTestTest:testChiSquareLargeTestStatistic()	/src/test/java/org/apache/commons/math3/stat/inference/ChiSquareTestTest.java
14694= org.apache.commons.math3.stat.inference.ChiSquareTestTest:testChiSquareDataSetsComparisonEqualCounts()	/src/test/java/org/apache/commons/math3/stat/inference/ChiSquareTestTest.java
14695= org.apache.commons.math3.stat.inference.ChiSquareTestTest:testChiSquareIndependence()	/src/test/java/org/apache/commons/math3/stat/inference/ChiSquareTestTest.java
14696= org.apache.commons.math3.stat.inference.ChiSquareTestTest:testChiSquareDataSetsComparisonBadCounts()	/src/test/java/org/apache/commons/math3/stat/inference/ChiSquareTestTest.java
14697= org.apache.commons.math3.stat.inference.ChiSquareTestTest:testChiSquareZeroCount()	/src/test/java/org/apache/commons/math3/stat/inference/ChiSquareTestTest.java
14698= org.apache.commons.math3.stat.inference.ChiSquareTestTest:testChiSquare()	/src/test/java/org/apache/commons/math3/stat/inference/ChiSquareTestTest.java
14699= org.apache.commons.math3.stat.inference.ChiSquareTestTest:testChiSquareDataSetsComparisonUnEqualCounts()	/src/test/java/org/apache/commons/math3/stat/inference/ChiSquareTestTest.java
14700= org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest:testWave()	/src/test/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatorTest.java
14701= org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest:testPreconditions()	/src/test/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatorTest.java
14702= org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest:testPlane()	/src/test/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatorTest.java
14703= org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest:value(double, double, double)	/src/test/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatorTest.java
14704= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest:testInterval()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSetTest.java
14705= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest:testSinglePoint()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSetTest.java
14706= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest:testInfinite()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSetTest.java
14707= org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest:testMultiple()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSetTest.java
14708= org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest:checkClone()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54StepInterpolatorTest.java
14709= org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54StepInterpolatorTest.java
14710= org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54StepInterpolatorTest.java
14711= org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest:derivativesConsistency()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54StepInterpolatorTest.java
14712= org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest:serialization()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54StepInterpolatorTest.java
14713= org.apache.commons.math3.distribution.UniformRealDistributionTest:testGetLowerBound()	/src/test/java/org/apache/commons/math3/distribution/UniformRealDistributionTest.java
14714= org.apache.commons.math3.distribution.UniformRealDistributionTest:testGetUpperBound()	/src/test/java/org/apache/commons/math3/distribution/UniformRealDistributionTest.java
14715= org.apache.commons.math3.distribution.UniformRealDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/UniformRealDistributionTest.java
14716= org.apache.commons.math3.distribution.UniformRealDistributionTest:setUp()	/src/test/java/org/apache/commons/math3/distribution/UniformRealDistributionTest.java
14717= org.apache.commons.math3.distribution.UniformRealDistributionTest:testMeanVariance()	/src/test/java/org/apache/commons/math3/distribution/UniformRealDistributionTest.java
14718= org.apache.commons.math3.distribution.UniformRealDistributionTest:testInverseCumulativeDistribution()	/src/test/java/org/apache/commons/math3/distribution/UniformRealDistributionTest.java
14719= org.apache.commons.math3.distribution.UniformRealDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/UniformRealDistributionTest.java
14720= org.apache.commons.math3.distribution.UniformRealDistributionTest:testPreconditions1()	/src/test/java/org/apache/commons/math3/distribution/UniformRealDistributionTest.java
14721= org.apache.commons.math3.distribution.UniformRealDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/UniformRealDistributionTest.java
14722= org.apache.commons.math3.distribution.UniformRealDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/UniformRealDistributionTest.java
14723= org.apache.commons.math3.distribution.UniformRealDistributionTest:testPreconditions2()	/src/test/java/org/apache/commons/math3/distribution/UniformRealDistributionTest.java
14724= org.apache.commons.math3.exception.DimensionMismatchExceptionTest:testAccessors()	/src/test/java/org/apache/commons/math3/exception/DimensionMismatchExceptionTest.java
14725= org.apache.commons.math3.ode.TestProblem5:copy()	/src/test/java/org/apache/commons/math3/ode/TestProblem5.java
14726= org.apache.commons.math3.ode.TestProblem5:TestProblem5()	/src/test/java/org/apache/commons/math3/ode/TestProblem5.java
14727= org.apache.commons.math3.analysis.integration.gauss.LegendreTest:testCos()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/LegendreTest.java
14728= org.apache.commons.math3.analysis.integration.gauss.LegendreTest:testInverse()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/LegendreTest.java
14729= org.apache.commons.math3.complex.ComplexUtilsTest:testPolar2ComplexNaN()	/src/test/java/org/apache/commons/math3/complex/ComplexUtilsTest.java
14730= org.apache.commons.math3.complex.ComplexUtilsTest:testPolar2ComplexIllegalModulus()	/src/test/java/org/apache/commons/math3/complex/ComplexUtilsTest.java
14731= org.apache.commons.math3.complex.ComplexUtilsTest:testConvertToComplex()	/src/test/java/org/apache/commons/math3/complex/ComplexUtilsTest.java
14732= org.apache.commons.math3.complex.ComplexUtilsTest:altPolar(double, double)	/src/test/java/org/apache/commons/math3/complex/ComplexUtilsTest.java
14733= org.apache.commons.math3.complex.ComplexUtilsTest:testPolar2Complex()	/src/test/java/org/apache/commons/math3/complex/ComplexUtilsTest.java
14734= org.apache.commons.math3.complex.ComplexUtilsTest:testPolar2ComplexInf()	/src/test/java/org/apache/commons/math3/complex/ComplexUtilsTest.java
14735= org.apache.commons.math3.genetics.FitnessCachingTest.DummyCountingBinaryChromosome:DummyCountingBinaryChromosome(List<Integer>)	/src/test/java/org/apache/commons/math3/genetics/FitnessCachingTest.java
14736= org.apache.commons.math3.genetics.FitnessCachingTest:testFitnessCaching()	/src/test/java/org/apache/commons/math3/genetics/FitnessCachingTest.java
14737= org.apache.commons.math3.genetics.FitnessCachingTest:randomPopulation()	/src/test/java/org/apache/commons/math3/genetics/FitnessCachingTest.java
14738= org.apache.commons.math3.genetics.FitnessCachingTest:DummyCountingBinaryChromosome(List<Integer>)	/src/test/java/org/apache/commons/math3/genetics/FitnessCachingTest.java
14739= org.apache.commons.math3.genetics.FitnessCachingTest:fitness()	/src/test/java/org/apache/commons/math3/genetics/FitnessCachingTest.java
14740= org.apache.commons.math3.genetics.FitnessCachingTest.DummyCountingBinaryChromosome:fitness()	/src/test/java/org/apache/commons/math3/genetics/FitnessCachingTest.java
14741= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testDoubleVectors()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14742= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testApplyInverseTo()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14743= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:createRotation(double[][], double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14744= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testAngles()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14745= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:checkAngle(Dfp, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14746= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testQuaternion()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14747= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:createVector(double, double, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14748= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testVectorOnePair()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14749= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testComposeInverse()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14750= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testArray()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14751= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:createAngle(double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14752= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testIssue639()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14753= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:checkRotationDS(FieldRotation<Dfp>, double, double, double, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14754= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testDoubleRotations()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14755= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:checkVector(FieldVector3D<Dfp>, FieldVector3D<Dfp>)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14756= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testIssue801()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14757= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testMatrix()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14758= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:createAxis(double, double, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14759= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testAxisAngle()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14760= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testRevert()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14761= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testCompose()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14762= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:createRotation(double, double, double, double, boolean)	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14763= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testIdentity()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14764= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testSingularities()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14765= org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest:testVectorTwoPairs()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotationDfpTest.java
14766= org.apache.commons.math3.fitting.PolynomialCurveFitterTest:testNoError()	/src/test/java/org/apache/commons/math3/fitting/PolynomialCurveFitterTest.java
14767= org.apache.commons.math3.fitting.PolynomialCurveFitterTest:testFit()	/src/test/java/org/apache/commons/math3/fitting/PolynomialCurveFitterTest.java
14768= org.apache.commons.math3.fitting.PolynomialCurveFitterTest:testSmallError()	/src/test/java/org/apache/commons/math3/fitting/PolynomialCurveFitterTest.java
14769= org.apache.commons.math3.fitting.PolynomialCurveFitterTest:testLargeSample()	/src/test/java/org/apache/commons/math3/fitting/PolynomialCurveFitterTest.java
14770= org.apache.commons.math3.fitting.PolynomialCurveFitterTest:buildRandomPolynomial(int, Random)	/src/test/java/org/apache/commons/math3/fitting/PolynomialCurveFitterTest.java
14771= org.apache.commons.math3.fitting.PolynomialCurveFitterTest:testRedundantSolvable()	/src/test/java/org/apache/commons/math3/fitting/PolynomialCurveFitterTest.java
14772= org.apache.commons.math3.fitting.PolynomialCurveFitterTest:checkUnsolvableProblem(boolean)	/src/test/java/org/apache/commons/math3/fitting/PolynomialCurveFitterTest.java
14773= org.apache.commons.math3.stat.descriptive.rank.MinTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/MinTest.java
14774= org.apache.commons.math3.stat.descriptive.rank.MinTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/MinTest.java
14775= org.apache.commons.math3.stat.descriptive.rank.MinTest:testNaNs()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/MinTest.java
14776= org.apache.commons.math3.stat.descriptive.rank.MinTest:testSpecialValues()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/MinTest.java
14777= org.apache.commons.math3.analysis.function.HarmonicOscillatorTest:testParametricUsage3()	/src/test/java/org/apache/commons/math3/analysis/function/HarmonicOscillatorTest.java
14778= org.apache.commons.math3.analysis.function.HarmonicOscillatorTest:testParametricUsage2()	/src/test/java/org/apache/commons/math3/analysis/function/HarmonicOscillatorTest.java
14779= org.apache.commons.math3.analysis.function.HarmonicOscillatorTest:testParametricUsage4()	/src/test/java/org/apache/commons/math3/analysis/function/HarmonicOscillatorTest.java
14780= org.apache.commons.math3.analysis.function.HarmonicOscillatorTest:testParametricValue()	/src/test/java/org/apache/commons/math3/analysis/function/HarmonicOscillatorTest.java
14781= org.apache.commons.math3.analysis.function.HarmonicOscillatorTest:testParametricUsage1()	/src/test/java/org/apache/commons/math3/analysis/function/HarmonicOscillatorTest.java
14782= org.apache.commons.math3.analysis.function.HarmonicOscillatorTest:testSomeValues()	/src/test/java/org/apache/commons/math3/analysis/function/HarmonicOscillatorTest.java
14783= org.apache.commons.math3.analysis.function.HarmonicOscillatorTest:testParametricGradient()	/src/test/java/org/apache/commons/math3/analysis/function/HarmonicOscillatorTest.java
14784= org.apache.commons.math3.analysis.function.HarmonicOscillatorTest:testDerivative()	/src/test/java/org/apache/commons/math3/analysis/function/HarmonicOscillatorTest.java
14785= org.apache.commons.math3.linear.HessenbergTransformerTest:testNonSquare()	/src/test/java/org/apache/commons/math3/linear/HessenbergTransformerTest.java
14786= org.apache.commons.math3.linear.HessenbergTransformerTest:testRandomData()	/src/test/java/org/apache/commons/math3/linear/HessenbergTransformerTest.java
14787= org.apache.commons.math3.linear.HessenbergTransformerTest:checkMatricesValues(double[][], double[][], double[][])	/src/test/java/org/apache/commons/math3/linear/HessenbergTransformerTest.java
14788= org.apache.commons.math3.linear.HessenbergTransformerTest:testPTOrthogonal()	/src/test/java/org/apache/commons/math3/linear/HessenbergTransformerTest.java
14789= org.apache.commons.math3.linear.HessenbergTransformerTest:checkOrthogonal(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/HessenbergTransformerTest.java
14790= org.apache.commons.math3.linear.HessenbergTransformerTest:testMatricesValues5()	/src/test/java/org/apache/commons/math3/linear/HessenbergTransformerTest.java
14791= org.apache.commons.math3.linear.HessenbergTransformerTest:testPOrthogonal()	/src/test/java/org/apache/commons/math3/linear/HessenbergTransformerTest.java
14792= org.apache.commons.math3.linear.HessenbergTransformerTest:testHessenbergForm()	/src/test/java/org/apache/commons/math3/linear/HessenbergTransformerTest.java
14793= org.apache.commons.math3.linear.HessenbergTransformerTest:testRandomDataNormalDistribution()	/src/test/java/org/apache/commons/math3/linear/HessenbergTransformerTest.java
14794= org.apache.commons.math3.linear.HessenbergTransformerTest:checkAEqualPHPt(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/HessenbergTransformerTest.java
14795= org.apache.commons.math3.linear.HessenbergTransformerTest:testMatricesValues3()	/src/test/java/org/apache/commons/math3/linear/HessenbergTransformerTest.java
14796= org.apache.commons.math3.linear.HessenbergTransformerTest:checkHessenbergForm(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/HessenbergTransformerTest.java
14797= org.apache.commons.math3.linear.HessenbergTransformerTest:testAEqualPHPt()	/src/test/java/org/apache/commons/math3/linear/HessenbergTransformerTest.java
14798= org.apache.commons.math3.optimization.SimpleValueCheckerTest:testIterationCheckDisabled()	/src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java
14799= org.apache.commons.math3.optimization.SimpleValueCheckerTest:testIterationCheck()	/src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java
14800= org.apache.commons.math3.optimization.SimpleValueCheckerTest:testIterationCheckPrecondition()	/src/test/java/org/apache/commons/math3/optimization/SimpleValueCheckerTest.java
14801= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest:value(Dfp)	/src/test/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFPTest.java
14802= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest:testNeta()	/src/test/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFPTest.java
14803= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest:testInsufficientOrder3()	/src/test/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFPTest.java
14804= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest:testConstructorOK()	/src/test/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFPTest.java
14805= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest:testConvergenceOnFunctionAccuracy()	/src/test/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFPTest.java
14806= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest:check(UnivariateDfpFunction, int, double, double, AllowedSolution)	/src/test/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFPTest.java
14807= org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest:setUp()	/src/test/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFPTest.java
14808= org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest:testAccessors()	/src/test/java/org/apache/commons/math3/exception/NonMonotonicSequenceExceptionTest.java
14809= org.apache.commons.math3.distribution.BetaDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/BetaDistributionTest.java
14810= org.apache.commons.math3.distribution.BetaDistributionTest:checkDensity(double, double, double[], double[])	/src/test/java/org/apache/commons/math3/distribution/BetaDistributionTest.java
14811= org.apache.commons.math3.distribution.BetaDistributionTest:testDensity()	/src/test/java/org/apache/commons/math3/distribution/BetaDistributionTest.java
14812= org.apache.commons.math3.distribution.BetaDistributionTest:testCumulative()	/src/test/java/org/apache/commons/math3/distribution/BetaDistributionTest.java
14813= org.apache.commons.math3.distribution.BetaDistributionTest:checkCumulative(double, double, double[], double[])	/src/test/java/org/apache/commons/math3/distribution/BetaDistributionTest.java
14814= org.apache.commons.math3.util.Decimal64Test:testAdd()	/src/test/java/org/apache/commons/math3/util/Decimal64Test.java
14815= org.apache.commons.math3.util.Decimal64Test:testReciprocal()	/src/test/java/org/apache/commons/math3/util/Decimal64Test.java
14816= org.apache.commons.math3.util.Decimal64Test:testNegate()	/src/test/java/org/apache/commons/math3/util/Decimal64Test.java
14817= org.apache.commons.math3.util.Decimal64Test:testSubtract()	/src/test/java/org/apache/commons/math3/util/Decimal64Test.java
14818= org.apache.commons.math3.util.Decimal64Test:testIsInfinite()	/src/test/java/org/apache/commons/math3/util/Decimal64Test.java
14819= org.apache.commons.math3.util.Decimal64Test:testMultiply()	/src/test/java/org/apache/commons/math3/util/Decimal64Test.java
14820= org.apache.commons.math3.util.Decimal64Test:testIsNaN()	/src/test/java/org/apache/commons/math3/util/Decimal64Test.java
14821= org.apache.commons.math3.util.Decimal64Test:build(double)	/src/test/java/org/apache/commons/math3/util/Decimal64Test.java
14822= org.apache.commons.math3.util.Decimal64Test:testDivide()	/src/test/java/org/apache/commons/math3/util/Decimal64Test.java
14823= org.apache.commons.math3.linear.SparseRealMatrixTest:testMath209()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14824= org.apache.commons.math3.linear.SparseRealMatrixTest:testSubMatrix()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14825= org.apache.commons.math3.linear.SparseRealMatrixTest:testDimensions()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14826= org.apache.commons.math3.linear.SparseRealMatrixTest:testGetRowVector()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14827= org.apache.commons.math3.linear.SparseRealMatrixTest:columnToVector(double[][])	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14828= org.apache.commons.math3.linear.SparseRealMatrixTest:testScalarAdd()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14829= org.apache.commons.math3.linear.SparseRealMatrixTest:testPremultiply()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14830= org.apache.commons.math3.linear.SparseRealMatrixTest:testGetColumnVector()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14831= org.apache.commons.math3.linear.SparseRealMatrixTest:testOperate()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14832= org.apache.commons.math3.linear.SparseRealMatrixTest:testAdd()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14833= org.apache.commons.math3.linear.SparseRealMatrixTest:testAddFail()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14834= org.apache.commons.math3.linear.SparseRealMatrixTest:testMultiply()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14835= org.apache.commons.math3.linear.SparseRealMatrixTest:assertClose(String, double[], double[], double)	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14836= org.apache.commons.math3.linear.SparseRealMatrixTest:testPremultiplyVector()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14837= org.apache.commons.math3.linear.SparseRealMatrixTest:assertClose(String, RealMatrix, RealMatrix, double)	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14838= org.apache.commons.math3.linear.SparseRealMatrixTest:createSparseMatrix(double[][])	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14839= org.apache.commons.math3.linear.SparseRealMatrixTest:testGetRowMatrix()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14840= org.apache.commons.math3.linear.SparseRealMatrixTest:testSetSubMatrix()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14841= org.apache.commons.math3.linear.SparseRealMatrixTest:testGetColumnMatrix()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14842= org.apache.commons.math3.linear.SparseRealMatrixTest:testToString()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14843= org.apache.commons.math3.linear.SparseRealMatrixTest:testSerial()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14844= org.apache.commons.math3.linear.SparseRealMatrixTest:testNorm()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14845= org.apache.commons.math3.linear.SparseRealMatrixTest:testTranspose()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14846= org.apache.commons.math3.linear.SparseRealMatrixTest:testCopyFunctions()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14847= org.apache.commons.math3.linear.SparseRealMatrixTest:testEqualsAndHashCode()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14848= org.apache.commons.math3.linear.SparseRealMatrixTest:testExamples()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14849= org.apache.commons.math3.linear.SparseRealMatrixTest:testTrace()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14850= org.apache.commons.math3.linear.SparseRealMatrixTest:testGetEntry()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14851= org.apache.commons.math3.linear.SparseRealMatrixTest:testPlusMinus()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14852= org.apache.commons.math3.linear.SparseRealMatrixTest:testMultiply2()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14853= org.apache.commons.math3.linear.SparseRealMatrixTest:testGetVectors()	/src/test/java/org/apache/commons/math3/linear/SparseRealMatrixTest.java
14854= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest:testInterpolation2()	/src/test/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatorTest.java
14855= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest:testInterpolation1()	/src/test/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatorTest.java
14856= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest:testPreconditions()	/src/test/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatorTest.java
14857= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest:value(double, double)	/src/test/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatorTest.java
14858= org.apache.commons.math3.transform.FastFourierTransformerTest:testTransformFunctionInvalidBounds()	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14859= org.apache.commons.math3.transform.FastFourierTransformerTest:testTransformComplexSizeNotAPowerOfTwo()	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14860= org.apache.commons.math3.transform.FastFourierTransformerTest:createComplexData(int)	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14861= org.apache.commons.math3.transform.FastFourierTransformerTest:testTransformFunctionNotStrictlyPositiveNumberOfSamples()	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14862= org.apache.commons.math3.transform.FastFourierTransformerTest:doTestTransformFunction(UnivariateFunction, double, double, int, double, DftNormalization, TransformType)	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14863= org.apache.commons.math3.transform.FastFourierTransformerTest:test2DDataUnitary()	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14864= org.apache.commons.math3.transform.FastFourierTransformerTest:createRealData(int)	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14865= org.apache.commons.math3.transform.FastFourierTransformerTest:dft(Complex[], int)	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14866= org.apache.commons.math3.transform.FastFourierTransformerTest:testTransformComplex()	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14867= org.apache.commons.math3.transform.FastFourierTransformerTest:testTransformFunctionSizeNotAPowerOfTwo()	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14868= org.apache.commons.math3.transform.FastFourierTransformerTest:doTestTransformReal(int, double, DftNormalization, TransformType)	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14869= org.apache.commons.math3.transform.FastFourierTransformerTest:testStandardTransformFunction()	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14870= org.apache.commons.math3.transform.FastFourierTransformerTest:test2DData()	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14871= org.apache.commons.math3.transform.FastFourierTransformerTest:testAdHocData()	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14872= org.apache.commons.math3.transform.FastFourierTransformerTest:testSinFunction()	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14873= org.apache.commons.math3.transform.FastFourierTransformerTest:doTestTransformComplex(int, double, DftNormalization, TransformType)	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14874= org.apache.commons.math3.transform.FastFourierTransformerTest:testStandardTransformReal()	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14875= org.apache.commons.math3.transform.FastFourierTransformerTest:testTransformRealSizeNotAPowerOfTwo()	/src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java
14876= org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest:testDimensionCheck()	/src/test/java/org/apache/commons/math3/ode/nonstiff/MidpointIntegratorTest.java
14877= org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest:testBigStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/MidpointIntegratorTest.java
14878= org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest:testStepSize()	/src/test/java/org/apache/commons/math3/ode/nonstiff/MidpointIntegratorTest.java
14879= org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/MidpointIntegratorTest.java
14880= org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest:testSmallStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/MidpointIntegratorTest.java
14881= org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/MidpointIntegratorTest.java
14882= org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/MidpointIntegratorTest.java
14883= org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest:testBackward()	/src/test/java/org/apache/commons/math3/ode/nonstiff/MidpointIntegratorTest.java
14884= org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/nonstiff/MidpointIntegratorTest.java
14885= org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest:testDecreasingSteps()	/src/test/java/org/apache/commons/math3/ode/nonstiff/MidpointIntegratorTest.java
14886= org.apache.commons.math3.optimization.PointValuePairTest:testSerial()	/src/test/java/org/apache/commons/math3/optimization/PointValuePairTest.java
14887= org.apache.commons.math3.TestUtils:assertContains(String, double[], double, double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14888= org.apache.commons.math3.TestUtils:assertChiSquareAccept(double[], long[], double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14889= org.apache.commons.math3.TestUtils:assertEquals(double, double, double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14890= org.apache.commons.math3.TestUtils:assertContains(String, Complex[], Complex, double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14891= org.apache.commons.math3.TestUtils:assertEquals(String, double[], RealVector, double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14892= org.apache.commons.math3.TestUtils:assertEquals(String, RealVector, RealVector, double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14893= org.apache.commons.math3.TestUtils:TestUtils()	/src/test/java/org/apache/commons/math3/TestUtils.java
14894= org.apache.commons.math3.TestUtils:assertRelativelyEquals(double, double, double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14895= org.apache.commons.math3.TestUtils:assertChiSquareAccept(int[], double[], long[], double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14896= org.apache.commons.math3.TestUtils:eliminateZeroMassPoints(int[], double[])	/src/test/java/org/apache/commons/math3/TestUtils.java
14897= org.apache.commons.math3.TestUtils:assertEquals(String, double[], double[], double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14898= org.apache.commons.math3.TestUtils:checkSerializedEquality(Object)	/src/test/java/org/apache/commons/math3/TestUtils.java
14899= org.apache.commons.math3.TestUtils:assertSame(Complex, Complex)	/src/test/java/org/apache/commons/math3/TestUtils.java
14900= org.apache.commons.math3.TestUtils:assertContains(double[], double, double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14901= org.apache.commons.math3.TestUtils:assertContains(Complex[], Complex, double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14902= org.apache.commons.math3.TestUtils:assertEquals(String, double, double, double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14903= org.apache.commons.math3.TestUtils:assertEquals(T[], T[])	/src/test/java/org/apache/commons/math3/TestUtils.java
14904= org.apache.commons.math3.TestUtils:updateCounts(double, long[], double[])	/src/test/java/org/apache/commons/math3/TestUtils.java
14905= org.apache.commons.math3.TestUtils:serializeAndRecover(Object)	/src/test/java/org/apache/commons/math3/TestUtils.java
14906= org.apache.commons.math3.TestUtils:assertChiSquareAccept(String[], double[], long[], double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14907= org.apache.commons.math3.TestUtils:assertEquals(FieldMatrix<? extends FieldElement<?>>, FieldMatrix<? extends FieldElement<?>>)	/src/test/java/org/apache/commons/math3/TestUtils.java
14908= org.apache.commons.math3.TestUtils:assertSame(double, double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14909= org.apache.commons.math3.TestUtils:sumSquareDev(double[], double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14910= org.apache.commons.math3.TestUtils:assertEquals(String, RealMatrix, RealMatrix, double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14911= org.apache.commons.math3.TestUtils:getDistributionQuartiles(RealDistribution)	/src/test/java/org/apache/commons/math3/TestUtils.java
14912= org.apache.commons.math3.TestUtils:assertEquals(Complex, Complex, double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14913= org.apache.commons.math3.TestUtils:assertRelativelyEquals(String, double, double, double)	/src/test/java/org/apache/commons/math3/TestUtils.java
14914= org.apache.commons.math3.stat.inference.OneWayAnovaTest:testAnovaFValue()	/src/test/java/org/apache/commons/math3/stat/inference/OneWayAnovaTest.java
14915= org.apache.commons.math3.stat.inference.OneWayAnovaTest:testAnovaPValueSummaryStatistics()	/src/test/java/org/apache/commons/math3/stat/inference/OneWayAnovaTest.java
14916= org.apache.commons.math3.stat.inference.OneWayAnovaTest:testAnovaPValue()	/src/test/java/org/apache/commons/math3/stat/inference/OneWayAnovaTest.java
14917= org.apache.commons.math3.stat.inference.OneWayAnovaTest:testAnovaTest()	/src/test/java/org/apache/commons/math3/stat/inference/OneWayAnovaTest.java
14918= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testNegativeZ()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14919= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14920= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testParseNoComponents()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14921= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testForgottenSeparator()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14922= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testSimpleWithDecimals()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14923= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testParseSimpleNoDecimals()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14924= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testParseNan()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14925= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testParseZeroX()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14926= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testParseIgnoredWhitespace()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14927= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:RealVectorFormatAbstractTest()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14928= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testParseNegativeY()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14929= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testPositiveInfinity()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14930= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:tesNegativeInfinity()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14931= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testParseNegativeZ()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14932= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testParseSimpleWithDecimalsTrunc()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14933= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testParseManyComponents()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14934= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testParseNegativeX()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14935= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testSimpleWithDecimalsTrunc()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14936= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testParseNonDefaultSetting()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14937= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testParseNegativeInfinity()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14938= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testNegativeX()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14939= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testConstructorSingleFormat()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14940= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testNegativeY()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14941= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testParsePositiveInfinity()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14942= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testNonDefaultSetting()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14943= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testSimpleNoDecimals()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14944= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:getLocale()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14945= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testNan()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14946= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testForgottenSuffix()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14947= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testDefaultFormatRealVectorImpl()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14948= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testParseSimpleWithDecimals()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14949= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testForgottenPrefix()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14950= org.apache.commons.math3.linear.RealVectorFormatAbstractTest:testParseNegativeAll()	/src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java
14951= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testDistanceInf()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14952= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testNormInf()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14953= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testSpace()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14954= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testHash()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14955= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testConstructors()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14956= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testZero()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14957= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:checkVector(Vector1D, double)	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14958= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testNorm()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14959= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testNormalize()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14960= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testNormSq()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14961= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testDistance1()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14962= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testNorm1()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14963= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testSubtract()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14964= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testAdd()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14965= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testNegate()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14966= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testEquals()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14967= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testToString()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14968= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testScalarProduct()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14969= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testDistanceSq()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14970= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testInfinite()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14971= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testDistance()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14972= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testCoordinates()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14973= org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest:testNaN()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DTest.java
14974= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatTest.java
14975= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest:getLocale()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatTest.java
14976= org.apache.commons.math3.genetics.BinaryMutationTest:testMutate()	/src/test/java/org/apache/commons/math3/genetics/BinaryMutationTest.java
14977= org.apache.commons.math3.fitting.GaussianCurveFitterTest:createDataset(double[][])	/src/test/java/org/apache/commons/math3/fitting/GaussianCurveFitterTest.java
14978= org.apache.commons.math3.fitting.GaussianCurveFitterTest:testFit06()	/src/test/java/org/apache/commons/math3/fitting/GaussianCurveFitterTest.java
14979= org.apache.commons.math3.fitting.GaussianCurveFitterTest:testFit07()	/src/test/java/org/apache/commons/math3/fitting/GaussianCurveFitterTest.java
14980= org.apache.commons.math3.fitting.GaussianCurveFitterTest:testFit04()	/src/test/java/org/apache/commons/math3/fitting/GaussianCurveFitterTest.java
14981= org.apache.commons.math3.fitting.GaussianCurveFitterTest:testFit05()	/src/test/java/org/apache/commons/math3/fitting/GaussianCurveFitterTest.java
14982= org.apache.commons.math3.fitting.GaussianCurveFitterTest:testWithMaxIterations2()	/src/test/java/org/apache/commons/math3/fitting/GaussianCurveFitterTest.java
14983= org.apache.commons.math3.fitting.GaussianCurveFitterTest:testFit02()	/src/test/java/org/apache/commons/math3/fitting/GaussianCurveFitterTest.java
14984= org.apache.commons.math3.fitting.GaussianCurveFitterTest:testWithMaxIterations1()	/src/test/java/org/apache/commons/math3/fitting/GaussianCurveFitterTest.java
14985= org.apache.commons.math3.fitting.GaussianCurveFitterTest:testFit03()	/src/test/java/org/apache/commons/math3/fitting/GaussianCurveFitterTest.java
14986= org.apache.commons.math3.fitting.GaussianCurveFitterTest:testMath519()	/src/test/java/org/apache/commons/math3/fitting/GaussianCurveFitterTest.java
14987= org.apache.commons.math3.fitting.GaussianCurveFitterTest:testWithStartPoint()	/src/test/java/org/apache/commons/math3/fitting/GaussianCurveFitterTest.java
14988= org.apache.commons.math3.fitting.GaussianCurveFitterTest:testMath798()	/src/test/java/org/apache/commons/math3/fitting/GaussianCurveFitterTest.java
14989= org.apache.commons.math3.fitting.GaussianCurveFitterTest:testFit01()	/src/test/java/org/apache/commons/math3/fitting/GaussianCurveFitterTest.java
14990= org.apache.commons.math3.ode.TestProblemHandler:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/TestProblemHandler.java
14991= org.apache.commons.math3.ode.TestProblemHandler:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/TestProblemHandler.java
14992= org.apache.commons.math3.ode.TestProblemHandler:getMaximalTimeError()	/src/test/java/org/apache/commons/math3/ode/TestProblemHandler.java
14993= org.apache.commons.math3.ode.TestProblemHandler:getMaximalValueError()	/src/test/java/org/apache/commons/math3/ode/TestProblemHandler.java
14994= org.apache.commons.math3.ode.TestProblemHandler:getLastTime()	/src/test/java/org/apache/commons/math3/ode/TestProblemHandler.java
14995= org.apache.commons.math3.ode.TestProblemHandler:TestProblemHandler(TestProblemAbstract, ODEIntegrator)	/src/test/java/org/apache/commons/math3/ode/TestProblemHandler.java
14996= org.apache.commons.math3.ode.TestProblemHandler:getLastError()	/src/test/java/org/apache/commons/math3/ode/TestProblemHandler.java
14997= org.apache.commons.math3.analysis.integration.gauss.DummyRuleFactory:computeRule(int)	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactoryTest.java
14998= org.apache.commons.math3.analysis.integration.gauss.RuleBuilder:call()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactoryTest.java
14999= org.apache.commons.math3.analysis.integration.gauss.DummyRuleFactory:getNumberOfCalls()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactoryTest.java
15000= org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest:testConcurrentCreation()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactoryTest.java
15001= org.apache.commons.math3.analysis.integration.gauss.RuleBuilder:getNumberOfCalls()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactoryTest.java
15002= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest:testPreconditions()	/src/test/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java
15003= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest:testPlane()	/src/test/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java
15004= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest:value(double, double)	/src/test/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java
15005= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest:testSplinePartialDerivatives()	/src/test/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java
15006= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest:testParaboloid()	/src/test/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java
15007= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest:testMatchingPartialDerivatives()	/src/test/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java
15008= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest:testInterpolation2()	/src/test/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java
15009= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest:testInterpolation1()	/src/test/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java
15010= org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest:testIsValidPoint()	/src/test/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java
15011= org.apache.commons.math3.stat.descriptive.rank.PercentileTest:testLowPercentile()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/PercentileTest.java
15012= org.apache.commons.math3.stat.descriptive.rank.PercentileTest:expectedValue()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/PercentileTest.java
15013= org.apache.commons.math3.stat.descriptive.rank.PercentileTest:testSetQuantile()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/PercentileTest.java
15014= org.apache.commons.math3.stat.descriptive.rank.PercentileTest:testNISTExample()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/PercentileTest.java
15015= org.apache.commons.math3.stat.descriptive.rank.PercentileTest:test5()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/PercentileTest.java
15016= org.apache.commons.math3.stat.descriptive.rank.PercentileTest:getUnivariateStatistic()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/PercentileTest.java
15017= org.apache.commons.math3.stat.descriptive.rank.PercentileTest:testNullEmpty()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/PercentileTest.java
15018= org.apache.commons.math3.stat.descriptive.rank.PercentileTest:testSingleton()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/PercentileTest.java
15019= org.apache.commons.math3.stat.descriptive.rank.PercentileTest:testPercentile()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/PercentileTest.java
15020= org.apache.commons.math3.stat.descriptive.rank.PercentileTest:testSpecialValues()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/PercentileTest.java
15021= org.apache.commons.math3.stat.descriptive.rank.PercentileTest:testHighPercentile()	/src/test/java/org/apache/commons/math3/stat/descriptive/rank/PercentileTest.java
15022= org.apache.commons.math3.util.FastMathTest:testHyperbolic()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15023= org.apache.commons.math3.util.FastMathTest:testSignumDouble()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15024= org.apache.commons.math3.util.FastMathTest:testCoshAccuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15025= org.apache.commons.math3.util.FastMathTest:cosh(Dfp)	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15026= org.apache.commons.math3.util.FastMathTest:testExpAccuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15027= org.apache.commons.math3.util.FastMathTest:checkMissingFastMathClasses()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15028= org.apache.commons.math3.util.FastMathTest:testAtanAccuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15029= org.apache.commons.math3.util.FastMathTest:testMath905LargePositive()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15030= org.apache.commons.math3.util.FastMathTest:testLog1pSpecialCases()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15031= org.apache.commons.math3.util.FastMathTest:testCosAccuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15032= org.apache.commons.math3.util.FastMathTest:testConstants()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15033= org.apache.commons.math3.util.FastMathTest:tanh(Dfp)	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15034= org.apache.commons.math3.util.FastMathTest:testExpm1Accuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15035= org.apache.commons.math3.util.FastMathTest:testPowSpecialCases()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15036= org.apache.commons.math3.util.FastMathTest:sinh(Dfp)	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15037= org.apache.commons.math3.util.FastMathTest:checkExtraFastMathClasses()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15038= org.apache.commons.math3.util.FastMathTest:testTanAccuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15039= org.apache.commons.math3.util.FastMathTest:testMath904()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15040= org.apache.commons.math3.util.FastMathTest:testAsinAccuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15041= org.apache.commons.math3.util.FastMathTest:testAcosAccuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15042= org.apache.commons.math3.util.FastMathTest:testToDegrees()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15043= org.apache.commons.math3.util.FastMathTest:testLog10Accuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15044= org.apache.commons.math3.util.FastMathTest:testFloatScalbSpecialCases()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15045= org.apache.commons.math3.util.FastMathTest:testAtan2Accuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15046= org.apache.commons.math3.util.FastMathTest:testIndicatorDouble()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15047= org.apache.commons.math3.util.FastMathTest:testSinAccuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15048= org.apache.commons.math3.util.FastMathTest:testTanhAccuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15049= org.apache.commons.math3.util.FastMathTest:testLog1pAccuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15050= org.apache.commons.math3.util.FastMathTest:testSinhAccuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15051= org.apache.commons.math3.util.FastMathTest:testExpSpecialCases()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15052= org.apache.commons.math3.util.FastMathTest:testCbrtAccuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15053= org.apache.commons.math3.util.FastMathTest:cbrt(Dfp)	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15054= org.apache.commons.math3.util.FastMathTest:compareClassMethods(Class<?>, Class<?>)	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15055= org.apache.commons.math3.util.FastMathTest:setUp()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15056= org.apache.commons.math3.util.FastMathTest:testAtan2()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15057= org.apache.commons.math3.util.FastMathTest:testIntPow()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15058= org.apache.commons.math3.util.FastMathTest:testToRadians()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15059= org.apache.commons.math3.util.FastMathTest:testMath905LargeNegative()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15060= org.apache.commons.math3.util.FastMathTest:testMinMaxDouble()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15061= org.apache.commons.math3.util.FastMathTest:testSignumFloat()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15062= org.apache.commons.math3.util.FastMathTest:testIndicatorFloat()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15063= org.apache.commons.math3.util.FastMathTest:testHyperbolicInverses()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15064= org.apache.commons.math3.util.FastMathTest:testDoubleNextAfterSpecialCases()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15065= org.apache.commons.math3.util.FastMathTest:testLogWithBase()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15066= org.apache.commons.math3.util.FastMathTest:testDoubleScalbSpecialCases()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15067= org.apache.commons.math3.util.FastMathTest:testNextAfter()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15068= org.apache.commons.math3.util.FastMathTest:testMinMaxFloat()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15069= org.apache.commons.math3.util.FastMathTest:testLogSpecialCases()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15070= org.apache.commons.math3.util.FastMathTest:testPowAccuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15071= org.apache.commons.math3.util.FastMathTest:testFloatNextAfterSpecialCases()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15072= org.apache.commons.math3.util.FastMathTest:testAcosSpecialCases()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15073= org.apache.commons.math3.util.FastMathTest:testAtan2SpecialCases()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15074= org.apache.commons.math3.util.FastMathTest:testAsinSpecialCases()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15075= org.apache.commons.math3.util.FastMathTest:testLogAccuracy()	/src/test/java/org/apache/commons/math3/util/FastMathTest.java
15076= org.apache.commons.math3.optimization.linear.SimplexTableauTest:testTableauWithNoArtificialVars()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableauTest.java
15077= org.apache.commons.math3.optimization.linear.SimplexTableauTest:testDropPhase1Objective()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableauTest.java
15078= org.apache.commons.math3.optimization.linear.SimplexTableauTest:createFunction()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableauTest.java
15079= org.apache.commons.math3.optimization.linear.SimplexTableauTest:testInitialization()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableauTest.java
15080= org.apache.commons.math3.optimization.linear.SimplexTableauTest:testSerial()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableauTest.java
15081= org.apache.commons.math3.optimization.linear.SimplexTableauTest:createConstraints()	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableauTest.java
15082= org.apache.commons.math3.optimization.linear.SimplexTableauTest:assertMatrixEquals(double[][], double[][])	/src/test/java/org/apache/commons/math3/optimization/linear/SimplexTableauTest.java
15083= org.apache.commons.math3.exception.NotPositiveExceptionTest:testAccessors()	/src/test/java/org/apache/commons/math3/exception/NotPositiveExceptionTest.java
15084= org.apache.commons.math3.linear.BiDiagonalTransformerTest:testVOrthogonal()	/src/test/java/org/apache/commons/math3/linear/BiDiagonalTransformerTest.java
15085= org.apache.commons.math3.linear.BiDiagonalTransformerTest:checkdimensions(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/BiDiagonalTransformerTest.java
15086= org.apache.commons.math3.linear.BiDiagonalTransformerTest:testUpperOrLower()	/src/test/java/org/apache/commons/math3/linear/BiDiagonalTransformerTest.java
15087= org.apache.commons.math3.linear.BiDiagonalTransformerTest:testDimensions()	/src/test/java/org/apache/commons/math3/linear/BiDiagonalTransformerTest.java
15088= org.apache.commons.math3.linear.BiDiagonalTransformerTest:testBBiDiagonal()	/src/test/java/org/apache/commons/math3/linear/BiDiagonalTransformerTest.java
15089= org.apache.commons.math3.linear.BiDiagonalTransformerTest:checkOrthogonal(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/BiDiagonalTransformerTest.java
15090= org.apache.commons.math3.linear.BiDiagonalTransformerTest:checkBiDiagonal(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/BiDiagonalTransformerTest.java
15091= org.apache.commons.math3.linear.BiDiagonalTransformerTest:testSingularMatrix()	/src/test/java/org/apache/commons/math3/linear/BiDiagonalTransformerTest.java
15092= org.apache.commons.math3.linear.BiDiagonalTransformerTest:testAEqualUSVt()	/src/test/java/org/apache/commons/math3/linear/BiDiagonalTransformerTest.java
15093= org.apache.commons.math3.linear.BiDiagonalTransformerTest:testMatricesValues()	/src/test/java/org/apache/commons/math3/linear/BiDiagonalTransformerTest.java
15094= org.apache.commons.math3.linear.BiDiagonalTransformerTest:testUOrthogonal()	/src/test/java/org/apache/commons/math3/linear/BiDiagonalTransformerTest.java
15095= org.apache.commons.math3.linear.BiDiagonalTransformerTest:checkAEqualUSVt(RealMatrix)	/src/test/java/org/apache/commons/math3/linear/BiDiagonalTransformerTest.java
15096= org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistribution:MultivariateNormalMixtureModelDistribution(List<Pair<Double,MultivariateNormalDistribution>>)	/src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java
15097= org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest:testWeightSumOverFlow()	/src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java
15098= org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest:testSampling()	/src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java
15099= org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest:testDensities()	/src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java
15100= org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest:create(double[], double[][], double[][][])	/src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java
15101= org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest:testPreconditionPositiveWeights()	/src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java
15102= org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest:getCorrectSamples()	/src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java
15103= org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest:testNonUnitWeightSum()	/src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java
15104= org.apache.commons.math3.distribution.EnumeratedRealDistributionTest:testProbability()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedRealDistributionTest.java
15105= org.apache.commons.math3.distribution.EnumeratedRealDistributionTest:testGetNumericalMean()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedRealDistributionTest.java
15106= org.apache.commons.math3.distribution.EnumeratedRealDistributionTest:testExceptions()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedRealDistributionTest.java
15107= org.apache.commons.math3.distribution.EnumeratedRealDistributionTest:testIssue1065()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedRealDistributionTest.java
15108= org.apache.commons.math3.distribution.EnumeratedRealDistributionTest:testIsSupportUpperBoundInclusive()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedRealDistributionTest.java
15109= org.apache.commons.math3.distribution.EnumeratedRealDistributionTest:testSample()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedRealDistributionTest.java
15110= org.apache.commons.math3.distribution.EnumeratedRealDistributionTest:testIsSupportLowerBoundInclusive()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedRealDistributionTest.java
15111= org.apache.commons.math3.distribution.EnumeratedRealDistributionTest:testGetNumericalVariance()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedRealDistributionTest.java
15112= org.apache.commons.math3.distribution.EnumeratedRealDistributionTest:testGetSupportUpperBound()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedRealDistributionTest.java
15113= org.apache.commons.math3.distribution.EnumeratedRealDistributionTest:EnumeratedRealDistributionTest()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedRealDistributionTest.java
15114= org.apache.commons.math3.distribution.EnumeratedRealDistributionTest:testGetSupportLowerBound()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedRealDistributionTest.java
15115= org.apache.commons.math3.distribution.EnumeratedRealDistributionTest:testIssue942()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedRealDistributionTest.java
15116= org.apache.commons.math3.distribution.EnumeratedRealDistributionTest:testDensity()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedRealDistributionTest.java
15117= org.apache.commons.math3.distribution.EnumeratedRealDistributionTest:testCumulativeProbability()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedRealDistributionTest.java
15118= org.apache.commons.math3.distribution.EnumeratedRealDistributionTest:testIsSupportConnected()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedRealDistributionTest.java
15119= org.apache.commons.math3.analysis.function.SincTest:testCrossings()	/src/test/java/org/apache/commons/math3/analysis/function/SincTest.java
15120= org.apache.commons.math3.analysis.function.SincTest:value(double)	/src/test/java/org/apache/commons/math3/analysis/function/SincTest.java
15121= org.apache.commons.math3.analysis.function.SincTest:testDerivativeZero()	/src/test/java/org/apache/commons/math3/analysis/function/SincTest.java
15122= org.apache.commons.math3.analysis.function.SincTest:testEuler()	/src/test/java/org/apache/commons/math3/analysis/function/SincTest.java
15123= org.apache.commons.math3.analysis.function.SincTest:testDerivatives1Dot2Normalized()	/src/test/java/org/apache/commons/math3/analysis/function/SincTest.java
15124= org.apache.commons.math3.analysis.function.SincTest:testShortcut()	/src/test/java/org/apache/commons/math3/analysis/function/SincTest.java
15125= org.apache.commons.math3.analysis.function.SincTest:testDerivativeShortcut()	/src/test/java/org/apache/commons/math3/analysis/function/SincTest.java
15126= org.apache.commons.math3.analysis.function.SincTest:testDerivatives1Dot2Unnormalized()	/src/test/java/org/apache/commons/math3/analysis/function/SincTest.java
15127= org.apache.commons.math3.analysis.function.SincTest:testZero()	/src/test/java/org/apache/commons/math3/analysis/function/SincTest.java
15128= org.apache.commons.math3.linear.RealVectorTest:testGetSubVector()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15129= org.apache.commons.math3.linear.RealVectorTest:testAppendScalar()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15130= org.apache.commons.math3.linear.RealVectorTest:testEquals()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15131= org.apache.commons.math3.linear.RealVectorTest:testGetL1Norm()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15132= org.apache.commons.math3.linear.RealVectorTest:testGetLInfNorm()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15133= org.apache.commons.math3.linear.RealVectorTest:testAppendVector()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15134= org.apache.commons.math3.linear.RealVectorTest:testSetSubVectorSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15135= org.apache.commons.math3.linear.RealVectorTest:testGetSubVectorInvalidIndex4()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15136= org.apache.commons.math3.linear.RealVectorTest:testEbeDivideSameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15137= org.apache.commons.math3.linear.RealVectorTest:testGetSubVectorInvalidIndex2()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15138= org.apache.commons.math3.linear.RealVectorTest:testGetSubVectorInvalidIndex3()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15139= org.apache.commons.math3.linear.RealVectorTest:testGetSubVectorInvalidIndex1()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15140= org.apache.commons.math3.linear.RealVectorTest:testIsNaN()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15141= org.apache.commons.math3.linear.RealVectorTest:testEbeMultiplySameType()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15142= org.apache.commons.math3.linear.RealVectorTest:testSetSubVectorMixedType()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15143= org.apache.commons.math3.linear.RealVectorTest:testSerial()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15144= org.apache.commons.math3.linear.RealVectorTest:testEbeMultiplyMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15145= org.apache.commons.math3.linear.RealVectorTest:create(double[])	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15146= org.apache.commons.math3.linear.RealVectorTest:testIsInfinite()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15147= org.apache.commons.math3.linear.RealVectorTest:testEbeMultiplyDimensionMismatch()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15148= org.apache.commons.math3.linear.RealVectorTest:testSparseIterator()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15149= org.apache.commons.math3.linear.RealVectorTest:testSetSubVectorInvalidIndex3()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15150= org.apache.commons.math3.linear.RealVectorTest:testSetSubVectorInvalidIndex2()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15151= org.apache.commons.math3.linear.RealVectorTest:testEbeDivideMixedTypes()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15152= org.apache.commons.math3.linear.RealVectorTest:testSetSubVectorInvalidIndex1()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15153= org.apache.commons.math3.linear.RealVectorTest:testEbeDivideDimensionMismatch()	/src/test/java/org/apache/commons/math3/linear/RealVectorTest.java
15154= org.apache.commons.math3.dfp.DfpMathTest:testSin()	/src/test/java/org/apache/commons/math3/dfp/DfpMathTest.java
15155= org.apache.commons.math3.dfp.DfpMathTest:tearDown()	/src/test/java/org/apache/commons/math3/dfp/DfpMathTest.java
15156= org.apache.commons.math3.dfp.DfpMathTest:setUp()	/src/test/java/org/apache/commons/math3/dfp/DfpMathTest.java
15157= org.apache.commons.math3.dfp.DfpMathTest:testPow()	/src/test/java/org/apache/commons/math3/dfp/DfpMathTest.java
15158= org.apache.commons.math3.dfp.DfpMathTest:test(Dfp, Dfp, int, String)	/src/test/java/org/apache/commons/math3/dfp/DfpMathTest.java
15159= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:testVariableSteps()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15160= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:SchedulingChecker(int)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15161= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:KeplerHandler(TestProblem3)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15162= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:testMissedEndEvent()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15163= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler:KeplerHandler(TestProblem3)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15164= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:testTooLargeFirstStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15165= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:testDimensionCheck()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15166= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:testBackward()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15167= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15168= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:VariableHandler()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15169= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.SchedulingChecker:SchedulingChecker(int)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15170= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler:VariableHandler()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15171= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15172= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15173= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:testEventsScheduling()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15174= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.SchedulingChecker:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15175= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.SchedulingChecker:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15176= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15177= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15178= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:testMinStep()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15179= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.SchedulingChecker:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15180= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15181= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15182= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15183= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:testIncreasingTolerance()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15184= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.SchedulingChecker:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15185= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:getDimension()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15186= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.SchedulingChecker:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15187= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15188= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:testNullIntervalCheck()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15189= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:testUnstableDerivative()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15190= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:testKepler()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15191= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest:testEvents()	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15192= org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java
15193= org.apache.commons.math3.fraction.FractionFieldTest:testOne()	/src/test/java/org/apache/commons/math3/fraction/FractionFieldTest.java
15194= org.apache.commons.math3.fraction.FractionFieldTest:testSerial()	/src/test/java/org/apache/commons/math3/fraction/FractionFieldTest.java
15195= org.apache.commons.math3.fraction.FractionFieldTest:testZero()	/src/test/java/org/apache/commons/math3/fraction/FractionFieldTest.java
15196= org.apache.commons.math3.transform.FastSineTransformerTest:getValidLowerBound()	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15197= org.apache.commons.math3.transform.FastSineTransformerTest:testSinFunction()	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15198= org.apache.commons.math3.transform.FastSineTransformerTest:getValidUpperBound()	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15199= org.apache.commons.math3.transform.FastSineTransformerTest:getValidDataSize(int)	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15200= org.apache.commons.math3.transform.FastSineTransformerTest:createRealData(int)	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15201= org.apache.commons.math3.transform.FastSineTransformerTest:testAdHocData()	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15202= org.apache.commons.math3.transform.FastSineTransformerTest:createRealTransformer()	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15203= org.apache.commons.math3.transform.FastSineTransformerTest:testParameters()	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15204= org.apache.commons.math3.transform.FastSineTransformerTest:testTransformRealFirstElementNotZero()	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15205= org.apache.commons.math3.transform.FastSineTransformerTest:transform(double[], TransformType)	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15206= org.apache.commons.math3.transform.FastSineTransformerTest:FastSineTransformerTest(DstNormalization)	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15207= org.apache.commons.math3.transform.FastSineTransformerTest:getInvalidDataSize(int)	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15208= org.apache.commons.math3.transform.FastSineTransformerTest:getNumberOfInvalidDataSizes()	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15209= org.apache.commons.math3.transform.FastSineTransformerTest:getValidFunction()	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15210= org.apache.commons.math3.transform.FastSineTransformerTest:getNumberOfValidDataSizes()	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15211= org.apache.commons.math3.transform.FastSineTransformerTest:data()	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15212= org.apache.commons.math3.transform.FastSineTransformerTest:getRelativeTolerance(int)	/src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java
15213= org.apache.commons.math3.ode.TestProblemFactory:getProblems()	/src/test/java/org/apache/commons/math3/ode/TestProblemFactory.java
15214= org.apache.commons.math3.ode.TestProblemFactory:TestProblemFactory()	/src/test/java/org/apache/commons/math3/ode/TestProblemFactory.java
15215= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testParseZeroX()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15216= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testSimpleWithDecimalsTrunc()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15217= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:tesNegativeInfinity()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15218= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testParseSimpleNoDecimals()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15219= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testParseNan()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15220= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testPositiveInfinity()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15221= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testParseIgnoredWhitespace()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15222= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testParseSimpleWithDecimalsTrunc()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15223= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testConstructorSingleFormat()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15224= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testParseNonDefaultSetting()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15225= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testParseNegativeZ()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15226= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testSimpleNoDecimals()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15227= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testParseNegativeY()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15228= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testParseNegativeAll()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15229= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testParseNegativeX()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15230= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:getLocale()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15231= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testNonDefaultSetting()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15232= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testParsePositiveInfinity()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15233= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15234= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testParseSimpleWithDecimals()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15235= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testSimpleWithDecimals()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15236= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testNan()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15237= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testForgottenPrefix()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15238= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testForgottenSuffix()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15239= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:Vector1DFormatAbstractTest()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15240= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testParseNegativeInfinity()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15241= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testDefaultFormatVector1D()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15242= org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormatAbstractTest:testNegativeX()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormatAbstractTest.java
15243= org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest.LinearProblem:LinearProblem(double[][], double[])	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java
15244= org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest:getMaxEvaluations()	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java
15245= org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest:value(double[])	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java
15246= org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest:testNoOptimum()	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java
15247= org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest:getEvaluations()	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java
15248= org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest:LinearProblem(double[][], double[])	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java
15249= org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest.LinearProblem:value(double[])	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java
15250= org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest.LinearProblem:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java
15251= org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest:getConvergenceChecker()	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java
15252= org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java
15253= org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest:optimize(int, MultivariateDifferentiableVectorFunction, double[], double[], double[])	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java
15254= org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest:testTrivial()	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java
15255= org.apache.commons.math3.analysis.integration.gauss.GaussianQuadratureAbstractTest:testAllMonomials()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/GaussianQuadratureAbstractTest.java
15256= org.apache.commons.math3.analysis.integration.gauss.GaussianQuadratureAbstractTest:getExpectedValue(int)	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/GaussianQuadratureAbstractTest.java
15257= org.apache.commons.math3.analysis.integration.gauss.GaussianQuadratureAbstractTest:GaussianQuadratureAbstractTest(GaussIntegrator, int, double, double)	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/GaussianQuadratureAbstractTest.java
15258= org.apache.commons.math3.distribution.ExponentialDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/ExponentialDistributionTest.java
15259= org.apache.commons.math3.distribution.ExponentialDistributionTest:testPreconditions()	/src/test/java/org/apache/commons/math3/distribution/ExponentialDistributionTest.java
15260= org.apache.commons.math3.distribution.ExponentialDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/ExponentialDistributionTest.java
15261= org.apache.commons.math3.distribution.ExponentialDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/ExponentialDistributionTest.java
15262= org.apache.commons.math3.distribution.ExponentialDistributionTest:testCumulativeProbabilityExtremes()	/src/test/java/org/apache/commons/math3/distribution/ExponentialDistributionTest.java
15263= org.apache.commons.math3.distribution.ExponentialDistributionTest:testDensity()	/src/test/java/org/apache/commons/math3/distribution/ExponentialDistributionTest.java
15264= org.apache.commons.math3.distribution.ExponentialDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/ExponentialDistributionTest.java
15265= org.apache.commons.math3.distribution.ExponentialDistributionTest:testMeanAccessors()	/src/test/java/org/apache/commons/math3/distribution/ExponentialDistributionTest.java
15266= org.apache.commons.math3.distribution.ExponentialDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/ExponentialDistributionTest.java
15267= org.apache.commons.math3.distribution.ExponentialDistributionTest:testInverseCumulativeProbabilityExtremes()	/src/test/java/org/apache/commons/math3/distribution/ExponentialDistributionTest.java
15268= org.apache.commons.math3.distribution.ExponentialDistributionTest:testCumulativeProbability2()	/src/test/java/org/apache/commons/math3/distribution/ExponentialDistributionTest.java
15269= org.apache.commons.math3.distribution.ExponentialDistributionTest:setUp()	/src/test/java/org/apache/commons/math3/distribution/ExponentialDistributionTest.java
15270= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testParsePositiveInfinity()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15271= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testForgottenSeparator()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15272= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testNan()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15273= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testSimpleWithDecimals()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15274= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:getLocale()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15275= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:getDecimalCharacter()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15276= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testParseNonDefaultSetting()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15277= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testParseSimpleWithDecimalsTrunc()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15278= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testParseNan()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15279= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testSimpleNoDecimals()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15280= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testParseNegativeAll()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15281= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testParseSimpleNoDecimals()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15282= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testParseIgnoredWhitespace()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15283= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testConstructorSingleFormat()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15284= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:Vector3DFormatAbstractTest()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15285= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testParseZeroX()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15286= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:tesNegativeInfinity()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15287= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testSimpleWithDecimalsTrunc()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15288= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testPositiveInfinity()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15289= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testForgottenSuffix()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15290= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testDefaultFormatVector3D()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15291= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testNegativeZ()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15292= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testParseNegativeX()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15293= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testParseNegativeY()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15294= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testParseNegativeInfinity()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15295= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testParseNegativeZ()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15296= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testNegativeY()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15297= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testNegativeX()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15298= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testNonDefaultSetting()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15299= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testParseSimpleWithDecimals()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15300= org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatAbstractTest:testForgottenPrefix()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java
15301= org.apache.commons.math3.exception.MaxCountExceededExceptionTest:testAccessors()	/src/test/java/org/apache/commons/math3/exception/MaxCountExceededExceptionTest.java
15302= org.apache.commons.math3.distribution.BinomialDistributionTest:testDegenerate0()	/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
15303= org.apache.commons.math3.distribution.BinomialDistributionTest:BinomialDistributionTest()	/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
15304= org.apache.commons.math3.distribution.BinomialDistributionTest:makeDensityTestPoints()	/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
15305= org.apache.commons.math3.distribution.BinomialDistributionTest:makeCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
15306= org.apache.commons.math3.distribution.BinomialDistributionTest:makeInverseCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
15307= org.apache.commons.math3.distribution.BinomialDistributionTest:testMoments()	/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
15308= org.apache.commons.math3.distribution.BinomialDistributionTest:testMath718()	/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
15309= org.apache.commons.math3.distribution.BinomialDistributionTest:makeDistribution()	/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
15310= org.apache.commons.math3.distribution.BinomialDistributionTest:makeDensityTestValues()	/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
15311= org.apache.commons.math3.distribution.BinomialDistributionTest:makeInverseCumulativeTestPoints()	/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
15312= org.apache.commons.math3.distribution.BinomialDistributionTest:makeCumulativeTestValues()	/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
15313= org.apache.commons.math3.distribution.BinomialDistributionTest:testDegenerate1()	/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
15314= org.apache.commons.math3.analysis.QuinticFunction:value(double)	/src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java
15315= org.apache.commons.math3.analysis.QuinticFunction:value(DerivativeStructure)	/src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java
15316= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testOnTwoPoints()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15317= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testOnStraightLine()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15318= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testIncreasingBandwidthIncreasesSmoothness()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15319= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testOnDistortedSine()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15320= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testOnOnePoint()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15321= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testNotAllFiniteReal2()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15322= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testNotAllFiniteReal3()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15323= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testNotAllFiniteReal1()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15324= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testNotAllFiniteReal6()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15325= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testNotAllFiniteReal4()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15326= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testCompletelyIncorrectBandwidth1()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15327= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15328= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testNotAllFiniteReal5()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15329= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testCompletelyIncorrectBandwidth2()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15330= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testUnequalSizeArguments()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15331= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:generateSineData(double[], double[], double, double)	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15332= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testEmptyData()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15333= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testNonStrictlyIncreasing2()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15334= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testInsufficientBandwidth()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15335= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testMath296withoutWeights()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15336= org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest:testNonStrictlyIncreasing1()	/src/test/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolatorTest.java
15337= org.apache.commons.math3.fraction.BigFractionFieldTest:testZero()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFieldTest.java
15338= org.apache.commons.math3.fraction.BigFractionFieldTest:testSerial()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFieldTest.java
15339= org.apache.commons.math3.fraction.BigFractionFieldTest:testOne()	/src/test/java/org/apache/commons/math3/fraction/BigFractionFieldTest.java
15340= org.apache.commons.math3.fitting.leastsquares.RandomCirclePointGenerator:RandomCirclePointGenerator(double, double, double, double, double, long)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/RandomCirclePointGenerator.java
15341= org.apache.commons.math3.fitting.leastsquares.RandomCirclePointGenerator:create()	/src/test/java/org/apache/commons/math3/fitting/leastsquares/RandomCirclePointGenerator.java
15342= org.apache.commons.math3.fitting.leastsquares.RandomCirclePointGenerator:generate(int)	/src/test/java/org/apache/commons/math3/fitting/leastsquares/RandomCirclePointGenerator.java
15343= org.apache.commons.math3.ode.nonstiff.StepProblem:resetState(double, double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/StepProblem.java
15344= org.apache.commons.math3.ode.nonstiff.StepProblem:getDimension()	/src/test/java/org/apache/commons/math3/ode/nonstiff/StepProblem.java
15345= org.apache.commons.math3.ode.nonstiff.StepProblem:setRate(double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/StepProblem.java
15346= org.apache.commons.math3.ode.nonstiff.StepProblem:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/StepProblem.java
15347= org.apache.commons.math3.ode.nonstiff.StepProblem:g(double, double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/StepProblem.java
15348= org.apache.commons.math3.ode.nonstiff.StepProblem:computeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/nonstiff/StepProblem.java
15349= org.apache.commons.math3.ode.nonstiff.StepProblem:eventOccurred(double, double[], boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/StepProblem.java
15350= org.apache.commons.math3.ode.nonstiff.StepProblem:StepProblem(double, double, double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/StepProblem.java
15351= org.apache.commons.math3.ode.TestProblem2:copy()	/src/test/java/org/apache/commons/math3/ode/TestProblem2.java
15352= org.apache.commons.math3.ode.TestProblem2:TestProblem2()	/src/test/java/org/apache/commons/math3/ode/TestProblem2.java
15353= org.apache.commons.math3.ode.TestProblem2:doComputeDerivatives(double, double[], double[])	/src/test/java/org/apache/commons/math3/ode/TestProblem2.java
15354= org.apache.commons.math3.ode.TestProblem2:TestProblem2(TestProblem2)	/src/test/java/org/apache/commons/math3/ode/TestProblem2.java
15355= org.apache.commons.math3.ode.TestProblem2:computeTheoreticalState(double)	/src/test/java/org/apache/commons/math3/ode/TestProblem2.java
15356= org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest:getExpectedValue(int)	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/LegendreParametricTest.java
15357= org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest:LegendreParametricTest(int, int, double, double)	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/LegendreParametricTest.java
15358= org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest:getParameters()	/src/test/java/org/apache/commons/math3/analysis/integration/gauss/LegendreParametricTest.java
15359= org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest:optimize(int, MultivariateDifferentiableFunction, GoalType, double[])	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableMultiStartOptimizerTest.java
15360= org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest:getConvergenceChecker()	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableMultiStartOptimizerTest.java
15361= org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest:getMaxEvaluations()	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableMultiStartOptimizerTest.java
15362= org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest:getEvaluations()	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableMultiStartOptimizerTest.java
15363= org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest:testCircleFitting()	/src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableMultiStartOptimizerTest.java
15364= org.apache.commons.math3.transform.RealTransformerAbstractTest:testTransformFunctionNotStrictlyPositiveNumberOfSamples()	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15365= org.apache.commons.math3.transform.RealTransformerAbstractTest:getValidUpperBound()	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15366= org.apache.commons.math3.transform.RealTransformerAbstractTest:testTransformFunction()	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15367= org.apache.commons.math3.transform.RealTransformerAbstractTest:doTestTransformFunction(int, double, TransformType)	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15368= org.apache.commons.math3.transform.RealTransformerAbstractTest:getRelativeTolerance(int)	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15369= org.apache.commons.math3.transform.RealTransformerAbstractTest:transform(double[], TransformType)	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15370= org.apache.commons.math3.transform.RealTransformerAbstractTest:testTransformFunctionInvalidBounds()	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15371= org.apache.commons.math3.transform.RealTransformerAbstractTest:createRealTransformer()	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15372= org.apache.commons.math3.transform.RealTransformerAbstractTest:getInvalidDataSize(int)	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15373= org.apache.commons.math3.transform.RealTransformerAbstractTest:getNumberOfValidDataSizes()	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15374= org.apache.commons.math3.transform.RealTransformerAbstractTest:testTransformRealInvalidDataSize()	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15375= org.apache.commons.math3.transform.RealTransformerAbstractTest:testTransformFunctionInvalidDataSize()	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15376= org.apache.commons.math3.transform.RealTransformerAbstractTest:doTestTransformReal(int, double, TransformType)	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15377= org.apache.commons.math3.transform.RealTransformerAbstractTest:createRealData(int)	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15378= org.apache.commons.math3.transform.RealTransformerAbstractTest:getValidLowerBound()	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15379= org.apache.commons.math3.transform.RealTransformerAbstractTest:getNumberOfInvalidDataSizes()	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15380= org.apache.commons.math3.transform.RealTransformerAbstractTest:getValidDataSize(int)	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15381= org.apache.commons.math3.transform.RealTransformerAbstractTest:testTransformReal()	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15382= org.apache.commons.math3.transform.RealTransformerAbstractTest:getValidFunction()	/src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java
15383= org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest:testExpm1Function()	/src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java
15384= org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest:testSinFunction()	/src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java
15385= org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest:testParameters()	/src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java
15386= org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest:partialerror(double, double)	/src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java
15387= org.apache.commons.math3.geometry.euclidean.oned.Euclidean1DTest:testSerialization()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Euclidean1DTest.java
15388= org.apache.commons.math3.geometry.euclidean.oned.Euclidean1DTest:testDimension()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Euclidean1DTest.java
15389= org.apache.commons.math3.geometry.euclidean.oned.Euclidean1DTest:testSubSpace()	/src/test/java/org/apache/commons/math3/geometry/euclidean/oned/Euclidean1DTest.java
15390= org.apache.commons.math3.analysis.FunctionUtilsTest:testCompose()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15391= org.apache.commons.math3.analysis.FunctionUtilsTest:testSampleWrongBounds()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15392= org.apache.commons.math3.analysis.FunctionUtilsTest:value(double[])	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15393= org.apache.commons.math3.analysis.FunctionUtilsTest:partialDerivative(int)	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15394= org.apache.commons.math3.analysis.FunctionUtilsTest:testToDifferentiableUnivariateFunction()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15395= org.apache.commons.math3.analysis.FunctionUtilsTest:testToDifferentiableMultivariateFunction()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15396= org.apache.commons.math3.analysis.FunctionUtilsTest:testSinc()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15397= org.apache.commons.math3.analysis.FunctionUtilsTest:testCombine()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15398= org.apache.commons.math3.analysis.FunctionUtilsTest:testMultiplyDifferentiable()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15399= org.apache.commons.math3.analysis.FunctionUtilsTest:testMultiply()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15400= org.apache.commons.math3.analysis.FunctionUtilsTest:testComposeDifferentiable()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15401= org.apache.commons.math3.analysis.FunctionUtilsTest:testSampleNegativeNumberOfPoints()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15402= org.apache.commons.math3.analysis.FunctionUtilsTest:gradient()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15403= org.apache.commons.math3.analysis.FunctionUtilsTest:testToMultivariateDifferentiableFunction()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15404= org.apache.commons.math3.analysis.FunctionUtilsTest:testAdd()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15405= org.apache.commons.math3.analysis.FunctionUtilsTest:value(DerivativeStructure[])	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15406= org.apache.commons.math3.analysis.FunctionUtilsTest:testSample()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15407= org.apache.commons.math3.analysis.FunctionUtilsTest:testFixingArguments()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15408= org.apache.commons.math3.analysis.FunctionUtilsTest:testSampleNullNumberOfPoints()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15409= org.apache.commons.math3.analysis.FunctionUtilsTest:testAddDifferentiable()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15410= org.apache.commons.math3.analysis.FunctionUtilsTest:testToUnivariateDifferential()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15411= org.apache.commons.math3.analysis.FunctionUtilsTest:testCollector()	/src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java
15412= org.apache.commons.math3.geometry.euclidean.threed.SubLineTest:testHalfInfiniteNeg()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
15413= org.apache.commons.math3.geometry.euclidean.threed.SubLineTest:testHalfInfinitePos()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
15414= org.apache.commons.math3.geometry.euclidean.threed.SubLineTest:testIntersectionInsideInside()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
15415= org.apache.commons.math3.geometry.euclidean.threed.SubLineTest:testIntersectionInsideBoundary()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
15416= org.apache.commons.math3.geometry.euclidean.threed.SubLineTest:testEndPoints()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
15417= org.apache.commons.math3.geometry.euclidean.threed.SubLineTest:testIntersectionNotIntersecting()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
15418= org.apache.commons.math3.geometry.euclidean.threed.SubLineTest:testNoEndPoints()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
15419= org.apache.commons.math3.geometry.euclidean.threed.SubLineTest:testNoSegments()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
15420= org.apache.commons.math3.geometry.euclidean.threed.SubLineTest:testSeveralSegments()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
15421= org.apache.commons.math3.geometry.euclidean.threed.SubLineTest:testIntersectionBoundaryBoundary()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
15422= org.apache.commons.math3.geometry.euclidean.threed.SubLineTest:testIntersectionInsideOutside()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
15423= org.apache.commons.math3.geometry.euclidean.threed.SubLineTest:testIntersectionBoundaryOutside()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
15424= org.apache.commons.math3.geometry.euclidean.threed.SubLineTest:testIntersectionOutsideOutside()	/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
15425= org.apache.commons.math3.distribution.AbstractRealDistributionTest:value(double)	/src/test/java/org/apache/commons/math3/distribution/AbstractRealDistributionTest.java
15426= org.apache.commons.math3.distribution.AbstractRealDistributionTest:density(double)	/src/test/java/org/apache/commons/math3/distribution/AbstractRealDistributionTest.java
15427= org.apache.commons.math3.distribution.AbstractRealDistributionTest:cumulativeProbability(double)	/src/test/java/org/apache/commons/math3/distribution/AbstractRealDistributionTest.java
15428= org.apache.commons.math3.distribution.AbstractRealDistributionTest:getNumericalMean()	/src/test/java/org/apache/commons/math3/distribution/AbstractRealDistributionTest.java
15429= org.apache.commons.math3.distribution.AbstractRealDistributionTest:isSupportUpperBoundInclusive()	/src/test/java/org/apache/commons/math3/distribution/AbstractRealDistributionTest.java
15430= org.apache.commons.math3.distribution.AbstractRealDistributionTest:probability(double)	/src/test/java/org/apache/commons/math3/distribution/AbstractRealDistributionTest.java
15431= org.apache.commons.math3.distribution.AbstractRealDistributionTest:getSupportUpperBound()	/src/test/java/org/apache/commons/math3/distribution/AbstractRealDistributionTest.java
15432= org.apache.commons.math3.distribution.AbstractRealDistributionTest:getSupportLowerBound()	/src/test/java/org/apache/commons/math3/distribution/AbstractRealDistributionTest.java
15433= org.apache.commons.math3.distribution.AbstractRealDistributionTest:getNumericalVariance()	/src/test/java/org/apache/commons/math3/distribution/AbstractRealDistributionTest.java
15434= org.apache.commons.math3.distribution.AbstractRealDistributionTest:testContinuous()	/src/test/java/org/apache/commons/math3/distribution/AbstractRealDistributionTest.java
15435= org.apache.commons.math3.distribution.AbstractRealDistributionTest:isSupportLowerBoundInclusive()	/src/test/java/org/apache/commons/math3/distribution/AbstractRealDistributionTest.java
15436= org.apache.commons.math3.distribution.AbstractRealDistributionTest:isSupportConnected()	/src/test/java/org/apache/commons/math3/distribution/AbstractRealDistributionTest.java
15437= org.apache.commons.math3.distribution.AbstractRealDistributionTest:testDiscontinuous()	/src/test/java/org/apache/commons/math3/distribution/AbstractRealDistributionTest.java
15438= org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest:serialization()	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54StepInterpolatorTest.java
15439= org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest:checkClone()	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54StepInterpolatorTest.java
15440= org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest:derivativesConsistency()	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54StepInterpolatorTest.java
15441= org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest:init(double, double[], double)	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54StepInterpolatorTest.java
15442= org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest:handleStep(StepInterpolator, boolean)	/src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54StepInterpolatorTest.java
15443= org.apache.commons.math3.geometry.euclidean.twod.Euclidean2DTest:testSerialization()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Euclidean2DTest.java
15444= org.apache.commons.math3.geometry.euclidean.twod.Euclidean2DTest:testSubSpace()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Euclidean2DTest.java
15445= org.apache.commons.math3.geometry.euclidean.twod.Euclidean2DTest:testDimension()	/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/Euclidean2DTest.java
15446= org.apache.commons.math3.RetryRunner:methodInvoker(FrameworkMethod, Object)	/src/test/java/org/apache/commons/math3/RetryRunner.java
15447= org.apache.commons.math3.RetryRunner:RetryRunner(Class<?>)	/src/test/java/org/apache/commons/math3/RetryRunner.java
15448= org.apache.commons.math3.RetryRunner:evaluate()	/src/test/java/org/apache/commons/math3/RetryRunner.java
15449= org.apache.commons.math3.optimization.fitting.PolynomialFitterTest:buildRandomPolynomial(int, Random)	/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
15450= org.apache.commons.math3.optimization.fitting.PolynomialFitterTest:testFit()	/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
15451= org.apache.commons.math3.optimization.fitting.PolynomialFitterTest:testMath798WithToleranceTooLow()	/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
15452= org.apache.commons.math3.optimization.fitting.PolynomialFitterTest:testNoError()	/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
15453= org.apache.commons.math3.optimization.fitting.PolynomialFitterTest:testMath798()	/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
15454= org.apache.commons.math3.optimization.fitting.PolynomialFitterTest:doMath798(DifferentiableMultivariateVectorOptimizer, int, double[])	/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
15455= org.apache.commons.math3.optimization.fitting.PolynomialFitterTest:testRedundantSolvable()	/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
15456= org.apache.commons.math3.optimization.fitting.PolynomialFitterTest:testMath798WithToleranceTooLowButNoException()	/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
15457= org.apache.commons.math3.optimization.fitting.PolynomialFitterTest:testRedundantUnsolvable()	/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
15458= org.apache.commons.math3.optimization.fitting.PolynomialFitterTest:testLargeSample()	/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
15459= org.apache.commons.math3.optimization.fitting.PolynomialFitterTest:checkUnsolvableProblem(DifferentiableMultivariateVectorOptimizer, boolean)	/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
15460= org.apache.commons.math3.optimization.fitting.PolynomialFitterTest:testSmallError()	/src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java
15461= org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest:testSample()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistributionTest.java
15462= org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest:testCumulativeProbability()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistributionTest.java
15463= org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest:testGetNumericalMean()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistributionTest.java
15464= org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest:testGetNumericalVariance()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistributionTest.java
15465= org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest:EnumeratedIntegerDistributionTest()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistributionTest.java
15466= org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest:testGetSupportLowerBound()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistributionTest.java
15467= org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest:testProbability()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistributionTest.java
15468= org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest:testGetSupportUpperBound()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistributionTest.java
15469= org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest:testIsSupportConnected()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistributionTest.java
15470= org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest:testExceptions()	/src/test/java/org/apache/commons/math3/distribution/EnumeratedIntegerDistributionTest.java
15471= org.apache.commons.math3.analysis.solvers.RiddersSolverTest:testQuinticFunction()	/src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java
15472= org.apache.commons.math3.analysis.solvers.RiddersSolverTest:testParameters()	/src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java
15473= org.apache.commons.math3.analysis.solvers.RiddersSolverTest:testSinFunction()	/src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java
15474= org.apache.commons.math3.analysis.solvers.RiddersSolverTest:testExpm1Function()	/src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java
