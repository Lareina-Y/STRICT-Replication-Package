Object eval Call Stack CallStack callstack Interpreter interpreter Eval Error EvalError Object lhs Simple Node SimpleNode jjt Get Child jjtGetChild eval callstack interpreter node type kind object instance type lhs Primitive Primitive rhs BSHType jjt Get Child jjtGetChild get Type getType callstack interpreter Primitive number internal test bsh Primitive bsh Primitive lhs Primitive rhs org gjt jedit bsh Primitive Primitive Primitive General performe based assignability ret Types is Java Base Assignable isJavaBaseAssignable rhs lhs get Class getClass Primitive ret circuit evaluation rhs lhs kind BOOL kind BOOL ANDX Object obj lhs is Primitive Value isPrimitiveValue lhs obj Primitive lhs get Value getValue obj obj boolean Value booleanValue Primitive circuit evaluation rhs lhs kind BOOL kind BOOL ORX Object obj lhs is Primitive Value isPrimitiveValue lhs obj Primitive lhs get Value getValue obj obj boolean Value booleanValue Primitive stuff tacked circuiting lhs rhs wrappers primitive values binary is Lhs Wrapper isLhsWrapper is Wrapper isWrapper lhs Object rhs Simple Node SimpleNode jjt Get Child jjtGetChild eval callstack interpreter is Rhs Wrapper isRhsWrapper is Wrapper isWrapper rhs is Lhs Wrapper isLhsWrapper is Primitive Value isPrimitiveValue lhs is Rhs Wrapper isRhsWrapper is Primitive Value isPrimitiveValue rhs Special wrapper objects is Lhs Wrapper isLhsWrapper is Rhs Wrapper isRhsWrapper kind Don auto unwrap wrappers preserve identity semantics FALL OBJECT OPERATIONS Primitive binary Operation binaryOperation lhs rhs kind Util Eval Error UtilEvalError to Eval Error toEvalError callstack System println binary arbitrary obj lhs rhs kind Primitive lhs rhs Primitive lhs rhs lhs String rhs String lhs to String toString rhs to String toString lhs Primitive rhs Primitive lhs Primitive rhs Primitive Eval Error EvalError illegal undefined variable literal callstack lhs Primitive rhs Primitive Eval Error EvalError illegal literal callstack Eval Error EvalError token Image tokenImage kind inappropriate objects callstack