LHS to LHS toLHS Call Stack CallStack callstack Interpreter interpreter Util Eval Error UtilEvalError clean single statement reset LHS lhs Simple compound variable assignment is Compound isCompound eval Name evalName eval Name evalName equals Util Eval Error UtilEvalError assign Interpreter debug Simple LHS lhs LHS namespace eval Name evalName bubble allowed lhs Field foo bar Object obj eval Name evalName is Compound isCompound eval Name evalName obj consume Next Object Field consumeNextObjectField callstack interpreter forcclass autoallocthis Util Eval Error UtilEvalError Util Eval Error UtilEvalError LHS evaluation get Message getMessage Finished eval eval Name evalName obj Class Identifier ClassIdentifier Util Eval Error UtilEvalError assign obj Util Eval Error UtilEvalError Error LHS some This Type someThisType obj dissallow assignment magic fields eval Name evalName equals namespace eval Name evalName equals variables eval Name evalName equals methods eval Name evalName equals caller Util Eval Error UtilEvalError assign special variable eval Name evalName Interpreter debug reference evaluating LHS literal reference recursion setting variable normal finding nearest definition starting scope resolution qualified type reference set variable scope some This Type someThisType scoping rules didn local Var localVar last Eval Name lastEvalName equals LHS obj namespace eval Name evalName local Var localVar eval Name evalName obj Class Identifier ClassIdentifier clas Class Identifier ClassIdentifier obj get Target Class getTargetClass lhs Reflect get LHSStatic Field getLHSStaticField clas eval Name evalName lhs lhs Reflect get LHSObject Field getLHSObjectField obj eval Name evalName lhs Reflect Error ReflectError Util Eval Error UtilEvalError Field access Interpreter Error InterpreterError Internal error lhs