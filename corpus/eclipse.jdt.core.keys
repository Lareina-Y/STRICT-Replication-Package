1=AssignmentTest:test003()
2=AssignmentTest:test049()
3=AssignmentTest:test056_definite_unassignment_infinite_for_loop()
4=AssignmentTest:test001()
5=AssignmentTest:test041()
6=AssignmentTest:test064()
7=AssignmentTest:test020()
8=AssignmentTest:test043()
9=AssignmentTest:test062()
10=AssignmentTest:test045()
11=AssignmentTest:test068()
12=AssignmentTest:test005()
13=AssignmentTest:test047()
14=AssignmentTest:test066()
15=AssignmentTest:test050()
16=AssignmentTest:testBug486908_B()
17=AssignmentTest:test058_definite_unassignment_try_finally()
18=AssignmentTest:test037()
19=AssignmentTest:test057_definite_unassignment_infinite_while_loop()
20=AssignmentTest:_test048()
21=AssignmentTest:test039()
22=AssignmentTest:test052()
23=AssignmentTest:test033()
24=AssignmentTest:test059_definite_unassignment_assign_in_for_condition()
25=AssignmentTest:test035()
26=AssignmentTest:test061()
27=AssignmentTest:test055_definite_unassignment_try_catch()
28=AssignmentTest:testbug480989()
29=AssignmentTest:test060_definite_unassignment_assign_in_for_condition()
30=AssignmentTest:test002()
31=AssignmentTest:testClass()
32=AssignmentTest:test040()
33=AssignmentTest:test065()
34=AssignmentTest:getCompilerOptions()
35=AssignmentTest:test042()
36=AssignmentTest:test063()
37=AssignmentTest:test044()
38=AssignmentTest:test004()
39=AssignmentTest:test046()
40=AssignmentTest:test067()
41=AssignmentTest:testBug486908_A()
42=AssignmentTest:test038()
43=AssignmentTest:test051()
44=AssignmentTest:test053()
45=AssignmentTest:test034()
46=AssignmentTest:test036()
47=AssignmentTest:AssignmentTest(String)
48=AssignmentTest:_test054_definite_unassignment_try_catch()
49=AssignmentTest:suite()
50=X:X()
51=F:G:m()
52=ConverterTestSetup:runJLS8Conversion(ICompilationUnit, boolean, boolean, boolean)
53=ConverterTestSetup:NullBindingVerifier:endVisit(ParenthesizedExpression)
54=ConverterTestSetup:NullBindingVerifier:endVisit(PrefixExpression)
55=ConverterTestSetup:tearDownSuite()
56=ConverterTestSetup:NullBindingVerifier:endVisit(ArrayInitializer)
57=ConverterTestSetup:runConversion(ICompilationUnit, boolean)
58=ConverterTestSetup:assertExtraDimensionsEqual(String, List, String)
59=ConverterTestSetup:NullBindingVerifier:endVisit(ThisExpression)
60=ConverterTestSetup:assertProblemsSize(CompilationUnit, int, String)
61=ConverterTestSetup:NullBindingVerifier:endVisit(CharacterLiteral)
62=ConverterTestSetup:NullBindingVerifier:endVisit(StringLiteral)
63=ConverterTestSetup:NullBindingVerifier:endVisit(MethodRef)
64=ConverterTestSetup:NullBindingVerifier:endVisit(QualifiedType)
65=ConverterTestSetup:runConversion(int, ICompilationUnit, int, boolean)
66=ConverterTestSetup:convertAnnotationsList(List)
67=ConverterTestSetup:NullBindingVerifier:endVisit(MemberRef)
68=ConverterTestSetup:runConversion(int, ICompilationUnit, boolean, boolean)
69=ConverterTestSetup:NullBindingVerifier:endVisit(QualifiedName)
70=ConverterTestSetup:checkSourceRange(int, int, String, String)
71=ConverterTestSetup:getASTNode(org.eclipse.jdt.core.dom.CompilationUnit, int)
72=ConverterTestSetup:NullBindingVerifier:endVisit(PostfixExpression)
73=ConverterTestSetup:NullBindingVerifier:endVisit(Assignment)
74=ConverterTestSetup:getConverterJCLSourcePath(String)
75=ConverterTestSetup:runConversion(char[], String, IJavaProject, Map<String, String>, boolean)
76=ConverterTestSetup:getJLS3()
77=ConverterTestSetup:getASTNodeToCompare(org.eclipse.jdt.core.dom.CompilationUnit)
78=ConverterTestSetup:NullBindingVerifier:endVisit(ClassInstanceCreation)
79=ConverterTestSetup:setUpJCLClasspathVariables(String, boolean)
80=ConverterTestSetup:NullBindingVerifier:endVisit(EnumDeclaration)
81=ConverterTestSetup:checkSourceRange(ASTNode, String, String)
82=ConverterTestSetup:NullBindingVerifier:endVisit(FieldAccess)
83=ConverterTestSetup:runConversion(int, char[], String, IJavaProject, Map<String, String>)
84=ConverterTestSetup:runConversion(int, char[], String, IJavaProject)
85=ConverterTestSetup:NullBindingVerifier:endVisit(AnonymousClassDeclaration)
86=ConverterTestSetup:runConversion(char[], String, IJavaProject, boolean)
87=ConverterTestSetup:NullBindingVerifier:endVisit(MethodInvocation)
88=ConverterTestSetup:NullBindingVerifier:endVisit(AnnotationTypeDeclaration)
89=ConverterTestSetup:NullBindingVerifier:endVisit(MethodDeclaration)
90=ConverterTestSetup:runConversion(int, ICompilationUnit, boolean, boolean, boolean)
91=ConverterTestSetup:NullBindingVerifier:endVisit(VariableDeclarationFragment)
92=ConverterTestSetup:runConversion(int, IClassFile, int, boolean)
93=ConverterTestSetup:NullBindingVerifier:endVisit(InstanceofExpression)
94=ConverterTestSetup:runConversion(IClassFile, int, boolean)
95=ConverterTestSetup:checkProblemMessages(String, IProblem[], int)
96=ConverterTestSetup:getConverterJCLPath()
97=ConverterTestSetup:runJLS3Conversion(ICompilationUnit, boolean, boolean)
98=ConverterTestSetup:NullBindingVerifier:endVisit(PackageDeclaration)
99=ConverterTestSetup:NullBindingVerifier:endVisit(NormalAnnotation)
100=ConverterTestSetup:assertProblemsSize(CompilationUnit, int)
101=ConverterTestSetup:setUpSuite()
102=ConverterTestSetup:NullBindingVerifier:endVisit(InfixExpression)
103=ConverterTestSetup:checkSourceRange(ASTNode, String, char[])
104=ConverterTestSetup:runConversion(int, ICompilationUnit, boolean)
105=ConverterTestSetup:NullBindingVerifier:endVisit(TypeLiteral)
106=ConverterTestSetup:NullBindingVerifier:endVisit(NullLiteral)
107=ConverterTestSetup:getJLS4()
108=ConverterTestSetup:NullBindingVerifier:endVisit(TypeParameter)
109=ConverterTestSetup:runJLS4Conversion(ICompilationUnit, boolean, boolean)
110=ConverterTestSetup:runConversion(ICompilationUnit, boolean, boolean)
111=ConverterTestSetup:NullBindingVerifier:endVisit(ConditionalExpression)
112=ConverterTestSetup:NullBindingVerifier:endVisit(TypeDeclarationStatement)
113=ConverterTestSetup:NullBindingVerifier:endVisit(ArrayType)
114=ConverterTestSetup:NullBindingVerifier:endVisit(AnnotationTypeMemberDeclaration)
115=ConverterTestSetup:runJLS8Conversion(ICompilationUnit, boolean, boolean)
116=ConverterTestSetup:runConversion(int, char[], String, IJavaProject, Map<String, String>, boolean)
117=ConverterTestSetup:NullBindingVerifier:endVisit(SimpleName)
118=ConverterTestSetup:checkSourceRange(ASTNode, String, char[], boolean)
119=ConverterTestSetup:runConversion(char[], String, IJavaProject)
120=ConverterTestSetup:NullBindingVerifier:endVisit(ImportDeclaration)
121=ConverterTestSetup:runConversion(ICompilationUnit, int, boolean)
122=ConverterTestSetup:runConversion(int, char[], String, IJavaProject, boolean)
123=ConverterTestSetup:NullBindingVerifier:endVisit(SingleMemberAnnotation)
124=ConverterTestSetup:NullBindingVerifier:endVisit(WildcardType)
125=ConverterTestSetup:NullBindingVerifier:endVisit(NumberLiteral)
126=ConverterTestSetup:NullBindingVerifier:endVisit(SingleVariableDeclaration)
127=ConverterTestSetup:getConverterJCLSourcePath()
128=ConverterTestSetup:NullBindingVerifier:endVisit(ParameterizedType)
129=ConverterTestSetup:isMalformed(ASTNode)
130=ConverterTestSetup:isOriginal(ASTNode)
131=ConverterTestSetup:ConverterTestSetup(String)
132=ConverterTestSetup:NullBindingVerifier:endVisit(SimpleType)
133=ConverterTestSetup:NullBindingVerifier:endVisit(PrimitiveType)
134=ConverterTestSetup:runJLS3Conversion(ICompilationUnit, boolean, boolean, boolean)
135=ConverterTestSetup:getConverterJCLPath(String)
136=ConverterTestSetup:getASTNode(org.eclipse.jdt.core.dom.CompilationUnit, int, int)
137=ConverterTestSetup:runConversion(char[], String, IJavaProject, Map<String, String>)
138=ConverterTestSetup:NullBindingVerifier:endVisit(MarkerAnnotation)
139=ConverterTestSetup:NullBindingVerifier:endVisit(SuperMethodInvocation)
140=ConverterTestSetup:NullBindingVerifier:endVisit(TypeDeclaration)
141=ConverterTestSetup:NullBindingVerifier:endVisit(VariableDeclarationExpression)
142=ConverterTestSetup:NullBindingVerifier:endVisit(BooleanLiteral)
143=ConverterTestSetup:getConverterJCLRootSourcePath()
144=ConverterTestSetup:runJLS4Conversion(ICompilationUnit, boolean, boolean, boolean)
145=ConverterTestSetup:isRecovered(ASTNode)
146=ConverterTestSetup:getASTNode(org.eclipse.jdt.core.dom.CompilationUnit, int, int, int)
147=ConverterTestSetup:NullBindingVerifier:endVisit(CastExpression)
148=ConverterTestSetup:NullBindingVerifier:endVisit(SuperFieldAccess)
149=ConverterTestSetup:NullBindingVerifier:endVisit(ArrayCreation)
150=ConverterTestSetup:NullBindingVerifier:endVisit(ArrayAccess)
151=A:actionPerformed(ActionEvent)
152=A:foo(Object, A)
153=MethodVerifyTest:test040c()
154=MethodVerifyTest:testBug384580()
155=MethodVerifyTest:test132()
156=MethodVerifyTest:test155()
157=MethodVerifyTest:test178()
158=MethodVerifyTest:test007f()
159=MethodVerifyTest:test015a()
160=MethodVerifyTest:test051b()
161=MethodVerifyTest:test011()
162=MethodVerifyTest:test057()
163=MethodVerifyTest:test034()
164=MethodVerifyTest:test038a()
165=MethodVerifyTest:test074b()
166=MethodVerifyTest:testBug438812()
167=MethodVerifyTest:test085b()
168=MethodVerifyTest:test331446()
169=MethodVerifyTest:test027b()
170=MethodVerifyTest:test120()
171=MethodVerifyTest:test143()
172=MethodVerifyTest:test189()
173=MethodVerifyTest:test166()
174=MethodVerifyTest:test353089c()
175=MethodVerifyTest:test016b()
176=MethodVerifyTest:test022()
177=MethodVerifyTest:test045()
178=MethodVerifyTest:test068()
179=MethodVerifyTest:test073a()
180=MethodVerifyTest:test084a()
181=MethodVerifyTest:test354229b()
182=MethodVerifyTest:test007e()
183=MethodVerifyTest:test040b()
184=MethodVerifyTest:test131()
185=MethodVerifyTest:test049a()
186=MethodVerifyTest:test154()
187=MethodVerifyTest:test177()
188=MethodVerifyTest:testClass()
189=MethodVerifyTest:test334306()
190=MethodVerifyTest:test010()
191=MethodVerifyTest:test033()
192=MethodVerifyTest:test056()
193=MethodVerifyTest:test079()
194=MethodVerifyTest:test085c()
195=MethodVerifyTest:test041d()
196=MethodVerifyTest:test043g()
197=MethodVerifyTest:test027a()
198=MethodVerifyTest:suite()
199=MethodVerifyTest:test142()
200=MethodVerifyTest:test165()
201=MethodVerifyTest:test188()
202=MethodVerifyTest:test050a()
203=MethodVerifyTest:test021()
204=MethodVerifyTest:test067()
205=MethodVerifyTest:test044()
206=MethodVerifyTest:test073b()
207=MethodVerifyTest:test007d()
208=MethodVerifyTest:test157()
209=MethodVerifyTest:test111()
210=MethodVerifyTest:test040a()
211=MethodVerifyTest:test134()
212=MethodVerifyTest:test036()
213=MethodVerifyTest:test059()
214=MethodVerifyTest:test013()
215=MethodVerifyTest:test043f()
216=MethodVerifyTest:test122()
217=MethodVerifyTest:test168()
218=MethodVerifyTest:test041c()
219=MethodVerifyTest:test145()
220=MethodVerifyTest:test052a()
221=MethodVerifyTest:test047()
222=MethodVerifyTest:test054d()
223=MethodVerifyTest:test075b()
224=MethodVerifyTest:test001()
225=MethodVerifyTest:test024()
226=MethodVerifyTest:test007c()
227=MethodVerifyTest:test179()
228=MethodVerifyTest:test110()
229=MethodVerifyTest:test086b()
230=MethodVerifyTest:test133()
231=MethodVerifyTest:testBug411811()
232=MethodVerifyTest:test156()
233=MethodVerifyTest:test017a()
234=MethodVerifyTest:test058()
235=MethodVerifyTest:test074a()
236=MethodVerifyTest:test051a()
237=MethodVerifyTest:test035()
238=MethodVerifyTest:test012()
239=MethodVerifyTest:test043e()
240=MethodVerifyTest:test121()
241=MethodVerifyTest:testBug409473()
242=MethodVerifyTest:test041b()
243=MethodVerifyTest:test144()
244=MethodVerifyTest:test167()
245=MethodVerifyTest:test069()
246=MethodVerifyTest:test046()
247=MethodVerifyTest:test353089b()
248=MethodVerifyTest:testBug415600()
249=MethodVerifyTest:test023()
250=MethodVerifyTest:test036b()
251=MethodVerifyTest:test053()
252=MethodVerifyTest:test099()
253=MethodVerifyTest:test030()
254=MethodVerifyTest:test013b()
255=MethodVerifyTest:test015e()
256=MethodVerifyTest:test197()
257=MethodVerifyTest:test024a()
258=MethodVerifyTest:test151()
259=MethodVerifyTest:test174()
260=MethodVerifyTest:test207()
261=MethodVerifyTest:test001a()
262=MethodVerifyTest:test003d()
263=MethodVerifyTest:test076()
264=MethodVerifyTest:test346029e()
265=MethodVerifyTest:test041()
266=MethodVerifyTest:test060b()
267=MethodVerifyTest:test064()
268=MethodVerifyTest:test087()
269=MethodVerifyTest:test035a()
270=MethodVerifyTest:test109()
271=MethodVerifyTest:test037d()
272=MethodVerifyTest:test014c()
273=MethodVerifyTest:test048b()
274=MethodVerifyTest:test050d()
275=MethodVerifyTest:test185()
276=MethodVerifyTest:test213b()
277=MethodVerifyTest:test025c()
278=MethodVerifyTest:test162()
279=MethodVerifyTest:test002b()
280=MethodVerifyTest:test052()
281=MethodVerifyTest:test075()
282=MethodVerifyTest:test098()
283=MethodVerifyTest:test013a()
284=MethodVerifyTest:test015d()
285=MethodVerifyTest:test150()
286=MethodVerifyTest:test196()
287=MethodVerifyTest:test206()
288=MethodVerifyTest:test026c()
289=MethodVerifyTest:test173()
290=MethodVerifyTest:test003c()
291=MethodVerifyTest:test036a()
292=MethodVerifyTest:test346029f()
293=MethodVerifyTest:test108()
294=MethodVerifyTest:test058a()
295=MethodVerifyTest:test063()
296=MethodVerifyTest:test037c()
297=MethodVerifyTest:test040()
298=MethodVerifyTest:test060c()
299=MethodVerifyTest:test014b()
300=MethodVerifyTest:test213c()
301=MethodVerifyTest:testBug461529()
302=MethodVerifyTest:test048c()
303=MethodVerifyTest:test050e()
304=MethodVerifyTest:test161()
305=MethodVerifyTest:test184()
306=MethodVerifyTest:test025b()
307=MethodVerifyTest:test330264()
308=MethodVerifyTest:test002a()
309=MethodVerifyTest:test086()
310=MethodVerifyTest:test084b()
311=MethodVerifyTest:getCompilerOptions()
312=MethodVerifyTest:test015c()
313=MethodVerifyTest:test120a()
314=MethodVerifyTest:test326354()
315=MethodVerifyTest:test026b()
316=MethodVerifyTest:test153()
317=MethodVerifyTest:test176()
318=MethodVerifyTest:test199()
319=MethodVerifyTest:test130()
320=MethodVerifyTest:test209()
321=MethodVerifyTest:test003b()
322=MethodVerifyTest:test032()
323=MethodVerifyTest:test078()
324=MethodVerifyTest:test055()
325=MethodVerifyTest:test020()
326=MethodVerifyTest:test089()
327=MethodVerifyTest:test025a()
328=MethodVerifyTest:test164()
329=MethodVerifyTest:test187()
330=MethodVerifyTest:test073c()
331=MethodVerifyTest:test050b()
332=MethodVerifyTest:test141()
333=MethodVerifyTest:test027d()
334=MethodVerifyTest:test346029()
335=MethodVerifyTest:MethodVerifyTest(String)
336=MethodVerifyTest:test014a()
337=MethodVerifyTest:test037b()
338=MethodVerifyTest:test043()
339=MethodVerifyTest:test066()
340=MethodVerifyTest:test059a()
341=MethodVerifyTest:test031()
342=MethodVerifyTest:test040d()
343=MethodVerifyTest:testBug426546()
344=MethodVerifyTest:test003a()
345=MethodVerifyTest:test026a()
346=MethodVerifyTest:test175()
347=MethodVerifyTest:test198()
348=MethodVerifyTest:testBug500673()
349=MethodVerifyTest:test152()
350=MethodVerifyTest:test208()
351=MethodVerifyTest:testBug467776_regression()
352=MethodVerifyTest:test015b()
353=MethodVerifyTest:test054()
354=MethodVerifyTest:test077()
355=MethodVerifyTest:test042()
356=MethodVerifyTest:test088()
357=MethodVerifyTest:test027c()
358=MethodVerifyTest:test048a()
359=MethodVerifyTest:test186()
360=MethodVerifyTest:test213a()
361=MethodVerifyTest:test073d()
362=MethodVerifyTest:test050c()
363=MethodVerifyTest:test140()
364=MethodVerifyTest:test163()
365=MethodVerifyTest:testBug438812a()
366=MethodVerifyTest:test037a()
367=MethodVerifyTest:test065()
368=MethodVerifyTest:test009a()
369=MethodVerifyTest:test034c()
370=MethodVerifyTest:test072()
371=MethodVerifyTest:test117()
372=MethodVerifyTest:test036f()
373=MethodVerifyTest:test044a()
374=MethodVerifyTest:test001e()
375=MethodVerifyTest:test193()
376=MethodVerifyTest:test019()
377=MethodVerifyTest:testBug317719c()
378=MethodVerifyTest:test170()
379=MethodVerifyTest:test331446c()
380=MethodVerifyTest:test204a()
381=MethodVerifyTest:test203()
382=MethodVerifyTest:testBug469454a()
383=MethodVerifyTest:test128()
384=MethodVerifyTest:test060()
385=MethodVerifyTest:test331446d()
386=MethodVerifyTest:test1415Mix2()
387=MethodVerifyTest:test105()
388=MethodVerifyTest:test043_1()
389=MethodVerifyTest:test048f()
390=MethodVerifyTest:test007()
391=MethodVerifyTest:test050h()
392=MethodVerifyTest:test181()
393=MethodVerifyTest:test083()
394=MethodVerifyTest:test011b()
395=MethodVerifyTest:test013e()
396=MethodVerifyTest:test034b()
397=MethodVerifyTest:test036e()
398=MethodVerifyTest:test071()
399=MethodVerifyTest:test139()
400=MethodVerifyTest:test124b()
401=MethodVerifyTest:test329584()
402=MethodVerifyTest:test050j()
403=MethodVerifyTest:test116()
404=MethodVerifyTest:test001d()
405=MethodVerifyTest:test022a()
406=MethodVerifyTest:test018()
407=MethodVerifyTest:test192()
408=MethodVerifyTest:testBug317719d()
409=MethodVerifyTest:test346029b()
410=MethodVerifyTest:test094()
411=MethodVerifyTest:test202()
412=MethodVerifyTest:testBug317719()
413=MethodVerifyTest:test033a()
414=MethodVerifyTest:test104()
415=MethodVerifyTest:test127()
416=MethodVerifyTest:test002e()
417=MethodVerifyTest:test048g()
418=MethodVerifyTest:test050i()
419=MethodVerifyTest:test180()
420=MethodVerifyTest:test029()
421=MethodVerifyTest:test025f()
422=MethodVerifyTest:test006()
423=MethodVerifyTest:test082()
424=MethodVerifyTest:test011a()
425=MethodVerifyTest:test034a()
426=MethodVerifyTest:test074()
427=MethodVerifyTest:test119()
428=MethodVerifyTest:test036d()
429=MethodVerifyTest:test051()
430=MethodVerifyTest:test013d()
431=MethodVerifyTest:test172()
432=MethodVerifyTest:test195()
433=MethodVerifyTest:test205()
434=MethodVerifyTest:test331446a()
435=MethodVerifyTest:test001c()
436=MethodVerifyTest:testBug317719a()
437=MethodVerifyTest:test346029c()
438=MethodVerifyTest:testBug406928()
439=MethodVerifyTest:test057a()
440=MethodVerifyTest:test097()
441=MethodVerifyTest:test353089()
442=MethodVerifyTest:test012b()
443=MethodVerifyTest:test062()
444=MethodVerifyTest:test107()
445=MethodVerifyTest:mustOverrideMessage(String, String)
446=MethodVerifyTest:test014e()
447=MethodVerifyTest:test332744()
448=MethodVerifyTest:test025e()
449=MethodVerifyTest:test048d()
450=MethodVerifyTest:test160()
451=MethodVerifyTest:test183()
452=MethodVerifyTest:test002d()
453=MethodVerifyTest:test009()
454=MethodVerifyTest:test050f()
455=MethodVerifyTest:test058b()
456=MethodVerifyTest:test085()
457=MethodVerifyTest:test036c()
458=MethodVerifyTest:test328827()
459=MethodVerifyTest:test050()
460=MethodVerifyTest:test073()
461=MethodVerifyTest:test118()
462=MethodVerifyTest:test013c()
463=MethodVerifyTest:test171()
464=MethodVerifyTest:test024b()
465=MethodVerifyTest:test194()
466=MethodVerifyTest:test003e()
467=MethodVerifyTest:test001b()
468=MethodVerifyTest:test331446b()
469=MethodVerifyTest:testBug317719b()
470=MethodVerifyTest:testBug469454()
471=MethodVerifyTest:test346029d()
472=MethodVerifyTest:testBug355838()
473=MethodVerifyTest:test096()
474=MethodVerifyTest:test204()
475=MethodVerifyTest:test037e()
476=MethodVerifyTest:test012a()
477=MethodVerifyTest:test106()
478=MethodVerifyTest:test129()
479=MethodVerifyTest:test061()
480=MethodVerifyTest:test014d()
481=MethodVerifyTest:test288658()
482=MethodVerifyTest:test025d()
483=MethodVerifyTest:test048e()
484=MethodVerifyTest:test182()
485=MethodVerifyTest:test008()
486=MethodVerifyTest:test050g()
487=MethodVerifyTest:test002c()
488=MethodVerifyTest:test084()
489=MethodVerifyTest:test007b()
490=MethodVerifyTest:test136()
491=MethodVerifyTest:test159()
492=MethodVerifyTest:test113()
493=MethodVerifyTest:testBug317719g()
494=MethodVerifyTest:test015()
495=MethodVerifyTest:test354229()
496=MethodVerifyTest:test076a()
497=MethodVerifyTest:test091()
498=MethodVerifyTest:test038()
499=MethodVerifyTest:test041a()
500=MethodVerifyTest:test043d()
501=MethodVerifyTest:test101()
502=MethodVerifyTest:test147()
503=MethodVerifyTest:test330435()
504=MethodVerifyTest:test124()
505=MethodVerifyTest:test003()
506=MethodVerifyTest:test026()
507=MethodVerifyTest:test049()
508=MethodVerifyTest:test054b()
509=MethodVerifyTest:test211()
510=MethodVerifyTest:test007a()
511=MethodVerifyTest:test112()
512=MethodVerifyTest:test135()
513=MethodVerifyTest:test158()
514=MethodVerifyTest:test330445()
515=MethodVerifyTest:test329588()
516=MethodVerifyTest:testBug317719h()
517=MethodVerifyTest:test037()
518=MethodVerifyTest:test090()
519=MethodVerifyTest:test014()
520=MethodVerifyTest:test076b()
521=MethodVerifyTest:test342819()
522=MethodVerifyTest:test100()
523=MethodVerifyTest:test123()
524=MethodVerifyTest:test146()
525=MethodVerifyTest:test169()
526=MethodVerifyTest:test043c()
527=MethodVerifyTest:test332744b()
528=MethodVerifyTest:test345949a()
529=MethodVerifyTest:test054c()
530=MethodVerifyTest:test025()
531=MethodVerifyTest:test048()
532=MethodVerifyTest:test210()
533=MethodVerifyTest:test075a()
534=MethodVerifyTest:test002()
535=MethodVerifyTest:test032b()
536=MethodVerifyTest:test354229c()
537=MethodVerifyTest:testBug410325()
538=MethodVerifyTest:test070()
539=MethodVerifyTest:test050k()
540=MethodVerifyTest:test044c()
541=MethodVerifyTest:test138()
542=MethodVerifyTest:test115()
543=MethodVerifyTest:testBug317719e()
544=MethodVerifyTest:test191()
545=MethodVerifyTest:test423849()
546=MethodVerifyTest:test017()
547=MethodVerifyTest:test208a()
548=MethodVerifyTest:test093()
549=MethodVerifyTest:test201()
550=MethodVerifyTest:test043b()
551=MethodVerifyTest:test149()
552=MethodVerifyTest:test103()
553=MethodVerifyTest:test077a()
554=MethodVerifyTest:test1415Mix()
555=MethodVerifyTest:test005()
556=MethodVerifyTest:test028()
557=MethodVerifyTest:test081()
558=MethodVerifyTest:test169a()
559=MethodVerifyTest:test213()
560=MethodVerifyTest:test032a()
561=MethodVerifyTest:test036g()
562=MethodVerifyTest:test034d()
563=MethodVerifyTest:test354229d()
564=MethodVerifyTest:test050l()
565=MethodVerifyTest:test137()
566=MethodVerifyTest:test044b()
567=MethodVerifyTest:test114()
568=MethodVerifyTest:testBug317719f()
569=MethodVerifyTest:test288658a()
570=MethodVerifyTest:test190()
571=MethodVerifyTest:test039()
572=MethodVerifyTest:test092()
573=MethodVerifyTest:test016()
574=MethodVerifyTest:test200()
575=MethodVerifyTest:test148()
576=MethodVerifyTest:test043a()
577=MethodVerifyTest:test102()
578=MethodVerifyTest:test125()
579=MethodVerifyTest:test339447()
580=MethodVerifyTest:test004()
581=MethodVerifyTest:test080()
582=MethodVerifyTest:test322740()
583=MethodVerifyTest:test027()
584=MethodVerifyTest:test212()
585=MethodVerifyTest:test054a()
586=Example:foo()
587=NameMatchRequestorWrapper:NameMatchRequestorWrapper(IJavaSearchScope)
588=NameMatchRequestorWrapper:createTypeFromJar(String, int)
589=NameMatchRequestorWrapper:getType(int, char[], char[], char[][], String, AccessRestriction)
590=NameMatchRequestorWrapper:createTypeFromPath(String, String, char[][])
591=AbstractRegressionTest:checkClassFile(String, String, String)
592=AbstractRegressionTest:runJavac(String, String[], String)
593=AbstractRegressionTest:runNegativeTest(String[], String, String[], boolean, Map, boolean, boolean, boolean, boolean, JavacTestOptions, boolean)
594=AbstractRegressionTest:runConformTest(boolean, JavacTestOptions, String[], String)
595=AbstractRegressionTest:runTest(boolean, String[], String[], String[], Map, boolean, ICompilerRequestor, boolean, String, String[], boolean, String[], String, String, ASTVisitor, JavacTestOptions)
596=AbstractRegressionTest:runNegativeTest(String[], String, String[], boolean)
597=AbstractRegressionTest:runNegativeTest(String[], String, String[], boolean, Map, String, JavacTestOptions)
598=AbstractRegressionTest:setUp()
599=AbstractRegressionTest:printJavacResultsSummary()
600=AbstractRegressionTest:runConformTest(boolean, String[], String, String, String, JavacTestOptions)
601=AbstractRegressionTest:getAnnotationProcessorManager(Compiler)
602=AbstractRegressionTest:runNegativeTest(boolean, JavacTestOptions, String[], String, String[], boolean, Map)
603=AbstractRegressionTest:getProblemFactory()
604=AbstractRegressionTest:getClassLibs(boolean)
605=AbstractRegressionTest:runConformTest(String[], Map)
606=AbstractRegressionTest:checkCompilerLog(String[], Requestor, String[], Throwable)
607=AbstractRegressionTest:findReferences(String)
608=AbstractRegressionTest:runNegativeTest(String[], String, String[], boolean, Map, boolean, boolean, boolean)
609=AbstractRegressionTest:runConformTest(String[], String, String[], boolean, String[], Map, ICompilerRequestor, boolean, JavacTestOptions)
610=AbstractRegressionTest:runJavac(String[], boolean, String, String, String, boolean, JavacTestOptions, String[])
611=AbstractRegressionTest:getInternalClassFile(String, String, String, String)
612=AbstractRegressionTest:runConformTest(String[], String)
613=AbstractRegressionTest:DummyAnnotationProcessingManager:processAnnotations(CompilationUnitDeclaration[], ReferenceBinding[], boolean)
614=AbstractRegressionTest:runConformTest(String[], ASTVisitor)
615=AbstractRegressionTest:JavacTestOptions:excuseFor(JavacCompiler)
616=AbstractRegressionTest:Logger:run()
617=AbstractRegressionTest:runNegativeTest(boolean, JavacTestOptions, String[], String, boolean)
618=AbstractRegressionTest:JavacTestOptions:skip(JavacCompiler)
619=AbstractRegressionTest:JavaRuntime:JavaRuntime(String, String, String, int)
620=AbstractRegressionTest:dualPrintln(String)
621=AbstractRegressionTest:runNegativeTestMultiResult(String[], Map, String[])
622=AbstractRegressionTest:removeTempClass(String)
623=AbstractRegressionTest:DummyAnnotationProcessingManager:discoverNextProcessor()
624=AbstractRegressionTest:JavacCompiler:minorFromRawVersion(String, String)
625=AbstractRegressionTest:executeClass(String, String, String[], boolean, String[], Map, ICompilerRequestor)
626=AbstractRegressionTest:initialize(CompilerTestSetup)
627=AbstractRegressionTest:JavacTestOptions:JavacTestOptions()
628=AbstractRegressionTest:runConformTest(String[], String, String[], boolean, String[], Map, ICompilerRequestor, boolean)
629=AbstractRegressionTest:Logger:Logger(InputStream, String, StringBuffer)
630=AbstractRegressionTest:runNegativeTest(String[], String, JavacTestOptions)
631=AbstractRegressionTest:runConformTest(String[])
632=AbstractRegressionTest:getCompilerOptions()
633=AbstractRegressionTest:runConformTest(String[], JavacTestOptions)
634=AbstractRegressionTest:runNegativeTest(String[], String, String[], boolean, Map)
635=AbstractRegressionTest:runNegativeTest(String[], String, boolean)
636=AbstractRegressionTest:tearDown()
637=AbstractRegressionTest:runNegativeTest(String[], String)
638=AbstractRegressionTest:JavacCompiler:compile(File, String, String[], StringBuffer)
639=AbstractRegressionTest:runConformTest(String[], String, String[], boolean, String[], Map, ICompilerRequestor)
640=AbstractRegressionTest:DummyAnnotationProcessingManager:reportProcessorException(Processor, Exception)
641=AbstractRegressionTest:DummyAnnotationProcessingManager:configureFromPlatform(Compiler, Object, Object)
642=AbstractRegressionTest:runNegativeTest(boolean, String[], String[], Map, String, JavacTestOptions)
643=AbstractRegressionTest:runJavac(String[], String, String, boolean)
644=AbstractRegressionTest:getLibsWithNullAnnotations(long)
645=AbstractRegressionTest:runConformTest(boolean, String[], String[], Map, String, String, String, JavacTestOptions)
646=AbstractRegressionTest:runTest(boolean, String[], String[], Map, boolean, ICompilerRequestor, boolean, String, boolean, String[], String, String, JavacTestOptions)
647=AbstractRegressionTest:logTestTitle()
648=AbstractRegressionTest:JavaRuntime:runtimeFor(JavacCompiler)
649=AbstractRegressionTest:runNegativeTest(boolean, JavacTestOptions, String[], String)
650=AbstractRegressionTest:getClassFileReader(String, String)
651=AbstractRegressionTest:DummyAnnotationProcessingManager:setProcessors(Object[])
652=AbstractRegressionTest:runConformTest(String[], String, String[], boolean, String[])
653=AbstractRegressionTest:JavacTestOptions:getCompilerOptions()
654=AbstractRegressionTest:logTestFiles(boolean, String[])
655=AbstractRegressionTest:runConformTest(String[], String, Map)
656=AbstractRegressionTest:checkDisassembledClassFile(String, String, String)
657=AbstractRegressionTest:JavacCompiler:JavacCompiler(String)
658=AbstractRegressionTest:printFiles(String[])
659=AbstractRegressionTest:runTest(String[], boolean, String, String, String, boolean, String[], boolean, String[], Map, ICompilerRequestor, JavacTestOptions)
660=AbstractRegressionTest:stop()
661=AbstractRegressionTest:getErrorHandlingPolicy()
662=AbstractRegressionTest:runNegativeTest(boolean, JavacTestOptions, String[], String, String[], boolean)
663=AbstractRegressionTest:runNegativeTest(String[], String, String[], boolean, Map, String)
664=AbstractRegressionTest:JavacTestOptions:JavacTestOptions(String)
665=AbstractRegressionTest:checkClassFile(String, String, String, String, int)
666=AbstractRegressionTest:getNameEnvironment(String[], String[])
667=AbstractRegressionTest:runNegativeTest(String[], String, String[], boolean, Map, boolean, boolean, boolean, boolean, boolean)
668=AbstractRegressionTest:JavaRuntime:execute(File, String, String, StringBuffer, StringBuffer)
669=AbstractRegressionTest:getDefaultClassPaths()
670=AbstractRegressionTest:JavacCompiler:JavacCompiler(String, String)
671=AbstractRegressionTest:getCompilerTestsPluginDirectoryPath()
672=AbstractRegressionTest:checkDisassembledClassFile(String, String, String, int)
673=AbstractRegressionTest:runTest(String[], boolean, String, String, String, boolean, String[], boolean, String[], Map, ICompilerRequestor, boolean)
674=AbstractRegressionTest:runConformTest(String[], String[], String)
675=AbstractRegressionTest:DummyAnnotationProcessingManager:configure(Object, String[])
676=AbstractRegressionTest:checkClassFile(String, String, String, String, String, int)
677=AbstractRegressionTest:compileAndDeploy(String, String, String)
678=AbstractRegressionTest:JavacTestOptions:setCompilerOptions(String)
679=AbstractRegressionTest:Logger:Logger(InputStream, String)
680=AbstractRegressionTest:AbstractRegressionTest(String)
681=AbstractRegressionTest:checkClassFile(String, String, String, int)
682=AbstractRegressionTest:runNegativeTest(boolean, String[], String[], Map, String, String, String, JavacTestOptions)
683=A:goo(C)
684=RoundEnvImpl:getRootElements()
685=RoundEnvImpl:processingOver()
686=RoundEnvImpl:getElementsAnnotatedWith(Class<? extends Annotation>)
687=RoundEnvImpl:addAnnotatedElements(ReferenceBinding, ReferenceBinding, Set<Element>)
688=RoundEnvImpl:inheritsAnno(ReferenceBinding, ReferenceBinding)
689=RoundEnvImpl:RoundEnvImpl(CompilationUnitDeclaration[], ReferenceBinding[], boolean, BaseProcessingEnvImpl)
690=RoundEnvImpl:errorRaised()
691=RoundEnvImpl:getRootAnnotations()
692=RoundEnvImpl:getElementsAnnotatedWith(TypeElement)
693=RoundEnvImpl:collectAnnotations(ReferenceBinding[])
694=ConstructorDeclarationPattern:ConstructorDeclarationPattern(char[], char[], int)
695=ConstructorDeclarationPattern:matchesDecodedKey(SearchPattern)
696=ConstructorDeclarationPattern:decodeIndexKey(char[])
697=ConstructorDeclarationPattern:getBlankPattern()
698=ConstructorDeclarationPattern:removeInternalFlags()
699=ConstructorDeclarationPattern:ConstructorDeclarationPattern(int)
700=ConstructorDeclarationPattern:getIndexCategories()
701=A:A()
702=SAMPLE_UTF8:main(String[])
703=OptionTests:test04()
704=OptionTests:test05()
705=OptionTests:testBug68993()
706=OptionTests:test06()
707=OptionTests:OptionTests(String)
708=OptionTests:test07()
709=OptionTests:testBug100393b()
710=OptionTests:testBug152578()
711=OptionTests:test11()
712=OptionTests:testBug324987_Workspace02()
713=OptionTests:testBug346010()
714=OptionTests:test01()
715=OptionTests:test12()
716=OptionTests:testBug324987_Workspace03()
717=OptionTests:test02()
718=OptionTests:testBug72214()
719=OptionTests:test13()
720=OptionTests:testBug125360()
721=OptionTests:testBug324987_Workspace04()
722=OptionTests:test03()
723=OptionTests:tearDown()
724=OptionTests:testBug324987_Project01()
725=OptionTests:testBug131707()
726=OptionTests:testBug152562()
727=OptionTests:suite()
728=OptionTests:testBug324987_Project03()
729=OptionTests:testBug100393()
730=OptionTests:testBug324987_Project02()
731=OptionTests:test10()
732=OptionTests:testBug324987_Workspace01()
733=OptionTests:test08()
734=OptionTests:test09()
735=OptionTests:TestPropertyListener:preferenceChange(PreferenceChangeEvent)
736=Test:foo()
737=Test:main(String[])
738=X:X()
739=X:bar(int, String)
740=Test2:main(String[])
741=ProblemConstructorTest:test001()
742=ProblemConstructorTest:testClass()
743=ProblemConstructorTest:test003()
744=ProblemConstructorTest:test002()
745=ProblemConstructorTest:test408038b()
746=ProblemConstructorTest:suite()
747=ProblemConstructorTest:test005()
748=ProblemConstructorTest:test408038a()
749=ProblemConstructorTest:test004()
750=ProblemConstructorTest:test408038d()
751=ProblemConstructorTest:test007()
752=ProblemConstructorTest:ProblemConstructorTest(String)
753=ProblemConstructorTest:test408038c()
754=ProblemConstructorTest:test006()
755=ProblemConstructorTest:test009()
756=ProblemConstructorTest:test408038e()
757=ProblemConstructorTest:test008()
758=RepeatedTest:countTestCases()
759=RepeatedTest:run(TestResult)
760=RepeatedTest:RepeatedTest(Test, int)
761=RepeatedTest:toString()
762=F:bar()
763=Test:Test(Object)
764=TestE:main(String[])
765=X:bar()
766=X:main(String[])
767=PossibleMatch:getFileName()
768=PossibleMatch:getSourceFileName()
769=PossibleMatch:getQualifiedName()
770=PossibleMatch:hashCode()
771=PossibleMatch:cleanUp()
772=PossibleMatch:getMainTypeName()
773=PossibleMatch:getSimilarMatch()
774=PossibleMatch:PossibleMatch(MatchLocator, IResource, Openable, SearchDocument, boolean)
775=PossibleMatch:getPackageName()
776=PossibleMatch:setSimilarMatch(PossibleMatch)
777=PossibleMatch:getContents()
778=PossibleMatch:hasSimilarMatch()
779=PossibleMatch:toString()
780=PossibleMatch:equals(Object)
781=PossibleMatch:ignoreOptionalProblems()
782=DefaultCodeFormatter:DefaultCodeFormatter(DefaultCodeFormatterOptions, Map<String, String>)
783=DefaultCodeFormatter:formatComments(String, int)
784=DefaultCodeFormatter:getOldCommentFormatOption(Map<String, String>)
785=DefaultCodeFormatter:prepareSpaces()
786=DefaultCodeFormatter:createIndentationString(int)
787=DefaultCodeFormatter:prepareComments()
788=DefaultCodeFormatter:updateWorkingOptions(int, String, int)
789=DefaultCodeFormatter:DefaultCodeFormatter(DefaultCodeFormatterOptions)
790=DefaultCodeFormatter:setOptions(Map<String, String>)
791=DefaultCodeFormatter:format(int, String, int, int, int, String)
792=DefaultCodeFormatter:format(int, String, IRegion[], int, String)
793=DefaultCodeFormatter:initOptions(DefaultCodeFormatterOptions, Map<String, String>)
794=DefaultCodeFormatter:prepareWraps(int)
795=DefaultCodeFormatter:parseSourceCode(ASTParser, int, boolean)
796=DefaultCodeFormatter:parseSourceCode(int)
797=DefaultCodeFormatter:findHeader()
798=DefaultCodeFormatter:regionsSatisfiesPreconditions(IRegion[], int)
799=DefaultCodeFormatter:canFormatComment(int, int)
800=DefaultCodeFormatter:prepareLineBreaks()
801=DefaultCodeFormatter:prepareFormattedCode(String, int)
802=DefaultCodeFormatter:DefaultCodeFormatter(Map<String, String>)
803=DefaultCodeFormatter:tokenizeSource()
804=DefaultCodeFormatter:init(String)
805=DefaultCodeFormatter:DefaultCodeFormatter()
806=X05:foo()
807=SelectionOnQualifiedSuperReference:resolveType(BlockScope)
808=SelectionOnQualifiedSuperReference:printExpression(int, StringBuffer)
809=SelectionOnQualifiedSuperReference:SelectionOnQualifiedSuperReference(TypeReference, int, int)
810=IdeBuildProcessingEnvImpl:getPhase()
811=IdeBuildProcessingEnvImpl:IdeBuildProcessingEnvImpl(IdeAnnotationProcessorManager, IJavaProject, Compiler)
812=X:foo(List<? extends @Marker Comparable<T>>)
813=TestFileStore:getParent()
814=TestFileStore:fetchInfo(int, IProgressMonitor)
815=TestFileStore:getChild(String)
816=TestFileStore:openInputStream(int, IProgressMonitor)
817=TestFileStore:mkdir(int, IProgressMonitor)
818=TestFileStore:TestFileStore(URI)
819=TestFileStore:childNames(int, IProgressMonitor)
820=TestFileStore:openOutputStream(int, IProgressMonitor)
821=TestFileStore:getName()
822=TestFileStore:toURI()
823=X01b:foo()
824=Example:bar(int)
825=A:foo()
826=AA:bar()
827=Format:temp()
828=DeclaredTypeImpl:DeclaredTypeImpl(BaseProcessingEnvImpl, ReferenceBinding)
829=DeclaredTypeImpl:getTypeArguments()
830=DeclaredTypeImpl:asElement()
831=DeclaredTypeImpl:DeclaredTypeImpl(BaseProcessingEnvImpl, ReferenceBinding, ElementKind)
832=DeclaredTypeImpl:accept(TypeVisitor<R, P>, P)
833=DeclaredTypeImpl:getEnclosingType()
834=DeclaredTypeImpl:toString()
835=DeclaredTypeImpl:getKind()
836=firstClass:myMethod()
837=JavadocMessageSend:resolveType(ClassScope)
838=JavadocMessageSend:internalResolveType(Scope)
839=JavadocMessageSend:traverse(ASTVisitor, ClassScope)
840=JavadocMessageSend:resolveType(BlockScope)
841=JavadocMessageSend:printExpression(int, StringBuffer)
842=JavadocMessageSend:JavadocMessageSend(char[], long)
843=JavadocMessageSend:isSuperAccess()
844=JavadocMessageSend:traverse(ASTVisitor, BlockScope)
845=JavadocMessageSend:JavadocMessageSend(char[], long, JavadocArgumentExpression[])
846=InnerClassesAttribute:InnerClassesAttribute(byte[], IConstantPool, int)
847=InnerClassesAttribute:getNumberOfClasses()
848=InnerClassesAttribute:getInnerClassAttributesEntries()
849=Clinit:isInitializationMethod()
850=Clinit:generateCode(ClassScope, ClassFile, int)
851=Clinit:traverse(ASTVisitor, ClassScope)
852=Clinit:analyseCode(ClassScope, InitializationFlowContext, FlowInfo)
853=Clinit:isStatic()
854=Clinit:isClinit()
855=Clinit:print(int, StringBuffer)
856=Clinit:resolve(ClassScope)
857=Clinit:Clinit(CompilationResult)
858=Clinit:setAssertionSupport(FieldBinding, boolean)
859=Clinit:generateCode(ClassScope, ClassFile)
860=Clinit:parseStatements(Parser, CompilationUnitDeclaration)
861=I:id(int, int)
862=I:foo(int, int)
863=J:id(int, int)
864=J:foo(int, int)
865=MissingSourceFileException:MissingSourceFileException(String)
866=ClasspathTests:testExtraLibraries07()
867=ClasspathTests:testBug248661()
868=ClasspathTests:test124117()
869=ClasspathTests:testExtraAttributes1()
870=ClasspathTests:testDotDotContainerEntry2()
871=ClasspathTests:testDuplicateEntries2()
872=ClasspathTests:testBug294360a()
873=ClasspathTests:assertCycleMarkers(IJavaProject, IJavaProject[], int[])
874=ClasspathTests:testClasspathValidation17()
875=ClasspathTests:testEncoding2()
876=ClasspathTests:testAddExternalLibFolder2()
877=ClasspathTests:testAddProjectToContainer()
878=ClasspathTests:ClasspathTests(String)
879=ClasspathTests:testClasspathDeleteNestedRootParent()
880=ClasspathTests:testDotDotLibraryEntry3()
881=ClasspathTests:testRemoveExternalLibFolder1()
882=ClasspathTests:testBug313965a()
883=ClasspathTests:testNoResourceChange06()
884=ClasspathTests:testEncodeDecodeEntry01()
885=ClasspathTests:testClasspathValidation05()
886=ClasspathTests:testClasspathValidation28()
887=ClasspathTests:testCombineAccessRules5()
888=ClasspathTests:testOptionalEntry3()
889=ClasspathTests:testExtraLibraries08()
890=ClasspathTests:testBug396299()
891=ClasspathTests:testExtraAttributes2()
892=ClasspathTests:testRemoveZIPArchive1()
893=ClasspathTests:testReadEmptyCustomOutput()
894=ClasspathTests:testDuplicateEntries3()
895=ClasspathTests:testClasspathValidation18()
896=ClasspathTests:testEncoding1()
897=ClasspathTests:testAddExternalLibFolder3()
898=ClasspathTests:testDotDotLibraryEntry4()
899=ClasspathTests:testRenameJar()
900=ClasspathTests:testClasspathReordering()
901=ClasspathTests:testBug305122()
902=ClasspathTests:testClasspathChangeExternalResources()
903=ClasspathTests:testClasspathValidation29()
904=ClasspathTests:testClasspathValidation06()
905=ClasspathTests:TestContainer:getKind()
906=ClasspathTests:testOptionalEntry2()
907=ClasspathTests:testExtraLibraries09()
908=ClasspathTests:testClasspathCreateLibraryEntry()
909=ClasspathTests:testBug287164()
910=ClasspathTests:testExtraAttributes3()
911=ClasspathTests:testInvalidClasspath2()
912=ClasspathTests:testClasspathValidation19()
913=ClasspathTests:testEmptyClasspath()
914=ClasspathTests:denseCycleDetection(int)
915=ClasspathTests:testBug252341c()
916=ClasspathTests:testClasspathMoveNestedRoot()
917=ClasspathTests:testDotDotLibraryEntry1()
918=ClasspathTests:testRemoveExternalLibFolder3()
919=ClasspathTests:testNoResourceChange04()
920=ClasspathTests:testClasspathValidation07()
921=ClasspathTests:testCombineAccessRules3()
922=ClasspathTests:testOptionalEntry1()
923=ClasspathTests:testCycleReport()
924=ClasspathTests:testExtraAttributes4()
925=ClasspathTests:testBug313965()
926=ClasspathTests:testBug274737()
927=ClasspathTests:suite()
928=ClasspathTests:testDotDotContainerEntry1()
929=ClasspathTests:testClasspathCrossProject()
930=ClasspathTests:testAddExternalLibFolder1()
931=ClasspathTests:testUnknownAttributes()
932=ClasspathTests:testBug252341b()
933=ClasspathTests:testInvalidExternalClassFolder()
934=ClasspathTests:testDotDotLibraryEntry2()
935=ClasspathTests:testRemoveExternalLibFolder2()
936=ClasspathTests:createFile(File, String, String)
937=ClasspathTests:testNoResourceChange05()
938=ClasspathTests:testBug304081()
939=ClasspathTests:testClasspathValidation08()
940=ClasspathTests:testCycleDetection4()
941=ClasspathTests:testCombineAccessRules4()
942=ClasspathTests:testUnknownElements2()
943=ClasspathTests:testExtraLibraries03()
944=ClasspathTests:testExternalize2()
945=ClasspathTests:testAddExternalLibFolder6()
946=ClasspathTests:test232816c()
947=ClasspathTests:testReplaceProject()
948=ClasspathTests:testExtraLibraries15()
949=ClasspathTests:testClasspathCreateLocalJarLibraryEntry()
950=ClasspathTests:testExportContainer()
951=ClasspathTests:testClasspathValidation09()
952=ClasspathTests:testCycleDetection3()
953=ClasspathTests:testExtraLibraries04()
954=ClasspathTests:testInvalidClasspath1()
955=ClasspathTests:testExternalize1()
956=ClasspathTests:testAddExternalLibFolder7()
957=ClasspathTests:test232816d()
958=ClasspathTests:testFixClasspath2()
959=ClasspathTests:testExtraLibraries16()
960=ClasspathTests:testAddRoot1()
961=ClasspathTests:testClasspathValidation40()
962=ClasspathTests:testChangeRawButNotResolvedClasspath()
963=ClasspathTests:testClasspathMoveNestedRootParent()
964=ClasspathTests:TestContainer:getDescription()
965=ClasspathTests:testCycleDetection2()
966=ClasspathTests:testBug229042()
967=ClasspathTests:testNestedSourceFolders()
968=ClasspathTests:testInvalidExternalJar()
969=ClasspathTests:testExtraLibraries05()
970=ClasspathTests:testClasspathValidation30()
971=ClasspathTests:test232816e()
972=ClasspathTests:testAddExternalLibFolder4()
973=ClasspathTests:testBug304081a()
974=ClasspathTests:testAddRoot2()
975=ClasspathTests:testExtraLibraries17()
976=ClasspathTests:testClasspathValidation41()
977=ClasspathTests:testClasspathValidation27_Bug159325_project()
978=ClasspathTests:testBug220928a()
979=ClasspathTests:testNoCycleDetection1()
980=ClasspathTests:testTransitionFromInvalidToValidJar()
981=ClasspathTests:testForceNullArgumentsToEmptySet2()
982=ClasspathTests:testBug321170()
983=ClasspathTests:testExtraLibraries06()
984=ClasspathTests:testUnknownElements1()
985=ClasspathTests:testClasspathValidation31()
986=ClasspathTests:testDuplicateEntries1()
987=ClasspathTests:test232816f()
988=ClasspathTests:testAddExternalLibFolder5()
989=ClasspathTests:testBug220928b()
990=ClasspathTests:testClasspathValidation42()
991=ClasspathTests:testClasspathCorruption()
992=ClasspathTests:testForceNullArgumentsToEmptySet3()
993=ClasspathTests:testNoCycleDetection2()
994=ClasspathTests:_testMissingClasspath()
995=ClasspathTests:testCycleDetectionThroughVariables()
996=ClasspathTests:testClasspathDuplicateExtraAttribute5()
997=ClasspathTests:testClasspathValidation32()
998=ClasspathTests:testAddZIPArchive7()
999=ClasspathTests:assertEncodeDecodeEntry(String, String, IClasspathEntry)
1000=ClasspathTests:testClasspathNoChanges()
1001=ClasspathTests:TestContainer:getClasspathEntries()
1002=ClasspathTests:testClasspathValidation20()
1003=ClasspathTests:testExtraLibraries11()
1004=ClasspathTests:testForceNullArgumentsToEmptySet4()
1005=ClasspathTests:test232816()
1006=ClasspathTests:testClasspathValidation10()
1007=ClasspathTests:testClasspathValidation33()
1008=ClasspathTests:testAddZIPArchive6()
1009=ClasspathTests:testClasspathDeleteNestedRoot()
1010=ClasspathTests:testEmptyInclusionPattern()
1011=ClasspathTests:testOutputFolder1()
1012=ClasspathTests:testBug411423()
1013=ClasspathTests:testClasspathValidation21()
1014=ClasspathTests:testExtraLibraries12()
1015=ClasspathTests:testForceNullArgumentsToEmptySet5()
1016=ClasspathTests:testCycleDetectionThroughContainerVariants()
1017=ClasspathTests:testReadOnly()
1018=ClasspathTests:testExternalJarRemove()
1019=ClasspathTests:testBug338006()
1020=ClasspathTests:testExtraLibraries01()
1021=ClasspathTests:test232816a()
1022=ClasspathTests:testAddZIPArchive5()
1023=ClasspathTests:testClasspathValidation11()
1024=ClasspathTests:testClasspathValidation34()
1025=ClasspathTests:TestContainer:TestContainer(IPath, IClasspathEntry[])
1026=ClasspathTests:testFixClasspath1()
1027=ClasspathTests:testPessimisticProvider()
1028=ClasspathTests:setUpSuite()
1029=ClasspathTests:testRemoveZIPArchive6()
1030=ClasspathTests:testInvalidInternalJar1()
1031=ClasspathTests:numberOfCycleMarkers(IJavaProject)
1032=ClasspathTests:testExtraLibraries13()
1033=ClasspathTests:testClasspathValidation22()
1034=ClasspathTests:testEmptyContainer()
1035=ClasspathTests:testPerfDenseCycleDetection3()
1036=ClasspathTests:test232816b()
1037=ClasspathTests:testAddZIPArchive4()
1038=ClasspathTests:testNullClasspath()
1039=ClasspathTests:testBug55992a()
1040=ClasspathTests:testExtraLibraries02()
1041=ClasspathTests:testRemoveDuplicates()
1042=ClasspathTests:testClasspathValidation12()
1043=ClasspathTests:testClasspathValidation35()
1044=ClasspathTests:testCycleDetectionThroughContainers()
1045=ClasspathTests:testDotDotVariableEntry1()
1046=ClasspathTests:testExtraLibraries14()
1047=ClasspathTests:testBug308150()
1048=ClasspathTests:testClasspathValidation23()
1049=ClasspathTests:testPerfDenseCycleDetection2()
1050=ClasspathTests:testMissingPrereq2()
1051=ClasspathTests:testClasspathDuplicateExtraAttribute1()
1052=ClasspathTests:testDefaultClasspathAndOutputLocation()
1053=ClasspathTests:testAddZIPArchive3()
1054=ClasspathTests:testBug55992b()
1055=ClasspathTests:testClasspathValidation36()
1056=ClasspathTests:testClasspathValidation13()
1057=ClasspathTests:testHasClasspathCycle()
1058=ClasspathTests:testRemoveZIPArchive4()
1059=ClasspathTests:testDotDotVariableEntry2()
1060=ClasspathTests:testBug252341a()
1061=ClasspathTests:testDotDotLibraryEntry7()
1062=ClasspathTests:testPerfDenseCycleDetection1()
1063=ClasspathTests:testBug357425()
1064=ClasspathTests:testClasspathValidation01()
1065=ClasspathTests:testClasspathValidation24()
1066=ClasspathTests:testCombineAccessRules1()
1067=ClasspathTests:testNoResourceChange02()
1068=ClasspathTests:testEncodeDecodeEntry05()
1069=ClasspathTests:testCycleDetection()
1070=ClasspathTests:testClasspathDiamond()
1071=ClasspathTests:testMissingPrereq1()
1072=ClasspathTests:testClasspathWithNonExistentProjectEntry()
1073=ClasspathTests:testAddZIPArchive2()
1074=ClasspathTests:testClasspathDuplicateExtraAttribute2()
1075=ClasspathTests:testExternalJarAdd()
1076=ClasspathTests:testClasspathValidation14()
1077=ClasspathTests:testClasspathValidation37()
1078=ClasspathTests:testRemoveZIPArchive5()
1079=ClasspathTests:testInvalidSourceFolder()
1080=ClasspathTests:testInvalidInternalJar2()
1081=ClasspathTests:testRemoveExternalLibFolder4()
1082=ClasspathTests:testDotDotLibraryEntry8()
1083=ClasspathTests:testEncodeDecodeEntry04()
1084=ClasspathTests:testClasspathValidation25()
1085=ClasspathTests:testClasspathValidation02()
1086=ClasspathTests:testCombineAccessRules2()
1087=ClasspathTests:testNoResourceChange03()
1088=ClasspathTests:testClasspathWithNonExistentSourceEntry()
1089=ClasspathTests:testMissingPrereq4()
1090=ClasspathTests:testClasspathWithNonExistentLibraryEntry()
1091=ClasspathTests:testBug300136a()
1092=ClasspathTests:testAddZIPArchive1()
1093=ClasspathTests:testClasspathDuplicateExtraAttribute3()
1094=ClasspathTests:testClasspathValidation15()
1095=ClasspathTests:testRemoveZIPArchive2()
1096=ClasspathTests:TestContainer:getPath()
1097=ClasspathTests:testClasspathValidation38()
1098=ClasspathTests:testDotDotLibraryEntry5()
1099=ClasspathTests:noCycleDetection(int, boolean, boolean)
1100=ClasspathTests:testBug300136()
1101=ClasspathTests:testClasspathValidation03()
1102=ClasspathTests:testClasspathValidation26()
1103=ClasspathTests:testEncodeDecodeEntry03()
1104=ClasspathTests:testBug276373()
1105=ClasspathTests:testClasspathForceReload()
1106=ClasspathTests:testClasspathValidation27_Bug159325_lib()
1107=ClasspathTests:testMissingPrereq3()
1108=ClasspathTests:testClasspathDuplicateExtraAttribute4()
1109=ClasspathTests:testRemoveZIPArchive3()
1110=ClasspathTests:testClasspathValidation16()
1111=ClasspathTests:testClasspathValidation39()
1112=ClasspathTests:testUpdateProjectReferences()
1113=ClasspathTests:testExtraLibraries10()
1114=ClasspathTests:testClasspathFileRead()
1115=ClasspathTests:testDotDotLibraryEntry6()
1116=ClasspathTests:testClasspathValidation04()
1117=ClasspathTests:testEncodeDecodeEntry02()
1118=ClasspathTests:testNoResourceChange01()
1119=ClasspathTests:testForceNullArgumentsToEmptySet()
1120=ClasspathTests:testClasspathValidation27()
1121=ClasspathTests:testBug305037()
1122=ClasspathTests:testClasspathWithDuplicateEntries()
1123=ClassFileReaderTest_1_8:getMethod(ClassFileReader, String)
1124=ClassFileReaderTest_1_8:test003_classExtends()
1125=ClassFileReaderTest_1_8:test009_methodReceiver()
1126=ClassFileReaderTest_1_8:getField(ClassFileReader, String)
1127=ClassFileReaderTest_1_8:suite()
1128=ClassFileReaderTest_1_8:setUp()
1129=ClassFileReaderTest_1_8:test002_methodTypeParameter()
1130=ClassFileReaderTest_1_8:test006_methodTypeParameterBound()
1131=ClassFileReaderTest_1_8:testClass()
1132=ClassFileReaderTest_1_8:test010_methodFormalParameter()
1133=ClassFileReaderTest_1_8:test005_classTypeParameterBound()
1134=ClassFileReaderTest_1_8:ClassFileReaderTest_1_8(String)
1135=ClassFileReaderTest_1_8:test007_field()
1136=ClassFileReaderTest_1_8:test011_throws()
1137=ClassFileReaderTest_1_8:printTypeAnnotation(IBinaryTypeAnnotation)
1138=ClassFileReaderTest_1_8:test001a_classTypeParameterDifferingRetentions()
1139=ClassFileReaderTest_1_8:test008_methodReturn()
1140=ClassFileReaderTest_1_8:test001_classTypeParameter()
1141=ClassFileReaderTest_1_8:test004_classExtends()
1142=MethodScope:referenceType()
1143=MethodScope:isLambdaScope()
1144=MethodScope:createMethod(AbstractMethodDeclaration)
1145=MethodScope:MethodScope(Scope, ReferenceContext, boolean, int)
1146=MethodScope:checkUnusedParameters(MethodBinding)
1147=MethodScope:findField(TypeBinding, char[], InvocationSite, boolean)
1148=MethodScope:referenceMethodBinding()
1149=MethodScope:problemReporter()
1150=MethodScope:MethodScope(Scope, ReferenceContext, boolean)
1151=MethodScope:computeLocalVariablePositions(int, CodeStream)
1152=MethodScope:hasDefaultNullnessFor(int)
1153=MethodScope:checkAndSetModifiersForConstructor(MethodBinding)
1154=MethodScope:isInsideConstructor()
1155=MethodScope:isInsideInitializer()
1156=MethodScope:checkAndSetModifiersForMethod(MethodBinding)
1157=MethodScope:referenceMethod()
1158=MethodScope:basicToString(int)
1159=MethodScope:isInsideInitializerOrConstructor()
1160=MethodScope:resolveTypeParameter(TypeParameter)
1161=MethodScope:recordInitializationStates(FlowInfo)
1162=TypeVariableBinding:isProperType(boolean)
1163=TypeVariableBinding:otherUpperBounds()
1164=TypeVariableBinding:mentionsAny(TypeBinding[], int)
1165=TypeVariableBinding:getDerivedTypesForDeferredInitialization()
1166=TypeVariableBinding:isFreeTypeVariable()
1167=TypeVariableBinding:internalBoundCheck(Substitution, TypeBinding, Scope, ASTNode)
1168=TypeVariableBinding:combineTypeAnnotations(TypeBinding)
1169=TypeVariableBinding:canBeInstantiated()
1170=TypeVariableBinding:collectSubstitutes(Scope, TypeBinding, InferenceContext, int)
1171=TypeVariableBinding:superInterfaces()
1172=TypeVariableBinding:genericTypeSignature()
1173=TypeVariableBinding:acceptsNonNullDefault()
1174=TypeVariableBinding:unannotated()
1175=TypeVariableBinding:toString()
1176=TypeVariableBinding:genericSignature()
1177=TypeVariableBinding:clone(TypeBinding)
1178=TypeVariableBinding:nullBoundCheck(Scope, TypeBinding, TypeBinding, Substitution, ASTNode, BoundCheckStatus)
1179=TypeVariableBinding:substituteInferenceVariable(InferenceVariable, TypeBinding)
1180=TypeVariableBinding:isSubtypeOf(TypeBinding)
1181=TypeVariableBinding:setTypeAnnotations(AnnotationBinding[], boolean)
1182=TypeVariableBinding:shortReadableName()
1183=TypeVariableBinding:hasOnlyRawBounds()
1184=TypeVariableBinding:findBound(TypeBinding, TypeParameter)
1185=TypeVariableBinding:getTypeBounds(InferenceVariable, InferenceSubstitution)
1186=TypeVariableBinding:upperBound()
1187=TypeVariableBinding:updateTagBits()
1188=TypeVariableBinding:evaluateNullAnnotations(Scope, TypeParameter)
1189=TypeVariableBinding:isInterchangeableWith(TypeVariableBinding, Substitution)
1190=TypeVariableBinding:boundsCount()
1191=TypeVariableBinding:withoutToplevelNullAnnotation()
1192=TypeVariableBinding:exitRecursiveFunction()
1193=TypeVariableBinding:computeUniqueKey(boolean)
1194=TypeVariableBinding:denotesRelevantSuperClass(TypeBinding)
1195=TypeVariableBinding:erasure()
1196=TypeVariableBinding:setFirstBound(TypeBinding)
1197=TypeVariableBinding:resolve()
1198=TypeVariableBinding:TypeVariableBinding(char[], LookupEnvironment)
1199=TypeVariableBinding:setSuperClass(ReferenceBinding)
1200=TypeVariableBinding:enterRecursiveFunction()
1201=TypeVariableBinding:TypeVariableBinding(TypeVariableBinding)
1202=TypeVariableBinding:collectInferenceVariables(Set<InferenceVariable>)
1203=TypeVariableBinding:hasRelevantTypeUseNullAnnotations()
1204=TypeVariableBinding:constantPoolName()
1205=TypeVariableBinding:TypeVariableBinding(char[], Binding, int, LookupEnvironment)
1206=TypeVariableBinding:nullAnnotatedReadableName(CompilerOptions, boolean)
1207=TypeVariableBinding:hasTypeBit(int)
1208=TypeVariableBinding:boundCheck(Substitution, TypeBinding, Scope, ASTNode)
1209=TypeVariableBinding:readableName()
1210=TypeVariableBinding:isErasureBoundTo(TypeBinding)
1211=TypeVariableBinding:setSuperInterfaces(ReferenceBinding[])
1212=TypeVariableBinding:nullMismatchOnBound(TypeParameter, TypeBinding, long, long, Scope)
1213=TypeVariableBinding:debugName()
1214=TypeVariableBinding:superclass()
1215=TypeVariableBinding:isHierarchyConnected()
1216=TypeVariableBinding:annotatedDebugName()
1217=TypeVariableBinding:kind()
1218=TypeVariableBinding:appendNullAnnotation(StringBuffer, CompilerOptions)
1219=TypeVariableBinding:isTypeVariable()
1220=IGenericField:getModifiers()
1221=IGenericField:getName()
1222=Y:foo()
1223=ASTRewritingInsertBoundTest:testInsert2Before_only_2_3_4()
1224=ASTRewritingInsertBoundTest:testRemoveInsert5_only_2()
1225=ASTRewritingInsertBoundTest:testRemoveInsert1_only_2()
1226=ASTRewritingInsertBoundTest:ASTRewritingInsertBoundTest(String, int)
1227=ASTRewritingInsertBoundTest:ASTRewritingInsertBoundTest(String)
1228=ASTRewritingInsertBoundTest:testRemoveInsert4Before_only_2_3_4()
1229=ASTRewritingInsertBoundTest:suite()
1230=ASTRewritingInsertBoundTest:testInsert1Before_only_2_3_4()
1231=ASTRewritingInsertBoundTest:testInsert3Before_only_2_3_4()
1232=ASTRewritingInsertBoundTest:testRemoveInsert2Before_only_2_3_4()
1233=ASTRewritingInsertBoundTest:testRemoveInsert6Before_only_2_3_4()
1234=ASTRewritingInsertBoundTest:testInsert1_only_2()
1235=ASTRewritingInsertBoundTest:testRemoveInsert2_only_2()
1236=ASTRewritingInsertBoundTest:testRemoveInsert3_only_2()
1237=ASTRewritingInsertBoundTest:testTargetSourceRangeComputer()
1238=ASTRewritingInsertBoundTest:testRemoveInsert7_only_2()
1239=ASTRewritingInsertBoundTest:testInsert3_only_2()
1240=ASTRewritingInsertBoundTest:testRemoveInsert4_only_2()
1241=ASTRewritingInsertBoundTest:newFieldDeclaration(AST, String)
1242=ASTRewritingInsertBoundTest:testRemove2()
1243=ASTRewritingInsertBoundTest:testRemove1()
1244=ASTRewritingInsertBoundTest:testInsert2_only_2()
1245=ASTRewritingInsertBoundTest:testRemoveInsert6_only_2()
1246=ASTRewritingInsertBoundTest:testRemove4()
1247=ASTRewritingInsertBoundTest:testRemoveInsert3Before_only_2_3_4()
1248=ASTRewritingInsertBoundTest:newMethodDeclaration(AST, String)
1249=ASTRewritingInsertBoundTest:testRemoveInsert7Before_only_2_3_4()
1250=ASTRewritingInsertBoundTest:testRemoveInsert1Before_only_2_3_4()
1251=ASTRewritingInsertBoundTest:testRemoveInsert5Before_only_2_3_4()
1252=ASTRewritingInsertBoundTest:testRemove3()
1253=A:bar()
1254=X17:getPerProjectInfo(String, boolean)
1255=X17:foo(String)
1256=A:foo()
1257=A:run()
1258=X:foo()
1259=Y:value()
1260=Test:foo(int)
1261=X:X(String)
1262=X:test()
1263=X:main(String[])
1264=JavadocSingleNameReference:resolve(BlockScope)
1265=JavadocSingleNameReference:resolve(BlockScope, boolean)
1266=JavadocSingleNameReference:traverse(ASTVisitor, BlockScope)
1267=JavadocSingleNameReference:JavadocSingleNameReference(char[], int, int)
1268=SelectionOnNameOfMemberValuePair:print(int, StringBuffer)
1269=SelectionOnNameOfMemberValuePair:SelectionOnNameOfMemberValuePair(char[], int, int, Expression)
1270=SelectionOnNameOfMemberValuePair:resolveTypeExpecting(BlockScope, TypeBinding)
1271=IJavaSearchScope:enclosingProjectsAndJars()
1272=IJavaSearchScope:includesClasspaths()
1273=IJavaSearchScope:setIncludesClasspaths(boolean)
1274=IJavaSearchScope:encloses(String)
1275=IJavaSearchScope:includesBinaries()
1276=IJavaSearchScope:encloses(IJavaElement)
1277=IJavaSearchScope:setIncludesBinaries(boolean)
1278=A:foo()
1279=JavadocSearched:javadocSearchedMethod()
1280=JavadocSearched:JavadocSearched(String)
1281=JavadocSearched:javadocSearchedMethod(String)
1282=JavadocSearched:JavadocSearched()
1283=A:method(String)
1284=ICompletionRequestor:acceptPackage(char[], char[], int, int, int)
1285=ICompletionRequestor:acceptLocalVariable(char[], char[], char[], int, int, int, int)
1286=ICompletionRequestor:acceptClass(char[], char[], char[], int, int, int, int)
1287=ICompletionRequestor:acceptError(IProblem)
1288=ICompletionRequestor:acceptMethodDeclaration(char[], char[], char[], char[][], char[][], char[][], char[], char[], char[], int, int, int, int)
1289=ICompletionRequestor:acceptMethod(char[], char[], char[], char[][], char[][], char[][], char[], char[], char[], int, int, int, int)
1290=ICompletionRequestor:acceptLabel(char[], int, int, int)
1291=ICompletionRequestor:acceptModifier(char[], int, int, int)
1292=ICompletionRequestor:acceptType(char[], char[], char[], int, int, int)
1293=ICompletionRequestor:acceptInterface(char[], char[], char[], int, int, int, int)
1294=ICompletionRequestor:acceptAnonymousType(char[], char[], char[][], char[][], char[][], char[], int, int, int, int)
1295=ICompletionRequestor:acceptVariableName(char[], char[], char[], char[], int, int, int)
1296=ICompletionRequestor:acceptField(char[], char[], char[], char[], char[], char[], int, int, int, int)
1297=ICompletionRequestor:acceptKeyword(char[], int, int, int)
1298=AA:AA()
1299=X:s()
1300=ListenerProcessor:Listener:roundComplete(RoundCompleteEvent)
1301=ListenerProcessor:process()
1302=ListenerProcessor:ListenerProcessor(AnnotationProcessorEnvironment)
1303=A:foo()
1304=SortCompilationUnitElementsTests:test014()
1305=SortCompilationUnitElementsTests:test026()
1306=SortCompilationUnitElementsTests:test003()
1307=SortCompilationUnitElementsTests:test013()
1308=SortCompilationUnitElementsTests:SortCompilationUnitElementsTests(String)
1309=SortCompilationUnitElementsTests:sortUnit(ICompilationUnit, String, boolean)
1310=SortCompilationUnitElementsTests:test002()
1311=SortCompilationUnitElementsTests:test025()
1312=SortCompilationUnitElementsTests:debug(ICompilationUnit, String)
1313=SortCompilationUnitElementsTests:test016()
1314=SortCompilationUnitElementsTests:test028()
1315=SortCompilationUnitElementsTests:test005()
1316=SortCompilationUnitElementsTests:testBug446255()
1317=SortCompilationUnitElementsTests:test015()
1318=SortCompilationUnitElementsTests:test004()
1319=SortCompilationUnitElementsTests:test027()
1320=SortCompilationUnitElementsTests:test010()
1321=SortCompilationUnitElementsTests:test033()
1322=SortCompilationUnitElementsTests:test022()
1323=SortCompilationUnitElementsTests:test032()
1324=SortCompilationUnitElementsTests:test021()
1325=SortCompilationUnitElementsTests:test012()
1326=SortCompilationUnitElementsTests:test024()
1327=SortCompilationUnitElementsTests:test001()
1328=SortCompilationUnitElementsTests:test011()
1329=SortCompilationUnitElementsTests:test034()
1330=SortCompilationUnitElementsTests:sortUnit(ICompilationUnit, String)
1331=SortCompilationUnitElementsTests:test023()
1332=SortCompilationUnitElementsTests:oldAPISortUnit(ICompilationUnit, String, boolean, Comparator)
1333=SortCompilationUnitElementsTests:sortUnit(int, ICompilationUnit, String, boolean, Comparator)
1334=SortCompilationUnitElementsTests:suite()
1335=SortCompilationUnitElementsTests:test031()
1336=SortCompilationUnitElementsTests:test020()
1337=SortCompilationUnitElementsTests:test030()
1338=SortCompilationUnitElementsTests:test018()
1339=SortCompilationUnitElementsTests:test007()
1340=SortCompilationUnitElementsTests:test017()
1341=SortCompilationUnitElementsTests:test006()
1342=SortCompilationUnitElementsTests:test029()
1343=SortCompilationUnitElementsTests:setUpSuite()
1344=SortCompilationUnitElementsTests:test009()
1345=SortCompilationUnitElementsTests:sortUnit(int, ICompilationUnit, String)
1346=SortCompilationUnitElementsTests:sortUnit(int, ICompilationUnit, String, boolean)
1347=SortCompilationUnitElementsTests:test019()
1348=SortCompilationUnitElementsTests:tearDownSuite()
1349=SortCompilationUnitElementsTests:test008()
1350=A:foo()
1351=A:doX()
1352=Bug:case3(List<Object>)
1353=Bug:case1(List<Object>)
1354=Bug:case4(java.lang.List<Object>)
1355=Bug:case2(List)
1356=MemberValuePair:print(int, StringBuffer)
1357=MemberValuePair:traverse(ASTVisitor, CompilationUnitScope)
1358=MemberValuePair:MemberValuePair(char[], int, int, Expression)
1359=MemberValuePair:traverse(ASTVisitor, BlockScope)
1360=MemberValuePair:traverse(ASTVisitor, ClassScope)
1361=CompilationUnit:getContents()
1362=CompilationUnit:toString()
1363=CompilationUnit:CompilationUnit(char[], char[])
1364=CompilationUnit:getMainTypeName()
1365=CompilationUnit:getFileName()
1366=CompilationUnit:ignoreOptionalProblems()
1367=CompilationUnit:getPackageName()
1368=A:goo(int)
1369=A:foo()
1370=Foo:m1(boolean)
1371=X03_mixed:foo(String)
1372=RangeUtil:RangeResult:addInterval(int, int, int)
1373=RangeUtil:isInInterval(int, int, int[], int[])
1374=RangeUtil:RangeResult:RangeResult()
1375=RangeUtil:RangeResult:compare(int, int)
1376=RangeUtil:computeDietRange(TypeDeclaration[])
1377=RangeUtil:computeDietRange0(TypeDeclaration[], RangeResult)
1378=RangeUtil:containsIgnoredBody(AbstractMethodDeclaration)
1379=RangeUtil:RangeResult:quickSort(int[], int[], int[], int, int)
1380=RangeUtil:RangeResult:getRanges()
1381=RangeUtil:containsErrorInSignature(AbstractMethodDeclaration)
1382=RangeUtil:getPreviousInterval(int, int, int[], int[])
1383=RangeUtil:RangeResult:addInterval(int, int)
1384=TestAll:TestAll(String)
1385=TestAll:suite()
1386=ConfigurableOption:toString()
1387=ConfigurableOption:getName()
1388=ConfigurableOption:getPossibleValues()
1389=ConfigurableOption:setValueIndex(int)
1390=ConfigurableOption:getCurrentValueIndex()
1391=ConfigurableOption:getCategory()
1392=ConfigurableOption:getDescription()
1393=ConfigurableOption:getID()
1394=ConfigurableOption:getDefaultValueIndex()
1395=ConfigurableOption:getOptionName()
1396=ConfigurableOption:ConfigurableOption(String, String, Locale, int)
1397=ConfigurableOption:getComponentName()
1398=X_124645:m()
1399=SiblingEnumeration:hasMoreElements()
1400=SiblingEnumeration:SiblingEnumeration(IDOMNode)
1401=SiblingEnumeration:nextElement()
1402=X02:foo2()
1403=X02:foo(int, int)
1404=FactoryPath:Attributes:setRunInBatchMode(boolean)
1405=FactoryPath:getEnabledContainers()
1406=FactoryPath:Attributes:runInBatchMode()
1407=FactoryPath:addVarJar(IPath)
1408=FactoryPath:internalAdd(FactoryContainer, Attributes)
1409=FactoryPath:removeWkspJar(IPath)
1410=FactoryPath:Attributes:setEnabled(boolean)
1411=FactoryPath:equals(Object)
1412=FactoryPath:Attributes:Attributes(boolean, boolean)
1413=FactoryPath:getAllContainers()
1414=FactoryPath:removeExternalJar(File)
1415=FactoryPath:enablePlugin(String)
1416=FactoryPath:Attributes:Attributes(Attributes)
1417=FactoryPath:removeVarJar(IPath)
1418=FactoryPath:disablePlugin(String)
1419=FactoryPath:addWkspJar(IPath)
1420=FactoryPath:setContainers(Map<FactoryContainer, Attributes>)
1421=FactoryPath:addEntryToHead(FactoryContainer, boolean, boolean)
1422=FactoryPath:Attributes:equals(Object)
1423=FactoryPath:Attributes:hashCode()
1424=FactoryPath:addExternalJar(File)
1425=FactoryPath:Attributes:isEnabled()
1426=SelectionJavadocParser:createMethodReference(Object, List)
1427=SelectionJavadocParser:parseInheritDocTag()
1428=SelectionJavadocParser:commentParse()
1429=SelectionJavadocParser:createTypeReference(int)
1430=SelectionJavadocParser:checkDeprecation(int)
1431=SelectionJavadocParser:createArgumentReference(char[], int, boolean, Object, long[], long)
1432=SelectionJavadocParser:updateDocComment()
1433=SelectionJavadocParser:pushParamName(boolean)
1434=SelectionJavadocParser:createFieldReference(Object)
1435=SelectionJavadocParser:SelectionJavadocParser(SelectionParser)
1436=Example:bar()
1437=Example:foo(int, int)
1438=JavaModelOperation:getAttribute(Object)
1439=JavaModelOperation:getSchedulingRule()
1440=JavaModelOperation:deleteResources(IResource[], boolean)
1441=JavaModelOperation:getElementToProcess()
1442=JavaModelOperation:IPostAction:getID()
1443=JavaModelOperation:addAction(IPostAction)
1444=JavaModelOperation:JavaModelOperation(IJavaElement[], boolean)
1445=JavaModelOperation:postAction(IPostAction, int)
1446=JavaModelOperation:beginTask(String, int)
1447=JavaModelOperation:getCompilationUnitFor(IJavaElement)
1448=JavaModelOperation:removeAllPostAction(String)
1449=JavaModelOperation:JavaModelOperation(IJavaElement[])
1450=JavaModelOperation:getCurrentOperationStack()
1451=JavaModelOperation:JavaModelOperation(IJavaElement[], IJavaElement[], boolean)
1452=JavaModelOperation:canModifyRoots()
1453=JavaModelOperation:checkCanceled()
1454=JavaModelOperation:IPostAction:run()
1455=JavaModelOperation:runPostActions()
1456=JavaModelOperation:getJavaModel()
1457=JavaModelOperation:JavaModelOperation()
1458=JavaModelOperation:getNestedFolders(IPackageFragmentRoot)
1459=JavaModelOperation:addReconcileDelta(ICompilationUnit, IJavaElementDelta)
1460=JavaModelOperation:applyTextEdit(ICompilationUnit, TextEdit)
1461=JavaModelOperation:deleteResource(IResource, int)
1462=JavaModelOperation:setCanceled(boolean)
1463=JavaModelOperation:commonVerify()
1464=JavaModelOperation:pushOperation(JavaModelOperation)
1465=JavaModelOperation:getParentElement()
1466=JavaModelOperation:moveResources(IResource[], IPath)
1467=JavaModelOperation:done()
1468=JavaModelOperation:equalsOneOf(IPath, IPath[])
1469=JavaModelOperation:firstActionWithID(String, int)
1470=JavaModelOperation:subTask(String)
1471=JavaModelOperation:run(IProgressMonitor)
1472=JavaModelOperation:worked(int)
1473=JavaModelOperation:getSubProgressMonitor(int)
1474=JavaModelOperation:createFolder(IContainer, String, boolean)
1475=JavaModelOperation:verify()
1476=JavaModelOperation:setTaskName(String)
1477=JavaModelOperation:isReadOnly()
1478=JavaModelOperation:getParentElements()
1479=JavaModelOperation:isCanceled()
1480=JavaModelOperation:newJavaElementDelta()
1481=JavaModelOperation:hasModifiedResource()
1482=JavaModelOperation:getDocument(ICompilationUnit)
1483=JavaModelOperation:internalWorked(double)
1484=JavaModelOperation:prefixesOneOf(IPath, IPath[])
1485=JavaModelOperation:setAttribute(Object, Object)
1486=JavaModelOperation:createFile(IContainer, String, InputStream, boolean)
1487=JavaModelOperation:deleteEmptyPackageFragment(IPackageFragment, boolean, IResource)
1488=JavaModelOperation:isTopLevelOperation()
1489=JavaModelOperation:JavaModelOperation(IJavaElement[], IJavaElement[])
1490=JavaModelOperation:addDelta(IJavaElementDelta)
1491=JavaModelOperation:executeOperation()
1492=JavaModelOperation:runOperation(IProgressMonitor)
1493=JavaModelOperation:JavaModelOperation(IJavaElement)
1494=JavaModelOperation:popOperation()
1495=JavaModelOperation:copyResources(IResource[], IPath)
1496=JavaModelOperation:getResultElements()
1497=JavaModelOperation:setNested(boolean)
1498=JavaModelOperation:executeNestedOperation(JavaModelOperation, int)
1499=JavaModelOperation:removeReconcileDelta(ICompilationUnit)
1500=A:foo()
1501=Test:foo(Exception)
1502=X:foo()
1503=ResolveLocalMethod2:foo1()
1504=ResolveLocalMethod2:foo2()
1505=BinaryParameterDeclarationImpl:getType()
1506=BinaryParameterDeclarationImpl:getAnnotation(Class<A>)
1507=BinaryParameterDeclarationImpl:hashCode()
1508=BinaryParameterDeclarationImpl:toString()
1509=BinaryParameterDeclarationImpl:getPosition()
1510=BinaryParameterDeclarationImpl:getAnnotationMirrors()
1511=BinaryParameterDeclarationImpl:equals(Object)
1512=BinaryParameterDeclarationImpl:getSimpleName()
1513=BinaryParameterDeclarationImpl:getResource()
1514=BinaryParameterDeclarationImpl:accept(DeclarationVisitor)
1515=BinaryParameterDeclarationImpl:isFromSource()
1516=BinaryParameterDeclarationImpl:getTypeBinding()
1517=BinaryParameterDeclarationImpl:getDeclarationBinding()
1518=BinaryParameterDeclarationImpl:BinaryParameterDeclarationImpl(ExecutableDeclarationImpl, ITypeBinding, int, BaseProcessorEnv)
1519=BinaryParameterDeclarationImpl:getDocComment()
1520=BinaryParameterDeclarationImpl:isBindingBased()
1521=BinaryParameterDeclarationImpl:getModifiers()
1522=BinaryParameterDeclarationImpl:kind()
1523=BinaryParameterDeclarationImpl:getAstNode()
1524=JavaSearchGenericConstructorExactTests:addResultLine(StringBuffer, char[])
1525=JavaSearchGenericConstructorExactTests:suite()
1526=JavaSearchGenericConstructorExactTests:JavaSearchGenericConstructorExactTests(String)
1527=JavaSearchGenericConstructorExactTests:removeFirstTypeArgument(char[])
1528=InsideSubRoutineFlowContext:InsideSubRoutineFlowContext(FlowContext, ASTNode)
1529=InsideSubRoutineFlowContext:isNonReturningContext()
1530=InsideSubRoutineFlowContext:individualToString()
1531=InsideSubRoutineFlowContext:initsOnReturn()
1532=InsideSubRoutineFlowContext:subroutine()
1533=InsideSubRoutineFlowContext:recordReturnFrom(UnconditionalFlowInfo)
1534=ParameterDeclaration:getType()
1535=IField:getConstant()
1536=IField:isEnumConstant()
1537=IField:getElementName()
1538=IField:getKey()
1539=IField:isResolved()
1540=IField:getTypeSignature()
1541=PackageBindingTest:NameEnvironmentWithProgressDummy:cleanup()
1542=PackageBindingTest:NameEnvironmentWithProgressDummy:findType(char[], char[][], boolean)
1543=PackageBindingTest:NameEnvironmentDummy:findType(char[], char[][])
1544=PackageBindingTest:NameEnvironmentWithProgressDummy:findType(char[], char[][])
1545=PackageBindingTest:NameEnvironmentWithProgressDummy:findType(char[][])
1546=PackageBindingTest:NameEnvironmentDummy:cleanup()
1547=PackageBindingTest:NameEnvironmentWithProgressDummy:setMonitor(IProgressMonitor)
1548=PackageBindingTest:NameEnvironmentWithProgressDummy:NameEnvironmentWithProgressDummy()
1549=PackageBindingTest:NameEnvironmentDummy:isPackage(char[][], char[])
1550=PackageBindingTest:PackageBindingTest(String)
1551=PackageBindingTest:test04()
1552=PackageBindingTest:test03()
1553=PackageBindingTest:NameEnvironmentWithProgressDummy:isPackage(char[][], char[])
1554=PackageBindingTest:NameEnvironmentDummy:findType(char[][])
1555=PackageBindingTest:test02()
1556=PackageBindingTest:NameEnvironmentDummy:NameEnvironmentDummy(boolean)
1557=PackageBindingTest:test01()
1558=E:foo1(int)
1559=E:foo1()
1560=X05:foo(String)
1561=IBinaryType:getGenericSignature()
1562=IBinaryType:getEnclosingTypeName()
1563=IBinaryType:getMemberTypes()
1564=IBinaryType:getFields()
1565=IBinaryType:sourceFileName()
1566=IBinaryType:getMethods()
1567=IBinaryType:isMember()
1568=IBinaryType:isAnonymous()
1569=IBinaryType:isLocal()
1570=IBinaryType:getName()
1571=IBinaryType:getSuperclassName()
1572=IBinaryType:getInterfaceNames()
1573=firstClass:myMethod()
1574=CreateMethodSourceExamplesTests:testCreateMethodWithModifiersAndExceptions()
1575=CreateMethodSourceExamplesTests:suite()
1576=CreateMethodSourceExamplesTests:testCreateMethodWithAbstractModifier()
1577=CreateMethodSourceExamplesTests:testCreateMethodWithParameters()
1578=CreateMethodSourceExamplesTests:testCreateMethodWithBody()
1579=CreateMethodSourceExamplesTests:testCreateMethodWithModifiers()
1580=CreateMethodSourceExamplesTests:CreateMethodSourceExamplesTests(String)
1581=CreateMethodSourceExamplesTests:setUpSuite()
1582=CreateMethodSourceExamplesTests:testCreateMethodWithReturnType()
1583=CreateMethodSourceExamplesTests:testCreateEmptyMethod()
1584=CreateMethodSourceExamplesTests:testCreateEmptyInterfaceMethod()
1585=DOMNode:DOMNode(char[], int[], String, int[])
1586=DOMNode:getRoot()
1587=DOMNode:shareContents(DOMNode)
1588=DOMNode:getMask(int)
1589=DOMNode:cloneSharingDocument(char[], int)
1590=DOMNode:rangeCopy(int[])
1591=DOMNode:isAllowableChild(IDOMNode)
1592=DOMNode:getNextNode()
1593=DOMNode:appendContentsOfChildren(CharArrayBuffer)
1594=DOMNode:getChild(String)
1595=DOMNode:getDetailedNode()
1596=DOMNode:getParentEndDeclaration()
1597=DOMNode:offset(int)
1598=DOMNode:getDocument()
1599=DOMNode:addChild(IDOMNode)
1600=DOMNode:isNameAltered()
1601=DOMNode:getName()
1602=DOMNode:normalizeStartPosition(int, ILineStartFinder)
1603=DOMNode:clone()
1604=DOMNode:setNameAltered(boolean)
1605=DOMNode:insertSibling(IDOMNode)
1606=DOMNode:appendFragmentedContents(CharArrayBuffer)
1607=DOMNode:appendContents(CharArrayBuffer)
1608=DOMNode:getEndPosition()
1609=DOMNode:getFirstChild()
1610=DOMNode:getParent()
1611=DOMNode:becomeDetailed()
1612=DOMNode:newDOMNode()
1613=DOMNode:getChildren()
1614=DOMNode:getContents()
1615=DOMNode:isContentMergableWith(DOMNode)
1616=DOMNode:toString()
1617=DOMNode:DOMNode()
1618=DOMNode:setStartPosition(int)
1619=DOMNode:remove()
1620=DOMNode:setName(String)
1621=DOMNode:getCharacters()
1622=DOMNode:isFragmented()
1623=DOMNode:normalizeEndPosition(ILineStartFinder, DOMNode)
1624=DOMNode:basicAddChild(IDOMNode)
1625=DOMNode:normalize(ILineStartFinder)
1626=DOMNode:fragment()
1627=DOMNode:getFactory()
1628=DOMNode:getNameContents()
1629=DOMNode:isSignatureEqual(IDOMNode)
1630=DOMNode:getPreviousNode()
1631=DOMNode:setSourceRangeEnd(int)
1632=DOMNode:localizeContents()
1633=DOMNode:setMask(int, boolean)
1634=DOMNode:offsetRange(int[], int)
1635=DOMNode:getInsertionPosition()
1636=DOMNode:canHaveChildren()
1637=DOMNode:getStartPosition()
1638=DOMNode:isDetailed()
1639=LongConstant:toString()
1640=LongConstant:longValue()
1641=LongConstant:byteValue()
1642=LongConstant:charValue()
1643=LongConstant:doubleValue()
1644=LongConstant:stringValue()
1645=LongConstant:typeID()
1646=LongConstant:intValue()
1647=LongConstant:shortValue()
1648=LongConstant:floatValue()
1649=LongConstant:LongConstant(long)
1650=Test:foo(String)
1651=Example:bar()
1652=Example:foo()
1653=Example:foo2()
1654=X:main(String[])
1655=IntLiteralMinValue:IntLiteralMinValue(char[], char[], int, int)
1656=IntLiteralMinValue:computeConstant()
1657=AnnotationTypeMemberDeclaration:resolveStatements()
1658=AnnotationTypeMemberDeclaration:AnnotationTypeMemberDeclaration(CompilationResult)
1659=AnnotationTypeMemberDeclaration:analyseCode(ClassScope, InitializationFlowContext, FlowInfo)
1660=AnnotationTypeMemberDeclaration:printReturnType(int, StringBuffer)
1661=AnnotationTypeMemberDeclaration:resolve(ClassScope)
1662=AnnotationTypeMemberDeclaration:parseStatements(Parser, CompilationUnitDeclaration)
1663=AnnotationTypeMemberDeclaration:traverse(ASTVisitor, ClassScope)
1664=Type:isArrayType()
1665=Type:Type(AST)
1666=Type:isPrimitiveType()
1667=Type:isSimpleType()
1668=Type:resolveBinding()
1669=Test:main(String[])
1670=X33:foo()
1671=X02:foo2()
1672=X02:foo(int, int)
1673=X:foo()
1674=X:X(String)
1675=FullSourceWorkspaceTypeHierarchyTests:suite()
1676=FullSourceWorkspaceTypeHierarchyTests:setUp()
1677=FullSourceWorkspaceTypeHierarchyTests:FullSourceWorkspaceTypeHierarchyTests(String)
1678=FullSourceWorkspaceTypeHierarchyTests:tearDown()
1679=FullSourceWorkspaceTypeHierarchyTests:testPerSuperTypes()
1680=FullSourceWorkspaceTypeHierarchyTests:JavaSearchResultCollector:acceptSearchMatch(SearchMatch)
1681=FullSourceWorkspaceTypeHierarchyTests:testClass()
1682=FullSourceWorkspaceTypeHierarchyTests:testPerfAllTypes()
1683=FullSourceWorkspaceTypeHierarchyTests:testPerfClassWithPotentialSubinterfaces()
1684=ClassFileComparatorTest:test001()
1685=ClassFileComparatorTest:test012()
1686=ClassFileComparatorTest:test002()
1687=ClassFileComparatorTest:suite()
1688=ClassFileComparatorTest:test013()
1689=ClassFileComparatorTest:testClass()
1690=ClassFileComparatorTest:ClassFileComparatorTest(String)
1691=ClassFileComparatorTest:test010()
1692=ClassFileComparatorTest:test011()
1693=ClassFileComparatorTest:test005()
1694=ClassFileComparatorTest:compileAndDeploy(String, String)
1695=ClassFileComparatorTest:test016()
1696=ClassFileComparatorTest:test006()
1697=ClassFileComparatorTest:test003()
1698=ClassFileComparatorTest:areStructurallyDifferent(String, String, boolean, boolean)
1699=ClassFileComparatorTest:test014()
1700=ClassFileComparatorTest:test004()
1701=ClassFileComparatorTest:test015()
1702=ClassFileComparatorTest:test009()
1703=ClassFileComparatorTest:test007()
1704=ClassFileComparatorTest:test008()
1705=Javadoc:print(int, StringBuffer)
1706=Javadoc:resolve(MethodScope)
1707=Javadoc:resolveThrowsTags(MethodScope, boolean)
1708=Javadoc:Javadoc(int, int)
1709=Javadoc:resolveReference(Expression, Scope)
1710=Javadoc:resolve(ClassScope)
1711=Javadoc:getNodeStartingAt(int)
1712=Javadoc:resolveParamTags(MethodScope, boolean)
1713=FormatterProblem:isZero(int)
1714=CompletionFindException1:foo()
1715=JavaSearchBugsTests:testBug79990b()
1716=JavaSearchBugsTests:setUpBug82208()
1717=JavaSearchBugsTests:testBug196339b()
1718=JavaSearchBugsTests:setUpBug86380()
1719=JavaSearchBugsTests:testBug86642()
1720=JavaSearchBugsTests:testBug92944_CLASS_AND_ENUM()
1721=JavaSearchBugsTests:getJavaSearchScopeBugs(String, boolean)
1722=JavaSearchBugsTests:testBug221110b()
1723=JavaSearchBugsTests:testBug323514()
1724=JavaSearchBugsTests:testBug110060_TypePattern03()
1725=JavaSearchBugsTests:testBug329727()
1726=JavaSearchBugsTests:testBug209054()
1727=JavaSearchBugsTests:testBug400919a()
1728=JavaSearchBugsTests:testBug209996_c5()
1729=JavaSearchBugsTests:testBug325418a()
1730=JavaSearchBugsTests:testBug79267()
1731=JavaSearchBugsTests:testBug478042_wScope_008()
1732=JavaSearchBugsTests:testBug73112a()
1733=JavaSearchBugsTests:TypeReferenceCollector:writeLine()
1734=JavaSearchBugsTests:testBug95794c()
1735=JavaSearchBugsTests:testBug288174()
1736=JavaSearchBugsTests:testBug100695f()
1737=JavaSearchBugsTests:testBug306223b()
1738=JavaSearchBugsTests:testBug95152_wc04()
1739=JavaSearchBugsTests:testBug92264c()
1740=JavaSearchBugsTests:testBug92944_CLASS_AND_INTERFACE()
1741=JavaSearchBugsTests:testBug160301()
1742=JavaSearchBugsTests:setUpBug83804_Type()
1743=JavaSearchBugsTests:testBug124469i()
1744=JavaSearchBugsTests:testBug160301_Interface()
1745=JavaSearchBugsTests:testBug322979d()
1746=JavaSearchBugsTests:testBug483650_wScope_0002()
1747=JavaSearchBugsTests:testBug100772_HierarchyScope_Complex03()
1748=JavaSearchBugsTests:testBug110336e()
1749=JavaSearchBugsTests:testBug164121b()
1750=JavaSearchBugsTests:testBug137087i_CamelCaseSamePartCount()
1751=JavaSearchBugsTests:setUpBug83304_MethodParameterizedElementPattern()
1752=JavaSearchBugsTests:testBug211366_OrPattern()
1753=JavaSearchBugsTests:testBug110060_FieldPattern02_SamePartCount()
1754=JavaSearchBugsTests:testBug95794()
1755=JavaSearchBugsTests:testBug266582()
1756=JavaSearchBugsTests:testBug196339()
1757=JavaSearchBugsTests:testBug110291()
1758=JavaSearchBugsTests:testBug431357_009()
1759=JavaSearchBugsTests:testBug96763b()
1760=JavaSearchBugsTests:testBug99903_javadoc()
1761=JavaSearchBugsTests:testBug97120()
1762=JavaSearchBugsTests:testBug345807()
1763=JavaSearchBugsTests:testBug124624_HaM_CamelCase()
1764=JavaSearchBugsTests:testBug86293()
1765=JavaSearchBugsTests:testBug77093method()
1766=JavaSearchBugsTests:testBug137087f_CamelCaseSamePartCount()
1767=JavaSearchBugsTests:testBug110060_TypePattern02()
1768=JavaSearchBugsTests:testBug79803string()
1769=JavaSearchBugsTests:testBug222284()
1770=JavaSearchBugsTests:setUpBug80264_Methods()
1771=JavaSearchBugsTests:testBug130390f_CamelCaseSamePartCount()
1772=JavaSearchBugsTests:testBug478042_wScope_007()
1773=JavaSearchBugsTests:testBug110336d()
1774=JavaSearchBugsTests:testBug86380_Field()
1775=JavaSearchBugsTests:testBug95152_wc03()
1776=JavaSearchBugsTests:testBug122442a()
1777=JavaSearchBugsTests:testBug100695e()
1778=JavaSearchBugsTests:testBug306223c()
1779=JavaSearchBugsTests:testBug78082()
1780=JavaSearchBugsTests:testBug201064b_CamelCaseSamePartCount()
1781=JavaSearchBugsTests:testBug84724()
1782=JavaSearchBugsTests:testBug92264b()
1783=JavaSearchBugsTests:testBug110060_ConstructorPattern03_SamePartCount()
1784=JavaSearchBugsTests:testBug142044()
1785=JavaSearchBugsTests:testBug130390c_CamelCaseSamePartCount()
1786=JavaSearchBugsTests:testBug160323()
1787=JavaSearchBugsTests:testBug124469j()
1788=JavaSearchBugsTests:testBug124624_HMap_CamelCase()
1789=JavaSearchBugsTests:testBug322979c()
1790=JavaSearchBugsTests:_testBug431357_016()
1791=JavaSearchBugsTests:testBug130390h_CamelCase()
1792=JavaSearchBugsTests:testBug92944_ANNOTATION_TYPE()
1793=JavaSearchBugsTests:testBug100772_ProjectScope_Complex01()
1794=JavaSearchBugsTests:tearDownSuite()
1795=JavaSearchBugsTests:testBug483650_wScope_0001()
1796=JavaSearchBugsTests:testBug100772_HierarchyScope_Complex02()
1797=JavaSearchBugsTests:testBug130390c_CamelCase()
1798=JavaSearchBugsTests:setUp()
1799=JavaSearchBugsTests:testBug130390b_CamelCase()
1800=JavaSearchBugsTests:testBug164121a()
1801=JavaSearchBugsTests:testBug124624_HMa_CamelCaseSamePartCount()
1802=JavaSearchBugsTests:testBug349683()
1803=JavaSearchBugsTests:setUpBug84727()
1804=JavaSearchBugsTests:testBug124624_HMap_CamelCaseSamePartCount()
1805=JavaSearchBugsTests:testBug130390d_CamelCase()
1806=JavaSearchBugsTests:testBug130390e_CamelCase()
1807=JavaSearchBugsTests:testBug80890()
1808=JavaSearchBugsTests:testBug201064e_CamelCaseSamePartCount()
1809=JavaSearchBugsTests:testBug84100()
1810=JavaSearchBugsTests:testBug130390g_CamelCase()
1811=JavaSearchBugsTests:testBug108088()
1812=JavaSearchBugsTests:testBug130390f_CamelCase()
1813=JavaSearchBugsTests:testBug75816()
1814=JavaSearchBugsTests:setUpBug100772_ProjectScope_ClassAndSubclass()
1815=JavaSearchBugsTests:testBug79990d()
1816=JavaSearchBugsTests:testBug317264f()
1817=JavaSearchBugsTests:testBug92944_CLASS()
1818=JavaSearchBugsTests:testBug110060_MethodPattern08_SamePartCount()
1819=JavaSearchBugsTests:setUpBug122442d()
1820=JavaSearchBugsTests:testBug79803()
1821=JavaSearchBugsTests:testBug84724c()
1822=JavaSearchBugsTests:testBug185452()
1823=JavaSearchBugsTests:testBug323514b()
1824=JavaSearchBugsTests:testBug327654()
1825=JavaSearchBugsTests:testBug110060_TypePattern01()
1826=JavaSearchBugsTests:testBug324109()
1827=JavaSearchBugsTests:testBug137087c_CamelCaseSamePartCount()
1828=JavaSearchBugsTests:testBug325418c()
1829=JavaSearchBugsTests:testBug110336c()
1830=JavaSearchBugsTests:testBug478042_wScope_006()
1831=JavaSearchBugsTests:testBug97547()
1832=JavaSearchBugsTests:testBug110060_MethodPattern05_SamePartCount()
1833=JavaSearchBugsTests:testBug110060_MethodPattern02_SamePartCount()
1834=JavaSearchBugsTests:testBug95152_wc02()
1835=JavaSearchBugsTests:testBug92264a()
1836=JavaSearchBugsTests:testBug124624_HMa_CamelCase()
1837=JavaSearchBugsTests:testBug80264_ClassesIgnoreTypes()
1838=JavaSearchBugsTests:testBug124624_HaMap_CamelCase()
1839=JavaSearchBugsTests:testBug216875g()
1840=JavaSearchBugsTests:testBug124469g()
1841=JavaSearchBugsTests:setUpBug156491()
1842=JavaSearchBugsTests:testBug82208_CLASS_AND_INTERFACE()
1843=JavaSearchBugsTests:testBug322979f()
1844=JavaSearchBugsTests:testBug130390_CamelCaseSamePartCount()
1845=JavaSearchBugsTests:setUpBug83230_Explicit()
1846=JavaSearchBugsTests:testBug181981()
1847=JavaSearchBugsTests:testBug80194string1()
1848=JavaSearchBugsTests:testBug110060_FieldPattern01()
1849=JavaSearchBugsTests:testBug41018()
1850=JavaSearchBugsTests:testBug6930_AllConstructorDeclarations04()
1851=JavaSearchBugsTests:testBug79378()
1852=JavaSearchBugsTests:testBug431357_007()
1853=JavaSearchBugsTests:testBug79990c()
1854=JavaSearchBugsTests:ReferenceCollector:writeLine()
1855=JavaSearchBugsTests:testBug80264_ClassesIgnoreReturnType()
1856=JavaSearchBugsTests:testBug84724d()
1857=JavaSearchBugsTests:testBug123679_cu()
1858=JavaSearchBugsTests:testBug83804_Field()
1859=JavaSearchBugsTests:testBug148215_Messages()
1860=JavaSearchBugsTests:testBug163984()
1861=JavaSearchBugsTests:testBug92944_INTERFACE()
1862=JavaSearchBugsTests:testBug355605()
1863=JavaSearchBugsTests:testBug80264_Methods()
1864=JavaSearchBugsTests:testBug325418b()
1865=JavaSearchBugsTests:testBug478042_wScope_005()
1866=JavaSearchBugsTests:testBug110336b()
1867=JavaSearchBugsTests:setUpBug84100()
1868=JavaSearchBugsTests:testBug95794b()
1869=JavaSearchBugsTests:testBug306223a()
1870=JavaSearchBugsTests:testBug161028()
1871=JavaSearchBugsTests:testBug85810()
1872=JavaSearchBugsTests:testBug95152_wc01()
1873=JavaSearchBugsTests:testBug216875h()
1874=JavaSearchBugsTests:testBug124469h()
1875=JavaSearchBugsTests:testBug82208_ANNOTATION_TYPE()
1876=JavaSearchBugsTests:testBug110060_TypePattern11_SamePartCount()
1877=JavaSearchBugsTests:testBug80264_FieldsIgnoreReturnType()
1878=JavaSearchBugsTests:testBug80264_ClassesIgnoreDeclaringType()
1879=JavaSearchBugsTests:testBug322979e()
1880=JavaSearchBugsTests:testBug100772_HierarchyScope_Complex04()
1881=JavaSearchBugsTests:testBug110060_TypePattern12()
1882=JavaSearchBugsTests:testBug110060_TypePattern05_SamePartCount()
1883=JavaSearchBugsTests:testBug110060_TypePattern02_SamePartCount()
1884=JavaSearchBugsTests:testBug110060_TypePattern08_SamePartCount()
1885=JavaSearchBugsTests:testBug110060_MethodPattern09()
1886=JavaSearchBugsTests:testBug110060_FieldPattern02()
1887=JavaSearchBugsTests:testBug123679_wc()
1888=JavaSearchBugsTests:testBug6930_AllConstructorDeclarations05()
1889=JavaSearchBugsTests:testBug221081()
1890=JavaSearchBugsTests:testBug161190()
1891=JavaSearchBugsTests:testBug125178()
1892=JavaSearchBugsTests:testBug431357_008()
1893=JavaSearchBugsTests:testBug110060_AllTypeNames01_SamePartCount()
1894=JavaSearchBugsTests:testBug210691()
1895=JavaSearchBugsTests:testBug110060_TypePattern07()
1896=JavaSearchBugsTests:testBug110060_ConstructorPattern05_SamePartCount()
1897=JavaSearchBugsTests:testBug83230_Explicit03()
1898=JavaSearchBugsTests:setUpBug80194()
1899=JavaSearchBugsTests:testBug100772_ProjectScope_InterfacesAndClass01()
1900=JavaSearchBugsTests:testBug324189c()
1901=JavaSearchBugsTests:testBug124624_HashM_CamelCaseSamePartCount()
1902=JavaSearchBugsTests:getJavaSearchScope()
1903=JavaSearchBugsTests:testBug137087e_CamelCaseSamePartCount()
1904=JavaSearchBugsTests:testBug241834()
1905=JavaSearchBugsTests:testBug110422a()
1906=JavaSearchBugsTests:testBug110060_AllTypeNames01()
1907=JavaSearchBugsTests:testBug110060_AllTypeNames07_SamePartCount()
1908=JavaSearchBugsTests:testBug216875e()
1909=JavaSearchBugsTests:testBug156491a()
1910=JavaSearchBugsTests:testBug110336a()
1911=JavaSearchBugsTests:testBug142044_Identical()
1912=JavaSearchBugsTests:testBug478042_wScope_004()
1913=JavaSearchBugsTests:testBug350885()
1914=JavaSearchBugsTests:setUpBug92944()
1915=JavaSearchBugsTests:testBug122442d()
1916=JavaSearchBugsTests:testBug110060_ConstructorPattern03()
1917=JavaSearchBugsTests:setUpBug100772_HierarchyScope_ClassAndSubclass()
1918=JavaSearchBugsTests:testBug110060_MethodPattern04_SamePartCount()
1919=JavaSearchBugsTests:setUpBug80264_Classes()
1920=JavaSearchBugsTests:testBug476738_002()
1921=JavaSearchBugsTests:testBug83304()
1922=JavaSearchBugsTests:setUpBug110060_MethodPattern()
1923=JavaSearchBugsTests:testBug80194string3()
1924=JavaSearchBugsTests:testBug110060_MethodPattern01_SamePartCount()
1925=JavaSearchBugsTests:testBug124624_HashM_CamelCase()
1926=JavaSearchBugsTests:testBug73336()
1927=JavaSearchBugsTests:testBug93392()
1928=JavaSearchBugsTests:testBug110060_MethodPattern07_SamePartCount()
1929=JavaSearchBugsTests:testBug87627()
1930=JavaSearchBugsTests:testBug124469m()
1931=JavaSearchBugsTests:testBug79860string()
1932=JavaSearchBugsTests:testBug110060_AllTypeNames13()
1933=JavaSearchBugsTests:testBug110060_FieldPattern03()
1934=JavaSearchBugsTests:testBug6930_AllConstructorDeclarations02()
1935=JavaSearchBugsTests:testBug82088constructor()
1936=JavaSearchBugsTests:testBug110060_ConstructorPattern02_SamePartCount()
1937=JavaSearchBugsTests:testBug209996_c22_3()
1938=JavaSearchBugsTests:testBug109695()
1939=JavaSearchBugsTests:testBug110060_MethodPattern08()
1940=JavaSearchBugsTests:setUpBug84724()
1941=JavaSearchBugsTests:setUpSuite()
1942=JavaSearchBugsTests:testBug137984_wc()
1943=JavaSearchBugsTests:testBug80264_FieldsIgnoreDeclaringType()
1944=JavaSearchBugsTests:testBug100772_HierarchyScope_InterfacesAndClass07()
1945=JavaSearchBugsTests:testBug96761()
1946=JavaSearchBugsTests:testBug110060_TypePattern03_SamePartCount()
1947=JavaSearchBugsTests:testBug110060_TypePattern06_SamePartCount()
1948=JavaSearchBugsTests:testBug310213()
1949=JavaSearchBugsTests:testBug324189d()
1950=JavaSearchBugsTests:testBug80084()
1951=JavaSearchBugsTests:setUpBug122442a()
1952=JavaSearchBugsTests:testBug110060_TypePattern06()
1953=JavaSearchBugsTests:setUpBug100772_ProjectScope_Complex()
1954=JavaSearchBugsTests:testBug286379c()
1955=JavaSearchBugsTests:testBug323514a()
1956=JavaSearchBugsTests:testBug110060_FieldPattern04()
1957=JavaSearchBugsTests:testBug83230_Explicit04()
1958=JavaSearchBugsTests:testBug483303_001()
1959=JavaSearchBugsTests:testBug137984_cu()
1960=JavaSearchBugsTests:testBug156491b()
1961=JavaSearchBugsTests:testBug137087b_CamelCaseSamePartCount()
1962=JavaSearchBugsTests:testBug431357_010()
1963=JavaSearchBugsTests:testBug478042_wScope_003()
1964=JavaSearchBugsTests:testBug110060_TypePattern09_SamePartCount()
1965=JavaSearchBugsTests:testBug97087()
1966=JavaSearchBugsTests:testBug122442e()
1967=JavaSearchBugsTests:testBug216875f()
1968=JavaSearchBugsTests:testBug110060_ConstructorPattern02()
1969=JavaSearchBugsTests:testBug137087_CamelCase()
1970=JavaSearchBugsTests:testBug140156()
1971=JavaSearchBugsTests:testBug201064i_CamelCaseSamePartCount()
1972=JavaSearchBugsTests:testBug80194string2()
1973=JavaSearchBugsTests:testBug130390d_CamelCaseSamePartCount()
1974=JavaSearchBugsTests:testBug80194()
1975=JavaSearchBugsTests:testBug236520()
1976=JavaSearchBugsTests:testBug94718()
1977=JavaSearchBugsTests:testBug124469n()
1978=JavaSearchBugsTests:testBug110060_AllTypeNames12()
1979=JavaSearchBugsTests:testBug6930_AllConstructorDeclarations03()
1980=JavaSearchBugsTests:testBug124489()
1981=JavaSearchBugsTests:testBug209996_c22_4()
1982=JavaSearchBugsTests:setUpBug80264_Fields()
1983=JavaSearchBugsTests:testBug82208_ENUM()
1984=JavaSearchBugsTests:testBug110060_MethodPattern07()
1985=JavaSearchBugsTests:testBug295894()
1986=JavaSearchBugsTests:testBug100772_HierarchyScope_ClassAndSubclass05()
1987=JavaSearchBugsTests:testBug201064f_CamelCaseSamePartCount()
1988=JavaSearchBugsTests:testBug100772_HierarchyScope_InterfacesAndClass08()
1989=JavaSearchBugsTests:testBug199004_DefaultSystemLibraries()
1990=JavaSearchBugsTests:testBug148380_SearchAllTypes_cu_wksp()
1991=JavaSearchBugsTests:testBug324189e()
1992=JavaSearchBugsTests:testBug286379b()
1993=JavaSearchBugsTests:testBug88300()
1994=JavaSearchBugsTests:testBug110060_TypePattern05()
1995=JavaSearchBugsTests:testBug127628()
1996=JavaSearchBugsTests:testBug83230_Explicit01()
1997=JavaSearchBugsTests:testBug100772_ProjectScope_InterfacesAndClass03()
1998=JavaSearchBugsTests:testBug110060_FieldPattern05()
1999=JavaSearchBugsTests:testBug120816b()
2000=JavaSearchBugsTests:testBug83230_Implicit02()
2001=JavaSearchBugsTests:testBug400919c()
2002=JavaSearchBugsTests:testBug216875c()
2003=JavaSearchBugsTests:testBug92944_TYPE()
2004=JavaSearchBugsTests:testBug201064a_CamelCaseSamePartCount()
2005=JavaSearchBugsTests:testBug204652()
2006=JavaSearchBugsTests:testBug123679()
2007=JavaSearchBugsTests:testBug124624_HaMap_CamelCaseSamePartCount()
2008=JavaSearchBugsTests:testBug122442b()
2009=JavaSearchBugsTests:testBug148215_Fields()
2010=JavaSearchBugsTests:testBug72866()
2011=JavaSearchBugsTests:testBug110060_TypePattern12_SamePartCount()
2012=JavaSearchBugsTests:testBug110060_ConstructorPattern01()
2013=JavaSearchBugsTests:testBug130390e_CamelCaseSamePartCount()
2014=JavaSearchBugsTests:testBug83804_Method()
2015=JavaSearchBugsTests:testBug71279()
2016=JavaSearchBugsTests:testBug86596()
2017=JavaSearchBugsTests:testBug201064c_CamelCase()
2018=JavaSearchBugsTests:testBug322979b()
2019=JavaSearchBugsTests:testBug97614()
2020=JavaSearchBugsTests:testBug137087j_CamelCaseSamePartCount()
2021=JavaSearchBugsTests:testBug201064g_CamelCase()
2022=JavaSearchBugsTests:setUpBug83304_ConstructorGenericElementPattern()
2023=JavaSearchBugsTests:testBug100772_HierarchyScope_Complex01()
2024=JavaSearchBugsTests:testBug124469k()
2025=JavaSearchBugsTests:testBug80264_MethodsIgnoreBothTypes()
2026=JavaSearchBugsTests:testBug80264_Fields()
2027=JavaSearchBugsTests:testBug110060_MethodPattern06()
2028=JavaSearchBugsTests:testBug306196()
2029=JavaSearchBugsTests:TestCollector:acceptSearchMatch(SearchMatch)
2030=JavaSearchBugsTests:testBug211366_ComplexOrPattern()
2031=JavaSearchBugsTests:testBug199004_SystemLibraries()
2032=JavaSearchBugsTests:testBug110060_FieldPattern03_SamePartCount()
2033=JavaSearchBugsTests:testBug83230_Explicit02()
2034=JavaSearchBugsTests:testBug110060_TypePattern04()
2035=JavaSearchBugsTests:testBug286379a()
2036=JavaSearchBugsTests:testBug100772_ProjectScope_InterfacesAndClass02()
2037=JavaSearchBugsTests:testBug211872_ws()
2038=JavaSearchBugsTests:testBug99903_annotation()
2039=JavaSearchBugsTests:testBug83230_Implicit01()
2040=JavaSearchBugsTests:testBug400919b()
2041=JavaSearchBugsTests:testBug110422b()
2042=JavaSearchBugsTests:testBug216875d()
2043=JavaSearchBugsTests:testBug91542()
2044=JavaSearchBugsTests:testBug122442c()
2045=JavaSearchBugsTests:testBug83230_Explicit()
2046=JavaSearchBugsTests:testBug90779()
2047=JavaSearchBugsTests:testBug92264d()
2048=JavaSearchBugsTests:testBug84727()
2049=JavaSearchBugsTests:setUpBug100772_HierarchyScope_InterfacesAndClass()
2050=JavaSearchBugsTests:testBug322979a()
2051=JavaSearchBugsTests:testBug124624_HashMap_CamelCaseSamePartCount()
2052=JavaSearchBugsTests:testBug88300b()
2053=JavaSearchBugsTests:testBug476738_001()
2054=JavaSearchBugsTests:testBug124624_HM_CamelCaseSamePartCount()
2055=JavaSearchBugsTests:testBug124469l()
2056=JavaSearchBugsTests:testBug166348()
2057=JavaSearchBugsTests:testBug261722()
2058=JavaSearchBugsTests:testBug6930_AllConstructorDeclarations01()
2059=JavaSearchBugsTests:testBug110060_MethodPattern05()
2060=JavaSearchBugsTests:testBug82088method()
2061=JavaSearchBugsTests:testBug84121()
2062=JavaSearchBugsTests:testBug96763c()
2063=JavaSearchBugsTests:testBug231622()
2064=JavaSearchBugsTests:testBug137087g_CamelCase()
2065=JavaSearchBugsTests:testBug137087h_CamelCase()
2066=JavaSearchBugsTests:testBug82208_CLASS_AND_ENUMERATION()
2067=JavaSearchBugsTests:testBug137087f_CamelCase()
2068=JavaSearchBugsTests:testBug137087j_CamelCase()
2069=JavaSearchBugsTests:testBug95152_jar03()
2070=JavaSearchBugsTests:testBug156491()
2071=JavaSearchBugsTests:testBug113671()
2072=JavaSearchBugsTests:testBug195489a()
2073=JavaSearchBugsTests:setUpBug130390()
2074=JavaSearchBugsTests:testBug81084b()
2075=JavaSearchBugsTests:testBug137087i_CamelCase()
2076=JavaSearchBugsTests:testBug160301_Abstract3()
2077=JavaSearchBugsTests:testBug295894a()
2078=JavaSearchBugsTests:testBug100772_ProjectScope_InterfacesAndClass05()
2079=JavaSearchBugsTests:testBug122442h()
2080=JavaSearchBugsTests:testBug431357_013()
2081=JavaSearchBugsTests:testBug99600()
2082=JavaSearchBugsTests:testBug137087b_CamelCase()
2083=JavaSearchBugsTests:testBug80194b()
2084=JavaSearchBugsTests:testBug137087c_CamelCase()
2085=JavaSearchBugsTests:testBug137087d_CamelCase()
2086=JavaSearchBugsTests:testBug194185()
2087=JavaSearchBugsTests:testBug82208_CLASS()
2088=JavaSearchBugsTests:testBug137087e_CamelCase()
2089=JavaSearchBugsTests:testBug313668()
2090=JavaSearchBugsTests:testBug83304_TypeStringPattern()
2091=JavaSearchBugsTests:testBug110060_AllTypeNames05()
2092=JavaSearchBugsTests:testBug209996b()
2093=JavaSearchBugsTests:testBug293861a()
2094=JavaSearchBugsTests:testBug200064()
2095=JavaSearchBugsTests:testBug211857()
2096=JavaSearchBugsTests:testBug88300c()
2097=JavaSearchBugsTests:testBug483650_wScope_006()
2098=JavaSearchBugsTests:testBug110060_MethodPattern04()
2099=JavaSearchBugsTests:testBug80264_MethodsIgnoreReturnType()
2100=JavaSearchBugsTests:testBug431357_001()
2101=JavaSearchBugsTests:testBug109695c()
2102=JavaSearchBugsTests:testBug100772_HierarchyScope_InterfacesAndClass03()
2103=JavaSearchBugsTests:testBug137087k_CamelCase()
2104=JavaSearchBugsTests:testBug137087l_CamelCase()
2105=JavaSearchBugsTests:testBug137087m_CamelCase()
2106=JavaSearchBugsTests:testBug100772_HierarchyScope_ClassAndSubclass02()
2107=JavaSearchBugsTests:testBug130390h_CamelCaseSamePartCount()
2108=JavaSearchBugsTests:testBug201064d_CamelCaseSamePartCount()
2109=JavaSearchBugsTests:testBug110060_AllTypeNames09_SamePartCount()
2110=JavaSearchBugsTests:testBug341462()
2111=JavaSearchBugsTests:testBug73696()
2112=JavaSearchBugsTests:testBug83304_MethodGenericElementPattern()
2113=JavaSearchBugsTests:testBug160301_Abstract2()
2114=JavaSearchBugsTests:testBug83804_Type()
2115=JavaSearchBugsTests:testBug95152_jar02()
2116=JavaSearchBugsTests:testBug120816a()
2117=JavaSearchBugsTests:setupBug124624()
2118=JavaSearchBugsTests:testBug100772_ProjectScope_InterfacesAndClass04()
2119=JavaSearchBugsTests:testBug80264_FieldsIgnoreBothTypes()
2120=JavaSearchBugsTests:testBug122442i()
2121=JavaSearchBugsTests:testBug209996a()
2122=JavaSearchBugsTests:testBug216875b()
2123=JavaSearchBugsTests:testBug110060_AllTypeNames03_SamePartCount()
2124=JavaSearchBugsTests:testBug110060_AllTypeNames04()
2125=JavaSearchBugsTests:testBug216875()
2126=JavaSearchBugsTests:testBug98378b()
2127=JavaSearchBugsTests:testBug137087d_CamelCaseSamePartCount()
2128=JavaSearchBugsTests:testBug317264a()
2129=JavaSearchBugsTests:testBug339891()
2130=JavaSearchBugsTests:testBug148380_SearchAllTypes_cu()
2131=JavaSearchBugsTests:testBug160324a()
2132=JavaSearchBugsTests:testBug124469a()
2133=JavaSearchBugsTests:testBug124624_HM_CamelCase()
2134=JavaSearchBugsTests:testBug431357_014()
2135=JavaSearchBugsTests:testBug100772_ProjectScope_ClassAndSubclass05()
2136=JavaSearchBugsTests:testBug304841()
2137=JavaSearchBugsTests:testBug128877a()
2138=JavaSearchBugsTests:testBug207657()
2139=JavaSearchBugsTests:testBug89848()
2140=JavaSearchBugsTests:testBug483650_wScope_007()
2141=JavaSearchBugsTests:testBug73336b()
2142=JavaSearchBugsTests:testBug110060_MethodPattern03()
2143=JavaSearchBugsTests:testBug84727b()
2144=JavaSearchBugsTests:testBug94389()
2145=JavaSearchBugsTests:testBug77388()
2146=JavaSearchBugsTests:testBug153765()
2147=JavaSearchBugsTests:testBug201064g_CamelCaseSamePartCount()
2148=JavaSearchBugsTests:testBug431357_002()
2149=JavaSearchBugsTests:testBug100772_HierarchyScope_ClassAndSubclass01()
2150=JavaSearchBugsTests:testBug92944_ENUM()
2151=JavaSearchBugsTests:testBug100772_HierarchyScope_InterfacesAndClass04()
2152=JavaSearchBugsTests:testBug148380_SearchAllTypes_wc()
2153=JavaSearchBugsTests:testBug209996_c10()
2154=JavaSearchBugsTests:testBug124624_HashMap_CamelCase()
2155=JavaSearchBugsTests:setUpBug110060_FieldPattern()
2156=JavaSearchBugsTests:testBug109695b()
2157=JavaSearchBugsTests:testBug83304_TypeGenericElementPattern()
2158=JavaSearchBugsTests:testBug100772_ProjectScope_InterfacesAndClass07()
2159=JavaSearchBugsTests:testBug110060_TypePattern09()
2160=JavaSearchBugsTests:testBug144044()
2161=JavaSearchBugsTests:testBug95152_jar01()
2162=JavaSearchBugsTests:testBug195489c()
2163=JavaSearchBugsTests:testBug295894c()
2164=JavaSearchBugsTests:testBug336322b()
2165=JavaSearchBugsTests:testBug218397()
2166=JavaSearchBugsTests:testBug324189a()
2167=JavaSearchBugsTests:testBug83230_Explicit05()
2168=JavaSearchBugsTests:testBug142044_Or()
2169=JavaSearchBugsTests:testBug110060_AllTypeNames03()
2170=JavaSearchBugsTests:testBug110060_FieldPattern05new()
2171=JavaSearchBugsTests:testBug126330()
2172=JavaSearchBugsTests:testBug265065()
2173=JavaSearchBugsTests:testBug469320_0001()
2174=JavaSearchBugsTests:testBug483303_002()
2175=JavaSearchBugsTests:testBug211872_ns()
2176=JavaSearchBugsTests:testBug431357_011()
2177=JavaSearchBugsTests:testBug128877b()
2178=JavaSearchBugsTests:testBug483650_010()
2179=JavaSearchBugsTests:testBug100772_ProjectScope_ClassAndSubclass04()
2180=JavaSearchBugsTests:testBug137087k_CamelCaseSamePartCount()
2181=JavaSearchBugsTests:testBug160854()
2182=JavaSearchBugsTests:testBug122442f()
2183=JavaSearchBugsTests:testBug110060_ConstructorPattern05()
2184=JavaSearchBugsTests:testBug201064b_CamelCase()
2185=JavaSearchBugsTests:testBug201064d_CamelCase()
2186=JavaSearchBugsTests:testBug293861c()
2187=JavaSearchBugsTests:testBug110060_MethodPattern02()
2188=JavaSearchBugsTests:testBug201064f_CamelCase()
2189=JavaSearchBugsTests:testBug73336c()
2190=JavaSearchBugsTests:testBug83304_MethodStringPattern()
2191=JavaSearchBugsTests:testBug79378b()
2192=JavaSearchBugsTests:testBug483650_wScope_008()
2193=JavaSearchBugsTests:testBug98378()
2194=JavaSearchBugsTests:testBug142044_And01()
2195=JavaSearchBugsTests:testBug80264_MethodsIgnoreDeclaringType()
2196=JavaSearchBugsTests:testBug109695e()
2197=JavaSearchBugsTests:testBug100772_HierarchyScope_InterfacesAndClass05()
2198=JavaSearchBugsTests:testBug86380_Type()
2199=JavaSearchBugsTests:testBug100772_HierarchyScope_ClassAndSubclass04()
2200=JavaSearchBugsTests:setUpBug100772_HierarchyScope_Complex()
2201=JavaSearchBugsTests:testBug137087g_CamelCaseSamePartCount()
2202=JavaSearchBugsTests:testBug221065()
2203=JavaSearchBugsTests:testBug80264_Classes()
2204=JavaSearchBugsTests:testBug100772_ProjectScope_InterfacesAndClass06()
2205=JavaSearchBugsTests:testBug83304_ConstructorGenericElementPattern()
2206=JavaSearchBugsTests:testBug80918()
2207=JavaSearchBugsTests:testBug110060_TypePattern08()
2208=JavaSearchBugsTests:testBug83304_MethodParameterizedElementPattern()
2209=JavaSearchBugsTests:testBug97606()
2210=JavaSearchBugsTests:testBug195489b()
2211=JavaSearchBugsTests:testBug96763()
2212=JavaSearchBugsTests:testBug295894b()
2213=JavaSearchBugsTests:testBug324189b()
2214=JavaSearchBugsTests:testBug336322a()
2215=JavaSearchBugsTests:setUpBug110060_ConstructorPattern()
2216=JavaSearchBugsTests:testBug124624_HashMa_CamelCase()
2217=JavaSearchBugsTests:testBug110060_AllTypeNames02()
2218=JavaSearchBugsTests:testBug81556()
2219=JavaSearchBugsTests:testBug201064h_CamelCase()
2220=JavaSearchBugsTests:testBug431357_012()
2221=JavaSearchBugsTests:testBug116459()
2222=JavaSearchBugsTests:testBug128877c()
2223=JavaSearchBugsTests:testBug100772_ProjectScope_ClassAndSubclass03()
2224=JavaSearchBugsTests:testBug122442g()
2225=JavaSearchBugsTests:testBug110060_ConstructorPattern04()
2226=JavaSearchBugsTests:setUpBug77093()
2227=JavaSearchBugsTests:testBug293861b()
2228=JavaSearchBugsTests:testBug110060_MethodPattern01()
2229=JavaSearchBugsTests:testBug137087m_CamelCaseSamePartCount()
2230=JavaSearchBugsTests:testBug110060_AllTypeNames14()
2231=JavaSearchBugsTests:testBug295894c2()
2232=JavaSearchBugsTests:testBug167190()
2233=JavaSearchBugsTests:testBug114539()
2234=JavaSearchBugsTests:testBug109695d()
2235=JavaSearchBugsTests:testBug130390_CamelCase()
2236=JavaSearchBugsTests:testBug100772_HierarchyScope_InterfacesAndClass06()
2237=JavaSearchBugsTests:testBug100772_HierarchyScope_ClassAndSubclass03()
2238=JavaSearchBugsTests:testBug201064c_CamelCaseSamePartCount()
2239=JavaSearchBugsTests:getWorkingCopy(String, String)
2240=JavaSearchBugsTests:suite()
2241=JavaSearchBugsTests:testBug130390g_CamelCaseSamePartCount()
2242=JavaSearchBugsTests:testBug79990()
2243=JavaSearchBugsTests:testBug181488b()
2244=JavaSearchBugsTests:testBug210567()
2245=JavaSearchBugsTests:testBug124645b()
2246=JavaSearchBugsTests:testBug82208_TYPE()
2247=JavaSearchBugsTests:testBug460465_since_5()
2248=JavaSearchBugsTests:testBug322979h()
2249=JavaSearchBugsTests:testBug83304_ConstructorStringPattern()
2250=JavaSearchBugsTests:testBug110060_AllTypeNames09()
2251=JavaSearchBugsTests:testBug199004_NoMask()
2252=JavaSearchBugsTests:testBug304841b()
2253=JavaSearchBugsTests:testBug164791()
2254=JavaSearchBugsTests:testBug89686b()
2255=JavaSearchBugsTests:testBug317264d()
2256=JavaSearchBugsTests:testBug100695b()
2257=JavaSearchBugsTests:testBug306223f()
2258=JavaSearchBugsTests:testBug100772_ProjectScope_ClassAndSubclass02()
2259=JavaSearchBugsTests:testBug83388()
2260=JavaSearchBugsTests:testBug83388b()
2261=JavaSearchBugsTests:testBug100772_ProjectScope_Complex04()
2262=JavaSearchBugsTests:testBug109695g()
2263=JavaSearchBugsTests:testBug124469e()
2264=JavaSearchBugsTests:testBug83304_ConstructorParameterizedElementPattern()
2265=JavaSearchBugsTests:testBug110060_TypePattern11()
2266=JavaSearchBugsTests:testBug124645c()
2267=JavaSearchBugsTests:testBug295894c3()
2268=JavaSearchBugsTests:testBug137087h_CamelCaseSamePartCount()
2269=JavaSearchBugsTests:testBug178847()
2270=JavaSearchBugsTests:testBug178596()
2271=JavaSearchBugsTests:testBug148215_Types()
2272=JavaSearchBugsTests:testBug431357_005()
2273=JavaSearchBugsTests:testBug124624_HaMa_CamelCase()
2274=JavaSearchBugsTests:testBug156340()
2275=JavaSearchBugsTests:testBug84100b()
2276=JavaSearchBugsTests:testBug100772_ProjectScope_InterfacesAndClass08()
2277=JavaSearchBugsTests:testBug211366()
2278=JavaSearchBugsTests:testBug84724b()
2279=JavaSearchBugsTests:testBug110060_TypePattern10_SamePartCount()
2280=JavaSearchBugsTests:testBug336322c()
2281=JavaSearchBugsTests:testBug181488a()
2282=JavaSearchBugsTests:testBug195489d()
2283=JavaSearchBugsTests:testBug124645a()
2284=JavaSearchBugsTests:testBug137087_CamelCaseSamePartCount()
2285=JavaSearchBugsTests:testBug100695()
2286=JavaSearchBugsTests:testBug144044b()
2287=JavaSearchBugsTests:testBug83693()
2288=JavaSearchBugsTests:testBug322979g()
2289=JavaSearchBugsTests:testBug296343()
2290=JavaSearchBugsTests:testBug317264e()
2291=JavaSearchBugsTests:testBug100695a()
2292=JavaSearchBugsTests:testBug110060_AllTypeNames08()
2293=JavaSearchBugsTests:testBug306223g()
2294=JavaSearchBugsTests:testBug100772_ProjectScope_ClassAndSubclass01()
2295=JavaSearchBugsTests:testBug124624_HaM_CamelCaseSamePartCount()
2296=JavaSearchBugsTests:testBug250083()
2297=JavaSearchBugsTests:testBug251827c()
2298=JavaSearchBugsTests:testBug81084string()
2299=JavaSearchBugsTests:testBug228852b()
2300=JavaSearchBugsTests:JavaSearchBugsTests(String)
2301=JavaSearchBugsTests:testBug130390b_CamelCaseSamePartCount()
2302=JavaSearchBugsTests:testBug124469f()
2303=JavaSearchBugsTests:testBug110060_FieldPattern01_SamePartCount()
2304=JavaSearchBugsTests:testBug110336h()
2305=JavaSearchBugsTests:testBug201064h_CamelCaseSamePartCount()
2306=JavaSearchBugsTests:testBug88174()
2307=JavaSearchBugsTests:testBug83716()
2308=JavaSearchBugsTests:testBug110060_FieldPattern04_SamePartCount()
2309=JavaSearchBugsTests:testBug325418d()
2310=JavaSearchBugsTests:testBug110060_TypePattern10()
2311=JavaSearchBugsTests:testBug295894c4()
2312=JavaSearchBugsTests:testBug483650_009()
2313=JavaSearchBugsTests:testBug82673()
2314=JavaSearchBugsTests:testBug89686()
2315=JavaSearchBugsTests:testBug483650_wScope_003()
2316=JavaSearchBugsTests:testBug142044_And02()
2317=JavaSearchBugsTests:testBug431357_006()
2318=JavaSearchBugsTests:testBug109695f()
2319=JavaSearchBugsTests:testBug83012()
2320=JavaSearchBugsTests:testBug84100c()
2321=JavaSearchBugsTests:setUpBug164121()
2322=JavaSearchBugsTests:testBug77093field()
2323=JavaSearchBugsTests:testBug79860()
2324=JavaSearchBugsTests:testBug94160()
2325=JavaSearchBugsTests:testBug156177()
2326=JavaSearchBugsTests:setUpBug79990()
2327=JavaSearchBugsTests:testBug100695d()
2328=JavaSearchBugsTests:testBug160324b()
2329=JavaSearchBugsTests:testBug306223d()
2330=JavaSearchBugsTests:testBug124469b()
2331=JavaSearchBugsTests:testBug431357_015()
2332=JavaSearchBugsTests:testBug82208_INTERFACE()
2333=JavaSearchBugsTests:testBug86380_Method()
2334=JavaSearchBugsTests:testBug266837()
2335=JavaSearchBugsTests:testBug110060_AllTypeNames07()
2336=JavaSearchBugsTests:testBug160301b()
2337=JavaSearchBugsTests:testBug317264b()
2338=JavaSearchBugsTests:testBug251827b()
2339=JavaSearchBugsTests:testBug84100d()
2340=JavaSearchBugsTests:testBug228852a()
2341=JavaSearchBugsTests:testBug74776()
2342=JavaSearchBugsTests:testBug124469c()
2343=JavaSearchBugsTests:testBug201064a_CamelCase()
2344=JavaSearchBugsTests:testBug201064e_CamelCase()
2345=JavaSearchBugsTests:testBug100772_ProjectScope_Complex02()
2346=JavaSearchBugsTests:testBug109695i()
2347=JavaSearchBugsTests:testBug110060_TypePattern07_SamePartCount()
2348=JavaSearchBugsTests:testBug110336g()
2349=JavaSearchBugsTests:testBug221110()
2350=JavaSearchBugsTests:testBug483650_wScope_004()
2351=JavaSearchBugsTests:testBug91078()
2352=JavaSearchBugsTests:testBug110060_TypePattern01_SamePartCount()
2353=JavaSearchBugsTests:testBug124624_HaMa_CamelCaseSamePartCount()
2354=JavaSearchBugsTests:testBug199004_ApplicationLibraries()
2355=JavaSearchBugsTests:setUpBug100772_ProjectScope_InterfacesAndClass()
2356=JavaSearchBugsTests:testBug110060_TypePattern04_SamePartCount()
2357=JavaSearchBugsTests:testBug80223()
2358=JavaSearchBugsTests:testBug124624_HashMa_CamelCaseSamePartCount()
2359=JavaSearchBugsTests:testBug478042_wScope_0001()
2360=JavaSearchBugsTests:testBug431357_003()
2361=JavaSearchBugsTests:testBug295894c5()
2362=JavaSearchBugsTests:testBug160301_Abstract()
2363=JavaSearchBugsTests:testBug100772_HierarchyScope_InterfacesAndClass01()
2364=JavaSearchBugsTests:testBug95152_jar04()
2365=JavaSearchBugsTests:testBug166348_Qualified()
2366=JavaSearchBugsTests:testBug81084a()
2367=JavaSearchBugsTests:testBug73112b()
2368=JavaSearchBugsTests:testBug97606b()
2369=JavaSearchBugsTests:testBug201064i_CamelCase()
2370=JavaSearchBugsTests:setUpBug83304_TypeParameterizedElementPattern()
2371=JavaSearchBugsTests:testBug160324c()
2372=JavaSearchBugsTests:testBug210689()
2373=JavaSearchBugsTests:testBug317264c()
2374=JavaSearchBugsTests:testBug100695c()
2375=JavaSearchBugsTests:testBug110060_AllTypeNames06()
2376=JavaSearchBugsTests:testBug306223e()
2377=JavaSearchBugsTests:testBug84100e()
2378=JavaSearchBugsTests:testBug110060_ConstructorPattern04_SamePartCount()
2379=JavaSearchBugsTests:setUpBug110060_TypePattern()
2380=JavaSearchBugsTests:testBug110060_ConstructorPattern01_SamePartCount()
2381=JavaSearchBugsTests:testBug209778()
2382=JavaSearchBugsTests:testBug124469d()
2383=JavaSearchBugsTests:testBug100772_ProjectScope_Complex03()
2384=JavaSearchBugsTests:testBug109695h()
2385=JavaSearchBugsTests:testBug137087l_CamelCaseSamePartCount()
2386=JavaSearchBugsTests:testBug77093constructor()
2387=JavaSearchBugsTests:testBug137984_jar()
2388=JavaSearchBugsTests:testBug251827a()
2389=JavaSearchBugsTests:testBug483650_wScope_005()
2390=JavaSearchBugsTests:testBug110336f()
2391=JavaSearchBugsTests:testBug124645d()
2392=JavaSearchBugsTests:testBug83304_TypeParameterizedElementPattern()
2393=JavaSearchBugsTests:testBug228464()
2394=JavaSearchBugsTests:testBug70827()
2395=JavaSearchBugsTests:testBug110060_MethodPattern09_SamePartCount()
2396=JavaSearchBugsTests:testBug110060_MethodPattern06_SamePartCount()
2397=JavaSearchBugsTests:testBug90915()
2398=JavaSearchBugsTests:testBug100772_HierarchyScope_InterfacesAndClass02()
2399=JavaSearchBugsTests:testBug110060_MethodPattern03_SamePartCount()
2400=JavaSearchBugsTests:testBug478042_wScope_0002()
2401=JavaSearchBugsTests:testBug97322()
2402=JavaSearchBugsTests:testBug119545()
2403=JavaSearchBugsTests:testBug265065b()
2404=JavaSearchBugsTests:testBug431357_004()
2405=JavaSearchBugsTests:testBug400902a()
2406=JavaSearchBugsTests:testBug110060_AllTypeNames02_SamePartCount()
2407=JavaSearchBugsTests:testBug110060_AllTypeNames08_SamePartCount()
2408=X09:test()
2409=AllocationExpressionCompletionTest:testNoQualificationQualifiedTypeName()
2410=AllocationExpressionCompletionTest:testQualifiedWithPrimary()
2411=AllocationExpressionCompletionTest:AllocationExpressionCompletionTest(String)
2412=AllocationExpressionCompletionTest:testQualifiedWithName()
2413=AllocationExpressionCompletionTest:testInIfStatement()
2414=AllocationExpressionCompletionTest:testNoQualificationSimpleTypeName()
2415=AllocationExpressionCompletionTest:suite()
2416=IDOMMethod:isConstructor()
2417=IDOMMethod:setTypeParameters(String[])
2418=IDOMMethod:addParameter(String, String)
2419=IDOMMethod:getExceptions()
2420=IDOMMethod:getParameterTypes()
2421=IDOMMethod:getDefault()
2422=IDOMMethod:getName()
2423=IDOMMethod:addException(String)
2424=IDOMMethod:setDefault(String)
2425=IDOMMethod:setExceptions(String[])
2426=IDOMMethod:getParameterNames()
2427=IDOMMethod:setReturnType(String)
2428=IDOMMethod:setParameters(String[], String[])
2429=IDOMMethod:setConstructor(boolean)
2430=IDOMMethod:setName(String)
2431=IDOMMethod:getBody()
2432=IDOMMethod:getTypeParameters()
2433=IDOMMethod:setBody(String)
2434=IDOMMethod:getReturnType()
2435=Deprecated15Test:testClass()
2436=Deprecated15Test:Deprecated15Test(String)
2437=Deprecated15Test:test006()
2438=Deprecated15Test:test005()
2439=Deprecated15Test:test002()
2440=Deprecated15Test:test001()
2441=Deprecated15Test:test004()
2442=Deprecated15Test:test003()
2443=Deprecated15Test:suite()
2444=LambdaExpression:getHandleMemento(StringBuffer)
2445=LambdaExpression:closing(Object)
2446=LambdaExpression:equals(Object)
2447=LambdaExpression:resolved(Binding)
2448=LambdaExpression:getHandleMemento(StringBuffer, boolean, boolean)
2449=LambdaExpression:LambdaExpression(JavaElement, String, int, int, int, LambdaMethod)
2450=LambdaExpression:getHandleMementoDelimiter()
2451=LambdaExpression:getSuperInterfaceTypeSignatures()
2452=LambdaExpression:LambdaExpression(JavaElement, org.eclipse.jdt.internal.compiler.ast.LambdaExpression)
2453=LambdaExpression:hashCode()
2454=LambdaExpression:getPrimaryElement(boolean)
2455=LambdaExpression:makeTypeElementInfo(LambdaExpression, String, int, int, int)
2456=LambdaExpression:isAnonymous()
2457=LambdaExpression:getHandleFromMemento(String, MementoTokenizer, WorkingCopyOwner)
2458=LambdaExpression:getChildren()
2459=LambdaExpression:isLocal()
2460=LambdaExpression:LambdaExpression(JavaElement, String, int, int, int)
2461=LambdaExpression:toStringName(StringBuffer)
2462=LambdaExpression:isLambda()
2463=LambdaExpression:getElementInfo(IProgressMonitor)
2464=LambdaExpression:findLambdaSuperType(org.eclipse.jdt.internal.compiler.ast.LambdaExpression)
2465=LambdaExpression:getMethod()
2466=JavadocTest_1_3:test025()
2467=JavadocTest_1_3:testBug119857_Methods()
2468=JavadocTest_1_3:testBug96237_Public08()
2469=JavadocTest_1_3:testBug101283a()
2470=JavadocTest_1_3:test037()
2471=JavadocTest_1_3:testBug83127e()
2472=JavadocTest_1_3:testBug96237_Private04()
2473=JavadocTest_1_3:test014()
2474=JavadocTest_1_3:test024()
2475=JavadocTest_1_3:testBug95521b()
2476=JavadocTest_1_3:testBug96237_Public07()
2477=JavadocTest_1_3:test036()
2478=JavadocTest_1_3:testBug83127f()
2479=JavadocTest_1_3:testBug96237_Private05()
2480=JavadocTest_1_3:test013()
2481=JavadocTest_1_3:test023()
2482=JavadocTest_1_3:testBug83127b()
2483=JavadocTest_1_3:setUp()
2484=JavadocTest_1_3:test035()
2485=JavadocTest_1_3:testBug96237_Private06()
2486=JavadocTest_1_3:test012()
2487=JavadocTest_1_3:testBug83804()
2488=JavadocTest_1_3:test022()
2489=JavadocTest_1_3:testBug83127c()
2490=JavadocTest_1_3:test034()
2491=JavadocTest_1_3:testBug83127d()
2492=JavadocTest_1_3:testBug96237_Private07()
2493=JavadocTest_1_3:test011()
2494=JavadocTest_1_3:testBug80257()
2495=JavadocTest_1_3:testBug119857_Fields()
2496=JavadocTest_1_3:test029()
2497=JavadocTest_1_3:testBug96237_Public04()
2498=JavadocTest_1_3:test006()
2499=JavadocTest_1_3:testBug101283e()
2500=JavadocTest_1_3:test018()
2501=JavadocTest_1_3:testBug96237_Private08()
2502=JavadocTest_1_3:testBug145007()
2503=JavadocTest_1_3:test028()
2504=JavadocTest_1_3:testBug83127a()
2505=JavadocTest_1_3:testBug119857()
2506=JavadocTest_1_3:testBug101283d()
2507=JavadocTest_1_3:test005()
2508=JavadocTest_1_3:testBug96237_Public03()
2509=JavadocTest_1_3:testBug83393b()
2510=JavadocTest_1_3:test017()
2511=JavadocTest_1_3:test027()
2512=JavadocTest_1_3:testBug101283c()
2513=JavadocTest_1_3:testBug96237_Public06()
2514=JavadocTest_1_3:test004()
2515=JavadocTest_1_3:test039()
2516=JavadocTest_1_3:testBug83393a()
2517=JavadocTest_1_3:test016()
2518=JavadocTest_1_3:test026()
2519=JavadocTest_1_3:testBug101283b()
2520=JavadocTest_1_3:testBug96237_Public05()
2521=JavadocTest_1_3:test003()
2522=JavadocTest_1_3:test038()
2523=JavadocTest_1_3:test015()
2524=JavadocTest_1_3:test040()
2525=JavadocTest_1_3:testBug95286_Private()
2526=JavadocTest_1_3:test009()
2527=JavadocTest_1_3:testBug95286_Default()
2528=JavadocTest_1_3:test008()
2529=JavadocTest_1_3:testBug101283g()
2530=JavadocTest_1_3:testBug96237_Public02()
2531=JavadocTest_1_3:suite()
2532=JavadocTest_1_3:testBug119857_Public02()
2533=JavadocTest_1_3:testBug86769()
2534=JavadocTest_1_3:test007()
2535=JavadocTest_1_3:testBug96237_Public01()
2536=JavadocTest_1_3:testBug119857_Public03()
2537=JavadocTest_1_3:test019()
2538=JavadocTest_1_3:test021()
2539=JavadocTest_1_3:testBug112346()
2540=JavadocTest_1_3:testBug119857_Private01()
2541=JavadocTest_1_3:test033()
2542=JavadocTest_1_3:test010()
2543=JavadocTest_1_3:test020()
2544=JavadocTest_1_3:testBug119857_Types()
2545=JavadocTest_1_3:testBug119857_Private02()
2546=JavadocTest_1_3:testBug95521()
2547=JavadocTest_1_3:testClass()
2548=JavadocTest_1_3:test032()
2549=JavadocTest_1_3:testBug119857_Public01()
2550=JavadocTest_1_3:testBug96237_Private01()
2551=JavadocTest_1_3:testBug82514()
2552=JavadocTest_1_3:JavadocTest_1_3(String)
2553=JavadocTest_1_3:test031()
2554=JavadocTest_1_3:testBug83127g()
2555=JavadocTest_1_3:testBug96237_Private02()
2556=JavadocTest_1_3:getCompilerOptions()
2557=JavadocTest_1_3:test030()
2558=JavadocTest_1_3:testBug83127h()
2559=JavadocTest_1_3:testBug96237_Private03()
2560=Foo:foo()
2561=VerboseElementCache:makeSpace(int)
2562=VerboseElementCache:put(Object, Object)
2563=VerboseElementCache:VerboseElementCache(int, String)
2564=AbstractJavadocCompletionModelTest:AbstractJavadocCompletionModelTest(String)
2565=AbstractJavadocCompletionModelTest:assertResults(String)
2566=AbstractJavadocCompletionModelTest:setUpProjectOptions(String)
2567=AbstractJavadocCompletionModelTest:completeInJavadoc(String[], boolean, String, int, int[])
2568=AbstractJavadocCompletionModelTest:setUpSuite()
2569=AbstractJavadocCompletionModelTest:displayString(String, int)
2570=AbstractJavadocCompletionModelTest:assertSortedResults(String)
2571=AbstractJavadocCompletionModelTest:assertResults(String[], String, String)
2572=AbstractJavadocCompletionModelTest:completeInJavadoc(String[], boolean, String, int)
2573=AbstractJavadocCompletionModelTest:completeInJavadoc(String, String, boolean, String, int, int[])
2574=AbstractJavadocCompletionModelTest:writeFiles(String[])
2575=AbstractJavadocCompletionModelTest:completeInJavadoc(String, String, boolean, String, int)
2576=AbstractJavadocCompletionModelTest:tearDown()
2577=AbstractJavadocCompletionModelTest:completeInJavadoc(String[], boolean, String)
2578=AbstractJavadocCompletionModelTest:assertNoProblem(String)
2579=AbstractJavadocCompletionModelTest:suite()
2580=AbstractJavadocCompletionModelTest:completeInJavadoc(String, String, boolean, String, boolean)
2581=AbstractJavadocCompletionModelTest:tearDownSuite()
2582=AbstractJavadocCompletionModelTest:completeInJavadoc(String, String, boolean, String)
2583=AssertStatement:traverse(ASTVisitor, BlockScope)
2584=AssertStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
2585=AssertStatement:printStatement(int, StringBuffer)
2586=AssertStatement:AssertStatement(Expression, int)
2587=AssertStatement:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo)
2588=AssertStatement:resolve(BlockScope)
2589=AssertStatement:AssertStatement(Expression, Expression, int)
2590=AssertStatement:generateCode(BlockScope, CodeStream)
2591=PolymorphicMethodBinding:matches(TypeBinding[], TypeBinding)
2592=PolymorphicMethodBinding:isPolymorphic()
2593=PolymorphicMethodBinding:original()
2594=PolymorphicMethodBinding:PolymorphicMethodBinding(MethodBinding, TypeBinding[])
2595=PolymorphicMethodBinding:isVarargs()
2596=PolymorphicMethodBinding:PolymorphicMethodBinding(MethodBinding, TypeBinding, TypeBinding[])
2597=ResolveLocalField2:foo1()
2598=ResolveLocalField2:foo2()
2599=TestUtil:addLibraryEntry(IJavaProject, IPath, IPath, IPath, boolean)
2600=TestUtil:createAndAddAnnotationJar(IJavaProject)
2601=TestUtil:zip(ZipOutputStream, File, int, FileFilter)
2602=TestUtil:zip(String, Map<File, FileFilter>)
2603=TestUtil:enableAutoBuild(boolean)
2604=TestUtil:getPluginExtSrcDir()
2605=TestUtil:unzip(ZipInputStream, File)
2606=TestUtil:deleteFile(IPath)
2607=TestUtil:PackageFileFilter:PackageFileFilter(String, String)
2608=TestUtil:getProjectPath(IJavaProject)
2609=TestUtil:moveFile(File, String)
2610=TestUtil:createAndAddExternalAnnotationJar(IJavaProject)
2611=TestUtil:getBytesFromFile(File)
2612=TestUtil:PackageFileFilter:accept(File)
2613=TestUtil:unzip(File, File)
2614=TestUtil:getAnnotationsClassesDir()
2615=TestUtil:getFileInPlugin(Plugin, IPath)
2616=TestUtil:getPluginExtClassesDir()
2617=ASTConverterTest2:test0502c()
2618=ASTConverterTest2:test0439()
2619=ASTConverterTest2:test0514()
2620=ASTConverterTest2:test0416()
2621=ASTConverterTest2:test0492()
2622=ASTConverterTest2:test0503d()
2623=ASTConverterTest2:test0427()
2624=ASTConverterTest2:test0548()
2625=ASTConverterTest2:test0525()
2626=ASTConverterTest2:test0538f()
2627=ASTConverterTest2:test0480()
2628=ASTConverterTest2:test0404()
2629=ASTConverterTest2:test0502d()
2630=ASTConverterTest2:test0515()
2631=ASTConverterTest2:test0417()
2632=ASTConverterTest2:test0470()
2633=ASTConverterTest2:test0493()
2634=ASTConverterTest2:test0503e()
2635=ASTConverterTest2:test0428()
2636=ASTConverterTest2:internalThrownExceptions(MethodDeclaration)
2637=ASTConverterTest2:test0538g()
2638=ASTConverterTest2:test0526()
2639=ASTConverterTest2:test0549()
2640=ASTConverterTest2:test0481()
2641=ASTConverterTest2:test0405()
2642=ASTConverterTest2:test0437()
2643=ASTConverterTest2:test0512()
2644=ASTConverterTest2:test0535()
2645=ASTConverterTest2:test0537b()
2646=ASTConverterTest2:test0558()
2647=ASTConverterTest2:test0569()
2648=ASTConverterTest2:test0490()
2649=ASTConverterTest2:test0414()
2650=ASTConverterTest2:test0502a()
2651=ASTConverterTest2:test0503b()
2652=ASTConverterTest2:test0425()
2653=ASTConverterTest2:test0448()
2654=ASTConverterTest2:test0538d()
2655=ASTConverterTest2:test0500()
2656=ASTConverterTest2:test0546()
2657=ASTConverterTest2:test0523()
2658=ASTConverterTest2:test0610()
2659=ASTConverterTest2:test0402()
2660=ASTConverterTest2:componentType(ArrayType)
2661=ASTConverterTest2:test0502b()
2662=ASTConverterTest2:test0438()
2663=ASTConverterTest2:ASTConverterTest2(String)
2664=ASTConverterTest2:test0559()
2665=ASTConverterTest2:test0536()
2666=ASTConverterTest2:test0537c()
2667=ASTConverterTest2:test0513()
2668=ASTConverterTest2:test0491()
2669=ASTConverterTest2:test0415()
2670=ASTConverterTest2:test0503c()
2671=ASTConverterTest2:test0426()
2672=ASTConverterTest2:test0449()
2673=ASTConverterTest2:test0501()
2674=ASTConverterTest2:test0524()
2675=ASTConverterTest2:test0547()
2676=ASTConverterTest2:test0538e()
2677=ASTConverterTest2:test0403()
2678=ASTConverterTest2:test0435()
2679=ASTConverterTest2:test0458()
2680=ASTConverterTest2:test0502g()
2681=ASTConverterTest2:test0533()
2682=ASTConverterTest2:test0556()
2683=ASTConverterTest2:test0567()
2684=ASTConverterTest2:test0510()
2685=ASTConverterTest2:test0412()
2686=ASTConverterTest2:test0423()
2687=ASTConverterTest2:test0446()
2688=ASTConverterTest2:test0469()
2689=ASTConverterTest2:test0503h()
2690=ASTConverterTest2:test0544()
2691=ASTConverterTest2:test0521()
2692=ASTConverterTest2:test0579()
2693=ASTConverterTest2:test0436()
2694=ASTConverterTest2:test0459()
2695=ASTConverterTest2:test0502h()
2696=ASTConverterTest2:test0511()
2697=ASTConverterTest2:test0557()
2698=ASTConverterTest2:test0534()
2699=ASTConverterTest2:test0413()
2700=ASTConverterTest2:test0424()
2701=ASTConverterTest2:test0447()
2702=ASTConverterTest2:test0503i()
2703=ASTConverterTest2:test0522()
2704=ASTConverterTest2:test0545()
2705=ASTConverterTest2:test0401()
2706=ASTConverterTest2:test0410()
2707=ASTConverterTest2:test0456()
2708=ASTConverterTest2:test0479()
2709=ASTConverterTest2:test0502e()
2710=ASTConverterTest2:test0565()
2711=ASTConverterTest2:test0531()
2712=ASTConverterTest2:test0554()
2713=ASTConverterTest2:test0433()
2714=ASTConverterTest2:test0467()
2715=ASTConverterTest2:test0503f()
2716=ASTConverterTest2:test0538h()
2717=ASTConverterTest2:test0577()
2718=ASTConverterTest2:test0542()
2719=ASTConverterTest2:test0421()
2720=ASTConverterTest2:test0444()
2721=ASTConverterTest2:test0411()
2722=ASTConverterTest2:test0434()
2723=ASTConverterTest2:test0457()
2724=ASTConverterTest2:test0502f()
2725=ASTConverterTest2:test0555()
2726=ASTConverterTest2:test0566()
2727=ASTConverterTest2:test0532()
2728=ASTConverterTest2:test0445()
2729=ASTConverterTest2:test0468()
2730=ASTConverterTest2:test0503g()
2731=ASTConverterTest2:test0520()
2732=ASTConverterTest2:test0543()
2733=ASTConverterTest2:test0578()
2734=ASTConverterTest2:test0422()
2735=ASTConverterTest2:test0563()
2736=ASTConverterTest2:test0552()
2737=ASTConverterTest2:test0608()
2738=ASTConverterTest2:test0431()
2739=ASTConverterTest2:test0477()
2740=ASTConverterTest2:test0454()
2741=ASTConverterTest2:test0575()
2742=ASTConverterTest2:test0540()
2743=ASTConverterTest2:test0442()
2744=ASTConverterTest2:test0465()
2745=ASTConverterTest2:test0488()
2746=ASTConverterTest2:suite()
2747=ASTConverterTest2:test0478()
2748=ASTConverterTest2:test0564()
2749=ASTConverterTest2:test0553()
2750=ASTConverterTest2:test0609()
2751=ASTConverterTest2:test0530()
2752=ASTConverterTest2:test0432()
2753=ASTConverterTest2:test0455()
2754=ASTConverterTest2:test0489()
2755=ASTConverterTest2:test0576()
2756=ASTConverterTest2:test0541()
2757=ASTConverterTest2:test0420()
2758=ASTConverterTest2:test0466()
2759=ASTConverterTest2:test0443()
2760=ASTConverterTest2:test0502i()
2761=ASTConverterTest2:test0561()
2762=ASTConverterTest2:test0550()
2763=ASTConverterTest2:test0606()
2764=ASTConverterTest2:test0452()
2765=ASTConverterTest2:test0498()
2766=ASTConverterTest2:test0475()
2767=ASTConverterTest2:test0508()
2768=ASTConverterTest2:test0573()
2769=ASTConverterTest2:test0440()
2770=ASTConverterTest2:test0463()
2771=ASTConverterTest2:test0486()
2772=ASTConverterTest2:test0502j()
2773=ASTConverterTest2:test0562()
2774=ASTConverterTest2:test0551()
2775=ASTConverterTest2:test0607()
2776=ASTConverterTest2:test0430()
2777=ASTConverterTest2:test0453()
2778=ASTConverterTest2:test0476()
2779=ASTConverterTest2:test0499()
2780=ASTConverterTest2:test0509()
2781=ASTConverterTest2:setUpSuite()
2782=ASTConverterTest2:test0574()
2783=ASTConverterTest2:test0441()
2784=ASTConverterTest2:test0487()
2785=ASTConverterTest2:test0464()
2786=ASTConverterTest2:test0518()
2787=ASTConverterTest2:test0473()
2788=ASTConverterTest2:test0450()
2789=ASTConverterTest2:test0496()
2790=ASTConverterTest2:test0529()
2791=ASTConverterTest2:test0571()
2792=ASTConverterTest2:test0506()
2793=ASTConverterTest2:test0538b()
2794=ASTConverterTest2:test0408()
2795=ASTConverterTest2:test0461()
2796=ASTConverterTest2:test0484()
2797=ASTConverterTest2:test0519()
2798=ASTConverterTest2:test0560()
2799=ASTConverterTest2:test0537a()
2800=ASTConverterTest2:test0451()
2801=ASTConverterTest2:test0474()
2802=ASTConverterTest2:test0497()
2803=ASTConverterTest2:test0503a()
2804=ASTConverterTest2:test0507()
2805=ASTConverterTest2:test0572()
2806=ASTConverterTest2:test0538c()
2807=ASTConverterTest2:test0409()
2808=ASTConverterTest2:test0462()
2809=ASTConverterTest2:test0485()
2810=ASTConverterTest2:test0516()
2811=ASTConverterTest2:test0539()
2812=ASTConverterTest2:test0418()
2813=ASTConverterTest2:test0494()
2814=ASTConverterTest2:test0471()
2815=ASTConverterTest2:test0429()
2816=ASTConverterTest2:test0504()
2817=ASTConverterTest2:test0527()
2818=ASTConverterTest2:test0406()
2819=ASTConverterTest2:test0482()
2820=ASTConverterTest2:test0517()
2821=ASTConverterTest2:test0419()
2822=ASTConverterTest2:test0472()
2823=ASTConverterTest2:test0495()
2824=ASTConverterTest2:test0505()
2825=ASTConverterTest2:test0528()
2826=ASTConverterTest2:test0570()
2827=ASTConverterTest2:test0538a()
2828=ASTConverterTest2:test0460()
2829=ASTConverterTest2:test0483()
2830=ASTConverterTest2:test0407()
2831=ASTConverterJavadocTest:test108()
2832=ASTConverterJavadocTest:verifyNamePositions(int, Name, char[])
2833=ASTConverterJavadocTest:testBug79809()
2834=ASTConverterJavadocTest:verifyBindings(TagElement)
2835=ASTConverterJavadocTest:testBug113108a()
2836=ASTConverterJavadocTest:test107()
2837=ASTConverterJavadocTest:test009()
2838=ASTConverterJavadocTest:testBug103304()
2839=ASTConverterJavadocTest:testBug100041b()
2840=ASTConverterJavadocTest:testBug336821()
2841=ASTConverterJavadocTest:ASTConverterJavadocTest(String, String, String)
2842=ASTConverterJavadocTest:testBug68017()
2843=ASTConverterJavadocTest:testBug113108b()
2844=ASTConverterJavadocTest:testBug83804a()
2845=ASTConverterJavadocTest:testBug53276()
2846=ASTConverterJavadocTest:test106()
2847=ASTConverterJavadocTest:test008()
2848=ASTConverterJavadocTest:verifyComments(String, char[], Map)
2849=ASTConverterJavadocTest:testBug93880_15b()
2850=ASTConverterJavadocTest:verifyWorkingCopiesComments()
2851=ASTConverterJavadocTest:test105()
2852=ASTConverterJavadocTest:test007()
2853=ASTConverterJavadocTest:testBug68726()
2854=ASTConverterJavadocTest:tearDown()
2855=ASTConverterJavadocTest:testBug93880_15a()
2856=ASTConverterJavadocTest:verifyNameBindings(Name)
2857=ASTConverterJavadocTest:getName()
2858=ASTConverterJavadocTest:suite()
2859=ASTConverterJavadocTest:testBug54424()
2860=ASTConverterJavadocTest:testBug93880_14b()
2861=ASTConverterJavadocTest:getUnixSource(char[])
2862=ASTConverterJavadocTest:test010()
2863=ASTConverterJavadocTest:testBug79809b()
2864=ASTConverterJavadocTest:testBug106581()
2865=ASTConverterJavadocTest:testBug51226()
2866=ASTConverterJavadocTest:verifyPositions(TagElement, char[])
2867=ASTConverterJavadocTest:testBug93880_15d()
2868=ASTConverterJavadocTest:allTags(Javadoc)
2869=ASTConverterJavadocTest:testBug93880_14a()
2870=ASTConverterJavadocTest:testBug79904()
2871=ASTConverterJavadocTest:getUnicodeSource(char[])
2872=ASTConverterJavadocTest:testBug54776()
2873=ASTConverterJavadocTest:testBug93880_15c()
2874=ASTConverterJavadocTest:testBug52908a()
2875=ASTConverterJavadocTest:testBug93880_14d()
2876=ASTConverterJavadocTest:verifyMapper(String, int, int[])
2877=ASTConverterJavadocTest:testBug63044()
2878=ASTConverterJavadocTest:testBug51600()
2879=ASTConverterJavadocTest:testBug125903()
2880=ASTConverterJavadocTest:test109()
2881=ASTConverterJavadocTest:addFailure(String)
2882=ASTConverterJavadocTest:testBug53757()
2883=ASTConverterJavadocTest:testBug80221()
2884=ASTConverterJavadocTest:testBug93880_14c()
2885=ASTConverterJavadocTest:testBug55221d()
2886=ASTConverterJavadocTest:testBug65253()
2887=ASTConverterJavadocTest:testBug65288()
2888=ASTConverterJavadocTest:testBug93880_15e()
2889=ASTConverterJavadocTest:test100()
2890=ASTConverterJavadocTest:testBug55221c()
2891=ASTConverterJavadocTest:testBug481143b()
2892=ASTConverterJavadocTest:test002()
2893=ASTConverterJavadocTest:testBug51617()
2894=ASTConverterJavadocTest:setUp()
2895=ASTConverterJavadocTest:testBug80257()
2896=ASTConverterJavadocTest:testBug70892_JLS3()
2897=ASTConverterJavadocTest:testBug51508()
2898=ASTConverterJavadocTest:test014()
2899=ASTConverterJavadocTest:verifyComments(String, char[])
2900=ASTConverterJavadocTest:testBug130752()
2901=ASTConverterJavadocTest:testBug55221b()
2902=ASTConverterJavadocTest:testBug53075()
2903=ASTConverterJavadocTest:testBug69302()
2904=ASTConverterJavadocTest:testBug481143c()
2905=ASTConverterJavadocTest:test001()
2906=ASTConverterJavadocTest:testBug93880_14e()
2907=ASTConverterJavadocTest:assumeEquals(String, int, int)
2908=ASTConverterJavadocTest:tearDownSuite()
2909=ASTConverterJavadocTest:testBug94150()
2910=ASTConverterJavadocTest:testBug51911()
2911=ASTConverterJavadocTest:testBug70892_JLS2()
2912=ASTConverterJavadocTest:testBug77644()
2913=ASTConverterJavadocTest:test013()
2914=ASTConverterJavadocTest:test000()
2915=ASTConverterJavadocTest:testBug51363()
2916=ASTConverterJavadocTest:verifyComments(String)
2917=ASTConverterJavadocTest:testBug55221a()
2918=ASTConverterJavadocTest:runConversion(char[], String, IJavaProject)
2919=ASTConverterJavadocTest:testBug52908()
2920=ASTConverterJavadocTest:test012()
2921=ASTConverterJavadocTest:testBug130752c()
2922=ASTConverterJavadocTest:ASTConverterJavadocTest(String)
2923=ASTConverterJavadocTest:testBug125676()
2924=ASTConverterJavadocTest:buildSuite(TestSuite, String)
2925=ASTConverterJavadocTest:testBug52908unicode()
2926=ASTConverterJavadocTest:testBug84049()
2927=ASTConverterJavadocTest:copyDirectory(File, File)
2928=ASTConverterJavadocTest:test011()
2929=ASTConverterJavadocTest:testBug108622()
2930=ASTConverterJavadocTest:testBug65174()
2931=ASTConverterJavadocTest:testBug83804()
2932=ASTConverterJavadocTest:testBug130752b()
2933=ASTConverterJavadocTest:testBug87845()
2934=ASTConverterJavadocTest:testBug73348()
2935=ASTConverterJavadocTest:test104()
2936=ASTConverterJavadocTest:testBug55223b()
2937=ASTConverterJavadocTest:testBug68025()
2938=ASTConverterJavadocTest:test006()
2939=ASTConverterJavadocTest:testBug228648()
2940=ASTConverterJavadocTest:verifyComments(ICompilationUnit)
2941=ASTConverterJavadocTest:testBug347100()
2942=ASTConverterJavadocTest:testBug99507()
2943=ASTConverterJavadocTest:testBug51478()
2944=ASTConverterJavadocTest:assumeTrue(String, boolean)
2945=ASTConverterJavadocTest:testBug51241()
2946=ASTConverterJavadocTest:testBug48489()
2947=ASTConverterJavadocTest:test103()
2948=ASTConverterJavadocTest:assumeNull(String, Object)
2949=ASTConverterJavadocTest:testBug55223a()
2950=ASTConverterJavadocTest:testBug51650()
2951=ASTConverterJavadocTest:testBug69272()
2952=ASTConverterJavadocTest:test005()
2953=ASTConverterJavadocTest:testBug165525()
2954=ASTConverterJavadocTest:runConversion(char[], String, IJavaProject, Map)
2955=ASTConverterJavadocTest:assumeNotNull(String, Object)
2956=ASTConverterJavadocTest:test102()
2957=ASTConverterJavadocTest:testBug69275()
2958=ASTConverterJavadocTest:test004()
2959=ASTConverterJavadocTest:testBug100041c()
2960=ASTConverterJavadocTest:assumeEquals(String, Object, Object)
2961=ASTConverterJavadocTest:getNextChar(char[], int)
2962=ASTConverterJavadocTest:testBug113108c()
2963=ASTConverterJavadocTest:testBug51476()
2964=ASTConverterJavadocTest:verifyBindings(Javadoc)
2965=ASTConverterJavadocTest:test101()
2966=ASTConverterJavadocTest:testBug50898()
2967=ASTConverterJavadocTest:verifyPositions(Javadoc, char[])
2968=ASTConverterJavadocTest:testBug481143a()
2969=ASTConverterJavadocTest:test003()
2970=ASTConverterJavadocTest:testBug51770()
2971=ASTConverterJavadocTest:testBug100041()
2972=ASTConverterJavadocTest:testBug99507b()
2973=ASTConverterJavadocTest:testBug51660()
2974=ASTConverterJavadocTest:setSourceComment(char[])
2975=ASTConverterJavadocTest:test015()
2976=IJavaSearchResultCollector:done()
2977=IJavaSearchResultCollector:getProgressMonitor()
2978=IJavaSearchResultCollector:aboutToStart()
2979=IJavaSearchResultCollector:accept(IResource, int, int, IJavaElement, int)
2980=X21:createSearchPattern()
2981=ClasspathDirectory:doesFileExist(String, String, String)
2982=ClasspathDirectory:getProjectRelativePath()
2983=ClasspathDirectory:debugPathString()
2984=ClasspathDirectory:cleanup()
2985=ClasspathDirectory:toString()
2986=ClasspathDirectory:equals(Object)
2987=ClasspathDirectory:hashCode()
2988=ClasspathDirectory:ClasspathDirectory(IContainer, boolean, AccessRuleSet, IPath)
2989=ClasspathDirectory:reset()
2990=ClasspathDirectory:directoryList(String)
2991=ClasspathDirectory:findClass(String, String, String)
2992=ClasspathDirectory:isPackage(String)
2993=ClasspathDirectory:isOutputFolder()
2994=ClasspathDirectory:isExcluded(IResource)
2995=RoundCompleteListener:roundComplete(RoundCompleteEvent)
2996=Test:foo(java.util.Vector)
2997=StackMapAttributeTest:test065()
2998=StackMapAttributeTest:suite()
2999=StackMapAttributeTest:test042()
3000=StackMapAttributeTest:test054()
3001=StackMapAttributeTest:test031()
3002=StackMapAttributeTest:testBug359495b()
3003=StackMapAttributeTest:test064()
3004=StackMapAttributeTest:test041()
3005=StackMapAttributeTest:test053()
3006=StackMapAttributeTest:test030()
3007=StackMapAttributeTest:test040()
3008=StackMapAttributeTest:test063()
3009=StackMapAttributeTest:test052()
3010=StackMapAttributeTest:test062()
3011=StackMapAttributeTest:test051()
3012=StackMapAttributeTest:testBug380313()
3013=StackMapAttributeTest:test012()
3014=StackMapAttributeTest:test035()
3015=StackMapAttributeTest:test058()
3016=StackMapAttributeTest:test385593_2()
3017=StackMapAttributeTest:test001()
3018=StackMapAttributeTest:test047()
3019=StackMapAttributeTest:test024()
3020=StackMapAttributeTest:test034()
3021=StackMapAttributeTest:test057()
3022=StackMapAttributeTest:test022()
3023=StackMapAttributeTest:testBug380313b()
3024=StackMapAttributeTest:test023()
3025=StackMapAttributeTest:test046()
3026=StackMapAttributeTest:test069()
3027=StackMapAttributeTest:test011()
3028=StackMapAttributeTest:testBug359495a()
3029=StackMapAttributeTest:test056()
3030=StackMapAttributeTest:test021()
3031=StackMapAttributeTest:test044()
3032=StackMapAttributeTest:test045()
3033=StackMapAttributeTest:test068()
3034=StackMapAttributeTest:test010()
3035=StackMapAttributeTest:test033()
3036=StackMapAttributeTest:test066()
3037=StackMapAttributeTest:test043()
3038=StackMapAttributeTest:test020()
3039=StackMapAttributeTest:test067()
3040=StackMapAttributeTest:test055()
3041=StackMapAttributeTest:test032()
3042=StackMapAttributeTest:test016()
3043=StackMapAttributeTest:test039()
3044=StackMapAttributeTest:testBug412203_b()
3045=StackMapAttributeTest:test005()
3046=StackMapAttributeTest:test028()
3047=StackMapAttributeTest:test015()
3048=StackMapAttributeTest:test038()
3049=StackMapAttributeTest:testBug412203_c()
3050=StackMapAttributeTest:test055a()
3051=StackMapAttributeTest:test004()
3052=StackMapAttributeTest:test027()
3053=StackMapAttributeTest:test394718()
3054=StackMapAttributeTest:test014()
3055=StackMapAttributeTest:test037()
3056=StackMapAttributeTest:test026()
3057=StackMapAttributeTest:test003()
3058=StackMapAttributeTest:test049()
3059=StackMapAttributeTest:test036()
3060=StackMapAttributeTest:test013()
3061=StackMapAttributeTest:test385593_1()
3062=StackMapAttributeTest:test059()
3063=StackMapAttributeTest:test002()
3064=StackMapAttributeTest:test025()
3065=StackMapAttributeTest:test048()
3066=StackMapAttributeTest:testBug380927()
3067=StackMapAttributeTest:test061()
3068=StackMapAttributeTest:test009()
3069=StackMapAttributeTest:test050()
3070=StackMapAttributeTest:test019()
3071=StackMapAttributeTest:testClass()
3072=StackMapAttributeTest:test060()
3073=StackMapAttributeTest:test008()
3074=StackMapAttributeTest:StackMapAttributeTest(String)
3075=StackMapAttributeTest:test018()
3076=StackMapAttributeTest:test007()
3077=StackMapAttributeTest:test017()
3078=StackMapAttributeTest:testBug412203_a()
3079=StackMapAttributeTest:test029()
3080=StackMapAttributeTest:test006()
3081=StackMapAttributeTest:test070()
3082=AnnotatableTypeSystem:getWildcard(ReferenceBinding, int, TypeBinding, TypeBinding[], int, AnnotationBinding[])
3083=AnnotatableTypeSystem:flattenedAnnotations(AnnotationBinding[][])
3084=AnnotatableTypeSystem:haveTypeAnnotations(TypeBinding, TypeBinding, TypeBinding[], AnnotationBinding[])
3085=AnnotatableTypeSystem:getParameterizedType(ReferenceBinding, TypeBinding[], ReferenceBinding, AnnotationBinding[])
3086=AnnotatableTypeSystem:getParameterizedType(ReferenceBinding, TypeBinding[], ReferenceBinding)
3087=AnnotatableTypeSystem:haveTypeAnnotations(TypeBinding, TypeBinding)
3088=AnnotatableTypeSystem:haveTypeAnnotations(TypeBinding, AnnotationBinding[])
3089=AnnotatableTypeSystem:getWildcard(ReferenceBinding, int, TypeBinding, TypeBinding[], int)
3090=AnnotatableTypeSystem:getArrayType(TypeBinding, int)
3091=AnnotatableTypeSystem:getRawType(ReferenceBinding, ReferenceBinding)
3092=AnnotatableTypeSystem:isAnnotatedTypeSystem()
3093=AnnotatableTypeSystem:getMemberType(ReferenceBinding, ReferenceBinding)
3094=AnnotatableTypeSystem:getRawType(ReferenceBinding, ReferenceBinding, AnnotationBinding[])
3095=AnnotatableTypeSystem:AnnotatableTypeSystem(LookupEnvironment)
3096=AnnotatableTypeSystem:getAnnotatedType(TypeBinding, AnnotationBinding[][])
3097=AnnotatableTypeSystem:getAnnotatedTypes(TypeBinding)
3098=AnnotatableTypeSystem:getAnnotatedType(TypeBinding, TypeBinding, AnnotationBinding[])
3099=AnnotatableTypeSystem:getArrayType(TypeBinding, int, AnnotationBinding[])
3100=X10:foo(String)
3101=X10:bar(String)
3102=LambdaExpression:resolveType(BlockScope, boolean)
3103=LambdaExpression:checkAgainstNullAnnotation(FlowContext, Expression, FlowInfo, int)
3104=LambdaExpression:enclosingScopesHaveErrors()
3105=LambdaExpression:argumentsTypeElided()
3106=LambdaExpression:findGroundTargetTypeForElidedLambda(BlockScope, ParameterizedTypeBinding)
3107=LambdaExpression:getSyntheticArgument(LocalVariableBinding)
3108=LambdaExpression:compilationResult()
3109=LambdaExpression:kosherDescriptor(Scope, MethodBinding, boolean)
3110=LambdaExpression:getScope()
3111=LambdaExpression:getTypeBinding()
3112=LambdaExpression:isPertinentToApplicability(TypeBinding, MethodBinding)
3113=LambdaExpression:tagAsHavingIgnoredMandatoryErrors(int)
3114=LambdaExpression:generateCode(ClassScope, ClassFile)
3115=LambdaExpression:validateNullAnnotations()
3116=LambdaExpression:copy()
3117=LambdaExpression:getMarkerInterfaces()
3118=LambdaExpression:setArguments(Argument[])
3119=LambdaExpression:resolveExpressionExpecting(TypeBinding, Scope, InferenceContext18)
3120=LambdaExpression:LambdaExpression(CompilationResult, boolean)
3121=LambdaExpression:arguments()
3122=LambdaExpression:isVoidCompatible()
3123=LambdaExpression:resultExpressions()
3124=LambdaExpression:diagnosticsSourceEnd()
3125=LambdaExpression:mergeParameterNullAnnotations(BlockScope)
3126=LambdaExpression:returnsExpression(Expression, TypeBinding)
3127=LambdaExpression:original()
3128=LambdaExpression:hasErrors()
3129=LambdaExpression:printExpression(int, StringBuffer, boolean)
3130=LambdaExpression:arrowPosition()
3131=LambdaExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
3132=LambdaExpression:argumentTypes()
3133=LambdaExpression:findGroundTargetType(BlockScope, TypeBinding, TypeBinding, boolean)
3134=LambdaExpression:body()
3135=LambdaExpression:expectedResultType()
3136=LambdaExpression:printExpression(int, StringBuffer)
3137=LambdaExpression:getThrownExceptions()
3138=LambdaExpression:isValueCompatible()
3139=LambdaExpression:traverse(ASTVisitor, BlockScope)
3140=LambdaExpression:getCompilationUnitDeclaration()
3141=LambdaExpression:LambdaExpression(CompilationResult, boolean, boolean)
3142=LambdaExpression:setArrowPosition(int)
3143=LambdaExpression:generateCode(ClassFile)
3144=LambdaExpression:sIsMoreSpecific(TypeBinding, TypeBinding, Scope)
3145=LambdaExpression:cachedResolvedCopy(TypeBinding, boolean, boolean, InferenceContext18)
3146=LambdaExpression:analyzeShape()
3147=LambdaExpression:abort(int, CategorizedProblem)
3148=LambdaExpression:tagAsHavingErrors()
3149=LambdaExpression:isCompatibleWith(TypeBinding, Scope)
3150=LambdaExpression:addSyntheticArgument(LocalVariableBinding)
3151=LambdaExpression:getMethodBinding()
3152=LambdaExpression:setBody(Statement)
3153=LambdaExpression:analyzeExceptions()
3154=LambdaExpression:generateCode(BlockScope, CodeStream, boolean)
3155=LambdaExpression:isPotentiallyCompatibleWith(TypeBinding, Scope)
3156=WorkingCopyOwner:createBuffer(ICompilationUnit)
3157=WorkingCopyOwner:newWorkingCopy(String, IClasspathEntry[], IProblemRequestor, IProgressMonitor)
3158=WorkingCopyOwner:findSource(String, String)
3159=WorkingCopyOwner:getProblemRequestor(ICompilationUnit)
3160=WorkingCopyOwner:isPackage(String[])
3161=WorkingCopyOwner:setPrimaryBufferProvider(WorkingCopyOwner)
3162=WorkingCopyOwner:newWorkingCopy(String, IClasspathEntry[], IProgressMonitor)
3163=ForeachStatementTest:test020()
3164=ForeachStatementTest:test043()
3165=ForeachStatementTest:test055()
3166=ForeachStatementTest:test032()
3167=ForeachStatementTest:test044()
3168=ForeachStatementTest:test021()
3169=ForeachStatementTest:test033()
3170=ForeachStatementTest:test056()
3171=ForeachStatementTest:test010()
3172=ForeachStatementTest:test425632()
3173=ForeachStatementTest:test041()
3174=ForeachStatementTest:test030()
3175=ForeachStatementTest:test053()
3176=ForeachStatementTest:test042()
3177=ForeachStatementTest:test054()
3178=ForeachStatementTest:test031()
3179=ForeachStatementTest:test024()
3180=ForeachStatementTest:test047()
3181=ForeachStatementTest:test001()
3182=ForeachStatementTest:test013()
3183=ForeachStatementTest:test036()
3184=ForeachStatementTest:test048()
3185=ForeachStatementTest:test025()
3186=ForeachStatementTest:test002()
3187=ForeachStatementTest:test037()
3188=ForeachStatementTest:test014()
3189=ForeachStatementTest:test026()
3190=ForeachStatementTest:test049()
3191=ForeachStatementTest:test022()
3192=ForeachStatementTest:test045()
3193=ForeachStatementTest:test011()
3194=ForeachStatementTest:test034()
3195=ForeachStatementTest:test057()
3196=ForeachStatementTest:test023()
3197=ForeachStatementTest:test046()
3198=ForeachStatementTest:test012()
3199=ForeachStatementTest:test035()
3200=ForeachStatementTest:test017()
3201=ForeachStatementTest:test006()
3202=ForeachStatementTest:test029()
3203=ForeachStatementTest:test018()
3204=ForeachStatementTest:test007()
3205=ForeachStatementTest:test003()
3206=ForeachStatementTest:test015()
3207=ForeachStatementTest:test038()
3208=ForeachStatementTest:test004()
3209=ForeachStatementTest:test027()
3210=ForeachStatementTest:getCompilerOptions()
3211=ForeachStatementTest:suite()
3212=ForeachStatementTest:test016()
3213=ForeachStatementTest:test039()
3214=ForeachStatementTest:test005()
3215=ForeachStatementTest:test028()
3216=ForeachStatementTest:test051()
3217=ForeachStatementTest:test040()
3218=ForeachStatementTest:testClass()
3219=ForeachStatementTest:test052()
3220=ForeachStatementTest:test019()
3221=ForeachStatementTest:test008()
3222=ForeachStatementTest:ForeachStatementTest(String)
3223=ForeachStatementTest:test050()
3224=ForeachStatementTest:test009()
3225=TestListener:endTest(Test)
3226=TestListener:addError(Test, Throwable)
3227=TestListener:addFailure(Test, AssertionFailedError)
3228=TestListener:startTest(Test)
3229=X05:foo()
3230=X06:foo()
3231=Test:foo()
3232=AssistCompilationUnit:getPackageDeclaration(String)
3233=AssistCompilationUnit:getImportContainer()
3234=AssistCompilationUnit:getType(String)
3235=AssistCompilationUnit:hasChildren()
3236=AssistCompilationUnit:getElementInfo(IProgressMonitor)
3237=AssistCompilationUnit:AssistCompilationUnit(ICompilationUnit, WorkingCopyOwner, Map, Map)
3238=CompilationUnitDeclaration:getCompilationUnitDeclaration()
3239=CompilationUnitDeclaration:print(int, StringBuffer)
3240=CompilationUnitDeclaration:isPackageInfo()
3241=CompilationUnitDeclaration:record(FunctionalExpression)
3242=CompilationUnitDeclaration:analyseCode()
3243=CompilationUnitDeclaration:hasErrors()
3244=CompilationUnitDeclaration:CompilationUnitDeclaration(ProblemReporter, CompilationResult, int)
3245=CompilationUnitDeclaration:generateCode()
3246=CompilationUnitDeclaration:traverse(ASTVisitor, CompilationUnitScope)
3247=CompilationUnitDeclaration:getMainTypeName()
3248=CompilationUnitDeclaration:recordSuppressWarnings(IrritantSet, Annotation, int, int, ReferenceContext)
3249=CompilationUnitDeclaration:getFileName()
3250=CompilationUnitDeclaration:declarationOfType(char[][])
3251=CompilationUnitDeclaration:isSuppressed(CategorizedProblem)
3252=CompilationUnitDeclaration:resolve()
3253=CompilationUnitDeclaration:abort(int, CategorizedProblem)
3254=CompilationUnitDeclaration:cleanUp(TypeDeclaration)
3255=CompilationUnitDeclaration:tagAsHavingIgnoredMandatoryErrors(int)
3256=CompilationUnitDeclaration:reportNLSProblems()
3257=CompilationUnitDeclaration:record(LocalTypeBinding)
3258=CompilationUnitDeclaration:finalizeProblems()
3259=CompilationUnitDeclaration:propagateInnerEmulationForAllLocalTypes()
3260=CompilationUnitDeclaration:compilationResult()
3261=CompilationUnitDeclaration:createPackageInfoType()
3262=CompilationUnitDeclaration:traverse(ASTVisitor, CompilationUnitScope, boolean)
3263=CompilationUnitDeclaration:checkUnusedImports()
3264=CompilationUnitDeclaration:recordStringLiteral(StringLiteral, boolean)
3265=CompilationUnitDeclaration:cleanUp()
3266=CompilationUnitDeclaration:hasFunctionalTypes()
3267=CompilationUnitDeclaration:tagAsHavingErrors()
3268=CompilationUnitDeclaration:isEmpty()
3269=TestRunner:doRun(Test, boolean)
3270=TestRunner:main(String)
3271=TestRunner:setPrinter(ResultPrinter)
3272=TestRunner:doRun(Test)
3273=TestRunner:TestRunner()
3274=TestRunner:runAndWait(Test)
3275=TestRunner:TestRunner(PrintStream)
3276=TestRunner:testEnded(String)
3277=TestRunner:start(String)
3278=TestRunner:TestRunner(ResultPrinter)
3279=TestRunner:pause(boolean)
3280=TestRunner:createTestResult()
3281=TestRunner:run(Test)
3282=TestRunner:testFailed(int, Test, Throwable)
3283=TestRunner:runFailed(String)
3284=TestRunner:run(Class)
3285=TestRunner:testStarted(String)
3286=TestRunner:getLoader()
3287=A:A()
3288=RefRaw:testMultiple()
3289=RefRaw:testSingle()
3290=APIDocumentationTests:JavaCoreJavadocAnalyzer:isDeprecated()
3291=APIDocumentationTests:APIDocumentationTests(String)
3292=APIDocumentationTests:JavaCoreJavadocAnalyzer:reset(String)
3293=APIDocumentationTests:JavaCoreJavadocAnalyzer:getDefaultValue()
3294=APIDocumentationTests:suite()
3295=APIDocumentationTests:JavaCoreJavadocAnalyzer:analyze()
3296=APIDocumentationTests:testJavaCoreAPI()
3297=APIDocumentationTests:JavaCoreJavadocAnalyzer:getOptionID()
3298=LineCommentEndOffsets:LineCommentEndOffsets(List)
3299=LineCommentEndOffsets:isEndOfLineComment(int)
3300=LineCommentEndOffsets:getOffsets()
3301=LineCommentEndOffsets:isEndOfLineComment(int, char[])
3302=LineCommentEndOffsets:remove(int)
3303=I2:getIndications()
3304=MemberTypeBinding:checkSyntheticArgsAndFields()
3305=MemberTypeBinding:toString()
3306=MemberTypeBinding:constantPoolName()
3307=MemberTypeBinding:MemberTypeBinding(char[][], ClassScope, SourceTypeBinding)
3308=ChildPropertyDescriptor:cycleRisk()
3309=ChildPropertyDescriptor:getChildType()
3310=ChildPropertyDescriptor:isMandatory()
3311=ChildPropertyDescriptor:ChildPropertyDescriptor(Class, String, Class, boolean, boolean)
3312=X02e:foo()
3313=IAnnotationComponentValue:getConstantValue()
3314=IAnnotationComponentValue:getAnnotationValue()
3315=IAnnotationComponentValue:getClassInfo()
3316=IAnnotationComponentValue:getEnumConstantNameIndex()
3317=IAnnotationComponentValue:getEnumConstantTypeName()
3318=IAnnotationComponentValue:getEnumConstantTypeNameIndex()
3319=IAnnotationComponentValue:getEnumConstantName()
3320=IAnnotationComponentValue:getValuesNumber()
3321=IAnnotationComponentValue:getClassInfoIndex()
3322=IAnnotationComponentValue:getTag()
3323=IAnnotationComponentValue:getAnnotationComponentValues()
3324=IAnnotationComponentValue:getConstantValueIndex()
3325=IRestrictedAccessMethodRequestor:acceptMethod(char[], int, char[], char[], int, char[], char[], char[][], char[][], char[], int, String, AccessRestriction, int)
3326=Bug468893Processor:Bug468893Processor()
3327=Bug468893Processor:count()
3328=Bug468893Processor:process(Set<? extends TypeElement>, RoundEnvironment)
3329=FilerImpl:createSourceFile(String)
3330=FilerImpl:getEnv()
3331=FilerImpl:getOutputFileForLocation(Filer.Location, String, File)
3332=GlobalVariable:getInitializer()
3333=GlobalVariable:getTypeName()
3334=GlobalVariable:GlobalVariable(char[], char[], char[])
3335=GlobalVariable:toString()
3336=GlobalVariable:getName()
3337=TestFieldInvalid:foo3()
3338=TestFieldInvalid:foo1()
3339=TestFieldInvalid:foo2()
3340=HookedJavaFileObject:ForwardingWriter:write(int)
3341=HookedJavaFileObject:ForwardingWriter:toString()
3342=HookedJavaFileObject:ForwardingWriter:close()
3343=HookedJavaFileObject:ForwardingOutputStream:toString()
3344=HookedJavaFileObject:ForwardingWriter:write(char[], int, int)
3345=HookedJavaFileObject:ForwardingWriter:hashCode()
3346=HookedJavaFileObject:ForwardingOutputStream:write(int)
3347=HookedJavaFileObject:ForwardingOutputStream:hashCode()
3348=HookedJavaFileObject:ForwardingWriter:append(CharSequence, int, int)
3349=HookedJavaFileObject:ForwardingOutputStream:close()
3350=HookedJavaFileObject:ForwardingWriter:append(char)
3351=HookedJavaFileObject:openWriter()
3352=HookedJavaFileObject:HookedJavaFileObject(JavaFileObject, String, String, BatchFilerImpl)
3353=HookedJavaFileObject:openOutputStream()
3354=HookedJavaFileObject:ForwardingWriter:clone()
3355=HookedJavaFileObject:ForwardingOutputStream:flush()
3356=HookedJavaFileObject:ForwardingOutputStream:write(byte[])
3357=HookedJavaFileObject:ForwardingWriter:ForwardingWriter(Writer)
3358=HookedJavaFileObject:ForwardingOutputStream:equals(Object)
3359=HookedJavaFileObject:ForwardingWriter:write(char[])
3360=HookedJavaFileObject:ForwardingOutputStream:write(byte[], int, int)
3361=HookedJavaFileObject:ForwardingWriter:append(CharSequence)
3362=HookedJavaFileObject:ForwardingOutputStream:ForwardingOutputStream(OutputStream)
3363=HookedJavaFileObject:ForwardingOutputStream:clone()
3364=HookedJavaFileObject:ForwardingWriter:equals(Object)
3365=HookedJavaFileObject:ForwardingWriter:write(String)
3366=HookedJavaFileObject:closed()
3367=HookedJavaFileObject:ForwardingWriter:write(String, int, int)
3368=HookedJavaFileObject:ForwardingWriter:flush()
3369=Java8FilerProcessor:init(ProcessingEnvironment)
3370=Java8FilerProcessor:process(Set<? extends TypeElement>, RoundEnvironment)
3371=Java8FilerProcessor:createPackageBinary()
3372=UnaryExpression:generateCode(BlockScope, CodeStream, boolean)
3373=UnaryExpression:optimizedBooleanConstant()
3374=UnaryExpression:printExpressionNoParenthesis(int, StringBuffer)
3375=UnaryExpression:UnaryExpression(Expression, int)
3376=UnaryExpression:generateOptimizedBoolean(BlockScope, CodeStream, Label, Label, boolean)
3377=UnaryExpression:resolveType(BlockScope)
3378=UnaryExpression:traverse(ASTVisitor, BlockScope)
3379=UnaryExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
3380=IndentationSwitchCaseBug:IBreakIndentation()
3381=LineNumberAttributeTest:test001()
3382=LineNumberAttributeTest:LineNumberAttributeTest(String)
3383=LineNumberAttributeTest:suite()
3384=LineNumberAttributeTest:testClass()
3385=LineNumberAttributeTest:test002()
3386=TestNormalChild:TestNormalChild(Point, int)
3387=A:foo()
3388=A:bar(int, int)
3389=ClasspathSourceJar:findClass(char[], String, String, boolean)
3390=ClasspathSourceJar:ClasspathSourceJar(File, boolean, AccessRuleSet, String, String)
3391=ClasspathSourceJar:findClass(char[], String, String)
3392=ClasspathSourceJar:getMode()
3393=VariableLocator:VariableLocator(VariablePattern)
3394=VariableLocator:match(Expression, MatchingNodeSet)
3395=VariableLocator:matchReference(Reference, MatchingNodeSet, boolean)
3396=VariableLocator:match(Reference, MatchingNodeSet)
3397=VariableLocator:toString()
3398=DirectoryComparator:compare()
3399=ResolveEmptySelectionOnMethod:bar()
3400=ResolveEmptySelectionOnMethod:foo()
3401=GenericsSelectionTest:test0022()
3402=GenericsSelectionTest:GenericsSelectionTest(String)
3403=GenericsSelectionTest:test0010()
3404=GenericsSelectionTest:test0023()
3405=GenericsSelectionTest:test0011()
3406=GenericsSelectionTest:test0001()
3407=GenericsSelectionTest:test0024()
3408=GenericsSelectionTest:test0012()
3409=GenericsSelectionTest:test0002()
3410=GenericsSelectionTest:test0013()
3411=GenericsSelectionTest:test0020()
3412=GenericsSelectionTest:test0021()
3413=GenericsSelectionTest:test0007()
3414=GenericsSelectionTest:test0018()
3415=GenericsSelectionTest:test0008()
3416=GenericsSelectionTest:test0019()
3417=GenericsSelectionTest:test0009()
3418=GenericsSelectionTest:test0003()
3419=GenericsSelectionTest:test0014()
3420=GenericsSelectionTest:test0004()
3421=GenericsSelectionTest:test0015()
3422=GenericsSelectionTest:test0005()
3423=GenericsSelectionTest:test0016()
3424=GenericsSelectionTest:test0006()
3425=GenericsSelectionTest:test0017()
3426=Main:computeDefaultConfigurationLocation()
3427=Main:main(String[])
3428=Main:decode(String)
3429=Main:processCommandLine(String[])
3430=Main:openLogFile()
3431=Main:getSplashLocation(URL[])
3432=Main:hexToByte(byte)
3433=Main:logForStream(OutputStream)
3434=Main:log(Object)
3435=Main:buildLocation(String, URL, String)
3436=Main:getArrayFromList(String)
3437=Main:closeLogFile()
3438=Main:addDevEntries(String, List)
3439=Main:resolve(String)
3440=Main:addEntry(URL, List)
3441=Main:computeLogFileLocation()
3442=Main:getConfigurationLocation()
3443=Main:load(URL, String)
3444=Main:compareVersion(Object[], Object[])
3445=Main:main(String)
3446=Main:loadProperties(String)
3447=Main:setupVMProperties()
3448=Main:processDevArg(String)
3449=Main:setMultiValueProperty(String, String[])
3450=Main:buildURL(String, boolean)
3451=Main:getBootPath(String)
3452=Main:runCommand(String, String, String)
3453=Main:loadConfiguration(String)
3454=Main:takeDownSplash()
3455=Main:processConfiguration()
3456=Main:handleSplash(URL[])
3457=Main:computeDefaultUserAreaLocation(String)
3458=Main:run(String[])
3459=Main:addBaseJars(String, ArrayList)
3460=Main:getVersionElements(String)
3461=Main:getInstallLocation()
3462=Main:setExitData()
3463=Main:getDevPath(URL)
3464=Main:basicRun(String[])
3465=Main:searchForSplash(String[])
3466=Main:mergeProperties(Properties, Properties)
3467=Main:write(Object)
3468=Main:searchFor(String, String)
3469=Main:adjustTrailingSlash(String, boolean)
3470=A:foo()
3471=firstClass:myMethod()
3472=JavaSearchFineGrainTests:testTypeRefGenericMethod_TypeVariableBound()
3473=JavaSearchFineGrainTests:testTypeRef_InstanceOf()
3474=JavaSearchFineGrainTests:testTypeRefAll_Field()
3475=JavaSearchFineGrainTests:setUpMethodRef()
3476=JavaSearchFineGrainTests:testMethodRef_Super()
3477=JavaSearchFineGrainTests:testTypeRef_Allocation()
3478=JavaSearchFineGrainTests:getWorkingCopy(String, String)
3479=JavaSearchFineGrainTests:testTypeRefAll_Allocation()
3480=JavaSearchFineGrainTests:testTypeRefGenericAll01_WildcardBound()
3481=JavaSearchFineGrainTests:testTypeRefGenericsTest10_TypeArgument()
3482=JavaSearchFineGrainTests:testTypeRefGeneric01()
3483=JavaSearchFineGrainTests:testBug212599_all()
3484=JavaSearchFineGrainTests:setUp()
3485=JavaSearchFineGrainTests:testTypeRefGenericsTest11_TypeArgument()
3486=JavaSearchFineGrainTests:setUpTypeRefAll()
3487=JavaSearchFineGrainTests:testTypeRefGenericAll02_TypeArgumentl()
3488=JavaSearchFineGrainTests:testTypeRefAll_Cast()
3489=JavaSearchFineGrainTests:testTypeRefGenericAllG5_WildcardBounds()
3490=JavaSearchFineGrainTests:testTypeRef_InstanceOfWithParenthesis()
3491=JavaSearchFineGrainTests:testTypeRef_Catch()
3492=JavaSearchFineGrainTests:testTypeRefGenericsTest15_ClassInstanceCreation()
3493=JavaSearchFineGrainTests:setUpTypeRefGenericMethod()
3494=JavaSearchFineGrainTests:testTypeRefGenericAllG5_TypeVariableBounds()
3495=JavaSearchFineGrainTests:testTypeRefGeneric01_WildcardBound()
3496=JavaSearchFineGrainTests:testTypeRefQualifiedAll_Throws()
3497=JavaSearchFineGrainTests:testTypeRefQualifiedAll_Variable()
3498=JavaSearchFineGrainTests:testTypeRefQualifiedAll_Cast()
3499=JavaSearchFineGrainTests:testTypeRefGenericMethod_TypeArgument()
3500=JavaSearchFineGrainTests:getJavaSearchScope()
3501=JavaSearchFineGrainTests:testTypeRef_MethodParameter()
3502=JavaSearchFineGrainTests:testTypeRefGenericAllG2_WildcardBounds()
3503=JavaSearchFineGrainTests:testTypeRefGenericAll01()
3504=JavaSearchFineGrainTests:testTypeRefGenericAllG6_WildcardBounds()
3505=JavaSearchFineGrainTests:testTypeRefQualifiedAll_Import()
3506=JavaSearchFineGrainTests:testTypeRefGenericAll01_AllGenericFlags()
3507=JavaSearchFineGrainTests:testTypeRefAll_Return()
3508=JavaSearchFineGrainTests:testTypeRef_Return()
3509=JavaSearchFineGrainTests:testMethodRef_Qualified()
3510=JavaSearchFineGrainTests:testTypeRefGenericMethod_WildcardBound()
3511=JavaSearchFineGrainTests:testTypeRefGenericsTest08_TypeArgument()
3512=JavaSearchFineGrainTests:testTypeRefGenericAll02_AllGenericFlags()
3513=JavaSearchFineGrainTests:testTypeRefQualifiedAll_Allocation()
3514=JavaSearchFineGrainTests:testTypeRefGenericAll02()
3515=JavaSearchFineGrainTests:testFieldRef_AllFlags()
3516=JavaSearchFineGrainTests:testTypeRefQualifiedAll_Annotation()
3517=JavaSearchFineGrainTests:testTypeRefGenericsTest09_TypeArgument()
3518=JavaSearchFineGrainTests:testTypeRefGenericAll02_TypeVariableBound()
3519=JavaSearchFineGrainTests:testTypeRefAll_MethodParameter()
3520=JavaSearchFineGrainTests:testTypeRefQualifiedAll_Catch()
3521=JavaSearchFineGrainTests:testTypeRefAll_Annotation()
3522=JavaSearchFineGrainTests:testTypeRef_Variable()
3523=JavaSearchFineGrainTests:setUpTypeRefQualifiedAll()
3524=JavaSearchFineGrainTests:testTypeRef_Cast()
3525=JavaSearchFineGrainTests:testTypeRefGenericAllG5_TypeArgument()
3526=JavaSearchFineGrainTests:testTypeRefAll_Throws()
3527=JavaSearchFineGrainTests:testTypeRefGenericAllG3R3_TypeArgument()
3528=JavaSearchFineGrainTests:testTypeRef_Throws()
3529=JavaSearchFineGrainTests:JavaSearchFineGrainTests(String)
3530=JavaSearchFineGrainTests:testBug212599()
3531=JavaSearchFineGrainTests:setUpFieldRef()
3532=JavaSearchFineGrainTests:setUpTypeRef(int)
3533=JavaSearchFineGrainTests:testTypeRefGenericAll01_TypeArgument()
3534=JavaSearchFineGrainTests:testTypeRefGeneric01_AllFlags()
3535=JavaSearchFineGrainTests:testTypeRef_Supertype()
3536=JavaSearchFineGrainTests:testTypeRef_Superinterface()
3537=JavaSearchFineGrainTests:testTypeRefQualifiedAll_MethodParameter()
3538=JavaSearchFineGrainTests:testFieldRef_This()
3539=JavaSearchFineGrainTests:testTypeRefGenericsTest10_WildcardBound()
3540=JavaSearchFineGrainTests:testTypeRef_AllFlags()
3541=JavaSearchFineGrainTests:testTypeRef_Annotation()
3542=JavaSearchFineGrainTests:testMethodRef_AllFlags()
3543=JavaSearchFineGrainTests:testTypeRefGenericAllG3R3_WildcardBounds()
3544=JavaSearchFineGrainTests:testTypeRefGenericMethod_AllGenericFlags()
3545=JavaSearchFineGrainTests:testTypeRefGenericAllG6_TypeArgument()
3546=JavaSearchFineGrainTests:testTypeRef_Field()
3547=JavaSearchFineGrainTests:testFieldRef_Super()
3548=JavaSearchFineGrainTests:testMethodRef_Simple()
3549=JavaSearchFineGrainTests:testFieldRef_Simple()
3550=JavaSearchFineGrainTests:testTypeRefGenericAllG3R3_TypeVariableBounds()
3551=JavaSearchFineGrainTests:testTypeRefGenericsTest11_WildcardBound()
3552=JavaSearchFineGrainTests:testTypeRefGenericAllG1_TypeArgument()
3553=JavaSearchFineGrainTests:testTypeRefAll_Catch()
3554=JavaSearchFineGrainTests:testTypeRefQualifiedAll_Return()
3555=JavaSearchFineGrainTests:testTypeRefGenericsTest13_TypeArgument()
3556=JavaSearchFineGrainTests:setUpTypeRefGeneric02()
3557=JavaSearchFineGrainTests:testTypeRefGenericsTest07_TypeArgument()
3558=JavaSearchFineGrainTests:testTypeRefGeneric01_TypeVariableBound()
3559=JavaSearchFineGrainTests:testTypeRef_Import()
3560=JavaSearchFineGrainTests:testMethodRef_This()
3561=JavaSearchFineGrainTests:testTypeRefGenericAllG2_TypeArgument()
3562=JavaSearchFineGrainTests:testMethodRef()
3563=JavaSearchFineGrainTests:setUpTypeRefGeneric01()
3564=JavaSearchFineGrainTests:testTypeRefAll_Import()
3565=JavaSearchFineGrainTests:testTypeRefGenericsTest12_TypeArgument()
3566=JavaSearchFineGrainTests:testFieldRef()
3567=JavaSearchFineGrainTests:testTypeRefGenericAll02_WildcardBound()
3568=JavaSearchFineGrainTests:suite()
3569=JavaSearchFineGrainTests:testTypeRefGeneric01_TypeArgument()
3570=JavaSearchFineGrainTests:testTypeRefGenericAll01_TypeVariableBound()
3571=JavaSearchFineGrainTests:testTypeRefQualifiedAll_Field()
3572=JavaSearchFineGrainTests:testTypeRefGenericAllG1_WildcardBounds()
3573=JavaSearchFineGrainTests:testTypeRefGenericsTest06_TypeArgument()
3574=JavaSearchFineGrainTests:testFieldRef_Qualified()
3575=JavaSearchFineGrainTests:testTypeRefAll_Supertype()
3576=JavaSearchFineGrainTests:testTypeRef()
3577=JavaSearchFineGrainTests:testTypeRefAll_Variable()
3578=JavaSearchFineGrainTests:testTypeRefGenericAllG6_TypeVariableBounds()
3579=JavaSearchFineGrainTests:testTypeRefQualifiedAll_Supertype()
3580=NegativeModelProc:checkModel(List<TypeElement>, String, String)
3581=NegativeModelProc:init(ProcessingEnvironment)
3582=NegativeModelProc:process(Set<? extends TypeElement>, RoundEnvironment)
3583=NegativeModelProc:checkNegative1()
3584=NegativeModelProc:checkNegative2()
3585=NegativeModelProc:findAnnotation(Element, String)
3586=NegativeModelProc:checkNegative3()
3587=NegativeModelProc:reportSuccess()
3588=NegativeModelProc:NegativeModelProc()
3589=NegativeModelProc:checkNegative4()
3590=NegativeModelProc:checkNegative5()
3591=NegativeModelProc:checkNegative6()
3592=NegativeModelProc:reportError(String)
3593=NegativeModelProc:checkNegative7()
3594=NegativeModelProc:checkNegative8()
3595=NegativeModelProc:checkNegative9()
3596=ASTVisitor:visit(ThisReference, BlockScope)
3597=ASTVisitor:endVisit(JavadocArrayQualifiedTypeReference, ClassScope)
3598=ASTVisitor:visit(SingleTypeReference, BlockScope)
3599=ASTVisitor:visit(StringLiteralConcatenation, BlockScope)
3600=ASTVisitor:visit(ForeachStatement, BlockScope)
3601=ASTVisitor:endVisit(ParameterizedQualifiedTypeReference, BlockScope)
3602=ASTVisitor:endVisit(ParameterizedSingleTypeReference, ClassScope)
3603=ASTVisitor:visit(ReturnStatement, BlockScope)
3604=ASTVisitor:visit(JavadocArgumentExpression, ClassScope)
3605=ASTVisitor:visit(FalseLiteral, BlockScope)
3606=ASTVisitor:visit(JavadocImplicitTypeReference, BlockScope)
3607=ASTVisitor:endVisit(StringLiteral, BlockScope)
3608=ASTVisitor:visit(ParameterizedQualifiedTypeReference, ClassScope)
3609=ASTVisitor:visit(NormalAnnotation, BlockScope)
3610=ASTVisitor:endVisit(IntLiteral, BlockScope)
3611=ASTVisitor:endVisit(ArrayTypeReference, BlockScope)
3612=ASTVisitor:endVisit(QualifiedTypeReference, ClassScope)
3613=ASTVisitor:endVisit(MemberValuePair, ClassScope)
3614=ASTVisitor:visit(CastExpression, BlockScope)
3615=ASTVisitor:endVisit(CastExpression, BlockScope)
3616=ASTVisitor:visit(CompilationUnitDeclaration, CompilationUnitScope)
3617=ASTVisitor:endVisit(MessageSend, BlockScope)
3618=ASTVisitor:visit(JavadocQualifiedTypeReference, ClassScope)
3619=ASTVisitor:endVisit(UnionTypeReference, BlockScope)
3620=ASTVisitor:visit(SwitchStatement, BlockScope)
3621=ASTVisitor:endVisit(ContinueStatement, BlockScope)
3622=ASTVisitor:endVisit(SingleNameReference, ClassScope)
3623=ASTVisitor:visit(QualifiedSuperReference, ClassScope)
3624=ASTVisitor:endVisit(TypeParameter, BlockScope)
3625=ASTVisitor:endVisit(Wildcard, ClassScope)
3626=ASTVisitor:visit(LongLiteral, BlockScope)
3627=ASTVisitor:endVisit(JavadocArgumentExpression, BlockScope)
3628=ASTVisitor:visit(TypeDeclaration, CompilationUnitScope)
3629=ASTVisitor:visit(CompoundAssignment, BlockScope)
3630=ASTVisitor:endVisit(Clinit, ClassScope)
3631=ASTVisitor:visit(TypeParameter, BlockScope)
3632=ASTVisitor:visit(TryStatement, BlockScope)
3633=ASTVisitor:visit(FieldDeclaration, MethodScope)
3634=ASTVisitor:endVisit(InstanceOfExpression, BlockScope)
3635=ASTVisitor:endVisit(QualifiedNameReference, ClassScope)
3636=ASTVisitor:visit(Javadoc, BlockScope)
3637=ASTVisitor:endVisit(ForeachStatement, BlockScope)
3638=ASTVisitor:endVisit(ArrayAllocationExpression, BlockScope)
3639=ASTVisitor:endVisit(Javadoc, BlockScope)
3640=ASTVisitor:endVisit(ConstructorDeclaration, ClassScope)
3641=ASTVisitor:endVisit(OR_OR_Expression, BlockScope)
3642=ASTVisitor:visit(FloatLiteral, BlockScope)
3643=ASTVisitor:visit(SingleNameReference, BlockScope)
3644=ASTVisitor:visit(JavadocFieldReference, ClassScope)
3645=ASTVisitor:endVisit(QualifiedSuperReference, ClassScope)
3646=ASTVisitor:visit(UnaryExpression, BlockScope)
3647=ASTVisitor:visit(AnnotationMethodDeclaration, ClassScope)
3648=ASTVisitor:endVisit(AND_AND_Expression, BlockScope)
3649=ASTVisitor:visit(CaseStatement, BlockScope)
3650=ASTVisitor:visit(IntLiteral, BlockScope)
3651=ASTVisitor:visit(MemberValuePair, ClassScope)
3652=ASTVisitor:endVisit(BinaryExpression, BlockScope)
3653=ASTVisitor:endVisit(PostfixExpression, BlockScope)
3654=ASTVisitor:visit(InstanceOfExpression, BlockScope)
3655=ASTVisitor:visit(JavadocMessageSend, BlockScope)
3656=ASTVisitor:endVisit(MarkerAnnotation, ClassScope)
3657=ASTVisitor:visit(JavadocSingleNameReference, BlockScope)
3658=ASTVisitor:visit(QualifiedTypeReference, BlockScope)
3659=ASTVisitor:visit(ArrayQualifiedTypeReference, BlockScope)
3660=ASTVisitor:visit(ExplicitConstructorCall, BlockScope)
3661=ASTVisitor:endVisit(ConditionalExpression, BlockScope)
3662=ASTVisitor:visit(JavadocArraySingleTypeReference, BlockScope)
3663=ASTVisitor:endVisit(ArrayReference, BlockScope)
3664=ASTVisitor:endVisit(CaseStatement, BlockScope)
3665=ASTVisitor:visit(MarkerAnnotation, BlockScope)
3666=ASTVisitor:visit(LabeledStatement, BlockScope)
3667=ASTVisitor:endVisit(ReferenceExpression, BlockScope)
3668=ASTVisitor:endVisit(ForStatement, BlockScope)
3669=ASTVisitor:visit(ExtendedStringLiteral, BlockScope)
3670=ASTVisitor:visit(UnionTypeReference, ClassScope)
3671=ASTVisitor:endVisit(LongLiteral, BlockScope)
3672=ASTVisitor:endVisit(CompoundAssignment, BlockScope)
3673=ASTVisitor:endVisit(UnaryExpression, BlockScope)
3674=ASTVisitor:visit(SingleMemberAnnotation, BlockScope)
3675=ASTVisitor:visit(QualifiedThisReference, BlockScope)
3676=ASTVisitor:endVisit(EqualExpression, BlockScope)
3677=ASTVisitor:visit(Wildcard, BlockScope)
3678=ASTVisitor:endVisit(JavadocArraySingleTypeReference, ClassScope)
3679=ASTVisitor:visit(StringLiteral, BlockScope)
3680=ASTVisitor:visit(Wildcard, ClassScope)
3681=ASTVisitor:endVisit(FalseLiteral, BlockScope)
3682=ASTVisitor:visit(MarkerAnnotation, ClassScope)
3683=ASTVisitor:visit(OR_OR_Expression, BlockScope)
3684=ASTVisitor:visit(UnionTypeReference, BlockScope)
3685=ASTVisitor:endVisit(ExplicitConstructorCall, BlockScope)
3686=ASTVisitor:visit(IntersectionCastTypeReference, ClassScope)
3687=ASTVisitor:visit(Argument, BlockScope)
3688=ASTVisitor:endVisit(QualifiedThisReference, BlockScope)
3689=ASTVisitor:endVisit(QualifiedThisReference, ClassScope)
3690=ASTVisitor:endVisit(SingleNameReference, BlockScope)
3691=ASTVisitor:visit(Block, BlockScope)
3692=ASTVisitor:visit(JavadocArraySingleTypeReference, ClassScope)
3693=ASTVisitor:visit(Argument, ClassScope)
3694=ASTVisitor:visit(TrueLiteral, BlockScope)
3695=ASTVisitor:visit(EmptyStatement, BlockScope)
3696=ASTVisitor:visit(EqualExpression, BlockScope)
3697=ASTVisitor:endVisit(FloatLiteral, BlockScope)
3698=ASTVisitor:endVisit(LabeledStatement, BlockScope)
3699=ASTVisitor:visit(ArrayQualifiedTypeReference, ClassScope)
3700=ASTVisitor:endVisit(MarkerAnnotation, BlockScope)
3701=ASTVisitor:visit(ParameterizedSingleTypeReference, BlockScope)
3702=ASTVisitor:endVisit(LocalDeclaration, BlockScope)
3703=ASTVisitor:endVisit(FieldReference, ClassScope)
3704=ASTVisitor:endVisit(NormalAnnotation, BlockScope)
3705=ASTVisitor:acceptProblem(IProblem)
3706=ASTVisitor:visit(Javadoc, ClassScope)
3707=ASTVisitor:endVisit(SynchronizedStatement, BlockScope)
3708=ASTVisitor:endVisit(ClassLiteralAccess, BlockScope)
3709=ASTVisitor:endVisit(ArrayQualifiedTypeReference, BlockScope)
3710=ASTVisitor:endVisit(JavadocSingleNameReference, BlockScope)
3711=ASTVisitor:endVisit(MethodDeclaration, ClassScope)
3712=ASTVisitor:endVisit(Initializer, MethodScope)
3713=ASTVisitor:endVisit(JavadocAllocationExpression, ClassScope)
3714=ASTVisitor:endVisit(Block, BlockScope)
3715=ASTVisitor:endVisit(JavadocImplicitTypeReference, ClassScope)
3716=ASTVisitor:visit(QualifiedThisReference, ClassScope)
3717=ASTVisitor:visit(NormalAnnotation, ClassScope)
3718=ASTVisitor:endVisit(JavadocMessageSend, BlockScope)
3719=ASTVisitor:visit(MemberValuePair, BlockScope)
3720=ASTVisitor:visit(QualifiedTypeReference, ClassScope)
3721=ASTVisitor:visit(AllocationExpression, BlockScope)
3722=ASTVisitor:endVisit(ReturnStatement, BlockScope)
3723=ASTVisitor:visit(SynchronizedStatement, BlockScope)
3724=ASTVisitor:endVisit(MemberValuePair, BlockScope)
3725=ASTVisitor:visit(ReferenceExpression, BlockScope)
3726=ASTVisitor:visit(ForStatement, BlockScope)
3727=ASTVisitor:visit(LocalDeclaration, BlockScope)
3728=ASTVisitor:endVisit(ImportReference, CompilationUnitScope)
3729=ASTVisitor:endVisit(QualifiedTypeReference, BlockScope)
3730=ASTVisitor:endVisit(ArrayTypeReference, ClassScope)
3731=ASTVisitor:endVisit(TrueLiteral, BlockScope)
3732=ASTVisitor:endVisit(NormalAnnotation, ClassScope)
3733=ASTVisitor:endVisit(ParameterizedSingleTypeReference, BlockScope)
3734=ASTVisitor:visit(JavadocImplicitTypeReference, ClassScope)
3735=ASTVisitor:endVisit(DoubleLiteral, BlockScope)
3736=ASTVisitor:visit(PrefixExpression, BlockScope)
3737=ASTVisitor:visit(JavadocArgumentExpression, BlockScope)
3738=ASTVisitor:visit(Assignment, BlockScope)
3739=ASTVisitor:visit(ParameterizedQualifiedTypeReference, BlockScope)
3740=ASTVisitor:visit(ThisReference, ClassScope)
3741=ASTVisitor:endVisit(JavadocArrayQualifiedTypeReference, BlockScope)
3742=ASTVisitor:endVisit(ParameterizedQualifiedTypeReference, ClassScope)
3743=ASTVisitor:visit(LambdaExpression, BlockScope)
3744=ASTVisitor:endVisit(QualifiedNameReference, BlockScope)
3745=ASTVisitor:visit(IfStatement, BlockScope)
3746=ASTVisitor:endVisit(DoStatement, BlockScope)
3747=ASTVisitor:visit(QualifiedSuperReference, BlockScope)
3748=ASTVisitor:visit(WhileStatement, BlockScope)
3749=ASTVisitor:endVisit(UnionTypeReference, ClassScope)
3750=ASTVisitor:endVisit(Wildcard, BlockScope)
3751=ASTVisitor:endVisit(TypeParameter, ClassScope)
3752=ASTVisitor:visit(JavadocQualifiedTypeReference, BlockScope)
3753=ASTVisitor:visit(PostfixExpression, BlockScope)
3754=ASTVisitor:endVisit(JavadocQualifiedTypeReference, BlockScope)
3755=ASTVisitor:endVisit(CompilationUnitDeclaration, CompilationUnitScope)
3756=ASTVisitor:endVisit(PrefixExpression, BlockScope)
3757=ASTVisitor:endVisit(IntersectionCastTypeReference, ClassScope)
3758=ASTVisitor:endVisit(ArrayQualifiedTypeReference, ClassScope)
3759=ASTVisitor:endVisit(ExtendedStringLiteral, BlockScope)
3760=ASTVisitor:endVisit(JavadocSingleNameReference, ClassScope)
3761=ASTVisitor:endVisit(Argument, BlockScope)
3762=ASTVisitor:visit(ArrayTypeReference, BlockScope)
3763=ASTVisitor:endVisit(FieldReference, BlockScope)
3764=ASTVisitor:endVisit(JavadocAllocationExpression, BlockScope)
3765=ASTVisitor:endVisit(TypeDeclaration, BlockScope)
3766=ASTVisitor:endVisit(LambdaExpression, BlockScope)
3767=ASTVisitor:visit(ParameterizedSingleTypeReference, ClassScope)
3768=ASTVisitor:visit(ClassLiteralAccess, BlockScope)
3769=ASTVisitor:visit(ConstructorDeclaration, ClassScope)
3770=ASTVisitor:endVisit(BreakStatement, BlockScope)
3771=ASTVisitor:visit(SingleTypeReference, ClassScope)
3772=ASTVisitor:visit(Initializer, MethodScope)
3773=ASTVisitor:visit(QualifiedNameReference, ClassScope)
3774=ASTVisitor:visit(JavadocSingleTypeReference, ClassScope)
3775=ASTVisitor:visit(JavadocAllocationExpression, ClassScope)
3776=ASTVisitor:endVisit(JavadocMessageSend, ClassScope)
3777=ASTVisitor:visit(ArrayReference, BlockScope)
3778=ASTVisitor:endVisit(JavadocImplicitTypeReference, BlockScope)
3779=ASTVisitor:visit(ContinueStatement, BlockScope)
3780=ASTVisitor:endVisit(SingleMemberAnnotation, BlockScope)
3781=ASTVisitor:endVisit(ThisReference, ClassScope)
3782=ASTVisitor:visit(CharLiteral, BlockScope)
3783=ASTVisitor:endVisit(JavadocFieldReference, BlockScope)
3784=ASTVisitor:visit(MethodDeclaration, ClassScope)
3785=ASTVisitor:endVisit(SuperReference, BlockScope)
3786=ASTVisitor:visit(IntersectionCastTypeReference, BlockScope)
3787=ASTVisitor:visit(FieldReference, ClassScope)
3788=ASTVisitor:endVisit(Assignment, BlockScope)
3789=ASTVisitor:endVisit(JavadocReturnStatement, ClassScope)
3790=ASTVisitor:endVisit(JavadocSingleTypeReference, BlockScope)
3791=ASTVisitor:visit(ThrowStatement, BlockScope)
3792=ASTVisitor:visit(TypeDeclaration, ClassScope)
3793=ASTVisitor:visit(JavadocReturnStatement, BlockScope)
3794=ASTVisitor:endVisit(IfStatement, BlockScope)
3795=ASTVisitor:visit(FieldReference, BlockScope)
3796=ASTVisitor:endVisit(ArrayInitializer, ClassScope)
3797=ASTVisitor:endVisit(Javadoc, ClassScope)
3798=ASTVisitor:endVisit(JavadocArraySingleTypeReference, BlockScope)
3799=ASTVisitor:endVisit(TypeDeclaration, CompilationUnitScope)
3800=ASTVisitor:visit(DoubleLiteral, BlockScope)
3801=ASTVisitor:visit(Clinit, ClassScope)
3802=ASTVisitor:visit(ImportReference, CompilationUnitScope)
3803=ASTVisitor:endVisit(AnnotationMethodDeclaration, ClassScope)
3804=ASTVisitor:endVisit(AssertStatement, BlockScope)
3805=ASTVisitor:endVisit(WhileStatement, BlockScope)
3806=ASTVisitor:visit(ArrayInitializer, BlockScope)
3807=ASTVisitor:visit(SingleMemberAnnotation, ClassScope)
3808=ASTVisitor:visit(TypeDeclaration, BlockScope)
3809=ASTVisitor:endVisit(SingleTypeReference, ClassScope)
3810=ASTVisitor:endVisit(JavadocQualifiedTypeReference, ClassScope)
3811=ASTVisitor:visit(JavadocReturnStatement, ClassScope)
3812=ASTVisitor:visit(JavadocArrayQualifiedTypeReference, BlockScope)
3813=ASTVisitor:visit(BinaryExpression, BlockScope)
3814=ASTVisitor:endVisit(IntersectionCastTypeReference, BlockScope)
3815=ASTVisitor:endVisit(SingleTypeReference, BlockScope)
3816=ASTVisitor:endVisit(EmptyStatement, BlockScope)
3817=ASTVisitor:visit(JavadocFieldReference, BlockScope)
3818=ASTVisitor:endVisit(AllocationExpression, BlockScope)
3819=ASTVisitor:visit(ConditionalExpression, BlockScope)
3820=ASTVisitor:visit(SingleNameReference, ClassScope)
3821=ASTVisitor:endVisit(TypeDeclaration, ClassScope)
3822=ASTVisitor:endVisit(QualifiedSuperReference, BlockScope)
3823=ASTVisitor:visit(JavadocArrayQualifiedTypeReference, ClassScope)
3824=ASTVisitor:visit(SuperReference, BlockScope)
3825=ASTVisitor:endVisit(TryStatement, BlockScope)
3826=ASTVisitor:visit(ArrayAllocationExpression, BlockScope)
3827=ASTVisitor:endVisit(CharLiteral, BlockScope)
3828=ASTVisitor:endVisit(Argument, ClassScope)
3829=ASTVisitor:visit(QualifiedNameReference, BlockScope)
3830=ASTVisitor:visit(ArrayTypeReference, ClassScope)
3831=ASTVisitor:endVisit(FieldDeclaration, MethodScope)
3832=ASTVisitor:endVisit(QualifiedAllocationExpression, BlockScope)
3833=ASTVisitor:endVisit(NullLiteral, BlockScope)
3834=ASTVisitor:endVisit(ThrowStatement, BlockScope)
3835=ASTVisitor:visit(MessageSend, BlockScope)
3836=ASTVisitor:visit(QualifiedAllocationExpression, BlockScope)
3837=ASTVisitor:endVisit(SwitchStatement, BlockScope)
3838=ASTVisitor:visit(ArrayInitializer, ClassScope)
3839=ASTVisitor:endVisit(JavadocSingleTypeReference, ClassScope)
3840=ASTVisitor:endVisit(JavadocArgumentExpression, ClassScope)
3841=ASTVisitor:endVisit(ThisReference, BlockScope)
3842=ASTVisitor:visit(BreakStatement, BlockScope)
3843=ASTVisitor:visit(JavadocSingleTypeReference, BlockScope)
3844=ASTVisitor:endVisit(SingleMemberAnnotation, ClassScope)
3845=ASTVisitor:endVisit(ArrayInitializer, BlockScope)
3846=ASTVisitor:visit(AND_AND_Expression, BlockScope)
3847=ASTVisitor:endVisit(JavadocReturnStatement, BlockScope)
3848=ASTVisitor:visit(AssertStatement, BlockScope)
3849=ASTVisitor:visit(DoStatement, BlockScope)
3850=ASTVisitor:endVisit(StringLiteralConcatenation, BlockScope)
3851=ASTVisitor:visit(NullLiteral, BlockScope)
3852=ASTVisitor:visit(TypeParameter, ClassScope)
3853=ASTVisitor:visit(JavadocSingleNameReference, ClassScope)
3854=ASTVisitor:visit(JavadocAllocationExpression, BlockScope)
3855=ASTVisitor:visit(JavadocMessageSend, ClassScope)
3856=ASTVisitor:endVisit(JavadocFieldReference, ClassScope)
3857=ASTBasedAnnotationElementDeclarationImpl:getReturnType()
3858=ASTBasedAnnotationElementDeclarationImpl:getParameters()
3859=ASTBasedAnnotationElementDeclarationImpl:getDeclaringType()
3860=ASTBasedAnnotationElementDeclarationImpl:getMemberAstNode()
3861=ASTBasedAnnotationElementDeclarationImpl:toString()
3862=ASTBasedAnnotationElementDeclarationImpl:getDefaultValue()
3863=ASTBasedAnnotationElementDeclarationImpl:ASTBasedAnnotationElementDeclarationImpl(AnnotationTypeMemberDeclaration, IFile, BaseProcessorEnv)
3864=ASTBasedAnnotationElementDeclarationImpl:isVarArgs()
3865=ASTBasedAnnotationElementDeclarationImpl:kind()
3866=ASTBasedAnnotationElementDeclarationImpl:getSimpleName()
3867=ASTBasedAnnotationElementDeclarationImpl:accept(DeclarationVisitor)
3868=ASTBasedAnnotationElementDeclarationImpl:getAstNodeForDefault()
3869=X14:foo(Z17)
3870=Z17:getBinding(String, String, X14, boolean)
3871=Test:foo()
3872=LongLiteral:LongLiteral(char[], int, int)
3873=LongLiteral:computeConstant()
3874=LongLiteral:resolveType(BlockScope)
3875=LongLiteral:literalType(BlockScope)
3876=LongLiteral:mayRepresentMIN_VALUE()
3877=LongLiteral:generateCode(BlockScope, CodeStream, boolean)
3878=LongLiteral:LongLiteral(char[], int, int, long)
3879=LongLiteral:traverse(ASTVisitor, BlockScope)
3880=InternalScannerTest:test002()
3881=InternalScannerTest:test001()
3882=InternalScannerTest:InternalScannerTest(String)
3883=InternalScannerTest:suite()
3884=InternalScannerTest:testClass()
3885=A:foo()
3886=ASTNode:setSourceRange(int, int)
3887=ASTNode:getFlags()
3888=ASTNode:internalGetSetIntProperty(SimplePropertyDescriptor, boolean, int)
3889=ASTNode:hashCode()
3890=ASTNode:preLazyInit()
3891=ASTNode:NodeList:listSize()
3892=ASTNode:getAST()
3893=ASTNode:copySubtrees(AST, List)
3894=ASTNode:setParent(ASTNode, StructuralPropertyDescriptor)
3895=ASTNode:acceptChild(ASTVisitor, ASTNode)
3896=ASTNode:getProperty(String)
3897=ASTNode:appendPrintString(StringBuffer)
3898=ASTNode:getStructuralProperty(StructuralPropertyDescriptor)
3899=ASTNode:unsupportedIn2_3_4()
3900=ASTNode:accept(ASTVisitor)
3901=ASTNode:copySubtree(AST, ASTNode)
3902=ASTNode:nodeClassForType(int)
3903=ASTNode:clone(AST)
3904=ASTNode:preReplaceChild(ASTNode, ASTNode, ChildPropertyDescriptor)
3905=ASTNode:getLength()
3906=ASTNode:postLazyInit(ASTNode, ChildPropertyDescriptor)
3907=ASTNode:reapPropertyList(List)
3908=ASTNode:NodeList:size()
3909=ASTNode:supportedOnlyIn2()
3910=ASTNode:treeSize()
3911=ASTNode:stringSize(String)
3912=ASTNode:setFlags(int)
3913=ASTNode:NodeList:add(int, Object)
3914=ASTNode:setNodeType(int)
3915=ASTNode:setProperty(String, Object)
3916=ASTNode:postReplaceChild(ASTNode, ASTNode, ChildPropertyDescriptor)
3917=ASTNode:standardToString()
3918=ASTNode:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
3919=ASTNode:NodeList:newCursor()
3920=ASTNode:getParent()
3921=ASTNode:getStartPosition()
3922=ASTNode:addProperty(StructuralPropertyDescriptor, List)
3923=ASTNode:clone0(AST)
3924=ASTNode:subtreeMatch(ASTMatcher, Object)
3925=ASTNode:properties()
3926=ASTNode:equals(Object)
3927=ASTNode:memSize()
3928=ASTNode:unsupportedIn2()
3929=ASTNode:unsupportedIn2_3()
3930=ASTNode:checkNewChild(ASTNode, ASTNode, boolean, Class)
3931=ASTNode:delete()
3932=ASTNode:subtreeMatch0(ASTMatcher, Object)
3933=ASTNode:NodeList:updateCursors(int, int)
3934=ASTNode:postValueChange(SimplePropertyDescriptor)
3935=ASTNode:internalGetSetBooleanProperty(SimplePropertyDescriptor, boolean, boolean)
3936=ASTNode:internalGetChildListProperty(ChildListPropertyDescriptor)
3937=ASTNode:NodeList:memSize()
3938=ASTNode:NodeList:NodeList(ChildListPropertyDescriptor)
3939=ASTNode:internalGetSetObjectProperty(SimplePropertyDescriptor, boolean, Object)
3940=ASTNode:NodeList:releaseCursor(Cursor)
3941=ASTNode:createPropertyList(Class, List)
3942=ASTNode:internalStructuralPropertiesForType(int)
3943=ASTNode:acceptChildren(ASTVisitor, ASTNode.NodeList)
3944=ASTNode:subtreeBytes()
3945=ASTNode:getNodeType()
3946=ASTNode:NodeList:get(int)
3947=ASTNode:setStructuralProperty(StructuralPropertyDescriptor, Object)
3948=ASTNode:getNodeType0()
3949=ASTNode:NodeList:set(int, Object)
3950=ASTNode:getLocationInParent()
3951=ASTNode:supportedOnlyIn2_3_4()
3952=ASTNode:accept0(ASTVisitor)
3953=ASTNode:NodeList:remove(int)
3954=ASTNode:appendDebugString(StringBuffer)
3955=ASTNode:getRoot()
3956=ASTNode:preValueChange(SimplePropertyDescriptor)
3957=ASTNode:ASTNode(AST)
3958=ASTNode:checkModifiable()
3959=ASTNode:structuralPropertiesForType()
3960=ASTNode:toString()
3961=X:foo()
3962=ASTConverterTest:test0348()
3963=ASTConverterTest:test0182()
3964=ASTConverterTest:test0302()
3965=ASTConverterTest:test0325()
3966=ASTConverterTest:test0118()
3967=ASTConverterTest:test0291()
3968=ASTConverterTest:test0216()
3969=ASTConverterTest:test0239()
3970=ASTConverterTest:test0400()
3971=ASTConverterTest:test0061()
3972=ASTConverterTest:test0084()
3973=ASTConverterTest:test0009()
3974=ASTConverterTest:test0359()
3975=ASTConverterTest:test0171()
3976=ASTConverterTest:test0194()
3977=ASTConverterTest:test0313()
3978=ASTConverterTest:test0336()
3979=ASTConverterTest:test0107()
3980=ASTConverterTest:test0205()
3981=ASTConverterTest:test0228()
3982=ASTConverterTest:test0050()
3983=ASTConverterTest:test0073()
3984=ASTConverterTest:test0096()
3985=ASTConverterTest:test0181()
3986=ASTConverterTest:test0019()
3987=ASTConverterTest:test0390()
3988=ASTConverterTest:test0326()
3989=ASTConverterTest:test0349()
3990=ASTConverterTest:test0303()
3991=ASTConverterTest:test0060()
3992=ASTConverterTest:test0117()
3993=ASTConverterTest:test0292()
3994=ASTConverterTest:test0238()
3995=ASTConverterTest:test0083()
3996=ASTConverterTest:test0215()
3997=ASTConverterTest:test0170()
3998=ASTConverterTest:test0008()
3999=ASTConverterTest:test0337()
4000=ASTConverterTest:test0193()
4001=ASTConverterTest:test0314()
4002=ASTConverterTest:test0106()
4003=ASTConverterTest:test0129()
4004=ASTConverterTest:test0280()
4005=ASTConverterTest:test0227()
4006=ASTConverterTest:test0072()
4007=ASTConverterTest:test0204()
4008=ASTConverterTest:test0095()
4009=ASTConverterTest:test0304()
4010=ASTConverterTest:test0327()
4011=ASTConverterTest:test0391()
4012=ASTConverterTest:test0184()
4013=ASTConverterTest:test0161()
4014=ASTConverterTest:test0218()
4015=ASTConverterTest:test0270()
4016=ASTConverterTest:test0040()
4017=ASTConverterTest:test0293()
4018=ASTConverterTest:test0063()
4019=ASTConverterTest:test0086()
4020=ASTConverterTest:test0315()
4021=ASTConverterTest:test0338()
4022=ASTConverterTest:test0173()
4023=ASTConverterTest:test0150()
4024=ASTConverterTest:test0196()
4025=ASTConverterTest:test0109()
4026=ASTConverterTest:test0207()
4027=ASTConverterTest:test0281()
4028=ASTConverterTest:test0098()
4029=ASTConverterTest:test0052()
4030=ASTConverterTest:test0075()
4031=ASTConverterTest:test0305()
4032=ASTConverterTest:test0392()
4033=ASTConverterTest:test0160()
4034=ASTConverterTest:test0183()
4035=ASTConverterTest:test0328()
4036=ASTConverterTest:test0119()
4037=ASTConverterTest:test0271()
4038=ASTConverterTest:test0294()
4039=ASTConverterTest:test0217()
4040=ASTConverterTest:test0062()
4041=ASTConverterTest:test0085()
4042=ASTConverterTest:test0316()
4043=ASTConverterTest:test0172()
4044=ASTConverterTest:test0339()
4045=ASTConverterTest:test0195()
4046=ASTConverterTest:test0108()
4047=ASTConverterTest:test0380()
4048=ASTConverterTest:test0282()
4049=ASTConverterTest:test0229()
4050=ASTConverterTest:test0206()
4051=ASTConverterTest:test0051()
4052=ASTConverterTest:test0097()
4053=ASTConverterTest:test0074()
4054=ASTConverterTest:test0016()
4055=ASTConverterTest:test0039()
4056=ASTConverterTest:test0200()
4057=ASTConverterTest:test0246()
4058=ASTConverterTest:test0269()
4059=ASTConverterTest:test0344()
4060=ASTConverterTest:test0367()
4061=ASTConverterTest:test0080()
4062=ASTConverterTest:test0114()
4063=ASTConverterTest:test0332()
4064=ASTConverterTest:test0137()
4065=ASTConverterTest:test0212()
4066=ASTConverterTest:test0235()
4067=ASTConverterTest:test0005()
4068=ASTConverterTest:test0028()
4069=ASTConverterTest:test0190()
4070=ASTConverterTest:test0257()
4071=ASTConverterTest:test0355()
4072=ASTConverterTest:test0378()
4073=ASTConverterTest:test0092()
4074=ASTConverterTest:test0103()
4075=ASTConverterTest:test0149()
4076=ASTConverterTest:test0343()
4077=ASTConverterTest:test0126()
4078=ASTConverterTest:test0320()
4079=ASTConverterTest:test0201()
4080=ASTConverterTest:test0224()
4081=ASTConverterTest:test0222()
4082=ASTConverterTest:test0038()
4083=ASTConverterTest:test0247()
4084=ASTConverterTest:test0015()
4085=ASTConverterTest:test0322()
4086=ASTConverterTest:test0368()
4087=ASTConverterTest:test0101()
4088=ASTConverterTest:test0345()
4089=ASTConverterTest:test0113()
4090=ASTConverterTest:test0136()
4091=ASTConverterTest:test0159()
4092=ASTConverterTest:suite()
4093=ASTConverterTest:test0310()
4094=ASTConverterTest:componentType(ArrayType)
4095=ASTConverterTest:test0234()
4096=ASTConverterTest:test0027()
4097=ASTConverterTest:test0211()
4098=ASTConverterTest:test0258()
4099=ASTConverterTest:test0004()
4100=ASTConverterTest:test0333()
4101=ASTConverterTest:test0379()
4102=ASTConverterTest:test0356()
4103=ASTConverterTest:test0102()
4104=ASTConverterTest:test0125()
4105=ASTConverterTest:test0148()
4106=ASTConverterTest:test0321()
4107=ASTConverterTest:test0091()
4108=ASTConverterTest:test0223()
4109=ASTConverterTest:setUpSuite()
4110=ASTConverterTest:test0248()
4111=ASTConverterTest:test0180()
4112=ASTConverterTest:test0018()
4113=ASTConverterTest:test0300()
4114=ASTConverterTest:test0323()
4115=ASTConverterTest:test0346()
4116=ASTConverterTest:test0369()
4117=ASTConverterTest:test0082()
4118=ASTConverterTest:test0116()
4119=ASTConverterTest:test0139()
4120=ASTConverterTest:test0214()
4121=ASTConverterTest:test0237()
4122=ASTConverterTest:test0192()
4123=ASTConverterTest:test0259()
4124=ASTConverterTest:test0007()
4125=ASTConverterTest:test0311()
4126=ASTConverterTest:test0334()
4127=ASTConverterTest:test0357()
4128=ASTConverterTest:test0071()
4129=ASTConverterTest:test0105()
4130=ASTConverterTest:test0128()
4131=ASTConverterTest:test0203()
4132=ASTConverterTest:test0226()
4133=ASTConverterTest:test0094()
4134=ASTConverterTest:test0017()
4135=ASTConverterTest:test0249()
4136=ASTConverterTest:test0301()
4137=ASTConverterTest:test0347()
4138=ASTConverterTest:test0324()
4139=ASTConverterTest:test0115()
4140=ASTConverterTest:test0138()
4141=ASTConverterTest:test0081()
4142=ASTConverterTest:test0290()
4143=ASTConverterTest:test0236()
4144=ASTConverterTest:test0213()
4145=ASTConverterTest:test0006()
4146=ASTConverterTest:test0191()
4147=ASTConverterTest:test0029()
4148=ASTConverterTest:test0312()
4149=ASTConverterTest:test0358()
4150=ASTConverterTest:test0335()
4151=ASTConverterTest:test0093()
4152=ASTConverterTest:test0104()
4153=ASTConverterTest:test0127()
4154=ASTConverterTest:test0070()
4155=ASTConverterTest:test0225()
4156=ASTConverterTest:test0202()
4157=ASTConverterTest:test0058()
4158=ASTConverterTest:test0121()
4159=ASTConverterTest:test0167()
4160=ASTConverterTest:test0397()
4161=ASTConverterTest:test0144()
4162=ASTConverterTest:test0351()
4163=ASTConverterTest:test0374()
4164=ASTConverterTest:test0179()
4165=ASTConverterTest:test0023()
4166=ASTConverterTest:test0046()
4167=ASTConverterTest:test0253()
4168=ASTConverterTest:test0299()
4169=ASTConverterTest:test0276()
4170=ASTConverterTest:test0231()
4171=ASTConverterTest:test0047()
4172=ASTConverterTest:test0110()
4173=ASTConverterTest:test0156()
4174=ASTConverterTest:test0133()
4175=ASTConverterTest:test0168()
4176=ASTConverterTest:test0385()
4177=ASTConverterTest:test0362()
4178=ASTConverterTest:test0012()
4179=ASTConverterTest:test0035()
4180=ASTConverterTest:test0241()
4181=ASTConverterTest:test0264()
4182=ASTConverterTest:test0287()
4183=ASTConverterTest:test0289()
4184=ASTConverterTest:test0143()
4185=ASTConverterTest:test0166()
4186=ASTConverterTest:test0189()
4187=ASTConverterTest:test0120()
4188=ASTConverterTest:test0398()
4189=ASTConverterTest:test0375()
4190=ASTConverterTest:test0352()
4191=ASTConverterTest:test0068()
4192=ASTConverterTest:test0045()
4193=ASTConverterTest:test0254()
4194=ASTConverterTest:test0277()
4195=ASTConverterTest:test0022()
4196=ASTConverterTest:test0230()
4197=ASTConverterTest:test0069()
4198=ASTConverterTest:test0132()
4199=ASTConverterTest:test0155()
4200=ASTConverterTest:test0178()
4201=ASTConverterTest:test0386()
4202=ASTConverterTest:test0340()
4203=ASTConverterTest:test0363()
4204=ASTConverterTest:test0057()
4205=ASTConverterTest:test0234_2()
4206=ASTConverterTest:test0034()
4207=ASTConverterTest:test0242()
4208=ASTConverterTest:test0265()
4209=ASTConverterTest:test0288()
4210=ASTConverterTest:test0011()
4211=ASTConverterTest:test0221()
4212=ASTConverterTest:test0267()
4213=ASTConverterTest:test0014()
4214=ASTConverterTest:test0037()
4215=ASTConverterTest:test0100()
4216=ASTConverterTest:test0123()
4217=ASTConverterTest:test0330()
4218=ASTConverterTest:test0353()
4219=ASTConverterTest:test0376()
4220=ASTConverterTest:test0388()
4221=ASTConverterTest:test0135()
4222=ASTConverterTest:test0158()
4223=ASTConverterTest:test0002()
4224=ASTConverterTest:test0255()
4225=ASTConverterTest:test0210()
4226=ASTConverterTest:test0233()
4227=ASTConverterTest:test0049()
4228=ASTConverterTest:test0278()
4229=ASTConverterTest:test0003()
4230=ASTConverterTest:test0026()
4231=ASTConverterTest:test0112()
4232=ASTConverterTest:test0387()
4233=ASTConverterTest:test0399()
4234=ASTConverterTest:test0124()
4235=ASTConverterTest:test0364()
4236=ASTConverterTest:test0090()
4237=ASTConverterTest:test0147()
4238=ASTConverterTest:test0341()
4239=ASTConverterTest:test0243()
4240=ASTConverterTest:test0266()
4241=ASTConverterTest:test0245()
4242=ASTConverterTest:test0268()
4243=ASTConverterTest:test0220()
4244=ASTConverterTest:test0036()
4245=ASTConverterTest:test0059()
4246=ASTConverterTest:ASTConverterTest(String)
4247=ASTConverterTest:test0145()
4248=ASTConverterTest:test0122()
4249=ASTConverterTest:test0366()
4250=ASTConverterTest:test0354()
4251=ASTConverterTest:test0389()
4252=ASTConverterTest:test0157()
4253=ASTConverterTest:test0331()
4254=ASTConverterTest:test0001()
4255=ASTConverterTest:test0024()
4256=ASTConverterTest:test0256()
4257=ASTConverterTest:test0279()
4258=ASTConverterTest:test0232()
4259=ASTConverterTest:test0025()
4260=ASTConverterTest:test0048()
4261=ASTConverterTest:test0111()
4262=ASTConverterTest:test0134()
4263=ASTConverterTest:test0377()
4264=ASTConverterTest:test0342()
4265=ASTConverterTest:test0365()
4266=ASTConverterTest:test0146()
4267=ASTConverterTest:test0169()
4268=ASTConverterTest:test0013()
4269=ASTConverterTest:test0244()
4270=ASTConverterTest:test0163()
4271=ASTConverterTest:test0306()
4272=ASTConverterTest:test0329()
4273=ASTConverterTest:test0393()
4274=ASTConverterTest:test0140()
4275=ASTConverterTest:test0186()
4276=ASTConverterTest:testBug446746_0002()
4277=ASTConverterTest:test0370()
4278=ASTConverterTest:test0042()
4279=ASTConverterTest:test0065()
4280=ASTConverterTest:test0088()
4281=ASTConverterTest:test0295()
4282=ASTConverterTest:test0272()
4283=ASTConverterTest:test0152()
4284=ASTConverterTest:test0198()
4285=ASTConverterTest:test0317()
4286=ASTConverterTest:test0175()
4287=ASTConverterTest:test0209()
4288=ASTConverterTest:test0381()
4289=ASTConverterTest:test0031()
4290=ASTConverterTest:test0054()
4291=ASTConverterTest:test0077()
4292=ASTConverterTest:test0260()
4293=ASTConverterTest:test0283()
4294=ASTConverterTest:test0162()
4295=ASTConverterTest:test0185()
4296=ASTConverterTest:test0307()
4297=ASTConverterTest:test0394()
4298=ASTConverterTest:testBug446746_0001()
4299=ASTConverterTest:test0371()
4300=ASTConverterTest:test0041()
4301=ASTConverterTest:test0087()
4302=ASTConverterTest:test0219()
4303=ASTConverterTest:test0250()
4304=ASTConverterTest:test0273()
4305=ASTConverterTest:test0296()
4306=ASTConverterTest:test0064()
4307=ASTConverterTest:test0151()
4308=ASTConverterTest:test0174()
4309=ASTConverterTest:test0197()
4310=ASTConverterTest:test0318()
4311=ASTConverterTest:test0382()
4312=ASTConverterTest:test0030()
4313=ASTConverterTest:test0076()
4314=ASTConverterTest:test0208()
4315=ASTConverterTest:test0261()
4316=ASTConverterTest:test0284()
4317=ASTConverterTest:test0099()
4318=ASTConverterTest:test0053()
4319=ASTConverterTest:test0308()
4320=ASTConverterTest:test0395()
4321=ASTConverterTest:test0142()
4322=ASTConverterTest:test0188()
4323=ASTConverterTest:test0165()
4324=ASTConverterTest:test0372()
4325=ASTConverterTest:test0067()
4326=ASTConverterTest:test0251()
4327=ASTConverterTest:test0274()
4328=ASTConverterTest:test0021()
4329=ASTConverterTest:test0044()
4330=ASTConverterTest:test0297()
4331=ASTConverterTest:test0319()
4332=ASTConverterTest:internalThrownExceptions(MethodDeclaration)
4333=ASTConverterTest:test0131()
4334=ASTConverterTest:test0177()
4335=ASTConverterTest:test0154()
4336=ASTConverterTest:test0383()
4337=ASTConverterTest:test0360()
4338=ASTConverterTest:test0056()
4339=ASTConverterTest:test0079()
4340=ASTConverterTest:test0262()
4341=ASTConverterTest:test0285()
4342=ASTConverterTest:test0010()
4343=ASTConverterTest:test0033()
4344=ASTConverterTest:test0309()
4345=ASTConverterTest:test0141()
4346=ASTConverterTest:test0396()
4347=ASTConverterTest:test0164()
4348=ASTConverterTest:test0187()
4349=ASTConverterTest:test0373()
4350=ASTConverterTest:test0350()
4351=ASTConverterTest:test0020()
4352=ASTConverterTest:test0066()
4353=ASTConverterTest:test0089()
4354=ASTConverterTest:test0252()
4355=ASTConverterTest:test0275()
4356=ASTConverterTest:test0298()
4357=ASTConverterTest:test0043()
4358=ASTConverterTest:test0130()
4359=ASTConverterTest:test0199()
4360=ASTConverterTest:test0153()
4361=ASTConverterTest:test0176()
4362=ASTConverterTest:test0384()
4363=ASTConverterTest:test0361()
4364=ASTConverterTest:test0055()
4365=ASTConverterTest:test0078()
4366=ASTConverterTest:test0240()
4367=ASTConverterTest:test0263()
4368=ASTConverterTest:test0286()
4369=ASTConverterTest:test0032()
4370=TestPessimisticProvider:deconfigure()
4371=TestPessimisticProvider:getFileModificationValidator2()
4372=TestPessimisticProvider:getID()
4373=TestPessimisticProvider:configureProject()
4374=UnconditionalFlowInfo:discardNonFieldInitializations()
4375=UnconditionalFlowInfo:markAsDefinitelyNotAssigned(int)
4376=UnconditionalFlowInfo:markAsDefinitelyAssigned(FieldBinding)
4377=UnconditionalFlowInfo:addInitializationsFrom(FlowInfo)
4378=UnconditionalFlowInfo:copy()
4379=UnconditionalFlowInfo:numberOfEnclosingFields(ReferenceBinding)
4380=UnconditionalFlowInfo:discardFieldInitializations()
4381=UnconditionalFlowInfo:initsWhenFalse()
4382=UnconditionalFlowInfo:reachMode()
4383=UnconditionalFlowInfo:toString()
4384=UnconditionalFlowInfo:UnconditionalFlowInfo()
4385=UnconditionalFlowInfo:isPotentiallyAssigned(FieldBinding)
4386=UnconditionalFlowInfo:isReachable()
4387=UnconditionalFlowInfo:mergedWith(UnconditionalFlowInfo)
4388=UnconditionalFlowInfo:setReachMode(int)
4389=UnconditionalFlowInfo:markAsDefinitelyNotAssigned(LocalVariableBinding)
4390=UnconditionalFlowInfo:isPotentiallyAssigned(int)
4391=UnconditionalFlowInfo:markAsDefinitelyAssigned(int)
4392=UnconditionalFlowInfo:isDefinitelyAssigned(LocalVariableBinding)
4393=UnconditionalFlowInfo:initsWhenTrue()
4394=UnconditionalFlowInfo:markAsDefinitelyAssigned(LocalVariableBinding)
4395=UnconditionalFlowInfo:isPotentiallyAssigned(LocalVariableBinding)
4396=UnconditionalFlowInfo:isDefinitelyAssigned(int)
4397=UnconditionalFlowInfo:markAsDefinitelyNotAssigned(FieldBinding)
4398=UnconditionalFlowInfo:addPotentialInitializationsFrom(FlowInfo)
4399=UnconditionalFlowInfo:unconditionalInits()
4400=UnconditionalFlowInfo:isDefinitelyAssigned(FieldBinding)
4401=ResolveArgumentName:foo(Object, int)
4402=X04:foo(int, int)
4403=InnerClassesAttributeEntry:getOuterClassNameIndex()
4404=InnerClassesAttributeEntry:getAccessFlags()
4405=InnerClassesAttributeEntry:getInnerClassName()
4406=InnerClassesAttributeEntry:getInnerNameIndex()
4407=InnerClassesAttributeEntry:getOuterClassName()
4408=InnerClassesAttributeEntry:getInnerName()
4409=InnerClassesAttributeEntry:InnerClassesAttributeEntry(byte, IConstantPool, int)
4410=InnerClassesAttributeEntry:getInnerClassNameIndex()
4411=Test:m(String, String, String, String)
4412=AbstractCompilerTest:AbstractCompilerTest(String)
4413=AbstractCompilerTest:buildComplianceTestSuite(long, List)
4414=AbstractCompilerTest:isJRELevel(int)
4415=AbstractCompilerTest:getName()
4416=AbstractCompilerTest:getPossibleComplianceLevels()
4417=AbstractCompilerTest:buildUniqueComplianceTestSuite(Class, long)
4418=AbstractCompilerTest:suite(String, Class, ArrayList)
4419=AbstractCompilerTest:createOutputTestDirectory(String)
4420=AbstractCompilerTest:buildTestSuite(Class, long)
4421=AbstractCompilerTest:setpossibleComplianceLevels(int)
4422=AbstractCompilerTest:getCompilerOptions()
4423=AbstractCompilerTest:buildTestSuite(Class)
4424=AbstractCompilerTest:highestComplianceLevels()
4425=AbstractCompilerTest:setupSuite(Class)
4426=AbstractCompilerTest:buildAllCompliancesTestSuite(Class)
4427=AbstractCompilerTest:initialize(CompilerTestSetup)
4428=AbstractCompilerTest:buildAllCompliancesTestSuite(Class, Class, List)
4429=AbstractCompilerTest:testName()
4430=AbstractCompilerTest:writeFiles(String[])
4431=AbstractCompilerTest:suiteForComplianceLevel(long, Class, ArrayList)
4432=AbstractCompilerTest:buildAllCompliancesTestSuite(TestSuite, Class)
4433=AbstractCompilerTest:buildComplianceTestSuite(List, Class, long)
4434=AbstractCompilerTest:buildMinimalComplianceTestSuite(Class, int)
4435=AbstractASTTests:newWorkingCopyOwner(IProblemRequestor)
4436=AbstractASTTests:setUpSuite()
4437=AbstractASTTests:MarkerInfo:indexOfASTStart(int, int)
4438=AbstractASTTests:buildASTs(String, ICompilationUnit)
4439=AbstractASTTests:assertBindingEquals(String, IBinding)
4440=AbstractASTTests:assertASTNodesEqual(String, List)
4441=AbstractASTTests:buildASTs(String, ICompilationUnit, int)
4442=AbstractASTTests:createWorkingCopies(String[], WorkingCopyOwner)
4443=AbstractASTTests:resolveBindings(String, ICompilationUnit)
4444=AbstractASTTests:assertBindingKeysEqual(String, String[])
4445=AbstractASTTests:buildAST(String, ICompilationUnit, boolean)
4446=AbstractASTTests:buildAST(IClassFile)
4447=AbstractASTTests:createTypeBindings(String[], String[])
4448=AbstractASTTests:createTypeBindings(String[], String[], IJavaProject)
4449=AbstractASTTests:MarkerInfo:MarkerInfo(String)
4450=AbstractASTTests:createMethodBindings(String[], String[], IJavaProject)
4451=AbstractASTTests:resolveBindings(String[], IJavaProject, WorkingCopyOwner)
4452=AbstractASTTests:MarkerInfo:indexOfASTStart(int)
4453=AbstractASTTests:createMethodBindings(String[], String[])
4454=AbstractASTTests:MarkerInfo:MarkerInfo(String, String)
4455=AbstractASTTests:buildMarkedAST(String, String, boolean, boolean, boolean, MarkedASTFlattener.DefaultMarkedNodeLabelProvider)
4456=AbstractASTTests:buildASTs(int, String, ICompilationUnit, boolean, boolean, boolean)
4457=AbstractASTTests:assertASTResult(String, ASTResult)
4458=AbstractASTTests:findNode(CompilationUnit, MarkerInfo)
4459=AbstractASTTests:buildMarkedAST(String, String, boolean, boolean, boolean, int)
4460=AbstractASTTests:assertBindingsEqual(String, String, IBinding[])
4461=AbstractASTTests:BindingRequestor:acceptBinding(String, IBinding)
4462=AbstractASTTests:astInternalJLS2()
4463=AbstractASTTests:AbstractASTTests(String)
4464=AbstractASTTests:MarkerInfo:removeMarkerFromSource(String, int, int)
4465=AbstractASTTests:MarkerInfo:MarkerInfo(String, String, String, String, String)
4466=AbstractASTTests:createWorkingCopies(MarkerInfo[], WorkingCopyOwner)
4467=AbstractASTTests:createASTParser()
4468=AbstractASTTests:buildAST(String, ICompilationUnit, boolean, boolean)
4469=AbstractASTTests:assertBindingsEqual(String, IBinding[])
4470=AbstractASTTests:buildAST(String, ICompilationUnit, boolean, boolean, boolean)
4471=AbstractASTTests:assertBindingKeyEquals(String, String)
4472=AbstractASTTests:resolveBindings(String, ICompilationUnit, boolean)
4473=AbstractASTTests:ASTResult:ASTResult(String, String)
4474=AbstractASTTests:resolveASTs(ICompilationUnit[], String[], ASTRequestor, IJavaProject, WorkingCopyOwner)
4475=AbstractASTTests:buildAST(String, ICompilationUnit, int)
4476=AbstractASTTests:buildMarkedAST(String, String)
4477=AbstractASTTests:buildAST(int, String, ICompilationUnit, boolean, boolean, boolean)
4478=AbstractASTTests:buildASTs(String, ICompilationUnit, boolean, boolean, boolean)
4479=AbstractASTTests:buildASTs(String, ICompilationUnit, boolean)
4480=AbstractASTTests:buildAST(ICompilationUnit)
4481=AbstractASTTests:MarkerInfo:setStartAndEnd(int)
4482=AbstractASTTests:findNodes(CompilationUnit, MarkerInfo)
4483=AbstractASTTests:MarkerInfo:MarkerInfo(String, String, String, String, String, String)
4484=AbstractASTTests:BindingRequestor:getBindings(String[])
4485=AbstractASTTests:assertASTNodeEquals(String, ASTNode)
4486=AbstractASTTests:createMarkerInfos(String[])
4487=AbstractASTTests:buildAST(String, ICompilationUnit)
4488=AbstractASTTests:resolveBinding(ASTNode)
4489=AbstractASTTests:buildAST(MarkerInfo, IClassFile, boolean)
4490=AbstractASTTests:buildAST(MarkerInfo, IClassFile)
4491=AbstractASTTests:createVariableBindings(String[], String[])
4492=CompletionScanner:getCurrentTokenSourceString()
4493=CompletionScanner:getCurrentIdentifierSource()
4494=CompletionScanner:scanIdentifierOrKeyword()
4495=CompletionScanner:CompletionScanner(long)
4496=CompletionScanner:jumpOverBlock()
4497=CompletionScanner:isAtAssistIdentifier()
4498=CompletionScanner:getNextUnicodeChar()
4499=CompletionScanner:scanNumber(boolean)
4500=CompletionScanner:isFirstTag()
4501=CompletionScanner:getNextToken0()
4502=RewriteEventStore:createCopySourceInfo(PropertyLocation, ASTNode, boolean)
4503=RewriteEventStore:revertMovedNodes()
4504=RewriteEventStore:setEventEditGroup(RewriteEvent, TextEditGroup)
4505=RewriteEventStore:NodeRangeInfo:updatePlaceholderSourceRanges(TargetSourceRangeComputer)
4506=RewriteEventStore:assertNoOverlap(ListRewriteEvent, int, int, List)
4507=RewriteEventStore:setNodePropertyMapper(INodePropertyMapper)
4508=RewriteEventStore:findEvent(Object, int)
4509=RewriteEventStore:ParentIterator:remove()
4510=RewriteEventStore:ParentIterator:next()
4511=RewriteEventStore:isNewNode(ASTNode)
4512=RewriteEventStore:getChangedPropertieEvents(ASTNode)
4513=RewriteEventStore:NodeRangeInfo:getStartNode()
4514=RewriteEventStore:internalGetCopySources(List, ASTNode)
4515=RewriteEventStore:getChangeKind(ASTNode)
4516=RewriteEventStore:prepareSingleNodeCopies()
4517=RewriteEventStore:NodeRangeInfo:toString()
4518=RewriteEventStore:PropertyLocation:equals(Object)
4519=RewriteEventStore:markAsTracked(ASTNode, TextEditGroup)
4520=RewriteEventStore:PropertyLocation:PropertyLocation(ASTNode, StructuralPropertyDescriptor)
4521=RewriteEventStore:INodePropertyMapper:getOriginalValue(ASTNode, StructuralPropertyDescriptor)
4522=RewriteEventStore:NodeRangeInfo:getInternalPlaceholder()
4523=RewriteEventStore:RewriteEventStore()
4524=RewriteEventStore:prepareNodeRangeCopies(TargetSourceRangeComputer)
4525=RewriteEventStore:validateIsNodeProperty(StructuralPropertyDescriptor)
4526=RewriteEventStore:getOriginalValue(ASTNode, StructuralPropertyDescriptor)
4527=RewriteEventStore:getTrackedNodeData(ASTNode)
4528=RewriteEventStore:hasChangedProperties(ASTNode)
4529=RewriteEventStore:isNodeInEvent(RewriteEvent, Object, int)
4530=RewriteEventStore:clear()
4531=RewriteEventStore:getPropertyLocation(Object, int)
4532=RewriteEventStore:ParentIterator:hasNext()
4533=RewriteEventStore:accessOriginalValue(ASTNode, StructuralPropertyDescriptor)
4534=RewriteEventStore:doMarkMovedAsRemoved(CopySourceInfo, ASTNode, StructuralPropertyDescriptor)
4535=RewriteEventStore:CopySourceInfo:toString()
4536=RewriteEventStore:NodeRangeInfo:compareTo(Object)
4537=RewriteEventStore:removeMoveRangePlaceholders()
4538=RewriteEventStore:revertListWithRanges(RewriteEvent[], Set, List)
4539=RewriteEventStore:PropertyLocation:hashCode()
4540=RewriteEventStore:ParentIterator:ParentIterator()
4541=RewriteEventStore:setInsertBoundToPrevious(ASTNode)
4542=RewriteEventStore:getNodeCopySources(ASTNode)
4543=RewriteEventStore:NodeRangeInfo:NodeRangeInfo(ASTNode, StructuralPropertyDescriptor, ASTNode, ASTNode, CopySourceInfo, ASTNode, TextEditGroup)
4544=RewriteEventStore:getNewValue(ASTNode, StructuralPropertyDescriptor)
4545=RewriteEventStore:CopySourceInfo:compareTo(Object)
4546=RewriteEventStore:processListWithRanges(List, RewriteEvent[], TargetSourceRangeComputer)
4547=RewriteEventStore:getEvent(ASTNode, StructuralPropertyDescriptor)
4548=RewriteEventStore:setTrackedNodeData(ASTNode, TextEditGroup)
4549=RewriteEventStore:isRangeCopyPlaceholder(ASTNode)
4550=RewriteEventStore:PropertyLocation:getParent()
4551=RewriteEventStore:addEvent(ASTNode, StructuralPropertyDescriptor, RewriteEvent)
4552=RewriteEventStore:getNodeEvent(ASTNode, StructuralPropertyDescriptor, boolean)
4553=RewriteEventStore:NodeRangeInfo:getEndNode()
4554=RewriteEventStore:validateHasChildProperty(ASTNode, StructuralPropertyDescriptor)
4555=RewriteEventStore:isInsertBoundToPrevious(ASTNode)
4556=RewriteEventStore:markAsCopySource(ASTNode, StructuralPropertyDescriptor, ASTNode, boolean)
4557=RewriteEventStore:validateIsListProperty(StructuralPropertyDescriptor)
4558=RewriteEventStore:CopySourceInfo:CopySourceInfo(PropertyLocation, ASTNode, boolean)
4559=RewriteEventStore:getListEvent(ASTNode, StructuralPropertyDescriptor, boolean)
4560=RewriteEventStore:PropertyLocation:getProperty()
4561=RewriteEventStore:getChangeRootIterator()
4562=RewriteEventStore:toString()
4563=RewriteEventStore:NodeRangeInfo:isMove()
4564=RewriteEventStore:EventHolder:EventHolder(ASTNode, StructuralPropertyDescriptor, RewriteEvent)
4565=RewriteEventStore:prepareMovedNodes(TargetSourceRangeComputer)
4566=RewriteEventStore:EventHolder:toString()
4567=RewriteEventStore:CopySourceInfo:getNode()
4568=RewriteEventStore:getEventEditGroup(RewriteEvent)
4569=RewriteEventStore:createRangeCopy(ASTNode, StructuralPropertyDescriptor, ASTNode, ASTNode, boolean, ASTNode, ASTNode, TextEditGroup)
4570=Test:foo(String)
4571=E:foo1(int)
4572=E:foo1()
4573=CompletionRecoveryTest:test12()
4574=CompletionRecoveryTest:test24()
4575=CompletionRecoveryTest:test01()
4576=CompletionRecoveryTest:test11()
4577=CompletionRecoveryTest:test23()
4578=CompletionRecoveryTest:CompletionRecoveryTest(String)
4579=CompletionRecoveryTest:test10()
4580=CompletionRecoveryTest:test22()
4581=CompletionRecoveryTest:test21()
4582=CompletionRecoveryTest:test20()
4583=CompletionRecoveryTest:test09()
4584=CompletionRecoveryTest:test19()
4585=CompletionRecoveryTest:suite()
4586=CompletionRecoveryTest:test08()
4587=CompletionRecoveryTest:test18()
4588=CompletionRecoveryTest:test07()
4589=CompletionRecoveryTest:test17()
4590=CompletionRecoveryTest:test06()
4591=CompletionRecoveryTest:test16()
4592=CompletionRecoveryTest:test05()
4593=CompletionRecoveryTest:test15()
4594=CompletionRecoveryTest:test04()
4595=CompletionRecoveryTest:test14()
4596=CompletionRecoveryTest:test26()
4597=CompletionRecoveryTest:test03()
4598=CompletionRecoveryTest:test13()
4599=CompletionRecoveryTest:test02()
4600=CompletionRecoveryTest:test25()
4601=FormatterTest:doTest()
4602=ASTRewritingReferenceExpressionTest:testReferenceExpressions_test006_since_8()
4603=ASTRewritingReferenceExpressionTest:testReferenceExpressions_test004_since_8()
4604=ASTRewritingReferenceExpressionTest:ASTRewritingReferenceExpressionTest(String)
4605=ASTRewritingReferenceExpressionTest:testReferenceExpressions_test001_since_8()
4606=ASTRewritingReferenceExpressionTest:testReferenceExpressions_test003_since_8()
4607=ASTRewritingReferenceExpressionTest:testReferenceExpressions_test002_since_8()
4608=ASTRewritingReferenceExpressionTest:ASTRewritingReferenceExpressionTest(String, int)
4609=ASTRewritingReferenceExpressionTest:testReferenceExpressions_test005_since_8()
4610=ASTRewritingReferenceExpressionTest:suite()
4611=F:goo(int)
4612=X:A:foo()
4613=X:main(String[])
4614=LabeledStatement:getLabel()
4615=LabeledStatement:memSize()
4616=LabeledStatement:getNodeType0()
4617=LabeledStatement:LabeledStatement(AST)
4618=LabeledStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
4619=LabeledStatement:setBody(Statement)
4620=LabeledStatement:setLabel(SimpleName)
4621=LabeledStatement:accept0(ASTVisitor)
4622=LabeledStatement:propertyDescriptors(int)
4623=LabeledStatement:getBody()
4624=LabeledStatement:treeSize()
4625=LabeledStatement:subtreeMatch0(ASTMatcher, Object)
4626=LabeledStatement:clone0(AST)
4627=LabeledStatement:internalStructuralPropertiesForType(int)
4628=VerificationInfo:getOffset()
4629=VerificationInfo:getConstantPoolIndex()
4630=VerificationInfo:sizeInBytes()
4631=VerificationInfo:getClassTypeName()
4632=VerificationInfo:VerificationInfo(byte[], IConstantPool, int)
4633=VerificationInfo:getTag()
4634=Bug47968:Bug47968(String)
4635=Bug47968:foo(int)
4636=DOMMethod:shareContents(DOMNode)
4637=DOMMethod:addParameter(String, String)
4638=DOMMethod:getName()
4639=DOMMethod:getJavaElement(IJavaElement)
4640=DOMMethod:getConstructorName()
4641=DOMMethod:toString()
4642=DOMMethod:DOMMethod(char[], int[], String, int[], int[], int, int[], boolean, String, int[], String[], String[], int[], String[], int[], int[])
4643=DOMMethod:setReturnType(String)
4644=DOMMethod:getReturnType()
4645=DOMMethod:addException(String)
4646=DOMMethod:newDOMNode()
4647=DOMMethod:DOMMethod(char[], int[], String, int[], int, boolean, String, String[], String[], String[])
4648=DOMMethod:getDefault()
4649=DOMMethod:setDefault(String)
4650=DOMMethod:getBody()
4651=DOMMethod:getParameterNames()
4652=DOMMethod:getReturnTypeContents()
4653=DOMMethod:setExceptions(String[])
4654=DOMMethod:getTypeParameters()
4655=DOMMethod:getNodeType()
4656=DOMMethod:appendMemberBodyContents(CharArrayBuffer)
4657=DOMMethod:setName(String)
4658=DOMMethod:isConstructor()
4659=DOMMethod:setParameters(String[], String[])
4660=DOMMethod:setConstructor(boolean)
4661=DOMMethod:isSignatureEqual(IDOMNode)
4662=DOMMethod:setSourceRangeEnd(int)
4663=DOMMethod:setReturnTypeAltered(boolean)
4664=DOMMethod:setBody(String)
4665=DOMMethod:offset(int)
4666=DOMMethod:getParameterTypes()
4667=DOMMethod:getDetailedNode()
4668=DOMMethod:isReturnTypeAltered()
4669=DOMMethod:appendMemberDeclarationContents(CharArrayBuffer)
4670=DOMMethod:getExceptions()
4671=DOMMethod:DOMMethod()
4672=DOMMethod:getMemberDeclarationStartPosition()
4673=DOMMethod:setTypeParameters(String[])
4674=DOMMethod:setBodyRangeEnd(int)
4675=DOMMethod:generateFlags()
4676=DOMMethod:hasTrailingArrayQualifier()
4677=DOMMethod:appendSimpleContents(CharArrayBuffer)
4678=DoubleConstant:shortValue()
4679=DoubleConstant:equals(Object)
4680=DoubleConstant:toString()
4681=DoubleConstant:intValue()
4682=DoubleConstant:fromValue(double)
4683=DoubleConstant:hashCode()
4684=DoubleConstant:floatValue()
4685=DoubleConstant:doubleValue()
4686=DoubleConstant:typeID()
4687=DoubleConstant:longValue()
4688=DoubleConstant:byteValue()
4689=DoubleConstant:DoubleConstant(double)
4690=DoubleConstant:stringValue()
4691=DoubleConstant:charValue()
4692=Test:main(String[])
4693=X28c:foo()
4694=Test:foo(Iterable)
4695=X:foo()
4696=X:X(String)
4697=CodeSnippetFieldReference:resolveType(BlockScope)
4698=CodeSnippetFieldReference:generateCompoundAssignment(BlockScope, CodeStream, Expression, int, int, boolean)
4699=CodeSnippetFieldReference:CodeSnippetFieldReference(char[], long, EvaluationContext)
4700=CodeSnippetFieldReference:generateAssignment(BlockScope, CodeStream, Assignment, boolean)
4701=CodeSnippetFieldReference:generateCode(BlockScope, CodeStream, boolean)
4702=CodeSnippetFieldReference:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo, boolean)
4703=CodeSnippetFieldReference:generatePostIncrement(BlockScope, CodeStream, CompoundAssignment, boolean)
4704=SelectionOnQualifiedNameReference:printExpression(int, StringBuffer)
4705=SelectionOnQualifiedNameReference:resolveType(BlockScope)
4706=SelectionOnQualifiedNameReference:SelectionOnQualifiedNameReference(char[][], char[], long[])
4707=X04:foo(int, int)
4708=QualifiedTypeReference:traverse(ASTVisitor, BlockScope)
4709=QualifiedTypeReference:QualifiedTypeReference(char[][], long[])
4710=QualifiedTypeReference:printExpression(int, StringBuffer)
4711=QualifiedTypeReference:findNextTypeBinding(int, Scope, PackageBinding)
4712=QualifiedTypeReference:traverse(ASTVisitor, ClassScope)
4713=QualifiedTypeReference:getTypeBinding(Scope)
4714=QualifiedTypeReference:getTypeName()
4715=QualifiedTypeReference:copyDims(int)
4716=JavadocArraySingleTypeReference:traverse(ASTVisitor, BlockScope)
4717=JavadocArraySingleTypeReference:traverse(ASTVisitor, ClassScope)
4718=JavadocArraySingleTypeReference:reportDeprecatedType(Scope)
4719=JavadocArraySingleTypeReference:JavadocArraySingleTypeReference(char[], int, long)
4720=JavadocArraySingleTypeReference:reportInvalidType(Scope)
4721=ShortConstant:shortValue()
4722=ShortConstant:ShortConstant(short)
4723=ShortConstant:fromValue(short)
4724=ShortConstant:byteValue()
4725=ShortConstant:intValue()
4726=ShortConstant:longValue()
4727=ShortConstant:equals(Object)
4728=ShortConstant:charValue()
4729=ShortConstant:stringValue()
4730=ShortConstant:doubleValue()
4731=ShortConstant:toString()
4732=ShortConstant:hashCode()
4733=ShortConstant:typeID()
4734=ShortConstant:floatValue()
4735=ResourceCompilationUnit:getPackageName()
4736=ResourceCompilationUnit:getFileName()
4737=ResourceCompilationUnit:getMainTypeName()
4738=ResourceCompilationUnit:getContents()
4739=ResourceCompilationUnit:ResourceCompilationUnit(IFile)
4740=ResourceCompilationUnit:ignoreOptionalProblems()
4741=X:x()
4742=TrackedNodePosition:getLength()
4743=TrackedNodePosition:getStartPosition()
4744=TrackedNodePosition:TrackedNodePosition(TextEditGroup, ASTNode)
4745=Bug47968s:bar()
4746=Bug47968s:Bug47968s()
4747=TypeParameterDeclarationMatch:TypeParameterDeclarationMatch(IJavaElement, int, int, int, SearchParticipant, IResource)
4748=RunBuilderTests:RunBuilderTests(String)
4749=RunBuilderTests:suite()
4750=ASTNode:isSuper()
4751=ASTNode:print(int, StringBuffer)
4752=ASTNode:checkInvocationArguments(BlockScope, Expression, TypeBinding, MethodBinding, Expression[], TypeBinding[], boolean, InvocationSite)
4753=ASTNode:concreteStatement()
4754=ASTNode:printIndent(int, StringBuffer)
4755=ASTNode:isTypeUseDeprecated(TypeBinding, Scope)
4756=ASTNode:sourceStart()
4757=ASTNode:isImplicitThis()
4758=ASTNode:isThis()
4759=ASTNode:isMethodUseDeprecated(MethodBinding, Scope)
4760=ASTNode:printModifiers(int, StringBuffer)
4761=ASTNode:traverse(ASTVisitor, BlockScope)
4762=ASTNode:sourceEnd()
4763=ASTNode:ASTNode()
4764=ASTNode:isFieldUseDeprecated(FieldBinding, Scope, boolean)
4765=ASTNode:toString()
4766=AutoBoxingTest:test097()
4767=AutoBoxingTest:test119()
4768=AutoBoxingTest:test074()
4769=AutoBoxingTest:test051()
4770=AutoBoxingTest:test160()
4771=AutoBoxingTest:test085()
4772=AutoBoxingTest:test108()
4773=AutoBoxingTest:test062()
4774=AutoBoxingTest:test096()
4775=AutoBoxingTest:test118()
4776=AutoBoxingTest:test050()
4777=AutoBoxingTest:test073()
4778=AutoBoxingTest:test009()
4779=AutoBoxingTest:test084()
4780=AutoBoxingTest:test107()
4781=AutoBoxingTest:test061()
4782=AutoBoxingTest:test095()
4783=AutoBoxingTest:test117()
4784=AutoBoxingTest:test072()
4785=AutoBoxingTest:test008()
4786=AutoBoxingTest:test060()
4787=AutoBoxingTest:test083()
4788=AutoBoxingTest:test106()
4789=AutoBoxingTest:test129()
4790=AutoBoxingTest:test019()
4791=AutoBoxingTest:test071()
4792=AutoBoxingTest:test094()
4793=AutoBoxingTest:test116()
4794=AutoBoxingTest:test139()
4795=AutoBoxingTest:test007()
4796=AutoBoxingTest:test105()
4797=AutoBoxingTest:test128()
4798=AutoBoxingTest:test082()
4799=AutoBoxingTest:test018()
4800=AutoBoxingTest:test032()
4801=AutoBoxingTest:test078()
4802=AutoBoxingTest:test055()
4803=AutoBoxingTest:test164()
4804=AutoBoxingTest:test141()
4805=AutoBoxingTest:test089()
4806=AutoBoxingTest:test043()
4807=AutoBoxingTest:test066()
4808=AutoBoxingTest:test020()
4809=AutoBoxingTest:test130()
4810=AutoBoxingTest:test153()
4811=AutoBoxingTest:test054()
4812=AutoBoxingTest:test077()
4813=AutoBoxingTest:test031()
4814=AutoBoxingTest:test140()
4815=AutoBoxingTest:test163()
4816=AutoBoxingTest:test088()
4817=AutoBoxingTest:test065()
4818=AutoBoxingTest:test042()
4819=AutoBoxingTest:test152()
4820=AutoBoxingTest:test099()
4821=AutoBoxingTest:test076()
4822=AutoBoxingTest:test053()
4823=AutoBoxingTest:test030()
4824=AutoBoxingTest:testClass()
4825=AutoBoxingTest:test162()
4826=AutoBoxingTest:test087()
4827=AutoBoxingTest:test041()
4828=AutoBoxingTest:test064()
4829=AutoBoxingTest:test151()
4830=AutoBoxingTest:test098()
4831=AutoBoxingTest:test052()
4832=AutoBoxingTest:test075()
4833=AutoBoxingTest:test161()
4834=AutoBoxingTest:test086()
4835=AutoBoxingTest:test109()
4836=AutoBoxingTest:test063()
4837=AutoBoxingTest:test040()
4838=AutoBoxingTest:test150()
4839=AutoBoxingTest:test157()
4840=AutoBoxingTest:test013()
4841=AutoBoxingTest:test025()
4842=AutoBoxingTest:test048()
4843=AutoBoxingTest:test145()
4844=AutoBoxingTest:test122()
4845=AutoBoxingTest:test146()
4846=AutoBoxingTest:test169()
4847=AutoBoxingTest:test001()
4848=AutoBoxingTest:test024()
4849=AutoBoxingTest:test036()
4850=AutoBoxingTest:test059()
4851=AutoBoxingTest:test134()
4852=AutoBoxingTest:test111()
4853=AutoBoxingTest:suite()
4854=AutoBoxingTest:test012()
4855=AutoBoxingTest:test035()
4856=AutoBoxingTest:test047()
4857=AutoBoxingTest:test144()
4858=AutoBoxingTest:test167()
4859=AutoBoxingTest:test121()
4860=AutoBoxingTest:test168()
4861=AutoBoxingTest:test046()
4862=AutoBoxingTest:test023()
4863=AutoBoxingTest:test058()
4864=AutoBoxingTest:AutoBoxingTest(String)
4865=AutoBoxingTest:test156()
4866=AutoBoxingTest:test133()
4867=AutoBoxingTest:test110()
4868=AutoBoxingTest:test011()
4869=AutoBoxingTest:test057()
4870=AutoBoxingTest:test034()
4871=AutoBoxingTest:test069()
4872=AutoBoxingTest:test143()
4873=AutoBoxingTest:test166()
4874=AutoBoxingTest:test120()
4875=AutoBoxingTest:test022()
4876=AutoBoxingTest:test045()
4877=AutoBoxingTest:test068()
4878=AutoBoxingTest:_test079()
4879=AutoBoxingTest:test155()
4880=AutoBoxingTest:test132()
4881=AutoBoxingTest:test010()
4882=AutoBoxingTest:test033()
4883=AutoBoxingTest:test056()
4884=AutoBoxingTest:test142()
4885=AutoBoxingTest:test165()
4886=AutoBoxingTest:test021()
4887=AutoBoxingTest:test067()
4888=AutoBoxingTest:test044()
4889=AutoBoxingTest:test154()
4890=AutoBoxingTest:test131()
4891=AutoBoxingTest:test070()
4892=AutoBoxingTest:test115()
4893=AutoBoxingTest:test138()
4894=AutoBoxingTest:test093()
4895=AutoBoxingTest:test029()
4896=AutoBoxingTest:getCompilerOptions()
4897=AutoBoxingTest:test006()
4898=AutoBoxingTest:test104()
4899=AutoBoxingTest:test127()
4900=AutoBoxingTest:test081()
4901=AutoBoxingTest:test017()
4902=AutoBoxingTest:test114()
4903=AutoBoxingTest:test137()
4904=AutoBoxingTest:test092()
4905=AutoBoxingTest:test005()
4906=AutoBoxingTest:test028()
4907=AutoBoxingTest:test126()
4908=AutoBoxingTest:test103()
4909=AutoBoxingTest:test149()
4910=AutoBoxingTest:test080()
4911=AutoBoxingTest:test039()
4912=AutoBoxingTest:test016()
4913=AutoBoxingTest:test113()
4914=AutoBoxingTest:test136()
4915=AutoBoxingTest:test159()
4916=AutoBoxingTest:test091()
4917=AutoBoxingTest:test004()
4918=AutoBoxingTest:test027()
4919=AutoBoxingTest:test101()
4920=AutoBoxingTest:test102()
4921=AutoBoxingTest:test125()
4922=AutoBoxingTest:test148()
4923=AutoBoxingTest:test015()
4924=AutoBoxingTest:test038()
4925=AutoBoxingTest:test135()
4926=AutoBoxingTest:test158()
4927=AutoBoxingTest:test090()
4928=AutoBoxingTest:test003()
4929=AutoBoxingTest:test026()
4930=AutoBoxingTest:test049()
4931=AutoBoxingTest:test100()
4932=AutoBoxingTest:test123()
4933=AutoBoxingTest:test124()
4934=AutoBoxingTest:test147()
4935=AutoBoxingTest:test002()
4936=AutoBoxingTest:test014()
4937=AutoBoxingTest:test037()
4938=AutoBoxingTest:test112()
4939=VoidTypeBinding:setTypeAnnotations(AnnotationBinding[], boolean)
4940=VoidTypeBinding:clone(TypeBinding)
4941=VoidTypeBinding:unannotated()
4942=VoidTypeBinding:VoidTypeBinding()
4943=B:foo(A)
4944=VoidTypeImpl:toString()
4945=VoidTypeImpl:getEnvironment()
4946=VoidTypeImpl:isAssignmentCompatible(EclipseMirrorType)
4947=VoidTypeImpl:kind()
4948=VoidTypeImpl:isSubTypeCompatible(EclipseMirrorType)
4949=VoidTypeImpl:accept(TypeVisitor)
4950=VoidTypeImpl:getTypeBinding()
4951=VoidTypeImpl:VoidTypeImpl(ITypeBinding)
4952=I:id(int, int)
4953=A:lambdas()
4954=A:run()
4955=X03b:foo()
4956=X17b:findPackageFragmentRoots(String)
4957=IPackageFragment:getElementName()
4958=IPackageFragment:getCompilationUnits(WorkingCopyOwner)
4959=IPackageFragment:getClassFiles()
4960=IPackageFragment:getClassFile(String)
4961=IPackageFragment:getCompilationUnits()
4962=IPackageFragment:getKind()
4963=IPackageFragment:getCompilationUnit(String)
4964=IPackageFragment:containsJavaResources()
4965=IPackageFragment:getNonJavaResources()
4966=IPackageFragment:isDefaultPackage()
4967=IPackageFragment:createCompilationUnit(String, String, boolean, IProgressMonitor)
4968=IPackageFragment:hasSubpackages()
4969=CreatePackageFragmentOperation:verify()
4970=CreatePackageFragmentOperation:executeOperation()
4971=CreatePackageFragmentOperation:getSchedulingRule()
4972=CreatePackageFragmentOperation:CreatePackageFragmentOperation(IPackageFragmentRoot, String, boolean)
4973=TestListener:addFailure(Test, TestFailure)
4974=TestListener:addError(Test, TestFailure)
4975=ISourceImport:getDeclarationSourceStart()
4976=ISourceImport:getDeclarationSourceEnd()
4977=ISourceImport:getModifiers()
4978=EclipseAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, EclipseAnnotationProcessorEnvironment)
4979=InnerEmulationTest_1_5:InnerEmulationTest_1_5(String)
4980=InnerEmulationTest_1_5:testClass()
4981=InnerEmulationTest_1_5:test10()
4982=InnerEmulationTest_1_5:test11()
4983=InnerEmulationTest_1_5:test9()
4984=InnerEmulationTest_1_5:test14()
4985=InnerEmulationTest_1_5:test8()
4986=InnerEmulationTest_1_5:test7()
4987=InnerEmulationTest_1_5:test12()
4988=InnerEmulationTest_1_5:test6()
4989=InnerEmulationTest_1_5:test13()
4990=InnerEmulationTest_1_5:test5()
4991=InnerEmulationTest_1_5:test4()
4992=InnerEmulationTest_1_5:test3()
4993=InnerEmulationTest_1_5:suite()
4994=InnerEmulationTest_1_5:test2()
4995=InnerEmulationTest_1_5:test1()
4996=LocalDeclaration:isArgument()
4997=LocalDeclaration:getAllAnnotationContexts(int, int, List)
4998=LocalDeclaration:checkModifiers()
4999=LocalDeclaration:getKind()
5000=LocalDeclaration:analyseCode(BlockScope, FlowContext, FlowInfo)
5001=LocalDeclaration:generateCode(BlockScope, CodeStream)
5002=LocalDeclaration:traverseWithoutInitializer(ASTVisitor, BlockScope)
5003=LocalDeclaration:isReceiver()
5004=LocalDeclaration:isRecoveredFromLoneIdentifier()
5005=LocalDeclaration:traverse(ASTVisitor, BlockScope)
5006=LocalDeclaration:getAllAnnotationContexts(int, LocalVariableBinding, List)
5007=LocalDeclaration:LocalDeclaration(char[], int, int)
5008=LocalDeclaration:resolve(BlockScope)
5009=X06:test()
5010=Test:foo()
5011=A:foo()
5012=X:foo()
5013=X:Y:foo2()
5014=NoReferenceI:foo()
5015=X05:bar()
5016=CodeSnippetRunner:CodeSnippetRunner(int, String, String)
5017=CodeSnippetRunner:writeClassOnDisk(String, byte[])
5018=CodeSnippetRunner:utf8At(int, int, byte[])
5019=CodeSnippetRunner:isRunning()
5020=CodeSnippetRunner:stop()
5021=CodeSnippetRunner:main(String[])
5022=CodeSnippetRunner:u2At(int, byte[])
5023=CodeSnippetRunner:processClasses(boolean, byte[][])
5024=CodeSnippetRunner:u1At(int, byte[])
5025=CodeSnippetRunner:createCodeSnippet(Class)
5026=CodeSnippetRunner:runCodeSnippet(Object)
5027=CodeSnippetRunner:printUsage()
5028=CodeSnippetRunner:start()
5029=CodeSnippetRunner:className(byte[])
5030=X27:foo()
5031=SyntheticAccessMethodBinding:SyntheticAccessMethodBinding(MethodBinding, boolean, ReferenceBinding)
5032=SyntheticAccessMethodBinding:isConstructorRelated()
5033=SyntheticAccessMethodBinding:SyntheticAccessMethodBinding(MethodBinding, MethodBinding)
5034=SyntheticAccessMethodBinding:SyntheticAccessMethodBinding(FieldBinding, boolean, ReferenceBinding)
5035=SyntheticAccessMethodBinding:initializeMethodAccessor(MethodBinding, boolean, ReferenceBinding)
5036=SyntheticAccessMethodBinding:initializeConstructorAccessor(MethodBinding)
5037=EmptyStatement:generateCode(BlockScope, CodeStream)
5038=EmptyStatement:complainIfUnreachable(FlowInfo, BlockScope, int, boolean)
5039=EmptyStatement:traverse(ASTVisitor, BlockScope)
5040=EmptyStatement:printStatement(int, StringBuffer)
5041=EmptyStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
5042=EmptyStatement:EmptyStatement(int, int)
5043=EmptyStatement:resolve(BlockScope)
5044=TypeReferencePattern:print(StringBuffer)
5045=TypeReferencePattern:matchesDecodedKey(SearchPattern)
5046=TypeReferencePattern:decodeIndexKey(char[])
5047=TypeReferencePattern:getBlankPattern()
5048=TypeReferencePattern:getIndexCategories()
5049=TypeReferencePattern:hasNextQuery()
5050=TypeReferencePattern:TypeReferencePattern(char[], char[], IType, int, int)
5051=TypeReferencePattern:TypeReferencePattern(char[], char[], String, int)
5052=TypeReferencePattern:resetQuery()
5053=TypeReferencePattern:TypeReferencePattern(char[], char[], IType, int)
5054=TypeReferencePattern:getIndexKey()
5055=TypeReferencePattern:TypeReferencePattern(char[], char[], int)
5056=TypeReferencePattern:TypeReferencePattern(char[], char[], String, int, char, int)
5057=TypeReferencePattern:TypeReferencePattern(char[], char[], String, char, int)
5058=TypeReferencePattern:TypeReferencePattern(int)
5059=X06:bar()
5060=InstanceOfExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
5061=InstanceOfExpression:resolveType(BlockScope)
5062=InstanceOfExpression:traverse(ASTVisitor, BlockScope)
5063=InstanceOfExpression:reportIllegalCast(Scope, TypeBinding, TypeBinding)
5064=InstanceOfExpression:printExpressionNoParenthesis(int, StringBuffer)
5065=InstanceOfExpression:generateCode(BlockScope, CodeStream, boolean)
5066=InstanceOfExpression:InstanceOfExpression(Expression, TypeReference, int)
5067=InstanceOfExpression:tagAsUnnecessaryCast(Scope, TypeBinding)
5068=QualifiedSuperReference:traverse(ASTVisitor, BlockScope)
5069=QualifiedSuperReference:resolveType(BlockScope)
5070=QualifiedSuperReference:isThis()
5071=QualifiedSuperReference:QualifiedSuperReference(TypeReference, int, int)
5072=QualifiedSuperReference:printExpression(int, StringBuffer)
5073=QualifiedSuperReference:isSuper()
5074=NameLookupTests2:testFindTypeWithUnrelatedWorkingCopy()
5075=NameLookupTests2:testFindPackageFragmentWithWorkingCopy()
5076=NameLookupTests2:testAddPackageFragment()
5077=NameLookupTests2:testAddPackageFragment2()
5078=NameLookupTests2:getNameLookup(JavaProject)
5079=NameLookupTests2:NameLookupTests2(String)
5080=NameLookupTests2:testDuplicateTypesInWorkingCopies()
5081=NameLookupTests2:testFindPackageFragment2()
5082=NameLookupTests2:testAddPackageFragmentRootAndPackageFrament()
5083=NameLookupTests2:testFindBinaryTypeWithDollarName()
5084=NameLookupTests2:testTransitionFromInvalidToValidJar()
5085=NameLookupTests2:testNameLookupFindPackageFragmentAfterCreation()
5086=NameLookupTests2:testFindDefaultPackageFragmentInNonDefaultRoot()
5087=NameLookupTests2:suite()
5088=NameLookupTests2:testFindBinaryTypeWithSameNameAsMember()
5089=ImplicitDocTypeReference:isThis()
5090=ImplicitDocTypeReference:copyDims(int)
5091=ImplicitDocTypeReference:getTypeBinding(Scope)
5092=ImplicitDocTypeReference:printExpression(int, StringBuffer)
5093=ImplicitDocTypeReference:traverse(ASTVisitor, ClassScope)
5094=ImplicitDocTypeReference:getTypeName()
5095=ImplicitDocTypeReference:ImplicitDocTypeReference(char[], int)
5096=ImplicitDocTypeReference:traverse(ASTVisitor, BlockScope)
5097=Bar:m()
5098=JavaSearchBugs8Tests:testBug400904_0007()
5099=JavaSearchBugs8Tests:testBug461025_001()
5100=JavaSearchBugs8Tests:testBug400899g28()
5101=JavaSearchBugs8Tests:testBug400899g4()
5102=JavaSearchBugs8Tests:testBug400899g16()
5103=JavaSearchBugs8Tests:test430159a()
5104=JavaSearchBugs8Tests:testBug400904_0006()
5105=JavaSearchBugs8Tests:testBug484367_0003()
5106=JavaSearchBugs8Tests:testBug400899g27()
5107=JavaSearchBugs8Tests:testBug468127_0001()
5108=JavaSearchBugs8Tests:testBug400905_0030()
5109=JavaSearchBugs8Tests:setUp()
5110=JavaSearchBugs8Tests:testBug400899g5()
5111=JavaSearchBugs8Tests:testBug400904_0001a()
5112=JavaSearchBugs8Tests:testBug400899g15()
5113=JavaSearchBugs8Tests:testBug400899g38()
5114=JavaSearchBugs8Tests:ReferenceCollector:writeLine()
5115=JavaSearchBugs8Tests:testBug400904_0005()
5116=JavaSearchBugs8Tests:testBug400899g26()
5117=JavaSearchBugs8Tests:testBug400899g6()
5118=JavaSearchBugs8Tests:testBug400899g37()
5119=JavaSearchBugs8Tests:test430159c()
5120=JavaSearchBugs8Tests:testBug400899g14()
5121=JavaSearchBugs8Tests:testBug400905_0020()
5122=JavaSearchBugs8Tests:testBug400904_0004()
5123=JavaSearchBugs8Tests:testBug400899g25()
5124=JavaSearchBugs8Tests:testBug400904_0015()
5125=JavaSearchBugs8Tests:testBug432541()
5126=JavaSearchBugs8Tests:testBug400899g7()
5127=JavaSearchBugs8Tests:test473343_0001()
5128=JavaSearchBugs8Tests:TestCollector:acceptSearchMatch(SearchMatch)
5129=JavaSearchBugs8Tests:testBug400899g13()
5130=JavaSearchBugs8Tests:testBug400899g36()
5131=JavaSearchBugs8Tests:test430159b()
5132=JavaSearchBugs8Tests:testBug400905_0021()
5133=JavaSearchBugs8Tests:getWorkingCopy(String, String)
5134=JavaSearchBugs8Tests:testBug400905_0007()
5135=JavaSearchBugs8Tests:testBug400905_0013a()
5136=JavaSearchBugs8Tests:testBug400899g24()
5137=JavaSearchBugs8Tests:test429934()
5138=JavaSearchBugs8Tests:testBug429012_0008()
5139=JavaSearchBugs8Tests:testBug400905_0019()
5140=JavaSearchBugs8Tests:testBug400899g12()
5141=JavaSearchBugs8Tests:testBug427677()
5142=JavaSearchBugs8Tests:testBug400899g35()
5143=JavaSearchBugs8Tests:testBug400905_0008()
5144=JavaSearchBugs8Tests:testBug400899g23()
5145=JavaSearchBugs8Tests:testBug429012_0009()
5146=JavaSearchBugs8Tests:testBug400899g34()
5147=JavaSearchBugs8Tests:test430159d()
5148=JavaSearchBugs8Tests:testBug400899g1()
5149=JavaSearchBugs8Tests:testBug400902()
5150=JavaSearchBugs8Tests:testBug431716()
5151=JavaSearchBugs8Tests:test429738a()
5152=JavaSearchBugs8Tests:testBug400905_0013c()
5153=JavaSearchBugs8Tests:testBug400904_0009()
5154=JavaSearchBugs8Tests:testBug400905_0009()
5155=JavaSearchBugs8Tests:testBug400899g22()
5156=JavaSearchBugs8Tests:testBug429012_0018()
5157=JavaSearchBugs8Tests:tearDownSuite()
5158=JavaSearchBugs8Tests:testBug400899g33()
5159=JavaSearchBugs8Tests:testBug429012_0006()
5160=JavaSearchBugs8Tests:testBug400899g10()
5161=JavaSearchBugs8Tests:testBug400899g2()
5162=JavaSearchBugs8Tests:testBug400904_0008()
5163=JavaSearchBugs8Tests:testBug400905_0013b()
5164=JavaSearchBugs8Tests:testBug400899g32()
5165=JavaSearchBugs8Tests:testBug429012_0007()
5166=JavaSearchBugs8Tests:testBug400899g3()
5167=JavaSearchBugs8Tests:TypeReferenceCollector:writeLine()
5168=JavaSearchBugs8Tests:testBug400905_0026()
5169=JavaSearchBugs8Tests:testBug400905_0013e()
5170=JavaSearchBugs8Tests:testBug429012_0016()
5171=JavaSearchBugs8Tests:testBug400899g20()
5172=JavaSearchBugs8Tests:testBug424119_002()
5173=JavaSearchBugs8Tests:testBug400905_0014()
5174=JavaSearchBugs8Tests:testBug400904_0010()
5175=JavaSearchBugs8Tests:testBug400905_0015()
5176=JavaSearchBugs8Tests:testBug429012_0004()
5177=JavaSearchBugs8Tests:testBug400899g31()
5178=JavaSearchBugs8Tests:testBug400905_0003()
5179=JavaSearchBugs8Tests:testBug400905_0004()
5180=JavaSearchBugs8Tests:testBug400905_0027()
5181=JavaSearchBugs8Tests:testBug400905_0013d()
5182=JavaSearchBugs8Tests:testBug429012_0017()
5183=JavaSearchBugs8Tests:testBug424119_001()
5184=JavaSearchBugs8Tests:testBug400905_0016()
5185=JavaSearchBugs8Tests:testBug400899g30()
5186=JavaSearchBugs8Tests:testBug429012_0005()
5187=JavaSearchBugs8Tests:testBug400905_0028()
5188=JavaSearchBugs8Tests:testBug400905_0005()
5189=JavaSearchBugs8Tests:suite()
5190=JavaSearchBugs8Tests:testBug429012_0014()
5191=JavaSearchBugs8Tests:testBug400905_0017()
5192=JavaSearchBugs8Tests:testBug429012_0002()
5193=JavaSearchBugs8Tests:testBug435480_0002()
5194=JavaSearchBugs8Tests:testBug400905_0006()
5195=JavaSearchBugs8Tests:testBug400905_0029()
5196=JavaSearchBugs8Tests:testBug429012_0015()
5197=JavaSearchBugs8Tests:testBug400905_0013f()
5198=JavaSearchBugs8Tests:testBug424119_003()
5199=JavaSearchBugs8Tests:getJavaSearchScope()
5200=JavaSearchBugs8Tests:testBug400905_0018()
5201=JavaSearchBugs8Tests:testBug454411_001()
5202=JavaSearchBugs8Tests:testBug435480_0001()
5203=JavaSearchBugs8Tests:testBug429012_0003()
5204=JavaSearchBugs8Tests:test429738()
5205=JavaSearchBugs8Tests:testBug454401()
5206=JavaSearchBugs8Tests:JavaSearchBugs8Tests(String)
5207=JavaSearchBugs8Tests:testBug400904_0003()
5208=JavaSearchBugs8Tests:testBug458614_001()
5209=JavaSearchBugs8Tests:testBug427537a()
5210=JavaSearchBugs8Tests:testBug429012_0012()
5211=JavaSearchBugs8Tests:setUpSuite()
5212=JavaSearchBugs8Tests:testBug400905_0010()
5213=JavaSearchBugs8Tests:testBug400904_0014()
5214=JavaSearchBugs8Tests:testBug485805_001()
5215=JavaSearchBugs8Tests:testBug400899g8()
5216=JavaSearchBugs8Tests:testBug400904_0002()
5217=JavaSearchBugs8Tests:testBug400905_0022()
5218=JavaSearchBugs8Tests:testBug429012_0013()
5219=JavaSearchBugs8Tests:testBug458614_002()
5220=JavaSearchBugs8Tests:testBug400904_0013()
5221=JavaSearchBugs8Tests:testBug400905_0011()
5222=JavaSearchBugs8Tests:testBug429012_0001()
5223=JavaSearchBugs8Tests:testBug400899g9()
5224=JavaSearchBugs8Tests:testBug400905_0023()
5225=JavaSearchBugs8Tests:testBug400904_0001()
5226=JavaSearchBugs8Tests:testBug484367_0002()
5227=JavaSearchBugs8Tests:testBug429012_0010()
5228=JavaSearchBugs8Tests:testBug400905_0012()
5229=JavaSearchBugs8Tests:testBug400904_0012()
5230=JavaSearchBugs8Tests:testBug429836()
5231=JavaSearchBugs8Tests:testBug400899g18()
5232=JavaSearchBugs8Tests:testBug400905_0024()
5233=JavaSearchBugs8Tests:testBug400905_0001()
5234=JavaSearchBugs8Tests:getJavaSearchScopeBugs(String, boolean)
5235=JavaSearchBugs8Tests:testBug484367_0001()
5236=JavaSearchBugs8Tests:testBug429012_0011()
5237=JavaSearchBugs8Tests:testBug400899g29()
5238=JavaSearchBugs8Tests:testBug400904_0011()
5239=JavaSearchBugs8Tests:testBug400905_0013()
5240=JavaSearchBugs8Tests:testBug400899g17()
5241=JavaSearchBugs8Tests:testBug400905_0007a()
5242=JavaSearchBugs8Tests:testBug400905_0002()
5243=JavaSearchBugs8Tests:testBug400905_0025()
5244=E:EInner:inner(int)
5245=E:foo1(int)
5246=E:foo1()
5247=SourceTypeConverter:SourceTypeConverter(int, ProblemReporter)
5248=SourceTypeConverter:convert(IJavaElement, FieldDeclaration, CompilationResult)
5249=SourceTypeConverter:convert(SourceType, CompilationResult)
5250=SourceTypeConverter:buildCompilationUnit(ISourceType[], int, ProblemReporter, CompilationResult)
5251=SourceTypeConverter:convert(SourceMethod, SourceMethodElementInfo, CompilationResult)
5252=SourceTypeConverter:convert(InitializerElementInfo, CompilationResult)
5253=SourceTypeConverter:getSource()
5254=SourceTypeConverter:convert(SourceField, TypeDeclaration, CompilationResult)
5255=SourceTypeConverter:parseMemberValue(char[])
5256=SourceTypeConverter:convert(ISourceType[], CompilationResult)
5257=SourceTypeConverter:convertAnnotations(IAnnotatable)
5258=SelectionOnSingleNameReference:resolveType(BlockScope)
5259=SelectionOnSingleNameReference:SelectionOnSingleNameReference(char[], long)
5260=SelectionOnSingleNameReference:printExpression(int, StringBuffer)
5261=HashtableOfObjectToIntArray:HashtableOfObjectToIntArray()
5262=HashtableOfObjectToIntArray:get(Object)
5263=HashtableOfObjectToIntArray:HashtableOfObjectToIntArray(int)
5264=HashtableOfObjectToIntArray:toString()
5265=HashtableOfObjectToIntArray:containsKey(Object)
5266=HashtableOfObjectToIntArray:removeKey(Object)
5267=HashtableOfObjectToIntArray:clone()
5268=HashtableOfObjectToIntArray:keysToArray(Object[])
5269=HashtableOfObjectToIntArray:rehash()
5270=HashtableOfObjectToIntArray:put(Object, int[])
5271=HashtableOfObjectToIntArray:size()
5272=A:foo(int, int, int)
5273=AQ:k()
5274=AQE:k()
5275=FormaterBug:main(String[])
5276=SourceMethod:hashCode()
5277=SourceMethod:getElementType()
5278=SourceMethod:getExceptionTypes()
5279=SourceMethod:isResolved()
5280=SourceMethod:getParameterTypes()
5281=SourceMethod:getReturnType()
5282=SourceMethod:toStringName(StringBuffer, int)
5283=SourceMethod:getKey()
5284=SourceMethod:getHandleMemento(StringBuffer)
5285=SourceMethod:toStringName(StringBuffer)
5286=SourceMethod:getSignature()
5287=SourceMethod:getParameters()
5288=SourceMethod:closing(Object)
5289=SourceMethod:isLambdaMethod()
5290=SourceMethod:SourceMethod(JavaElement, String, String[])
5291=SourceMethod:isConstructor()
5292=SourceMethod:readableName()
5293=SourceMethod:getDefaultValue()
5294=SourceMethod:getPrimaryElement(boolean)
5295=SourceMethod:getHandleMementoDelimiter()
5296=SourceMethod:isMainMethod()
5297=SourceMethod:resolved(Binding)
5298=SourceMethod:getRawParameterNames()
5299=SourceMethod:getNumberOfParameters()
5300=SourceMethod:getTypeParameter(String)
5301=SourceMethod:isSimilar(IMethod)
5302=SourceMethod:equals(Object)
5303=SourceMethod:getParameterNames()
5304=SourceMethod:getTypeParameters()
5305=SourceMethod:getTypeParameterSignatures()
5306=SourceMethod:toStringInfo(int, StringBuffer, Object, boolean)
5307=PerfTests:getSourcePath()
5308=PerfTests:testBuilding()
5309=PerfTests:setUp()
5310=PerfTests:PerfTests(String)
5311=PerfTests:getProjectName()
5312=PerfTests:assertNoUnexpectedProblems()
5313=PerfTests:suite()
5314=AbortType:AbortType(CompilationResult, CategorizedProblem)
5315=X04:foo()
5316=NodeInfoStore:setPlaceholderData(ASTNode, PlaceholderData)
5317=NodeInfoStore:markAsStringPlaceholder(ASTNode, String)
5318=NodeInfoStore:NodeInfoStore(AST)
5319=NodeInfoStore:StringPlaceholderData:toString()
5320=NodeInfoStore:CopyPlaceholderData:toString()
5321=NodeInfoStore:isCollapsed(ASTNode)
5322=NodeInfoStore:newPlaceholderNode(int)
5323=NodeInfoStore:clear()
5324=NodeInfoStore:getPlaceholderData(ASTNode)
5325=NodeInfoStore:createCollapsePlaceholder()
5326=NodeInfoStore:markAsCopyTarget(ASTNode, CopySourceInfo)
5327=I2:boo(M6.M7.M8)
5328=Negative3:foo(M2.M3.M4)
5329=Test:foo()
5330=ClassInstanceCreation:typeArguments()
5331=ClassInstanceCreation:internalSetName(Name)
5332=ClassInstanceCreation:internalStructuralPropertiesForType(int)
5333=ClassInstanceCreation:arguments()
5334=ClassInstanceCreation:getAnonymousClassDeclaration()
5335=ClassInstanceCreation:ClassInstanceCreation(AST)
5336=ClassInstanceCreation:setExpression(Expression)
5337=ClassInstanceCreation:setAnonymousClassDeclaration(AnonymousClassDeclaration)
5338=ClassInstanceCreation:clone0(AST)
5339=ClassInstanceCreation:internalGetChildListProperty(ChildListPropertyDescriptor)
5340=ClassInstanceCreation:resolveConstructorBinding()
5341=ClassInstanceCreation:getType()
5342=ClassInstanceCreation:getExpression()
5343=ClassInstanceCreation:subtreeMatch0(ASTMatcher, Object)
5344=ClassInstanceCreation:propertyDescriptors(int)
5345=ClassInstanceCreation:internalGetName()
5346=ClassInstanceCreation:isResolvedTypeInferredFromExpectedType()
5347=ClassInstanceCreation:getName()
5348=ClassInstanceCreation:memSize()
5349=ClassInstanceCreation:setName(Name)
5350=ClassInstanceCreation:getNodeType0()
5351=ClassInstanceCreation:treeSize()
5352=ClassInstanceCreation:setType(Type)
5353=ClassInstanceCreation:accept0(ASTVisitor)
5354=ClassInstanceCreation:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
5355=B:main(String[])
5356=ListenerAnnotationProcessorFactory:ListenerAnnotationProcessorFactory()
5357=ListenerAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
5358=A:A(E)
5359=A:toString()
5360=A:B:toString()
5361=A:B:B(T)
5362=X:main(String[])
5363=Test:main(String[])
5364=StackMapTableAttribute:StackMapTableAttribute(byte[], IConstantPool, int)
5365=StackMapTableAttribute:getBytes()
5366=StackMapTableAttribute:getStackMapFrame()
5367=StackMapTableAttribute:getNumberOfEntries()
5368=UserLibraryClasspathContainer:UserLibraryClasspathContainer(String)
5369=UserLibraryClasspathContainer:getUserLibrary()
5370=UserLibraryClasspathContainer:verbose_no_user_library_found(String)
5371=UserLibraryClasspathContainer:getClasspathEntries()
5372=UserLibraryClasspathContainer:getDescription()
5373=UserLibraryClasspathContainer:getPath()
5374=UserLibraryClasspathContainer:getKind()
5375=MethodBinding:MethodBinding()
5376=MethodBinding:MethodBinding(MethodBinding, ReferenceBinding)
5377=MethodBinding:constantPoolName()
5378=MethodBinding:sourceStart()
5379=MethodBinding:isAbstract()
5380=MethodBinding:sourceEnd()
5381=MethodBinding:canBeSeenBy(TypeBinding, InvocationSite, Scope)
5382=MethodBinding:isOverriding()
5383=MethodBinding:readableName()
5384=MethodBinding:sourceMethod()
5385=MethodBinding:areParametersEqual(MethodBinding)
5386=MethodBinding:getAccessFlags()
5387=MethodBinding:isDeprecated()
5388=MethodBinding:isBridge()
5389=MethodBinding:isStrictfp()
5390=MethodBinding:isPrivate()
5391=MethodBinding:isPublic()
5392=MethodBinding:toString()
5393=MethodBinding:isPrivateUsed()
5394=MethodBinding:original()
5395=MethodBinding:bindingType()
5396=MethodBinding:isMain()
5397=MethodBinding:isStatic()
5398=MethodBinding:isConstructorRelated()
5399=MethodBinding:MethodBinding(int, TypeBinding[], ReferenceBinding[], ReferenceBinding)
5400=MethodBinding:isImplementing()
5401=MethodBinding:isSynthetic()
5402=MethodBinding:hasSubstitutedParameters()
5403=MethodBinding:MethodBinding(int, char[], TypeBinding, TypeBinding[], ReferenceBinding[], ReferenceBinding)
5404=MethodBinding:hasSubstitutedReturnType()
5405=MethodBinding:isSynchronized()
5406=MethodBinding:getTypeVariable(char[])
5407=MethodBinding:isNative()
5408=MethodBinding:isConstructor()
5409=MethodBinding:isProtected()
5410=MethodBinding:isRequiredToClearPrivateModifier()
5411=MethodBinding:signature()
5412=MethodBinding:areParameterErasuresEqual(MethodBinding)
5413=MethodBinding:isViewedAsDeprecated()
5414=MethodBinding:isDefaultAbstract()
5415=MethodBinding:genericSignature()
5416=MethodBinding:tagForClearingPrivateModifier()
5417=MethodBinding:constantPoolDeclaringClass()
5418=MethodBinding:setSelector(char[])
5419=MethodBinding:typeVariables()
5420=MethodBinding:shortReadableName()
5421=MethodBinding:isFinal()
5422=MethodBinding:canBeSeenBy(InvocationSite, Scope)
5423=MethodBinding:isVararg()
5424=MethodBinding:isDefault()
5425=NullReferenceTestAsserts:testBug127575j()
5426=NullReferenceTestAsserts:testBug373953()
5427=NullReferenceTestAsserts:testBug382069f()
5428=NullReferenceTestAsserts:testBug127575k()
5429=NullReferenceTestAsserts:suite()
5430=NullReferenceTestAsserts:testBug382069e()
5431=NullReferenceTestAsserts:NullReferenceTestAsserts(String)
5432=NullReferenceTestAsserts:testBug127575l()
5433=NullReferenceTestAsserts:testBug382069h()
5434=NullReferenceTestAsserts:testBug127575m()
5435=NullReferenceTestAsserts:testBug382069g()
5436=NullReferenceTestAsserts:testBug382069b()
5437=NullReferenceTestAsserts:testBug472618()
5438=NullReferenceTestAsserts:testBug127575n()
5439=NullReferenceTestAsserts:testBug382069a()
5440=NullReferenceTestAsserts:testBug127575o()
5441=NullReferenceTestAsserts:testBug382069d()
5442=NullReferenceTestAsserts:testBug382069c()
5443=NullReferenceTestAsserts:testBug127575a()
5444=NullReferenceTestAsserts:testBug127575b()
5445=NullReferenceTestAsserts:testBug127575c()
5446=NullReferenceTestAsserts:testBug127575d()
5447=NullReferenceTestAsserts:testBug401159()
5448=NullReferenceTestAsserts:getCompilerOptions()
5449=NullReferenceTestAsserts:testBug127575e()
5450=NullReferenceTestAsserts:testClass()
5451=NullReferenceTestAsserts:testBug127575f()
5452=NullReferenceTestAsserts:testBug127575g()
5453=NullReferenceTestAsserts:testBug127575e_2()
5454=NullReferenceTestAsserts:setUp()
5455=NullReferenceTestAsserts:testBug127575h()
5456=NullReferenceTestAsserts:testBug127575e_1()
5457=NullReferenceTestAsserts:testBug127575i()
5458=TestRunListener:testRunEnded(long)
5459=TestRunListener:testRunStarted(String, int)
5460=TestRunListener:testRunStopped(long)
5461=TestRunListener:testFailed(int, String, String)
5462=TestRunListener:testStarted(String)
5463=TestRunListener:testEnded(String)
5464=LoadingTestCollector:isTestClass(String)
5465=LoadingTestCollector:LoadingTestCollector()
5466=LoadingTestCollector:classFromFile(String)
5467=LoadingTestCollector:hasSuiteMethod(Class)
5468=LoadingTestCollector:isTestClass(Class)
5469=LoadingTestCollector:hasPublicConstructor(Class)
5470=ManyToMany:clear()
5471=ManyToMany:checkIntegrity()
5472=ManyToMany:getKeySet()
5473=ManyToMany:getValueSet()
5474=ManyToMany:valueHasOtherKeys(T2, T1)
5475=ManyToMany:isDirty()
5476=ManyToMany:keyHasOtherValues(T1, T2)
5477=ManyToMany:clearDirtyBit()
5478=ManyToMany:remove(T1, T2)
5479=ManyToMany:removeKey(T1)
5480=ManyToMany:getValues(T1)
5481=ManyToMany:removeValue(T2)
5482=ManyToMany:getKeys(T2)
5483=ManyToMany:containsKey(T1)
5484=ManyToMany:put(T1, T2)
5485=ManyToMany:containsValue(T2)
5486=ManyToMany:containsKeyValuePair(T1, T2)
5487=EclipseFileObject:hashCode()
5488=EclipseFileObject:getAccessLevel()
5489=EclipseFileObject:equals(Object)
5490=EclipseFileObject:openInputStream()
5491=EclipseFileObject:ensureParentDirectoriesExist()
5492=EclipseFileObject:getName()
5493=EclipseFileObject:toString()
5494=EclipseFileObject:getCharContent(boolean)
5495=EclipseFileObject:getLastModified()
5496=EclipseFileObject:openOutputStream()
5497=EclipseFileObject:openReader(boolean)
5498=EclipseFileObject:EclipseFileObject(String, URI, Kind, Charset)
5499=EclipseFileObject:getNestingKind()
5500=EclipseFileObject:openWriter()
5501=EclipseFileObject:delete()
5502=MirroredTypeException:MirroredTypeException(TypeMirror)
5503=MirroredTypeException:getQualifiedName()
5504=MirroredTypeException:getTypeMirror()
5505=RawTypeBinding:debugName()
5506=RawTypeBinding:isRawType()
5507=RawTypeBinding:initializeArguments()
5508=RawTypeBinding:substitute(TypeBinding)
5509=RawTypeBinding:readableName()
5510=RawTypeBinding:shortReadableName()
5511=RawTypeBinding:RawTypeBinding(ReferenceBinding, ReferenceBinding, LookupEnvironment)
5512=RawTypeBinding:genericTypeSignature()
5513=RawTypeBinding:createParameterizedMethod(MethodBinding)
5514=RawTypeBinding:isParameterizedType()
5515=RawTypeBinding:isEquivalentTo(TypeBinding)
5516=JavaVersionTests:getProjectName()
5517=JavaVersionTests:JavaVersionTests(String)
5518=JavaVersionTests:getSourcePath()
5519=JavaVersionTests:setUp()
5520=JavaVersionTests:testMirror()
5521=JavaVersionTests:suite()
5522=A:Example(boolean)
5523=X24:foo()
5524=SideCarJ9VMLauncher:buildBootClassPath()
5525=SideCarJ9VMLauncher:getCommandLine()
5526=ClasspathSourceDirectory:findClass(String, String, String)
5527=ClasspathSourceDirectory:debugPathString()
5528=ClasspathSourceDirectory:reset()
5529=ClasspathSourceDirectory:cleanup()
5530=ClasspathSourceDirectory:toString()
5531=ClasspathSourceDirectory:getProjectRelativePath()
5532=ClasspathSourceDirectory:equals(Object)
5533=ClasspathSourceDirectory:hashCode()
5534=ClasspathSourceDirectory:ClasspathSourceDirectory(IContainer, char[][], char[][])
5535=ClasspathSourceDirectory:directoryTable(String)
5536=ClasspathSourceDirectory:isPackage(String)
5537=CompletionMethodDeclaration10:foo()
5538=Format:temp()
5539=ResolveClass5:foo(X)
5540=TypeAnnotationCodeStream:addAnnotationContext(TypeReference, int, int, ArrayAllocationExpression)
5541=TypeAnnotationCodeStream:newArray(TypeReference, ArrayAllocationExpression, ArrayBinding)
5542=TypeAnnotationCodeStream:instance_of(TypeReference, TypeBinding)
5543=TypeAnnotationCodeStream:init(ClassFile)
5544=TypeAnnotationCodeStream:new_(TypeReference, TypeBinding)
5545=TypeAnnotationCodeStream:TypeAnnotationCodeStream(ClassFile)
5546=TypeAnnotationCodeStream:addAnnotationContext(TypeReference, int, int)
5547=TypeAnnotationCodeStream:invoke(byte, MethodBinding, TypeBinding, TypeReference[])
5548=TypeAnnotationCodeStream:multianewarray(TypeReference, TypeBinding, int, ArrayAllocationExpression)
5549=TypeAnnotationCodeStream:addAnnotationContext(TypeReference, int, int, int)
5550=TypeAnnotationCodeStream:reset(ClassFile)
5551=TypeAnnotationCodeStream:invokeDynamic(int, int, int, char[], char[], boolean, TypeReference, TypeReference[])
5552=TypeAnnotationCodeStream:checkcast(TypeReference, TypeBinding, int)
5553=InnerClass15Test:test008()
5554=InnerClass15Test:test007()
5555=InnerClass15Test:InnerClass15Test(String)
5556=InnerClass15Test:getCompilerOptions()
5557=InnerClass15Test:test006()
5558=InnerClass15Test:suite()
5559=InnerClass15Test:test005()
5560=InnerClass15Test:test0014()
5561=InnerClass15Test:test009()
5562=InnerClass15Test:test0011()
5563=InnerClass15Test:test0010()
5564=InnerClass15Test:test0013()
5565=InnerClass15Test:test0012()
5566=InnerClass15Test:test004()
5567=InnerClass15Test:testClass()
5568=InnerClass15Test:test003()
5569=InnerClass15Test:test002()
5570=InnerClass15Test:test001()
5571=A:foo()
5572=ASTRewritePropertyTest:suite()
5573=ASTRewritePropertyTest:testProperties()
5574=ASTRewritePropertyTest:ASTRewritePropertyTest(String)
5575=ASTRewritePropertyTest:ASTRewritePropertyTest(String, int)
5576=Test:foo(String)
5577=X:foo()
5578=X:main(String[])
5579=X01:foo(int, int)
5580=EnclosingMethodAttribute:getMethodName()
5581=EnclosingMethodAttribute:getMethodNameIndex()
5582=EnclosingMethodAttribute:EnclosingMethodAttribute(byte[], IConstantPool, int)
5583=EnclosingMethodAttribute:getEnclosingClass()
5584=EnclosingMethodAttribute:getMethodDescriptorIndex()
5585=EnclosingMethodAttribute:getMethodDescriptor()
5586=EnclosingMethodAttribute:getEnclosingClassIndex()
5587=EnclosingMethodAttribute:getMethodNameAndTypeIndex()
5588=FM47209:FM47209(String)
5589=FM47209:m47209(int)
5590=BinaryLambdaExpression:getPrimaryElement(boolean)
5591=BinaryLambdaExpression:BinaryLambdaExpression(JavaElement, String, int, int, int)
5592=BinaryLambdaExpression:isBinary()
5593=BinaryLambdaExpression:BinaryLambdaExpression(JavaElement, org.eclipse.jdt.internal.compiler.ast.LambdaExpression)
5594=BinaryLambdaExpression:BinaryLambdaExpression(JavaElement, String, int, int, int, LambdaMethod)
5595=X:foo()
5596=X:Inner:foo()
5597=TestingMyClass:test_method()
5598=EclipseFileObject:hashCode()
5599=EclipseFileObject:getAccessLevel()
5600=EclipseFileObject:equals(Object)
5601=EclipseFileObject:openInputStream()
5602=EclipseFileObject:ensureParentDirectoriesExist()
5603=EclipseFileObject:getName()
5604=EclipseFileObject:toString()
5605=EclipseFileObject:getCharContent(boolean)
5606=EclipseFileObject:getLastModified()
5607=EclipseFileObject:openOutputStream()
5608=EclipseFileObject:openReader(boolean)
5609=EclipseFileObject:EclipseFileObject(String, URI, Kind, Charset)
5610=EclipseFileObject:getNestingKind()
5611=EclipseFileObject:openWriter()
5612=EclipseFileObject:delete()
5613=A:foo(boolean)
5614=IGlobalVariable:getTypeName()
5615=IGlobalVariable:getName()
5616=IGlobalVariable:getInitializer()
5617=IGenericType:getModifiers()
5618=IGenericType:isBinaryType()
5619=Example:Example(boolean)
5620=X:foo()
5621=X:X()
5622=X03_spaces:foo(String)
5623=CommentRecorderParser:consumeEnumHeader()
5624=CommentRecorderParser:consumeEnterAnonymousClassBody(boolean)
5625=CommentRecorderParser:consumeClassHeader()
5626=CommentRecorderParser:flushCommentsDefinedPriorTo(int)
5627=CommentRecorderParser:pushOnCommentsStack(int, int)
5628=CommentRecorderParser:getCommentsPositions()
5629=CommentRecorderParser:CommentRecorderParser(ProblemReporter, boolean)
5630=CommentRecorderParser:initialize()
5631=CommentRecorderParser:initialize(boolean)
5632=CommentRecorderParser:consumeInterfaceHeader()
5633=CommentRecorderParser:consumeAnnotationTypeDeclarationHeader()
5634=CommentRecorderParser:consumeEmptyTypeDeclaration()
5635=CommentRecorderParser:initializeScanner()
5636=CommentRecorderParser:resetModifiers()
5637=CommentRecorderParser:endParse(int)
5638=CommentRecorderParser:checkComment()
5639=X:bar(int)
5640=JavadocMethodCompletionModelTest:test005()
5641=JavadocMethodCompletionModelTest:test114()
5642=JavadocMethodCompletionModelTest:test137()
5643=JavadocMethodCompletionModelTest:test081()
5644=JavadocMethodCompletionModelTest:test016()
5645=JavadocMethodCompletionModelTest:test039()
5646=JavadocMethodCompletionModelTest:test103()
5647=JavadocMethodCompletionModelTest:test149()
5648=JavadocMethodCompletionModelTest:test006()
5649=JavadocMethodCompletionModelTest:test115()
5650=JavadocMethodCompletionModelTest:test138()
5651=JavadocMethodCompletionModelTest:test082()
5652=JavadocMethodCompletionModelTest:test104()
5653=JavadocMethodCompletionModelTest:test070()
5654=JavadocMethodCompletionModelTest:test007()
5655=JavadocMethodCompletionModelTest:test083()
5656=JavadocMethodCompletionModelTest:test139()
5657=JavadocMethodCompletionModelTest:test116()
5658=JavadocMethodCompletionModelTest:test060()
5659=JavadocMethodCompletionModelTest:test105()
5660=JavadocMethodCompletionModelTest:test071()
5661=JavadocMethodCompletionModelTest:test061()
5662=JavadocMethodCompletionModelTest:test084()
5663=JavadocMethodCompletionModelTest:test117()
5664=JavadocMethodCompletionModelTest:test106()
5665=JavadocMethodCompletionModelTest:test072()
5666=JavadocMethodCompletionModelTest:test047()
5667=JavadocMethodCompletionModelTest:test110()
5668=JavadocMethodCompletionModelTest:test156()
5669=JavadocMethodCompletionModelTest:test133()
5670=JavadocMethodCompletionModelTest:test001()
5671=JavadocMethodCompletionModelTest:test058()
5672=JavadocMethodCompletionModelTest:suite()
5673=JavadocMethodCompletionModelTest:test122()
5674=JavadocMethodCompletionModelTest:test145()
5675=JavadocMethodCompletionModelTest:test012()
5676=JavadocMethodCompletionModelTest:test035()
5677=JavadocMethodCompletionModelTest:test048()
5678=JavadocMethodCompletionModelTest:test111()
5679=JavadocMethodCompletionModelTest:test134()
5680=JavadocMethodCompletionModelTest:test157()
5681=JavadocMethodCompletionModelTest:test002()
5682=JavadocMethodCompletionModelTest:test036()
5683=JavadocMethodCompletionModelTest:test059()
5684=JavadocMethodCompletionModelTest:test123()
5685=JavadocMethodCompletionModelTest:test100()
5686=JavadocMethodCompletionModelTest:test146()
5687=JavadocMethodCompletionModelTest:test013()
5688=JavadocMethodCompletionModelTest:test003()
5689=JavadocMethodCompletionModelTest:test049()
5690=JavadocMethodCompletionModelTest:test112()
5691=JavadocMethodCompletionModelTest:test135()
5692=JavadocMethodCompletionModelTest:test014()
5693=JavadocMethodCompletionModelTest:test037()
5694=JavadocMethodCompletionModelTest:test101()
5695=JavadocMethodCompletionModelTest:test147()
5696=JavadocMethodCompletionModelTest:test090()
5697=JavadocMethodCompletionModelTest:setUp()
5698=JavadocMethodCompletionModelTest:test004()
5699=JavadocMethodCompletionModelTest:test113()
5700=JavadocMethodCompletionModelTest:test136()
5701=JavadocMethodCompletionModelTest:test080()
5702=JavadocMethodCompletionModelTest:test038()
5703=JavadocMethodCompletionModelTest:test015()
5704=JavadocMethodCompletionModelTest:test102()
5705=JavadocMethodCompletionModelTest:test148()
5706=JavadocMethodCompletionModelTest:test152()
5707=JavadocMethodCompletionModelTest:test089()
5708=JavadocMethodCompletionModelTest:test043()
5709=JavadocMethodCompletionModelTest:test020()
5710=JavadocMethodCompletionModelTest:test164()
5711=JavadocMethodCompletionModelTest:test141()
5712=JavadocMethodCompletionModelTest:JavadocMethodCompletionModelTest(String)
5713=JavadocMethodCompletionModelTest:test054()
5714=JavadocMethodCompletionModelTest:test077()
5715=JavadocMethodCompletionModelTest:test031()
5716=JavadocMethodCompletionModelTest:test153()
5717=JavadocMethodCompletionModelTest:test130()
5718=JavadocMethodCompletionModelTest:test021()
5719=JavadocMethodCompletionModelTest:test044()
5720=JavadocMethodCompletionModelTest:test142()
5721=JavadocMethodCompletionModelTest:test055()
5722=JavadocMethodCompletionModelTest:test078()
5723=JavadocMethodCompletionModelTest:test032()
5724=JavadocMethodCompletionModelTest:test131()
5725=JavadocMethodCompletionModelTest:test154()
5726=JavadocMethodCompletionModelTest:test045()
5727=JavadocMethodCompletionModelTest:test022()
5728=JavadocMethodCompletionModelTest:test120()
5729=JavadocMethodCompletionModelTest:test143()
5730=JavadocMethodCompletionModelTest:test056()
5731=JavadocMethodCompletionModelTest:test079()
5732=JavadocMethodCompletionModelTest:test010()
5733=JavadocMethodCompletionModelTest:test033()
5734=JavadocMethodCompletionModelTest:test132()
5735=JavadocMethodCompletionModelTest:test155()
5736=JavadocMethodCompletionModelTest:test023()
5737=JavadocMethodCompletionModelTest:test046()
5738=JavadocMethodCompletionModelTest:test121()
5739=JavadocMethodCompletionModelTest:test144()
5740=JavadocMethodCompletionModelTest:test057()
5741=JavadocMethodCompletionModelTest:test034()
5742=JavadocMethodCompletionModelTest:test011()
5743=JavadocMethodCompletionModelTest:test118()
5744=JavadocMethodCompletionModelTest:test085()
5745=JavadocMethodCompletionModelTest:_test062()
5746=JavadocMethodCompletionModelTest:test160()
5747=JavadocMethodCompletionModelTest:test050()
5748=JavadocMethodCompletionModelTest:test073()
5749=JavadocMethodCompletionModelTest:test107()
5750=JavadocMethodCompletionModelTest:test086()
5751=JavadocMethodCompletionModelTest:test119()
5752=JavadocMethodCompletionModelTest:test040()
5753=JavadocMethodCompletionModelTest:test161()
5754=JavadocMethodCompletionModelTest:test051()
5755=JavadocMethodCompletionModelTest:test108()
5756=JavadocMethodCompletionModelTest:test074()
5757=JavadocMethodCompletionModelTest:test150()
5758=JavadocMethodCompletionModelTest:test087()
5759=JavadocMethodCompletionModelTest:test041()
5760=JavadocMethodCompletionModelTest:test162()
5761=JavadocMethodCompletionModelTest:test052()
5762=JavadocMethodCompletionModelTest:test075()
5763=JavadocMethodCompletionModelTest:test109()
5764=JavadocMethodCompletionModelTest:test151()
5765=JavadocMethodCompletionModelTest:test088()
5766=JavadocMethodCompletionModelTest:test042()
5767=JavadocMethodCompletionModelTest:test163()
5768=JavadocMethodCompletionModelTest:test140()
5769=JavadocMethodCompletionModelTest:test053()
5770=JavadocMethodCompletionModelTest:test076()
5771=JavadocMethodCompletionModelTest:test030()
5772=ClassFile:codeComplete(int, CompletionRequestor)
5773=ClassFile:codeComplete(int, CompletionRequestor, WorkingCopyOwner)
5774=ClassFile:getBuffer()
5775=ClassFile:openBuffer(IProgressMonitor, Object)
5776=ClassFile:getBinaryTypeInfo(IFile)
5777=ClassFile:getTopLevelTypeName()
5778=ClassFile:getPath()
5779=ClassFile:getElementName()
5780=ClassFile:getWorkingCopy(IProgressMonitor, org.eclipse.jdt.core.IBufferFactory)
5781=ClassFile:existsUsingJarTypeCache()
5782=ClassFile:hasBuffer()
5783=ClassFile:getJarBinaryTypeInfo(PackageFragment, boolean)
5784=ClassFile:codeSelect(int, int)
5785=ClassFile:validateClassFile()
5786=ClassFile:getElementAt(int)
5787=ClassFile:validateExistence(IResource)
5788=ClassFile:codeSelect(int, int, WorkingCopyOwner)
5789=ClassFile:getWorkingCopy(WorkingCopyOwner, IProgressMonitor)
5790=ClassFile:isInterface()
5791=ClassFile:codeComplete(int, CompletionRequestor, WorkingCopyOwner, IProgressMonitor)
5792=ClassFile:getSourceRange()
5793=ClassFile:ClassFile(PackageFragment, String)
5794=ClassFile:getCorrespondingResource()
5795=ClassFile:translatedNames(char[][])
5796=ClassFile:resource(PackageFragmentRoot)
5797=ClassFile:getElementType()
5798=ClassFile:getBinaryTypeInfo(IFile, boolean)
5799=ClassFile:codeComplete(int, ICompletionRequestor, WorkingCopyOwner)
5800=ClassFile:findElement(IJavaElement, int, SourceMapper)
5801=ClassFile:getType()
5802=ClassFile:getSource()
5803=ClassFile:closeAndRemoveFromJarTypeCache()
5804=ClassFile:getAttachedJavadoc(IProgressMonitor)
5805=ClassFile:equals(Object)
5806=ClassFile:getBytes()
5807=ClassFile:close()
5808=ClassFile:codeComplete(int, org.eclipse.jdt.core.ICodeCompletionRequestor)
5809=ClassFile:unqualifiedName(char[])
5810=ClassFile:isClass()
5811=ClassFile:getHandleMementoDelimiter()
5812=ClassFile:codeComplete(int, ICompletionRequestor)
5813=ClassFile:isReadOnly()
5814=ClassFile:createElementInfo()
5815=ClassFile:getElementAtConsideringSibling(int)
5816=ClassFile:getNameRange()
5817=ClassFile:hashCode()
5818=ClassFile:translatedName(char[])
5819=ClassFile:getOuterMostEnclosingType()
5820=ClassFile:buildStructure(OpenableElementInfo, IProgressMonitor, Map, IResource)
5821=ClassFile:codeComplete(int, CompletionRequestor, IProgressMonitor)
5822=ClassFile:simpleName(char[])
5823=ClassFile:mapSource(SourceMapper, IBinaryType, IClassFile)
5824=ClassFile:setupExternalAnnotationProvider(IProject, IPath, ZipFile, ClassFileReader, String)
5825=ClassFile:getTypeName()
5826=ClassFile:findPrimaryType()
5827=ClassFile:getClassFile()
5828=ClassFile:getTypeRoot()
5829=ClassFile:getHandleFromMemento(String, MementoTokenizer, WorkingCopyOwner)
5830=ClassFile:becomeWorkingCopy(IProblemRequestor, WorkingCopyOwner, IProgressMonitor)
5831=Assignment:getOperator()
5832=Assignment:propertyDescriptors(int)
5833=Assignment:subtreeMatch0(ASTMatcher, Object)
5834=Assignment:Operator:Operator(String)
5835=Assignment:internalStructuralPropertiesForType(int)
5836=Assignment:setLeftHandSide(Expression)
5837=Assignment:setRightHandSide(Expression)
5838=Assignment:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
5839=Assignment:Operator:toOperator(String)
5840=Assignment:memSize()
5841=Assignment:Operator:toString()
5842=Assignment:getNodeType0()
5843=Assignment:Assignment(AST)
5844=Assignment:internalGetSetObjectProperty(SimplePropertyDescriptor, boolean, Object)
5845=Assignment:treeSize()
5846=Assignment:getRightHandSide()
5847=Assignment:accept0(ASTVisitor)
5848=Assignment:getLeftHandSide()
5849=Assignment:setOperator(Assignment.Operator)
5850=Assignment:clone0(AST)
5851=Test:m()
5852=X03:test()
5853=SelectionScanner:isAtAssistIdentifier()
5854=SelectionScanner:SelectionScanner(long)
5855=SelectionScanner:getCurrentIdentifierSource()
5856=SelectionScanner:scanIdentifierOrKeyword()
5857=AmbiguousMethodTest:test019()
5858=AmbiguousMethodTest:testBug458563a()
5859=AmbiguousMethodTest:test060()
5860=AmbiguousMethodTest:test083()
5861=AmbiguousMethodTest:test014f()
5862=AmbiguousMethodTest:test084()
5863=AmbiguousMethodTest:test000a()
5864=AmbiguousMethodTest:test008()
5865=AmbiguousMethodTest:test072()
5866=AmbiguousMethodTest:test011a()
5867=AmbiguousMethodTest:test073()
5868=AmbiguousMethodTest:test061()
5869=AmbiguousMethodTest:test014d()
5870=AmbiguousMethodTest:test012a()
5871=AmbiguousMethodTest:test014e()
5872=AmbiguousMethodTest:test062()
5873=AmbiguousMethodTest:test085()
5874=AmbiguousMethodTest:test009()
5875=AmbiguousMethodTest:testBug466730()
5876=AmbiguousMethodTest:test050()
5877=AmbiguousMethodTest:test017()
5878=AmbiguousMethodTest:test014c()
5879=AmbiguousMethodTest:test081()
5880=AmbiguousMethodTest:suite()
5881=AmbiguousMethodTest:test006()
5882=AmbiguousMethodTest:testBug458563()
5883=AmbiguousMethodTest:test029()
5884=AmbiguousMethodTest:test070()
5885=AmbiguousMethodTest:test003c()
5886=AmbiguousMethodTest:test018()
5887=AmbiguousMethodTest:test014b()
5888=AmbiguousMethodTest:test082()
5889=AmbiguousMethodTest:test058a()
5890=AmbiguousMethodTest:test002a()
5891=AmbiguousMethodTest:test007()
5892=AmbiguousMethodTest:test071()
5893=AmbiguousMethodTest:test003b()
5894=AmbiguousMethodTest:test015()
5895=AmbiguousMethodTest:test038()
5896=AmbiguousMethodTest:test014a()
5897=AmbiguousMethodTest:test004()
5898=AmbiguousMethodTest:test027()
5899=AmbiguousMethodTest:test059a()
5900=AmbiguousMethodTest:test003a()
5901=AmbiguousMethodTest:test039()
5902=AmbiguousMethodTest:test080()
5903=AmbiguousMethodTest:_test016()
5904=AmbiguousMethodTest:test005()
5905=AmbiguousMethodTest:test028()
5906=AmbiguousMethodTest:test013()
5907=AmbiguousMethodTest:test059()
5908=AmbiguousMethodTest:test025()
5909=AmbiguousMethodTest:test002()
5910=AmbiguousMethodTest:test004a()
5911=AmbiguousMethodTest:test048()
5912=AmbiguousMethodTest:test014()
5913=AmbiguousMethodTest:test037()
5914=AmbiguousMethodTest:test003()
5915=AmbiguousMethodTest:test026()
5916=AmbiguousMethodTest:test049()
5917=AmbiguousMethodTest:test011()
5918=AmbiguousMethodTest:test057()
5919=AmbiguousMethodTest:testClass()
5920=AmbiguousMethodTest:test023()
5921=AmbiguousMethodTest:test069()
5922=AmbiguousMethodTest:test046()
5923=AmbiguousMethodTest:test000()
5924=AmbiguousMethodTest:test012()
5925=AmbiguousMethodTest:test058()
5926=AmbiguousMethodTest:test035()
5927=AmbiguousMethodTest:test024()
5928=AmbiguousMethodTest:test047()
5929=AmbiguousMethodTest:test001()
5930=AmbiguousMethodTest:test078()
5931=AmbiguousMethodTest:test044()
5932=AmbiguousMethodTest:test067()
5933=AmbiguousMethodTest:test021()
5934=AmbiguousMethodTest:AmbiguousMethodTest(String)
5935=AmbiguousMethodTest:test079()
5936=AmbiguousMethodTest:test056()
5937=AmbiguousMethodTest:testBug426521()
5938=AmbiguousMethodTest:test022()
5939=AmbiguousMethodTest:test045()
5940=AmbiguousMethodTest:test068()
5941=AmbiguousMethodTest:test030()
5942=AmbiguousMethodTest:test053()
5943=AmbiguousMethodTest:test076()
5944=AmbiguousMethodTest:_test016a()
5945=AmbiguousMethodTest:test065()
5946=AmbiguousMethodTest:test042()
5947=AmbiguousMethodTest:test008a()
5948=AmbiguousMethodTest:test077()
5949=AmbiguousMethodTest:test054()
5950=AmbiguousMethodTest:test031()
5951=AmbiguousMethodTest:test010c()
5952=AmbiguousMethodTest:test014i()
5953=AmbiguousMethodTest:test066()
5954=AmbiguousMethodTest:test089()
5955=AmbiguousMethodTest:test020()
5956=AmbiguousMethodTest:test043()
5957=AmbiguousMethodTest:test051()
5958=AmbiguousMethodTest:test074()
5959=AmbiguousMethodTest:test088b()
5960=AmbiguousMethodTest:test009a()
5961=AmbiguousMethodTest:testBug428845()
5962=AmbiguousMethodTest:test010b()
5963=AmbiguousMethodTest:test040()
5964=AmbiguousMethodTest:test086()
5965=AmbiguousMethodTest:test014h()
5966=AmbiguousMethodTest:test063()
5967=AmbiguousMethodTest:test088a()
5968=AmbiguousMethodTest:test011b()
5969=AmbiguousMethodTest:test075()
5970=AmbiguousMethodTest:test052()
5971=AmbiguousMethodTest:_test055()
5972=AmbiguousMethodTest:test010a()
5973=AmbiguousMethodTest:test041()
5974=AmbiguousMethodTest:test064()
5975=AmbiguousMethodTest:test087()
5976=AmbiguousMethodTest:test014g()
5977=AmbiguousMethodTest:getCompilerOptions()
5978=LambdaRegressionTest:testBug446691_comment5()
5979=LambdaRegressionTest:testBug4448556a()
5980=LambdaRegressionTest:test450604a()
5981=LambdaRegressionTest:test448724()
5982=LambdaRegressionTest:test448954()
5983=LambdaRegressionTest:testBug451840()
5984=LambdaRegressionTest:testBug473432()
5985=LambdaRegressionTest:testBug477888()
5986=LambdaRegressionTest:test449824()
5987=LambdaRegressionTest:test450604()
5988=LambdaRegressionTest:testBug464408()
5989=LambdaRegressionTest:test003()
5990=LambdaRegressionTest:test004()
5991=LambdaRegressionTest:testBug453687()
5992=LambdaRegressionTest:test001()
5993=LambdaRegressionTest:testBug472648()
5994=LambdaRegressionTest:test002()
5995=LambdaRegressionTest:testClass()
5996=LambdaRegressionTest:test449410()
5997=LambdaRegressionTest:testBug457007()
5998=LambdaRegressionTest:testBug446691_comment14b()
5999=LambdaRegressionTest:test447767()
6000=LambdaRegressionTest:testBug463526b()
6001=LambdaRegressionTest:test447767d()
6002=LambdaRegressionTest:testBug446691_comment14()
6003=LambdaRegressionTest:test450380()
6004=LambdaRegressionTest:testBug463526c()
6005=LambdaRegressionTest:testBug463526()
6006=LambdaRegressionTest:test447767c()
6007=LambdaRegressionTest:suite()
6008=LambdaRegressionTest:_test451677()
6009=LambdaRegressionTest:testBug456481()
6010=LambdaRegressionTest:test447767b()
6011=LambdaRegressionTest:testBug465900()
6012=LambdaRegressionTest:test447767a()
6013=LambdaRegressionTest:testBug4448556()
6014=LambdaRegressionTest:testBug446691_comment8()
6015=LambdaRegressionTest:LambdaRegressionTest(String)
6016=DeltaProcessor:addDependentProjects(IJavaProject, HashMap, HashSet)
6017=DeltaProcessor:fireReconcileDelta(IElementChangedListener[], int[], int)
6018=DeltaProcessor:DeltaProcessor(DeltaProcessingState, JavaModelManager)
6019=DeltaProcessor:checkExternalFolderChange(IProject, JavaProject)
6020=DeltaProcessor:RootInfo:getPackageFragmentRoot(IResource)
6021=DeltaProcessor:enclosingRootInfo(IPath, int)
6022=DeltaProcessor:processResourceDelta(IResourceDelta)
6023=DeltaProcessor:checkProjectsAndClasspathChanges(IResourceDelta)
6024=DeltaProcessor:createElement(IResource, int, RootInfo)
6025=DeltaProcessor:mergeDeltas(Collection)
6026=DeltaProcessor:RootInfo:getPackageFragmentRoot()
6027=DeltaProcessor:currentDelta()
6028=DeltaProcessor:checkExternalArchiveChanges(IJavaElement[], IProgressMonitor)
6029=DeltaProcessor:externalPath(IResource)
6030=DeltaProcessor:getSourceElementParser(Openable)
6031=DeltaProcessor:updateJavaModel(IJavaElementDelta)
6032=DeltaProcessor:contentChanged(Openable)
6033=DeltaProcessor:checkExternalArchiveChanges(IJavaElement[], boolean, IProgressMonitor)
6034=DeltaProcessor:addToParentInfo(Openable)
6035=DeltaProcessor:createExternalArchiveDelta(HashSet, IProgressMonitor)
6036=DeltaProcessor:validateClasspaths(IResourceDelta, HashSet)
6037=DeltaProcessor:updateIndex(Openable, IResourceDelta)
6038=DeltaProcessor:stopDeltas()
6039=DeltaProcessor:RootInfo:toString()
6040=DeltaProcessor:validateClasspaths(IResourceDelta)
6041=DeltaProcessor:resetProjectCaches()
6042=DeltaProcessor:resourceChanged(IResourceChangeEvent)
6043=DeltaProcessor:flush()
6044=DeltaProcessor:readRawClasspath(JavaProject)
6045=DeltaProcessor:updateCurrentDeltaAndIndex(IResourceDelta, int, RootInfo)
6046=DeltaProcessor:startDeltas()
6047=DeltaProcessor:updateRootIndex(PackageFragmentRoot, String[], IResourceDelta)
6048=DeltaProcessor:elementType(IResource, int, int, RootInfo)
6049=DeltaProcessor:removeFromParentInfo(Openable)
6050=DeltaProcessor:addPackageFragmentRoot(OpenableElementInfo, IPackageFragmentRoot)
6051=DeltaProcessor:firePostChangeDelta(IJavaElementDelta, IElementChangedListener[], int[], int)
6052=DeltaProcessor:otherRootsInfo(IPath, int)
6053=DeltaProcessor:OutputsInfo:toString()
6054=DeltaProcessor:isAffectedBy(IResourceDelta)
6055=DeltaProcessor:close(Openable)
6056=DeltaProcessor:fire(IJavaElementDelta, int)
6057=DeltaProcessor:popUntilPrefixOf(IPath)
6058=DeltaProcessor:isResFilteredFromOutput(RootInfo, OutputsInfo, IResource, int)
6059=DeltaProcessor:elementRemoved(Openable, IResourceDelta, RootInfo)
6060=DeltaProcessor:elementAdded(Openable, IResourceDelta, RootInfo)
6061=DeltaProcessor:RootInfo:RootInfo(JavaProject, IPath, char[][], char[][], int)
6062=DeltaProcessor:oldRootInfo(IPath, JavaProject)
6063=DeltaProcessor:checkProjectReferenceChange(IProject, JavaProject)
6064=DeltaProcessor:checkSourceAttachmentChange(IResourceDelta, IResource)
6065=DeltaProcessor:notifyListeners(IJavaElementDelta, int, IElementChangedListener[], int[], int)
6066=DeltaProcessor:isPrimaryWorkingCopy(IJavaElement, int)
6067=DeltaProcessor:rootInfo(IPath, int)
6068=DeltaProcessor:notifyTypeHierarchies(IElementChangedListener[], int)
6069=DeltaProcessor:OutputsInfo:OutputsInfo(IPath[], int[], int)
6070=DeltaProcessor:getTimeStamp(File)
6071=DeltaProcessor:nonJavaResourcesChanged(Openable, IResourceDelta)
6072=DeltaProcessor:RootInfo:isRootOfProject(IPath)
6073=DeltaProcessor:deleting(IProject)
6074=DeltaProcessor:traverseDelta(IResourceDelta, int, RootInfo, OutputsInfo)
6075=DeltaProcessor:outputsInfo(RootInfo, IResource)
6076=DeltaProcessor:registerJavaModelDelta(IJavaElementDelta)
6077=MethodBinding:asRawMethod(LookupEnvironment)
6078=MethodBinding:MethodBinding()
6079=MethodBinding:findOriginalInheritedMethod(MethodBinding)
6080=MethodBinding:sourceLambda()
6081=MethodBinding:MethodBinding(MethodBinding, ReferenceBinding)
6082=MethodBinding:constantPoolName()
6083=MethodBinding:sourceStart()
6084=MethodBinding:isAbstract()
6085=MethodBinding:sourceEnd()
6086=MethodBinding:canBeSeenBy(TypeBinding, InvocationSite, Scope)
6087=MethodBinding:isPolymorphic()
6088=MethodBinding:kind()
6089=MethodBinding:isUsed()
6090=MethodBinding:isOverriding()
6091=MethodBinding:readableName()
6092=MethodBinding:collectMissingTypes(List<TypeBinding>)
6093=MethodBinding:fillInDefaultNonNullness18(AbstractMethodDeclaration, LookupEnvironment)
6094=MethodBinding:sourceMethod()
6095=MethodBinding:isOrEnclosedByPrivateType()
6096=MethodBinding:computeSubstitutedMethod(MethodBinding, LookupEnvironment)
6097=MethodBinding:areParametersEqual(MethodBinding)
6098=MethodBinding:getAccessFlags()
6099=MethodBinding:tiebreakMethod()
6100=MethodBinding:isParameterizedGeneric()
6101=MethodBinding:isVarargs()
6102=MethodBinding:getAnnotations()
6103=MethodBinding:isDeprecated()
6104=MethodBinding:isBridge()
6105=MethodBinding:isStrictfp()
6106=MethodBinding:getParameterAnnotations()
6107=MethodBinding:areTypeVariableErasuresEqual(MethodBinding)
6108=MethodBinding:getTypeAnnotations()
6109=MethodBinding:isPrivate()
6110=MethodBinding:genericMethod()
6111=MethodBinding:isPublic()
6112=MethodBinding:toString()
6113=MethodBinding:original()
6114=MethodBinding:setAnnotations(AnnotationBinding[], AnnotationBinding[][], Object, LookupEnvironment)
6115=MethodBinding:signature(ClassFile)
6116=MethodBinding:isMain()
6117=MethodBinding:redeclaresPublicObjectMethod(Scope)
6118=MethodBinding:getAnnotationTagBits()
6119=MethodBinding:areParametersCompatibleWith(TypeBinding[])
6120=MethodBinding:isStatic()
6121=MethodBinding:MethodBinding(int, TypeBinding[], ReferenceBinding[], ReferenceBinding)
6122=MethodBinding:isImplementing()
6123=MethodBinding:isSynthetic()
6124=MethodBinding:hasSubstitutedParameters()
6125=MethodBinding:getDefaultValue()
6126=MethodBinding:MethodBinding(int, char[], TypeBinding, TypeBinding[], ReferenceBinding[], ReferenceBinding)
6127=MethodBinding:hasNonNullDefaultFor(int, boolean)
6128=MethodBinding:hasSubstitutedReturnType()
6129=MethodBinding:isSynchronized()
6130=MethodBinding:getTypeVariable(char[])
6131=MethodBinding:setTypeAnnotations(AnnotationBinding[])
6132=MethodBinding:isNative()
6133=MethodBinding:isConstructor()
6134=MethodBinding:isProtected()
6135=MethodBinding:isVoidMethod()
6136=MethodBinding:signature()
6137=MethodBinding:areParameterErasuresEqual(MethodBinding)
6138=MethodBinding:setAnnotations(AnnotationBinding[])
6139=MethodBinding:setParameterAnnotations(AnnotationBinding[][])
6140=MethodBinding:isViewedAsDeprecated()
6141=MethodBinding:isDefaultAbstract()
6142=MethodBinding:getAllTypeVariables(boolean)
6143=MethodBinding:shallowOriginal()
6144=MethodBinding:genericSignature()
6145=MethodBinding:isDefaultMethod()
6146=MethodBinding:fillInDefaultNonNullness(AbstractMethodDeclaration)
6147=MethodBinding:setSelector(char[])
6148=MethodBinding:setDefaultValue(Object)
6149=MethodBinding:typeVariables()
6150=MethodBinding:shortReadableName()
6151=MethodBinding:isFinal()
6152=MethodBinding:canBeSeenBy(InvocationSite, Scope)
6153=MethodBinding:computeUniqueKey(boolean)
6154=MethodBinding:canBeSeenBy(PackageBinding)
6155=MethodBinding:isDefault()
6156=TestWarn1:foo2()
6157=TestWarn1:foo1()
6158=MethodInvocationCompletionTest:testLabeledWithoutReceiver()
6159=MethodInvocationCompletionTest:testWithQualifiedNameReceiver()
6160=MethodInvocationCompletionTest:test1GAJBUQ()
6161=MethodInvocationCompletionTest:testEmptyInFirstParameter()
6162=MethodInvocationCompletionTest:testWithExpressionReceiver()
6163=MethodInvocationCompletionTest:testSuper()
6164=MethodInvocationCompletionTest:suite()
6165=MethodInvocationCompletionTest:testAfterFirstParameter()
6166=MethodInvocationCompletionTest:testInFirstParameter()
6167=MethodInvocationCompletionTest:testLabeledWithExpressionReceiver()
6168=MethodInvocationCompletionTest:testBeforeLastParameter()
6169=MethodInvocationCompletionTest:test1FW2ZTB_1()
6170=MethodInvocationCompletionTest:testInIfStatement()
6171=MethodInvocationCompletionTest:test1FW2ZTB_2()
6172=MethodInvocationCompletionTest:testWithNameReceiverAndTwoArgs()
6173=MethodInvocationCompletionTest:test1FVVWS8_1()
6174=MethodInvocationCompletionTest:test1FVVWS8_2()
6175=MethodInvocationCompletionTest:testNoReceiver()
6176=MethodInvocationCompletionTest:testBeforeFirstParameter()
6177=MethodInvocationCompletionTest:testAfterEmptyAnonymous()
6178=MethodInvocationCompletionTest:testWithNameReceiver()
6179=MethodInvocationCompletionTest:test1FWYBKF()
6180=MethodInvocationCompletionTest:test1FW35YZ_2()
6181=MethodInvocationCompletionTest:testWithNameReceiverAfterConditionalExpression()
6182=MethodInvocationCompletionTest:testBeforeSecondParameter()
6183=MethodInvocationCompletionTest:testSpaceThenFirstParameter()
6184=MethodInvocationCompletionTest:test1FW35YZ_1()
6185=MethodInvocationCompletionTest:MethodInvocationCompletionTest(String)
6186=Bug223878:foo1()
6187=Bug223878:foo3()
6188=Bug223878:foo2(Bug223878<? extends java.lang.Object>)
6189=ParenthesizedExpression:internalStructuralPropertiesForType(int)
6190=ParenthesizedExpression:memSize()
6191=ParenthesizedExpression:accept0(ASTVisitor)
6192=ParenthesizedExpression:getNodeType0()
6193=ParenthesizedExpression:treeSize()
6194=ParenthesizedExpression:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
6195=ParenthesizedExpression:ParenthesizedExpression(AST)
6196=ParenthesizedExpression:getExpression()
6197=ParenthesizedExpression:clone0(AST)
6198=ParenthesizedExpression:subtreeMatch0(ASTMatcher, Object)
6199=ParenthesizedExpression:propertyDescriptors(int)
6200=ParenthesizedExpression:setExpression(Expression)
6201=AllJavaModelTests:getDeprecatedJDOMTestClasses()
6202=AllJavaModelTests:suite()
6203=AllJavaModelTests:getAllTestClasses()
6204=AllJavaModelTests:AllJavaModelTests(String)
6205=A:foo()
6206=DOMCompilationUnit:setName(String)
6207=DOMCompilationUnit:shareContents(DOMNode)
6208=DOMCompilationUnit:getNodeType()
6209=DOMCompilationUnit:canHaveChildren()
6210=DOMCompilationUnit:DOMCompilationUnit()
6211=DOMCompilationUnit:getJavaElement(IJavaElement)
6212=DOMCompilationUnit:normalize(ILineStartFinder)
6213=DOMCompilationUnit:DOMCompilationUnit(char[], int[])
6214=DOMCompilationUnit:getHeader()
6215=DOMCompilationUnit:toString()
6216=DOMCompilationUnit:setHeader(String)
6217=DOMCompilationUnit:initalizeHeader()
6218=DOMCompilationUnit:isAllowableChild(IDOMNode)
6219=DOMCompilationUnit:appendFragmentedContents(CharArrayBuffer)
6220=DOMCompilationUnit:getName()
6221=DOMCompilationUnit:newDOMNode()
6222=CodeSnippetClassFile:CodeSnippetClassFile(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ClassFile, boolean)
6223=CodeSnippetClassFile:createProblemType(TypeDeclaration, CompilationResult)
6224=A:f()
6225=Compliance_1_6:suite()
6226=Compliance_1_6:Compliance_1_6(String)
6227=Compliance_1_6:testClass()
6228=Compliance_1_6:test1()
6229=X07:foo(int, int)
6230=PluginFactoryContainer:addFactoryName(String, String)
6231=PluginFactoryContainer:PluginFactoryContainer(String, boolean)
6232=PluginFactoryContainer:getId()
6233=PluginFactoryContainer:getType()
6234=PluginFactoryContainer:loadFactoryNames()
6235=PluginFactoryContainer:exists()
6236=PluginFactoryContainer:getEnableDefault()
6237=IdeOutputNonSourceFileObject:openOutputStream()
6238=IdeOutputNonSourceFileObject:getName()
6239=IdeOutputNonSourceFileObject:toUri()
6240=IdeOutputNonSourceFileObject:IdeOutputNonSourceFileObject(IdeProcessingEnvImpl, IFile, Set<IFile>)
6241=IdeOutputNonSourceFileObject:openWriter()
6242=A:foo()
6243=X08:foo(Object, int)
6244=A:correctThis()
6245=TypeVisitor:visitPrimitiveType(PrimitiveType)
6246=TypeVisitor:visitTypeMirror(TypeMirror)
6247=TypeVisitor:visitArrayType(ArrayType)
6248=TypeVisitor:visitEnumType(EnumType)
6249=TypeVisitor:visitAnnotationType(AnnotationType)
6250=TypeVisitor:visitClassType(ClassType)
6251=TypeVisitor:visitVoidType(VoidType)
6252=TypeVisitor:visitWildcardType(WildcardType)
6253=TypeVisitor:visitReferenceType(ReferenceType)
6254=TypeVisitor:visitInterfaceType(InterfaceType)
6255=TypeVisitor:visitTypeVariable(TypeVariable)
6256=TypeVisitor:visitDeclaredType(DeclaredType)
6257=ASTConverterAST4Test:test0072()
6258=ASTConverterAST4Test:test0095()
6259=ASTConverterAST4Test:test0301()
6260=ASTConverterAST4Test:test0215()
6261=ASTConverterAST4Test:test0238()
6262=ASTConverterAST4Test:test0019()
6263=ASTConverterAST4Test:test0193()
6264=ASTConverterAST4Test:test0170()
6265=ASTConverterAST4Test:test0324()
6266=ASTConverterAST4Test:test0117()
6267=ASTConverterAST4Test:test0347()
6268=ASTConverterAST4Test:test0083()
6269=ASTConverterAST4Test:test0291()
6270=ASTConverterAST4Test:test0060()
6271=ASTConverterAST4Test:test0226()
6272=ASTConverterAST4Test:test0249()
6273=ASTConverterAST4Test:test0203()
6274=ASTConverterAST4Test:test0007()
6275=ASTConverterAST4Test:test0181()
6276=ASTConverterAST4Test:test0313()
6277=ASTConverterAST4Test:test0128()
6278=ASTConverterAST4Test:test0336()
6279=ASTConverterAST4Test:test0105()
6280=ASTConverterAST4Test:test0359()
6281=ASTConverterAST4Test:test0094()
6282=ASTConverterAST4Test:test0139()
6283=ASTConverterAST4Test:test0323()
6284=ASTConverterAST4Test:test0300()
6285=ASTConverterAST4Test:test0071()
6286=ASTConverterAST4Test:test0214()
6287=ASTConverterAST4Test:test0237()
6288=ASTConverterAST4Test:test0018()
6289=ASTConverterAST4Test:test0192()
6290=ASTConverterAST4Test:test0346()
6291=ASTConverterAST4Test:test0369()
6292=ASTConverterAST4Test:test0116()
6293=ASTConverterAST4Test:test0082()
6294=ASTConverterAST4Test:test0312()
6295=ASTConverterAST4Test:test0290()
6296=ASTConverterAST4Test:test0225()
6297=ASTConverterAST4Test:setUpSuite()
6298=ASTConverterAST4Test:test0248()
6299=ASTConverterAST4Test:test0006()
6300=ASTConverterAST4Test:test0202()
6301=ASTConverterAST4Test:test0029()
6302=ASTConverterAST4Test:test0180()
6303=ASTConverterAST4Test:test0335()
6304=ASTConverterAST4Test:test0358()
6305=ASTConverterAST4Test:test0104()
6306=ASTConverterAST4Test:test0127()
6307=ASTConverterAST4Test:test0051()
6308=ASTConverterAST4Test:test0281()
6309=ASTConverterAST4Test:test0074()
6310=ASTConverterAST4Test:test0097()
6311=ASTConverterAST4Test:test0217()
6312=ASTConverterAST4Test:test0172()
6313=ASTConverterAST4Test:test0303()
6314=ASTConverterAST4Test:ASTConverterAST4Test(String)
6315=ASTConverterAST4Test:test0119()
6316=ASTConverterAST4Test:test0195()
6317=ASTConverterAST4Test:test0326()
6318=ASTConverterAST4Test:test0349()
6319=ASTConverterAST4Test:test0062()
6320=ASTConverterAST4Test:test0270()
6321=ASTConverterAST4Test:test0293()
6322=ASTConverterAST4Test:test0391()
6323=ASTConverterAST4Test:test0085()
6324=ASTConverterAST4Test:test0228()
6325=ASTConverterAST4Test:test0205()
6326=ASTConverterAST4Test:test0009()
6327=ASTConverterAST4Test:test0183()
6328=ASTConverterAST4Test:test0160()
6329=ASTConverterAST4Test:test0315()
6330=ASTConverterAST4Test:test0107()
6331=ASTConverterAST4Test:test0338()
6332=ASTConverterAST4Test:test0073()
6333=ASTConverterAST4Test:test0050()
6334=ASTConverterAST4Test:test0280()
6335=ASTConverterAST4Test:test0096()
6336=ASTConverterAST4Test:test0239()
6337=ASTConverterAST4Test:test0216()
6338=ASTConverterAST4Test:test0171()
6339=ASTConverterAST4Test:test0194()
6340=ASTConverterAST4Test:test0400()
6341=ASTConverterAST4Test:test0302()
6342=ASTConverterAST4Test:test0118()
6343=ASTConverterAST4Test:test0325()
6344=ASTConverterAST4Test:test0348()
6345=ASTConverterAST4Test:test0084()
6346=ASTConverterAST4Test:test0061()
6347=ASTConverterAST4Test:test0292()
6348=ASTConverterAST4Test:test0390()
6349=ASTConverterAST4Test:test0204()
6350=ASTConverterAST4Test:test0227()
6351=ASTConverterAST4Test:test0008()
6352=ASTConverterAST4Test:test0182()
6353=ASTConverterAST4Test:test0314()
6354=ASTConverterAST4Test:test0106()
6355=ASTConverterAST4Test:test0129()
6356=ASTConverterAST4Test:test0337()
6357=ASTConverterAST4Test:test0219()
6358=ASTConverterAST4Test:test0283()
6359=ASTConverterAST4Test:test0381()
6360=ASTConverterAST4Test:test0030()
6361=ASTConverterAST4Test:test0053()
6362=ASTConverterAST4Test:test0076()
6363=ASTConverterAST4Test:test0099()
6364=ASTConverterAST4Test:test0305()
6365=ASTConverterAST4Test:test0328()
6366=ASTConverterAST4Test:test0151()
6367=ASTConverterAST4Test:test0197()
6368=ASTConverterAST4Test:test0174()
6369=ASTConverterAST4Test:test0393()
6370=ASTConverterAST4Test:test0272()
6371=ASTConverterAST4Test:test0295()
6372=ASTConverterAST4Test:test0207()
6373=ASTConverterAST4Test:test0370()
6374=ASTConverterAST4Test:test0041()
6375=ASTConverterAST4Test:test0064()
6376=ASTConverterAST4Test:test0087()
6377=ASTConverterAST4Test:test0260()
6378=ASTConverterAST4Test:test0162()
6379=ASTConverterAST4Test:test0109()
6380=ASTConverterAST4Test:test0185()
6381=ASTConverterAST4Test:test0317()
6382=ASTConverterAST4Test:test0282()
6383=ASTConverterAST4Test:test0380()
6384=ASTConverterAST4Test:test0218()
6385=ASTConverterAST4Test:test0052()
6386=ASTConverterAST4Test:test0075()
6387=ASTConverterAST4Test:test0098()
6388=ASTConverterAST4Test:test0150()
6389=ASTConverterAST4Test:test0304()
6390=ASTConverterAST4Test:test0173()
6391=ASTConverterAST4Test:test0196()
6392=ASTConverterAST4Test:test0327()
6393=ASTConverterAST4Test:test0040()
6394=ASTConverterAST4Test:test0271()
6395=ASTConverterAST4Test:test0392()
6396=ASTConverterAST4Test:test0294()
6397=ASTConverterAST4Test:test0229()
6398=ASTConverterAST4Test:test0063()
6399=ASTConverterAST4Test:test0086()
6400=ASTConverterAST4Test:test0206()
6401=ASTConverterAST4Test:test0161()
6402=ASTConverterAST4Test:test0316()
6403=ASTConverterAST4Test:test0339()
6404=ASTConverterAST4Test:test0184()
6405=ASTConverterAST4Test:test0108()
6406=ASTConverterAST4Test:test0360()
6407=ASTConverterAST4Test:test0383()
6408=ASTConverterAST4Test:test0032()
6409=ASTConverterAST4Test:test0055()
6410=ASTConverterAST4Test:test0078()
6411=ASTConverterAST4Test:internalSetExtraDimensions(VariableDeclarationFragment, int)
6412=ASTConverterAST4Test:test0285()
6413=ASTConverterAST4Test:test0251()
6414=ASTConverterAST4Test:test0130()
6415=ASTConverterAST4Test:test0176()
6416=ASTConverterAST4Test:test0153()
6417=ASTConverterAST4Test:test0307()
6418=ASTConverterAST4Test:test0199()
6419=ASTConverterAST4Test:test0395()
6420=ASTConverterAST4Test:test0372()
6421=ASTConverterAST4Test:test0020()
6422=ASTConverterAST4Test:test0043()
6423=ASTConverterAST4Test:test0066()
6424=ASTConverterAST4Test:test0089()
6425=ASTConverterAST4Test:test0274()
6426=ASTConverterAST4Test:test0297()
6427=ASTConverterAST4Test:test0209()
6428=ASTConverterAST4Test:test0262()
6429=ASTConverterAST4Test:test0141()
6430=ASTConverterAST4Test:test0187()
6431=ASTConverterAST4Test:test0164()
6432=ASTConverterAST4Test:test0319()
6433=ASTConverterAST4Test:test0382()
6434=ASTConverterAST4Test:test0054()
6435=ASTConverterAST4Test:test0284()
6436=ASTConverterAST4Test:test0031()
6437=ASTConverterAST4Test:test0077()
6438=ASTConverterAST4Test:test0250()
6439=ASTConverterAST4Test:test0152()
6440=ASTConverterAST4Test:test0175()
6441=ASTConverterAST4Test:test0198()
6442=ASTConverterAST4Test:test0329()
6443=ASTConverterAST4Test:test0306()
6444=ASTConverterAST4Test:test0371()
6445=ASTConverterAST4Test:test0394()
6446=ASTConverterAST4Test:test0208()
6447=ASTConverterAST4Test:test0065()
6448=ASTConverterAST4Test:test0273()
6449=ASTConverterAST4Test:test0042()
6450=ASTConverterAST4Test:test0296()
6451=ASTConverterAST4Test:test0088()
6452=ASTConverterAST4Test:test0261()
6453=ASTConverterAST4Test:test0140()
6454=ASTConverterAST4Test:test0163()
6455=ASTConverterAST4Test:test0186()
6456=ASTConverterAST4Test:test0234_2()
6457=ASTConverterAST4Test:test0318()
6458=ASTConverterAST4Test:test0385()
6459=ASTConverterAST4Test:test0362()
6460=ASTConverterAST4Test:test0011()
6461=ASTConverterAST4Test:test0287()
6462=ASTConverterAST4Test:test0034()
6463=ASTConverterAST4Test:test0057()
6464=ASTConverterAST4Test:test0230()
6465=ASTConverterAST4Test:test0253()
6466=ASTConverterAST4Test:test0132()
6467=ASTConverterAST4Test:test0309()
6468=ASTConverterAST4Test:test0155()
6469=ASTConverterAST4Test:test0178()
6470=ASTConverterAST4Test:test0397()
6471=ASTConverterAST4Test:test0120()
6472=ASTConverterAST4Test:test0374()
6473=ASTConverterAST4Test:test0351()
6474=ASTConverterAST4Test:test0022()
6475=ASTConverterAST4Test:test0276()
6476=ASTConverterAST4Test:test0299()
6477=ASTConverterAST4Test:test0045()
6478=ASTConverterAST4Test:test0068()
6479=ASTConverterAST4Test:test0241()
6480=ASTConverterAST4Test:test0264()
6481=ASTConverterAST4Test:test0143()
6482=ASTConverterAST4Test:test0166()
6483=ASTConverterAST4Test:test0189()
6484=ASTConverterAST4Test:test0361()
6485=ASTConverterAST4Test:test0384()
6486=ASTConverterAST4Test:test0033()
6487=ASTConverterAST4Test:test0079()
6488=ASTConverterAST4Test:test0010()
6489=ASTConverterAST4Test:test0286()
6490=ASTConverterAST4Test:test0056()
6491=ASTConverterAST4Test:test0252()
6492=ASTConverterAST4Test:test0131()
6493=ASTConverterAST4Test:test0154()
6494=ASTConverterAST4Test:test0308()
6495=ASTConverterAST4Test:test0177()
6496=ASTConverterAST4Test:test0350()
6497=ASTConverterAST4Test:test0373()
6498=ASTConverterAST4Test:test0396()
6499=ASTConverterAST4Test:test0044()
6500=ASTConverterAST4Test:test0021()
6501=ASTConverterAST4Test:test0275()
6502=ASTConverterAST4Test:test0298()
6503=ASTConverterAST4Test:test0067()
6504=ASTConverterAST4Test:test0263()
6505=ASTConverterAST4Test:test0240()
6506=ASTConverterAST4Test:test0142()
6507=ASTConverterAST4Test:test0165()
6508=ASTConverterAST4Test:internalThrownExceptions(MethodDeclaration)
6509=ASTConverterAST4Test:test0188()
6510=ASTConverterAST4Test:test0364()
6511=ASTConverterAST4Test:test0111()
6512=ASTConverterAST4Test:test0387()
6513=ASTConverterAST4Test:test0341()
6514=ASTConverterAST4Test:test0013()
6515=ASTConverterAST4Test:test0036()
6516=ASTConverterAST4Test:test0059()
6517=ASTConverterAST4Test:test0289()
6518=ASTConverterAST4Test:test0232()
6519=ASTConverterAST4Test:test0255()
6520=ASTConverterAST4Test:test0134()
6521=ASTConverterAST4Test:test0157()
6522=ASTConverterAST4Test:test0353()
6523=ASTConverterAST4Test:test0399()
6524=ASTConverterAST4Test:test0122()
6525=ASTConverterAST4Test:test0376()
6526=ASTConverterAST4Test:test0330()
6527=ASTConverterAST4Test:test0001()
6528=ASTConverterAST4Test:test0024()
6529=ASTConverterAST4Test:test0047()
6530=ASTConverterAST4Test:test0278()
6531=ASTConverterAST4Test:test0243()
6532=ASTConverterAST4Test:test0266()
6533=ASTConverterAST4Test:test0220()
6534=ASTConverterAST4Test:test0145()
6535=ASTConverterAST4Test:test0168()
6536=ASTConverterAST4Test:test0386()
6537=ASTConverterAST4Test:test0110()
6538=ASTConverterAST4Test:test0340()
6539=ASTConverterAST4Test:test0363()
6540=ASTConverterAST4Test:test0012()
6541=ASTConverterAST4Test:test0058()
6542=ASTConverterAST4Test:test0288()
6543=ASTConverterAST4Test:test0035()
6544=ASTConverterAST4Test:test0254()
6545=ASTConverterAST4Test:test0231()
6546=ASTConverterAST4Test:test0133()
6547=ASTConverterAST4Test:test0156()
6548=ASTConverterAST4Test:test0179()
6549=ASTConverterAST4Test:test0375()
6550=ASTConverterAST4Test:test0398()
6551=ASTConverterAST4Test:test0121()
6552=ASTConverterAST4Test:test0352()
6553=ASTConverterAST4Test:test0023()
6554=ASTConverterAST4Test:test0069()
6555=ASTConverterAST4Test:test0277()
6556=ASTConverterAST4Test:test0046()
6557=ASTConverterAST4Test:test0265()
6558=ASTConverterAST4Test:test0242()
6559=ASTConverterAST4Test:test0144()
6560=ASTConverterAST4Test:test0167()
6561=ASTConverterAST4Test:test0113()
6562=ASTConverterAST4Test:test0159()
6563=ASTConverterAST4Test:test0343()
6564=ASTConverterAST4Test:test0389()
6565=ASTConverterAST4Test:test0366()
6566=ASTConverterAST4Test:test0091()
6567=ASTConverterAST4Test:test0320()
6568=ASTConverterAST4Test:test0015()
6569=ASTConverterAST4Test:test0211()
6570=ASTConverterAST4Test:test0234()
6571=ASTConverterAST4Test:test0257()
6572=ASTConverterAST4Test:test0038()
6573=ASTConverterAST4Test:test0136()
6574=ASTConverterAST4Test:test0124()
6575=ASTConverterAST4Test:test0332()
6576=ASTConverterAST4Test:test0378()
6577=ASTConverterAST4Test:test0101()
6578=ASTConverterAST4Test:test0355()
6579=ASTConverterAST4Test:test0003()
6580=ASTConverterAST4Test:test0026()
6581=ASTConverterAST4Test:test0222()
6582=ASTConverterAST4Test:test0245()
6583=ASTConverterAST4Test:test0268()
6584=ASTConverterAST4Test:test0049()
6585=ASTConverterAST4Test:test0147()
6586=ASTConverterAST4Test:test0342()
6587=ASTConverterAST4Test:test0365()
6588=ASTConverterAST4Test:test0388()
6589=ASTConverterAST4Test:test0112()
6590=ASTConverterAST4Test:test0090()
6591=ASTConverterAST4Test:suite()
6592=ASTConverterAST4Test:test0037()
6593=ASTConverterAST4Test:test0014()
6594=ASTConverterAST4Test:test0210()
6595=ASTConverterAST4Test:test0256()
6596=ASTConverterAST4Test:test0233()
6597=ASTConverterAST4Test:test0135()
6598=ASTConverterAST4Test:test0158()
6599=ASTConverterAST4Test:test0331()
6600=ASTConverterAST4Test:test0354()
6601=ASTConverterAST4Test:test0377()
6602=ASTConverterAST4Test:test0100()
6603=ASTConverterAST4Test:test0123()
6604=ASTConverterAST4Test:test0002()
6605=ASTConverterAST4Test:test0048()
6606=ASTConverterAST4Test:test0025()
6607=ASTConverterAST4Test:test0279()
6608=ASTConverterAST4Test:test0221()
6609=ASTConverterAST4Test:test0267()
6610=ASTConverterAST4Test:test0244()
6611=ASTConverterAST4Test:test0146()
6612=ASTConverterAST4Test:test0169()
6613=ASTConverterAST4Test:test0093()
6614=ASTConverterAST4Test:test0138()
6615=ASTConverterAST4Test:test0322()
6616=ASTConverterAST4Test:test0345()
6617=ASTConverterAST4Test:test0070()
6618=ASTConverterAST4Test:test0259()
6619=ASTConverterAST4Test:test0017()
6620=ASTConverterAST4Test:test0213()
6621=ASTConverterAST4Test:test0191()
6622=ASTConverterAST4Test:test0368()
6623=ASTConverterAST4Test:componentType(ArrayType)
6624=ASTConverterAST4Test:test0115()
6625=ASTConverterAST4Test:test0081()
6626=ASTConverterAST4Test:test0103()
6627=ASTConverterAST4Test:test0149()
6628=ASTConverterAST4Test:test0334()
6629=ASTConverterAST4Test:test0311()
6630=ASTConverterAST4Test:test0247()
6631=ASTConverterAST4Test:test0005()
6632=ASTConverterAST4Test:test0028()
6633=ASTConverterAST4Test:test0224()
6634=ASTConverterAST4Test:test0201()
6635=ASTConverterAST4Test:test0357()
6636=ASTConverterAST4Test:test0126()
6637=ASTConverterAST4Test:test0092()
6638=ASTConverterAST4Test:test0114()
6639=ASTConverterAST4Test:test0137()
6640=ASTConverterAST4Test:test0321()
6641=ASTConverterAST4Test:test0344()
6642=ASTConverterAST4Test:test0367()
6643=ASTConverterAST4Test:test0258()
6644=ASTConverterAST4Test:test0016()
6645=ASTConverterAST4Test:test0190()
6646=ASTConverterAST4Test:test0235()
6647=ASTConverterAST4Test:test0039()
6648=ASTConverterAST4Test:test0212()
6649=ASTConverterAST4Test:test0102()
6650=ASTConverterAST4Test:test0125()
6651=ASTConverterAST4Test:test0148()
6652=ASTConverterAST4Test:test0333()
6653=ASTConverterAST4Test:test0356()
6654=ASTConverterAST4Test:test0310()
6655=ASTConverterAST4Test:test0080()
6656=ASTConverterAST4Test:test0004()
6657=ASTConverterAST4Test:test0269()
6658=ASTConverterAST4Test:test0027()
6659=ASTConverterAST4Test:test0200()
6660=ASTConverterAST4Test:test0246()
6661=ASTConverterAST4Test:test0223()
6662=ASTConverterAST4Test:test0379()
6663=CatchParameterBinding:setPreciseType(TypeBinding)
6664=CatchParameterBinding:CatchParameterBinding(LocalDeclaration, TypeBinding, int, boolean)
6665=CatchParameterBinding:getPreciseTypes()
6666=CatchParameterBinding:isCatchParameter()
6667=CharArrayAnnotationScanner:CharArrayAnnotationScanner(char[])
6668=CharArrayAnnotationScanner:getNext()
6669=Test:main(String[])
6670=InputStreamAnnotationScanner:getNext()
6671=InputStreamAnnotationScanner:InputStreamAnnotationScanner(InputStream)
6672=Test:foo()
6673=Test:main(String[])
6674=Annotation:getClassFile()
6675=Annotation:equals(Object)
6676=Annotation:getSourceRange()
6677=Annotation:getNameRange()
6678=Annotation:getElementName()
6679=Annotation:hashCode()
6680=Annotation:getHandleMementoDelimiter()
6681=Annotation:Annotation(JavaElement, String, String)
6682=Annotation:toStringName(StringBuffer)
6683=Annotation:getDeclaringMember()
6684=Annotation:getElementType()
6685=Annotation:Annotation(JavaElement, String)
6686=Annotation:getMemberValuePairs()
6687=TypeConverter:decodeType3(char[], int, int, int, int, int, int, int, ArrayList)
6688=TypeConverter:extractIdentifiers(String, int, int, int)
6689=TypeConverter:createTypeReference(char[], int, int)
6690=TypeConverter:decodeTypeArguments(String, int, int, int)
6691=TypeConverter:addIdentifiers(String, int, int, int, ArrayList)
6692=TypeConverter:decodeTypeArguments(char[], int, int, int, boolean)
6693=TypeConverter:createTypeReference(String, int, int)
6694=TypeConverter:decodeType(String, int, int, int)
6695=TypeConverter:TypeConverter(ProblemReporter, char)
6696=TypeConverter:decodeType2(char[], int, int, int, boolean)
6697=TypeConverter:createImportReference(String[], int, int, boolean, int)
6698=TypeConverter:createTypeParameter(char[], char[][], int, int)
6699=TypeConverter:createTypeReference(char[], int, int, boolean)
6700=BClass:bar(int, int)
6701=BClass:foo(SuperClass, int)
6702=BClass:Inner:Inner()
6703=A:toString()
6704=JavadocTestMixed:test006()
6705=JavadocTestMixed:javadocTestClass()
6706=JavadocTestMixed:getCompilerOptions()
6707=JavadocTestMixed:test005()
6708=JavadocTestMixed:test004()
6709=JavadocTestMixed:test003()
6710=JavadocTestMixed:test026()
6711=JavadocTestMixed:JavadocTestMixed(String)
6712=JavadocTestMixed:test040()
6713=JavadocTestMixed:_test033()
6714=JavadocTestMixed:test021()
6715=JavadocTestMixed:test032()
6716=JavadocTestMixed:setUp()
6717=JavadocTestMixed:test031()
6718=JavadocTestMixed:test030()
6719=JavadocTestMixed:test041()
6720=JavadocTestMixed:suite()
6721=JavadocTestMixed:test025()
6722=JavadocTestMixed:test002()
6723=JavadocTestMixed:test013()
6724=JavadocTestMixed:test001()
6725=JavadocTestMixed:test024()
6726=JavadocTestMixed:test012()
6727=JavadocTestMixed:test023()
6728=JavadocTestMixed:test011()
6729=JavadocTestMixed:test022()
6730=JavadocTestMixed:test010()
6731=X28d:foo(String)
6732=ResolveConstructorDeclaration:ResolveConstructorDeclaration(String)
6733=ResolveConstructorDeclaration:ResolveConstructorDeclaration(int)
6734=ChangeCollector:addChange(IImportDeclaration, IJavaElementDelta)
6735=ChangeCollector:addChange(IMember, IJavaElementDelta)
6736=ChangeCollector:addAffectedChildren(IJavaElementDelta)
6737=ChangeCollector:addChange(ICompilationUnit, IJavaElementDelta)
6738=ChangeCollector:addTypeAddition(IType, SimpleDelta)
6739=ChangeCollector:addChange(IType, IJavaElementDelta)
6740=ChangeCollector:ChangeCollector(TypeHierarchy)
6741=ChangeCollector:toString()
6742=ChangeCollector:addTypeChange(IType, int, SimpleDelta)
6743=ChangeCollector:hasSuperTypeChange(IType)
6744=ChangeCollector:addTypeRemoval(IType, SimpleDelta)
6745=ChangeCollector:addChange(IImportContainer, IJavaElementDelta)
6746=ChangeCollector:getAllTypesFromHierarchy(JavaElement, ArrayList)
6747=ChangeCollector:getAllTypesFromElement(IJavaElement, ArrayList)
6748=ChangeCollector:needsRefresh()
6749=ChangeCollector:hasVisibilityChange(IType)
6750=Test:foo()
6751=JavaIndexerApplication:start(IApplicationContext)
6752=JavaIndexerApplication:displayError(String)
6753=JavaIndexerApplication:Messages:bind(String, Object)
6754=JavaIndexerApplication:stop()
6755=JavaIndexerApplication:Messages:bind(String, Object, Object)
6756=JavaIndexerApplication:Messages:bind(String, Object[])
6757=JavaIndexerApplication:Messages:bind(String)
6758=JavaIndexerApplication:processCommandLine(String[])
6759=JavaIndexerApplication:displayHelp()
6760=A:B:bar(Y)
6761=AnnotationMirrorImpl:getPosition()
6762=AnnotationMirrorImpl:getAnnotatedDeclaration()
6763=AnnotationMirrorImpl:getMemberValueTypeBinding(String)
6764=AnnotationMirrorImpl:getResource()
6765=AnnotationMirrorImpl:getElementValues()
6766=AnnotationMirrorImpl:getValue(String)
6767=AnnotationMirrorImpl:getValueTypeBinding(Object, ITypeBinding)
6768=AnnotationMirrorImpl:getCompilationUnit()
6769=AnnotationMirrorImpl:isFromSource()
6770=AnnotationMirrorImpl:getAnnotationType()
6771=AnnotationMirrorImpl:equals(Object)
6772=AnnotationMirrorImpl:getMethodBinding(String)
6773=AnnotationMirrorImpl:getASTNodeForElement(String)
6774=AnnotationMirrorImpl:AnnotationMirrorImpl(IAnnotationBinding, EclipseDeclarationImpl, BaseProcessorEnv)
6775=AnnotationMirrorImpl:getResolvedAnnotaion()
6776=AnnotationMirrorImpl:getAstNode()
6777=AnnotationMirrorImpl:kind()
6778=AnnotationMirrorImpl:getEnvironment()
6779=AnnotationMirrorImpl:toString()
6780=AnnotationMirrorImpl:hashCode()
6781=firstClass:myMethod()
6782=JavadocArrayQualifiedTypeReference:traverse(ASTVisitor, ClassScope)
6783=JavadocArrayQualifiedTypeReference:reportInvalidType(Scope)
6784=JavadocArrayQualifiedTypeReference:traverse(ASTVisitor, BlockScope)
6785=JavadocArrayQualifiedTypeReference:reportDeprecatedType(Scope)
6786=JavadocArrayQualifiedTypeReference:JavadocArrayQualifiedTypeReference(JavadocQualifiedTypeReference, int)
6787=HashSetOfCharArrayArray:hashCode(char[][], int)
6788=HashSetOfCharArrayArray:clone()
6789=HashSetOfCharArrayArray:contains(char[][])
6790=HashSetOfCharArrayArray:hashCode(char[][])
6791=HashSetOfCharArrayArray:size()
6792=HashSetOfCharArrayArray:toString()
6793=HashSetOfCharArrayArray:HashSetOfCharArrayArray()
6794=HashSetOfCharArrayArray:HashSetOfCharArrayArray(int)
6795=HashSetOfCharArrayArray:add(char[][])
6796=HashSetOfCharArrayArray:remove(char[][])
6797=HashSetOfCharArrayArray:rehash()
6798=CompletionOnParameterizedQualifiedTypeReference:isException()
6799=CompletionOnParameterizedQualifiedTypeReference:CompletionOnParameterizedQualifiedTypeReference(char[][], TypeReference[][], char[], long[], int)
6800=CompletionOnParameterizedQualifiedTypeReference:resolveType(BlockScope, boolean, int)
6801=CompletionOnParameterizedQualifiedTypeReference:printExpression(int, StringBuffer)
6802=CompletionOnParameterizedQualifiedTypeReference:resolveType(ClassScope, int)
6803=CompletionOnParameterizedQualifiedTypeReference:isSuperType()
6804=CompletionOnParameterizedQualifiedTypeReference:isClass()
6805=CompletionOnParameterizedQualifiedTypeReference:isInterface()
6806=CompletionOnParameterizedQualifiedTypeReference:CompletionOnParameterizedQualifiedTypeReference(char[][], TypeReference[][], char[], long[])
6807=ASTRewritingModifyingCopyTest:suite()
6808=ASTRewritingModifyingCopyTest:test0001()
6809=ASTRewritingModifyingCopyTest:ASTRewritingModifyingCopyTest(String)
6810=ASTRewritingModifyingCopyTest:test0004()
6811=ASTRewritingModifyingCopyTest:test0005()
6812=ASTRewritingModifyingCopyTest:allTests()
6813=ASTRewritingModifyingCopyTest:test0002()
6814=ASTRewritingModifyingCopyTest:test0003()
6815=ASTRewritingModifyingCopyTest:test0008()
6816=ASTRewritingModifyingCopyTest:test0009()
6817=ASTRewritingModifyingCopyTest:test0006()
6818=ASTRewritingModifyingCopyTest:test0007()
6819=A:goo()
6820=A:foo()
6821=X05:foo()
6822=Deprecated18Test:suite()
6823=Deprecated18Test:testClass()
6824=Deprecated18Test:Deprecated18Test(String)
6825=Deprecated18Test:test412555()
6826=UnderscoresInLiteralsTest:test020()
6827=UnderscoresInLiteralsTest:testClass()
6828=UnderscoresInLiteralsTest:suite()
6829=UnderscoresInLiteralsTest:test021()
6830=UnderscoresInLiteralsTest:test010()
6831=UnderscoresInLiteralsTest:test022()
6832=UnderscoresInLiteralsTest:test011()
6833=UnderscoresInLiteralsTest:test023()
6834=UnderscoresInLiteralsTest:test012()
6835=UnderscoresInLiteralsTest:test001()
6836=UnderscoresInLiteralsTest:test024()
6837=UnderscoresInLiteralsTest:test013()
6838=UnderscoresInLiteralsTest:test002()
6839=UnderscoresInLiteralsTest:test014()
6840=UnderscoresInLiteralsTest:test003()
6841=UnderscoresInLiteralsTest:test015()
6842=UnderscoresInLiteralsTest:UnderscoresInLiteralsTest(String)
6843=UnderscoresInLiteralsTest:test004()
6844=UnderscoresInLiteralsTest:test016()
6845=UnderscoresInLiteralsTest:test005()
6846=UnderscoresInLiteralsTest:test017()
6847=UnderscoresInLiteralsTest:test018()
6848=UnderscoresInLiteralsTest:test006()
6849=UnderscoresInLiteralsTest:test007()
6850=UnderscoresInLiteralsTest:test019()
6851=UnderscoresInLiteralsTest:test008()
6852=UnderscoresInLiteralsTest:test009()
6853=ErrorTypeElement:getTypeParameters()
6854=ErrorTypeElement:ErrorTypeElement(BaseProcessingEnvImpl, ReferenceBinding)
6855=ErrorTypeElement:getEnclosedElements()
6856=ErrorTypeElement:getKind()
6857=ErrorTypeElement:getInterfaces()
6858=ErrorTypeElement:getAnnotationMirrors()
6859=ErrorTypeElement:getQualifiedName()
6860=ErrorTypeElement:getAnnotation(Class<A>)
6861=ErrorTypeElement:getNestingKind()
6862=ErrorTypeElement:asType()
6863=ErrorTypeElement:getModifiers()
6864=ErrorTypeElement:getAnnotationsByType(Class<A>)
6865=ErrorTypeElement:getSuperclass()
6866=ErrorTypeElement:getEnclosingElement()
6867=ErrorTypeElement:getSimpleName()
6868=HandleFactory:createElement(ClassScope, ICompilationUnit, HashSet, HashMap)
6869=HandleFactory:createLambdaTypeElement(LambdaExpression, ICompilationUnit, HashSet, HashMap)
6870=HandleFactory:getJarPkgFragmentRoot(String, int, String, IJavaSearchScope)
6871=HandleFactory:getPkgFragmentRoot(String)
6872=HandleFactory:createOpenable(String, IJavaSearchScope)
6873=HandleFactory:HandleFactory()
6874=HandleFactory:createElement(Scope, int, ICompilationUnit, HashSet, HashMap)
6875=HandleFactory:getJarPkgFragmentRoot(IPath, Object, IJavaProject[])
6876=A:updateAnnotation()
6877=Test:foo(String)
6878=X:foo(int)
6879=Test:m()
6880=TestAll:TestAll(String)
6881=TestAll:suite()
6882=BinaryExpression:traverse(ASTVisitor, BlockScope)
6883=BinaryExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
6884=BinaryExpression:generateCode(BlockScope, CodeStream, boolean)
6885=BinaryExpression:generateOptimizedLogicalAnd(BlockScope, CodeStream, Label, Label, boolean)
6886=BinaryExpression:BinaryExpression(Expression, Expression, int)
6887=BinaryExpression:resolveType(BlockScope)
6888=BinaryExpression:optimizedBooleanConstant(int, int, int)
6889=BinaryExpression:optimizedBooleanConstant()
6890=BinaryExpression:generateOptimizedGreaterThanOrEqual(BlockScope, CodeStream, Label, Label, boolean)
6891=BinaryExpression:generateOptimizedGreaterThan(BlockScope, CodeStream, Label, Label, boolean)
6892=BinaryExpression:generateOptimizedLessThanOrEqual(BlockScope, CodeStream, Label, Label, boolean)
6893=BinaryExpression:generateOptimizedBoolean(BlockScope, CodeStream, Label, Label, boolean)
6894=BinaryExpression:generateOptimizedLessThan(BlockScope, CodeStream, Label, Label, boolean)
6895=BinaryExpression:isCompactableOperation()
6896=BinaryExpression:generateOptimizedLogicalXor(BlockScope, CodeStream, Label, Label, boolean)
6897=BinaryExpression:computeConstant(BlockScope, int, int)
6898=BinaryExpression:generateOptimizedLogicalOr(BlockScope, CodeStream, Label, Label, boolean)
6899=BinaryExpression:printExpressionNoParenthesis(int, StringBuffer)
6900=BinaryExpression:generateOptimizedStringConcatenationCreation(BlockScope, CodeStream, int)
6901=BinaryExpression:generateOptimizedStringConcatenation(BlockScope, CodeStream, int)
6902=Test:bar()
6903=Test:foo(int)
6904=ReferenceCollection:ReferenceCollection(char[][][], char[][], char[][])
6905=ReferenceCollection:includes(char[][])
6906=ReferenceCollection:internQualifiedNames(char[][][])
6907=ReferenceCollection:internQualifiedNames(char[][][], boolean)
6908=ReferenceCollection:includes(char[])
6909=ReferenceCollection:internQualifiedNames(StringSet)
6910=ReferenceCollection:internSimpleNames(StringSet)
6911=ReferenceCollection:includes(char[][][], char[][], char[][])
6912=ReferenceCollection:insideRoot(char[])
6913=ReferenceCollection:includes(char[][][], char[][])
6914=ReferenceCollection:internSimpleNames(char[][], boolean)
6915=ReferenceCollection:internSimpleNames(StringSet, boolean)
6916=ReferenceCollection:addDependencies(String[])
6917=Unicode18Test:test426214()
6918=Unicode18Test:suite()
6919=Unicode18Test:testClass()
6920=Unicode18Test:Unicode18Test(String)
6921=Unicode18Test:test426214_4()
6922=Unicode18Test:test426214_3()
6923=Unicode18Test:test426214_2()
6924=ASTRewritingTrackingTest:testNamesWithDelete()
6925=ASTRewritingTrackingTest:testNamesWithMove2()
6926=ASTRewritingTrackingTest:ASTRewritingTrackingTest(String, int)
6927=ASTRewritingTrackingTest:suite()
6928=ASTRewritingTrackingTest:testNamesWithInsert_only_2_3_4()
6929=ASTRewritingTrackingTest:testNamesWithPlaceholder()
6930=ASTRewritingTrackingTest:ASTRewritingTrackingTest(String)
6931=ASTRewritingTrackingTest:testNamesWithReplace_only_2()
6932=ASTRewritingTrackingTest:testNamesWithMove3_only_2_3_4()
6933=ASTRewritingTrackingTest:internalSetExtraDimensions(VariableDeclarationFragment, int)
6934=ASTRewritingTrackingTest:assertCorrectTracking(List, List, String)
6935=ASTRewritingTrackingTest:testNamesWithMove1_only_2_3_4()
6936=ObjectCache:size()
6937=ObjectCache:ObjectCache(int)
6938=ObjectCache:get(Object)
6939=ObjectCache:containsKey(Object)
6940=ObjectCache:rehash()
6941=ObjectCache:ObjectCache()
6942=ObjectCache:put(Object, int)
6943=ObjectCache:clear()
6944=ObjectCache:toString()
6945=ObjectCache:hashCode(Object)
6946=X:m(Test)
6947=NoReferenceF:foo()
6948=A:useFile(File)
6949=Test:foo()
6950=A:getFile()
6951=X28d:foo(String)
6952=A:goo(C)
6953=ReturnStatement:getNodeType0()
6954=ReturnStatement:clone0(AST)
6955=ReturnStatement:ReturnStatement(AST)
6956=ReturnStatement:subtreeMatch0(ASTMatcher, Object)
6957=ReturnStatement:propertyDescriptors(int)
6958=ReturnStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
6959=ReturnStatement:memSize()
6960=ReturnStatement:internalStructuralPropertiesForType(int)
6961=ReturnStatement:accept0(ASTVisitor)
6962=ReturnStatement:treeSize()
6963=ReturnStatement:getExpression()
6964=ReturnStatement:setExpression(Expression)
6965=SanityTestEvaluationResult:testGetValueDisplayString()
6966=SanityTestEvaluationResult:testClass()
6967=SanityTestEvaluationResult:testHasProblems()
6968=SanityTestEvaluationResult:testHasWarnings()
6969=SanityTestEvaluationResult:testHasValue()
6970=SanityTestEvaluationResult:testGetValueTypeName()
6971=SanityTestEvaluationResult:suite()
6972=SanityTestEvaluationResult:testGetEvaluationType()
6973=SanityTestEvaluationResult:SanityTestEvaluationResult(String)
6974=SanityTestEvaluationResult:setUp()
6975=SanityTestEvaluationResult:testHasErrors()
6976=SanityTestEvaluationResult:testGetProblems()
6977=SanityTestEvaluationResult:testGetValue()
6978=X02:setCharset(String, Object)
6979=A:foo()
6980=A:run()
6981=JavadocParser:createTypeReference(int)
6982=JavadocParser:pushSeeRef(Object)
6983=JavadocParser:updateDocComment()
6984=JavadocParser:toString()
6985=JavadocParser:checkDeprecation(int, int)
6986=JavadocParser:pushParamName()
6987=JavadocParser:parseTag(int)
6988=JavadocParser:createReturnStatement()
6989=JavadocParser:createFieldReference(Object)
6990=JavadocParser:createTag()
6991=JavadocParser:createMethodReference(Object, List)
6992=JavadocParser:createArgumentReference(char[], int, Object, long[], long)
6993=JavadocParser:JavadocParser(Parser)
6994=JavadocParser:pushText(int, int)
6995=JavadocParser:pushThrowName(Object)
6996=JavadocParser:parseReturn()
6997=Foo:m1()
6998=CompletionOnFieldName:printStatement(int, StringBuffer)
6999=CompletionOnFieldName:resolve(MethodScope)
7000=CompletionOnFieldName:CompletionOnFieldName(char[], int, int)
7001=X:foo()
7002=BuildpathTests:getJdkLevelProblem(String, String, int)
7003=BuildpathTests:tearDown()
7004=BuildpathTests:testCorruptBuilder()
7005=BuildpathTests:test0100()
7006=BuildpathTests:testMissingFieldType()
7007=BuildpathTests:testExternalJarChange()
7008=BuildpathTests:testMissingLibrary2()
7009=BuildpathTests:testClosedProject()
7010=BuildpathTests:testMissingLibrary1()
7011=BuildpathTests:testMissingOutputFolder()
7012=BuildpathTests:BuildpathTests(String)
7013=BuildpathTests:testChangeZIPArchive2()
7014=BuildpathTests:testMissingLibrary4()
7015=BuildpathTests:testIncompatibleJdkLEvelOnWksp()
7016=BuildpathTests:testCorruptBuilder2()
7017=BuildpathTests:testMissingLibrary3()
7018=BuildpathTests:testIncompatibleJdkLEvelOnProject()
7019=BuildpathTests:testChangeZIPArchive1()
7020=BuildpathTests:testMissingBuilder()
7021=BuildpathTests:testMissingOptionalProject()
7022=BuildpathTests:testClasspathFileChange()
7023=BuildpathTests:suite()
7024=BuildpathTests:testMissingProject()
7025=BuildpathTests:testChangeExternalFolder()
7026=BuildpathTests:setUp()
7027=SomeClass:foo()
7028=SwitchTest:testStringSwitchAtJDK6()
7029=SwitchTest:test019()
7030=SwitchTest:testSideEffect()
7031=SwitchTest:test007()
7032=SwitchTest:testBug380927e()
7033=SwitchTest:test018()
7034=SwitchTest:testMultipleSwitches()
7035=SwitchTest:testBug380927d()
7036=SwitchTest:test006()
7037=SwitchTest:testFallThrough()
7038=SwitchTest:testBug380927c()
7039=SwitchTest:test009()
7040=SwitchTest:test387146b()
7041=SwitchTest:test008()
7042=SwitchTest:testBug380927b()
7043=SwitchTest:test387146a()
7044=SwitchTest:testFor356002_3()
7045=SwitchTest:test410892_2()
7046=SwitchTest:testBug380927a()
7047=SwitchTest:testSwitchOnNull()
7048=SwitchTest:testCaseTypeMismatch3()
7049=SwitchTest:testBug374605()
7050=SwitchTest:test020()
7051=SwitchTest:testCaseTypeMismatch2()
7052=SwitchTest:SwitchTest(String)
7053=SwitchTest:testCaseTypeMismatch()
7054=SwitchTest:testVariableCaseFinal()
7055=SwitchTest:test410892()
7056=SwitchTest:test011()
7057=SwitchTest:testNestedSwitches()
7058=SwitchTest:test022()
7059=SwitchTest:test410892_6()
7060=SwitchTest:test010()
7061=SwitchTest:test021()
7062=SwitchTest:test410892_5()
7063=SwitchTest:test013()
7064=SwitchTest:testNullCase()
7065=SwitchTest:testDuplicateHashCode2()
7066=SwitchTest:test410892_4()
7067=SwitchTest:test001()
7068=SwitchTest:testFor356002_2()
7069=SwitchTest:test012()
7070=SwitchTest:testFallThrough2()
7071=SwitchTest:testDuplicateCase()
7072=SwitchTest:test023()
7073=SwitchTest:test410892_3()
7074=SwitchTest:test015()
7075=SwitchTest:testDuplicateCase2()
7076=SwitchTest:test003()
7077=SwitchTest:testBug380927()
7078=SwitchTest:testBreakOut()
7079=SwitchTest:test383643()
7080=SwitchTest:test014()
7081=SwitchTest:test393537()
7082=SwitchTest:testVariableCase()
7083=SwitchTest:testBug381172()
7084=SwitchTest:test002()
7085=SwitchTest:testBug383629()
7086=SwitchTest:testClass()
7087=SwitchTest:test017()
7088=SwitchTest:suite()
7089=SwitchTest:testBug380927g()
7090=SwitchTest:test005()
7091=SwitchTest:testMarysLamb()
7092=SwitchTest:testFor356002()
7093=SwitchTest:test016()
7094=SwitchTest:testDuplicateCase3()
7095=SwitchTest:test004()
7096=SwitchTest:testBug380927f()
7097=SwitchTest:testDuplicateHashCode()
7098=A:A(M, N)
7099=B:getMap(M, N)
7100=A:getMap(M, N)
7101=A:A()
7102=AMap:createAMap(String, String)
7103=B:B(M, N)
7104=AMethod:getMap(String, String)
7105=AMap:AMap(String, String)
7106=AnnotationComponentValue:getAnnotationValue()
7107=AnnotationComponentValue:getConstantValue()
7108=AnnotationComponentValue:sizeInBytes()
7109=AnnotationComponentValue:getTag()
7110=AnnotationComponentValue:getEnumConstantNameIndex()
7111=AnnotationComponentValue:getEnumConstantTypeNameIndex()
7112=AnnotationComponentValue:getAnnotationComponentValues()
7113=AnnotationComponentValue:getClassInfoIndex()
7114=AnnotationComponentValue:getEnumConstantName()
7115=AnnotationComponentValue:AnnotationComponentValue(byte[], IConstantPool, int)
7116=AnnotationComponentValue:getEnumConstantTypeName()
7117=AnnotationComponentValue:getConstantValueIndex()
7118=AnnotationComponentValue:getClassInfo()
7119=AnnotationComponentValue:getValuesNumber()
7120=X:foo(Map< @Marker? super @Marker Object,  @Marker? extends @Marker String>)
7121=X:goo(Map< @Marker? extends @Marker Object,  @Marker? super @Marker String>)
7122=JavadocAllocationExpression:JavadocAllocationExpression(long)
7123=JavadocAllocationExpression:resolveType(BlockScope)
7124=JavadocAllocationExpression:traverse(ASTVisitor, BlockScope)
7125=JavadocAllocationExpression:JavadocAllocationExpression(int, int)
7126=JavadocAllocationExpression:isSuperAccess()
7127=JavadocAllocationExpression:internalResolveType(Scope)
7128=JavadocAllocationExpression:resolveType(ClassScope)
7129=JavadocAllocationExpression:traverse(ASTVisitor, ClassScope)
7130=CompletionOnAnnotationMemberValuePair:CompletionOnAnnotationMemberValuePair(TypeReference, int, MemberValuePair[], MemberValuePair)
7131=CompletionOnAnnotationMemberValuePair:printExpression(int, StringBuffer)
7132=CompletionOnAnnotationMemberValuePair:resolveType(BlockScope)
7133=InvocationSite:sourceStart()
7134=InvocationSite:isTypeAccess()
7135=InvocationSite:setFieldIndex(int)
7136=InvocationSite:setDepth(int)
7137=InvocationSite:setActualReceiverType(ReferenceBinding)
7138=InvocationSite:genericTypeArguments()
7139=InvocationSite:sourceEnd()
7140=InvocationSite:isSuperAccess()
7141=ByteCodeVisitorAdapter:_anewarray(int, int, IConstantPoolEntry)
7142=ByteCodeVisitorAdapter:_dload_3(int)
7143=ByteCodeVisitorAdapter:_dup2_x2(int)
7144=ByteCodeVisitorAdapter:_faload(int)
7145=ByteCodeVisitorAdapter:_ifge(int, int)
7146=ByteCodeVisitorAdapter:_ladd(int)
7147=ByteCodeVisitorAdapter:_wide(int, int, int)
7148=ByteCodeVisitorAdapter:_lshr(int)
7149=ByteCodeVisitorAdapter:_iconst_2(int)
7150=ByteCodeVisitorAdapter:_fconst_2(int)
7151=ByteCodeVisitorAdapter:_ineg(int)
7152=ByteCodeVisitorAdapter:_l2f(int)
7153=ByteCodeVisitorAdapter:_iadd(int)
7154=ByteCodeVisitorAdapter:_d2f(int)
7155=ByteCodeVisitorAdapter:_isub(int)
7156=ByteCodeVisitorAdapter:_saload(int)
7157=ByteCodeVisitorAdapter:_daload(int)
7158=ByteCodeVisitorAdapter:_i2c(int)
7159=ByteCodeVisitorAdapter:_astore(int, int)
7160=ByteCodeVisitorAdapter:_fload(int, int)
7161=ByteCodeVisitorAdapter:_iflt(int, int)
7162=ByteCodeVisitorAdapter:_f2d(int)
7163=ByteCodeVisitorAdapter:_ifgt(int, int)
7164=ByteCodeVisitorAdapter:_new(int, int, IConstantPoolEntry)
7165=ByteCodeVisitorAdapter:_fadd(int)
7166=ByteCodeVisitorAdapter:_lsub(int)
7167=ByteCodeVisitorAdapter:_newarray(int, int)
7168=ByteCodeVisitorAdapter:_aload_2(int)
7169=ByteCodeVisitorAdapter:_fcmpg(int)
7170=ByteCodeVisitorAdapter:_f2l(int)
7171=ByteCodeVisitorAdapter:_dup2(int)
7172=ByteCodeVisitorAdapter:_dstore_2(int)
7173=ByteCodeVisitorAdapter:_putstatic(int, int, IConstantPoolEntry)
7174=ByteCodeVisitorAdapter:_fstore_2(int)
7175=ByteCodeVisitorAdapter:_fstore_1(int)
7176=ByteCodeVisitorAdapter:_dcmpl(int)
7177=ByteCodeVisitorAdapter:_land(int)
7178=ByteCodeVisitorAdapter:_lload_1(int)
7179=ByteCodeVisitorAdapter:_areturn(int)
7180=ByteCodeVisitorAdapter:_drem(int)
7181=ByteCodeVisitorAdapter:_ior(int)
7182=ByteCodeVisitorAdapter:_iand(int)
7183=ByteCodeVisitorAdapter:_iload_0(int)
7184=ByteCodeVisitorAdapter:_lstore_1(int)
7185=ByteCodeVisitorAdapter:_fload_2(int)
7186=ByteCodeVisitorAdapter:_l2i(int)
7187=ByteCodeVisitorAdapter:_aastore(int)
7188=ByteCodeVisitorAdapter:_goto(int, int)
7189=ByteCodeVisitorAdapter:_multianewarray(int, int, int, IConstantPoolEntry)
7190=ByteCodeVisitorAdapter:_fsub(int)
7191=ByteCodeVisitorAdapter:_i2d(int)
7192=ByteCodeVisitorAdapter:_fload_3(int)
7193=ByteCodeVisitorAdapter:_iinc(int, int, int)
7194=ByteCodeVisitorAdapter:_lstore_2(int)
7195=ByteCodeVisitorAdapter:_idiv(int)
7196=ByteCodeVisitorAdapter:_if_icmpeq(int, int)
7197=ByteCodeVisitorAdapter:_dup2_x1(int)
7198=ByteCodeVisitorAdapter:_ldc(int, int, IConstantPoolEntry)
7199=ByteCodeVisitorAdapter:_laload(int)
7200=ByteCodeVisitorAdapter:_fmul(int)
7201=ByteCodeVisitorAdapter:_i2s(int)
7202=ByteCodeVisitorAdapter:_ifeq(int, int)
7203=ByteCodeVisitorAdapter:_frem(int)
7204=ByteCodeVisitorAdapter:_dup(int)
7205=ByteCodeVisitorAdapter:_lushr(int)
7206=ByteCodeVisitorAdapter:_invokedynamic(int, int, IConstantPoolEntry, IConstantPoolEntry)
7207=ByteCodeVisitorAdapter:_d2i(int)
7208=ByteCodeVisitorAdapter:_dconst_1(int)
7209=ByteCodeVisitorAdapter:_lmul(int)
7210=ByteCodeVisitorAdapter:_pop(int)
7211=ByteCodeVisitorAdapter:_aaload(int)
7212=ByteCodeVisitorAdapter:_instanceof(int, int, IConstantPoolEntry)
7213=ByteCodeVisitorAdapter:_astore_1(int)
7214=ByteCodeVisitorAdapter:_invokestatic(int, int, IConstantPoolEntry)
7215=ByteCodeVisitorAdapter:_lconst_1(int)
7216=ByteCodeVisitorAdapter:_ldc2_w(int, int, IConstantPoolEntry)
7217=ByteCodeVisitorAdapter:_invokevirtual(int, int, IConstantPoolEntry)
7218=ByteCodeVisitorAdapter:_lstore(int, int)
7219=ByteCodeVisitorAdapter:_iload_2(int)
7220=ByteCodeVisitorAdapter:_d2l(int)
7221=ByteCodeVisitorAdapter:_impdep1(int)
7222=ByteCodeVisitorAdapter:_astore_3(int)
7223=ByteCodeVisitorAdapter:_getfield(int, int, IConstantPoolEntry)
7224=ByteCodeVisitorAdapter:_if_acmpeq(int, int)
7225=ByteCodeVisitorAdapter:_sastore(int)
7226=ByteCodeVisitorAdapter:_dup_x2(int)
7227=ByteCodeVisitorAdapter:_istore_1(int)
7228=ByteCodeVisitorAdapter:_jsr_w(int, int)
7229=ByteCodeVisitorAdapter:_ddiv(int)
7230=ByteCodeVisitorAdapter:_istore_3(int)
7231=ByteCodeVisitorAdapter:_i2b(int)
7232=ByteCodeVisitorAdapter:_dstore_0(int)
7233=ByteCodeVisitorAdapter:_baload(int)
7234=ByteCodeVisitorAdapter:_putfield(int, int, IConstantPoolEntry)
7235=ByteCodeVisitorAdapter:_dastore(int)
7236=ByteCodeVisitorAdapter:_fconst_0(int)
7237=ByteCodeVisitorAdapter:_sipush(int, short)
7238=ByteCodeVisitorAdapter:_lcmp(int)
7239=ByteCodeVisitorAdapter:_fload_0(int)
7240=ByteCodeVisitorAdapter:_dstore(int, int)
7241=ByteCodeVisitorAdapter:_caload(int)
7242=ByteCodeVisitorAdapter:_dreturn(int)
7243=ByteCodeVisitorAdapter:_ifnull(int, int)
7244=ByteCodeVisitorAdapter:_swap(int)
7245=ByteCodeVisitorAdapter:_ishl(int)
7246=ByteCodeVisitorAdapter:_ifle(int, int)
7247=ByteCodeVisitorAdapter:_aconst_null(int)
7248=ByteCodeVisitorAdapter:_if_icmpge(int, int)
7249=ByteCodeVisitorAdapter:_if_icmpgt(int, int)
7250=ByteCodeVisitorAdapter:_dneg(int)
7251=ByteCodeVisitorAdapter:_istore(int, int)
7252=ByteCodeVisitorAdapter:_fcmpl(int)
7253=ByteCodeVisitorAdapter:_dcmpg(int)
7254=ByteCodeVisitorAdapter:_dload_1(int)
7255=ByteCodeVisitorAdapter:_lastore(int)
7256=ByteCodeVisitorAdapter:_dsub(int)
7257=ByteCodeVisitorAdapter:_lstore_0(int)
7258=ByteCodeVisitorAdapter:_lreturn(int)
7259=ByteCodeVisitorAdapter:_i2l(int)
7260=ByteCodeVisitorAdapter:_if_icmplt(int, int)
7261=ByteCodeVisitorAdapter:_iconst_4(int)
7262=ByteCodeVisitorAdapter:_tableswitch(int, int, int, int, int[])
7263=ByteCodeVisitorAdapter:_lrem(int)
7264=ByteCodeVisitorAdapter:_monitorexit(int)
7265=ByteCodeVisitorAdapter:_iushr(int)
7266=ByteCodeVisitorAdapter:_lload_2(int)
7267=ByteCodeVisitorAdapter:_dmul(int)
7268=ByteCodeVisitorAdapter:_castore(int)
7269=ByteCodeVisitorAdapter:_lxor(int)
7270=ByteCodeVisitorAdapter:_lstore_3(int)
7271=ByteCodeVisitorAdapter:_return(int)
7272=ByteCodeVisitorAdapter:_if_icmple(int, int)
7273=ByteCodeVisitorAdapter:_istore_0(int)
7274=ByteCodeVisitorAdapter:_ixor(int)
7275=ByteCodeVisitorAdapter:_dstore_3(int)
7276=ByteCodeVisitorAdapter:_goto_w(int, int)
7277=ByteCodeVisitorAdapter:_fstore_3(int)
7278=ByteCodeVisitorAdapter:_ifnonnull(int, int)
7279=ByteCodeVisitorAdapter:_aload_0(int)
7280=ByteCodeVisitorAdapter:_aload(int, int)
7281=ByteCodeVisitorAdapter:_astore_0(int)
7282=ByteCodeVisitorAdapter:_if_icmpne(int, int)
7283=ByteCodeVisitorAdapter:_iconst_0(int)
7284=ByteCodeVisitorAdapter:_invokespecial(int, int, IConstantPoolEntry)
7285=ByteCodeVisitorAdapter:_aload_1(int)
7286=ByteCodeVisitorAdapter:_fstore(int, int)
7287=ByteCodeVisitorAdapter:_irem(int)
7288=ByteCodeVisitorAdapter:_l2d(int)
7289=ByteCodeVisitorAdapter:_athrow(int)
7290=ByteCodeVisitorAdapter:_dadd(int)
7291=ByteCodeVisitorAdapter:_bipush(int, byte)
7292=ByteCodeVisitorAdapter:_lor(int)
7293=ByteCodeVisitorAdapter:_ldc_w(int, int, IConstantPoolEntry)
7294=ByteCodeVisitorAdapter:_aload_3(int)
7295=ByteCodeVisitorAdapter:_i2f(int)
7296=ByteCodeVisitorAdapter:_iconst_3(int)
7297=ByteCodeVisitorAdapter:_dload(int, int)
7298=ByteCodeVisitorAdapter:_dload_2(int)
7299=ByteCodeVisitorAdapter:_invokedynamic(int, int, IConstantPoolEntry)
7300=ByteCodeVisitorAdapter:_iload(int, int)
7301=ByteCodeVisitorAdapter:_iconst_5(int)
7302=ByteCodeVisitorAdapter:_ireturn(int)
7303=ByteCodeVisitorAdapter:_f2i(int)
7304=ByteCodeVisitorAdapter:_fconst_1(int)
7305=ByteCodeVisitorAdapter:_arraylength(int)
7306=ByteCodeVisitorAdapter:_if_acmpne(int, int)
7307=ByteCodeVisitorAdapter:_invokeinterface(int, int, byte, IConstantPoolEntry)
7308=ByteCodeVisitorAdapter:_fdiv(int)
7309=ByteCodeVisitorAdapter:_checkcast(int, int, IConstantPoolEntry)
7310=ByteCodeVisitorAdapter:_dstore_1(int)
7311=ByteCodeVisitorAdapter:_breakpoint(int)
7312=ByteCodeVisitorAdapter:_wide(int, int, int, int)
7313=ByteCodeVisitorAdapter:_lload_3(int)
7314=ByteCodeVisitorAdapter:_imul(int)
7315=ByteCodeVisitorAdapter:_iconst_1(int)
7316=ByteCodeVisitorAdapter:_iastore(int)
7317=ByteCodeVisitorAdapter:_lload_0(int)
7318=ByteCodeVisitorAdapter:_getstatic(int, int, IConstantPoolEntry)
7319=ByteCodeVisitorAdapter:_dup_x1(int)
7320=ByteCodeVisitorAdapter:_fload_1(int)
7321=ByteCodeVisitorAdapter:_impdep2(int)
7322=ByteCodeVisitorAdapter:_iload_1(int)
7323=ByteCodeVisitorAdapter:_pop2(int)
7324=ByteCodeVisitorAdapter:_astore_2(int)
7325=ByteCodeVisitorAdapter:_fneg(int)
7326=ByteCodeVisitorAdapter:_fastore(int)
7327=ByteCodeVisitorAdapter:_lshl(int)
7328=ByteCodeVisitorAdapter:_ret(int, int)
7329=ByteCodeVisitorAdapter:_iconst_m1(int)
7330=ByteCodeVisitorAdapter:_iload_3(int)
7331=ByteCodeVisitorAdapter:_fstore_0(int)
7332=ByteCodeVisitorAdapter:_iaload(int)
7333=ByteCodeVisitorAdapter:_monitorenter(int)
7334=ByteCodeVisitorAdapter:_freturn(int)
7335=ByteCodeVisitorAdapter:_lconst_0(int)
7336=ByteCodeVisitorAdapter:_jsr(int, int)
7337=ByteCodeVisitorAdapter:_dconst_0(int)
7338=ByteCodeVisitorAdapter:_nop(int)
7339=ByteCodeVisitorAdapter:_ifne(int, int)
7340=ByteCodeVisitorAdapter:_lookupswitch(int, int, int, int[][])
7341=ByteCodeVisitorAdapter:_bastore(int)
7342=ByteCodeVisitorAdapter:_dload_0(int)
7343=ByteCodeVisitorAdapter:_lload(int, int)
7344=ByteCodeVisitorAdapter:_ishr(int)
7345=ByteCodeVisitorAdapter:_lneg(int)
7346=ByteCodeVisitorAdapter:_istore_2(int)
7347=ByteCodeVisitorAdapter:_ldiv(int)
7348=MirrorUtilTests:MirrorUtilTests(String)
7349=MirrorUtilTests:testMirrorUtils()
7350=MirrorUtilTests:setUp()
7351=MirrorUtilTests:addEnvOptions(IJavaProject)
7352=MirrorUtilTests:assertNoUnexpectedProblems()
7353=MirrorUtilTests:suite()
7354=CommitWorkingCopyOperation:verify()
7355=CommitWorkingCopyOperation:getCompilationUnit()
7356=CommitWorkingCopyOperation:executeOperation()
7357=CommitWorkingCopyOperation:CommitWorkingCopyOperation(ICompilationUnit, boolean)
7358=CommitWorkingCopyOperation:getSchedulingRule()
7359=A:f()
7360=X:foo()
7361=X:X(String)
7362=JavadocTestForClass:test007()
7363=JavadocTestForClass:test006()
7364=JavadocTestForClass:test005()
7365=JavadocTestForClass:JavadocTestForClass(String)
7366=JavadocTestForClass:test004()
7367=JavadocTestForClass:test049()
7368=JavadocTestForClass:test003()
7369=JavadocTestForClass:test048()
7370=JavadocTestForClass:test013()
7371=JavadocTestForClass:test002()
7372=JavadocTestForClass:test012()
7373=JavadocTestForClass:test001()
7374=JavadocTestForClass:test047()
7375=JavadocTestForClass:test024()
7376=JavadocTestForClass:test011()
7377=JavadocTestForClass:javadocTestClass()
7378=JavadocTestForClass:test023()
7379=JavadocTestForClass:test046()
7380=JavadocTestForClass:getCompilerOptions()
7381=JavadocTestForClass:test010()
7382=JavadocTestForClass:test033()
7383=JavadocTestForClass:test056()
7384=JavadocTestForClass:test022()
7385=JavadocTestForClass:test045()
7386=JavadocTestForClass:test032()
7387=JavadocTestForClass:test055()
7388=JavadocTestForClass:test021()
7389=JavadocTestForClass:test044()
7390=JavadocTestForClass:test054()
7391=JavadocTestForClass:test031()
7392=JavadocTestForClass:test043()
7393=JavadocTestForClass:test020()
7394=JavadocTestForClass:test030()
7395=JavadocTestForClass:test053()
7396=JavadocTestForClass:test042()
7397=JavadocTestForClass:test052()
7398=JavadocTestForClass:test041()
7399=JavadocTestForClass:suite()
7400=JavadocTestForClass:test051()
7401=JavadocTestForClass:test040()
7402=JavadocTestForClass:test009()
7403=JavadocTestForClass:test050()
7404=JavadocTestForClass:test008()
7405=InferenceSubstitution:environment()
7406=InferenceSubstitution:substitute(Substitution, TypeBinding)
7407=InferenceSubstitution:isRawSubstitution()
7408=InferenceSubstitution:InferenceSubstitution(InferenceContext18)
7409=InferenceSubstitution:substitute(TypeVariableBinding)
7410=InferenceSubstitution:InferenceSubstitution(LookupEnvironment, InferenceVariable[], InvocationSite)
7411=InferenceSubstitution:getP(int)
7412=ArrayInitializer:printExpression(int, StringBuffer)
7413=ArrayInitializer:analyseCode(BlockScope, FlowContext, FlowInfo)
7414=ArrayInitializer:ArrayInitializer()
7415=ArrayInitializer:traverse(ASTVisitor, BlockScope)
7416=ArrayInitializer:resolveTypeExpecting(BlockScope, TypeBinding)
7417=ArrayInitializer:generateCode(BlockScope, CodeStream, boolean)
7418=SuperFieldAccess:propertyDescriptors(int)
7419=SuperFieldAccess:getNodeType0()
7420=SuperFieldAccess:subtreeMatch0(ASTMatcher, Object)
7421=SuperFieldAccess:accept0(ASTVisitor)
7422=SuperFieldAccess:getName()
7423=SuperFieldAccess:internalStructuralPropertiesForType(int)
7424=SuperFieldAccess:resolveFieldBinding()
7425=SuperFieldAccess:SuperFieldAccess(AST)
7426=SuperFieldAccess:setQualifier(Name)
7427=SuperFieldAccess:memSize()
7428=SuperFieldAccess:setName(SimpleName)
7429=SuperFieldAccess:getQualifier()
7430=SuperFieldAccess:treeSize()
7431=SuperFieldAccess:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
7432=SuperFieldAccess:clone0(AST)
7433=X:main(String[])
7434=Test:foo()
7435=FactoryPluginManager:loadFactoryPlugins()
7436=FactoryPluginManager:getJava6FactoryFromPlugin(String)
7437=FactoryPluginManager:getJava6PluginFactoryMap()
7438=FactoryPluginManager:getJava5PluginFactoryMap()
7439=FactoryPluginManager:getPluginFactoryContainer(String)
7440=FactoryPluginManager:loadJava6Factories(IExtension, IConfigurationElement)
7441=FactoryPluginManager:getJava5FactoryFromPlugin(String)
7442=FactoryPluginManager:getPluginContainerMap()
7443=FactoryPluginManager:getAllPluginFactoryContainers()
7444=FactoryPluginManager:loadJava5Factories(IExtension, IConfigurationElement)
7445=FactoryPluginManager:reportFailureToLoadProcessor(Exception, String, String)
7446=TestMethInvalid:foo1()
7447=TestMethInvalid:foo2()
7448=TestMethInvalid:foo3()
7449=X07:foo()
7450=A:m(String)
7451=JarClassLoader:getPackageName(String)
7452=JarClassLoader:findClass(String)
7453=JarClassLoader:getResourceAsStream(String)
7454=JarClassLoader:openInputStream(InputStream)
7455=JarClassLoader:close()
7456=JarClassLoader:closeInputStream(JarCLInputStream)
7457=JarClassLoader:getResources(String)
7458=JarClassLoader:JarCLInputStream:available()
7459=JarClassLoader:JarCLInputStream:skip(long)
7460=JarClassLoader:_recursiveGetManifestJars(File, Set<File>)
7461=JarClassLoader:getResource(String)
7462=JarClassLoader:JarCLInputStream:read(byte[], int, int)
7463=JarClassLoader:JarCLInputStream:read()
7464=JarClassLoader:JarCLInputStream:read(byte[])
7465=JarClassLoader:open()
7466=JarClassLoader:JarCLInputStream:mark(int)
7467=JarClassLoader:JarCLInputStream:markSupported()
7468=JarClassLoader:loadClassData(String)
7469=JarClassLoader:JarClassLoader(List<File>, ClassLoader)
7470=JarClassLoader:JarCLInputStream:reset()
7471=JarClassLoader:JarCLInputStream:JarCLInputStream(InputStream)
7472=JarClassLoader:JarCLInputStream:close()
7473=IClassFileReader:getFieldsCount()
7474=IClassFileReader:isInterface()
7475=IClassFileReader:getAttributeCount()
7476=IClassFileReader:getAccessFlags()
7477=IClassFileReader:getSuperclassIndex()
7478=IClassFileReader:isClass()
7479=IClassFileReader:getMethodInfos()
7480=IClassFileReader:getFieldInfos()
7481=IClassFileReader:getInterfaceIndexes()
7482=IClassFileReader:getMagic()
7483=IClassFileReader:getConstantPool()
7484=IClassFileReader:getMajorVersion()
7485=IClassFileReader:getInnerClassesAttribute()
7486=IClassFileReader:getClassIndex()
7487=IClassFileReader:getSuperclassName()
7488=IClassFileReader:getMinorVersion()
7489=IClassFileReader:getSourceFileAttribute()
7490=IClassFileReader:getInterfaceNames()
7491=IClassFileReader:getClassName()
7492=IClassFileReader:getMethodsCount()
7493=IClassFileReader:getAttributes()
7494=Parser:foo()
7495=X03:foo3()
7496=X03:foo1()
7497=X03:foo2()
7498=X03:foo0()
7499=FullSourceWorkspaceFormatterTests:tearDown()
7500=FullSourceWorkspaceFormatterTests:testFormatDefault()
7501=FullSourceWorkspaceFormatterTests:FullSourceWorkspaceFormatterTests(String)
7502=FullSourceWorkspaceFormatterTests:testClass()
7503=FullSourceWorkspaceFormatterTests:resetCounters()
7504=FullSourceWorkspaceFormatterTests:testFormatDefaultBigFile()
7505=FullSourceWorkspaceFormatterTests:setUp()
7506=FullSourceWorkspaceFormatterTests:suite()
7507=A:setBorderType(JComponent, int)
7508=firstClass:myMethod()
7509=EnumDietRecoveryTest:test0009()
7510=EnumDietRecoveryTest:checkParse(char[], String, String, String, String, String)
7511=EnumDietRecoveryTest:EnumDietRecoveryTest(String)
7512=EnumDietRecoveryTest:getCompilerOptions()
7513=EnumDietRecoveryTest:test0006()
7514=EnumDietRecoveryTest:test0017()
7515=EnumDietRecoveryTest:test0005()
7516=EnumDietRecoveryTest:test0008()
7517=EnumDietRecoveryTest:test0007()
7518=EnumDietRecoveryTest:test0014()
7519=EnumDietRecoveryTest:test0002()
7520=EnumDietRecoveryTest:test0013()
7521=EnumDietRecoveryTest:test0001()
7522=EnumDietRecoveryTest:test0016()
7523=EnumDietRecoveryTest:test0004()
7524=EnumDietRecoveryTest:test0015()
7525=EnumDietRecoveryTest:test0003()
7526=EnumDietRecoveryTest:test0010()
7527=EnumDietRecoveryTest:test0012()
7528=EnumDietRecoveryTest:test0011()
7529=Reconcile2:test(MyFunction<A, @Nullable B>, MyFunction<B, C>, A)
7530=Reconcile2:test2(Arrays)
7531=RunComparableTests:suite()
7532=RunComparableTests:RunComparableTests(String)
7533=A:theMethod()
7534=C:world()
7535=A:foo(java.lang.String)
7536=CharOperationTest:suite()
7537=CharOperationTest:CharOperationTest(String)
7538=CharOperationTest:test007()
7539=CharOperationTest:test006()
7540=CharOperationTest:test005()
7541=CharOperationTest:testClass()
7542=CharOperationTest:test004()
7543=CharOperationTest:test003()
7544=CharOperationTest:test002()
7545=CharOperationTest:test001()
7546=CharOperationTest:test012()
7547=CharOperationTest:test011()
7548=CharOperationTest:test010()
7549=CharOperationTest:test009()
7550=CharOperationTest:test008()
7551=X:foo()
7552=X:main(String[])
7553=X07:test()
7554=X02b:foo()
7555=NameEnvironmentWithProgress:checkCanceled()
7556=NameEnvironmentWithProgress:isPackage(char[][], char[])
7557=NameEnvironmentWithProgress:setMonitor(IProgressMonitor)
7558=NameEnvironmentWithProgress:findType(char[], char[][])
7559=NameEnvironmentWithProgress:findType(char[], char[][], boolean)
7560=NameEnvironmentWithProgress:NameEnvironmentWithProgress(Classpath[], String[], IProgressMonitor)
7561=NameEnvironmentWithProgress:findType(char[][])
7562=A:foo()
7563=ResolveConstructorCallOfMemberType2:Inner:Inner()
7564=ResolveConstructorCallOfMemberType2:foo()
7565=TestRunView:activate()
7566=TestRunView:runFinished(Test, TestResult)
7567=TestRunView:getSelectedTest()
7568=TestRunView:aboutToStart(Test, TestResult)
7569=TestRunView:addTab(JTabbedPane)
7570=TestRunView:revealFailure(Test)
7571=SourcePositionImpl:getLength()
7572=SourcePositionImpl:SourcePositionImpl(int, int, int, int, AnnotationValueImpl)
7573=SourcePositionImpl:line()
7574=SourcePositionImpl:SourcePositionImpl(int, int, int, int, AnnotationMirrorImpl)
7575=SourcePositionImpl:getResource()
7576=SourcePositionImpl:file()
7577=SourcePositionImpl:getEndingOffset()
7578=SourcePositionImpl:column()
7579=SourcePositionImpl:SourcePositionImpl(int, int, int, int, EclipseDeclarationImpl)
7580=SourcePositionImpl:toString()
7581=SourcePositionImpl:getStartingOffset()
7582=Y:foo()
7583=Y:bar()
7584=MementoTests:testSourceTypeMemento()
7585=MementoTests:testPackageFragmentRootMemento8()
7586=MementoTests:testLocalVariableMemento1()
7587=MementoTests:MementoTests(String)
7588=MementoTests:testInternalJarBinaryMethodMemento()
7589=MementoTests:testClassFileMemento()
7590=MementoTests:testImportContainerMemento()
7591=MementoTests:testBug331821()
7592=MementoTests:testPackageFragmentRootMemento6()
7593=MementoTests:testLocalVariableMemento3()
7594=MementoTests:testBinaryMethodMemento1()
7595=MementoTests:testSourceMethodMemento3()
7596=MementoTests:testProjectMemento2()
7597=MementoTests:setUpSuite()
7598=MementoTests:testBinaryTypeMemento()
7599=MementoTests:testBinaryMethodMemento2()
7600=MementoTests:testPackageFragmentRootMemento7()
7601=MementoTests:testLocalVariableMemento2()
7602=MementoTests:testProjectMemento3()
7603=MementoTests:assertMemento(String, IJavaElement)
7604=MementoTests:testInternalJarBinaryTypeMemento()
7605=MementoTests:tearDownSuite()
7606=MementoTests:testProjectMemento()
7607=MementoTests:testPackageFragmentRootMemento4()
7608=MementoTests:testLocalTypeMemento1()
7609=MementoTests:testTypeParameter2()
7610=MementoTests:testBinaryFieldMemento()
7611=MementoTests:testAnonymousTypeMemento1()
7612=MementoTests:testInitializerMemento()
7613=MementoTests:testPackageDeclarationMemento()
7614=MementoTests:testPackageFragmentRootMemento5()
7615=MementoTests:testTypeParameter1()
7616=MementoTests:testLocalTypeMemento2()
7617=MementoTests:testAnonymousTypeMemento2()
7618=MementoTests:testPackageFragmentRootMemento2()
7619=MementoTests:testExternalJarBinaryInnerTypeMemento()
7620=MementoTests:testAnonymousTypeMemento3()
7621=MementoTests:testPackageFragmentRootMemento3()
7622=MementoTests:testExternalJarBinaryFieldMemento()
7623=MementoTests:testAnnotation1()
7624=MementoTests:testSourceInnerTypeMemento()
7625=MementoTests:testInternalJarBinaryFieldMemento()
7626=MementoTests:testAnnotation2()
7627=MementoTests:testPackageFragmentRootMemento1()
7628=MementoTests:testAnnotation3()
7629=MementoTests:testCompilationUnitMemento2()
7630=MementoTests:testExternalJarClassFileMemento()
7631=MementoTests:testExternalLibraryFolderClassFileMemento()
7632=MementoTests:testCompilationUnitMemento1()
7633=MementoTests:testInvalidMemento()
7634=MementoTests:testBinaryInnerTypeMemento()
7635=MementoTests:testBinaryMethodMemento3()
7636=MementoTests:testExternalJarBinaryMethodMemento()
7637=MementoTests:getEscapedPath(String)
7638=MementoTests:testSourceMethodMemento1()
7639=MementoTests:suite()
7640=MementoTests:testInternalJarBinaryInnerTypeMemento()
7641=MementoTests:testBinaryMethodMemento4()
7642=MementoTests:testLocalVariableMemento4()
7643=MementoTests:testSourceFieldMemento()
7644=MementoTests:testSourceMethodMemento2()
7645=MementoTests:testImportDeclarationMemento()
7646=MementoTests:testPackageFragmentMemento()
7647=MementoTests:getEscapedExternalJCLPath()
7648=MementoTests:testExternalJarBinaryTypeMemento()
7649=MementoTests:testRestoreBogusMemento()
7650=MementoTests:testPackageFragmentMemento2()
7651=CharConstant:shortValue()
7652=CharConstant:doubleValue()
7653=CharConstant:stringValue()
7654=CharConstant:intValue()
7655=CharConstant:CharConstant(char)
7656=CharConstant:floatValue()
7657=CharConstant:typeID()
7658=CharConstant:longValue()
7659=CharConstant:byteValue()
7660=CharConstant:toString()
7661=CharConstant:charValue()
7662=Z:bar()
7663=JavadocTypeCompletionModelTest:test011()
7664=JavadocTypeCompletionModelTest:test034()
7665=JavadocTypeCompletionModelTest:test023()
7666=JavadocTypeCompletionModelTest:test069()
7667=JavadocTypeCompletionModelTest:test012()
7668=JavadocTypeCompletionModelTest:test035()
7669=JavadocTypeCompletionModelTest:test024()
7670=JavadocTypeCompletionModelTest:test001()
7671=JavadocTypeCompletionModelTest:setUp()
7672=JavadocTypeCompletionModelTest:test013()
7673=JavadocTypeCompletionModelTest:test036()
7674=JavadocTypeCompletionModelTest:test025()
7675=JavadocTypeCompletionModelTest:test002()
7676=JavadocTypeCompletionModelTest:test037()
7677=JavadocTypeCompletionModelTest:test014()
7678=JavadocTypeCompletionModelTest:test026()
7679=JavadocTypeCompletionModelTest:test003()
7680=JavadocTypeCompletionModelTest:suite()
7681=JavadocTypeCompletionModelTest:test030()
7682=JavadocTypeCompletionModelTest:test053()
7683=JavadocTypeCompletionModelTest:test101()
7684=JavadocTypeCompletionModelTest:test065()
7685=JavadocTypeCompletionModelTest:test042()
7686=JavadocTypeCompletionModelTest:test112()
7687=JavadocTypeCompletionModelTest:test031()
7688=JavadocTypeCompletionModelTest:test100()
7689=JavadocTypeCompletionModelTest:test066()
7690=JavadocTypeCompletionModelTest:test020()
7691=JavadocTypeCompletionModelTest:test043()
7692=JavadocTypeCompletionModelTest:test111()
7693=JavadocTypeCompletionModelTest:test032()
7694=JavadocTypeCompletionModelTest:test044()
7695=JavadocTypeCompletionModelTest:test067()
7696=JavadocTypeCompletionModelTest:test021()
7697=JavadocTypeCompletionModelTest:test110()
7698=JavadocTypeCompletionModelTest:test033()
7699=JavadocTypeCompletionModelTest:test010()
7700=JavadocTypeCompletionModelTest:test022()
7701=JavadocTypeCompletionModelTest:test045()
7702=JavadocTypeCompletionModelTest:test068()
7703=JavadocTypeCompletionModelTest:test019()
7704=JavadocTypeCompletionModelTest:test105()
7705=JavadocTypeCompletionModelTest:test008()
7706=JavadocTypeCompletionModelTest:test061()
7707=JavadocTypeCompletionModelTest:test104()
7708=JavadocTypeCompletionModelTest:test050()
7709=JavadocTypeCompletionModelTest:test062()
7710=JavadocTypeCompletionModelTest:test051()
7711=JavadocTypeCompletionModelTest:test103()
7712=JavadocTypeCompletionModelTest:test040()
7713=JavadocTypeCompletionModelTest:test063()
7714=JavadocTypeCompletionModelTest:test114()
7715=JavadocTypeCompletionModelTest:test052()
7716=JavadocTypeCompletionModelTest:test102()
7717=JavadocTypeCompletionModelTest:test041()
7718=JavadocTypeCompletionModelTest:test064()
7719=JavadocTypeCompletionModelTest:test113()
7720=JavadocTypeCompletionModelTest:test015()
7721=JavadocTypeCompletionModelTest:test109()
7722=JavadocTypeCompletionModelTest:test004()
7723=JavadocTypeCompletionModelTest:test080()
7724=JavadocTypeCompletionModelTest:test016()
7725=JavadocTypeCompletionModelTest:test108()
7726=JavadocTypeCompletionModelTest:test005()
7727=JavadocTypeCompletionModelTest:test017()
7728=JavadocTypeCompletionModelTest:test070()
7729=JavadocTypeCompletionModelTest:test107()
7730=JavadocTypeCompletionModelTest:test006()
7731=JavadocTypeCompletionModelTest:test018()
7732=JavadocTypeCompletionModelTest:test071()
7733=JavadocTypeCompletionModelTest:test106()
7734=JavadocTypeCompletionModelTest:JavadocTypeCompletionModelTest(String)
7735=JavadocTypeCompletionModelTest:test007()
7736=JavadocTypeCompletionModelTest:test060()
7737=FieldInfoWithTypeAnnotation:reset()
7738=FieldInfoWithTypeAnnotation:FieldInfoWithTypeAnnotation(FieldInfo, AnnotationInfo[], TypeAnnotationInfo[])
7739=FieldInfoWithTypeAnnotation:toString()
7740=FieldInfoWithTypeAnnotation:initialize()
7741=FieldInfoWithTypeAnnotation:getTypeAnnotations()
7742=Example:foo()
7743=Bug387956Processor:process(Set<? extends TypeElement>, RoundEnvironment)
7744=Test:foo()
7745=Foo:getFoo()
7746=IBinaryNestedType:getName()
7747=IBinaryNestedType:getModifiers()
7748=IBinaryNestedType:getEnclosingTypeName()
7749=X:f()
7750=RecoveredType:updateOnClosingBrace(int, int)
7751=RecoveredType:add(FieldDeclaration, int)
7752=RecoveredType:updateBodyStart(int)
7753=RecoveredType:add(TypeDeclaration, int)
7754=RecoveredType:add(AbstractMethodDeclaration, int)
7755=RecoveredType:updateSourceEndIfNecessary(int, int)
7756=RecoveredType:name()
7757=RecoveredType:RecoveredType(TypeDeclaration, RecoveredElement, int)
7758=RecoveredType:updatedStatement()
7759=RecoveredType:toString(int)
7760=RecoveredType:enclosingType()
7761=RecoveredType:updateParseTree()
7762=RecoveredType:sourceEnd()
7763=RecoveredType:updatedTypeDeclaration()
7764=RecoveredType:updateFromParserState()
7765=RecoveredType:updateOnOpeningBrace(int, int)
7766=RecoveredType:add(Block, int)
7767=RecoveredType:bodyEnd()
7768=RecoveredType:parseTree()
7769=RecoveredType:bodyStartsAtHeaderEnd()
7770=EnumConstantDeclaration:getDeclaringType()
7771=IMethodBinding:isVarargs()
7772=IMethodBinding:isParameterizedMethod()
7773=IMethodBinding:isSubsignature(IMethodBinding)
7774=IMethodBinding:isConstructor()
7775=IMethodBinding:getDeclaringMember()
7776=IMethodBinding:getTypeParameters()
7777=IMethodBinding:getParameterTypes()
7778=IMethodBinding:getParameterAnnotations(int)
7779=IMethodBinding:isGenericMethod()
7780=IMethodBinding:getTypeArguments()
7781=IMethodBinding:isAnnotationMember()
7782=IMethodBinding:getDefaultValue()
7783=IMethodBinding:getDeclaredReceiverType()
7784=IMethodBinding:isRawMethod()
7785=IMethodBinding:getName()
7786=IMethodBinding:getExceptionTypes()
7787=IMethodBinding:isDefaultConstructor()
7788=IMethodBinding:getDeclaringClass()
7789=IMethodBinding:getReturnType()
7790=IMethodBinding:overrides(IMethodBinding)
7791=IMethodBinding:getMethodDeclaration()
7792=JavaSearchParticipant:getDocument(String)
7793=JavaSearchParticipant:selectIndexURLs(SearchPattern, IJavaSearchScope)
7794=JavaSearchParticipant:beginSearching()
7795=JavaSearchParticipant:doneSearching()
7796=JavaSearchParticipant:resolveDocument(SearchDocument)
7797=JavaSearchParticipant:indexResolvedDocument(SearchDocument, IPath)
7798=JavaSearchParticipant:getDescription()
7799=JavaSearchParticipant:selectIndexes(SearchPattern, IJavaSearchScope)
7800=JavaSearchParticipant:locateMatches(SearchDocument[], SearchPattern, IJavaSearchScope, SearchRequestor, IProgressMonitor)
7801=JavaSearchParticipant:indexDocument(SearchDocument, IPath)
7802=VariableDeclaration:setExtraDimensions(int)
7803=VariableDeclaration:setName(SimpleName)
7804=VariableDeclaration:internalNameProperty()
7805=VariableDeclaration:extraDimensions()
7806=VariableDeclaration:getNameProperty()
7807=VariableDeclaration:internalNamePropertyFactory(Class)
7808=VariableDeclaration:internalSetExtraDimensions(int)
7809=VariableDeclaration:internalExtraDimensionsPropertyFactory(Class)
7810=VariableDeclaration:internalExtraDimensionsProperty()
7811=VariableDeclaration:resolveBinding()
7812=VariableDeclaration:getExtraDimensions()
7813=VariableDeclaration:internalInitializerPropertyFactory(Class)
7814=VariableDeclaration:internalExtraDimensions2PropertyFactory(Class)
7815=VariableDeclaration:internalExtraDimensions2Property()
7816=VariableDeclaration:getInitializerProperty()
7817=VariableDeclaration:internalInitializerProperty()
7818=VariableDeclaration:getExtraDimensions2Property()
7819=VariableDeclaration:VariableDeclaration(AST)
7820=VariableDeclaration:setInitializer(Expression)
7821=VariableDeclaration:getExtraDimensionsProperty()
7822=VariableDeclaration:getName()
7823=VariableDeclaration:getInitializer()
7824=Util:log(Throwable)
7825=Util:isExcluded(IPath, char[][], char[][], boolean)
7826=Util:concatWith(String[], String, char)
7827=Util:logRepeatedMessage(String, Exception)
7828=Util:equalArraysOrNull(int[], int[])
7829=Util:getAttribute(IMethodInfo, char[])
7830=Util:sortCopy(IJavaElement[])
7831=Util:checkTypeSignature(String, int, int, boolean)
7832=Util:indexOfEnclosingPath(IPath, IPath[], int)
7833=Util:isValidClassFileName(String, String, String)
7834=Util:toString(char[][])
7835=Util:validateTypeSignature(String, boolean)
7836=Util:getFullyQualifiedName(Type, StringBuffer)
7837=Util:isJavaLikeFileName(String)
7838=Util:isValidTypeSignature(String, boolean)
7839=Util:splitOn(char, String, int, int)
7840=Util:getUnresolvedJavaElement(FieldBinding, WorkingCopyOwner, BindingsToNodesMap)
7841=Util:getUnresolvedJavaElement(TypeBinding, WorkingCopyOwner, BindingsToNodesMap)
7842=Util:getUnresolvedJavaElement(int, int, JavaElement)
7843=Util:log(Throwable, String)
7844=Util:appendTypeSignature(char[], int, StringBuffer, boolean)
7845=Util:packageName(IPath, String, String)
7846=Util:getSourceAttachmentProperty(IPath)
7847=Util:combineHashCodes(int, int)
7848=Util:getResourceContentsAsCharArray(IFile)
7849=Util:sortCopy(Comparable[])
7850=Util:endsWithIgnoreCase(String, String)
7851=Util:normalizeCRs(String, String)
7852=Util:isExcluded(IJavaElement)
7853=Util:getProblemArgumentsForMarker(String[])
7854=Util:toAnchor(int, char[], String, boolean)
7855=Util:verbose(String)
7856=Util:normalizeCRs(char[], char[])
7857=Util:getSignature(Type)
7858=Util:Comparer:compare(Object, Object)
7859=Util:raiseUnexpectedCharacterException(char[], int, char)
7860=Util:getNameWithoutJavaLikeExtension(String)
7861=Util:getAllTypeArguments(char[][])
7862=Util:getLineSeparator(String, IJavaProject)
7863=Util:sort(int[])
7864=Util:resetJavaLikeExtensions()
7865=Util:logRepeatedMessage(String, int, String)
7866=Util:equalArraysOrNullSortFirst(Comparable[], Comparable[])
7867=Util:prefixLength(char[], char[])
7868=Util:toStrings(char[][])
7869=Util:extractLastName(String)
7870=Util:sort(char[][])
7871=Util:equalOrNull(Object, Object)
7872=Util:arrayConcat(String[], String)
7873=Util:isJavaLikeFileName(char[])
7874=Util:sortCopy(String[])
7875=Util:getJdkLevel(Object)
7876=Util:toString(char[][], char[])
7877=Util:getSourceAttachmentPropertyName(IPath)
7878=Util:toLocalFile(URI, IProgressMonitor)
7879=Util:convertTypeSignature(char[], int, int)
7880=Util:appendCaptureTypeSignatureForAnchor(char[], int, StringBuffer)
7881=Util:isValidCompilationUnitName(String, String, String)
7882=Util:getParameterCount(char[])
7883=Util:compare(byte[], byte[])
7884=Util:getDeclaringTypeSignature(String)
7885=Util:Comparable:compareTo(Comparable)
7886=Util:sort(Comparable[])
7887=Util:isReadOnlySupported()
7888=Util:isValidFolderNameForPackage(String, String, String)
7889=Util:verbose(String, PrintStream)
7890=Util:findLineSeparator(char[])
7891=Util:isValidMethodSignature(String)
7892=Util:toCharArrays(String[])
7893=Util:getAnnotationMemberValue(JavaElement, MemberValuePair, Object)
7894=Util:getCompilationUnit(char[], WorkingCopyOwner)
7895=Util:isReadOnly(IResource)
7896=Util:raiseIllegalSignatureException(char[], int)
7897=Util:quickSort(Comparable[], int, int)
7898=Util:toCompoundChars(String)
7899=Util:appendArrayTypeSignatureForAnchor(char[], int, StringBuffer, boolean)
7900=Util:indexOfNestedPath(IPath, IPath[], int)
7901=Util:appendClassTypeSignatureForAnchor(char[], int, StringBuffer)
7902=Util:quickSort(int[], int, int)
7903=Util:validateMethodSignature(String)
7904=Util:getAttribute(ICodeAttribute, char[])
7905=Util:setSourceAttachmentProperty(IPath, String)
7906=Util:relativePath(IPath, int)
7907=Util:BindingsToNodesMap:get(Binding)
7908=Util:isExcluded(IResource, char[][], char[][])
7909=Util:startsWithIgnoreCase(String[], String[], boolean)
7910=Util:typeParameterSignatures(AbstractMethodDeclaration)
7911=Util:getAttribute(IFieldInfo, char[])
7912=Util:extractParameterTypes(char[])
7913=Util:getJavaLikeExtensions()
7914=Util:decodeArgumentString(int, String)
7915=Util:getAnnotationMemberValue(MemberValuePair, Constant)
7916=Util:appendTypeArgumentSignatureForAnchor(char[], int, StringBuffer)
7917=Util:appendArrayTypeSignature(char[], int, StringBuffer, boolean)
7918=Util:getNegativeAnnotationMemberValue(MemberValuePair, Constant)
7919=Util:encodeArgument(String, StringBuffer)
7920=Util:indexOfJavaLikeExtension(String)
7921=Util:equalsIgnoreJavaLikeExtension(String, String)
7922=Util:findFirstClassFile(IFolder)
7923=Util:fixTaskTags(Map)
7924=Util:getResourceContentsAsByteArray(IFile)
7925=Util:getClassFile(char[])
7926=Util:localTypeName(String, int, int)
7927=Util:getAnnotation(JavaElement, IBinaryAnnotation, String)
7928=Util:isAttributeSupported(int)
7929=Util:quickSort(String[], int, int)
7930=Util:appendClassTypeSignature(char[], int, StringBuffer, boolean)
7931=Util:scanTypeSignature(char[], int)
7932=Util:getUnresolvedJavaElement(MethodBinding, WorkingCopyOwner, BindingsToNodesMap)
7933=Util:equalArrays(Object[], Object[], int)
7934=Util:Util()
7935=Util:sortCopy(Object[], Comparer)
7936=Util:equalArraysOrNullSortFirst(String[], String[])
7937=Util:sort(String[])
7938=Util:indexOfMatchingPath(IPath, IPath[], int)
7939=Util:splitTypeLevelsSignature(String)
7940=Util:setReadOnly(IResource, boolean)
7941=Util:scanGenericEnd(char[], int)
7942=Util:newClassFileReader(IResource)
7943=Util:concatWith(String[], char)
7944=Util:log(int, String)
7945=Util:getLineSeparator(char[], char[])
7946=Util:quickSort(char[][], int, int)
7947=Util:compare(char[], char[])
7948=Util:getPackageFragment(char[], int, int)
7949=Util:sort(Object[], Comparer)
7950=Util:editedString(String, TextEdit)
7951=Util:prefixLength(String, String)
7952=Util:toString(char[], char[], char[], boolean, boolean)
7953=Util:getResourceContentsAsCharArray(IFile, String)
7954=Util:typeSignature(TypeReference)
7955=Util:concatenateName(String, String, char)
7956=Util:getProblemArgumentsFromMarker(String)
7957=Util:equalArraysOrNull(Object[], Object[])
7958=Util:findMethod(IType, char[], String[], boolean)
7959=Util:toUnresolvedTypeSignature(char[])
7960=Util:toUnresolvedTypeSignature(char[], int, int, StringBuffer)
7961=Util:defaultJavaExtension()
7962=Util:extractReturnType(String)
7963=Util:appendTypeSignatureForAnchor(char[], int, StringBuffer, boolean)
7964=Util:getTrimmedSimpleNames(String)
7965=Util:quickSort(Object[], int, int, Comparer)
7966=Util:getAttribute(IClassFileReader, char[])
7967=Util:log(IStatus)
7968=Util:toAnchor(int, char[], char[], boolean)
7969=Util:concatCompoundNameToCharArray(String[])
7970=A:A()
7971=A:foo(String, Object)
7972=E:foo1(int)
7973=E:foo1()
7974=FullSourceWorkspaceSearchTests:Measuring:cancel()
7975=FullSourceWorkspaceSearchTests:setUp()
7976=FullSourceWorkspaceSearchTests:Measuring:belongsTo(String)
7977=FullSourceWorkspaceSearchTests:search(String, int, int, IJavaSearchScope, SearchRequestor)
7978=FullSourceWorkspaceSearchTests:testSearchType()
7979=FullSourceWorkspaceSearchTests:testSearchField()
7980=FullSourceWorkspaceSearchTests:SearchTypeNameRequestor:acceptType(int, char[], char[], char[][], String)
7981=FullSourceWorkspaceSearchTests:_testGotoPackage()
7982=FullSourceWorkspaceSearchTests:JavaSearchResultCollector:acceptSearchMatch(SearchMatch)
7983=FullSourceWorkspaceSearchTests:testSearchAllTypeNameMatches()
7984=FullSourceWorkspaceSearchTests:Measuring:execute(IProgressMonitor)
7985=FullSourceWorkspaceSearchTests:testSearchConstructor()
7986=FullSourceWorkspaceSearchTests:testIndexingOneProject()
7987=FullSourceWorkspaceSearchTests:testNewSearchAllTypeNames()
7988=FullSourceWorkspaceSearchTests:_testSearchPackageDeclarations()
7989=FullSourceWorkspaceSearchTests:testClass()
7990=FullSourceWorkspaceSearchTests:suite()
7991=FullSourceWorkspaceSearchTests:Measuring:Measuring(boolean)
7992=FullSourceWorkspaceSearchTests:testSearchAllTypeNames()
7993=FullSourceWorkspaceSearchTests:cleanCategoryTableCache(boolean, IJavaSearchScope, JavaSearchResultCollector)
7994=FullSourceWorkspaceSearchTests:tearDown()
7995=FullSourceWorkspaceSearchTests:Measuring:getJobFamily()
7996=FullSourceWorkspaceSearchTests:OldSearchTypeNameRequestor:acceptInterface(char[], char[], char[][], String)
7997=FullSourceWorkspaceSearchTests:Measuring:ensureReadyToRun()
7998=FullSourceWorkspaceSearchTests:testSearchMethod()
7999=FullSourceWorkspaceSearchTests:testIndexing()
8000=FullSourceWorkspaceSearchTests:FullSourceWorkspaceSearchTests(String)
8001=FullSourceWorkspaceSearchTests:OldSearchTypeNameRequestor:acceptClass(char[], char[], char[][], String)
8002=FullSourceWorkspaceSearchTests:SearchTypeNameMatchRequestor:acceptTypeNameMatch(TypeNameMatch)
8003=FullSourceWorkspaceSearchTests:testSearchBinaryMethod()
8004=FullSourceWorkspaceSearchTests:testSearchPackageDeclarationsWorkspace()
8005=Test:foo()
8006=Test:bar()
8007=X18:setKind(int)
8008=FileGenerationTests:testSourceGenAfterDirChange()
8009=FileGenerationTests:testSourceGenSubDir()
8010=FileGenerationTests:FileGenerationTests(String)
8011=FileGenerationTests:testSourceGenOverwrite()
8012=FileGenerationTests:testTextFileGen()
8013=FileGenerationTests:testSourceGenPackages()
8014=FileGenerationTests:suite()
8015=FileGenerationTests:testIsGeneratedOrParentFile()
8016=CodeSnippetSkeleton:CodeSnippetSkeleton()
8017=CodeSnippetSkeleton:getEnclosingMethod()
8018=CodeSnippetSkeleton:getMissingTypeNames()
8019=CodeSnippetSkeleton:BinaryMethodSkeleton:getAnnotations()
8020=CodeSnippetSkeleton:isMember()
8021=CodeSnippetSkeleton:isLocal()
8022=CodeSnippetSkeleton:isAnonymous()
8023=CodeSnippetSkeleton:getJavadocContents()
8024=CodeSnippetSkeleton:BinaryMethodSkeleton:getSelector()
8025=CodeSnippetSkeleton:getFields()
8026=CodeSnippetSkeleton:isBinaryType()
8027=CodeSnippetSkeleton:BinaryMethodSkeleton:BinaryMethodSkeleton(char[], char[], char[][], boolean)
8028=CodeSnippetSkeleton:getEnclosingTypeName()
8029=CodeSnippetSkeleton:BinaryMethodSkeleton:getDefaultValue()
8030=CodeSnippetSkeleton:BinaryMethodSkeleton:getAnnotatedParametersCount()
8031=CodeSnippetSkeleton:BinaryMethodSkeleton:isConstructor()
8032=CodeSnippetSkeleton:BinaryMethodSkeleton:getTypeAnnotations()
8033=CodeSnippetSkeleton:getJavadocContents(IProgressMonitor, String)
8034=CodeSnippetSkeleton:BinaryMethodSkeleton:getArgumentNames()
8035=CodeSnippetSkeleton:BinaryMethodSkeleton:isClinit()
8036=CodeSnippetSkeleton:getInterfaceNames()
8037=CodeSnippetSkeleton:getMethods()
8038=CodeSnippetSkeleton:BinaryMethodSkeleton:getModifiers()
8039=CodeSnippetSkeleton:getModifiers()
8040=CodeSnippetSkeleton:getURLContents(String, String)
8041=CodeSnippetSkeleton:BinaryMethodSkeleton:getParameterAnnotations(int, char[])
8042=CodeSnippetSkeleton:BinaryMethodSkeleton:getMethodDescriptor()
8043=CodeSnippetSkeleton:sourceFileName()
8044=CodeSnippetSkeleton:getGenericSignature()
8045=CodeSnippetSkeleton:getMemberTypes()
8046=CodeSnippetSkeleton:getFileName()
8047=CodeSnippetSkeleton:getAnnotations()
8048=CodeSnippetSkeleton:getSourceName()
8049=CodeSnippetSkeleton:getSuperclassName()
8050=CodeSnippetSkeleton:getName()
8051=CodeSnippetSkeleton:BinaryMethodSkeleton:getGenericSignature()
8052=CodeSnippetSkeleton:getTypeAnnotations()
8053=CodeSnippetSkeleton:getExternalAnnotationStatus()
8054=CodeSnippetSkeleton:enrichWithExternalAnnotationsFor(ITypeAnnotationWalker, Object, LookupEnvironment)
8055=CodeSnippetSkeleton:BinaryMethodSkeleton:getTagBits()
8056=CodeSnippetSkeleton:getTagBits()
8057=CodeSnippetSkeleton:BinaryMethodSkeleton:getExceptionTypeNames()
8058=Literal:printExpression(int, StringBuffer)
8059=Literal:computeConstant()
8060=Literal:source()
8061=Literal:literalType(BlockScope)
8062=Literal:Literal(int, int)
8063=Literal:resolveType(BlockScope)
8064=Literal:analyseCode(BlockScope, FlowContext, FlowInfo)
8065=IndexBasedHierarchyBuilder:createInfoFromClassFileInJar(Openable)
8066=IndexBasedHierarchyBuilder:determinePossibleSubTypes(HashSet, IProgressMonitor)
8067=IndexBasedHierarchyBuilder:Queue:retrieve()
8068=IndexBasedHierarchyBuilder:IndexBasedHierarchyBuilder(TypeHierarchy, IJavaSearchScope)
8069=IndexBasedHierarchyBuilder:buildForProject(JavaProject, ArrayList, org.eclipse.jdt.core.ICompilationUnit[], HashSet, IProgressMonitor)
8070=IndexBasedHierarchyBuilder:Queue:toString()
8071=IndexBasedHierarchyBuilder:Queue:add(char[])
8072=IndexBasedHierarchyBuilder:createCompilationUnitFromPath(Openable, IFile)
8073=IndexBasedHierarchyBuilder:build(boolean)
8074=IndexBasedHierarchyBuilder:searchAllPossibleSubTypes(IType, IJavaSearchScope, Map, IPathRequestor, int, IProgressMonitor)
8075=IndexBasedHierarchyBuilder:buildFromPotentialSubtypes(String[], HashSet, IProgressMonitor)
8076=IndexBasedHierarchyBuilder:createInfoFromClassFile(Openable, IResource)
8077=MessageSend:nullStatus(FlowInfo, FlowContext)
8078=MessageSend:printExpression(int, StringBuffer)
8079=MessageSend:checkNPE(BlockScope, FlowContext, FlowInfo, int)
8080=MessageSend:isPolyExpression(MethodBinding)
8081=MessageSend:invocationTargetType()
8082=MessageSend:generateCode(BlockScope, CodeStream, boolean)
8083=MessageSend:findMethodBinding(BlockScope)
8084=MessageSend:postConversionType(Scope)
8085=MessageSend:resolveType(BlockScope)
8086=MessageSend:isTypeAccess()
8087=MessageSend:analyseBooleanAssertion(BlockScope, Expression, FlowContext, FlowInfo, boolean, boolean)
8088=MessageSend:isPolyExpression()
8089=MessageSend:binding()
8090=MessageSend:setExpectedType(TypeBinding)
8091=MessageSend:isQualifiedSuper()
8092=MessageSend:isBoxingCompatibleWith(TypeBinding, Scope)
8093=MessageSend:isSuperAccess()
8094=MessageSend:getInferenceContext(ParameterizedMethodBinding)
8095=MessageSend:sIsMoreSpecific(TypeBinding, TypeBinding, Scope)
8096=MessageSend:analyseNullAssertion(BlockScope, Expression, FlowContext, FlowInfo, boolean)
8097=MessageSend:isCompatibleWith(TypeBinding, Scope)
8098=MessageSend:cleanUpInferenceContexts()
8099=MessageSend:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo)
8100=MessageSend:receiverIsImplicitThis()
8101=MessageSend:freshInferenceContext(Scope)
8102=MessageSend:arguments()
8103=MessageSend:setDepth(int)
8104=MessageSend:getExpressionContext()
8105=MessageSend:registerInferenceContext(ParameterizedGenericMethodBinding, InferenceContext18)
8106=MessageSend:registerResult(TypeBinding, MethodBinding)
8107=MessageSend:setActualReceiverType(ReferenceBinding)
8108=MessageSend:setExpressionContext(ExpressionContext)
8109=MessageSend:detectAssertionUtility(int)
8110=MessageSend:traverse(ASTVisitor, BlockScope)
8111=MessageSend:genericTypeArguments()
8112=MessageSend:setFieldIndex(int)
8113=MessageSend:recordCallingClose(BlockScope, FlowContext, FlowInfo, Expression)
8114=MessageSend:computeConversion(Scope, TypeBinding, TypeBinding)
8115=MessageSend:analyseCode(BlockScope, FlowContext, FlowInfo)
8116=MessageSend:statementExpression()
8117=AssistOptions:splitAndTrimOn(char, char[])
8118=AssistOptions:AssistOptions(Map)
8119=AssistOptions:set(Map)
8120=AssistOptions:AssistOptions()
8121=VariablesInfo:indexOf(GlobalVariable)
8122=VariablesInfo:varNamed(char[])
8123=VariablesInfo:VariablesInfo(char[], char[], ClassFile[], GlobalVariable[], int)
8124=Example:bar()
8125=Example:foo()
8126=Example:foo2()
8127=ResolveCatchArgumentType1:foo()
8128=X28d:foo(String)
8129=Compliance_1_3:test052()
8130=Compliance_1_3:test098()
8131=Compliance_1_3:test075()
8132=Compliance_1_3:test041()
8133=Compliance_1_3:test087()
8134=Compliance_1_3:test064()
8135=Compliance_1_3:test051()
8136=Compliance_1_3:test074()
8137=Compliance_1_3:test097()
8138=Compliance_1_3:test040()
8139=Compliance_1_3:test063()
8140=Compliance_1_3:test086()
8141=Compliance_1_3:test031()
8142=Compliance_1_3:test077()
8143=Compliance_1_3:test054()
8144=Compliance_1_3:suite()
8145=Compliance_1_3:test089()
8146=Compliance_1_3:test020()
8147=Compliance_1_3:test066()
8148=Compliance_1_3:test030()
8149=Compliance_1_3:test099()
8150=Compliance_1_3:test053()
8151=Compliance_1_3:test076()
8152=Compliance_1_3:test088()
8153=Compliance_1_3:test042()
8154=Compliance_1_3:test065()
8155=Compliance_1_3:test071()
8156=Compliance_1_3:test094()
8157=Compliance_1_3:test018()
8158=Compliance_1_3:test105()
8159=Compliance_1_3:test060()
8160=Compliance_1_3:test093()
8161=Compliance_1_3:test017()
8162=Compliance_1_3:test081()
8163=Compliance_1_3:test082()
8164=Compliance_1_3:test104()
8165=Compliance_1_3:test029()
8166=Compliance_1_3:setUp()
8167=Compliance_1_3:test070()
8168=Compliance_1_3:test073()
8169=Compliance_1_3:getCompilerOptions()
8170=Compliance_1_3:test050()
8171=Compliance_1_3:test096()
8172=Compliance_1_3:test107()
8173=Compliance_1_3:test062()
8174=Compliance_1_3:test085()
8175=Compliance_1_3:test072()
8176=Compliance_1_3:test095()
8177=Compliance_1_3:test019()
8178=Compliance_1_3:test061()
8179=Compliance_1_3:test106()
8180=Compliance_1_3:test084()
8181=Compliance_1_3:test020a()
8182=Compliance_1_3:test014()
8183=Compliance_1_3:test037()
8184=Compliance_1_3:test101()
8185=Compliance_1_3:test049()
8186=Compliance_1_3:test026()
8187=Compliance_1_3:test090()
8188=Compliance_1_3:test013()
8189=Compliance_1_3:test036()
8190=Compliance_1_3:test059()
8191=Compliance_1_3:test025()
8192=Compliance_1_3:test048()
8193=Compliance_1_3:test100()
8194=Compliance_1_3:test016()
8195=Compliance_1_3:test039()
8196=Compliance_1_3:Compliance_1_3(String)
8197=Compliance_1_3:test080()
8198=Compliance_1_3:test103()
8199=Compliance_1_3:_test043()
8200=Compliance_1_3:test028()
8201=Compliance_1_3:test092()
8202=Compliance_1_3:test015()
8203=Compliance_1_3:test038()
8204=Compliance_1_3:test102()
8205=Compliance_1_3:test027()
8206=Compliance_1_3:test091()
8207=Compliance_1_3:test010()
8208=Compliance_1_3:test056()
8209=Compliance_1_3:test033()
8210=Compliance_1_3:test079()
8211=Compliance_1_3:test045()
8212=Compliance_1_3:test022()
8213=Compliance_1_3:test068()
8214=Compliance_1_3:test032()
8215=Compliance_1_3:test055()
8216=Compliance_1_3:test078()
8217=Compliance_1_3:test021()
8218=Compliance_1_3:test044()
8219=Compliance_1_3:test067()
8220=Compliance_1_3:test012()
8221=Compliance_1_3:test035()
8222=Compliance_1_3:test058()
8223=Compliance_1_3:test024()
8224=Compliance_1_3:test047()
8225=Compliance_1_3:testClass()
8226=Compliance_1_3:test011()
8227=Compliance_1_3:test034()
8228=Compliance_1_3:test057()
8229=Compliance_1_3:test023()
8230=Compliance_1_3:test046()
8231=Compliance_1_3:test069()
8232=References:foo()
8233=MT47209:MT47209(String)
8234=MT47209:m47209(int)
8235=A:Example(boolean)
8236=Test:foo()
8237=Test:bar()
8238=ClassPathTestCollector:classNameFromFile(String)
8239=ClassPathTestCollector:isTestClass(String)
8240=ClassPathTestCollector:splitClassPath(String)
8241=ClassPathTestCollector:gatherFiles(File, String, Hashtable)
8242=ClassPathTestCollector:collectFilesInPath(String)
8243=ClassPathTestCollector:collectTests()
8244=ClassPathTestCollector:collectFilesInRoots(Vector)
8245=ClassPathTestCollector:ClassPathTestCollector()
8246=JavadocTestForInterface:test060()
8247=JavadocTestForInterface:test083()
8248=JavadocTestForInterface:test105()
8249=JavadocTestForInterface:test117()
8250=JavadocTestForInterface:test071()
8251=JavadocTestForInterface:test007()
8252=JavadocTestForInterface:test082()
8253=JavadocTestForInterface:suite()
8254=JavadocTestForInterface:test116()
8255=JavadocTestForInterface:test070()
8256=JavadocTestForInterface:test006()
8257=JavadocTestForInterface:test081()
8258=JavadocTestForInterface:javadocTestClass()
8259=JavadocTestForInterface:test115()
8260=JavadocTestForInterface:test092()
8261=JavadocTestForInterface:test005()
8262=JavadocTestForInterface:JavadocTestForInterface(String)
8263=JavadocTestForInterface:test080()
8264=JavadocTestForInterface:test114()
8265=JavadocTestForInterface:test091()
8266=JavadocTestForInterface:test004()
8267=JavadocTestForInterface:test041()
8268=JavadocTestForInterface:test064()
8269=JavadocTestForInterface:test098()
8270=JavadocTestForInterface:test052()
8271=JavadocTestForInterface:test108()
8272=JavadocTestForInterface:test063()
8273=JavadocTestForInterface:test040()
8274=JavadocTestForInterface:test074()
8275=JavadocTestForInterface:test097()
8276=JavadocTestForInterface:test051()
8277=JavadocTestForInterface:test107()
8278=JavadocTestForInterface:test062()
8279=JavadocTestForInterface:test073()
8280=JavadocTestForInterface:test096()
8281=JavadocTestForInterface:test119()
8282=JavadocTestForInterface:test050()
8283=JavadocTestForInterface:test009()
8284=JavadocTestForInterface:test084()
8285=JavadocTestForInterface:test106()
8286=JavadocTestForInterface:test061()
8287=JavadocTestForInterface:test072()
8288=JavadocTestForInterface:test095()
8289=JavadocTestForInterface:test118()
8290=JavadocTestForInterface:test008()
8291=JavadocTestForInterface:test068()
8292=JavadocTestForInterface:test045()
8293=JavadocTestForInterface:test022()
8294=JavadocTestForInterface:test010()
8295=JavadocTestForInterface:test033()
8296=JavadocTestForInterface:test120()
8297=JavadocTestForInterface:test067()
8298=JavadocTestForInterface:test021()
8299=JavadocTestForInterface:test044()
8300=JavadocTestForInterface:test032()
8301=JavadocTestForInterface:test066()
8302=JavadocTestForInterface:test043()
8303=JavadocTestForInterface:test020()
8304=JavadocTestForInterface:test031()
8305=JavadocTestForInterface:test065()
8306=JavadocTestForInterface:test042()
8307=JavadocTestForInterface:getCompilerOptions()
8308=JavadocTestForInterface:test099()
8309=JavadocTestForInterface:test030()
8310=JavadocTestForInterface:test053()
8311=JavadocTestForInterface:test112()
8312=JavadocTestForInterface:test113()
8313=JavadocTestForInterface:test090()
8314=JavadocTestForInterface:test003()
8315=JavadocTestForInterface:test049()
8316=JavadocTestForInterface:test002()
8317=JavadocTestForInterface:test111()
8318=JavadocTestForInterface:test013()
8319=JavadocTestForInterface:test048()
8320=JavadocTestForInterface:test123()
8321=JavadocTestForInterface:test024()
8322=JavadocTestForInterface:test001()
8323=JavadocTestForInterface:test110()
8324=JavadocTestForInterface:test012()
8325=JavadocTestForInterface:test047()
8326=JavadocTestForInterface:test122()
8327=JavadocTestForInterface:test023()
8328=JavadocTestForInterface:test046()
8329=JavadocTestForInterface:test011()
8330=JavadocTestForInterface:test069()
8331=JavadocTestForInterface:test121()
8332=A:bar()
8333=A:foo()
8334=Test:B:B()
8335=Test:A:A(int)
8336=A:foo(String)
8337=QualifiedNameSet:toString()
8338=QualifiedNameSet:add(char[][])
8339=QualifiedNameSet:QualifiedNameSet(int)
8340=QualifiedNameSet:rehash()
8341=ConstantTest:suite()
8342=ConstantTest:test008()
8343=ConstantTest:test009()
8344=ConstantTest:test021()
8345=ConstantTest:test010()
8346=ConstantTest:test022()
8347=ConstantTest:test020()
8348=ConstantTest:test013()
8349=ConstantTest:test002()
8350=ConstantTest:verifyValues(Constant, Constant, Constant, Constant, Constant, Constant, Constant, Constant, Constant)
8351=ConstantTest:test014()
8352=ConstantTest:test003()
8353=ConstantTest:ConstantTest(String)
8354=ConstantTest:test011()
8355=ConstantTest:test012()
8356=ConstantTest:test001()
8357=ConstantTest:verifyConstantEqualsAndHashcode(Object, Object, Object, Object)
8358=ConstantTest:test006()
8359=ConstantTest:test018()
8360=ConstantTest:testClass()
8361=ConstantTest:test007()
8362=ConstantTest:test019()
8363=ConstantTest:test015()
8364=ConstantTest:test004()
8365=ConstantTest:test016()
8366=ConstantTest:testAllConstants()
8367=ConstantTest:test005()
8368=ConstantTest:test017()
8369=A:actionPerformed(ActionEvent)
8370=Member:getClassFile()
8371=Member:getHandleMementoDelimiter()
8372=Member:readableName()
8373=Member:getTypeRoot()
8374=Member:Member(JavaElement)
8375=Member:getDeclaringType()
8376=Member:findMethods(IMethod, IMethod[])
8377=Member:getJavadocRange()
8378=Member:isReadOnly()
8379=Member:isMainMethod(IMethod)
8380=Member:areSimilarMethods(String, String[], String, String[], String[])
8381=Member:getCategories()
8382=Member:getFlags()
8383=Member:convertConstant(Constant)
8384=Member:isBinary()
8385=Member:getNameRange()
8386=Member:getHandleFromMemento(String, MementoTokenizer, WorkingCopyOwner)
8387=Member:getType(String, int)
8388=Member:getOuterMostLocalContext()
8389=CompilationResult:getProblems()
8390=CompilationResult:record(char[], ClassFile)
8391=CompilationResult:hasTasks()
8392=CompilationResult:computePriority(IProblem)
8393=CompilationResult:hasErrors()
8394=CompilationResult:quickPrioritize(IProblem[], int, int)
8395=CompilationResult:hasSyntaxError()
8396=CompilationResult:quickSort(IProblem[], int, int)
8397=CompilationResult:getClassFiles()
8398=CompilationResult:recordTask(IProblem)
8399=CompilationResult:hasWarnings()
8400=CompilationResult:getTasks()
8401=CompilationResult:record(IProblem, ReferenceContext)
8402=CompilationResult:getCompilationUnit()
8403=CompilationResult:getFileName()
8404=CompilationResult:toString()
8405=CompilationResult:getAllProblems()
8406=CompilationResult:CompilationResult(ICompilationUnit, int, int, int)
8407=CompilationResult:tagAsAccepted()
8408=CompilationResult:getErrors()
8409=CompilationResult:hasProblems()
8410=CompilationResult:CompilationResult(char[], int, int, int)
8411=Test:main(String[])
8412=X:foo()
8413=A:foo()
8414=SelectionOnQualifiedAllocationExpression:printExpression(int, StringBuffer)
8415=SelectionOnQualifiedAllocationExpression:resolveType(BlockScope)
8416=SelectionOnQualifiedAllocationExpression:SelectionOnQualifiedAllocationExpression(TypeDeclaration)
8417=SelectionOnQualifiedAllocationExpression:SelectionOnQualifiedAllocationExpression()
8418=SetClasspathOperation:verify()
8419=SetClasspathOperation:SetClasspathOperation(JavaProject, IClasspathEntry[], IPath, boolean)
8420=SetClasspathOperation:toString()
8421=SetClasspathOperation:getSchedulingRule()
8422=SetClasspathOperation:executeOperation()
8423=SetClasspathOperation:SetClasspathOperation(JavaProject, IClasspathEntry[], IClasspathEntry[], IPath, boolean)
8424=Constant:computeConstantOperationUNSIGNED_RIGHT_SHIFT(Constant, int, int, Constant, int)
8425=Constant:fromValue(char)
8426=Constant:fromValue(String)
8427=Constant:computeConstantOperation(Constant, int, int, Constant, int)
8428=Constant:computeConstantOperationEQUAL_EQUAL(Constant, int, int, Constant, int)
8429=Constant:computeConstantOperationLEFT_SHIFT(Constant, int, int, Constant, int)
8430=Constant:fromValue(byte)
8431=Constant:charValue()
8432=Constant:shortValue()
8433=Constant:intValue()
8434=Constant:computeConstantOperationMULTIPLY(Constant, int, int, Constant, int)
8435=Constant:computeConstantOperationMINUS(Constant, int, int, Constant, int)
8436=Constant:typeName()
8437=Constant:computeConstantOperationAND(Constant, int, int, Constant, int)
8438=Constant:castTo(int)
8439=Constant:floatValue()
8440=Constant:computeConstantOperationREMAINDER(Constant, int, int, Constant, int)
8441=Constant:computeConstantOperationPLUS(Constant, int, int, Constant, int)
8442=Constant:computeConstantOperationDIVIDE(Constant, int, int, Constant, int)
8443=Constant:computeConstantOperationAND_AND(Constant, int, int, Constant, int)
8444=Constant:computeConstantOperationOR(Constant, int, int, Constant, int)
8445=Constant:computeConstantOperationLESS(Constant, int, int, Constant, int)
8446=Constant:computeConstantOperationGREATER(Constant, int, int, Constant, int)
8447=Constant:fromValue(int)
8448=Constant:computeConstantOperationOR_OR(Constant, int, int, Constant, int)
8449=Constant:computeConstantOperationRIGHT_SHIFT(Constant, int, int, Constant, int)
8450=Constant:typeID()
8451=Constant:toString()
8452=Constant:fromValue(double)
8453=Constant:computeConstantOperationXOR(Constant, int, int, Constant, int)
8454=Constant:fromValue(long)
8455=Constant:doubleValue()
8456=Constant:fromValue(float)
8457=Constant:stringValue()
8458=Constant:fromValue(boolean)
8459=Constant:computeConstantOperationGREATER_EQUAL(Constant, int, int, Constant, int)
8460=Constant:computeConstantOperationLESS_EQUAL(Constant, int, int, Constant, int)
8461=Constant:computeConstantOperation(Constant, int, int)
8462=Constant:byteValue()
8463=Constant:longValue()
8464=Constant:booleanValue()
8465=Constant:fromValue(short)
8466=SetContainerOperation:SetContainerOperation(IPath, IJavaProject[], IClasspathContainer[])
8467=SetContainerOperation:executeOperation()
8468=SetContainerOperation:verbose_set_container()
8469=SetContainerOperation:verbose_update_project(JavaProject)
8470=SetContainerOperation:verbose_failure(CoreException)
8471=SetContainerOperation:verbose_set_container_invocation_trace()
8472=Test:foo(Exception)
8473=SelectionOnLocalName:printAsExpression(int, StringBuffer)
8474=SelectionOnLocalName:SelectionOnLocalName(char[], int, int)
8475=SelectionOnLocalName:printStatement(int, StringBuffer)
8476=SelectionOnLocalName:resolve(BlockScope)
8477=ASTPosterChild:ASTPosterChild(boolean)
8478=ASTPosterChild:op()
8479=ASTPosterInterface:op()
8480=ASTPosterChild:ASTPosterChild()
8481=TestC:foo()
8482=Messages:Messages()
8483=Bug49361:main(String[])
8484=IExtendedAnnotation:getTargetType()
8485=IExtendedAnnotation:getLocalVariableTable()
8486=IExtendedAnnotation:getTypeParameterIndex()
8487=IExtendedAnnotation:getExceptionTableIndex()
8488=IExtendedAnnotation:getParameterIndex()
8489=IExtendedAnnotation:getTypePath()
8490=IExtendedAnnotation:getTypeParameterBoundIndex()
8491=IExtendedAnnotation:getAnnotationTypeIndex()
8492=IExtendedAnnotation:getLocalVariableRefenceInfoLength()
8493=IExtendedAnnotation:getOffset()
8494=NamingConventions:removePrefixAndSuffixForFieldName(IJavaProject, char[], int)
8495=NamingConventions:suggestLocalVariableNames(IJavaProject, String, String, int, String[])
8496=NamingConventions:suggestGetterName(IJavaProject, String, int, boolean, String[])
8497=NamingConventions:suggestFieldNames(IJavaProject, String, String, int, int, String[])
8498=NamingConventions:suggestSetterName(IJavaProject, String, int, boolean, String[])
8499=NamingConventions:NamingRequestor:acceptNameWithSuffix(char[], boolean, int)
8500=NamingConventions:suggestArgumentNames(IJavaProject, String, String, int, String[])
8501=NamingConventions:suggestFieldNames(IJavaProject, char[], char[], int, int, char[][])
8502=NamingConventions:suggestLocalVariableNames(IJavaProject, char[], char[], int, char[][])
8503=NamingConventions:NamingRequestor:getResults()
8504=NamingConventions:suggestAccessorName(IJavaProject, char[], int)
8505=NamingConventions:NamingConventions()
8506=NamingConventions:removePrefixAndSuffixForFieldName(IJavaProject, String, int)
8507=NamingConventions:convertCharsToString(char[][])
8508=NamingConventions:NamingRequestor:acceptNameWithPrefixAndSuffix(char[], boolean, boolean, int)
8509=NamingConventions:suggestArgumentNames(IJavaProject, char[], char[], int, char[][])
8510=NamingConventions:suggestNewName(char[], char[][])
8511=NamingConventions:removePrefixAndSuffixForLocalVariableName(IJavaProject, char[])
8512=NamingConventions:removePrefixAndSuffixForArgumentName(IJavaProject, String)
8513=NamingConventions:suggestSetterName(IJavaProject, char[], int, boolean, char[][])
8514=NamingConventions:getFieldVariableKind(int)
8515=NamingConventions:suggestVariableNames(int, int, String, IJavaProject, int, String[], boolean)
8516=NamingConventions:NamingRequestor:acceptNameWithoutPrefixAndSuffix(char[], int)
8517=NamingConventions:NamingRequestor:acceptNameWithPrefix(char[], boolean, int)
8518=NamingConventions:getBaseName(int, String, IJavaProject)
8519=NamingConventions:removePrefixAndSuffixForArgumentName(IJavaProject, char[])
8520=NamingConventions:suggestGetterName(IJavaProject, char[], int, boolean, char[][])
8521=NamingConventions:removePrefixAndSuffixForLocalVariableName(IJavaProject, String)
8522=NamingConventions:convertStringToChars(String[])
8523=X07:bar()
8524=EfficiencyCompilerRequestor:activate()
8525=EfficiencyCompilerRequestor:reset()
8526=EfficiencyCompilerRequestor:getCompiledClasses()
8527=EfficiencyCompilerRequestor:clearResult()
8528=EfficiencyCompilerRequestor:deactivate()
8529=EfficiencyCompilerRequestor:acceptDebugResult(CompilationResult)
8530=EfficiencyCompilerRequestor:isActive()
8531=A:goo(C)
8532=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternMultipleParamArguments09()
8533=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternSingleParamArguments08()
8534=JavaSearchGenericConstructorTests:testConstructorDeclarationsElementPatternSingleParamArguments03()
8535=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternMultipleTypeParameter01()
8536=JavaSearchGenericConstructorTests:testConstructorDeclarationssElementPatternMultipleParamArguments05()
8537=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternSingleParamArguments07()
8538=JavaSearchGenericConstructorTests:testConstructorDeclarationsElementPatternSingleParamArguments02()
8539=JavaSearchGenericConstructorTests:JavaSearchGenericConstructorTests(String, int)
8540=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternMultipleTypeParameter02()
8541=JavaSearchGenericConstructorTests:testConstructorDeclarationssElementPatternMultipleParamArguments06()
8542=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternMultipleParamArguments05()
8543=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternMultipleTypeParameter03()
8544=JavaSearchGenericConstructorTests:suite()
8545=JavaSearchGenericConstructorTests:JavaSearchGenericConstructorTests(String)
8546=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternSingleParamArguments09()
8547=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternMultipleParamArguments06()
8548=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternSingleParamArguments09()
8549=JavaSearchGenericConstructorTests:testConstructorDeclarationssStringPatternMultipleParamArguments12()
8550=JavaSearchGenericConstructorTests:testConstructorDeclarationsElementPatternSingleParamArguments04()
8551=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternMultipleParamArguments05()
8552=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternMultipleTypeParameter04()
8553=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternSingleParamArguments05()
8554=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternSingleTypeParameter03()
8555=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternSingleParamArguments04()
8556=JavaSearchGenericConstructorTests:testConstructorDeclarationssElementPatternSingleParamArguments06()
8557=JavaSearchGenericConstructorTests:testConstructorDeclarationssStringPatternMultipleParamArguments11()
8558=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternMultipleParamArguments06()
8559=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternSingleParamArguments04()
8560=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternSingleTypeParameter04()
8561=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternMultipleParamArguments01()
8562=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternSingleParamArguments03()
8563=JavaSearchGenericConstructorTests:testConstructorDeclarationssStringPatternMultipleParamArguments10()
8564=JavaSearchGenericConstructorTests:testConstructorDeclarationssElementPatternSingleParamArguments05()
8565=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternMultipleParamArguments07()
8566=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternSingleTypeParameter01()
8567=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternMultipleParamArguments02()
8568=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternSingleParamArguments06()
8569=JavaSearchGenericConstructorTests:testConstructorDeclarationsElementPatternSingleParamArguments01()
8570=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternMultipleParamArguments08()
8571=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternSingleParamArguments06()
8572=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternSingleTypeParameter02()
8573=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternMultipleParamArguments03()
8574=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternSingleParamArguments05()
8575=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternMultipleParamArguments01()
8576=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternSingleParamArguments01()
8577=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternSingleParamArguments12()
8578=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternMultipleParamArguments04()
8579=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternSingleParamArguments04()
8580=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternMultipleParamArguments02()
8581=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternSingleParamArguments11()
8582=JavaSearchGenericConstructorTests:testConstructorDeclarationsElementPatternMultipleParamArguments01()
8583=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternMultipleParamArguments05()
8584=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternSingleParamArguments03()
8585=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternMultipleParamArguments03()
8586=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternSingleParamArguments03()
8587=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternMultipleParamArguments06()
8588=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternSingleParamArguments02()
8589=JavaSearchGenericConstructorTests:testConstructorDeclarationssStringPatternSingleParamArguments12()
8590=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternSingleParamArguments02()
8591=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternMultipleParamArguments04()
8592=JavaSearchGenericConstructorTests:addResultLine(StringBuffer, char[])
8593=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternSingleParamArguments02()
8594=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternMultipleParamArguments07()
8595=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternSingleParamArguments01()
8596=JavaSearchGenericConstructorTests:testConstructorDeclarationssStringPatternSingleParamArguments11()
8597=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternSingleParamArguments01()
8598=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternMultipleParamArguments08()
8599=JavaSearchGenericConstructorTests:testConstructorDeclarationsElementPatternMultipleParamArguments04()
8600=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternMultipleParamArguments03()
8601=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternSingleParamArguments08()
8602=JavaSearchGenericConstructorTests:removeFirstTypeArgument(char[])
8603=JavaSearchGenericConstructorTests:testConstructorDeclarationssStringPatternSingleParamArguments10()
8604=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternMultipleParamArguments09()
8605=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternSingleParamArguments07()
8606=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternMultipleParamArguments04()
8607=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternMultipleParamArguments10()
8608=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternSingleParamArguments10()
8609=JavaSearchGenericConstructorTests:testConstructorDeclarationsElementPatternMultipleParamArguments02()
8610=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternMultipleParamArguments01()
8611=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternSingleParamArguments06()
8612=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternMultipleParamArguments11()
8613=JavaSearchGenericConstructorTests:testConstructorDeclarationsElementPatternMultipleParamArguments03()
8614=JavaSearchGenericConstructorTests:testConstructorReferencesStringPatternMultipleParamArguments12()
8615=JavaSearchGenericConstructorTests:testConstructorDeclarationsStringPatternSingleParamArguments05()
8616=JavaSearchGenericConstructorTests:testConstructorReferencesElementPatternMultipleParamArguments02()
8617=X:main(String[])
8618=FormatterProblem:main(String)
8619=FormatterProblem:buildGUI()
8620=FormatterCommentsTests:testCopyright_DEF()
8621=FormatterCommentsTests:testLineComments03()
8622=FormatterCommentsTests:testLines03()
8623=FormatterCommentsTests:getProjectCompilationUnits(IJavaProject)
8624=FormatterCommentsTests:testBlockComments01()
8625=FormatterCommentsTests:testWkspEclipse12()
8626=FormatterCommentsTests:testPreferencesExample13()
8627=FormatterCommentsTests:testBlockComments13()
8628=FormatterCommentsTests:testHtmlPre06()
8629=FormatterCommentsTests:getDefaultCompilerOptions()
8630=FormatterCommentsTests:testWkspEclipse11b()
8631=FormatterCommentsTests:testWkspEclipse23()
8632=FormatterCommentsTests:testHtmlUl09()
8633=FormatterCommentsTests:testPreferencesExample02()
8634=FormatterCommentsTests:testLines02()
8635=FormatterCommentsTests:testLineComments02()
8636=FormatterCommentsTests:testWkspEclipse13()
8637=FormatterCommentsTests:testPreferencesExample14()
8638=FormatterCommentsTests:testHtmlOthers01e()
8639=FormatterCommentsTests:testBlockComments12()
8640=FormatterCommentsTests:testWkspEclipse24()
8641=FormatterCommentsTests:testHtmlPre05()
8642=FormatterCommentsTests:testWkspEclipse11c()
8643=FormatterCommentsTests:testWkspEclipse01()
8644=FormatterCommentsTests:testPreferencesExample03()
8645=FormatterCommentsTests:testBlockComments05b()
8646=FormatterCommentsTests:testPreferencesExample04()
8647=FormatterCommentsTests:testLineComments01()
8648=FormatterCommentsTests:testWkspEclipse14()
8649=FormatterCommentsTests:testWkspEclipse12b()
8650=FormatterCommentsTests:testHtmlOthers01d()
8651=FormatterCommentsTests:testBlockComments11()
8652=FormatterCommentsTests:getOutputSource(ICompilationUnit)
8653=FormatterCommentsTests:testWkspEclipse02()
8654=FormatterCommentsTests:testWkspEclipse25()
8655=FormatterCommentsTests:testHtmlPre04()
8656=FormatterCommentsTests:testTagSee06()
8657=FormatterCommentsTests:testTagLink01()
8658=FormatterCommentsTests:testHtmlOthers11()
8659=FormatterCommentsTests:testPreferencesExample05()
8660=FormatterCommentsTests:testHtmlOthers02e()
8661=FormatterCommentsTests:testBlockComments05c()
8662=FormatterCommentsTests:testWkspEclipse15()
8663=FormatterCommentsTests:testHtmlOthers01c()
8664=FormatterCommentsTests:testBlockComments10()
8665=FormatterCommentsTests:testLineComments11()
8666=FormatterCommentsTests:testHtmlPre03()
8667=FormatterCommentsTests:testWkspEclipse03()
8668=FormatterCommentsTests:testWkspEclipse26()
8669=FormatterCommentsTests:compareFormattedSource(ICompilationUnit)
8670=FormatterCommentsTests:testHtmlOthers10()
8671=FormatterCommentsTests:testPreferencesExample06()
8672=FormatterCommentsTests:testBlockComments05()
8673=FormatterCommentsTests:testWkspEclipse16()
8674=FormatterCommentsTests:testBlockComments05d()
8675=FormatterCommentsTests:testTagParam05()
8676=FormatterCommentsTests:formatUnit(String, String, int, int, boolean, int, int, String)
8677=FormatterCommentsTests:testHtmlOthers01()
8678=FormatterCommentsTests:testLineComments10()
8679=FormatterCommentsTests:testBlockComments17()
8680=FormatterCommentsTests:testWkspEclipse27()
8681=FormatterCommentsTests:testWkspGanymede03()
8682=FormatterCommentsTests:testPreferencesExample14d()
8683=FormatterCommentsTests:testHtmlUl10()
8684=FormatterCommentsTests:testBlockComments04()
8685=FormatterCommentsTests:testWkspEclipse17()
8686=FormatterCommentsTests:expectedFormattedSource(String)
8687=FormatterCommentsTests:testBlockComments03b()
8688=FormatterCommentsTests:testBlockComments05e()
8689=FormatterCommentsTests:testTagParam04()
8690=FormatterCommentsTests:testHtmlPre09()
8691=FormatterCommentsTests:testBlockComments16()
8692=FormatterCommentsTests:testWkspEclipse05()
8693=FormatterCommentsTests:testWkspEclipse28()
8694=FormatterCommentsTests:testTagLink02b()
8695=FormatterCommentsTests:testWkspEclipse08c()
8696=FormatterCommentsTests:testWkspGanymede02()
8697=FormatterCommentsTests:testPreferencesExample08()
8698=FormatterCommentsTests:tearDownSuite()
8699=FormatterCommentsTests:testBlockComments03()
8700=FormatterCommentsTests:testWkspEclipse18()
8701=FormatterCommentsTests:testHtmlUl11()
8702=FormatterCommentsTests:testHtmlOthers03()
8703=FormatterCommentsTests:testHtmlPre08()
8704=FormatterCommentsTests:testBlockComments15()
8705=FormatterCommentsTests:testWkspEclipse06()
8706=FormatterCommentsTests:testWkspEclipse29()
8707=FormatterCommentsTests:testWkspEclipse08b()
8708=FormatterCommentsTests:testPreferencesExample14b()
8709=FormatterCommentsTests:testPreferencesExample09()
8710=FormatterCommentsTests:testBlockComments02()
8711=FormatterCommentsTests:testHtmlUl12()
8712=FormatterCommentsTests:testWkspEclipse19()
8713=FormatterCommentsTests:testTagParam06()
8714=FormatterCommentsTests:testHtmlOthers02()
8715=FormatterCommentsTests:testLineComments02b()
8716=FormatterCommentsTests:testBlockComments14()
8717=FormatterCommentsTests:testHtmlPre07()
8718=FormatterCommentsTests:testWkspEclipse07()
8719=FormatterCommentsTests:testWkspGanymede04()
8720=FormatterCommentsTests:testPreferencesExample14c()
8721=FormatterCommentsTests:testHtmlOthers05()
8722=FormatterCommentsTests:testCopyright_CBL()
8723=FormatterCommentsTests:testPreferencesExample15b()
8724=FormatterCommentsTests:testCopyright06()
8725=FormatterCommentsTests:testWkspEclipse08()
8726=FormatterCommentsTests:testHtmlUl01()
8727=FormatterCommentsTests:testTagParam01()
8728=FormatterCommentsTests:_testWkspEclipse04()
8729=FormatterCommentsTests:testTagImmutable03()
8730=FormatterCommentsTests:testWkspEclipse28d()
8731=FormatterCommentsTests:testHtmlOthers04()
8732=FormatterCommentsTests:testPreferencesExample15c()
8733=FormatterCommentsTests:testCopyright05()
8734=FormatterCommentsTests:testTagSee01()
8735=FormatterCommentsTests:testHtmlUl02()
8736=FormatterCommentsTests:testWkspEclipse09()
8737=FormatterCommentsTests:testBlockComments09()
8738=FormatterCommentsTests:testPreferencesExample14a()
8739=FormatterCommentsTests:setUpSuite()
8740=FormatterCommentsTests:testTagImmutable02()
8741=FormatterCommentsTests:_testPreferencesExample07()
8742=FormatterCommentsTests:testLineComments09()
8743=FormatterCommentsTests:testTagParam03()
8744=FormatterCommentsTests:testTagLink03a()
8745=FormatterCommentsTests:testBlockComments19()
8746=FormatterCommentsTests:testHtmlOthers07()
8747=FormatterCommentsTests:testPreferencesExample17c()
8748=FormatterCommentsTests:testHtmlOthers08()
8749=FormatterCommentsTests:testBlockComments05dc()
8750=FormatterCommentsTests:testHtmlUl03()
8751=FormatterCommentsTests:testBlockComments08()
8752=FormatterCommentsTests:testTagImmutable01()
8753=FormatterCommentsTests:testLines09()
8754=FormatterCommentsTests:testPreferencesExample16a()
8755=FormatterCommentsTests:testWkspGanymede01()
8756=FormatterCommentsTests:testLines08()
8757=FormatterCommentsTests:testWkspEclipse28b()
8758=FormatterCommentsTests:testBlockComments06()
8759=FormatterCommentsTests:testLineComments08()
8760=FormatterCommentsTests:testLines()
8761=FormatterCommentsTests:testWkspEclipse30()
8762=FormatterCommentsTests:testTagLink03b()
8763=FormatterCommentsTests:getOutputFolder()
8764=FormatterCommentsTests:testBlockComments18()
8765=FormatterCommentsTests:testHtmlOthers06()
8766=FormatterCommentsTests:testPreferencesExample15a()
8767=FormatterCommentsTests:testBlockComments05db()
8768=FormatterCommentsTests:testTagParam02()
8769=FormatterCommentsTests:testHtmlUl04()
8770=FormatterCommentsTests:testBlockComments07()
8771=FormatterCommentsTests:FormatterCommentsTests(String)
8772=FormatterCommentsTests:testPreferencesExample16b()
8773=FormatterCommentsTests:testHtmlOthers02d()
8774=FormatterCommentsTests:testLines07()
8775=FormatterCommentsTests:testHtmlPre13()
8776=FormatterCommentsTests:testLineComments07()
8777=FormatterCommentsTests:testWkspEclipse31()
8778=FormatterCommentsTests:getIndentationLevel(Scanner, int)
8779=FormatterCommentsTests:testPreferencesExample17a()
8780=FormatterCommentsTests:testTagSee04()
8781=FormatterCommentsTests:testCopyright02()
8782=FormatterCommentsTests:testHtmlOthers01b()
8783=FormatterCommentsTests:testHtmlPre02()
8784=FormatterCommentsTests:_testWkspEclipse28c()
8785=FormatterCommentsTests:testHtmlUl05()
8786=FormatterCommentsTests:testTagOthers02()
8787=FormatterCommentsTests:testLines06()
8788=FormatterCommentsTests:testHtmlOthers02c()
8789=FormatterCommentsTests:testLineComments06()
8790=FormatterCommentsTests:testHtmlPre12()
8791=FormatterCommentsTests:testWkspEclipse32()
8792=FormatterCommentsTests:testPreferencesExample10()
8793=FormatterCommentsTests:testPreferencesExample17b()
8794=FormatterCommentsTests:testWkspEclipse02b()
8795=FormatterCommentsTests:testCopyright01()
8796=FormatterCommentsTests:testHtmlOthers09()
8797=FormatterCommentsTests:testHtmlPre01()
8798=FormatterCommentsTests:testTagSee05()
8799=FormatterCommentsTests:testHtmlUl06()
8800=FormatterCommentsTests:testTagOthers03()
8801=FormatterCommentsTests:testTagLink02()
8802=FormatterCommentsTests:testWkspEclipse20()
8803=FormatterCommentsTests:testLines05()
8804=FormatterCommentsTests:testHtmlOthers02b()
8805=FormatterCommentsTests:testLineComments05()
8806=FormatterCommentsTests:suite()
8807=FormatterCommentsTests:testHtmlPre11()
8808=FormatterCommentsTests:testWkspEclipse10()
8809=FormatterCommentsTests:testWkspEclipse33()
8810=FormatterCommentsTests:testPreferencesExample11()
8811=FormatterCommentsTests:testTagSee02()
8812=FormatterCommentsTests:testCopyright04()
8813=FormatterCommentsTests:testHtmlUl07()
8814=FormatterCommentsTests:testWkspEclipse21()
8815=FormatterCommentsTests:testWkspJUnit01()
8816=FormatterCommentsTests:testLines04()
8817=FormatterCommentsTests:testLineComments04()
8818=FormatterCommentsTests:testHtmlPre10()
8819=FormatterCommentsTests:testWkspEclipse11()
8820=FormatterCommentsTests:testWkspEclipse34()
8821=FormatterCommentsTests:testPreferencesExample12()
8822=FormatterCommentsTests:testTagSee03()
8823=FormatterCommentsTests:testHtmlPre02b()
8824=FormatterCommentsTests:assumeSourceEquals(String, String, String)
8825=FormatterCommentsTests:testHtmlOthers03b()
8826=FormatterCommentsTests:testCopyright03()
8827=FormatterCommentsTests:testTagLink04()
8828=FormatterCommentsTests:formatUnit(String, String)
8829=FormatterCommentsTests:testHtmlUl08()
8830=FormatterCommentsTests:testWkspEclipse22()
8831=FormatterCommentsTests:testPreferencesExample01()
8832=FormatterCommentsTests:testTagOthers01()
8833=Test:main(String[])
8834=FilerTesterProc:process(Set<? extends TypeElement>, RoundEnvironment)
8835=FilerTesterProc:testCreateNonSourceFile(Element, String, String)
8836=FilerTesterProc:checkResourceContents01(FileObject, String, String)
8837=FilerTesterProc:testGetResource02(Element, String, String)
8838=FilerTesterProc:init(ProcessingEnvironment)
8839=FilerTesterProc:largeJavaClass()
8840=FilerTesterProc:testGetResource01(Element, String, String)
8841=FilerTesterProc:testGetCharContentLarge(Element, String, String)
8842=FilerTesterProc:checkGenUri(FileObject, String, String, String)
8843=FilerTesterProc:testNullParents(Element, String, String)
8844=FilerTesterProc:round(Set<? extends TypeElement>, RoundEnvironment)
8845=FilerTesterProc:testURI(Element, String, String)
8846=NodeSearcher:visit(TypeDeclaration, ClassScope)
8847=NodeSearcher:visit(TypeDeclaration, CompilationUnitScope)
8848=NodeSearcher:visit(MethodDeclaration, ClassScope)
8849=NodeSearcher:visit(ConstructorDeclaration, ClassScope)
8850=NodeSearcher:visit(FieldDeclaration, MethodScope)
8851=NodeSearcher:NodeSearcher(int)
8852=NodeSearcher:visit(Initializer, MethodScope)
8853=RequestorWrapper:acceptClassFiles(ClassFile[], char[])
8854=RequestorWrapper:acceptProblem(CategorizedProblem, char[], int)
8855=RequestorWrapper:RequestorWrapper(ICodeSnippetRequestor)
8856=ISourceElementRequestor:acceptFieldReference(char[], int)
8857=ISourceElementRequestor:exitConstructor(int)
8858=ISourceElementRequestor:acceptAnnotationTypeReference(char[][], int, int)
8859=ISourceElementRequestor:exitField(int, int, int)
8860=ISourceElementRequestor:exitCompilationUnit(int)
8861=ISourceElementRequestor:acceptLineSeparatorPositions(int[])
8862=ISourceElementRequestor:acceptConstructorReference(char[], int, int)
8863=ISourceElementRequestor:acceptMethodReference(char[], int, int)
8864=ISourceElementRequestor:acceptProblem(CategorizedProblem)
8865=ISourceElementRequestor:exitInitializer(int)
8866=ISourceElementRequestor:enterField(FieldInfo)
8867=ISourceElementRequestor:enterCompilationUnit()
8868=ISourceElementRequestor:acceptUnknownReference(char[][], int, int)
8869=ISourceElementRequestor:exitType(int)
8870=ISourceElementRequestor:enterConstructor(MethodInfo)
8871=ISourceElementRequestor:exitMethod(int, Expression)
8872=ISourceElementRequestor:acceptAnnotationTypeReference(char[], int)
8873=ISourceElementRequestor:acceptPackage(ImportReference)
8874=ISourceElementRequestor:enterInitializer(int, int)
8875=ISourceElementRequestor:acceptTypeReference(char[], int)
8876=ISourceElementRequestor:acceptImport(int, int, int, int, char[][], boolean, int)
8877=ISourceElementRequestor:acceptUnknownReference(char[], int)
8878=ISourceElementRequestor:enterMethod(MethodInfo)
8879=ISourceElementRequestor:acceptTypeReference(char[][], int, int)
8880=ISourceElementRequestor:enterType(TypeInfo)
8881=Test:Test()
8882=Test:foo()
8883=Example:foo(int, int, int, int, int, int)
8884=X02:foo()
8885=Example:bar()
8886=Example:foo()
8887=Example:foo2()
8888=LoadFailureHandler:reportMissingLibraries()
8889=LoadFailureHandler:reportFailureToLoadFactories()
8890=LoadFailureHandler:equals(Object)
8891=LoadFailureHandler:addMissingLibrary(String)
8892=LoadFailureHandler:hashCode()
8893=LoadFailureHandler:addFailedFactory(String)
8894=LoadFailureHandler:LoadFailureHandler(IJavaProject)
8895=LoadFailureHandler:reportFailureMarkers()
8896=RecoveredInitializer:add(Statement, int)
8897=RecoveredInitializer:updatedFieldDeclaration(int, Set<TypeDeclaration>)
8898=RecoveredInitializer:resetPendingModifiers()
8899=RecoveredInitializer:add(LocalDeclaration, int)
8900=RecoveredInitializer:updateOnClosingBrace(int, int)
8901=RecoveredInitializer:add(TypeDeclaration, int)
8902=RecoveredInitializer:RecoveredInitializer(FieldDeclaration, RecoveredElement, int)
8903=RecoveredInitializer:toString(int)
8904=RecoveredInitializer:add(Block, int)
8905=RecoveredInitializer:add(FieldDeclaration, int)
8906=RecoveredInitializer:updateSourceEndIfNecessary(int, int)
8907=RecoveredInitializer:addAnnotationName(int, int, int, int)
8908=RecoveredInitializer:RecoveredInitializer(FieldDeclaration, RecoveredElement, int, Parser)
8909=RecoveredInitializer:addModifier(int, int)
8910=RecoveredInitializer:updateOnOpeningBrace(int, int)
8911=VariableBinding:toString()
8912=VariableBinding:isParameter()
8913=VariableBinding:getModifiers()
8914=VariableBinding:getAnnotations()
8915=VariableBinding:isSynthetic()
8916=VariableBinding:isEffectivelyFinal()
8917=VariableBinding:getUnresolvedJavaElement()
8918=VariableBinding:isEnumConstant()
8919=VariableBinding:VariableBinding(BindingResolver, org.eclipse.jdt.internal.compiler.lookup.VariableBinding)
8920=VariableBinding:getType()
8921=VariableBinding:getConstantValue()
8922=VariableBinding:isEqualTo(IBinding)
8923=VariableBinding:getVariableId()
8924=VariableBinding:getName()
8925=VariableBinding:isField()
8926=VariableBinding:getJavaElement()
8927=VariableBinding:isRecovered()
8928=VariableBinding:getVariableDeclaration()
8929=VariableBinding:getKey()
8930=VariableBinding:getDeclaringMethod()
8931=VariableBinding:isDeprecated()
8932=VariableBinding:getKind()
8933=VariableBinding:getDeclaringClass()
8934=ReferenceContext:abort(int, IProblem)
8935=ReferenceContext:tagAsHavingErrors()
8936=ReferenceContext:hasErrors()
8937=ReferenceContext:compilationResult()
8938=TrueLiteral:literalType(BlockScope)
8939=TrueLiteral:generateCode(BlockScope, CodeStream, boolean)
8940=TrueLiteral:TrueLiteral(int, int)
8941=TrueLiteral:source()
8942=TrueLiteral:traverse(ASTVisitor, BlockScope)
8943=TrueLiteral:computeConstant()
8944=TrueLiteral:generateOptimizedBoolean(BlockScope, CodeStream, Label, Label, boolean)
8945=IntersectingPattern:findIndexMatches(Index, IndexQueryRequestor, SearchParticipant, IJavaSearchScope, IProgressMonitor)
8946=IntersectingPattern:hasNextQuery()
8947=IntersectingPattern:resetQuery()
8948=IntersectingPattern:IntersectingPattern(int, int)
8949=bug:pipo()
8950=bug:dummyFct3()
8951=bug:dummyFct2()
8952=A:bar()
8953=Test:foo()
8954=NameLookup:NameLookup(IPackageFragmentRoot[], HashtableOfArrayToObject, ICompilationUnit[], Map)
8955=NameLookup:findType(String, String, boolean, int, boolean, boolean, boolean, IProgressMonitor)
8956=NameLookup:Answer:isBetter(Answer)
8957=NameLookup:seekTypesInWorkingCopies(String, IPackageFragment, int, boolean, String, int, IJavaElementRequestor, boolean)
8958=NameLookup:findCompilationUnit(String[], String, PackageFragmentRoot)
8959=NameLookup:acceptType(IType, int, boolean)
8960=NameLookup:findCompilationUnit(String)
8961=NameLookup:nameMatches(String, ICompilationUnit, boolean)
8962=NameLookup:seekTypesInType(String, int, IType, IJavaElementRequestor, int)
8963=NameLookup:Answer:Answer(IType, AccessRestriction, IClasspathEntry)
8964=NameLookup:findAllTypes(String, boolean, int, IJavaElementRequestor)
8965=NameLookup:seekTypesInSourcePackage(String, IPackageFragment, int, boolean, String, int, IJavaElementRequestor)
8966=NameLookup:findPackageFragments(String, boolean)
8967=NameLookup:findType(String, IPackageFragment, boolean, int, boolean, boolean)
8968=NameLookup:findType(String, boolean, int)
8969=NameLookup:findPackageFragments(String, boolean, boolean)
8970=NameLookup:isPrimaryType(String, IType, boolean)
8971=NameLookup:seekTypesInTopLevelType(String, int, IType, IJavaElementRequestor, int)
8972=NameLookup:findType(String, boolean, int, boolean)
8973=NameLookup:seekTypes(String, IPackageFragment, boolean, int, IJavaElementRequestor, boolean)
8974=NameLookup:nameMatches(String, IJavaElement, boolean)
8975=NameLookup:findPackageFragment(IPath)
8976=NameLookup:seekPackageFragments(String, boolean, IJavaElementRequestor)
8977=NameLookup:findType(String, String, boolean, int, boolean)
8978=NameLookup:Answer:ignoreIfBetter()
8979=NameLookup:getMemberType(IType, String, int)
8980=NameLookup:findSecondaryType(String, String, IJavaProject, boolean, IProgressMonitor)
8981=NameLookup:getViolatedRestriction(String, String, ClasspathEntry, AccessRestriction)
8982=NameLookup:findType(String, boolean, int, boolean, boolean, boolean, IProgressMonitor)
8983=NameLookup:isPackage(String[])
8984=NameLookup:seekTypesInBinaryPackage(String, IPackageFragment, boolean, int, IJavaElementRequestor)
8985=NameLookup:findType(String, IPackageFragment, boolean, int)
8986=NameLookup:seekTypes(String, IPackageFragment, boolean, int, IJavaElementRequestor)
8987=firstClass:firstClass()
8988=A:foo()
8989=A:foo()
8990=A:foo(long, int, String, Object)
8991=InheritedAnnoProc:process(Set<? extends TypeElement>, RoundEnvironment)
8992=InheritedAnnoProc:collectElements()
8993=InheritedAnnoProc:examineGetElementsAnnotatedWith(RoundEnvironment)
8994=InheritedAnnoProc:examineGetRootElements(RoundEnvironment)
8995=IndentationSwitchCaseBug:IBreakIndentation()
8996=MethodDeclaration:parseStatements(Parser, CompilationUnitDeclaration)
8997=MethodDeclaration:traverse(ASTVisitor, ClassScope)
8998=MethodDeclaration:isMethod()
8999=MethodDeclaration:printReturnType(int, StringBuffer)
9000=MethodDeclaration:resolveStatements()
9001=MethodDeclaration:typeParameters()
9002=MethodDeclaration:analyseCode(ClassScope, InitializationFlowContext, FlowInfo)
9003=MethodDeclaration:MethodDeclaration(CompilationResult)
9004=DefaultCodeFormatterOptions:toString(Object, String)
9005=DefaultCodeFormatterOptions:set(Map<String, String>)
9006=DefaultCodeFormatterOptions:getMap()
9007=DefaultCodeFormatterOptions:DefaultCodeFormatterOptions()
9008=DefaultCodeFormatterOptions:setJavaConventionsSettings()
9009=DefaultCodeFormatterOptions:toInt(Object, int)
9010=DefaultCodeFormatterOptions:getJavaConventionsSettings()
9011=DefaultCodeFormatterOptions:DefaultCodeFormatterOptions(Map<String, String>)
9012=DefaultCodeFormatterOptions:setDefaultSettings()
9013=DefaultCodeFormatterOptions:getDefaultSettings()
9014=DefaultCodeFormatterOptions:getEclipseDefaultSettings()
9015=DefaultCodeFormatterOptions:setEclipseDefaultSettings()
9016=DefaultCodeFormatterOptions:setDeprecatedOptions(Map<String, String>)
9017=DefaultCodeFormatterOptions:getAlignment(int)
9018=RunCompletionParserTests:RunCompletionParserTests(String)
9019=RunCompletionParserTests:suite()
9020=Test:main(String[])
9021=SmtpServerParser:parse(ByteBuffer)
9022=SmtpServerParser:SmtpServerParser()
9023=TagElement:internalStructuralPropertiesForType(int)
9024=TagElement:fragments()
9025=TagElement:setTagName(String)
9026=TagElement:memSize()
9027=TagElement:internalGetSetObjectProperty(SimplePropertyDescriptor, boolean, Object)
9028=TagElement:getTagName()
9029=TagElement:accept0(ASTVisitor)
9030=TagElement:propertyDescriptors(int)
9031=TagElement:clone0(AST)
9032=TagElement:subtreeMatch0(ASTMatcher, Object)
9033=TagElement:TagElement(AST)
9034=TagElement:getNodeType0()
9035=TagElement:internalGetChildListProperty(ChildListPropertyDescriptor)
9036=TagElement:treeSize()
9037=TagElement:isNested()
9038=X01:foo2()
9039=X01:foo(int, int)
9040=X03:foo()
9041=EntryResult:EntryResult(char[], Object)
9042=EntryResult:isEmpty()
9043=EntryResult:addDocumentName(String)
9044=EntryResult:getWord()
9045=EntryResult:addDocumentTable(Object)
9046=EntryResult:getDocumentNames(Index)
9047=QualifiedTypeReference:traverse(ASTVisitor, BlockScope)
9048=QualifiedTypeReference:QualifiedTypeReference(char[][], long[])
9049=QualifiedTypeReference:rejectAnnotationsOnStaticMemberQualififer(Scope, ReferenceBinding, Annotation[])
9050=QualifiedTypeReference:printExpression(int, StringBuffer)
9051=QualifiedTypeReference:findNextTypeBinding(int, Scope, PackageBinding)
9052=QualifiedTypeReference:augmentTypeWithAdditionalDimensions(int, Annotation[][], boolean)
9053=QualifiedTypeReference:traverse(ASTVisitor, ClassScope)
9054=QualifiedTypeReference:getTypeBinding(Scope)
9055=QualifiedTypeReference:rejectAnnotationsOnPackageQualifiers(Scope, PackageBinding)
9056=QualifiedTypeReference:getLastToken()
9057=QualifiedTypeReference:recordResolution(LookupEnvironment, TypeBinding)
9058=QualifiedTypeReference:getAnnotatableLevels()
9059=QualifiedTypeReference:getTypeName()
9060=GrammarCoverageTests308:test028()
9061=GrammarCoverageTests308:test005()
9062=GrammarCoverageTests308:test039()
9063=GrammarCoverageTests308:test016()
9064=GrammarCoverageTests308:test006()
9065=GrammarCoverageTests308:test029()
9066=GrammarCoverageTests308:test017()
9067=GrammarCoverageTests308:test007()
9068=GrammarCoverageTests308:test018()
9069=GrammarCoverageTests308:test008()
9070=GrammarCoverageTests308:test019()
9071=GrammarCoverageTests308:test009()
9072=GrammarCoverageTests308:suite()
9073=GrammarCoverageTests308:test030()
9074=GrammarCoverageTests308:test020()
9075=GrammarCoverageTests308:test031()
9076=GrammarCoverageTests308:test021()
9077=GrammarCoverageTests308:test032()
9078=GrammarCoverageTests308:test022()
9079=GrammarCoverageTests308:testClass()
9080=GrammarCoverageTests308:test010()
9081=GrammarCoverageTests308:test033()
9082=GrammarCoverageTests308:GrammarCoverageTests308(String)
9083=GrammarCoverageTests308:test023()
9084=GrammarCoverageTests308:test000()
9085=GrammarCoverageTests308:test034()
9086=GrammarCoverageTests308:test011()
9087=GrammarCoverageTests308:test001()
9088=GrammarCoverageTests308:test024()
9089=GrammarCoverageTests308:test012()
9090=GrammarCoverageTests308:test035()
9091=GrammarCoverageTests308:test002()
9092=GrammarCoverageTests308:test025()
9093=GrammarCoverageTests308:test013()
9094=GrammarCoverageTests308:test036()
9095=GrammarCoverageTests308:test003()
9096=GrammarCoverageTests308:test026()
9097=GrammarCoverageTests308:test014()
9098=GrammarCoverageTests308:test037()
9099=GrammarCoverageTests308:test027()
9100=GrammarCoverageTests308:test004()
9101=GrammarCoverageTests308:test038()
9102=GrammarCoverageTests308:test015()
9103=Receiver:Receiver(char[], long, TypeReference, NameReference, int)
9104=Receiver:print(int, StringBuffer)
9105=Receiver:isReceiver()
9106=ConstraintTypeFormula:equalsEquals(ConstraintTypeFormula)
9107=ConstraintTypeFormula:create(TypeBinding, TypeBinding, int, boolean)
9108=ConstraintTypeFormula:applySubstitution(BoundSet, InferenceVariable[])
9109=ConstraintTypeFormula:ConstraintTypeFormula(TypeBinding, TypeBinding, int, boolean)
9110=ConstraintTypeFormula:findMostSpecificSuperArray(TypeBinding, TypeBinding[], TypeBinding)
9111=ConstraintTypeFormula:reduceSubType(Scope, TypeBinding, TypeBinding)
9112=ConstraintTypeFormula:addConstraintsFromTypeParameters(TypeBinding, ParameterizedTypeBinding, List<ConstraintFormula>)
9113=ConstraintTypeFormula:checkIVFreeTVmatch(TypeBinding, TypeBinding)
9114=ConstraintTypeFormula:reduce(InferenceContext18)
9115=ConstraintTypeFormula:create(TypeBinding, TypeBinding, int)
9116=ConstraintTypeFormula:reduceTypeEquality(TypeBinding)
9117=ConstraintTypeFormula:toString()
9118=ConstraintTypeFormula:ConstraintTypeFormula()
9119=Messages:Messages()
9120=CodeSnippetParser:consumeEnhancedForStatement()
9121=CodeSnippetParser:consumeInternalCompilationUnit()
9122=CodeSnippetParser:consumeStatementContinue()
9123=CodeSnippetParser:consumeMethodDeclaration(boolean, boolean)
9124=CodeSnippetParser:consumeClassDeclaration()
9125=CodeSnippetParser:resumeOnSyntaxError()
9126=CodeSnippetParser:consumeMethodInvocationSuper()
9127=CodeSnippetParser:consumeMethodInvocationSuperWithTypeArguments()
9128=CodeSnippetParser:recordLastStatementIfNeeded()
9129=CodeSnippetParser:consumeEmptyStatement()
9130=CodeSnippetParser:consumeStatementContinueWithLabel()
9131=CodeSnippetParser:isTopLevelType()
9132=CodeSnippetParser:consumeFieldAccess(boolean)
9133=CodeSnippetParser:consumeStatementCatch()
9134=CodeSnippetParser:ignoreExpressionAssignment()
9135=CodeSnippetParser:consumeStatementReturn()
9136=CodeSnippetParser:consumeStatementSynchronized()
9137=CodeSnippetParser:consumeExpressionStatement()
9138=CodeSnippetParser:consumeStatementLabel()
9139=CodeSnippetParser:reportSyntaxErrors(boolean, int)
9140=CodeSnippetParser:consumeStatementIfWithElse()
9141=CodeSnippetParser:consumeStatementBreak()
9142=CodeSnippetParser:consumeStatementThrow()
9143=CodeSnippetParser:consumeStatementDo()
9144=CodeSnippetParser:newMessageSendWithTypeArguments()
9145=CodeSnippetParser:newMessageSend()
9146=CodeSnippetParser:classInstanceCreation(boolean)
9147=CodeSnippetParser:consumeStatementFor()
9148=CodeSnippetParser:endParse(int)
9149=CodeSnippetParser:consumeMethodInvocationNameWithTypeArguments()
9150=CodeSnippetParser:consumeStatementBreakWithLabel()
9151=CodeSnippetParser:consumeStatementWhile()
9152=CodeSnippetParser:consumeStatementTry(boolean, boolean)
9153=CodeSnippetParser:consumeInternalCompilationUnitWithTypes()
9154=CodeSnippetParser:consumeLocalVariableDeclarationStatement()
9155=CodeSnippetParser:CodeSnippetParser(ProblemReporter, EvaluationContext, boolean, int, int)
9156=CodeSnippetParser:consumeMethodInvocationName()
9157=CodeSnippetParser:getUnspecifiedReferenceOptimized()
9158=CodeSnippetParser:consumeStatementSwitch()
9159=CodeSnippetParser:getUnspecifiedReference(boolean)
9160=CodeSnippetParser:consumePrimaryNoNewArrayThis()
9161=CodeSnippetParser:consumeClassInstanceCreationExpressionWithTypeArguments()
9162=CodeSnippetParser:consumeStatementIfNoElse()
9163=CodeSnippetParser:consumeClassHeaderName1()
9164=X01:foo()
9165=X14c:foo()
9166=ExecutableElementImpl:getKind()
9167=ExecutableElementImpl:getReceiverType()
9168=ExecutableElementImpl:getDefaultValue()
9169=ExecutableElementImpl:getThrownTypes()
9170=ExecutableElementImpl:ExecutableElementImpl(BaseProcessingEnvImpl, MethodBinding)
9171=ExecutableElementImpl:getSimpleName()
9172=ExecutableElementImpl:overrides(ExecutableElement, TypeElement)
9173=ExecutableElementImpl:getAnnotationBindings()
9174=ExecutableElementImpl:getParameters()
9175=ExecutableElementImpl:getEnclosingElement()
9176=ExecutableElementImpl:hides(Element)
9177=ExecutableElementImpl:accept(ElementVisitor<R, P>, P)
9178=ExecutableElementImpl:getFileName()
9179=ExecutableElementImpl:getModifiers()
9180=ExecutableElementImpl:getReturnType()
9181=ExecutableElementImpl:getEnclosedElements()
9182=ExecutableElementImpl:getTypeParameters()
9183=ExecutableElementImpl:isDefault()
9184=ExecutableElementImpl:isVarArgs()
9185=ExecutableElementImpl:getPackage()
9186=A:foo(long, int, String, Object)
9187=Test:bar()
9188=Test:foo(int)
9189=Test:main(String[])
9190=Test:main(String[])
9191=Test:service()
9192=Test:service2()
9193=Test:service3()
9194=FlowInfo:resetNullInfo(LocalVariableBinding)
9195=FlowInfo:markAsDefinitelyUnknown(LocalVariableBinding)
9196=FlowInfo:canOnlyBeNull(LocalVariableBinding)
9197=FlowInfo:isPotentiallyUnknown(LocalVariableBinding)
9198=FlowInfo:initsWhenTrue()
9199=FlowInfo:mergedWith(UnconditionalFlowInfo)
9200=FlowInfo:markPotentiallyNonNullBit(LocalVariableBinding)
9201=FlowInfo:resetAssignmentInfo(LocalVariableBinding)
9202=FlowInfo:toString()
9203=FlowInfo:nullInfoLessUnconditionalCopy()
9204=FlowInfo:nullStatus(LocalVariableBinding)
9205=FlowInfo:addPotentialInitializationsFrom(FlowInfo)
9206=FlowInfo:mergeNullStatus(int, int)
9207=FlowInfo:setReachMode(int)
9208=FlowInfo:mergedOptimizedBranchesIfElse(FlowInfo, boolean, FlowInfo, boolean, boolean, FlowInfo, IfStatement, boolean)
9209=FlowInfo:safeInitsWhenTrue()
9210=FlowInfo:copy()
9211=FlowInfo:hasNullInfoFor(LocalVariableBinding)
9212=FlowInfo:initsWhenFalse()
9213=FlowInfo:markPotentiallyNullBit(LocalVariableBinding)
9214=FlowInfo:isProtectedNonNull(LocalVariableBinding)
9215=FlowInfo:unconditionalInits()
9216=FlowInfo:isDefinitelyUnknown(LocalVariableBinding)
9217=FlowInfo:cannotBeDefinitelyNullOrNonNull(LocalVariableBinding)
9218=FlowInfo:markNullStatus(LocalVariableBinding, int)
9219=FlowInfo:addNullInfoFrom(FlowInfo)
9220=FlowInfo:unconditionalCopy()
9221=FlowInfo:isPotentiallyNull(LocalVariableBinding)
9222=FlowInfo:conditional(FlowInfo, FlowInfo)
9223=FlowInfo:markAsDefinitelyAssigned(LocalVariableBinding)
9224=FlowInfo:isDefinitelyAssigned(LocalVariableBinding)
9225=FlowInfo:unconditionalInitsWithoutSideEffect()
9226=FlowInfo:isPotentiallyNonNull(LocalVariableBinding)
9227=FlowInfo:markPotentiallyUnknownBit(LocalVariableBinding)
9228=FlowInfo:markAsComparedEqualToNonNull(LocalVariableBinding)
9229=FlowInfo:markAsDefinitelyAssigned(FieldBinding)
9230=FlowInfo:isPotentiallyAssigned(LocalVariableBinding)
9231=FlowInfo:isDefinitelyNull(LocalVariableBinding)
9232=FlowInfo:asNegatedCondition()
9233=FlowInfo:isDefinitelyNonNull(LocalVariableBinding)
9234=FlowInfo:isPotentiallyAssigned(FieldBinding)
9235=FlowInfo:markAsComparedEqualToNull(LocalVariableBinding)
9236=FlowInfo:tagBitsToNullStatus(long)
9237=FlowInfo:isProtectedNull(LocalVariableBinding)
9238=FlowInfo:reachMode()
9239=FlowInfo:isDefinitelyAssigned(FieldBinding)
9240=FlowInfo:markAsDefinitelyNull(LocalVariableBinding)
9241=FlowInfo:mergedOptimizedBranches(FlowInfo, boolean, FlowInfo, boolean, boolean)
9242=FlowInfo:initial(int)
9243=FlowInfo:cannotBeNull(LocalVariableBinding)
9244=FlowInfo:markAsDefinitelyNonNull(LocalVariableBinding)
9245=FlowInfo:addInitializationsFrom(FlowInfo)
9246=FlowInfo:unconditionalFieldLessCopy()
9247=X02:foo(int, int)
9248=Constant:computeConstantOperationAND(Constant, int, Constant, int)
9249=Constant:computeConstantOperation(Constant, int, int, Constant, int)
9250=Constant:charValue()
9251=Constant:shortValue()
9252=Constant:computeConstantOperationXOR(Constant, int, Constant, int)
9253=Constant:intValue()
9254=Constant:computeConstantOperationAND_AND(Constant, int, Constant, int)
9255=Constant:computeConstantOperationLEFT_SHIFT(Constant, int, Constant, int)
9256=Constant:typeName()
9257=Constant:computeConstantOperationPLUS(Constant, int, Constant, int)
9258=Constant:computeConstantOperationREMAINDER(Constant, int, Constant, int)
9259=Constant:computeConstantOperationOR_OR(Constant, int, Constant, int)
9260=Constant:castTo(int)
9261=Constant:hasSameValue(Constant)
9262=Constant:computeConstantOperationGREATER_EQUAL(Constant, int, Constant, int)
9263=Constant:floatValue()
9264=Constant:computeConstantOperationLESS_EQUAL(Constant, int, Constant, int)
9265=Constant:computeConstantOperationMULTIPLY(Constant, int, Constant, int)
9266=Constant:computeConstantOperationEQUAL_EQUAL(Constant, int, Constant, int)
9267=Constant:computeConstantOperationGREATER(Constant, int, Constant, int)
9268=Constant:typeID()
9269=Constant:toString()
9270=Constant:computeConstantOperationUNSIGNED_RIGHT_SHIFT(Constant, int, Constant, int)
9271=Constant:computeConstantOperationDIVIDE(Constant, int, Constant, int)
9272=Constant:doubleValue()
9273=Constant:stringValue()
9274=Constant:computeConstantOperationMINUS(Constant, int, Constant, int)
9275=Constant:computeConstantOperationLESS(Constant, int, Constant, int)
9276=Constant:computeConstantOperationOR(Constant, int, Constant, int)
9277=Constant:computeConstantOperation(Constant, int, int)
9278=Constant:byteValue()
9279=Constant:longValue()
9280=Constant:computeConstantOperationRIGHT_SHIFT(Constant, int, Constant, int)
9281=Constant:booleanValue()
9282=A:foo(long, int, String, Object)
9283=SingleMemberAnnotation:printExpression(int, StringBuffer)
9284=SingleMemberAnnotation:SingleMemberAnnotation(char[], long, int)
9285=SingleMemberAnnotation:traverse(ASTVisitor, BlockScope)
9286=SingleMemberAnnotation:traverse(ASTVisitor, ClassScope)
9287=SingleMemberAnnotation:SingleMemberAnnotation(char[][], long[], int)
9288=SingleMemberAnnotation:traverse(ASTVisitor, CompilationUnitScope)
9289=DirectoryComparator:collectAllFiles(File, ArrayList)
9290=DirectoryComparator:logError(String)
9291=DirectoryComparator:getAllFiles(File)
9292=DirectoryComparator:main(String[])
9293=DirectoryComparator:compare()
9294=DirectoryComparator:getBytes(File)
9295=DirectoryComparator:DirectoryComparator(String[])
9296=DirectoryComparator:equals(byte[], byte[])
9297=CopyResourceElementsOperation:updatePackageStatement(CompilationUnit, String[], ASTRewrite, ICompilationUnit)
9298=CopyResourceElementsOperation:updateContent(ICompilationUnit, PackageFragment, String)
9299=CopyResourceElementsOperation:prepareDeltas(IJavaElement, IJavaElement, boolean, boolean)
9300=CopyResourceElementsOperation:updateReadOnlyPackageFragmentsForMove(IContainer, PackageFragmentRoot, String[], boolean)
9301=CopyResourceElementsOperation:getResource(IJavaElement)
9302=CopyResourceElementsOperation:processElements()
9303=CopyResourceElementsOperation:getDeltaFor(IJavaProject)
9304=CopyResourceElementsOperation:verify()
9305=CopyResourceElementsOperation:updateTypeName(ICompilationUnit, CompilationUnit, String, String, ASTRewrite)
9306=CopyResourceElementsOperation:initializeASTParser()
9307=CopyResourceElementsOperation:processElement(IJavaElement)
9308=CopyResourceElementsOperation:getSchedulingRule(IJavaElement)
9309=CopyResourceElementsOperation:processCompilationUnitResource(ICompilationUnit, PackageFragment)
9310=CopyResourceElementsOperation:processDeltas()
9311=CopyResourceElementsOperation:processPackageFragmentResource(PackageFragment, PackageFragmentRoot, String)
9312=CopyResourceElementsOperation:getMainTaskName()
9313=CopyResourceElementsOperation:saveContent(PackageFragment, String, TextEdit, String, IFile)
9314=CopyResourceElementsOperation:getSchedulingRule()
9315=CopyResourceElementsOperation:collectResourcesOfInterest(IPackageFragment)
9316=CopyResourceElementsOperation:updateReadOnlyPackageFragmentsForCopy(IContainer, PackageFragmentRoot, String[])
9317=CopyResourceElementsOperation:createNeededPackageFragments(IContainer, PackageFragmentRoot, String[], boolean)
9318=CopyResourceElementsOperation:verify(IJavaElement)
9319=CopyResourceElementsOperation:CopyResourceElementsOperation(IJavaElement[], IJavaElement[], boolean)
9320=A:foo(Object, A)
9321=ResolveLocalVariable:foo1()
9322=ResolveLocalVariable:foo2()
9323=FormatterTest:doTest()
9324=AbstractTypeDeclaration:getName()
9325=AbstractTypeDeclaration:setName(SimpleName)
9326=AbstractTypeDeclaration:internalBodyDeclarationsProperty()
9327=AbstractTypeDeclaration:getBodyDeclarationsProperty()
9328=AbstractTypeDeclaration:bodyDeclarations()
9329=AbstractTypeDeclaration:isPackageMemberTypeDeclaration()
9330=AbstractTypeDeclaration:isLocalTypeDeclaration()
9331=AbstractTypeDeclaration:AbstractTypeDeclaration(AST)
9332=AbstractTypeDeclaration:internalBodyDeclarationPropertyFactory(Class)
9333=AbstractTypeDeclaration:internalNameProperty()
9334=AbstractTypeDeclaration:resolveBinding()
9335=AbstractTypeDeclaration:isMemberTypeDeclaration()
9336=AbstractTypeDeclaration:internalNamePropertyFactory(Class)
9337=AbstractTypeDeclaration:internalResolveBinding()
9338=AbstractTypeDeclaration:memSize()
9339=AbstractTypeDeclaration:getNameProperty()
9340=ToStringSorter:compare(String, String)
9341=ToStringSorter:sort(Object[], String[])
9342=ToStringSorter:quickSort(int, int)
9343=JavadocFieldReference:printExpression(int, StringBuffer)
9344=JavadocFieldReference:traverse(ASTVisitor, BlockScope)
9345=JavadocFieldReference:resolveType(ClassScope)
9346=JavadocFieldReference:JavadocFieldReference(char[], long)
9347=JavadocFieldReference:isSuperAccess()
9348=JavadocFieldReference:internalResolveType(Scope)
9349=JavadocFieldReference:resolveType(BlockScope)
9350=ProblemHandler:suspendTempErrorHandlingPolicy()
9351=ProblemHandler:resumeTempErrorHandlingPolicy(IErrorHandlingPolicy)
9352=ProblemHandler:createProblem(char[], int, String[], String[], int, int, int, int, int)
9353=ProblemHandler:switchErrorHandlingPolicy(IErrorHandlingPolicy)
9354=ProblemHandler:ProblemHandler(IErrorHandlingPolicy, CompilerOptions, IProblemFactory)
9355=ProblemHandler:handle(int, String[], int, String[], int, int, int, ReferenceContext, CompilationResult)
9356=ProblemHandler:record(CategorizedProblem, CompilationResult, ReferenceContext, boolean)
9357=ProblemHandler:computeSeverity(int)
9358=ProblemHandler:createProblem(char[], int, String[], int, String[], int, int, int, int, int)
9359=ProblemHandler:handle(int, String[], String[], int, int, ReferenceContext, CompilationResult)
9360=JavaSearchGenericFieldTests:setUp()
9361=JavaSearchGenericFieldTests:testElementPatternLocalVariables12()
9362=JavaSearchGenericFieldTests:testElementPatternLocalVariables11()
9363=JavaSearchGenericFieldTests:testElementPatternLocalVariables02()
9364=JavaSearchGenericFieldTests:testElementPatternLocalVariables01()
9365=JavaSearchGenericFieldTests:testElementPatternSingleParameterizedType04()
9366=JavaSearchGenericFieldTests:testElementPatternSingleParameterizedType03()
9367=JavaSearchGenericFieldTests:testElementPatternSingleParameterizedType02()
9368=JavaSearchGenericFieldTests:testElementPatternLocalVariables10()
9369=JavaSearchGenericFieldTests:testElementPatternSingleParameterizedType01()
9370=JavaSearchGenericFieldTests:JavaSearchGenericFieldTests(String)
9371=JavaSearchGenericFieldTests:testElementPatternLocalVariables09()
9372=JavaSearchGenericFieldTests:testElementPatternSingleTypeArgument03()
9373=JavaSearchGenericFieldTests:testStringPattern01()
9374=JavaSearchGenericFieldTests:testElementPatternLocalVariables08()
9375=JavaSearchGenericFieldTests:testElementPatternSingleTypeArgument02()
9376=JavaSearchGenericFieldTests:testElementPatternMultipleParameterizedType04()
9377=JavaSearchGenericFieldTests:testElementPatternSingleTypeArgument04()
9378=JavaSearchGenericFieldTests:testStringPattern05()
9379=JavaSearchGenericFieldTests:testElementPatternMultipleTypeArgument03()
9380=JavaSearchGenericFieldTests:suite()
9381=JavaSearchGenericFieldTests:testElementPatternLocalVariables04()
9382=JavaSearchGenericFieldTests:testElementPatternMultipleParameterizedType01()
9383=JavaSearchGenericFieldTests:testStringPattern04()
9384=JavaSearchGenericFieldTests:testElementPatternMultipleTypeArgument04()
9385=JavaSearchGenericFieldTests:testElementPatternLocalVariables03()
9386=JavaSearchGenericFieldTests:testElementPatternLocalVariables07()
9387=JavaSearchGenericFieldTests:testElementPatternSingleTypeArgument01()
9388=JavaSearchGenericFieldTests:testStringPattern03()
9389=JavaSearchGenericFieldTests:testElementPatternMultipleTypeArgument01()
9390=JavaSearchGenericFieldTests:testElementPatternLocalVariables06()
9391=JavaSearchGenericFieldTests:testElementPatternMultipleParameterizedType03()
9392=JavaSearchGenericFieldTests:testStringPattern02()
9393=JavaSearchGenericFieldTests:testElementPatternMultipleTypeArgument02()
9394=JavaSearchGenericFieldTests:testElementPatternMultipleParameterizedType02()
9395=JavaSearchGenericFieldTests:testElementPatternLocalVariables05()
9396=A:method()
9397=X09:foo(int, int)
9398=Name:Name(AST)
9399=Name:resolveBinding()
9400=Name:getFullyQualifiedName()
9401=Name:isSimpleName()
9402=Name:appendName(StringBuffer)
9403=Name:isQualifiedName()
9404=CreateImportOperation:initializeDefaultPosition()
9405=CreateImportOperation:generateResultHandle()
9406=CreateImportOperation:CreateImportOperation(String, ICompilationUnit, int)
9407=CreateImportOperation:getMainTaskName()
9408=CreateImportOperation:verify()
9409=CreateImportOperation:generateElementAST(ASTRewrite, ICompilationUnit)
9410=CreateImportOperation:getChildPropertyDescriptor(ASTNode)
9411=Foo:m1()
9412=Round1GenAnnotationFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
9413=Round1GenAnnotationFactory:supportedAnnotationTypes()
9414=Round1GenAnnotationFactory:supportedOptions()
9415=TestRunner:clearStatus()
9416=TestRunner:createUseLoaderCheckBox()
9417=TestRunner:createRunButton()
9418=TestRunner:createTestRunViews()
9419=TestRunner:runTest(Test)
9420=TestRunner:showFailureDetail(Test)
9421=TestRunner:saveHistory()
9422=TestRunner:createUI(String)
9423=TestRunner:addGrid(JPanel, Component, int, int, int, int, double, int)
9424=TestRunner:terminate()
9425=TestRunner:testViewChanged()
9426=TestRunner:TestRunner()
9427=TestRunner:createLogo()
9428=TestRunner:createTestCollector()
9429=TestRunner:loadHistory(JComboBox)
9430=TestRunner:createSuiteCombo()
9431=TestRunner:browseTestClasses()
9432=TestRunner:setButtonLabel(JButton, String)
9433=TestRunner:createFrame()
9434=TestRunner:shouldReload()
9435=TestRunner:reset()
9436=TestRunner:rerun()
9437=TestRunner:showInfo(String)
9438=TestRunner:main(String[])
9439=TestRunner:createFailedPanel()
9440=TestRunner:setSuite(String)
9441=TestRunner:getSuiteText()
9442=TestRunner:testEnded(String)
9443=TestRunner:runFinished(Test)
9444=TestRunner:addToHistory(String)
9445=TestRunner:createStatusLine()
9446=TestRunner:createQuitButton()
9447=TestRunner:removeUpdate(DocumentEvent)
9448=TestRunner:showStatus(String)
9449=TestRunner:createBrowseButton()
9450=TestRunner:getSettingsFile()
9451=TestRunner:textChanged()
9452=TestRunner:loadFrameIcon()
9453=TestRunner:createTestResult()
9454=TestRunner:synchUI()
9455=TestRunner:testFailed(int, Test, Throwable)
9456=TestRunner:rerunTest(Test)
9457=TestRunner:runFailed(String)
9458=TestRunner:handleTestSelected(Test)
9459=TestRunner:postInfo(String)
9460=TestRunner:createFailureDetailView()
9461=TestRunner:run(Class)
9462=TestRunner:runSuite()
9463=TestRunner:createJUnitMenu()
9464=TestRunner:postStatus(String)
9465=TestRunner:createCounterPanel()
9466=TestRunner:start(Test)
9467=TestRunner:appendFailure(Test, Throwable)
9468=TestRunner:revealFailure(Test)
9469=TestRunner:aboutToStart(Test)
9470=TestRunner:getFailures()
9471=TestRunner:getIconResource(Class, String)
9472=TestRunner:testStarted(String)
9473=TestRunner:start(String[])
9474=TestRunner:createMenus(JMenuBar)
9475=TestRunner:about()
9476=TestRunner:insertUpdate(DocumentEvent)
9477=TestRunner:doRunTest(Test)
9478=TestRunner:pruneHistory()
9479=Test:main(String[])
9480=TestSourceElementRequestor:enterCompilationUnit()
9481=TestSourceElementRequestor:exitInitializer(int)
9482=TestSourceElementRequestor:acceptUnknownReference(char[][], int, int)
9483=TestSourceElementRequestor:exitConstructor(int)
9484=TestSourceElementRequestor:acceptUnknownReference(char[], int)
9485=TestSourceElementRequestor:acceptLineSeparatorPositions(int[])
9486=TestSourceElementRequestor:exitMethod(int, Expression)
9487=TestSourceElementRequestor:acceptMethodReference(char[], int, int)
9488=TestSourceElementRequestor:acceptProblem(CategorizedProblem)
9489=TestSourceElementRequestor:acceptAnnotationTypeReference(char[], int)
9490=TestSourceElementRequestor:acceptAnnotationTypeReference(char[][], int, int)
9491=TestSourceElementRequestor:acceptPackage(ImportReference)
9492=TestSourceElementRequestor:enterConstructor(MethodInfo)
9493=TestSourceElementRequestor:acceptFieldReference(char[], int)
9494=TestSourceElementRequestor:acceptTypeReference(char[], int)
9495=TestSourceElementRequestor:enterMethod(MethodInfo)
9496=TestSourceElementRequestor:acceptTypeReference(char[][], int, int)
9497=TestSourceElementRequestor:enterField(FieldInfo)
9498=TestSourceElementRequestor:acceptConstructorReference(char[], int, int)
9499=TestSourceElementRequestor:exitType(int)
9500=TestSourceElementRequestor:exitField(int, int, int)
9501=TestSourceElementRequestor:enterInitializer(int, int)
9502=TestSourceElementRequestor:exitCompilationUnit(int)
9503=TestSourceElementRequestor:TestSourceElementRequestor()
9504=TestSourceElementRequestor:acceptImport(int, int, int, int, char[][], boolean, int)
9505=TestSourceElementRequestor:enterType(TypeInfo)
9506=ArrayQualifiedTypeReference:printExpression(int, StringBuffer)
9507=ArrayQualifiedTypeReference:ArrayQualifiedTypeReference(char[][], int, long[])
9508=ArrayQualifiedTypeReference:setAnnotationsOnDimensions(Annotation[][])
9509=ArrayQualifiedTypeReference:traverse(ASTVisitor, BlockScope)
9510=ArrayQualifiedTypeReference:getParameterizedTypeName()
9511=ArrayQualifiedTypeReference:extraDimensions()
9512=ArrayQualifiedTypeReference:getTypeBinding(Scope)
9513=ArrayQualifiedTypeReference:getAnnotationsOnDimensions(boolean)
9514=ArrayQualifiedTypeReference:traverse(ASTVisitor, ClassScope)
9515=ArrayQualifiedTypeReference:ArrayQualifiedTypeReference(char[][], int, Annotation[][], long[])
9516=ArrayQualifiedTypeReference:dimensions()
9517=ArrayQualifiedTypeReference:internalResolveType(Scope, int)
9518=IdeOutputFileObject:openInputStream()
9519=IdeOutputFileObject:openReader(boolean)
9520=IdeOutputFileObject:getCharContent(boolean)
9521=IdeOutputFileObject:delete()
9522=IdeOutputFileObject:getLastModified()
9523=SourceElementParser:reset()
9524=SourceElementParser:setRequestor(ISourceElementRequestor)
9525=SourceElementParser:getTypeReference(int)
9526=SourceElementParser:consumeClassHeaderName1()
9527=SourceElementParser:consumeMethodInvocationSuper()
9528=SourceElementParser:consumeMethodHeaderNameWithTypeParameters(boolean)
9529=SourceElementParser:checkComment()
9530=SourceElementParser:consumeSingleTypeImportDeclarationName()
9531=SourceElementParser:newQualifiedNameReference(char[][], long[], int, int)
9532=SourceElementParser:getUnspecifiedReference(boolean)
9533=SourceElementParser:endParse(int)
9534=SourceElementParser:consumeFormalParameter(boolean)
9535=SourceElementParser:consumeAnnotationTypeDeclarationHeaderNameWithTypeParameters()
9536=SourceElementParser:SourceElementParser(ISourceElementRequestor, IProblemFactory, CompilerOptions, boolean, boolean)
9537=SourceElementParser:consumeConstructorHeaderNameWithTypeParameters()
9538=SourceElementParser:consumeInterfaceHeaderName1()
9539=SourceElementParser:consumeTypeElidedLambdaParameter(boolean)
9540=SourceElementParser:consumeCatchFormalParameter()
9541=SourceElementParser:SourceElementParser(ISourceElementRequestor, IProblemFactory, CompilerOptions, boolean, boolean, boolean)
9542=SourceElementParser:consumeAnnotationTypeDeclarationHeaderName()
9543=SourceElementParser:consumeExitVariableWithoutInitialization()
9544=SourceElementParser:consumeEnumHeaderNameWithTypeParameters()
9545=SourceElementParser:consumeSingleMemberAnnotation(boolean)
9546=SourceElementParser:addUnknownRef(NameReference)
9547=SourceElementParser:consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()
9548=SourceElementParser:consumeMethodInvocationPrimaryWithTypeArguments()
9549=SourceElementParser:parseCompilationUnit(ICompilationUnit, boolean, IProgressMonitor)
9550=SourceElementParser:consumeEnumConstantNoClassBody()
9551=SourceElementParser:consumeTypeImportOnDemandDeclarationName()
9552=SourceElementParser:convertToMethodDeclaration(ConstructorDeclaration, CompilationResult)
9553=SourceElementParser:consumeNormalAnnotation(boolean)
9554=SourceElementParser:consumeFieldAccess(boolean)
9555=SourceElementParser:consumeMethodInvocationPrimary()
9556=SourceElementParser:consumeMethodInvocationSuperWithTypeArguments()
9557=SourceElementParser:consumeConstructorHeaderName()
9558=SourceElementParser:newImportReference(char[][], long[], boolean, int)
9559=SourceElementParser:consumeExitVariableWithInitialization()
9560=SourceElementParser:consumeEnumConstantWithClassBody()
9561=SourceElementParser:consumeMethodInvocationName()
9562=SourceElementParser:consumeMarkerAnnotation(boolean)
9563=SourceElementParser:newSingleNameReference(char[], long)
9564=SourceElementParser:consumeAnnotationAsModifier()
9565=SourceElementParser:consumeStaticImportOnDemandDeclarationName()
9566=SourceElementParser:consumeEnumHeaderName()
9567=SourceElementParser:consumeMethodHeaderName(boolean)
9568=SourceElementParser:rememberCategories()
9569=SourceElementParser:classInstanceCreation(boolean)
9570=SourceElementParser:consumeClassInstanceCreationExpressionWithTypeArguments()
9571=SourceElementParser:consumeSingleStaticImportDeclarationName()
9572=SourceElementParser:consumeMemberValuePair()
9573=SourceElementParser:consumeMethodInvocationNameWithTypeArguments()
9574=SourceElementParser:getUnspecifiedReferenceOptimized()
9575=SourceElementParser:acceptJavadocTypeReference(Expression)
9576=CompletionParserTest18:CompletionParserTest18(String)
9577=CompletionParserTest18:test428735a()
9578=CompletionParserTest18:test0007()
9579=CompletionParserTest18:test0006()
9580=CompletionParserTest18:test405126()
9581=CompletionParserTest18:test425084()
9582=CompletionParserTest18:test417935()
9583=CompletionParserTest18:testLocalsPromotion()
9584=CompletionParserTest18:test428735c()
9585=CompletionParserTest18:test0004()
9586=CompletionParserTest18:test428735b()
9587=CompletionParserTest18:test0005()
9588=CompletionParserTest18:test428735e()
9589=CompletionParserTest18:test0002()
9590=CompletionParserTest18:test428735d()
9591=CompletionParserTest18:test435219()
9592=CompletionParserTest18:test430667()
9593=CompletionParserTest18:test0003()
9594=CompletionParserTest18:test430656()
9595=CompletionParserTest18:test428735g()
9596=CompletionParserTest18:suite()
9597=CompletionParserTest18:testBrokenMethodCall()
9598=CompletionParserTest18:testUnspecifiedReference()
9599=CompletionParserTest18:test428735f()
9600=CompletionParserTest18:test0001()
9601=CompletionParserTest18:test0010()
9602=CompletionParserTest18:test424080()
9603=CompletionParserTest18:testElidedCompletion()
9604=CompletionParserTest18:test430667b()
9605=CompletionParserTest18:test428735h()
9606=CompletionParserTest18:test473008()
9607=CompletionParserTest18:test430667c()
9608=CompletionParserTest18:test427322a()
9609=CompletionParserTest18:test427532()
9610=CompletionParserTest18:test438952()
9611=CompletionParserTest18:test430667d()
9612=CompletionParserTest18:test446765()
9613=CompletionParserTest18:test427117()
9614=CompletionParserTest18:test427463()
9615=CompletionParserTest18:testCompletionLocation()
9616=CompletionParserTest18:test402081()
9617=CompletionParserTest18:test425084b()
9618=CompletionParserTest18:test422468()
9619=CompletionParserTest18:test427255()
9620=CompletionParserTest18:testElidedCompletion2()
9621=CompletionParserTest18:test435682()
9622=CompletionParserTest18:test427322()
9623=CompletionParserTest18:test428735()
9624=CompletionParserTest18:test430667a()
9625=RegressionTestSetup:RegressionTestSetup(long)
9626=RegressionTestSetup:setUp()
9627=RegressionTestSetup:tearDown()
9628=A:theMethod(int)
9629=Assert:notNull(Object, String)
9630=Assert:method(String, String, String)
9631=CancelableNameEnvironment:checkCanceled()
9632=CancelableNameEnvironment:findType(char[][])
9633=CancelableNameEnvironment:findTypes(char[], boolean, boolean, int, ISearchRequestor, IProgressMonitor)
9634=CancelableNameEnvironment:findPackages(char[], ISearchRequestor)
9635=CancelableNameEnvironment:CancelableNameEnvironment(JavaProject, WorkingCopyOwner, IProgressMonitor)
9636=CancelableNameEnvironment:findType(char[], char[][], boolean)
9637=CancelableNameEnvironment:findType(char[], char[][])
9638=CancelableNameEnvironment:setMonitor(IProgressMonitor)
9639=A:foo()
9640=JavadocCompletionParserTest:getCompilerOptions()
9641=JavadocCompletionParserTest:assertCompletionNodeResult(String, String)
9642=JavadocCompletionParserTest:verifyCompletionInJavadoc(String, String)
9643=JavadocCompletionParserTest:test020()
9644=JavadocCompletionParserTest:setUp()
9645=JavadocCompletionParserTest:test030()
9646=JavadocCompletionParserTest:test022()
9647=JavadocCompletionParserTest:test010()
9648=JavadocCompletionParserTest:test021()
9649=JavadocCompletionParserTest:test001()
9650=JavadocCompletionParserTest:test024()
9651=JavadocCompletionParserTest:test012()
9652=JavadocCompletionParserTest:verifyCompletionOnJavadocTag(char[], char[][], boolean)
9653=JavadocCompletionParserTest:test023()
9654=JavadocCompletionParserTest:test011()
9655=JavadocCompletionParserTest:test003()
9656=JavadocCompletionParserTest:test026()
9657=JavadocCompletionParserTest:test014()
9658=JavadocCompletionParserTest:JavadocCompletionParserTest(String)
9659=JavadocCompletionParserTest:test025()
9660=JavadocCompletionParserTest:test002()
9661=JavadocCompletionParserTest:test013()
9662=JavadocCompletionParserTest:test005()
9663=JavadocCompletionParserTest:test028()
9664=JavadocCompletionParserTest:suite()
9665=JavadocCompletionParserTest:test004()
9666=JavadocCompletionParserTest:test027()
9667=JavadocCompletionParserTest:verifyAllTagsCompletion()
9668=JavadocCompletionParserTest:test015()
9669=JavadocCompletionParserTest:test007()
9670=JavadocCompletionParserTest:test029()
9671=JavadocCompletionParserTest:test006()
9672=JavadocCompletionParserTest:test008()
9673=AbortType:AbortType(CompilationResult, IProblem)
9674=X:X()
9675=X:bar(int, String)
9676=BatchCompilerTest:testClass()
9677=BatchCompilerTest:test085_per_source_output_directory()
9678=BatchCompilerTest:test001()
9679=BatchCompilerTest:test024()
9680=BatchCompilerTest:test047()
9681=BatchCompilerTest:test142_null_ref_option()
9682=BatchCompilerTest:test155_warn_options()
9683=BatchCompilerTest:test185_warn_options()
9684=BatchCompilerTest:LinesRangeNormalizer:LinesRangeNormalizer(Normalizer)
9685=BatchCompilerTest:test141_null_ref_option()
9686=BatchCompilerTest:test111()
9687=BatchCompilerTest:test160_warn_options()
9688=BatchCompilerTest:test106_per_source_output_directory()
9689=BatchCompilerTest:test190_warn_options()
9690=BatchCompilerTest:testBug375409e()
9691=BatchCompilerTest:test161_warn_options()
9692=BatchCompilerTest:test036()
9693=BatchCompilerTest:test066_per_source_output_directory()
9694=BatchCompilerTest:test191_warn_options()
9695=BatchCompilerTest:test013()
9696=BatchCompilerTest:test100_per_source_output_directory()
9697=BatchCompilerTest:test154_warn_options()
9698=BatchCompilerTest:test326_nowarn_options()
9699=BatchCompilerTest:test095_per_source_output_directory()
9700=BatchCompilerTest:test250_jar_ref_in_jar()
9701=BatchCompilerTest:testBug419351()
9702=BatchCompilerTest:SubstringMatcher:match(String)
9703=BatchCompilerTest:test0307()
9704=BatchCompilerTest:test184_warn_options()
9705=BatchCompilerTest:getJCEJarAsQuotedString()
9706=BatchCompilerTest:_test173_warn_options()
9707=BatchCompilerTest:test048()
9708=BatchCompilerTest:test025()
9709=BatchCompilerTest:test002()
9710=BatchCompilerTest:test299()
9711=BatchCompilerTest:test310_warn_options()
9712=BatchCompilerTest:test254_progress()
9713=BatchCompilerTest:test112()
9714=BatchCompilerTest:test178_warn_options()
9715=BatchCompilerTest:test094_per_source_output_directory()
9716=BatchCompilerTest:test245_jar_ref_in_jar()
9717=BatchCompilerTest:test265_jar_ref_in_jar()
9718=BatchCompilerTest:testBug375409d()
9719=BatchCompilerTest:test440477()
9720=BatchCompilerTest:LinesRangeNormalizer:LinesRangeNormalizer(Normalizer, int, int)
9721=BatchCompilerTest:test037()
9722=BatchCompilerTest:test208_warn_options()
9723=BatchCompilerTest:equals(String, String)
9724=BatchCompilerTest:test014()
9725=BatchCompilerTest:test150_null_ref_options()
9726=BatchCompilerTest:TestCompilationProgress:begin(int)
9727=BatchCompilerTest:test207_warn_options()
9728=BatchCompilerTest:getExtDirectory()
9729=BatchCompilerTest:test321_nowarn_options()
9730=BatchCompilerTest:test405225_extdirs()
9731=BatchCompilerTest:test162_warn_options()
9732=BatchCompilerTest:test192_warn_options()
9733=BatchCompilerTest:test262_jar_ref_in_jar()
9734=BatchCompilerTest:test026()
9735=BatchCompilerTest:test049()
9736=BatchCompilerTest:test298()
9737=BatchCompilerTest:test003()
9738=BatchCompilerTest:test248_jar_ref_in_jar()
9739=BatchCompilerTest:test086_per_source_output_directory()
9740=BatchCompilerTest:test270_jar_ref_in_jar()
9741=BatchCompilerTest:test113()
9742=BatchCompilerTest:testBug375409g()
9743=BatchCompilerTest:test408038a()
9744=BatchCompilerTest:StringMatcher:expected()
9745=BatchCompilerTest:test015()
9746=BatchCompilerTest:test222_warn_options()
9747=BatchCompilerTest:test272_jar_ref_in_jar()
9748=BatchCompilerTest:test076_per_source_output_directory()
9749=BatchCompilerTest:test105_per_source_output_directory()
9750=BatchCompilerTest:test140_classpath()
9751=BatchCompilerTest:test004()
9752=BatchCompilerTest:test234_sourcepath_vs_classpath()
9753=BatchCompilerTest:test027()
9754=BatchCompilerTest:test177_warn_options()
9755=BatchCompilerTest:test278_jar_ref_in_jar()
9756=BatchCompilerTest:test297()
9757=BatchCompilerTest:test275_jar_ref_in_jar()
9758=BatchCompilerTest:test282_classpath()
9759=BatchCompilerTest:test385780_warn_option()
9760=BatchCompilerTest:SubstringMatcher:expected()
9761=BatchCompilerTest:test240_jar_ref_in_jar()
9762=BatchCompilerTest:test285_option_files()
9763=BatchCompilerTest:testBug375409f()
9764=BatchCompilerTest:getLibraryClassesAsQuotedString()
9765=BatchCompilerTest:StringMatcher:match(String)
9766=BatchCompilerTest:test114()
9767=BatchCompilerTest:test284_classpath()
9768=BatchCompilerTest:test016()
9769=BatchCompilerTest:test039()
9770=BatchCompilerTest:testBug466291b()
9771=BatchCompilerTest:test218_batch_classpath_apis()
9772=BatchCompilerTest:BatchCompilerTest(String)
9773=BatchCompilerTest:test319_nowarn_options()
9774=BatchCompilerTest:testBug466291()
9775=BatchCompilerTest:test071_per_source_output_directory()
9776=BatchCompilerTest:test133_classpath()
9777=BatchCompilerTest:test132_classpath()
9778=BatchCompilerTest:test012b()
9779=BatchCompilerTest:test020()
9780=BatchCompilerTest:test043()
9781=BatchCompilerTest:test137_classpath()
9782=BatchCompilerTest:test074_per_source_output_directory()
9783=BatchCompilerTest:test090_per_source_output_directory()
9784=BatchCompilerTest:test136_classpath()
9785=BatchCompilerTest:test223_warn_options()
9786=BatchCompilerTest:test158_warn_options()
9787=BatchCompilerTest:_test224_warn_options()
9788=BatchCompilerTest:test188_warn_options()
9789=BatchCompilerTest:test093_per_source_output_directory()
9790=BatchCompilerTest:testInferenceIn14Project()
9791=BatchCompilerTest:test164_warn_options()
9792=BatchCompilerTest:analyzeManifestContents(ManifestAnalyzer, String)
9793=BatchCompilerTest:test211_warn_options()
9794=BatchCompilerTest:test231_sourcepath_vs_classpath()
9795=BatchCompilerTest:test408038c()
9796=BatchCompilerTest:test032()
9797=BatchCompilerTest:testBug375409a()
9798=BatchCompilerTest:Normalizer:Normalizer(Normalizer)
9799=BatchCompilerTest:test243_jar_ref_in_jar()
9800=BatchCompilerTest:test313_warn_options()
9801=BatchCompilerTest:test267_jar_ref_in_jar()
9802=BatchCompilerTest:test320_nowarn_options()
9803=BatchCompilerTest:test055()
9804=BatchCompilerTest:testFileSystem_findSecondaryInClass()
9805=BatchCompilerTest:test217_warn_options()
9806=BatchCompilerTest:test011_classpath()
9807=BatchCompilerTest:test268_jar_ref_in_jar()
9808=BatchCompilerTest:invokeCompiler(PrintWriter, PrintWriter, Object, TestCompilationProgress)
9809=BatchCompilerTest:test0308_warn_options()
9810=BatchCompilerTest:test021()
9811=BatchCompilerTest:test210_warn_options()
9812=BatchCompilerTest:runProgressTest(String[], String, String, String, String)
9813=BatchCompilerTest:test102_per_source_output_directory()
9814=BatchCompilerTest:test145_declared_thrown_checked_exceptions()
9815=BatchCompilerTest:SubstringMatcher:SubstringMatcher(String)
9816=BatchCompilerTest:test163_warn_options()
9817=BatchCompilerTest:test044()
9818=BatchCompilerTest:test193_warn_options()
9819=BatchCompilerTest:TestCompilationProgress:setTaskName(String)
9820=BatchCompilerTest:test236_classpath()
9821=BatchCompilerTest:test237_classpath()
9822=BatchCompilerTest:test165_warn_options()
9823=BatchCompilerTest:test408038b()
9824=BatchCompilerTest:suite()
9825=BatchCompilerTest:test329_nowarn_options()
9826=BatchCompilerTest:test195_warn_options()
9827=BatchCompilerTest:test010()
9828=BatchCompilerTest:test253_progress()
9829=BatchCompilerTest:test286_option_files()
9830=BatchCompilerTest:test033()
9831=BatchCompilerTest:test056()
9832=BatchCompilerTest:test084_per_source_output_directory()
9833=BatchCompilerTest:test242_jar_ref_in_jar()
9834=BatchCompilerTest:runClasspathTest(String, String[], String)
9835=BatchCompilerTest:test314_warn_options()
9836=BatchCompilerTest:test171_warn_options()
9837=BatchCompilerTest:test097_per_source_output_directory()
9838=BatchCompilerTest:test180_warn_options()
9839=BatchCompilerTest:runProgressTest(boolean, String[], String, String, String, TestCompilationProgress, String)
9840=BatchCompilerTest:test045()
9841=BatchCompilerTest:test0309_warn_options()
9842=BatchCompilerTest:test120()
9843=BatchCompilerTest:_test018b()
9844=BatchCompilerTest:test274_jar_ref_in_jar()
9845=BatchCompilerTest:test408038e()
9846=BatchCompilerTest:test070_per_source_output_directory()
9847=BatchCompilerTest:testBug375409c()
9848=BatchCompilerTest:test323_nowarn_options()
9849=BatchCompilerTest:test156_warn_options()
9850=BatchCompilerTest:test186_warn_options()
9851=BatchCompilerTest:test034()
9852=BatchCompilerTest:test277_jar_ref_in_jar()
9853=BatchCompilerTest:Matcher:expected()
9854=BatchCompilerTest:test157_warn_options()
9855=BatchCompilerTest:test187_warn_options()
9856=BatchCompilerTest:_test064_per_sourcepath_directory_default_encoding()
9857=BatchCompilerTest:test087_per_source_output_directory()
9858=BatchCompilerTest:test122_classpath()
9859=BatchCompilerTest:test287_option_files()
9860=BatchCompilerTest:test121()
9861=BatchCompilerTest:test144()
9862=BatchCompilerTest:test126_classpath()
9863=BatchCompilerTest:test281_classpath()
9864=BatchCompilerTest:test046()
9865=BatchCompilerTest:test023()
9866=BatchCompilerTest:test080_per_source_output_directory()
9867=BatchCompilerTest:test232_repeated_classpath()
9868=BatchCompilerTest:test172_warn_options()
9869=BatchCompilerTest:test067_per_source_output_directory()
9870=BatchCompilerTest:test110()
9871=BatchCompilerTest:test194_warn_options()
9872=BatchCompilerTest:test408038d()
9873=BatchCompilerTest:test258_jar_ref_in_jar()
9874=BatchCompilerTest:testBug375409b()
9875=BatchCompilerTest:test179_warn_options()
9876=BatchCompilerTest:test077_per_source_output_directory()
9877=BatchCompilerTest:test012()
9878=BatchCompilerTest:test035()
9879=BatchCompilerTest:test058()
9880=BatchCompilerTest:test209_warn_options()
9881=BatchCompilerTest:StringNormalizer:StringNormalizer(Normalizer, String, String)
9882=BatchCompilerTest:TestCompilationProgress:isCanceled()
9883=BatchCompilerTest:test202_warn_options()
9884=BatchCompilerTest:test167_warn_options()
9885=BatchCompilerTest:test197_warn_options()
9886=BatchCompilerTest:test239_jar_ref_in_jar()
9887=BatchCompilerTest:test082_per_source_output_directory()
9888=BatchCompilerTest:test271_jar_ref_in_jar()
9889=BatchCompilerTest:test107()
9890=BatchCompilerTest:createCascadedJars()
9891=BatchCompilerTest:test255_progress()
9892=BatchCompilerTest:runNegativeTest(String[], String, String, String, boolean)
9893=BatchCompilerTest:test292_warn_options()
9894=BatchCompilerTest:test009()
9895=BatchCompilerTest:test322_nowarn_options()
9896=BatchCompilerTest:test249_jar_ref_in_jar()
9897=BatchCompilerTest:test261_jar_ref_in_jar()
9898=BatchCompilerTest:TestCompilationProgress:toString()
9899=BatchCompilerTest:test119()
9900=BatchCompilerTest:test051()
9901=BatchCompilerTest:test088_per_source_output_directory()
9902=BatchCompilerTest:test0307c()
9903=BatchCompilerTest:test103_per_source_output_directory()
9904=BatchCompilerTest:test069_per_source_output_directory()
9905=BatchCompilerTest:test302()
9906=BatchCompilerTest:test098_per_source_output_directory()
9907=BatchCompilerTest:test259_jar_ref_in_jar()
9908=BatchCompilerTest:test251_jar_ref_in_jar()
9909=BatchCompilerTest:_test220_warn_options()
9910=BatchCompilerTest:test079_per_source_output_directory()
9911=BatchCompilerTest:test276_jar_ref_in_jar()
9912=BatchCompilerTest:test280_sourcepath_vs_classpath()
9913=BatchCompilerTest:test040()
9914=BatchCompilerTest:test063()
9915=BatchCompilerTest:test108()
9916=BatchCompilerTest:test315_warn_options()
9917=BatchCompilerTest:test203_warn_options()
9918=BatchCompilerTest:test317_nowarn_options()
9919=BatchCompilerTest:test317_warn_options()
9920=BatchCompilerTest:test052()
9921=BatchCompilerTest:test225_warn_options()
9922=BatchCompilerTest:test227_warn_options()
9923=BatchCompilerTest:testInferenceIn15Project()
9924=BatchCompilerTest:test201_warn_options()
9925=BatchCompilerTest:test0307d()
9926=BatchCompilerTest:_test062()
9927=BatchCompilerTest:test301()
9928=BatchCompilerTest:testBridgeMethodRetention()
9929=BatchCompilerTest:test109()
9930=BatchCompilerTest:test041()
9931=BatchCompilerTest:test256_jar_ref_in_jar()
9932=BatchCompilerTest:test230_sourcepath_vs_classpath()
9933=BatchCompilerTest:runTest(boolean, String[], String, Matcher, Matcher, boolean)
9934=BatchCompilerTest:test078_per_source_output_directory()
9935=BatchCompilerTest:test440687c()
9936=BatchCompilerTest:test018a()
9937=BatchCompilerTest:test199_warn_options()
9938=BatchCompilerTest:test083_per_source_output_directory()
9939=BatchCompilerTest:test293_warn_options()
9940=BatchCompilerTest:test204_warn_options()
9941=BatchCompilerTest:test053()
9942=BatchCompilerTest:test294_warn_options()
9943=BatchCompilerTest:testReportingUnavoidableGenericProblems()
9944=BatchCompilerTest:test030()
9945=BatchCompilerTest:test169_warn_options()
9946=BatchCompilerTest:LinesRangeNormalizer:LinesRangeNormalizer()
9947=BatchCompilerTest:test174_warn_options()
9948=BatchCompilerTest:test073_per_source_output_directory()
9949=BatchCompilerTest:test022_repeated_sourcepath()
9950=BatchCompilerTest:test246_jar_ref_in_jar()
9951=BatchCompilerTest:test264_jar_ref_in_jar()
9952=BatchCompilerTest:test0307a()
9953=BatchCompilerTest:test300()
9954=BatchCompilerTest:runConformTest(String[], String, String, String, boolean)
9955=BatchCompilerTest:test123_classpath()
9956=BatchCompilerTest:test148_access_restrictions()
9957=BatchCompilerTest:test125_classpath()
9958=BatchCompilerTest:test042()
9959=BatchCompilerTest:test127_classpath()
9960=BatchCompilerTest:test068_per_source_output_directory()
9961=BatchCompilerTest:test327_nowarn_options()
9962=BatchCompilerTest:test439750()
9963=BatchCompilerTest:StringMatcher:StringMatcher(String, Normalizer)
9964=BatchCompilerTest:test440687d()
9965=BatchCompilerTest:StringNormalizer:normalized(String)
9966=BatchCompilerTest:test320_warn_options()
9967=BatchCompilerTest:test181_warn_options()
9968=BatchCompilerTest:test091_per_source_output_directory()
9969=BatchCompilerTest:test054()
9970=BatchCompilerTest:test291_jar_ref_in_jar()
9971=BatchCompilerTest:test166_warn_options()
9972=BatchCompilerTest:test129_classpath()
9973=BatchCompilerTest:test290_warn_options()
9974=BatchCompilerTest:test0307b()
9975=BatchCompilerTest:Matcher:match(String)
9976=BatchCompilerTest:test081_per_source_output_directory()
9977=BatchCompilerTest:test316_warn_options()
9978=BatchCompilerTest:test196_warn_options()
9979=BatchCompilerTest:test230_warn_options()
9980=BatchCompilerTest:test152()
9981=BatchCompilerTest:test200_warn_options()
9982=BatchCompilerTest:test170_warn_options()
9983=BatchCompilerTest:test324_nowarn_options()
9984=BatchCompilerTest:test134_classpath()
9985=BatchCompilerTest:test149()
9986=BatchCompilerTest:test131_classpath()
9987=BatchCompilerTest:test135_classpath()
9988=BatchCompilerTest:test247_jar_ref_in_jar()
9989=BatchCompilerTest:test252_progress()
9990=BatchCompilerTest:test263_jar_ref_in_jar()
9991=BatchCompilerTest:XMLClasspathsSectionNormalizer:XMLClasspathsSectionNormalizer()
9992=BatchCompilerTest:test319_warn_options()
9993=BatchCompilerTest:test130_classpath()
9994=BatchCompilerTest:test138_classpath()
9995=BatchCompilerTest:test296()
9996=BatchCompilerTest:test233_repeated_sourcepath()
9997=BatchCompilerTest:LinesRangeNormalizer:normalized(String)
9998=BatchCompilerTest:test216b_warn_options()
9999=BatchCompilerTest:TestCompilationProgress:worked(int, int)
10000=BatchCompilerTest:test005()
10001=BatchCompilerTest:test028()
10002=BatchCompilerTest:test310b_warn_options()
10003=BatchCompilerTest:test096_per_source_output_directory()
10004=BatchCompilerTest:test315_warn_options_b()
10005=BatchCompilerTest:test176_warn_options()
10006=BatchCompilerTest:test440687a()
10007=BatchCompilerTest:test316b_warn_options()
10008=BatchCompilerTest:testBug375366d()
10009=BatchCompilerTest:test257_jar_ref_in_jar()
10010=BatchCompilerTest:Normalizer:normalized(String)
10011=BatchCompilerTest:test115()
10012=BatchCompilerTest:test205_warn_options()
10013=BatchCompilerTest:test289_warn_options()
10014=BatchCompilerTest:test017()
10015=BatchCompilerTest:test306()
10016=BatchCompilerTest:test295_warn_options()
10017=BatchCompilerTest:test312_warn_options()
10018=BatchCompilerTest:test159_warn_options()
10019=BatchCompilerTest:_test216a_warn_options()
10020=BatchCompilerTest:test318_nowarn_options()
10021=BatchCompilerTest:testBug375366c()
10022=BatchCompilerTest:test229_warn_options()
10023=BatchCompilerTest:test065_per_source_output_directory()
10024=BatchCompilerTest:test325_nowarn_options()
10025=BatchCompilerTest:test006()
10026=BatchCompilerTest:test206_warn_options()
10027=BatchCompilerTest:test189_warn_options()
10028=BatchCompilerTest:test440687b()
10029=BatchCompilerTest:test099_per_source_output_directory()
10030=BatchCompilerTest:test146_declared_thrown_checked_exceptions()
10031=BatchCompilerTest:test235_classpath()
10032=BatchCompilerTest:semiNormalizedComparison(String, String, Normalizer)
10033=BatchCompilerTest:test116()
10034=BatchCompilerTest:test101_per_source_output_directory()
10035=BatchCompilerTest:runTest(boolean, String[], Object, String, String, boolean, TestCompilationProgress)
10036=BatchCompilerTest:test182_warn_options()
10037=BatchCompilerTest:test238_classpath()
10038=BatchCompilerTest:test186565()
10039=BatchCompilerTest:test212_warn_options()
10040=BatchCompilerTest:test139_classpath()
10041=BatchCompilerTest:test273_jar_ref_in_jar()
10042=BatchCompilerTest:test151_null_ref_options()
10043=BatchCompilerTest:test305()
10044=BatchCompilerTest:test017b()
10045=BatchCompilerTest:testBug375366b()
10046=BatchCompilerTest:test294()
10047=BatchCompilerTest:test060()
10048=BatchCompilerTest:_test226_warn_options()
10049=BatchCompilerTest:test089_per_source_output_directory()
10050=BatchCompilerTest:test007()
10051=BatchCompilerTest:XMLClasspathsSectionNormalizer:XMLClasspathsSectionNormalizer(Normalizer)
10052=BatchCompilerTest:test288_warn_options()
10053=BatchCompilerTest:test104_per_source_output_directory()
10054=BatchCompilerTest:test228_warn_options()
10055=BatchCompilerTest:test075_per_source_output_directory()
10056=BatchCompilerTest:test221_warn_options()
10057=BatchCompilerTest:test057_access_restrictions_separator()
10058=BatchCompilerTest:test117()
10059=BatchCompilerTest:test0307e()
10060=BatchCompilerTest:XMLClasspathsSectionNormalizer:normalized(String)
10061=BatchCompilerTest:test304()
10062=BatchCompilerTest:test017c()
10063=BatchCompilerTest:test019()
10064=BatchCompilerTest:test328_nowarn_options()
10065=BatchCompilerTest:test092_per_source_output_directory()
10066=BatchCompilerTest:test124_classpath()
10067=BatchCompilerTest:testBug375366a()
10068=BatchCompilerTest:checkWidth(String, int)
10069=BatchCompilerTest:test293()
10070=BatchCompilerTest:test175_warn_options()
10071=BatchCompilerTest:test061()
10072=BatchCompilerTest:test269_jar_ref_in_jar()
10073=BatchCompilerTest:TestCompilationProgress:done()
10074=BatchCompilerTest:test241_jar_ref_in_jar()
10075=BatchCompilerTest:test198_warn_options()
10076=BatchCompilerTest:test283_classpath()
10077=BatchCompilerTest:test315_warn_options_a()
10078=BatchCompilerTest:test318_warn_options()
10079=BatchCompilerTest:test072_per_source_output_directory()
10080=BatchCompilerTest:test219_batch_classpath_apis()
10081=BatchCompilerTest:test168_warn_options()
10082=BatchCompilerTest:test266_jar_ref_in_jar()
10083=BatchCompilerTest:test008()
10084=BatchCompilerTest:test244_jar_ref_in_jar()
10085=BatchCompilerTest:test118()
10086=BatchCompilerTest:test050()
10087=BatchCompilerTest:test153_warn_options()
10088=BatchCompilerTest:test128_classpath()
10089=BatchCompilerTest:test260_jar_ref_in_jar()
10090=BatchCompilerTest:test143_null_ref_option()
10091=BatchCompilerTest:test183_warn_options()
10092=BatchCompilerTest:test279_sourcepath_vs_classpath()
10093=BatchCompilerTest:test303()
10094=BatchCompilerTest:test213_warn_options()
10095=BatchCompilerTest:testReportingUnavoidableGenericProblems2()
10096=BatchCompilerTest:runTest440687(String, String, String, boolean)
10097=BufferTests:testAppendReadOnly()
10098=BufferTests:testGetChar2()
10099=BufferTests:assertBufferEvents(String)
10100=BufferTests:testGetText()
10101=BufferTests:BufferTests(String)
10102=BufferTests:suite()
10103=BufferTests:testGetUnderlyingResource()
10104=BufferTests:setUpSuite()
10105=BufferTests:tearDownSuite()
10106=BufferTests:deleteBuffer(IBuffer)
10107=BufferTests:testGetChar()
10108=BufferTests:testReplaceEnd()
10109=BufferTests:testGetLength()
10110=BufferTests:testAppend()
10111=BufferTests:testReplaceBeginning()
10112=BufferTests:testDeleteEnd()
10113=BufferTests:testCreateImport()
10114=BufferTests:testInsertBeginning()
10115=BufferTests:assertBufferEvent(int, int, String)
10116=BufferTests:testInsertEnd()
10117=BufferTests:testSaveNonExistingUTF8()
10118=BufferTests:testDeleteMiddle()
10119=BufferTests:testReplaceMiddle()
10120=BufferTests:testClose()
10121=BufferTests:testInsertMiddle()
10122=BufferTests:bufferChanged(BufferChangedEvent)
10123=BufferTests:createBuffer(String, String)
10124=BufferTests:testDeleteBeginning()
10125=Messages:Messages()
10126=A:foo7(int)
10127=A:foo5()
10128=A:foo6(int)
10129=A:foo8(int)
10130=A:foo2()
10131=A:foo1()
10132=A:foo4()
10133=A:foo3()
10134=IJavaElementDelta:getAnnotationDeltas()
10135=IJavaElementDelta:getChangedChildren()
10136=IJavaElementDelta:getMovedFromElement()
10137=IJavaElementDelta:getResourceDeltas()
10138=IJavaElementDelta:getFlags()
10139=IJavaElementDelta:getMovedToElement()
10140=IJavaElementDelta:getKind()
10141=IJavaElementDelta:getRemovedChildren()
10142=IJavaElementDelta:getAffectedChildren()
10143=IJavaElementDelta:getAddedChildren()
10144=IJavaElementDelta:getCompilationUnitAST()
10145=IJavaElementDelta:getElement()
10146=Test2:m1(int, int[])
10147=Test2:m(int, int)
10148=ProblemPackageBinding:ProblemPackageBinding(char[], int)
10149=ProblemPackageBinding:problemId()
10150=ProblemPackageBinding:ProblemPackageBinding(char[][], int)
10151=CompilerToolTests:testCleanUp()
10152=CompilerToolTests:testInferBinaryName()
10153=CompilerToolTests:testFileManager2()
10154=CompilerToolTests:setUp()
10155=CompilerToolTests:CompilerToolTests(String)
10156=CompilerToolTests:testFileManager()
10157=CompilerToolTests:testCompilerOneClassWithEclipseCompiler()
10158=CompilerToolTests:testCompilerOneClassWithEclipseCompiler4()
10159=CompilerToolTests:displayLocation(StandardJavaFileManager, StandardLocation)
10160=CompilerToolTests:tearDown()
10161=CompilerToolTests:testCompilerOneClassWithEclipseCompiler5()
10162=CompilerToolTests:testCompilerOneClassWithEclipseCompiler6()
10163=CompilerToolTests:testCompilerOneClassWithEclipseCompiler7()
10164=CompilerToolTests:testCompilerOneClassWithSystemCompiler()
10165=CompilerToolTests:testCompilerOneClassWithSystemCompiler2()
10166=CompilerToolTests:testCheckOptions()
10167=CompilerToolTests:testCompilerOneClassWithEclipseCompiler2()
10168=CompilerToolTests:testCompilerOneClassWithEclipseCompiler3()
10169=X23:foo()
10170=Test:main(String[])
10171=OperatorExpression:generateTableTestCase()
10172=OperatorExpression:OperatorExpression()
10173=OperatorExpression:get_LESS()
10174=OperatorExpression:get_OR_OR()
10175=OperatorExpression:get_MINUS()
10176=OperatorExpression:get_PLUS()
10177=OperatorExpression:get_EQUAL_EQUAL()
10178=OperatorExpression:operatorToString()
10179=OperatorExpression:get_OR()
10180=OperatorExpression:printExpression(int, StringBuffer)
10181=OperatorExpression:get_RIGHT_SHIFT()
10182=OperatorExpression:get_UNSIGNED_RIGHT_SHIFT()
10183=OperatorExpression:get_AND()
10184=OperatorExpression:get_LEFT_SHIFT()
10185=OperatorExpression:get_GREATER()
10186=OperatorExpression:get_LESS_EQUAL()
10187=OperatorExpression:get_REMAINDER()
10188=OperatorExpression:get_GREATER_EQUAL()
10189=OperatorExpression:get_MULTIPLY()
10190=OperatorExpression:get_AND_AND()
10191=OperatorExpression:printExpressionNoParenthesis(int, StringBuffer)
10192=OperatorExpression:get_XOR()
10193=OperatorExpression:classInitialize()
10194=OperatorExpression:get_DIVIDE()
10195=X:bar()
10196=X:foo()
10197=SelectionOnSuperReference:resolveType(BlockScope)
10198=SelectionOnSuperReference:printExpression(int, StringBuffer)
10199=SelectionOnSuperReference:SelectionOnSuperReference(int, int)
10200=X:bar()
10201=A:foo()
10202=JavadocSingleTypeReference:traverse(ASTVisitor, BlockScope)
10203=JavadocSingleTypeReference:JavadocSingleTypeReference(char[], long, int, int)
10204=JavadocSingleTypeReference:internalResolveType(Scope, int)
10205=JavadocSingleTypeReference:traverse(ASTVisitor, ClassScope)
10206=JavadocSingleTypeReference:reportDeprecatedType(TypeBinding, Scope)
10207=JavadocSingleTypeReference:reportInvalidType(Scope)
10208=TargetException:TargetException(String)
10209=TargetException:TargetException()
10210=Foo:bar()
10211=X:foo(Map< @Marker? super @Marker Object,  @Marker? extends @Marker String>)
10212=X:goo(Map< @Marker? extends @Marker Object,  @Marker? super @Marker String>)
10213=DeletePackageFragmentRootOperation:deleteResource(IPackageFragmentRoot, IClasspathEntry)
10214=DeletePackageFragmentRootOperation:DeletePackageFragmentRootOperation(IPackageFragmentRoot, int, int)
10215=DeletePackageFragmentRootOperation:executeOperation()
10216=DeletePackageFragmentRootOperation:updateReferringProjectClasspaths(IPath, IJavaProject, Map)
10217=DeletePackageFragmentRootOperation:verify()
10218=DeletePackageFragmentRootOperation:updateProjectClasspath(IPath, IJavaProject, Map)
10219=CreateTypeSourceExamplesTests:testCreateClassWithModifiers()
10220=CreateTypeSourceExamplesTests:suite()
10221=CreateTypeSourceExamplesTests:testCreateClassWithImplements2()
10222=CreateTypeSourceExamplesTests:testCreateEmptyInterface()
10223=CreateTypeSourceExamplesTests:testCreateClassWithImplements4()
10224=CreateTypeSourceExamplesTests:CreateTypeSourceExamplesTests(String)
10225=CreateTypeSourceExamplesTests:testCreateClassWithImplements3()
10226=CreateTypeSourceExamplesTests:testCreateClassWithExtends()
10227=CreateTypeSourceExamplesTests:setUpSuite()
10228=CreateTypeSourceExamplesTests:testCreateClassWithImplements()
10229=CreateTypeSourceExamplesTests:testCreateEmptyClass()
10230=TestBug68726conform1:foo1()
10231=TestBug68726conform1:foo2()
10232=ResolveExplicitThisConstructorCall:ResolveExplicitThisConstructorCall()
10233=ResolveExplicitThisConstructorCall:ResolveExplicitThisConstructorCall(int)
10234=AssistOptions:AssistOptions(Map)
10235=AssistOptions:AssistOptions()
10236=CategorizedProblem:getExtraMarkerAttributeNames()
10237=CategorizedProblem:getCategoryID()
10238=CategorizedProblem:getMarkerType()
10239=CategorizedProblem:isInfo()
10240=CategorizedProblem:getExtraMarkerAttributeValues()
10241=A:test()
10242=JavadocFieldReference:printExpression(int, StringBuffer)
10243=JavadocFieldReference:traverse(ASTVisitor, BlockScope)
10244=JavadocFieldReference:resolveType(ClassScope)
10245=JavadocFieldReference:traverse(ASTVisitor, ClassScope)
10246=JavadocFieldReference:JavadocFieldReference(char[], long)
10247=JavadocFieldReference:isSuperAccess()
10248=JavadocFieldReference:internalResolveType(Scope)
10249=JavadocFieldReference:resolveType(BlockScope)
10250=BufferChangedEvent:getText()
10251=BufferChangedEvent:getLength()
10252=BufferChangedEvent:getBuffer()
10253=BufferChangedEvent:BufferChangedEvent(IBuffer, int, int, String)
10254=BufferChangedEvent:getOffset()
10255=X:foo()
10256=TestClassValid:foo5()
10257=TestClassValid:foo4()
10258=TestClassValid:foo3()
10259=TestClassValid:foo2()
10260=TestClassValid:foo1()
10261=IExceptionAttribute:getExceptionIndexes()
10262=IExceptionAttribute:getExceptionsNumber()
10263=IExceptionAttribute:getExceptionNames()
10264=A:foo(int)
10265=X01e:foo()
10266=RemovedImportCommentReassigner:assignRemovedImports(Collection<ImportEntry>)
10267=RemovedImportCommentReassigner:hasFloatingComment(OriginalImportEntry)
10268=RemovedImportCommentReassigner:RemovedImportCommentReassigner(List<OriginalImportEntry>)
10269=RemovedImportCommentReassigner:identifyRemovedImportsWithComments(Collection<ImportEntry>)
10270=RemovedImportCommentReassigner:identifyFirstOccurrenceOfEachImportName(Iterable<ImportEntry>)
10271=RemovedImportCommentReassigner:identifyFirstSingleForEachOnDemand(Iterable<ImportEntry>)
10272=RemovedImportCommentReassigner:retainImportsWithComments(Collection<OriginalImportEntry>)
10273=RemovedImportCommentReassigner:reassignComments(Collection<ImportEntry>)
10274=FileIndexLocation:FileIndexLocation(File)
10275=FileIndexLocation:FileIndexLocation(URL, File)
10276=FileIndexLocation:startsWith(IPath)
10277=FileIndexLocation:length()
10278=FileIndexLocation:delete()
10279=FileIndexLocation:getIndexFile()
10280=FileIndexLocation:getInputStream()
10281=FileIndexLocation:lastModified()
10282=FileIndexLocation:equals(Object)
10283=FileIndexLocation:hashCode()
10284=FileIndexLocation:FileIndexLocation(File, boolean)
10285=FileIndexLocation:exists()
10286=FileIndexLocation:getCanonicalFilePath()
10287=FileIndexLocation:fileName()
10288=FileIndexLocation:createNewFile()
10289=ExceptionLabel:placeStart()
10290=ExceptionLabel:place()
10291=ExceptionLabel:ExceptionLabel(CodeStream, TypeBinding)
10292=ExceptionLabel:isStandardLabel()
10293=ExceptionLabel:placeEnd()
10294=X:x()
10295=A:foo()
10296=TextGenAnnotationProcessorFactory:TextGenAnnotationProcessorFactory()
10297=TextGenAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
10298=DOMPackage:newDOMNode()
10299=DOMPackage:getContents()
10300=DOMPackage:DOMPackage(char[], int[], String)
10301=DOMPackage:getJavaElement(IJavaElement)
10302=DOMPackage:DOMPackage()
10303=DOMPackage:getNodeType()
10304=DOMPackage:toString()
10305=DOMPackage:DOMPackage(char[], int[], String, int[])
10306=DOMPackage:getDetailedNode()
10307=DOMPackage:setName(String)
10308=DOMPackage:appendFragmentedContents(CharArrayBuffer)
10309=A:main(String[])
10310=ActiveTestSuite:ActiveTestSuite()
10311=ActiveTestSuite:runFinished(Test)
10312=ActiveTestSuite:ActiveTestSuite(Class, String)
10313=ActiveTestSuite:run(TestResult)
10314=ActiveTestSuite:ActiveTestSuite(String)
10315=ActiveTestSuite:ActiveTestSuite(Class)
10316=ActiveTestSuite:waitUntilFinished()
10317=ActiveTestSuite:runTest(Test, TestResult)
10318=X01:foo(int, int)
10319=ResolveInnerClassAsParamater:foo(Inner)
10320=ResolveInnerClassAsParamater:bar(Inner)
10321=ResolveInnerClassAsParamater:foo(String)
10322=InterfaceDeclarationImpl:accept(TypeVisitor)
10323=InterfaceDeclarationImpl:getMethods()
10324=InterfaceDeclarationImpl:InterfaceDeclarationImpl(ITypeBinding, BaseProcessorEnv)
10325=InterfaceDeclarationImpl:accept(DeclarationVisitor)
10326=InterfaceDeclarationImpl:kind()
10327=InterfaceDeclarationImpl:getDeclaration()
10328=ASTModelBridgeTests:testAnonymousType()
10329=ASTModelBridgeTests:testRawBinaryType()
10330=ASTModelBridgeTests:testCreateBindings21()
10331=ASTModelBridgeTests:testLocalVariable4()
10332=ASTModelBridgeTests:buildAST(String)
10333=ASTModelBridgeTests:testMethod11()
10334=ASTModelBridgeTests:buildBindingKey(String)
10335=ASTModelBridgeTests:testFindElement03()
10336=ASTModelBridgeTests:testAnnotation7()
10337=ASTModelBridgeTests:testCreateBindings10()
10338=ASTModelBridgeTests:testFindElement13()
10339=ASTModelBridgeTests:testCreateBindings22()
10340=ASTModelBridgeTests:testLocalVariable3()
10341=ASTModelBridgeTests:testMethod10()
10342=ASTModelBridgeTests:testAnnotation8()
10343=ASTModelBridgeTests:testFindElement02()
10344=ASTModelBridgeTests:testMethod01()
10345=ASTModelBridgeTests:testAnnotation9()
10346=ASTModelBridgeTests:testTopLevelType3()
10347=ASTModelBridgeTests:testLocalVariable6()
10348=ASTModelBridgeTests:testMethod13()
10349=ASTModelBridgeTests:testFindElement05()
10350=ASTModelBridgeTests:tearDownSuite()
10351=ASTModelBridgeTests:testCreateBindings20()
10352=ASTModelBridgeTests:testLocalVariable5()
10353=ASTModelBridgeTests:ASTModelBridgeTests(String)
10354=ASTModelBridgeTests:testMethod12()
10355=ASTModelBridgeTests:testFindElement04()
10356=ASTModelBridgeTests:setUpSuite()
10357=ASTModelBridgeTests:testTopLevelType2()
10358=ASTModelBridgeTests:testBinaryType2()
10359=ASTModelBridgeTests:testFindElement07()
10360=ASTModelBridgeTests:testTopLevelType1()
10361=ASTModelBridgeTests:testAnnotation3()
10362=ASTModelBridgeTests:testBinaryType3()
10363=ASTModelBridgeTests:testTypeParameter()
10364=ASTModelBridgeTests:testAnnotation10()
10365=ASTModelBridgeTests:test320802()
10366=ASTModelBridgeTests:testFindElement06()
10367=ASTModelBridgeTests:testAnnotation4()
10368=ASTModelBridgeTests:createBinaryBindings(String, IJavaElement)
10369=ASTModelBridgeTests:testCreateBindings19()
10370=ASTModelBridgeTests:testPackage1()
10371=ASTModelBridgeTests:testFindElement09()
10372=ASTModelBridgeTests:testCreateBindings08()
10373=ASTModelBridgeTests:testLocalVariable2()
10374=ASTModelBridgeTests:testAnnotation11()
10375=ASTModelBridgeTests:testBinaryMemberTypeFromAnonymousClassFile2()
10376=ASTModelBridgeTests:testRecoveredTypeBinding2()
10377=ASTModelBridgeTests:testAnnotation5()
10378=ASTModelBridgeTests:setUpJavaProject()
10379=ASTModelBridgeTests:tearDownJavaProject()
10380=ASTModelBridgeTests:testFindElement08()
10381=ASTModelBridgeTests:testRecoveredTypeBinding1()
10382=ASTModelBridgeTests:testCreateBindings09()
10383=ASTModelBridgeTests:testAnnotation12()
10384=ASTModelBridgeTests:testLocalVariable1()
10385=ASTModelBridgeTests:testAnnotation6()
10386=ASTModelBridgeTests:testCreateBindings17()
10387=ASTModelBridgeTests:testParameterizedBinaryType()
10388=ASTModelBridgeTests:testMethod08()
10389=ASTModelBridgeTests:testCreateBindings06()
10390=ASTModelBridgeTests:testAnnotation13()
10391=ASTModelBridgeTests:createBindings(String, IJavaElement)
10392=ASTModelBridgeTests:testCreateBinding28()
10393=ASTModelBridgeTests:testLocalType2()
10394=ASTModelBridgeTests:testPackage2()
10395=ASTModelBridgeTests:testCreateBindings18()
10396=ASTModelBridgeTests:testArrayType2()
10397=ASTModelBridgeTests:testMemberType()
10398=ASTModelBridgeTests:testMethod07()
10399=ASTModelBridgeTests:testAnnotation14()
10400=ASTModelBridgeTests:testCreateBindings07()
10401=ASTModelBridgeTests:testBinaryMemberTypeFromAnonymousClassFile1()
10402=ASTModelBridgeTests:testCreateBinding27()
10403=ASTModelBridgeTests:testAnonymousType2()
10404=ASTModelBridgeTests:testCreateBindings15()
10405=ASTModelBridgeTests:testBinaryMemberTypeConstructor()
10406=ASTModelBridgeTests:testAnnotation15()
10407=ASTModelBridgeTests:testCreateBindings04()
10408=ASTModelBridgeTests:test157847c()
10409=ASTModelBridgeTests:assertFindElement(String, String)
10410=ASTModelBridgeTests:testAnnotation1()
10411=ASTModelBridgeTests:suite()
10412=ASTModelBridgeTests:testCreateBindings16()
10413=ASTModelBridgeTests:test157847a()
10414=ASTModelBridgeTests:testMethod09()
10415=ASTModelBridgeTests:test157847b()
10416=ASTModelBridgeTests:testCreateBindings05()
10417=ASTModelBridgeTests:testAnnotation2()
10418=ASTModelBridgeTests:testField1()
10419=ASTModelBridgeTests:testCreateBindings13()
10420=ASTModelBridgeTests:testTypeParameter4()
10421=ASTModelBridgeTests:testFindElement10()
10422=ASTModelBridgeTests:testMethod04()
10423=ASTModelBridgeTests:testCreateBindings02()
10424=ASTModelBridgeTests:testCreateBindings25()
10425=ASTModelBridgeTests:testWildCard()
10426=ASTModelBridgeTests:testMethod14()
10427=ASTModelBridgeTests:testCreateBindings14()
10428=ASTModelBridgeTests:testTypeParameter3()
10429=ASTModelBridgeTests:testMethod02()
10430=ASTModelBridgeTests:testLocalVariable7()
10431=ASTModelBridgeTests:testMethod03()
10432=ASTModelBridgeTests:testCreateBindings26()
10433=ASTModelBridgeTests:testCreateBindings03()
10434=ASTModelBridgeTests:testCreateBindings11()
10435=ASTModelBridgeTests:testBinaryMethod()
10436=ASTModelBridgeTests:setUpWorkingCopy()
10437=ASTModelBridgeTests:testCreateBindings14a()
10438=ASTModelBridgeTests:testArrayType1()
10439=ASTModelBridgeTests:testFindElement12()
10440=ASTModelBridgeTests:testCreateBindings23()
10441=ASTModelBridgeTests:testParameterizedBinaryMethod()
10442=ASTModelBridgeTests:testMethod06()
10443=ASTModelBridgeTests:testTypeParameter2()
10444=ASTModelBridgeTests:testFindElement01()
10445=ASTModelBridgeTests:testCreateBindings12()
10446=ASTModelBridgeTests:testBinaryType()
10447=ASTModelBridgeTests:testCreateBindings14b()
10448=ASTModelBridgeTests:testField2()
10449=ASTModelBridgeTests:testFindElement11()
10450=ASTModelBridgeTests:testCreateBindings01()
10451=ASTModelBridgeTests:testMethod05()
10452=ASTModelBridgeTests:testCreateBindings24()
10453=ASTModelBridgeTests:checkSourceRange(int, int, String, String)
10454=ASTModelBridgeTests:testLocalType()
10455=Test:bar()
10456=CompletionOnQualifiedAllocationExpression:printExpression(int, StringBuffer)
10457=CompletionOnQualifiedAllocationExpression:resolveType(BlockScope)
10458=X02:foo(int, int)
10459=IClasspathContainer:getClasspathEntries()
10460=IClasspathContainer:getPath()
10461=IClasspathContainer:getKind()
10462=IClasspathContainer:getDescription()
10463=SelectionOnQualifiedTypeReference:SelectionOnQualifiedTypeReference(char[][], char[], long[])
10464=SelectionOnQualifiedTypeReference:aboutToResolve(Scope)
10465=SelectionOnQualifiedTypeReference:getTypeBinding(Scope)
10466=SelectionOnQualifiedTypeReference:printExpression(int, StringBuffer)
10467=X04:foo()
10468=X01c:foo()
10469=X08:foo(int, int)
10470=ISelectionRequestor:acceptTypeParameter(char[], char[], char[], boolean, int, int)
10471=ISelectionRequestor:acceptField(char[], char[], char[], boolean, char[], int, int)
10472=ISelectionRequestor:acceptMethodTypeParameter(char[], char[], char[], int, int, char[], boolean, int, int)
10473=ISelectionRequestor:acceptMethod(char[], char[], String, char[], char[][], char[][], String[], char[][], char[][][], boolean, boolean, char[], int, int)
10474=ISelectionRequestor:acceptPackage(char[])
10475=ISelectionRequestor:acceptType(char[], char[], int, boolean, char[], int, int)
10476=ISelectionRequestor:acceptError(CategorizedProblem)
10477=ManyToMany:clear()
10478=ManyToMany:checkIntegrity()
10479=ManyToMany:getKeySet()
10480=ManyToMany:getValueSet()
10481=ManyToMany:valueHasOtherKeys(T2, T1)
10482=ManyToMany:isDirty()
10483=ManyToMany:keyHasOtherValues(T1, T2)
10484=ManyToMany:clearDirtyBit()
10485=ManyToMany:remove(T1, T2)
10486=ManyToMany:removeKey(T1)
10487=ManyToMany:getValues(T1)
10488=ManyToMany:removeValue(T2)
10489=ManyToMany:getKeys(T2)
10490=ManyToMany:containsKey(T1)
10491=ManyToMany:put(T1, T2)
10492=ManyToMany:containsValue(T2)
10493=ManyToMany:containsKeyValuePair(T1, T2)
10494=A:foo()
10495=Dimension:propertyDescriptors(int)
10496=Dimension:treeSize()
10497=Dimension:subtreeMatch0(ASTMatcher, Object)
10498=Dimension:clone0(AST)
10499=Dimension:internalStructuralPropertiesForType(int)
10500=Dimension:getNodeType0()
10501=Dimension:internalGetChildListProperty(ChildListPropertyDescriptor)
10502=Dimension:Dimension(AST)
10503=Dimension:annotations()
10504=Dimension:accept0(ASTVisitor)
10505=Dimension:memSize()
10506=X06:bar()
10507=FieldDeclaration:FieldDeclaration(char[], int, int)
10508=FieldDeclaration:analyseCode(MethodScope, FlowContext, FlowInfo)
10509=FieldDeclaration:resolve(MethodScope)
10510=FieldDeclaration:getKind()
10511=FieldDeclaration:getAllAnnotationContexts(int, List)
10512=FieldDeclaration:isStatic()
10513=FieldDeclaration:generateCode(BlockScope, CodeStream)
10514=FieldDeclaration:printStatement(int, StringBuffer)
10515=FieldDeclaration:isFinal()
10516=FieldDeclaration:traverse(ASTVisitor, MethodScope)
10517=FieldDeclaration:FieldDeclaration()
10518=FlowAnalysisTest:test050_definite_assigment_and_if_true()
10519=FlowAnalysisTest:test062()
10520=FlowAnalysisTest:test009()
10521=FlowAnalysisTest:testLocalClassInInitializer1()
10522=FlowAnalysisTest:testBug338234a()
10523=FlowAnalysisTest:test061()
10524=FlowAnalysisTest:test008()
10525=FlowAnalysisTest:testBug338234b()
10526=FlowAnalysisTest:_test012()
10527=FlowAnalysisTest:test064()
10528=FlowAnalysisTest:test041()
10529=FlowAnalysisTest:testBug415997b()
10530=FlowAnalysisTest:testBug415997a()
10531=FlowAnalysisTest:_test013()
10532=FlowAnalysisTest:test052()
10533=FlowAnalysisTest:testBug338234c()
10534=FlowAnalysisTest:test063()
10535=FlowAnalysisTest:test040()
10536=FlowAnalysisTest:testBug415997c()
10537=FlowAnalysisTest:testLocalClassInInitializer2()
10538=FlowAnalysisTest:test051_definite_assigment_and_if_true()
10539=FlowAnalysisTest:testBug338234d()
10540=FlowAnalysisTest:test032()
10541=FlowAnalysisTest:test055()
10542=FlowAnalysisTest:test020()
10543=FlowAnalysisTest:testBug380313()
10544=FlowAnalysisTest:test043()
10545=FlowAnalysisTest:test031()
10546=FlowAnalysisTest:test066()
10547=FlowAnalysisTest:test054()
10548=FlowAnalysisTest:test042()
10549=FlowAnalysisTest:test030()
10550=FlowAnalysisTest:test053()
10551=FlowAnalysisTest:test065()
10552=FlowAnalysisTest:test011()
10553=FlowAnalysisTest:test034()
10554=FlowAnalysisTest:test057()
10555=FlowAnalysisTest:test045()
10556=FlowAnalysisTest:test022()
10557=FlowAnalysisTest:test068()
10558=FlowAnalysisTest:test010()
10559=FlowAnalysisTest:test056()
10560=FlowAnalysisTest:test033()
10561=FlowAnalysisTest:test021()
10562=FlowAnalysisTest:test044()
10563=FlowAnalysisTest:test067()
10564=FlowAnalysisTest:test036()
10565=FlowAnalysisTest:test059()
10566=FlowAnalysisTest:FlowAnalysisTest(String)
10567=FlowAnalysisTest:testBug391517()
10568=FlowAnalysisTest:test047()
10569=FlowAnalysisTest:test024()
10570=FlowAnalysisTest:test001()
10571=FlowAnalysisTest:test058()
10572=FlowAnalysisTest:test035()
10573=FlowAnalysisTest:test023()
10574=FlowAnalysisTest:test046()
10575=FlowAnalysisTest:test069()
10576=FlowAnalysisTest:test015()
10577=FlowAnalysisTest:test038()
10578=FlowAnalysisTest:test003()
10579=FlowAnalysisTest:test049()
10580=FlowAnalysisTest:test026()
10581=FlowAnalysisTest:test014()
10582=FlowAnalysisTest:test037()
10583=FlowAnalysisTest:test025()
10584=FlowAnalysisTest:test048()
10585=FlowAnalysisTest:test002()
10586=FlowAnalysisTest:testCloseable1()
10587=FlowAnalysisTest:testBug380750()
10588=FlowAnalysisTest:test028()
10589=FlowAnalysisTest:test005()
10590=FlowAnalysisTest:testCloseable2()
10591=FlowAnalysisTest:testBug380313b()
10592=FlowAnalysisTest:test039()
10593=FlowAnalysisTest:test016()
10594=FlowAnalysisTest:testClass()
10595=FlowAnalysisTest:test004()
10596=FlowAnalysisTest:test027()
10597=FlowAnalysisTest:test019()
10598=FlowAnalysisTest:test060()
10599=FlowAnalysisTest:test007()
10600=FlowAnalysisTest:test071()
10601=FlowAnalysisTest:_test017()
10602=FlowAnalysisTest:suite()
10603=FlowAnalysisTest:test029()
10604=FlowAnalysisTest:test006()
10605=FlowAnalysisTest:test070()
10606=FlowAnalysisTest:_test018()
10607=IncrementalTests18:IncrementalTests18(String)
10608=IncrementalTests18:testBug442755a()
10609=IncrementalTests18:test423122()
10610=IncrementalTests18:testBug483744_remove()
10611=IncrementalTests18:test428071()
10612=IncrementalTests18:test423122a()
10613=IncrementalTests18:suite()
10614=IncrementalTests18:testBug481276a()
10615=IncrementalTests18:testBug481276b()
10616=IncrementalTests18:test445049()
10617=IncrementalTests18:testBug442755()
10618=IncrementalTests18:test427105()
10619=IncrementalTests18:test435544()
10620=IncrementalTests18:testBug481276c()
10621=IncrementalTests18:test430425()
10622=IncrementalTests18:setupProjectForNullAnnotations()
10623=IncrementalTests18:test427105a()
10624=IncrementalTests18:testBug442452()
10625=CaseLabel:place()
10626=CaseLabel:branch()
10627=CaseLabel:CaseLabel(CodeStream)
10628=CaseLabel:placeInstruction()
10629=CaseLabel:isStandardLabel()
10630=CaseLabel:branchWide()
10631=HashtableOfType:rehash()
10632=HashtableOfType:toString()
10633=HashtableOfType:put(char[], ReferenceBinding)
10634=HashtableOfType:get(char[])
10635=HashtableOfType:size()
10636=HashtableOfType:containsKey(char[])
10637=HashtableOfType:HashtableOfType()
10638=HashtableOfType:HashtableOfType(int)
10639=I2:getIndications()
10640=X:main(String[])
10641=MatchLocator:locatePackageDeclarations(SearchParticipant, IJavaProject[])
10642=MatchLocator:basicParser()
10643=MatchLocator:newDeclarationMatch(IJavaElement, Binding, int, int, int)
10644=MatchLocator:newDeclarationMatch(IJavaElement, Binding, int, int, int, SearchParticipant, IResource)
10645=MatchLocator:projectOrJarFocus(SearchPattern)
10646=MatchLocator:classFileReader(IType)
10647=MatchLocator:reportMatching(LambdaExpression, IJavaElement, int, MatchingNodeSet, boolean)
10648=MatchLocator:cacheBinaryType(IType, IBinaryType)
10649=MatchLocator:newTypeReferenceMatch(IJavaElement, Binding, int, int, int, ASTNode)
10650=MatchLocator:locateMatches(JavaProject, PossibleMatchSet, int)
10651=MatchLocator:findIndexMatches(SearchPattern, Index, IndexQueryRequestor, SearchParticipant, IJavaSearchScope, IProgressMonitor)
10652=MatchLocator:getProjectOrJar(IJavaElement)
10653=MatchLocator:parseAndBuildBindings(PossibleMatch, boolean)
10654=MatchLocator:createHandle(LambdaExpression, IJavaElement)
10655=MatchLocator:createHierarchyResolver(IType, PossibleMatch[])
10656=MatchLocator:newTypeParameterReferenceMatch(IJavaElement, int, int, int, ASTNode)
10657=MatchLocator:WorkingCopyDocument:toString()
10658=MatchLocator:computeSuperTypeNames(IType)
10659=MatchLocator:filterEnum(SearchMatch)
10660=MatchLocator:newTypeReferenceMatch(IJavaElement, Binding, int, ASTNode)
10661=MatchLocator:getParticipant()
10662=MatchLocator:getMostApplicableMethod(List<MethodBinding>, MethodPattern)
10663=MatchLocator:accept(ICompilationUnit, AccessRestriction)
10664=MatchLocator:getSplitNames(MethodBinding)
10665=MatchLocator:getMethodBodies(CompilationUnitDeclaration, MatchingNodeSet)
10666=MatchLocator:getMaxResult(int[][])
10667=MatchLocator:newLocalVariableReferenceMatch(IJavaElement, int, int, int, ASTNode)
10668=MatchLocator:reportMatching(Annotation[], IJavaElement, IJavaElement[], Binding, MatchingNodeSet, boolean, boolean)
10669=MatchLocator:hasAlreadyDefinedType(CompilationUnitDeclaration)
10670=MatchLocator:reportMatching(TypeDeclaration, IJavaElement, int, MatchingNodeSet, int)
10671=MatchLocator:newPackageReferenceMatch(IJavaElement, int, int, int, ASTNode)
10672=MatchLocator:getFocusType()
10673=MatchLocator:WrappedCoreException:WrappedCoreException(CoreException)
10674=MatchLocator:WorkingCopyDocument:WorkingCopyDocument(org.eclipse.jdt.core.ICompilationUnit, SearchParticipant)
10675=MatchLocator:findLastTypeArgumentInfo(TypeReference)
10676=MatchLocator:createHandle(FieldDeclaration, TypeDeclaration, IJavaElement)
10677=MatchLocator:purgeMethodStatements(TypeDeclaration, boolean)
10678=MatchLocator:mapParameter(List<String>, List<String>)
10679=MatchLocator:accept(ISourceType[], PackageBinding, AccessRestriction)
10680=MatchLocator:getSplitNames(char[][], char[][])
10681=MatchLocator:reportMatching(Annotation[][], IJavaElement, Binding, MatchingNodeSet, boolean)
10682=MatchLocator:createHandle(AbstractMethodDeclaration, IJavaElement)
10683=MatchLocator:workingCopiesThatCanSeeFocus(org.eclipse.jdt.core.ICompilationUnit[], SearchPattern, SearchParticipant)
10684=MatchLocator:getInverseFullName(char[], char[])
10685=MatchLocator:process(PossibleMatch, boolean)
10686=MatchLocator:getBinaryInfo(ClassFile, IResource)
10687=MatchLocator:reportAccurateParameterizedMethodReference(SearchMatch, ASTNode, TypeReference[])
10688=MatchLocator:accept(IBinaryType, PackageBinding, AccessRestriction)
10689=MatchLocator:createHandles(FieldDeclaration[], TypeDeclaration, IJavaElement)
10690=MatchLocator:locatePackageDeclarations(SearchPattern, SearchParticipant, IJavaProject[])
10691=MatchLocator:newFieldReferenceMatch(IJavaElement, IJavaElement, Binding, int, int, int, ASTNode)
10692=MatchLocator:createHandle(Annotation, IAnnotatable)
10693=MatchLocator:createHandle(AbstractVariableDeclaration, IJavaElement)
10694=MatchLocator:createBinaryMethodHandle(IType, char[], char[][])
10695=MatchLocator:reportAccurateTypeReference(SearchMatch, ASTNode, char[])
10696=MatchLocator:reportMatching(FieldDeclaration, FieldDeclaration[], TypeDeclaration, IJavaElement, int, boolean, MatchingNodeSet)
10697=MatchLocator:reduceParseTree(CompilationUnitDeclaration)
10698=MatchLocator:reportAccurateFieldReference(SearchMatch[], QualifiedNameReference)
10699=MatchLocator:createImportHandle(ImportReference)
10700=MatchLocator:getMethodBinding(MethodPattern, TypeBinding)
10701=MatchLocator:reportAccurateParameterizedTypeReference(SearchMatch, TypeReference, int, TypeReference[])
10702=MatchLocator:createPackageDeclarationHandle(CompilationUnitDeclaration)
10703=MatchLocator:reportMatchingSuper(TypeReference, IJavaElement, Binding, MatchingNodeSet, boolean)
10704=MatchLocator:addWorkingCopies(SearchPattern, SearchDocument[], org.eclipse.jdt.core.ICompilationUnit[], SearchParticipant)
10705=MatchLocator:reportMatching(TypeParameter[], IJavaElement, IJavaElement, Binding, MatchingNodeSet)
10706=MatchLocator:getMethodBinding(MethodPattern)
10707=MatchLocator:initialize(JavaProject, int)
10708=MatchLocator:lookupType(ReferenceBinding)
10709=MatchLocator:reportMatching(AbstractMethodDeclaration, TypeDeclaration, IJavaElement, int, boolean, MatchingNodeSet)
10710=MatchLocator:report(SearchMatch)
10711=MatchLocator:reportBinaryMemberDeclaration(IResource, IMember, Binding, IBinaryType, int)
10712=MatchLocator:reportMatching(CompilationUnitDeclaration, boolean)
10713=MatchLocator:MatchLocator(SearchPattern, SearchRequestor, IJavaSearchScope, IProgressMonitor)
10714=MatchLocator:newMethodReferenceMatch(IJavaElement, Binding, int, int, int, boolean, boolean, ASTNode)
10715=MatchLocator:createMethodHandle(IType, String, String[])
10716=MatchLocator:encloses(IJavaElement)
10717=MatchLocator:setFocus(SearchPattern, IJavaElement)
10718=MatchLocator:createTypeHandle(String)
10719=MatchLocator:getType(Object, char[])
10720=MatchLocator:typeInHierarchy(ReferenceBinding)
10721=MatchLocator:locateMatches(SearchDocument[])
10722=MatchLocator:locateMatches(JavaProject, PossibleMatch[], int, int)
10723=MatchLocator:getMethodBinding0(MethodPattern)
10724=MatchLocator:getResultMap(Map<Integer, List<String>>, Map<Integer, List<String>>)
10725=MatchLocator:reportAccurateEnumConstructorReference(SearchMatch, FieldDeclaration, AllocationExpression)
10726=E:foo()
10727=B:poo()
10728=B:foo()
10729=ReferenceBinding:isConsistentIntersection(TypeBinding[])
10730=ReferenceBinding:storeAnnotations(Binding, AnnotationBinding[])
10731=ReferenceBinding:isStrictfp()
10732=ReferenceBinding:isClass()
10733=ReferenceBinding:compare(char[], char[], int, int)
10734=ReferenceBinding:canBeInstantiated()
10735=ReferenceBinding:isAnnotationType()
10736=ReferenceBinding:applyCloseableInterfaceWhitelists()
10737=ReferenceBinding:getAnnotations()
10738=ReferenceBinding:signature()
10739=ReferenceBinding:syntheticEnclosingInstanceTypes()
10740=ReferenceBinding:nullAnnotatedReadableName(CompilerOptions, boolean)
10741=ReferenceBinding:setAnnotations(AnnotationBinding[])
10742=ReferenceBinding:availableFields()
10743=ReferenceBinding:enclosingTypeAt(int)
10744=ReferenceBinding:isDeprecated()
10745=ReferenceBinding:setContainerAnnotationType(ReferenceBinding)
10746=ReferenceBinding:outermostEnclosingType()
10747=ReferenceBinding:binarySearch(char[], MethodBinding[])
10748=ReferenceBinding:getEnclosingInstancesSlotSize()
10749=ReferenceBinding:retrieveAnnotationHolder(Binding, boolean)
10750=ReferenceBinding:getInterfaceAbstractContracts(Scope, boolean)
10751=ReferenceBinding:binarySearch(char[], FieldBinding[])
10752=ReferenceBinding:isAbstract()
10753=ReferenceBinding:isUsed()
10754=ReferenceBinding:isCompatibleWith(TypeBinding, Scope)
10755=ReferenceBinding:qualifiedSourceName()
10756=ReferenceBinding:isDefault()
10757=ReferenceBinding:getMethods(char[])
10758=ReferenceBinding:isViewedAsDeprecated()
10759=ReferenceBinding:fieldCount()
10760=ReferenceBinding:sortMethods(MethodBinding[], int, int)
10761=ReferenceBinding:computeUniqueKey(boolean)
10762=ReferenceBinding:isProperType(boolean)
10763=ReferenceBinding:debugName()
10764=ReferenceBinding:getPackage()
10765=ReferenceBinding:isBinaryBinding()
10766=ReferenceBinding:isUncheckedException(boolean)
10767=ReferenceBinding:shortReadableName(boolean)
10768=ReferenceBinding:unResolvedFields()
10769=ReferenceBinding:constantPoolName()
10770=ReferenceBinding:hasIncompatibleSuperType(ReferenceBinding)
10771=ReferenceBinding:isFunctionalInterface(Scope)
10772=ReferenceBinding:hasMemberTypes()
10773=ReferenceBinding:isThrowable()
10774=ReferenceBinding:canBeSeenBy(Scope)
10775=ReferenceBinding:getTypeVariable(char[])
10776=ReferenceBinding:getAnnotationTagBits()
10777=ReferenceBinding:superInterfaces()
10778=ReferenceBinding:implementsMethod(MethodBinding)
10779=ReferenceBinding:enumConstantCount()
10780=ReferenceBinding:unResolvedMethods()
10781=ReferenceBinding:isHierarchyBeingActivelyConnected()
10782=ReferenceBinding:hasNullBit(int)
10783=ReferenceBinding:getOuterLocalVariablesSlotSize()
10784=ReferenceBinding:isFinal()
10785=ReferenceBinding:hasNonNullDefaultFor(int, boolean)
10786=ReferenceBinding:isInterface()
10787=ReferenceBinding:storedAnnotations(boolean)
10788=ReferenceBinding:canBeSeenBy(ReferenceBinding, ReferenceBinding)
10789=ReferenceBinding:getMethods(char[], int)
10790=ReferenceBinding:computeId()
10791=ReferenceBinding:implementsInterface(ReferenceBinding, boolean)
10792=ReferenceBinding:getMemberType(char[])
10793=ReferenceBinding:getField(char[], boolean)
10794=ReferenceBinding:isHierarchyBeingConnected()
10795=ReferenceBinding:ReferenceBinding()
10796=ReferenceBinding:getNullDefault()
10797=ReferenceBinding:computeGenericTypeSignature(TypeVariableBinding[])
10798=ReferenceBinding:isHierarchyConnected()
10799=ReferenceBinding:getExactMethod(char[], TypeBinding[], CompilationUnitScope)
10800=ReferenceBinding:fields()
10801=ReferenceBinding:getExactConstructor(TypeBinding[])
10802=ReferenceBinding:isPrivate()
10803=ReferenceBinding:hasRestrictedAccess()
10804=ReferenceBinding:isSubTypeOfRTL(TypeBinding)
10805=ReferenceBinding:applyCloseableClassWhitelists()
10806=ReferenceBinding:isOrEnclosedByPrivateType()
10807=ReferenceBinding:sortFields(FieldBinding[], int, int)
10808=ReferenceBinding:availableMethods()
10809=ReferenceBinding:getAccessFlags()
10810=ReferenceBinding:isProtected()
10811=ReferenceBinding:canBeSeenBy(PackageBinding)
10812=ReferenceBinding:appendNullAnnotation(StringBuffer, CompilerOptions)
10813=ReferenceBinding:isSubtypeOf(TypeBinding)
10814=ReferenceBinding:shortReadableName()
10815=ReferenceBinding:tagAsHavingDefectiveContainerType()
10816=ReferenceBinding:isCompatibleWith0(TypeBinding, Scope)
10817=ReferenceBinding:isEnum()
10818=ReferenceBinding:methods()
10819=ReferenceBinding:getSingleAbstractMethod(Scope, boolean)
10820=ReferenceBinding:nullAnnotatedShortReadableName(CompilerOptions)
10821=ReferenceBinding:readableName()
10822=ReferenceBinding:readableName(boolean)
10823=ReferenceBinding:acceptsNonNullDefault()
10824=ReferenceBinding:isStatic()
10825=ReferenceBinding:computeId(LookupEnvironment)
10826=ReferenceBinding:sourceName()
10827=ReferenceBinding:hashCode()
10828=ReferenceBinding:getFileName()
10829=ReferenceBinding:detectAnnotationCycle()
10830=ReferenceBinding:memberTypes()
10831=ReferenceBinding:depth()
10832=ReferenceBinding:retrieveAnnotations(Binding)
10833=ReferenceBinding:superclass()
10834=ReferenceBinding:ReferenceBinding(ReferenceBinding)
10835=ReferenceBinding:isPublic()
10836=ReferenceBinding:nullAnnotatedReadableName(CompilerOptions)
10837=ReferenceBinding:isSuperclassOf(ReferenceBinding)
10838=ReferenceBinding:storeAnnotationHolder(Binding, AnnotationHolder)
10839=MoveElementsOperation:isMove()
10840=MoveElementsOperation:MoveElementsOperation(IJavaElement[], IJavaElement[], boolean)
10841=MoveElementsOperation:getMainTaskName()
10842=Test:foo()
10843=CompletionTests3:tearDownSuite()
10844=CompletionTests3:setUpSuite()
10845=CompletionTests3:CompletionTests3(String)
10846=CompletionTests3:_testBug338398b()
10847=CompletionTests3:_testBug338398c()
10848=CompletionTests3:testBug338398a()
10849=CompletionTests3:suite()
10850=Test:foo()
10851=S:M:in()
10852=S:out()
10853=SimpleDOMBuilder:exitType(int)
10854=SimpleDOMBuilder:createCompilationUnit(ICompilationUnit)
10855=SimpleDOMBuilder:exitInitializer(int)
10856=SimpleDOMBuilder:createCompilationUnit(String, String)
10857=SimpleDOMBuilder:exitConstructor(int)
10858=SimpleDOMBuilder:exitField(int, int, int)
10859=SimpleDOMBuilder:enterMethod(MethodInfo)
10860=SimpleDOMBuilder:enterInitializer(int, int)
10861=SimpleDOMBuilder:acceptImport(int, int, int, int, char[][], boolean, int)
10862=SimpleDOMBuilder:enterAbstractMethod(MethodInfo)
10863=SimpleDOMBuilder:acceptProblem(CategorizedProblem)
10864=SimpleDOMBuilder:enterField(FieldInfo)
10865=SimpleDOMBuilder:getParser(Map<String, String>)
10866=SimpleDOMBuilder:enterType(TypeInfo)
10867=SimpleDOMBuilder:exitMethod(int, Expression)
10868=SimpleDOMBuilder:acceptPackage(ImportReference)
10869=SimpleDOMBuilder:enterConstructor(MethodInfo)
10870=SimpleDOMBuilder:exitMember(int)
10871=BranchStatement:BranchStatement(char[], int, int)
10872=BranchStatement:generateCode(BlockScope, CodeStream)
10873=BranchStatement:resolve(BlockScope)
10874=Example:foo()
10875=TransitiveClosureHolder:Element:Element(NullReferenceImplTests.State)
10876=NullReferenceImplTests:State:symbolicStates()
10877=UnconditionalFlowInfoTestHarness:markAsDefinitelyNull(LocalVariableBinding)
10878=Generator:addSymbolicStates(State[])
10879=TestLocalVariableBinding:TestTypeBinding:sourceName()
10880=NullReferenceImplTests:State:State(int, String)
10881=NullReferenceImplTests:State:State()
10882=NullReferenceImplTests:NullReferenceImplTests(String)
10883=NullReferenceImplTests:State:fromSymbolicName(String)
10884=UnconditionalFlowInfoTestHarness:markAsDefinitelyNonNull(LocalVariableBinding)
10885=NullReferenceImplTests:State:grabDefinitionFromComment(BufferedReader)
10886=TestLocalVariableBinding:TestLocalVariableBinding(int)
10887=NullReferenceImplTests:test2055_markAsDefinitelyNonNull()
10888=TransitiveClosureHolder:notAlreadyKnowns()
10889=NullReferenceImplTests:testClass()
10890=Generator:main(String[])
10891=UnconditionalFlowInfoTestHarness:init(UnconditionalFlowInfo, long[], int)
10892=NullReferenceImplTests:State:compareTo(Object)
10893=NullReferenceImplTests:test2500_addInitializationsFrom_for_definites()
10894=TestLocalVariableBinding:TestTypeBinding:qualifiedSourceName()
10895=NullReferenceImplTests:State:State(String)
10896=TransitiveClosureHolder:add(NullReferenceImplTests.State[])
10897=NullReferenceImplTests:State:equals(Object)
10898=TransitiveClosureHolder:toString()
10899=NullReferenceImplTests:test2400_state_consistency()
10900=TestLocalVariableBinding:TestTypeBinding:getPackage()
10901=UnconditionalFlowInfoTestHarness:copy(UnconditionalFlowInfo, UnconditionalFlowInfo)
10902=UnconditionalFlowInfoTestHarness:markAsDefinitelyUnknown(LocalVariableBinding)
10903=TestLocalVariableBinding:TestTypeBinding:isCompatibleWith(TypeBinding, Scope)
10904=NullReferenceImplTests:test2999_coverage()
10905=NullReferenceImplTests:test2061_addPotentialInitializationsFrom()
10906=NullReferenceImplTests:test2998_coverage()
10907=UnconditionalFlowInfoTestHarness:copy()
10908=NullReferenceImplTests:State:toString()
10909=Generator:reinitializeFromComputedValues(String, String)
10910=UnconditionalFlowInfoTestHarness:testString()
10911=NullReferenceImplTests:State:hashCode()
10912=NullReferenceImplTests:State:fromLongValues(long, long, long, long, long, long)
10913=NullReferenceImplTests:State:asSourceComment()
10914=NullReferenceImplTests:State:State(int)
10915=UnconditionalFlowInfoTestHarness:testString(int)
10916=Generator:reinitializeFromComments(String, String, String, String)
10917=NullReferenceImplTests:testStringValueOf(long[])
10918=TestLocalVariableBinding:TestTypeBinding:constantPoolName()
10919=TestLocalVariableBinding:TestTypeBinding:TestTypeBinding()
10920=UnconditionalFlowInfoTestHarness:grow(int)
10921=UnconditionalFlowInfoTestHarness:testUnconditionalFlowInfo(long[])
10922=NullReferenceImplTests:State:asInitializer()
10923=NullReferenceImplTests:test2062_mergedWith()
10924=UnconditionalFlowInfoTestHarness:testString(UnconditionalFlowInfo, int)
10925=TestLocalVariableBinding:TestTypeBinding:readableName()
10926=UnconditionalFlowInfoTestHarness:asState(int)
10927=NullReferenceImplTests:State:asLongArray()
10928=NullReferenceImplTests:testCodedValueOf(long[])
10929=UnconditionalFlowInfoTestHarness:testEquals(UnconditionalFlowInfo, UnconditionalFlowInfo, int)
10930=TransitiveClosureHolder:markAllAsAlreadyKnown()
10931=NullReferenceImplTests:State:reinitializeFromComment(BufferedReader, BufferedWriter)
10932=TransitiveClosureHolder:asArray()
10933=NullReferenceImplTests:test2051_markAsComparedEqualToNull()
10934=TransitiveClosureHolder:add(NullReferenceImplTests.State)
10935=NullReferenceImplTests:test2057_markAsDefinitelyUnknown()
10936=NullReferenceImplTests:suite()
10937=NullReferenceImplTests:test2050_markAsComparedEqualToNonNull()
10938=UnconditionalFlowInfoTestHarness:testEquals(UnconditionalFlowInfo)
10939=UnconditionalFlowInfoTestHarness:testUnconditionalFlowInfo(NullReferenceImplTests.State)
10940=Generator:computeTransitiveClosure()
10941=UnconditionalFlowInfoTestHarness:asState(UnconditionalFlowInfo, int)
10942=UnconditionalFlowInfoTestHarness:testUnconditionalFlowInfo(long[], int)
10943=UnconditionalFlowInfoTestHarness:testEquals(UnconditionalFlowInfo, UnconditionalFlowInfo)
10944=UnconditionalFlowInfoTestHarness:testEquals(UnconditionalFlowInfo, int)
10945=NullReferenceImplTests:test2056_markAsDefinitelyNull()
10946=UnconditionalFlowInfoTestHarness:testUnconditionalFlowInfo(NullReferenceImplTests.State, int)
10947=TransitiveClosureHolder:TransitiveClosureHolder()
10948=TestLocalVariableBinding:constant()
10949=UnconditionalFlowInfoTestHarness:asState()
10950=Generator:printHelp(boolean)
10951=NullReferenceImplTests:test2060_addInitializationsFrom()
10952=CompletionOnStringLiteral:printExpression(int, StringBuffer)
10953=CompletionOnStringLiteral:resolveType(ClassScope)
10954=CompletionOnStringLiteral:CompletionOnStringLiteral(int, int, int, int)
10955=CompletionOnStringLiteral:CompletionOnStringLiteral(char[], int, int, int, int, int)
10956=CompletionOnStringLiteral:resolveType(BlockScope)
10957=CompletionFindThisDotField:foo()
10958=X04:foo(String)
10959=X01c:foo()
10960=A:foo(int)
10961=AptBuilder:SystemOutProgressMonitor:beginTask(String, int)
10962=AptBuilder:stop()
10963=AptBuilder:start(IApplicationContext)
10964=AptBuilder:SystemOutProgressMonitor:subTask(String)
10965=InstanceofExpression:treeSize()
10966=InstanceofExpression:getRightOperand()
10967=InstanceofExpression:InstanceofExpression(AST)
10968=InstanceofExpression:clone0(AST)
10969=InstanceofExpression:accept0(ASTVisitor)
10970=InstanceofExpression:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
10971=InstanceofExpression:setLeftOperand(Expression)
10972=InstanceofExpression:getLeftOperand()
10973=InstanceofExpression:subtreeMatch0(ASTMatcher, Object)
10974=InstanceofExpression:propertyDescriptors(int)
10975=InstanceofExpression:internalStructuralPropertiesForType(int)
10976=InstanceofExpression:getNodeType0()
10977=InstanceofExpression:memSize()
10978=InstanceofExpression:setRightOperand(Type)
10979=Test:main(String[])
10980=CompletionOnMemberAccess:CompletionOnMemberAccess(char[], long, boolean)
10981=CompletionOnMemberAccess:resolveType(BlockScope)
10982=CompletionOnMemberAccess:printExpression(int, StringBuffer)
10983=RecoveredAnnotation:addAnnotationName(int, int, int, int)
10984=RecoveredAnnotation:toString(int)
10985=RecoveredAnnotation:add(TypeDeclaration, int)
10986=RecoveredAnnotation:setKind(int)
10987=RecoveredAnnotation:parseTree()
10988=RecoveredAnnotation:resetPendingModifiers()
10989=RecoveredAnnotation:updatedAnnotationReference()
10990=RecoveredAnnotation:updateParseTree()
10991=RecoveredAnnotation:updateOnClosingBrace(int, int)
10992=RecoveredAnnotation:sourceEnd()
10993=RecoveredAnnotation:updateFromParserState()
10994=RecoveredAnnotation:addAnnotation(Annotation, int)
10995=RecoveredAnnotation:RecoveredAnnotation(int, int, int, RecoveredElement, int)
10996=MethodLocator:matchOverriddenMethod(ReferenceBinding, MethodBinding, MethodBinding)
10997=MethodLocator:getMethodBinding(ReferenceBinding, char[], TypeBinding[])
10998=MethodLocator:resolveLevel(ASTNode)
10999=MethodLocator:resolveLevelAsSubtype(char[], char[], ReferenceBinding, char[], TypeBinding[], char[], boolean)
11000=MethodLocator:resolveLevelAsSuperInvocation(ReferenceBinding, TypeBinding[], char[][][], boolean)
11001=MethodLocator:match(LambdaExpression, MatchingNodeSet)
11002=MethodLocator:clear()
11003=MethodLocator:resolveLevel(ReferenceExpression)
11004=MethodLocator:matchReportReference(ASTNode, IJavaElement, IJavaElement, IJavaElement[], Binding, int, MatchLocator)
11005=MethodLocator:match(Annotation, MatchingNodeSet)
11006=MethodLocator:fineGrain()
11007=MethodLocator:match(ASTNode, MatchingNodeSet)
11008=MethodLocator:matchReportReference(MessageSend, MatchLocator, int, MethodBinding)
11009=MethodLocator:checkMethodRef(MethodBinding, ReferenceExpression)
11010=MethodLocator:isVirtualInvoke(MethodBinding, MessageSend)
11011=MethodLocator:match(MethodDeclaration, MatchingNodeSet)
11012=MethodLocator:toString()
11013=MethodLocator:MethodLocator(MethodPattern)
11014=MethodLocator:resolveLevel(Binding)
11015=MethodLocator:referenceType()
11016=MethodLocator:newDeclarationMatch(ASTNode, IJavaElement, Binding, int, int, MatchLocator)
11017=MethodLocator:isTypeInSuperDeclaringTypeNames(char[][])
11018=MethodLocator:reportDeclaration(MethodBinding, MatchLocator, SimpleSet)
11019=MethodLocator:getMatchingSuper(ReferenceBinding)
11020=MethodLocator:match(MemberValuePair, MatchingNodeSet)
11021=MethodLocator:match(MessageSend, MatchingNodeSet)
11022=MethodLocator:methodParametersEqualsPattern(MethodBinding)
11023=MethodLocator:match(ReferenceExpression, MatchingNodeSet)
11024=MethodLocator:matchContainer()
11025=MethodLocator:matchMethod(MethodBinding, boolean)
11026=MethodLocator:matchReportReference(ASTNode, IJavaElement, Binding, int, MatchLocator)
11027=MethodLocator:matchLevelAndReportImportRef(ImportReference, Binding, MatchLocator)
11028=MethodLocator:initializePolymorphicSearch(MatchLocator)
11029=MethodLocator:resolveLevel(MessageSend)
11030=LoaderTestAnnotationProcessorFactory:supportedAnnotationTypes()
11031=LoaderTestAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
11032=LoaderTestAnnotationProcessorFactory:supportedOptions()
11033=Test:foo()
11034=AssistSourceField:getKey()
11035=AssistSourceField:AssistSourceField(JavaElement, String, Map, Map)
11036=AssistSourceField:toStringInfo(int, StringBuffer, Object, boolean)
11037=AssistSourceField:getType(String, int)
11038=AssistSourceField:isResolved()
11039=AssistSourceField:getAnnotation(String)
11040=AssistSourceField:getElementInfo(IProgressMonitor)
11041=Test:main(String[])
11042=Test:bar()
11043=Factory:getReceiverType(MethodBinding)
11044=Factory:newPackageElement(PackageBinding)
11045=Factory:getNoType(TypeKind)
11046=Factory:getPrimitiveType(BaseTypeBinding)
11047=Factory:Factory(BaseProcessingEnvImpl)
11048=Factory:getPackedAnnotationBindings(AnnotationBinding[])
11049=Factory:newElement(Binding)
11050=Factory:performNecessaryPrimitiveTypeConversion(Class<?>, Object, boolean)
11051=Factory:getAnnotationsByType(AnnotationBinding[], Class<A>)
11052=Factory:getPrimitiveType(TypeKind)
11053=Factory:getNullType()
11054=Factory:getAnnotationMirrors(AnnotationBinding[])
11055=Factory:getAnnotation(AnnotationBinding[], Class<A>)
11056=Factory:createAnnotationMirror(String, AnnotationBinding)
11057=Factory:newAnnotationMirror(AnnotationBinding)
11058=Factory:newElement(Binding, ElementKind)
11059=Factory:newTypeMirror(Binding)
11060=Factory:getErrorType(ReferenceBinding)
11061=Factory:newTypeParameterElement(TypeVariableBinding, Element)
11062=Factory:getModifiers(int, ElementKind)
11063=Factory:getMatchingDummyValue(Class<?>)
11064=Factory:decodeModifiers(Set<Modifier>, int, int[])
11065=Factory:setArrayMatchingDummyValue(Object, int, Class<?>)
11066=Factory:appendModifier(Set<Modifier>, int, int, Modifier)
11067=Factory:getUnpackedAnnotationBindings(AnnotationBinding[])
11068=Factory:getAnnotations(AnnotationBinding[], Class<A>, boolean)
11069=Factory:getModifiers(int, ElementKind, boolean)
11070=JDIStackFrame:declaringTypeName()
11071=JDIStackFrame:isConstructorCall()
11072=JDIStackFrame:isStatic()
11073=JDIStackFrame:localVariableNames()
11074=JDIStackFrame:JDIStackFrame(VirtualMachine, DebugEvaluationTest, String, String, String, int, long)
11075=JDIStackFrame:run(String)
11076=JDIStackFrame:JDIStackFrame(VirtualMachine, DebugEvaluationTest, String)
11077=JDIStackFrame:getStackFrame()
11078=JDIStackFrame:localVariableModifiers()
11079=JDIStackFrame:getDebuggedThread(DebugEvaluationTest)
11080=JDIStackFrame:localVariableTypeNames()
11081=JDIStackFrame:JDIStackFrame(VirtualMachine, DebugEvaluationTest, String, String, String, int)
11082=ISourceField:getNameSourceStart()
11083=ISourceField:getDeclarationSourceEnd()
11084=ISourceField:getNameSourceEnd()
11085=ISourceField:getTypeName()
11086=ISourceField:getDeclarationSourceStart()
11087=ISourceField:getInitializationSource()
11088=GeneratedSourceFolderManager:removeFolder()
11089=GeneratedSourceFolderManager:enabledPreferenceChanged()
11090=GeneratedSourceFolderManager:configure()
11091=GeneratedSourceFolderManager:validate(IJavaProject, String)
11092=GeneratedSourceFolderManager:GeneratedSourceFolderManager(AptProject)
11093=GeneratedSourceFolderManager:createOnDisk(IFolder)
11094=GeneratedSourceFolderManager:folderNamePreferenceChanged()
11095=GeneratedSourceFolderManager:getFolderPreference()
11096=GeneratedSourceFolderManager:isGeneratedSourceFolder(IFolder)
11097=GeneratedSourceFolderManager:getBinaryOutputLocation()
11098=GeneratedSourceFolderManager:addToClasspath(IFolder)
11099=GeneratedSourceFolderManager:isOnClasspath(IFolder)
11100=GeneratedSourceFolderManager:getFolder()
11101=GeneratedSourceFolderManager:ensureFolderExists()
11102=GeneratedSourceFolderManager:folderDeleted()
11103=C:m()
11104=BufferFactoryWrapper:create(org.eclipse.jdt.core.IBufferFactory)
11105=BufferFactoryWrapper:equals(Object)
11106=BufferFactoryWrapper:createBuffer(ICompilationUnit)
11107=BufferFactoryWrapper:hashCode()
11108=BufferFactoryWrapper:BufferFactoryWrapper(org.eclipse.jdt.core.IBufferFactory)
11109=BufferFactoryWrapper:toString()
11110=A:m()
11111=X13:foo()
11112=X13:X13(Object, Object)
11113=ContainerInitializer:ITestInitializer:initialize(IPath, IJavaProject)
11114=ContainerInitializer:setInitializer(ITestInitializer)
11115=ContainerInitializer:getFailureContainer(IPath, IJavaProject)
11116=ContainerInitializer:ITestInitializer:allowFailureContainer()
11117=ContainerInitializer:initialize(IPath, IJavaProject)
11118=Bug49361:main(String[])
11119=ArchiveFileObject:toUri()
11120=ArchiveFileObject:openOutputStream()
11121=ArchiveFileObject:openInputStream()
11122=ArchiveFileObject:openReader(boolean)
11123=ArchiveFileObject:getName()
11124=ArchiveFileObject:openWriter()
11125=ArchiveFileObject:getAccessLevel()
11126=ArchiveFileObject:finalize()
11127=ArchiveFileObject:getLastModified()
11128=ArchiveFileObject:equals(Object)
11129=ArchiveFileObject:hashCode()
11130=ArchiveFileObject:getCharContent(boolean)
11131=ArchiveFileObject:toString()
11132=ArchiveFileObject:getNestingKind()
11133=ArchiveFileObject:delete()
11134=ArchiveFileObject:ArchiveFileObject(File, String, Charset)
11135=ArchiveFileObject:isNameCompatible(String, Kind)
11136=ArchiveFileObject:getKind()
11137=X02b:setCharset(String, Object)
11138=StandardTestSuiteLoader:load(String)
11139=StandardTestSuiteLoader:reload(Class)
11140=Util:effectivelyEqual(Object[], Object[])
11141=Util:appendEscapedChar(StringBuffer, char, boolean)
11142=Util:scanIdentifier(char[], int)
11143=Util:getFileByteContent(File)
11144=Util:searchColumnNumber(int[], int, int)
11145=Util:collectFilesNames()
11146=Util:computeOuterMostVisibility(TypeDeclaration, int)
11147=Util:toBoolean(boolean)
11148=Util:scanTypeBoundSignature(char[], int)
11149=Util:getFileCharContent(File, String)
11150=Util:Displayable:displayString(Object)
11151=Util:getParameterCount(char[])
11152=Util:isPotentialZipArchive(String)
11153=Util:isJavaFileName(String)
11154=Util:scanCaptureTypeSignature(char[], int)
11155=Util:scanArrayTypeSignature(char[], int)
11156=Util:getInputStreamAsByteArray(InputStream, int)
11157=Util:getJavaHome()
11158=Util:reverseQuickSort(char[][], int, int)
11159=Util:reverseQuickSort(char[][], int, int, int[])
11160=Util:isClassFileName(char[])
11161=Util:scanTypeSignature(char[], int)
11162=Util:toString(Object[])
11163=Util:isJavaFileName(char[])
11164=Util:collectRunningVMBootclasspath(List)
11165=Util:scanBaseTypeSignature(char[], int)
11166=Util:isExcluded(char[], char[][], char[][], boolean)
11167=Util:getFileOutputStream(boolean, String, String)
11168=Util:getInputStreamAsCharArray(InputStream, int, String)
11169=Util:recordNestedType(ClassFile, TypeBinding)
11170=Util:hashCode(Object[])
11171=Util:scanTypeArgumentSignatures(char[], int)
11172=Util:getZipEntryByteContent(ZipEntry, ZipFile)
11173=Util:scanTypeArgumentSignature(char[], int)
11174=Util:toString(Object[], Displayable)
11175=Util:scanTypeVariableSignature(char[], int)
11176=Util:bytesToChar(byte[], String)
11177=Util:getLineNumber(int, int[], int, int)
11178=Util:getExceptionSummary(Throwable)
11179=Util:isClassFileName(String)
11180=Util:buildAllDirectoriesInto(String, String)
11181=Util:writeToDisk(boolean, String, String, ClassFile)
11182=Util:scanClassTypeSignature(char[], int)
11183=A1:m()
11184=I:m()
11185=I1:m()
11186=BuilderTests:expectingParticipantProblems(IPath, String)
11187=BuilderTests:expectingNoProblemsFor(IPath[])
11188=BuilderTests:printProblemsFor(IPath[])
11189=BuilderTests:expectingNoPresenceOf(IPath)
11190=BuilderTests:tearDown()
11191=BuilderTests:cleanBuild()
11192=BuilderTests:expectingOnlySpecificProblemFor(IPath, Problem)
11193=BuilderTests:expectingNoProblemsFor(IPath)
11194=BuilderTests:expectingCompiling(String[], String[], String)
11195=BuilderTests:fullBuild(IPath)
11196=BuilderTests:expectingProblemsFor(IPath, List)
11197=BuilderTests:expectingPresenceOf(IPath)
11198=BuilderTests:expectingPresenceOf(IPath[])
11199=BuilderTests:expectingOnlyProblemsFor(IPath[])
11200=BuilderTests:buildTestSuite(Class, long)
11201=BuilderTests:expectingSpecificProblemFor(IPath, Problem)
11202=BuilderTests:suite()
11203=BuilderTests:executeClass(IPath, String, String, String)
11204=BuilderTests:setUp()
11205=BuilderTests:allSortedProblems(IPath[])
11206=BuilderTests:incrementalBuild()
11207=BuilderTests:buildTestSuite(Class)
11208=BuilderTests:cleanBuild(String)
11209=BuilderTests:arrayToString(Object[])
11210=BuilderTests:expectingCompiledClasses(String[])
11211=BuilderTests:printProblems()
11212=BuilderTests:getAllTestClasses()
11213=BuilderTests:expectingOnlySpecificProblemsFor(IPath, Problem[])
11214=BuilderTests:expectingNoProblems()
11215=BuilderTests:expectingProblemsFor(IPath[], List)
11216=BuilderTests:expectingSpecificProblemsFor(IPath, Problem[])
11217=BuilderTests:expectingCompilingOrder(String[])
11218=BuilderTests:expectingOnlyProblemsFor(IPath)
11219=BuilderTests:expectingNoPresenceOf(IPath[])
11220=BuilderTests:BuilderTests(String)
11221=BuilderTests:incrementalBuild(IPath)
11222=BuilderTests:fullBuild()
11223=BuilderTests:expectingProblemsFor(IPath[], String)
11224=BuilderTests:expectingUniqueCompiledClasses(String[])
11225=BuilderTests:expectingProblemsFor(IPath, String)
11226=BuilderTests:printProblemsFor(IPath)
11227=A:foo()
11228=FormaterBug:main(String[])
11229=X13:foo(String)
11230=Test:foo(int)
11231=Test:foo()
11232=X16:foo(Object)
11233=Test:main(String[])
11234=A:launch(ILaunchConfiguration, String, ILaunch, IProgressMonitor)
11235=Activator:getPackageAdmin()
11236=Activator:start(BundleContext)
11237=Activator:getInstance()
11238=Activator:stop(BundleContext)
11239=JavaEditor:OccurrencesFinder:isCancelled()
11240=JavaEditor:getAnnotation(int, int)
11241=JavaEditor:MouseClickListener:includes(IRegion, IRegion)
11242=JavaEditor:MouseClickListener:focusGained(FocusEvent)
11243=JavaEditor:editorContextMenuAboutToShow(IMenuManager)
11244=JavaEditor:MouseClickListener:focusLost(FocusEvent)
11245=JavaEditor:MouseClickListener:keyPressed(KeyEvent)
11246=JavaEditor:adjustHighlightRange(int, int)
11247=JavaEditor:EditorSelectionChangedListener:selectionChanged(SelectionChangedEvent)
11248=JavaEditor:PreviousSubWordAction:PreviousSubWordAction(int)
11249=JavaEditor:handlePreferenceStoreChanged(PropertyChangeEvent)
11250=JavaEditor:MouseClickListener:mouseUp(MouseEvent)
11251=JavaEditor:disableBrowserLikeLinks()
11252=JavaEditor:AnnotationAccess:isTemporary(Annotation)
11253=JavaEditor:MouseClickListener:inputDocumentAboutToBeChanged(IDocument, IDocument)
11254=JavaEditor:updatePropertyDependentActions()
11255=JavaEditor:MouseClickListener:deactivate()
11256=JavaEditor:getElementAt(int, boolean)
11257=JavaEditor:isActivePart()
11258=JavaEditor:getActivePart()
11259=JavaEditor:MouseClickListener:mouseDoubleClick(MouseEvent)
11260=JavaEditor:updateOccurrences()
11261=JavaEditor:MouseClickListener:getCurrentTextOffset(ISourceViewer)
11262=JavaEditor:gotoAnnotation(boolean)
11263=JavaEditor:setOutlinerContextMenuId(String)
11264=JavaEditor:getViewer()
11265=JavaEditor:AnnotationAccess:isMultiLine(Annotation)
11266=JavaEditor:MouseClickListener:getMaximumLocation(StyledText, int, int)
11267=JavaEditor:DeleteNextSubWordAction:setCaretPosition(int)
11268=JavaEditor:MouseClickListener:updateColor(ISourceViewer)
11269=JavaEditor:getInputJavaElement()
11270=JavaEditor:gotoMarker(IMarker)
11271=JavaEditor:MouseClickListener:deactivate(boolean)
11272=JavaEditor:MouseClickListener:mouseMove(MouseEvent)
11273=JavaEditor:dispose()
11274=JavaEditor:PreviousSubWordAction:setCaretPosition(int)
11275=JavaEditor:MouseClickListener:activateCursor(ISourceViewer)
11276=JavaEditor:computeHighlightRangeSourceReference()
11277=JavaEditor:MouseClickListener:createColor(IPreferenceStore, String, Display)
11278=JavaEditor:getSignedSelection(ITextViewer)
11279=JavaEditor:isPrefQuickDiffAlwaysOn()
11280=JavaEditor:MouseClickListener:repairRepresentation(boolean)
11281=JavaEditor:isJavaOutlinePageActive()
11282=JavaEditor:enableBrowserLikeLinks()
11283=JavaEditor:getStatusBanner(IStatus)
11284=JavaEditor:createChangeHover()
11285=JavaEditor:setSelection(IJavaElement)
11286=JavaEditor:MouseClickListener:propertyChange(PropertyChangeEvent)
11287=JavaEditor:removeOccurrenceAnnotations()
11288=JavaEditor:MouseClickListener:computeStateMask(String)
11289=JavaEditor:initializeViewerColors(ISourceViewer)
11290=JavaEditor:AbstractSelectionChangedListener:install(ISelectionProvider)
11291=JavaEditor:createAnnotationAccess()
11292=JavaEditor:InformationDispatchAction:run()
11293=JavaEditor:MouseClickListener:getMinimumLocation(StyledText, int, int)
11294=JavaEditor:getStatusLineManager()
11295=JavaEditor:updatedTitleImage(Image)
11296=JavaEditor:MouseClickListener:install()
11297=JavaEditor:QuickFormatAction:run()
11298=JavaEditor:createPartControl(Composite)
11299=JavaEditor:synchronizeOutlinePage(ISourceReference, boolean)
11300=JavaEditor:MouseClickListener:getCurrentTextRegion(ISourceViewer)
11301=JavaEditor:NextSubWordAction:setCaretPosition(int)
11302=JavaEditor:DeletePreviousSubWordAction:setCaretPosition(int)
11303=JavaEditor:updateStatusLine()
11304=JavaEditor:PreviousSubWordAction:run()
11305=JavaEditor:MouseClickListener:mouseDown(MouseEvent)
11306=JavaEditor:getStatusMessage(IStatus)
11307=JavaEditor:synchronizeOutlinePageSelection()
11308=JavaEditor:setOutlinePageInput(JavaOutlinePage, IEditorInput)
11309=JavaEditor:EditorSelectionChangedListener:selectionChanged()
11310=JavaEditor:setStatusLineMessage(String)
11311=JavaEditor:updateAnnotationViews(Annotation)
11312=JavaEditor:SelectPreviousSubWordAction:setCaretPosition(int)
11313=JavaEditor:updateHoverBehavior()
11314=JavaEditor:SelectPreviousSubWordAction:SelectPreviousSubWordAction()
11315=JavaEditor:createJavaSourceViewer(Composite, IVerticalRuler, IOverviewRuler, boolean, int)
11316=JavaEditor:isBrowserLikeLinks()
11317=JavaEditor:MouseClickListener:repairRepresentation()
11318=JavaEditor:createActions()
11319=JavaEditor:getAdapter(Class)
11320=JavaEditor:handlePreferencePropertyChanged(org.eclipse.core.runtime.Preferences.PropertyChangeEvent)
11321=JavaEditor:getCorrespondingElement(IJavaElement)
11322=JavaEditor:MouseClickListener:documentAboutToBeChanged(DocumentEvent)
11323=JavaEditor:OccurrencesFinder:documentChanged(DocumentEvent)
11324=JavaEditor:getBidiLineSegments(int, String)
11325=JavaEditor:MouseClickListener:applyForgroundStyle(StyledText, int, int)
11326=JavaEditor:MouseClickListener:updateKeyModifierMask()
11327=JavaEditor:AnnotationAccess:getType(Annotation)
11328=JavaEditor:MouseClickListener:selectWord(IDocument, int)
11329=JavaEditor:doSetInput(IEditorInput)
11330=JavaEditor:NextSubWordAction:run()
11331=JavaEditor:MouseClickListener:uninstall()
11332=JavaEditor:DeletePreviousSubWordAction:DeletePreviousSubWordAction()
11333=JavaEditor:NavigatePreviousSubWordAction:NavigatePreviousSubWordAction()
11334=JavaEditor:NavigateNextSubWordAction:setCaretPosition(int)
11335=JavaEditor:SmartLineStartAction:SmartLineStartAction(StyledText, boolean)
11336=JavaEditor:affectsTextPresentation(PropertyChangeEvent)
11337=JavaEditor:createOutlinePage()
11338=JavaEditor:InformationDispatchAction:InformationDispatchAction(ResourceBundle, String, TextOperationAction)
11339=JavaEditor:OccurrencesFinder:run()
11340=JavaEditor:isNavigationTargetType(Object)
11341=JavaEditor:getViewPartInput()
11342=JavaEditor:NextSubWordAction:NextSubWordAction(int)
11343=JavaEditor:MouseClickListener:highlightRegion(ISourceViewer, IRegion)
11344=JavaEditor:setSelection(ISourceReference, boolean)
11345=JavaEditor:getBidiLineSegments(ITextViewer, int)
11346=JavaEditor:OccurrencesFinder:OccurrencesFinder(int, IDocument, ITextSelection)
11347=JavaEditor:getNextAnnotation(int, int, boolean, Position)
11348=JavaEditor:OutlineSelectionChangedListener:selectionChanged(SelectionChangedEvent)
11349=JavaEditor:createNavigationActions()
11350=JavaEditor:getStatusHeader(IStatus)
11351=JavaEditor:setStatusLineErrorMessage(String)
11352=JavaEditor:synchronizeOutlinePage(ISourceReference)
11353=JavaEditor:getElementAt(int)
11354=JavaEditor:SelectNextSubWordAction:SelectNextSubWordAction()
11355=JavaEditor:PropertyChangeListener:propertyChange(org.eclipse.core.runtime.Preferences.PropertyChangeEvent)
11356=JavaEditor:outlinePageClosed()
11357=JavaEditor:getActionGroup()
11358=JavaEditor:isJavaEditorHoverProperty(String)
11359=JavaEditor:configureSourceViewerDecorationSupport(SourceViewerDecorationSupport)
11360=JavaEditor:MouseClickListener:inputDocumentChanged(IDocument, IDocument)
11361=JavaEditor:MouseClickListener:keyReleased(KeyEvent)
11362=JavaEditor:AnnotationAccess:AnnotationAccess(MarkerAnnotationPreferences)
11363=JavaEditor:JavaEditor()
11364=JavaEditor:InformationDispatchAction:computeOffsetAtLocation(ITextViewer, int, int)
11365=JavaEditor:MouseClickListener:resetCursor(ISourceViewer)
11366=JavaEditor:isSurroundedByBrackets(IDocument, int)
11367=JavaEditor:NavigatePreviousSubWordAction:setCaretPosition(int)
11368=JavaEditor:MouseClickListener:paintControl(PaintEvent)
11369=JavaEditor:AbstractSelectionChangedListener:uninstall(ISelectionProvider)
11370=JavaEditor:SelectNextSubWordAction:setCaretPosition(int)
11371=JavaEditor:doSelectionChanged(SelectionChangedEvent)
11372=JavaEditor:OccurrencesFinder:documentAboutToBeChanged(DocumentEvent)
11373=JavaEditor:NavigateNextSubWordAction:NavigateNextSubWordAction()
11374=JavaEditor:doSetSelection(ISelection)
11375=JavaEditor:isBracket(char)
11376=JavaEditor:createSourceViewer(Composite, IVerticalRuler, int)
11377=JavaEditor:gotoMatchingBracket()
11378=JavaEditor:MouseClickListener:documentChanged(DocumentEvent)
11379=JavaEditor:SmartLineStartAction:getLineStartPosition(IDocument, String, int, int)
11380=JavaEditor:DeleteNextSubWordAction:DeleteNextSubWordAction()
11381=Test3:test(Function<A, @Nullable B>, Function<B, C>, A)
11382=ObjectVector:contains(Object)
11383=ObjectVector:size()
11384=ObjectVector:copyInto(Object[])
11385=ObjectVector:ObjectVector()
11386=ObjectVector:add(Object)
11387=ObjectVector:containsIdentical(Object)
11388=ObjectVector:removeAll()
11389=ObjectVector:remove(Object)
11390=ObjectVector:addAll(Object[])
11391=ObjectVector:addAll(ObjectVector)
11392=ObjectVector:toString()
11393=ObjectVector:elementAt(int)
11394=ObjectVector:copyInto(Object[], int)
11395=ObjectVector:find(Object)
11396=LocalTypeBinding:updateInnerEmulationDependents()
11397=LocalTypeBinding:readableName()
11398=LocalTypeBinding:setAsMemberType()
11399=LocalTypeBinding:createArrayType(int)
11400=LocalTypeBinding:sourceName()
11401=LocalTypeBinding:shortReadableName()
11402=LocalTypeBinding:setConstantPoolName(char[])
11403=LocalTypeBinding:addInnerEmulationDependent(BlockScope, boolean)
11404=LocalTypeBinding:toString()
11405=LocalTypeBinding:constantPoolName()
11406=LocalTypeBinding:LocalTypeBinding(ClassScope, SourceTypeBinding, CaseStatement)
11407=CompilationUnitStructureRequestor:acceptProblem(CategorizedProblem)
11408=CompilationUnitStructureRequestor:createImportDeclaration(ImportContainer, String, boolean)
11409=CompilationUnitStructureRequestor:exitCompilationUnit(int)
11410=CompilationUnitStructureRequestor:getMemberValuePairs(MemberValuePair[])
11411=CompilationUnitStructureRequestor:acceptAnnotation(org.eclipse.jdt.internal.compiler.ast.Annotation, AnnotatableInfo, JavaElement)
11412=CompilationUnitStructureRequestor:enterType(TypeInfo)
11413=CompilationUnitStructureRequestor:createMethodHandle(JavaElement, MethodInfo)
11414=CompilationUnitStructureRequestor:convertTypeNamesToSigs(char[][])
11415=CompilationUnitStructureRequestor:addToChildren(Object, JavaElement)
11416=CompilationUnitStructureRequestor:acceptMethodParameters(Argument[], JavaElement, MethodInfo)
11417=CompilationUnitStructureRequestor:enterInitializer(int, int)
11418=CompilationUnitStructureRequestor:exitMethod(int, Expression)
11419=CompilationUnitStructureRequestor:getMemberValue(org.eclipse.jdt.internal.core.MemberValuePair, Expression)
11420=CompilationUnitStructureRequestor:exitField(int, int, int)
11421=CompilationUnitStructureRequestor:createInitializer(JavaElement)
11422=CompilationUnitStructureRequestor:createTypeParameter(JavaElement, String)
11423=CompilationUnitStructureRequestor:CompilationUnitStructureRequestor(ICompilationUnit, CompilationUnitElementInfo, Map)
11424=CompilationUnitStructureRequestor:exitType(int)
11425=CompilationUnitStructureRequestor:createTypeInfo(TypeInfo, SourceType)
11426=CompilationUnitStructureRequestor:acceptTypeParameter(TypeParameterInfo, JavaElementInfo)
11427=CompilationUnitStructureRequestor:createMethodInfo(MethodInfo, SourceMethod)
11428=CompilationUnitStructureRequestor:exitConstructor(int)
11429=CompilationUnitStructureRequestor:createPackageDeclaration(JavaElement, String)
11430=CompilationUnitStructureRequestor:resolveDuplicates(SourceRefElement)
11431=CompilationUnitStructureRequestor:exitInitializer(int)
11432=CompilationUnitStructureRequestor:createImportContainer(ICompilationUnit)
11433=CompilationUnitStructureRequestor:acceptImport(int, int, int, int, char[][], boolean, int)
11434=CompilationUnitStructureRequestor:createTypeHandle(JavaElement, TypeInfo)
11435=CompilationUnitStructureRequestor:enterCompilationUnit()
11436=CompilationUnitStructureRequestor:acceptPackage(ImportReference)
11437=CompilationUnitStructureRequestor:createField(JavaElement, FieldInfo)
11438=CompilationUnitStructureRequestor:getChildren(Object)
11439=CompilationUnitStructureRequestor:enterField(FieldInfo)
11440=CompilationUnitStructureRequestor:enterConstructor(MethodInfo)
11441=CompilationUnitStructureRequestor:getMemberValuePair(MemberValuePair)
11442=CompilationUnitStructureRequestor:createAnnotation(JavaElement, String)
11443=CompilationUnitStructureRequestor:acceptLineSeparatorPositions(int[])
11444=CompilationUnitStructureRequestor:enterMethod(MethodInfo)
11445=JavadocMessageSend:resolveType(ClassScope)
11446=JavadocMessageSend:internalResolveType(Scope)
11447=JavadocMessageSend:resolveType(BlockScope)
11448=JavadocMessageSend:printExpression(int, StringBuffer)
11449=JavadocMessageSend:JavadocMessageSend(char[], long)
11450=JavadocMessageSend:isSuperAccess()
11451=JavadocMessageSend:traverse(ASTVisitor, BlockScope)
11452=JavadocMessageSend:JavadocMessageSend(char[], long, JavadocArgumentExpression[])
11453=MethodNameRequestor:acceptMethod(char[], int, char[], char[], int, char[], char[], char[][], char[][], char[], int, String, int)
11454=CopyMoveElementsTests:tearDown()
11455=CopyMoveElementsTests:testMoveInitializerInDifferentProject()
11456=CopyMoveElementsTests:testCopyLocalType()
11457=CopyMoveElementsTests:testCopyTypeWithPositioningInDifferentProject()
11458=CopyMoveElementsTests:testCopyMethodWithPositioningInDifferentProject()
11459=CopyMoveElementsTests:testMoveInitializerRename()
11460=CopyMoveElementsTests:testCopyConstructorInDifferentProject()
11461=CopyMoveElementsTests:CopyMoveElementsTests(String)
11462=CopyMoveElementsTests:testCopyBinaryField()
11463=CopyMoveElementsTests:testCopyMethodWithCollisionInDifferentProject()
11464=CopyMoveElementsTests:testCopyFieldWithInvalidPositioning()
11465=CopyMoveElementsTests:testCopySyntaxErrorMethodInDifferentProject()
11466=CopyMoveElementsTests:testCopyFieldWithInvalidDestinationInDifferentProject()
11467=CopyMoveElementsTests:testCopyInitializerInDifferentProject()
11468=CopyMoveElementsTests:testCopyMethodRenameForce()
11469=CopyMoveElementsTests:testMoveFieldWithPositioningInDifferentProject()
11470=CopyMoveElementsTests:testCopyMethodForce()
11471=CopyMoveElementsTests:testMoveFieldInDifferentProject()
11472=CopyMoveElementsTests:testMoveFieldWithInvalidDestinationInDifferentProject()
11473=CopyMoveElementsTests:setUp()
11474=CopyMoveElementsTests:testCopyFieldWithCollision()
11475=CopyMoveElementsTests:testMoveMethodRenameForceInDifferentProject()
11476=CopyMoveElementsTests:testMoveMethodsWithCancel()
11477=CopyMoveElementsTests:testCopyInitializerRenameInDifferentProject()
11478=CopyMoveElementsTests:testCopyMethodWithInvalidDestinationInDifferentProject()
11479=CopyMoveElementsTests:testCopyMethodRenameInDifferentProject()
11480=CopyMoveElementsTests:testCopySyntaxErrorMethod()
11481=CopyMoveElementsTests:testCopyMethodForceInDifferentProject()
11482=CopyMoveElementsTests:testMoveField()
11483=CopyMoveElementsTests:testMoveFieldRenameForceWithPositioningInDifferentProject()
11484=CopyMoveElementsTests:testCopyMethodWithInvalidDestination()
11485=CopyMoveElementsTests:testCopyMainTypeInDifferentProject()
11486=CopyMoveElementsTests:testCopyMethodRename()
11487=CopyMoveElementsTests:testCopyInitializerWithPositioningInDifferentProject()
11488=CopyMoveElementsTests:testCopyFieldWithInvalidPositioningInDifferentProject()
11489=CopyMoveElementsTests:testMoveConstructor()
11490=CopyMoveElementsTests:testMoveFieldWithCollision()
11491=CopyMoveElementsTests:testCopyInitializerRename()
11492=CopyMoveElementsTests:testMoveMethodSameParent()
11493=CopyMoveElementsTests:testMoveMethodRenameForce()
11494=CopyMoveElementsTests:testMoveConstructorInDifferentProject()
11495=CopyMoveElementsTests:testMoveMethodForceInDifferentProject()
11496=CopyMoveElementsTests:suite()
11497=CopyMoveElementsTests:testCopyMethodSameParent()
11498=CopyMoveElementsTests:testMoveMethodForce()
11499=CopyMoveElementsTests:testCopyBinaryMethod()
11500=CopyMoveElementsTests:testMoveMethodRenameWithPositioningInDifferentProject()
11501=CopyMoveElementsTests:testCopyFieldSameParent()
11502=CopyMoveElementsTests:testCopyImportStatic()
11503=CopyMoveElementsTests:testMoveFieldSameParent()
11504=CopyMoveElementsTests:testCopyMoveWithInvalidRenamings()
11505=CopyMoveElementsTests:testCopyFieldForce()
11506=CopyMoveElementsTests:testCopyFieldWithPositioningInDifferentProject()
11507=CopyMoveElementsTests:testMoveMethod()
11508=CopyMoveElementsTests:testMoveMethodWithCollision()
11509=CopyMoveElementsTests:testMoveFieldRename()
11510=CopyMoveElementsTests:testCopyFieldForceInDifferentProject()
11511=CopyMoveElementsTests:testCopyFieldWithPositioning()
11512=CopyMoveElementsTests:testMoveMethodWithCollisionInDifferentProject()
11513=CopyMoveElementsTests:testCopyConstructor()
11514=CopyMoveElementsTests:testCopyFieldsMultiStatus()
11515=CopyMoveElementsTests:testMoveTypeWithPositioningInDifferentProject()
11516=CopyMoveElementsTests:testMoveTypeRenameWithPositioningInDifferentProject()
11517=CopyMoveElementsTests:testCopyFieldsMultiStatusInDifferentProject()
11518=CopyMoveElementsTests:testMoveInnerTypeRenameWithPositioningInDifferentProject()
11519=CopyMoveElementsTests:testMoveMethodWithInvalidDestination()
11520=CopyMoveElementsTests:testMoveFieldWithCollisionInDifferentProject()
11521=CopyMoveElementsTests:testCopyMethodInDifferentProject()
11522=CopyMoveElementsTests:testCopyTypeInDifferentProject()
11523=CopyMoveElementsTests:testMoveFieldRenameForceInDifferentProject()
11524=CopyMoveElementsTests:testCopyMethodWithCollision()
11525=CopyMoveElementsTests:tearDownSuite()
11526=CopyMoveElementsTests:testMoveFieldWithInvalidDestination()
11527=CopyMoveElementsTests:testCopyFieldWithInvalidDestination()
11528=CopyMoveElementsTests:testCopyInitializer()
11529=CopyMoveElementsTests:testMoveSyntaxErrorMethod()
11530=CopyMoveElementsTests:testMoveMethodsWithCancelInDifferentProject()
11531=CopyMoveElementsTests:testCopyType()
11532=CopyMoveElementsTests:testMoveMethodWithInvalidDestinationInDifferentProject()
11533=CopyMoveElementsTests:testMoveFieldForce()
11534=CopyMoveElementsTests:testMoveInitializer()
11535=CopyMoveElementsTests:testMoveSyntaxErrorMethodInDifferentProject()
11536=CopyMoveElementsTests:testCopyFieldRenameForceInDifferentProject()
11537=CopyMoveElementsTests:testCopyFieldRenameForce()
11538=CopyMoveElementsTests:testCopyMethodRenameForceInDifferentProject()
11539=CopyMoveElementsTests:testMoveMethodRenameInDifferentProject()
11540=CopyMoveElementsTests:testCopyFieldRename()
11541=CopyMoveElementsTests:testMoveFieldForceInDifferentProject()
11542=CopyMoveElementsTests:testCopyInnerTypeWithPositioningInDifferentProject()
11543=CopyMoveElementsTests:testMoveMethodWithPositioningInDifferentProject()
11544=CopyMoveElementsTests:testMoveInitializerWithPositioningInDifferentProject()
11545=CopyMoveElementsTests:testCopyMethod()
11546=CopyMoveElementsTests:testCopyImport()
11547=CopyMoveElementsTests:testMoveFieldRenameInDifferentProject()
11548=CopyMoveElementsTests:testCopyFieldWithCollisionInDifferentProject()
11549=CopyMoveElementsTests:testCopyFieldRenameInDifferentProject()
11550=CopyMoveElementsTests:testMoveInnerTypeWithPositioningInDifferentProject()
11551=CopyMoveElementsTests:testCopyFieldInDifferentProject()
11552=CopyMoveElementsTests:testMoveMethodRename()
11553=CopyMoveElementsTests:testCopyBinaryType()
11554=CopyMoveElementsTests:testMoveMethodInDifferentProject()
11555=CopyMoveElementsTests:setUpSuite()
11556=CopyMoveElementsTests:testCopyMainType()
11557=CopyMoveElementsTests:testMoveFieldRenameForce()
11558=CopyMoveElementsTests:testMoveMainTypes()
11559=CopyMoveElementsTests:testMoveInitializerRenameInDifferentProject()
11560=CopyMoveElementsTests:testCopyField()
11561=Annotation:hasNullBit(int)
11562=Annotation:getTargetElementType(char[])
11563=Annotation:isTypeUseCompatible(TypeReference, Scope)
11564=Annotation:checkContainingAnnotationTargetAtUse(Annotation, BlockScope, TypeBinding, TypeBinding)
11565=Annotation:evaluateDefaultNullnessLocation(Object)
11566=Annotation:isRuntimeTypeInvisible()
11567=Annotation:checkContainerAnnotationTypeTarget(ASTNode, Scope, ReferenceBinding, ReferenceBinding)
11568=Annotation:isAnnotationTargetAllowed(Annotation, BlockScope, TypeBinding, int)
11569=Annotation:recordSuppressWarnings(Scope, int, int, boolean)
11570=Annotation:traverse(ASTVisitor, BlockScope)
11571=Annotation:checkForInstancesOfRepeatableWithRepeatingContainerAnnotation(BlockScope, ReferenceBinding, Annotation[])
11572=Annotation:isTypeUseCompatible(TypeReference, Scope, Annotation[])
11573=Annotation:nullLocationBitsFromAnnotationValue(Object)
11574=Annotation:getAnnotationRetention(ReferenceBinding)
11575=Annotation:detectStandardAnnotation(Scope, ReferenceBinding, MemberValuePair)
11576=Annotation:getRetentionName(long)
11577=Annotation:checkAnnotationTarget(Annotation, BlockScope, ReferenceBinding, int, Binding, long)
11578=Annotation:getLocations(Expression, Annotation)
11579=Annotation:getCompilerAnnotation()
11580=Annotation:isRuntimeInvisible()
11581=Annotation:checkRepeatableMetaAnnotation(BlockScope)
11582=Annotation:isAnnotationTargetAllowed(BlockScope, TypeBinding, Binding)
11583=Annotation:printExpression(int, StringBuffer)
11584=Annotation:computeElementValuePairs()
11585=Annotation:resolveType(BlockScope)
11586=Annotation:setPersistibleAnnotation(ContainerAnnotation)
11587=Annotation:memberValuePairs()
11588=Annotation:isRuntimeTypeVisible()
11589=Annotation:isAnnotationTargetAllowed(Binding, BlockScope, TypeBinding, int, long)
11590=Annotation:checkContainerAnnotationType(ASTNode, BlockScope, ReferenceBinding, ReferenceBinding, boolean)
11591=Annotation:traverse(ASTVisitor, ClassScope)
11592=Annotation:isRuntimeVisible()
11593=Annotation:getRetentionPolicy(char[])
11594=Annotation:getPersistibleAnnotation()
11595=Example:foo()
11596=X:X()
11597=ResolvedSourceMethod:getKey()
11598=ResolvedSourceMethod:toStringInfo(int, StringBuffer, Object, boolean)
11599=ResolvedSourceMethod:unresolved()
11600=ResolvedSourceMethod:ResolvedSourceMethod(JavaElement, String, String[], String)
11601=ResolvedSourceMethod:isResolved()
11602=I:id(int, int)
11603=A:lambdas()
11604=A:run()
11605=Pair:toString()
11606=Seq:toString()
11607=Pair:Pair(A, B)
11608=Seq:Seq()
11609=Pair:equals(Object, Object)
11610=Pair:equals(Object)
11611=Seq:zip(Seq<T>)
11612=Seq:Seq(E, Seq<E>)
11613=Seq:Zipper:zip(Seq<T>)
11614=Seq:isEmpty()
11615=X:main(String[])
11616=X06:foo()
11617=PatternLocator:match(MethodDeclaration, MatchingNodeSet)
11618=PatternLocator:fineGrain()
11619=PatternLocator:matchReportImportRef(ImportReference, Binding, IJavaElement, int, MatchLocator)
11620=PatternLocator:match(Expression, MatchingNodeSet)
11621=PatternLocator:updateMatch(ParameterizedTypeBinding, char[][][], MatchLocator)
11622=PatternLocator:updateMatch(ParameterizedTypeBinding, char[][][], boolean, int, MatchLocator)
11623=PatternLocator:match(LambdaExpression, MatchingNodeSet)
11624=PatternLocator:setFlavors(int)
11625=PatternLocator:qualifiedPattern(char[], char[])
11626=PatternLocator:getTypeNameBinding(int)
11627=PatternLocator:qualifiedSourceName(TypeBinding)
11628=PatternLocator:match(MessageSend, MatchingNodeSet)
11629=PatternLocator:matchNameValue(char[], char[])
11630=PatternLocator:match(FieldDeclaration, MatchingNodeSet)
11631=PatternLocator:match(ASTNode, MatchingNodeSet)
11632=PatternLocator:resolveLevelForType(char[], char[], char[][][], int, TypeBinding)
11633=PatternLocator:matchesTypeReference(char[], TypeReference)
11634=PatternLocator:matchLevelAndReportImportRef(ImportReference, Binding, MatchLocator)
11635=PatternLocator:patternLocator(SearchPattern)
11636=PatternLocator:match(TypeDeclaration, MatchingNodeSet)
11637=PatternLocator:referenceType()
11638=PatternLocator:updateMatch(TypeBinding[], MatchLocator, char[][], boolean)
11639=PatternLocator:matchesName(char[], char[])
11640=PatternLocator:newDeclarationMatch(ASTNode, IJavaElement, Binding, int, int, MatchLocator)
11641=PatternLocator:resolveLevel(ASTNode)
11642=PatternLocator:initializePolymorphicSearch(MatchLocator)
11643=PatternLocator:match(Reference, MatchingNodeSet)
11644=PatternLocator:match(Annotation, MatchingNodeSet)
11645=PatternLocator:resolveLevel(Binding)
11646=PatternLocator:match(MemberValuePair, MatchingNodeSet)
11647=PatternLocator:resolveLevelForType(char[], TypeBinding)
11648=PatternLocator:match(TypeParameter, MatchingNodeSet)
11649=PatternLocator:getQualifiedSourceName(TypeBinding)
11650=PatternLocator:clear()
11651=PatternLocator:matchLevel(ImportReference)
11652=PatternLocator:match(LocalDeclaration, MatchingNodeSet)
11653=PatternLocator:match(ConstructorDeclaration, MatchingNodeSet)
11654=PatternLocator:match(TypeReference, MatchingNodeSet)
11655=PatternLocator:matchContainer()
11656=PatternLocator:PatternLocator(SearchPattern)
11657=PatternLocator:resolveLevelForType(char[], char[], TypeBinding)
11658=PatternLocator:toString()
11659=PatternLocator:recordResolution(QualifiedTypeReference, TypeBinding)
11660=PatternLocator:matchReportReference(ASTNode, IJavaElement, Binding, int, MatchLocator)
11661=PatternLocator:matchReportReference(ASTNode, IJavaElement, IJavaElement, IJavaElement[], Binding, int, MatchLocator)
11662=PatternLocator:getQualifiedPattern(char[], char[])
11663=PatternLocator:match(ReferenceExpression, MatchingNodeSet)
11664=Bug49994:bar()
11665=Bug49994:foo()
11666=Bug49994:Bug49994(String)
11667=X16:foo(Object)
11668=Test:containsAssert()
11669=Test:bugTest()
11670=Example:bar()
11671=Example:foo()
11672=Example:foo2()
11673=Test:Inner:foo()
11674=AnnotationType:getDeclaration()
11675=LocalVariableTypeAttribute:getLocalVariableTypeTable()
11676=LocalVariableTypeAttribute:LocalVariableTypeAttribute(byte[], IConstantPool, int)
11677=LocalVariableTypeAttribute:getLocalVariableTypeTableLength()
11678=FieldAccessCompletionTest:testCastExpression()
11679=FieldAccessCompletionTest:testForInit()
11680=FieldAccessCompletionTest:testSwitchBlockStatement()
11681=FieldAccessCompletionTest:testPreIncrementExpressionMinusMinus()
11682=FieldAccessCompletionTest:testUnaryExpressionMinus()
11683=FieldAccessCompletionTest:testIfThenElseStatement()
11684=FieldAccessCompletionTest:testMethodInvocation()
11685=FieldAccessCompletionTest:testDimWithOrWithOutExpr()
11686=FieldAccessCompletionTest:testMethodBody()
11687=FieldAccessCompletionTest:testClassInstanceCreationExpressionPrimary()
11688=FieldAccessCompletionTest:testWhileExpression()
11689=FieldAccessCompletionTest:testReturnStatement()
11690=FieldAccessCompletionTest:testMethodInvocationSuper()
11691=FieldAccessCompletionTest:testVariableDeclarator()
11692=FieldAccessCompletionTest:testRelationalExpressionLessThan()
11693=FieldAccessCompletionTest:testPreIncrementExpressionPlusPlus()
11694=FieldAccessCompletionTest:testDoExpression()
11695=FieldAccessCompletionTest:testUnaryExpressionLogicalComplement()
11696=FieldAccessCompletionTest:testMultiplicativeExpressionMultiplication()
11697=FieldAccessCompletionTest:testConditionalExpressionConditionalExpression()
11698=FieldAccessCompletionTest:testEqualityExpression()
11699=FieldAccessCompletionTest:suite()
11700=FieldAccessCompletionTest:testStatementExpressionList()
11701=FieldAccessCompletionTest:testRelationalExpressionGreaterThan()
11702=FieldAccessCompletionTest:testBlockStatements()
11703=FieldAccessCompletionTest:testIfExpresionThenElse()
11704=FieldAccessCompletionTest:testArrayAccess()
11705=FieldAccessCompletionTest:testUnaryExpressionBitwiseComplement()
11706=FieldAccessCompletionTest:testConditionalAndExpression()
11707=FieldAccessCompletionTest:testAssignment()
11708=FieldAccessCompletionTest:testConditionalOrExpression()
11709=FieldAccessCompletionTest:testBlockStatementsInConstructorBody()
11710=FieldAccessCompletionTest:testSwitchLabel()
11711=FieldAccessCompletionTest:testEqualityExpressionNot()
11712=FieldAccessCompletionTest:testClassInstanceCreationExpression()
11713=FieldAccessCompletionTest:testShiftExpressionRightUnSigned()
11714=FieldAccessCompletionTest:testForUpdate()
11715=FieldAccessCompletionTest:testForStatement()
11716=FieldAccessCompletionTest:testArrayInitializer()
11717=FieldAccessCompletionTest:testInclusiveOrExpression()
11718=FieldAccessCompletionTest:testShiftExpressionLeft()
11719=FieldAccessCompletionTest:testVariableInitializers()
11720=FieldAccessCompletionTest:testForStatementExpression()
11721=FieldAccessCompletionTest:testMultiplicativeExpressiondDivision()
11722=FieldAccessCompletionTest:testRelationalExpressionGreaterThanOrEquals()
11723=FieldAccessCompletionTest:testConstructorBody()
11724=FieldAccessCompletionTest:FieldAccessCompletionTest(String)
11725=FieldAccessCompletionTest:testClassInstanceCreationExpressionName()
11726=FieldAccessCompletionTest:testShiftExpressionRight()
11727=FieldAccessCompletionTest:testSynchronizedStatement()
11728=FieldAccessCompletionTest:testIfThenStatementElse()
11729=FieldAccessCompletionTest:testArrayInitializerComma()
11730=FieldAccessCompletionTest:testWhileStatement()
11731=FieldAccessCompletionTest:testBlock()
11732=FieldAccessCompletionTest:testUnaryExpressionPlus()
11733=FieldAccessCompletionTest:testAndExpression()
11734=FieldAccessCompletionTest:testMultiplicativeExpressionRemainder()
11735=FieldAccessCompletionTest:testAdditiveExpressionPlus()
11736=FieldAccessCompletionTest:testExclusiveOrExpression()
11737=FieldAccessCompletionTest:testArrayAccessPrimaryNoNewArray()
11738=FieldAccessCompletionTest:testBlockStatementsInStaticInitializer()
11739=FieldAccessCompletionTest:testBlockStatementsInInitializer()
11740=FieldAccessCompletionTest:testExplicitConstructorInvocationInConstructorBody()
11741=FieldAccessCompletionTest:testAdditiveExpressionMinus()
11742=FieldAccessCompletionTest:testCastExpressionUnaryExpression()
11743=FieldAccessCompletionTest:testDoStatement()
11744=FieldAccessCompletionTest:testPrimaryNoNewArray()
11745=FieldAccessCompletionTest:testMethodInvocationPrimary()
11746=FieldAccessCompletionTest:testRelationalExpressionLessThanOrEqual()
11747=FieldAccessCompletionTest:testConditionalExpression()
11748=FieldAccessCompletionTest:testLabeledStatement()
11749=FieldAccessCompletionTest:testIfThenStatement()
11750=FieldAccessCompletionTest:testThrowExpression()
11751=FieldAccessCompletionTest:testArgumentList()
11752=FieldAccessCompletionTest:testSwitchExpression()
11753=FieldAccessCompletionTest:testIfExpresionThen()
11754=PackageDeclarationImpl:PackageDeclarationImpl(IPackageBinding, TypeDeclarationImpl, BaseProcessorEnv, boolean, IPackageFragment[])
11755=PackageDeclarationImpl:getClasses()
11756=PackageDeclarationImpl:getTypesInPackage(IPackageFragment[])
11757=PackageDeclarationImpl:getEnums()
11758=PackageDeclarationImpl:PackageDeclarationImpl(IPackageBinding, TypeDeclarationImpl, BaseProcessorEnv, boolean)
11759=PackageDeclarationImpl:getPackageBinding()
11760=PackageDeclarationImpl:getDeclarationBinding()
11761=PackageDeclarationImpl:isFromSource()
11762=PackageDeclarationImpl:getQualifiedName()
11763=PackageDeclarationImpl:getAnnotation(Class<A>)
11764=PackageDeclarationImpl:kind()
11765=PackageDeclarationImpl:toString()
11766=PackageDeclarationImpl:getPosition()
11767=PackageDeclarationImpl:getModifiers()
11768=PackageDeclarationImpl:getSimpleName()
11769=PackageDeclarationImpl:getAnnotationTypes()
11770=PackageDeclarationImpl:getInterfaces()
11771=PackageDeclarationImpl:initFragments()
11772=PackageDeclarationImpl:getDocComment()
11773=PackageDeclarationImpl:getAnnotationMirrors()
11774=PackageDeclarationImpl:accept(DeclarationVisitor)
11775=X:x()
11776=ThrownExceptionFinder:visit(TypeDeclaration, CompilationUnitScope)
11777=ThrownExceptionFinder:endVisitMethodInvocation(MethodBinding)
11778=ThrownExceptionFinder:removeCaughtException(ReferenceBinding)
11779=ThrownExceptionFinder:endVisit(MessageSend, BlockScope)
11780=ThrownExceptionFinder:removeCaughtExceptions(TryStatement, boolean)
11781=ThrownExceptionFinder:visitType(TypeDeclaration)
11782=ThrownExceptionFinder:acceptException(ReferenceBinding)
11783=ThrownExceptionFinder:endVisit(ThrowStatement, BlockScope)
11784=ThrownExceptionFinder:visit(TypeDeclaration, ClassScope)
11785=ThrownExceptionFinder:processThrownExceptions(TryStatement, BlockScope)
11786=ThrownExceptionFinder:endVisit(AllocationExpression, BlockScope)
11787=ThrownExceptionFinder:getDiscouragedExceptions()
11788=ThrownExceptionFinder:getAlreadyCaughtExceptions()
11789=ThrownExceptionFinder:visit(TypeDeclaration, BlockScope)
11790=ThrownExceptionFinder:visit(TryStatement, BlockScope)
11791=ThrownExceptionFinder:getThrownUncaughtExceptions()
11792=ExceptionHandlingProcessor:process()
11793=ExceptionHandlingProcessor:ExceptionHandlingProcessor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
11794=A:A()
11795=X:foo()
11796=X:X(String)
11797=InnerEmulationTest:test009()
11798=InnerEmulationTest:test118()
11799=InnerEmulationTest:test171()
11800=InnerEmulationTest:test050()
11801=InnerEmulationTest:test073()
11802=InnerEmulationTest:test096()
11803=InnerEmulationTest:suite()
11804=InnerEmulationTest:test107()
11805=InnerEmulationTest:test160()
11806=InnerEmulationTest:test119()
11807=InnerEmulationTest:test062()
11808=InnerEmulationTest:_test153()
11809=InnerEmulationTest:test085()
11810=InnerEmulationTest:getCompilerOptions()
11811=InnerEmulationTest:test172()
11812=InnerEmulationTest:test108()
11813=InnerEmulationTest:test051()
11814=InnerEmulationTest:test097()
11815=InnerEmulationTest:test074()
11816=InnerEmulationTest:test161()
11817=InnerEmulationTest:test040()
11818=InnerEmulationTest:test063()
11819=InnerEmulationTest:test086()
11820=InnerEmulationTest:test139()
11821=InnerEmulationTest:test116()
11822=InnerEmulationTest:test018()
11823=InnerEmulationTest:test071()
11824=InnerEmulationTest:test094()
11825=InnerEmulationTest:test128()
11826=InnerEmulationTest:test007()
11827=InnerEmulationTest:test083()
11828=InnerEmulationTest:test060()
11829=InnerEmulationTest:test117()
11830=InnerEmulationTest:test170()
11831=InnerEmulationTest:testbug484546()
11832=InnerEmulationTest:test019()
11833=InnerEmulationTest:test072()
11834=InnerEmulationTest:test095()
11835=InnerEmulationTest:test062a()
11836=InnerEmulationTest:test129()
11837=InnerEmulationTest:test008()
11838=InnerEmulationTest:test061()
11839=InnerEmulationTest:test084()
11840=InnerEmulationTest:test137()
11841=InnerEmulationTest:test114()
11842=InnerEmulationTest:test016()
11843=InnerEmulationTest:test039()
11844=InnerEmulationTest:_test122()
11845=InnerEmulationTest:test092()
11846=InnerEmulationTest:test149()
11847=InnerEmulationTest:test126()
11848=InnerEmulationTest:test005()
11849=InnerEmulationTest:test028()
11850=InnerEmulationTest:test081()
11851=InnerEmulationTest:test115()
11852=InnerEmulationTest:test138()
11853=InnerEmulationTest:test017()
11854=InnerEmulationTest:test070()
11855=InnerEmulationTest:test093()
11856=InnerEmulationTest:test104()
11857=InnerEmulationTest:test127()
11858=InnerEmulationTest:test006()
11859=InnerEmulationTest:test029()
11860=InnerEmulationTest:test090()
11861=InnerEmulationTest:test158()
11862=InnerEmulationTest:test135()
11863=InnerEmulationTest:test112()
11864=InnerEmulationTest:test014()
11865=InnerEmulationTest:test037()
11866=InnerEmulationTest:test147()
11867=InnerEmulationTest:test124()
11868=InnerEmulationTest:test101()
11869=InnerEmulationTest:test003()
11870=InnerEmulationTest:test026()
11871=InnerEmulationTest:test049()
11872=InnerEmulationTest:test091()
11873=InnerEmulationTest:test159()
11874=InnerEmulationTest:test113()
11875=InnerEmulationTest:test136()
11876=InnerEmulationTest:test015()
11877=InnerEmulationTest:test038()
11878=InnerEmulationTest:test080()
11879=InnerEmulationTest:test148()
11880=InnerEmulationTest:test102()
11881=InnerEmulationTest:test125()
11882=InnerEmulationTest:InnerEmulationTest(String)
11883=InnerEmulationTest:test004()
11884=InnerEmulationTest:test027()
11885=InnerEmulationTest:test110()
11886=InnerEmulationTest:test156()
11887=InnerEmulationTest:test133()
11888=InnerEmulationTest:test012()
11889=InnerEmulationTest:test035()
11890=InnerEmulationTest:test058()
11891=InnerEmulationTest:test145()
11892=InnerEmulationTest:test168()
11893=InnerEmulationTest:test001()
11894=InnerEmulationTest:test024()
11895=InnerEmulationTest:test047()
11896=InnerEmulationTest:test157()
11897=InnerEmulationTest:test111()
11898=InnerEmulationTest:test134()
11899=InnerEmulationTest:test013()
11900=InnerEmulationTest:test059()
11901=InnerEmulationTest:test036()
11902=InnerEmulationTest:test146()
11903=InnerEmulationTest:test169()
11904=InnerEmulationTest:test123()
11905=InnerEmulationTest:test002()
11906=InnerEmulationTest:test048()
11907=InnerEmulationTest:test025()
11908=InnerEmulationTest:test131()
11909=InnerEmulationTest:test154()
11910=InnerEmulationTest:test056()
11911=InnerEmulationTest:test079()
11912=InnerEmulationTest:test010()
11913=InnerEmulationTest:test033()
11914=InnerEmulationTest:test120()
11915=InnerEmulationTest:test166()
11916=InnerEmulationTest:test143()
11917=InnerEmulationTest:test045()
11918=InnerEmulationTest:test068()
11919=InnerEmulationTest:test022()
11920=InnerEmulationTest:test132()
11921=InnerEmulationTest:test155()
11922=InnerEmulationTest:test034()
11923=InnerEmulationTest:test057()
11924=InnerEmulationTest:test011()
11925=InnerEmulationTest:test121()
11926=InnerEmulationTest:test144()
11927=InnerEmulationTest:test167()
11928=InnerEmulationTest:test023()
11929=InnerEmulationTest:test069()
11930=InnerEmulationTest:test046()
11931=InnerEmulationTest:test152()
11932=InnerEmulationTest:test175()
11933=InnerEmulationTest:test031()
11934=InnerEmulationTest:test077()
11935=InnerEmulationTest:test141()
11936=InnerEmulationTest:test164()
11937=InnerEmulationTest:test089()
11938=InnerEmulationTest:test020()
11939=InnerEmulationTest:test043()
11940=InnerEmulationTest:test066()
11941=InnerEmulationTest:test130()
11942=InnerEmulationTest:testClass()
11943=InnerEmulationTest:test176()
11944=InnerEmulationTest:test078()
11945=InnerEmulationTest:test055()
11946=InnerEmulationTest:test032()
11947=InnerEmulationTest:test142()
11948=InnerEmulationTest:test165()
11949=InnerEmulationTest:test067()
11950=InnerEmulationTest:test044()
11951=InnerEmulationTest:test021()
11952=InnerEmulationTest:test150()
11953=InnerEmulationTest:test173()
11954=InnerEmulationTest:test109()
11955=InnerEmulationTest:test098()
11956=InnerEmulationTest:test052()
11957=InnerEmulationTest:test075()
11958=InnerEmulationTest:test162()
11959=InnerEmulationTest:test087()
11960=InnerEmulationTest:test041()
11961=InnerEmulationTest:test064()
11962=InnerEmulationTest:test151()
11963=InnerEmulationTest:test174()
11964=InnerEmulationTest:test099()
11965=InnerEmulationTest:test030()
11966=InnerEmulationTest:test076()
11967=InnerEmulationTest:test053()
11968=InnerEmulationTest:test140()
11969=InnerEmulationTest:test163()
11970=InnerEmulationTest:test088()
11971=InnerEmulationTest:test065()
11972=InnerEmulationTest:test042()
11973=A:foo()
11974=A:f()
11975=E:foo1(int)
11976=E:foo1()
11977=A:test()
11978=CreateElementInCUOperation:getSchedulingRule()
11979=CreateElementInCUOperation:checkCanceled()
11980=CreateElementInCUOperation:setRelativePosition(IJavaElement, int)
11981=CreateElementInCUOperation:createAfter(IJavaElement)
11982=CreateElementInCUOperation:CreateElementInCUOperation(IJavaElement)
11983=CreateElementInCUOperation:insertASTNode(ASTRewrite, ASTNode, ASTNode)
11984=CreateElementInCUOperation:executeOperation()
11985=CreateElementInCUOperation:getMainTaskName()
11986=CreateElementInCUOperation:getChildPropertyDescriptor(ASTNode)
11987=CreateElementInCUOperation:generateResultHandles()
11988=CreateElementInCUOperation:initializeDefaultPosition()
11989=CreateElementInCUOperation:setAlteredName(String)
11990=CreateElementInCUOperation:createBefore(IJavaElement)
11991=CreateElementInCUOperation:generateNewCompilationUnitAST(ICompilationUnit)
11992=CreateElementInCUOperation:generateResultHandle()
11993=CreateElementInCUOperation:verify()
11994=CreateElementInCUOperation:getMainAmountOfWork()
11995=CreateElementInCUOperation:parse(ICompilationUnit)
11996=CreateElementInCUOperation:getCompilationUnit()
11997=CreateElementInCUOperation:generateElementAST(ASTRewrite, ICompilationUnit)
11998=EnvironmentFactory:getEnvironment(ICompilationUnit, IJavaProject)
11999=IntLiteralMinValue:IntLiteralMinValue()
12000=IntLiteralMinValue:computeConstant()
12001=X:bar()
12002=X:foo()
12003=TestTreeModel:isTestSuite(Object)
12004=TestTreeModel:wasRun(Test)
12005=TestTreeModel:valueForPathChanged(TreePath, Object)
12006=TestTreeModel:getChildCount(Object)
12007=TestTreeModel:addTreeModelListener(TreeModelListener)
12008=TestTreeModel:isError(Test)
12009=TestTreeModel:addRunTest(Test)
12010=TestTreeModel:fireNodeChanged(TreePath, int)
12011=TestTreeModel:removeTreeModelListener(TreeModelListener)
12012=TestTreeModel:getChild(Object, int)
12013=TestTreeModel:getRoot()
12014=TestTreeModel:isLeaf(Object)
12015=TestTreeModel:isFailure(Test)
12016=TestTreeModel:addFailure(Test)
12017=TestTreeModel:TestTreeModel(Test)
12018=TestTreeModel:addError(Test)
12019=TestTreeModel:resetResults()
12020=TestTreeModel:findTest(Test, Test, Vector)
12021=TestTreeModel:getIndexOfChild(Object, Object)
12022=BasicSearchEngine:getMatchRuleString(int)
12023=BasicSearchEngine:getSearchForString(int)
12024=BasicSearchEngine:createHierarchyScope(IType, WorkingCopyOwner)
12025=BasicSearchEngine:createJavaSearchScope(IJavaElement[], int)
12026=BasicSearchEngine:search(SearchPattern, SearchParticipant[], IJavaSearchScope, SearchRequestor, IProgressMonitor)
12027=BasicSearchEngine:BasicSearchEngine(WorkingCopyOwner)
12028=BasicSearchEngine:convertTypeKind(int)
12029=BasicSearchEngine:match(char, int)
12030=BasicSearchEngine:match(char[], int, char[], int, char[], char[], char[], char[])
12031=BasicSearchEngine:getParser()
12032=BasicSearchEngine:searchAllTypeNames(char[], int, char[], int, int, IJavaSearchScope, IRestrictedAccessTypeRequestor, int, IProgressMonitor)
12033=BasicSearchEngine:getWorkingCopies()
12034=BasicSearchEngine:BasicSearchEngine(ICompilationUnit[])
12035=BasicSearchEngine:createWorkspaceScope()
12036=BasicSearchEngine:searchAllTypeNames(char[][], char[][], int, int, IJavaSearchScope, IRestrictedAccessTypeRequestor, int, IProgressMonitor)
12037=BasicSearchEngine:findMatches(SearchPattern, SearchParticipant[], IJavaSearchScope, SearchRequestor, IProgressMonitor)
12038=BasicSearchEngine:searchAllConstructorDeclarations(char[], char[], int, IJavaSearchScope, IRestrictedAccessConstructorRequestor, int, IProgressMonitor)
12039=BasicSearchEngine:searchAllMethodNames(char[], int, char[], int, char[], int, char[], int, IJavaSearchScope, IRestrictedAccessMethodRequestor, int, IProgressMonitor)
12040=BasicSearchEngine:searchDeclarationsOfAccessedFields(IJavaElement, SearchRequestor, IProgressMonitor)
12041=BasicSearchEngine:searchDeclarationsOfReferencedTypes(IJavaElement, SearchRequestor, IProgressMonitor)
12042=BasicSearchEngine:searchDeclarationsOfSentMessages(IJavaElement, SearchRequestor, IProgressMonitor)
12043=BasicSearchEngine:searchAllSecondaryTypeNames(IPackageFragmentRoot[], IRestrictedAccessTypeRequestor, boolean, IProgressMonitor)
12044=BasicSearchEngine:getDefaultSearchParticipant()
12045=BasicSearchEngine:BasicSearchEngine()
12046=BasicSearchEngine:createJavaSearchScope(IJavaElement[], boolean)
12047=BasicSearchEngine:reportMatchingMethods(char[], int, IRestrictedAccessMethodRequestor, String, char[], IType, char[], char[])
12048=BasicSearchEngine:searchAllMethodNames(char[], int, char[], int, IJavaSearchScope, IRestrictedAccessMethodRequestor, int, IProgressMonitor)
12049=BasicSearchEngine:match(char[], int, char[])
12050=BasicSearchEngine:searchDeclarations(IJavaElement, SearchRequestor, SearchPattern, IProgressMonitor)
12051=BasicSearchEngine:createHierarchyScope(IType)
12052=BasicSearchEngine:match(char[], int, char[], int, char[], int, char[], int, char[], char[], char[], char[])
12053=BasicSearchEngine:reportMatchingMethod(String, char[], char[], TypeDeclaration, MethodDeclaration, IType, IRestrictedAccessMethodRequestor)
12054=BasicSearchEngine:match(char, char[], int, char[], int, int, char[], char[])
12055=BasicSearchEngine:getWorkingCopies(IJavaElement)
12056=BasicSearchEngine:createJavaSearchScope(IJavaElement[])
12057=BasicSearchEngine:createStrictHierarchyScope(IJavaProject, IType, boolean, boolean, WorkingCopyOwner)
12058=BasicSearchEngine:createTypeNameMatch(IType, int)
12059=BasicSearchEngine:createMethodNameMatch(IMethod, int)
12060=A:foo()
12061=A:A(String)
12062=SmtpServerParser:parse(ByteBuffer)
12063=SmtpServerParser:SmtpServerParser()
12064=CreateFieldOperation:CreateFieldOperation(IType, String, boolean)
12065=CreateFieldOperation:verifyNameCollision()
12066=CreateFieldOperation:generateElementAST(ASTRewrite, ICompilationUnit)
12067=CreateFieldOperation:generateResultHandle()
12068=CreateFieldOperation:getMainTaskName()
12069=CreateFieldOperation:rename(ASTNode, SimpleName)
12070=CreateFieldOperation:initializeDefaultPosition()
12071=CreateFieldOperation:getFragment(ASTNode)
12072=CreateFieldOperation:getASTNodeName()
12073=IBinaryMethod:getDefaultValue()
12074=IBinaryMethod:getSelector()
12075=IBinaryMethod:getExceptionTypeNames()
12076=IBinaryMethod:getTagBits()
12077=IBinaryMethod:getGenericSignature()
12078=IBinaryMethod:getAnnotatedParametersCount()
12079=IBinaryMethod:getAnnotations()
12080=IBinaryMethod:getMethodDescriptor()
12081=IBinaryMethod:getTypeAnnotations()
12082=IBinaryMethod:getParameterAnnotations(int, char[])
12083=IBinaryMethod:isClinit()
12084=PackageInfoTest:test258145()
12085=PackageInfoTest:setupProjectForNullAnnotations(IPath)
12086=PackageInfoTest:testBug372012()
12087=PackageInfoTest:testBug374063()
12088=PackageInfoTest:test003()
12089=PackageInfoTest:testBug382960()
12090=PackageInfoTest:PackageInfoTest(String)
12091=PackageInfoTest:test004()
12092=PackageInfoTest:testBug367836()
12093=PackageInfoTest:test323785a()
12094=PackageInfoTest:test001()
12095=PackageInfoTest:test002()
12096=PackageInfoTest:testBug372012a()
12097=PackageInfoTest:assertSourceEquals(String, String, String)
12098=PackageInfoTest:test323785()
12099=PackageInfoTest:suite()
12100=PackageInfoTest:testClass()
12101=PackageInfoTest:testBug372012c()
12102=PackageInfoTest:testBug372012b()
12103=MatchingNodeSet:toString()
12104=MatchingNodeSet:hasPossibleNodes(int, int)
12105=MatchingNodeSet:addTrustedMatch(ASTNode, Integer)
12106=MatchingNodeSet:removeTrustedMatch(ASTNode)
12107=MatchingNodeSet:MatchingNodeSet(boolean)
12108=MatchingNodeSet:removePossibleMatch(ASTNode)
12109=MatchingNodeSet:addTrustedMatch(ASTNode, boolean)
12110=MatchingNodeSet:addPossibleMatch(ASTNode)
12111=MatchingNodeSet:matchingNodes(int, int)
12112=MatchingNodeSet:addMatch(ASTNode, int)
12113=A:foo(Object)
12114=B:i()
12115=C:i()
12116=B:y()
12117=A:i()
12118=Test:foo(int)
12119=HierarchyType:isBinaryType()
12120=HierarchyType:HierarchyType(IType, char[], int, char[], char[][], boolean)
12121=HierarchyType:getFileName()
12122=HierarchyType:getModifiers()
12123=HierarchyType:isAnonymous()
12124=CharArrayBuffer:CharArrayBuffer(int)
12125=CharArrayBuffer:getContents()
12126=CharArrayBuffer:append(char)
12127=CharArrayBuffer:CharArrayBuffer()
12128=CharArrayBuffer:CharArrayBuffer(char[], int)
12129=CharArrayBuffer:append(char[], int, int)
12130=CharArrayBuffer:CharArrayBuffer(char[])
12131=CharArrayBuffer:append(char[])
12132=CharArrayBuffer:append(String)
12133=CharArrayBuffer:toString()
12134=Test:m()
12135=AboutDialog:AboutDialog(Frame)
12136=ExecutableUtil:getThrownTypes(EclipseDeclarationImpl, BaseProcessorEnv)
12137=ExecutableUtil:getParameters(EclipseDeclarationImpl, BaseProcessorEnv)
12138=ExecutableUtil:getFormalTypeParameters(EclipseDeclarationImpl, BaseProcessorEnv)
12139=EqualExpression:resolveType(BlockScope)
12140=EqualExpression:generateOptimizedBoolean(BlockScope, CodeStream, Label, Label, boolean)
12141=EqualExpression:isCompactableOperation()
12142=EqualExpression:generateOptimizedNonBooleanEqual(BlockScope, CodeStream, Label, Label, boolean)
12143=EqualExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
12144=EqualExpression:computeConstant(TypeBinding, TypeBinding)
12145=EqualExpression:generateCode(BlockScope, CodeStream, boolean)
12146=EqualExpression:traverse(ASTVisitor, BlockScope)
12147=EqualExpression:EqualExpression(Expression, Expression, int)
12148=EqualExpression:generateOptimizedBooleanEqual(BlockScope, CodeStream, Label, Label, boolean)
12149=StarProcessorTests:StarProcessorTests(String)
12150=StarProcessorTests:testGeneratedFileInBuilder1()
12151=StarProcessorTests:testStopGeneratingFileInBuilder_FullBuild()
12152=StarProcessorTests:getSourcePath(String)
12153=StarProcessorTests:_testGeneratedFileInBuilder1(String)
12154=StarProcessorTests:suite()
12155=StarProcessorTests:testDeletedGeneratedSourceFolder()
12156=StarProcessorTests:testAPTRounding()
12157=StarProcessorTests:testTwoAnnotations()
12158=StarProcessorTests:internalTestStopGeneratingFileInBuilder(boolean)
12159=StarProcessorTests:testGeneratedFileInBuilder()
12160=StarProcessorTests:testGeneratedFileInBuilder_ProjectRootAsSourceDir()
12161=StarProcessorTests:testConfigMarker()
12162=StarProcessorTests:testStopGeneratingFileInBuilder_IncrementalBuild()
12163=StarProcessorTests:testDeletedParentFile()
12164=StarProcessorTests:getProjectName_ProjectRootAsSrcDir()
12165=StarProcessorTests:testExtraDependencies()
12166=StarProcessorTests:setUp()
12167=StarProcessorTests:_testGeneratedFileInBuilder0(String)
12168=StarProcessorTests:testCaching()
12169=StarProcessorTests:testGeneratingIllegalTypeName()
12170=StarProcessorTests:testNestedGeneratedFileInBuilder()
12171=FirstGenAnnotationProcessor:FirstGenAnnotationProcessor(AnnotationProcessorEnvironment)
12172=FirstGenAnnotationProcessor:process()
12173=SelectionOnReferenceExpression:SelectionOnReferenceExpression(ReferenceExpression)
12174=SelectionOnReferenceExpression:resolveType(BlockScope)
12175=UnionTypeReference:augmentTypeWithAdditionalDimensions(int, Annotation[][], boolean)
12176=UnionTypeReference:traverse(ASTVisitor, ClassScope)
12177=UnionTypeReference:getTypeName()
12178=UnionTypeReference:printExpression(int, StringBuffer)
12179=UnionTypeReference:UnionTypeReference(TypeReference[])
12180=UnionTypeReference:resolveType(BlockScope, boolean, int)
12181=UnionTypeReference:getLastToken()
12182=UnionTypeReference:isUnionType()
12183=UnionTypeReference:getTypeBinding(Scope)
12184=UnionTypeReference:traverse(ASTVisitor, BlockScope)
12185=JarEntryResource:hashCode()
12186=JarEntryResource:getFullPath()
12187=JarEntryResource:getEntryName()
12188=JarEntryResource:isReadOnly()
12189=JarEntryResource:equals(Object)
12190=JarEntryResource:clone(Object)
12191=JarEntryResource:getZipFile()
12192=JarEntryResource:getPackageFragmentRoot()
12193=JarEntryResource:JarEntryResource(String)
12194=JarEntryResource:getParent()
12195=JarEntryResource:getName()
12196=JarEntryResource:setParent(Object)
12197=X:X()
12198=X:bar(int, String)
12199=Activator:getPackageAdmin()
12200=Activator:start(BundleContext)
12201=Activator:stop(BundleContext)
12202=IMethodInfo:getAttributes()
12203=IMethodInfo:getCodeAttribute()
12204=IMethodInfo:getExceptionAttribute()
12205=IMethodInfo:isDeprecated()
12206=IMethodInfo:getDescriptor()
12207=IMethodInfo:getNameIndex()
12208=IMethodInfo:getAttributeCount()
12209=IMethodInfo:getAccessFlags()
12210=IMethodInfo:isConstructor()
12211=IMethodInfo:getName()
12212=IMethodInfo:isClinit()
12213=IMethodInfo:isSynthetic()
12214=IMethodInfo:getDescriptorIndex()
12215=BatchImageBuilder:rebuildTypesAffectedBySecondaryTypes()
12216=BatchImageBuilder:build()
12217=BatchImageBuilder:copyExtraResourcesBack(ClasspathMultiDirectory, boolean)
12218=BatchImageBuilder:BatchImageBuilder(JavaBuilder, boolean)
12219=BatchImageBuilder:findOriginalResource(IPath)
12220=BatchImageBuilder:acceptSecondaryType(ClassFile)
12221=BatchImageBuilder:cleanOutputFolders(boolean)
12222=BatchImageBuilder:processAnnotationResults(CompilationParticipantResult[])
12223=BatchImageBuilder:storeProblemsFor(SourceFile, CategorizedProblem[])
12224=BatchImageBuilder:compile(SourceFile[], SourceFile[], boolean)
12225=BatchImageBuilder:printStats()
12226=BatchImageBuilder:cleanUp()
12227=BatchImageBuilder:toString()
12228=IdeJavaSourceOutputStream:IdeJavaSourceOutputStream(IdeProcessingEnvImpl, CharSequence, Collection<IFile>)
12229=IdeJavaSourceOutputStream:close()
12230=CompilerInvocationTests:test010_missing_elaboration_templates()
12231=CompilerInvocationTests:_test004_task_tags_options()
12232=CompilerInvocationTests:testClass()
12233=CompilerInvocationTests:_test008_task_tags_options()
12234=CompilerInvocationTests:_test005_task_tags_options()
12235=CompilerInvocationTests:TasksReader:acceptResult(CompilationResult)
12236=CompilerInvocationTests:CompilerInvocationTests(String)
12237=CompilerInvocationTests:test001_irritant_warning_token()
12238=CompilerInvocationTests:test002_problem_categories()
12239=CompilerInvocationTests:taskTagsAsStrings(CategorizedProblem)
12240=CompilerInvocationTests:runTaskTagsOptionsTest(String[], Map, String)
12241=CompilerInvocationTests:taskTagsAsCutAndPaste(CategorizedProblem)
12242=CompilerInvocationTests:test007_task_tags_options()
12243=CompilerInvocationTests:test009_missing_message_templates()
12244=CompilerInvocationTests:_test006_task_tags_options()
12245=CompilerInvocationTests:suite()
12246=CompilerInvocationTests:test003_task_tags_options()
12247=CompilerInvocationTests:test012_compiler_problems_tuning()
12248=CompilerInvocationTests:categoryName(int)
12249=CompilerInvocationTests:test011_problem_categories()
12250=Test:main(String[])
12251=FieldPattern:getIndexKey()
12252=FieldPattern:print(StringBuffer)
12253=FieldPattern:getIndexCategories()
12254=FieldPattern:getBlankPattern()
12255=FieldPattern:FieldPattern(char[], char[], char[], char[], char[], String, int, int)
12256=FieldPattern:decodeIndexKey(char[])
12257=FieldPattern:createIndexKey(char[])
12258=FieldPattern:mustResolve()
12259=FieldPattern:FieldPattern(char[], char[], char[], char[], char[], int, int)
12260=FieldPattern:matchesDecodedKey(SearchPattern)
12261=LocalVariableBinding:toString()
12262=LocalVariableBinding:getAnnotations()
12263=LocalVariableBinding:recordInitializationEndPC(int)
12264=LocalVariableBinding:isSecret()
12265=LocalVariableBinding:isParameter()
12266=LocalVariableBinding:getEnclosingMethod()
12267=LocalVariableBinding:LocalVariableBinding(LocalDeclaration, TypeBinding, int, boolean)
12268=LocalVariableBinding:isCatchParameter()
12269=LocalVariableBinding:getScopeKey(BlockScope, StringBuffer)
12270=LocalVariableBinding:kind()
12271=LocalVariableBinding:setAnnotations(AnnotationBinding[], Scope)
12272=LocalVariableBinding:resetInitializations()
12273=LocalVariableBinding:computeUniqueKey(boolean)
12274=LocalVariableBinding:LocalVariableBinding(LocalDeclaration, TypeBinding, int, MethodScope)
12275=LocalVariableBinding:recordInitializationStartPC(int)
12276=LocalVariableBinding:LocalVariableBinding(char[], TypeBinding, int, boolean)
12277=ResolveLocalClass7:foo1()
12278=ResolveLocalClass7:foo2()
12279=X:bar()
12280=X:foo()
12281=X:X(Object)
12282=X:X()
12283=X:bar3(int)
12284=X:bar2()
12285=A:main(String[])
12286=TestExternalLibContainerInitializer:initialize(IPath, IJavaProject)
12287=ForStatementTest:test013()
12288=ForStatementTest:test002()
12289=ForStatementTest:test014()
12290=ForStatementTest:test003()
12291=ForStatementTest:test015()
12292=ForStatementTest:test004()
12293=ForStatementTest:testClass()
12294=ForStatementTest:test005()
12295=ForStatementTest:test010()
12296=ForStatementTest:test011()
12297=ForStatementTest:test012()
12298=ForStatementTest:test001()
12299=ForStatementTest:getCompilerOptions()
12300=ForStatementTest:ForStatementTest(String)
12301=ForStatementTest:test006()
12302=ForStatementTest:test007()
12303=ForStatementTest:test008()
12304=ForStatementTest:test009()
12305=ForStatementTest:suite()
12306=NegativeTypeAnnotationTest:test013()
12307=NegativeTypeAnnotationTest:test059()
12308=NegativeTypeAnnotationTest:testBug414038()
12309=NegativeTypeAnnotationTest:test036()
12310=NegativeTypeAnnotationTest:test383596()
12311=NegativeTypeAnnotationTest:test383596a()
12312=NegativeTypeAnnotationTest:test002()
12313=NegativeTypeAnnotationTest:test048()
12314=NegativeTypeAnnotationTest:test425599()
12315=NegativeTypeAnnotationTest:test0383913c()
12316=NegativeTypeAnnotationTest:test0385137()
12317=NegativeTypeAnnotationTest:test392119c()
12318=NegativeTypeAnnotationTest:test025()
12319=NegativeTypeAnnotationTest:test415308c()
12320=NegativeTypeAnnotationTest:test0388085()
12321=NegativeTypeAnnotationTest:test014()
12322=NegativeTypeAnnotationTest:test037()
12323=NegativeTypeAnnotationTest:test383596b()
12324=NegativeTypeAnnotationTest:test0383913d()
12325=NegativeTypeAnnotationTest:test049()
12326=NegativeTypeAnnotationTest:test392119b()
12327=NegativeTypeAnnotationTest:test003()
12328=NegativeTypeAnnotationTest:test026()
12329=NegativeTypeAnnotationTest:test415308f2()
12330=NegativeTypeAnnotationTest:test415308d()
12331=NegativeTypeAnnotationTest:NegativeTypeAnnotationTest(String)
12332=NegativeTypeAnnotationTest:test038()
12333=NegativeTypeAnnotationTest:test015()
12334=NegativeTypeAnnotationTest:test027()
12335=NegativeTypeAnnotationTest:test004()
12336=NegativeTypeAnnotationTest:test415308e()
12337=NegativeTypeAnnotationTest:test016()
12338=NegativeTypeAnnotationTest:test039()
12339=NegativeTypeAnnotationTest:test420284()
12340=NegativeTypeAnnotationTest:testBug391894()
12341=NegativeTypeAnnotationTest:test005()
12342=NegativeTypeAnnotationTest:test028()
12343=NegativeTypeAnnotationTest:test415308f()
12344=NegativeTypeAnnotationTest:test0385111a()
12345=NegativeTypeAnnotationTest:testBug391464()
12346=NegativeTypeAnnotationTest:test017()
12347=NegativeTypeAnnotationTest:test421791()
12348=NegativeTypeAnnotationTest:test0390882a()
12349=NegativeTypeAnnotationTest:test0390882()
12350=NegativeTypeAnnotationTest:test029()
12351=NegativeTypeAnnotationTest:test006()
12352=NegativeTypeAnnotationTest:suite()
12353=NegativeTypeAnnotationTest:test415308d2()
12354=NegativeTypeAnnotationTest:testBug426977()
12355=NegativeTypeAnnotationTest:test415308g()
12356=NegativeTypeAnnotationTest:test018()
12357=NegativeTypeAnnotationTest:test419833()
12358=NegativeTypeAnnotationTest:test0388085a()
12359=NegativeTypeAnnotationTest:test0385111()
12360=NegativeTypeAnnotationTest:test0390882b()
12361=NegativeTypeAnnotationTest:test007()
12362=NegativeTypeAnnotationTest:testClass()
12363=NegativeTypeAnnotationTest:test060()
12364=NegativeTypeAnnotationTest:test417076b()
12365=NegativeTypeAnnotationTest:testGenericConstructor()
12366=NegativeTypeAnnotationTest:test019()
12367=NegativeTypeAnnotationTest:testBug403132()
12368=NegativeTypeAnnotationTest:test061()
12369=NegativeTypeAnnotationTest:test050()
12370=NegativeTypeAnnotationTest:test0383913()
12371=NegativeTypeAnnotationTest:test062()
12372=NegativeTypeAnnotationTest:test415308b2()
12373=NegativeTypeAnnotationTest:testBug391315a()
12374=NegativeTypeAnnotationTest:test051()
12375=NegativeTypeAnnotationTest:test040()
12376=NegativeTypeAnnotationTest:test063()
12377=NegativeTypeAnnotationTest:test406587()
12378=NegativeTypeAnnotationTest:test415308a2()
12379=NegativeTypeAnnotationTest:test052()
12380=NegativeTypeAnnotationTest:testBug403410()
12381=NegativeTypeAnnotationTest:test418041a()
12382=NegativeTypeAnnotationTest:test0385137a()
12383=NegativeTypeAnnotationTest:test041()
12384=NegativeTypeAnnotationTest:test064()
12385=NegativeTypeAnnotationTest:test392119()
12386=NegativeTypeAnnotationTest:test030()
12387=NegativeTypeAnnotationTest:test053()
12388=NegativeTypeAnnotationTest:testBug426977a()
12389=NegativeTypeAnnotationTest:test042()
12390=NegativeTypeAnnotationTest:test065()
12391=NegativeTypeAnnotationTest:test031()
12392=NegativeTypeAnnotationTest:test054()
12393=NegativeTypeAnnotationTest:testWildcardCapture()
12394=NegativeTypeAnnotationTest:test043()
12395=NegativeTypeAnnotationTest:test020()
12396=NegativeTypeAnnotationTest:test417076()
12397=NegativeTypeAnnotationTest:test420038()
12398=NegativeTypeAnnotationTest:test066()
12399=NegativeTypeAnnotationTest:test403581()
12400=NegativeTypeAnnotationTest:test419827b()
12401=NegativeTypeAnnotationTest:test032()
12402=NegativeTypeAnnotationTest:test427955()
12403=NegativeTypeAnnotationTest:test055()
12404=NegativeTypeAnnotationTest:test039b()
12405=NegativeTypeAnnotationTest:test021()
12406=NegativeTypeAnnotationTest:test044()
12407=NegativeTypeAnnotationTest:test391521()
12408=NegativeTypeAnnotationTest:test067()
12409=NegativeTypeAnnotationTest:test419827a()
12410=NegativeTypeAnnotationTest:testBug391464_2()
12411=NegativeTypeAnnotationTest:test010()
12412=NegativeTypeAnnotationTest:test033()
12413=NegativeTypeAnnotationTest:test056()
12414=NegativeTypeAnnotationTest:test045()
12415=NegativeTypeAnnotationTest:test022()
12416=NegativeTypeAnnotationTest:test418041()
12417=NegativeTypeAnnotationTest:test068()
12418=NegativeTypeAnnotationTest:test392671()
12419=NegativeTypeAnnotationTest:testBug391196()
12420=NegativeTypeAnnotationTest:test034()
12421=NegativeTypeAnnotationTest:test011()
12422=NegativeTypeAnnotationTest:test057()
12423=NegativeTypeAnnotationTest:testBug391108()
12424=NegativeTypeAnnotationTest:testBug391315()
12425=NegativeTypeAnnotationTest:test046()
12426=NegativeTypeAnnotationTest:test069()
12427=NegativeTypeAnnotationTest:test023()
12428=NegativeTypeAnnotationTest:testBug394355()
12429=NegativeTypeAnnotationTest:test0383908()
12430=NegativeTypeAnnotationTest:test415308a()
12431=NegativeTypeAnnotationTest:test012()
12432=NegativeTypeAnnotationTest:test035()
12433=NegativeTypeAnnotationTest:test058()
12434=NegativeTypeAnnotationTest:test402618()
12435=NegativeTypeAnnotationTest:testBug391500()
12436=NegativeTypeAnnotationTest:test001()
12437=NegativeTypeAnnotationTest:test024()
12438=NegativeTypeAnnotationTest:test0383913b()
12439=NegativeTypeAnnotationTest:testBug399453()
12440=NegativeTypeAnnotationTest:test414038()
12441=NegativeTypeAnnotationTest:test047()
12442=NegativeTypeAnnotationTest:test415308b()
12443=ClassFileReader:getFieldInfos()
12444=ClassFileReader:getConstantClassNameAt(byte[], int[], int)
12445=ClassFileReader:getSuperclassName()
12446=ClassFileReader:getMajorVersion()
12447=ClassFileReader:getConstantPool()
12448=ClassFileReader:getMagic()
12449=ClassFileReader:isInterface()
12450=ClassFileReader:getClassIndex()
12451=ClassFileReader:getAttributeCount()
12452=ClassFileReader:getSourceFileAttribute()
12453=ClassFileReader:getInterfaceNames()
12454=ClassFileReader:getAccessFlags()
12455=ClassFileReader:getAttributes()
12456=ClassFileReader:getFieldsCount()
12457=ClassFileReader:getInnerClassesAttribute()
12458=ClassFileReader:getMethodsCount()
12459=ClassFileReader:ClassFileReader(byte[], int)
12460=ClassFileReader:getMinorVersion()
12461=ClassFileReader:getClassName()
12462=ClassFileReader:getSuperclassIndex()
12463=ClassFileReader:getInterfaceIndexes()
12464=ClassFileReader:getMethodInfos()
12465=ClassFileReader:isClass()
12466=ILocalVariableTypeTableEntry:getSignature()
12467=ILocalVariableTypeTableEntry:getLength()
12468=ILocalVariableTypeTableEntry:getNameIndex()
12469=ILocalVariableTypeTableEntry:getStartPC()
12470=ILocalVariableTypeTableEntry:getIndex()
12471=ILocalVariableTypeTableEntry:getName()
12472=ILocalVariableTypeTableEntry:getSignatureIndex()
12473=ExternalAnnotationTracker:traverseForDirectories(DirectoryNode, IResourceDelta)
12474=ExternalAnnotationTracker:DirectoryNode:unregisterDirectory(DirectoryNode)
12475=ExternalAnnotationTracker:registerClassFile(IPath, IPath, ClassFile)
12476=ExternalAnnotationTracker:resourceChanged(IResourceChangeEvent)
12477=ExternalAnnotationTracker:getAnnotationBase(DirectoryNode, IPath, int, int)
12478=ExternalAnnotationTracker:DirectoryNode:DirectoryNode(DirectoryNode, IPath)
12479=ExternalAnnotationTracker:ExternalAnnotationTracker()
12480=ExternalAnnotationTracker:DirectoryNode:unregisterClassFile(IPath)
12481=ExternalAnnotationTracker:unregisterClassFile(IPath, IPath)
12482=ExternalAnnotationTracker:start(IWorkspace)
12483=ExternalAnnotationTracker:DirectoryNode:registerClassFile(IPath, ClassFile)
12484=ExternalAnnotationTracker:DirectoryNode:getChildren()
12485=ExternalAnnotationTracker:DirectoryNode:numClassFiles()
12486=ExternalAnnotationTracker:traverseForClassFiles(Map<IPath, ClassFile>, IResourceDelta, int)
12487=ExternalAnnotationTracker:shutdown(IWorkspace)
12488=ExternalAnnotationTracker:DirectoryNode:isEmpty()
12489=ExternalAnnotationTracker:DirectoryNode:toString()
12490=JavaSearchGenericTypeEquivalentTests:suite()
12491=JavaSearchGenericTypeEquivalentTests:JavaSearchGenericTypeEquivalentTests(String)
12492=JavaSearchGenericTypeEquivalentTests:removeLastTypeArgument(char[])
12493=JavaSearchGenericTypeEquivalentTests:addResultLine(StringBuffer, char[])
12494=DefaultCommentMapper:getComment(int)
12495=DefaultCommentMapper:CommentMapperVisitor:visit(Modifier)
12496=DefaultCommentMapper:initialize(CompilationUnit, Scanner)
12497=DefaultCommentMapper:hasSameTable(Comment[])
12498=DefaultCommentMapper:CommentMapperVisitor:endVisitNode(ASTNode)
12499=DefaultCommentMapper:storeLeadingComments(ASTNode, int, int[])
12500=DefaultCommentMapper:getLineNumber(int, int[])
12501=DefaultCommentMapper:lastTrailingCommentIndex(ASTNode)
12502=DefaultCommentMapper:getCommentIndex(int, int, int)
12503=DefaultCommentMapper:DefaultCommentMapper(Comment[])
12504=DefaultCommentMapper:getExtendedLength(ASTNode)
12505=DefaultCommentMapper:getExtendedStartPosition(ASTNode)
12506=DefaultCommentMapper:storeTrailingComments(ASTNode, int, boolean, int[])
12507=DefaultCommentMapper:CommentMapperVisitor:visit(CompilationUnit)
12508=DefaultCommentMapper:getExtendedEnd(ASTNode)
12509=DefaultCommentMapper:CommentMapperVisitor:visitNode(ASTNode)
12510=DefaultCommentMapper:firstLeadingCommentIndex(ASTNode)
12511=A:B:foo()
12512=Test:foo()
12513=NameImpl:contentEquals(CharSequence)
12514=NameImpl:NameImpl(CharSequence)
12515=NameImpl:subSequence(int, int)
12516=NameImpl:NameImpl()
12517=NameImpl:charAt(int)
12518=NameImpl:hashCode()
12519=NameImpl:NameImpl(char[])
12520=NameImpl:toString()
12521=NameImpl:equals(Object)
12522=NameImpl:length()
12523=JavaIndexer:generateIndexForJar(String, String)
12524=HashtableOfLong:put(long, Object)
12525=HashtableOfLong:HashtableOfLong()
12526=HashtableOfLong:rehash()
12527=HashtableOfLong:toString()
12528=HashtableOfLong:size()
12529=HashtableOfLong:containsKey(long)
12530=HashtableOfLong:HashtableOfLong(int)
12531=HashtableOfLong:get(long)
12532=RepeatableAnnotationTest:test010()
12533=RepeatableAnnotationTest:test007a()
12534=RepeatableAnnotationTest:test033()
12535=RepeatableAnnotationTest:test021()
12536=RepeatableAnnotationTest:test032()
12537=RepeatableAnnotationTest:testRepeatableWithContaining3()
12538=RepeatableAnnotationTest:test020()
12539=RepeatableAnnotationTest:test031()
12540=RepeatableAnnotationTest:suite()
12541=RepeatableAnnotationTest:test030()
12542=RepeatableAnnotationTest:_test009()
12543=RepeatableAnnotationTest:test037()
12544=RepeatableAnnotationTest:test014()
12545=RepeatableAnnotationTest:_test008()
12546=RepeatableAnnotationTest:test025()
12547=RepeatableAnnotationTest:test002()
12548=RepeatableAnnotationTest:test036()
12549=RepeatableAnnotationTest:test013()
12550=RepeatableAnnotationTest:testVariousSites()
12551=RepeatableAnnotationTest:test001()
12552=RepeatableAnnotationTest:test024()
12553=RepeatableAnnotationTest:testDeprecation2()
12554=RepeatableAnnotationTest:test035()
12555=RepeatableAnnotationTest:test012()
12556=RepeatableAnnotationTest:testRepeatableWithContaining2()
12557=RepeatableAnnotationTest:test023()
12558=RepeatableAnnotationTest:test011()
12559=RepeatableAnnotationTest:test034()
12560=RepeatableAnnotationTest:testRepeatableWithContaining1()
12561=RepeatableAnnotationTest:test022()
12562=RepeatableAnnotationTest:test007()
12563=RepeatableAnnotationTest:testUnspecifiedTarget()
12564=RepeatableAnnotationTest:test018()
12565=RepeatableAnnotationTest:test029()
12566=RepeatableAnnotationTest:test006()
12567=RepeatableAnnotationTest:test017()
12568=RepeatableAnnotationTest:test005()
12569=RepeatableAnnotationTest:test028()
12570=RepeatableAnnotationTest:testDeprecation()
12571=RepeatableAnnotationTest:testTypeParameters()
12572=RepeatableAnnotationTest:testClass()
12573=RepeatableAnnotationTest:test016()
12574=RepeatableAnnotationTest:test039()
12575=RepeatableAnnotationTest:RepeatableAnnotationTest(String)
12576=RepeatableAnnotationTest:test004()
12577=RepeatableAnnotationTest:test027()
12578=RepeatableAnnotationTest:test015()
12579=RepeatableAnnotationTest:test038()
12580=RepeatableAnnotationTest:test003()
12581=RepeatableAnnotationTest:test026()
12582=RepeatableAnnotationTest:test040()
12583=RepeatableAnnotationTest:testUnspecifiedTarget2()
12584=RepeatableAnnotationTest:testBadContainerType()
12585=RepeatableAnnotationTest:test019()
12586=X:foo()
12587=X:main(String[])
12588=ReferenceBinding:isStrictfp()
12589=ReferenceBinding:isClass()
12590=ReferenceBinding:isCompatibleWith(TypeBinding)
12591=ReferenceBinding:canBeInstantiated()
12592=ReferenceBinding:signature()
12593=ReferenceBinding:syntheticEnclosingInstanceTypes()
12594=ReferenceBinding:availableFields()
12595=ReferenceBinding:enclosingTypeAt(int)
12596=ReferenceBinding:findSuperTypeErasingTo(int, boolean)
12597=ReferenceBinding:isDeprecated()
12598=ReferenceBinding:enclosingType()
12599=ReferenceBinding:isAbstract()
12600=ReferenceBinding:qualifiedSourceName()
12601=ReferenceBinding:isDefault()
12602=ReferenceBinding:getMethods(char[])
12603=ReferenceBinding:isViewedAsDeprecated()
12604=ReferenceBinding:fieldCount()
12605=ReferenceBinding:syntheticOuterLocalVariables()
12606=ReferenceBinding:debugName()
12607=ReferenceBinding:getPackage()
12608=ReferenceBinding:isBinaryBinding()
12609=ReferenceBinding:constantPoolName()
12610=ReferenceBinding:hasMemberTypes()
12611=ReferenceBinding:canBeSeenBy(Scope)
12612=ReferenceBinding:getTypeVariable(char[])
12613=ReferenceBinding:superInterfaces()
12614=ReferenceBinding:implementsMethod(MethodBinding)
12615=ReferenceBinding:unResolvedMethods()
12616=ReferenceBinding:isFinal()
12617=ReferenceBinding:isInterface()
12618=ReferenceBinding:isAnonymousType()
12619=ReferenceBinding:computeId()
12620=ReferenceBinding:implementsInterface(ReferenceBinding, boolean)
12621=ReferenceBinding:getMemberType(char[])
12622=ReferenceBinding:getField(char[], boolean)
12623=ReferenceBinding:isHierarchyBeingConnected()
12624=ReferenceBinding:getExactMethod(char[], TypeBinding[], CompilationUnitScope)
12625=ReferenceBinding:fields()
12626=ReferenceBinding:getExactConstructor(TypeBinding[])
12627=ReferenceBinding:getExactMethod(char[], TypeBinding[])
12628=ReferenceBinding:isPrivate()
12629=ReferenceBinding:hasRestrictedAccess()
12630=ReferenceBinding:availableMethods()
12631=ReferenceBinding:getAccessFlags()
12632=ReferenceBinding:isProtected()
12633=ReferenceBinding:canBeSeenBy(PackageBinding)
12634=ReferenceBinding:shortReadableName()
12635=ReferenceBinding:methods()
12636=ReferenceBinding:readableName()
12637=ReferenceBinding:isPrivateUsed()
12638=ReferenceBinding:findSuperTypeErasingTo(ReferenceBinding)
12639=ReferenceBinding:isStatic()
12640=ReferenceBinding:sourceName()
12641=ReferenceBinding:canBeSeenBy(ReferenceBinding, SourceTypeBinding)
12642=ReferenceBinding:hashCode()
12643=ReferenceBinding:getFileName()
12644=ReferenceBinding:memberTypes()
12645=ReferenceBinding:depth()
12646=ReferenceBinding:superclass()
12647=ReferenceBinding:isPublic()
12648=ReferenceBinding:isSuperclassOf(ReferenceBinding)
12649=SaveIndex:SaveIndex(IPath, IndexManager)
12650=SaveIndex:execute(IProgressMonitor)
12651=SaveIndex:toString()
12652=A:foo()
12653=EnumConstantSignature:getTypeName()
12654=EnumConstantSignature:getEnumConstantName()
12655=EnumConstantSignature:EnumConstantSignature(char[], char[])
12656=EnumConstantSignature:hashCode()
12657=EnumConstantSignature:equals(Object)
12658=EnumConstantSignature:toString()
12659=Example:function1(Object, Object, Object, Object)
12660=ProgressBar:step(boolean)
12661=ProgressBar:paint(Graphics)
12662=ProgressBar:start(int)
12663=ProgressBar:paintBackground(Graphics)
12664=ProgressBar:paintStep(int, int)
12665=ProgressBar:reset()
12666=ProgressBar:setBounds(int, int, int, int)
12667=ProgressBar:scale(int)
12668=ProgressBar:paintStatus(Graphics)
12669=ProgressBar:ProgressBar()
12670=ProgressBar:getStatusColor()
12671=A:method()
12672=X03a:foo()
12673=IMethod:getRawParameterNames()
12674=IMethod:isLambdaMethod()
12675=IMethod:isResolved()
12676=IMethod:getParameterTypes()
12677=IMethod:getTypeParameter(String)
12678=IMethod:getKey()
12679=IMethod:getNumberOfParameters()
12680=IMethod:getDefaultValue()
12681=IMethod:getTypeParameterSignatures()
12682=IMethod:getElementName()
12683=IMethod:getSignature()
12684=IMethod:getParameterNames()
12685=IMethod:getExceptionTypes()
12686=IMethod:getReturnType()
12687=IMethod:getParameters()
12688=IMethod:isMainMethod()
12689=IMethod:getTypeParameters()
12690=IMethod:isConstructor()
12691=IMethod:isSimilar(IMethod)
12692=ParserTask:doNothingMethod()
12693=ParserTask:execute()
12694=ParserTask:anotherDoNothingMethod()
12695=AnnotationValueConversionTests:testArrayElementConversion_Reflection()
12696=AnnotationValueConversionTests:testByteConversion()
12697=AnnotationValueConversionTests:testArrayification()
12698=AnnotationValueConversionTests:testLongConversion()
12699=AnnotationValueConversionTests:getBinaryPath()
12700=AnnotationValueConversionTests:testDoubleConversion_Reflection()
12701=AnnotationValueConversionTests:testFloatConversion_Reflection()
12702=AnnotationValueConversionTests:testErrorStringValue_Reflection()
12703=AnnotationValueConversionTests:setupTest()
12704=AnnotationValueConversionTests:testIntConversion()
12705=AnnotationValueConversionTests:testArrayification_Reflection()
12706=AnnotationValueConversionTests:getUniqueProjectName()
12707=AnnotationValueConversionTests:AnnotationValueConversionTests(String)
12708=AnnotationValueConversionTests:getOutputPath()
12709=AnnotationValueConversionTests:testCharConversion()
12710=AnnotationValueConversionTests:testByteConversion_Reflection()
12711=AnnotationValueConversionTests:testArrayElementConversion()
12712=AnnotationValueConversionTests:testCharConversion_Reflection()
12713=AnnotationValueConversionTests:testDoubleConversion()
12714=AnnotationValueConversionTests:suite()
12715=AnnotationValueConversionTests:getSourcePath()
12716=AnnotationValueConversionTests:testShortConversion_Reflection()
12717=AnnotationValueConversionTests:testErrorStringValue()
12718=AnnotationValueConversionTests:testFloatConversion()
12719=AnnotationValueConversionTests:testLongConversion_Reflection()
12720=AnnotationValueConversionTests:testShortConversion()
12721=AnnotationValueConversionTests:testMissingPrimitiveTypeValues_Reflection()
12722=AnnotationValueConversionTests:testIntConversion_Reflection()
12723=CreateInitializerOperation:generateResultHandle()
12724=CreateInitializerOperation:getMainTaskName()
12725=CreateInitializerOperation:CreateInitializerOperation(IType, String)
12726=CreateInitializerOperation:generateElementAST(ASTRewrite, ICompilationUnit)
12727=CreateInitializerOperation:initializeDefaultPosition()
12728=CreateInitializerOperation:rename(ASTNode, SimpleName)
12729=ResolveConstructorCall:ResolveConstructorCall()
12730=ResolveConstructorCall:foo()
12731=ClassScope:connectTypeHierarchyWithoutMembers()
12732=ClassScope:buildAnonymousTypeBinding(SourceTypeBinding, ReferenceBinding)
12733=ClassScope:buildFields()
12734=ClassScope:buildLocalTypeBinding(SourceTypeBinding)
12735=ClassScope:referenceType()
12736=ClassScope:checkAndSetModifiers()
12737=ClassScope:connectSuperInterfaces()
12738=ClassScope:checkParameterizedTypeBounds()
12739=ClassScope:checkAndSetModifiersForField(FieldBinding, FieldDeclaration)
12740=ClassScope:connectTypeHierarchy()
12741=ClassScope:buildTypeVariables()
12742=ClassScope:connectMemberTypes()
12743=ClassScope:buildMethods()
12744=ClassScope:findAmbiguousInterface(ReferenceBinding, ReferenceBinding)
12745=ClassScope:ClassScope(Scope, TypeDeclaration)
12746=ClassScope:connectSuperclass()
12747=ClassScope:buildFieldsAndMethods()
12748=ClassScope:buildMemberTypes()
12749=ClassScope:checkForInheritedMemberTypes(SourceTypeBinding)
12750=ClassScope:detectCycle(SourceTypeBinding, ReferenceBinding, TypeReference)
12751=ClassScope:findSupertype(TypeReference)
12752=ClassScope:buildLocalType(SourceTypeBinding, PackageBinding)
12753=ClassScope:problemReporter()
12754=ClassScope:detectCycle(TypeBinding, TypeReference, TypeBinding[])
12755=ClassScope:toString()
12756=ClassScope:buildType(SourceTypeBinding, PackageBinding)
12757=FloatLiteral:generateCode(BlockScope, CodeStream, boolean)
12758=FloatLiteral:traverse(ASTVisitor, BlockScope)
12759=FloatLiteral:FloatLiteral(char[], int, int)
12760=FloatLiteral:literalType(BlockScope)
12761=FloatLiteral:computeConstant()
12762=Compiler:accept(ISourceType[], PackageBinding)
12763=Compiler:reset()
12764=Compiler:beginToCompile(ICompilationUnit[])
12765=Compiler:addCompilationUnit(ICompilationUnit, CompilationUnitDeclaration)
12766=Compiler:handleInternalException(AbortCompilation, CompilationUnitDeclaration)
12767=Compiler:initializeParser()
12768=Compiler:accept(ICompilationUnit)
12769=Compiler:Compiler(INameEnvironment, IErrorHandlingPolicy, Map, ICompilerRequestor, IProblemFactory, boolean)
12770=Compiler:resolve(ICompilationUnit, boolean, boolean, boolean)
12771=Compiler:compile(ICompilationUnit[])
12772=Compiler:process(CompilationUnitDeclaration, int)
12773=Compiler:handleInternalException(Throwable, CompilationUnitDeclaration, CompilationResult)
12774=Compiler:Compiler(INameEnvironment, IErrorHandlingPolicy, Map, ICompilerRequestor, IProblemFactory)
12775=Compiler:accept(IBinaryType, PackageBinding)
12776=Compiler:resolve(CompilationUnitDeclaration, ICompilationUnit, boolean, boolean, boolean)
12777=DefaultWorkingCopyOwner:toString()
12778=DefaultWorkingCopyOwner:createBuffer(ICompilationUnit)
12779=DefaultWorkingCopyOwner:DefaultWorkingCopyOwner()
12780=TestB2:bar()
12781=TestB2:foo()
12782=X15:foo()
12783=X01b:foo()
12784=SomeClass:classifySetTwo(Set<?>, int, long, int)
12785=TypeElementImpl:getEnclosingElement()
12786=TypeElementImpl:getTypeParameters()
12787=TypeElementImpl:getNestingKind()
12788=TypeElementImpl:getInterfaces()
12789=TypeElementImpl:getAnnotationBindings()
12790=TypeElementImpl:SourceLocationComparator:compare(Element, Element)
12791=TypeElementImpl:getKind()
12792=TypeElementImpl:getModifiers()
12793=TypeElementImpl:SourceLocationComparator:getSourceStart(ElementImpl)
12794=TypeElementImpl:getFileName()
12795=TypeElementImpl:hides(Element)
12796=TypeElementImpl:accept(ElementVisitor<R, P>, P)
12797=TypeElementImpl:getSuperclass()
12798=TypeElementImpl:getPackage()
12799=TypeElementImpl:getQualifiedName()
12800=TypeElementImpl:getEnclosedElements()
12801=TypeElementImpl:toString()
12802=TypeElementImpl:getSimpleName()
12803=TypeElementImpl:TypeElementImpl(BaseProcessingEnvImpl, ReferenceBinding, ElementKind)
12804=TypeElementImpl:SourceLocationComparator:determineSourceStart(ElementImpl)
12805=Expression:resolveTypeBinding()
12806=Expression:resolveUnboxing()
12807=Expression:resolveConstantExpressionValue()
12808=Expression:resolveBoxing()
12809=Expression:Expression(AST)
12810=ASTRewritingModifyingInsertTest:test0002()
12811=ASTRewritingModifyingInsertTest:test0014()
12812=ASTRewritingModifyingInsertTest:test0003()
12813=ASTRewritingModifyingInsertTest:test0015()
12814=ASTRewritingModifyingInsertTest:test0012()
12815=ASTRewritingModifyingInsertTest:test0001()
12816=ASTRewritingModifyingInsertTest:test0013()
12817=ASTRewritingModifyingInsertTest:test0010()
12818=ASTRewritingModifyingInsertTest:ASTRewritingModifyingInsertTest(String)
12819=ASTRewritingModifyingInsertTest:test0011()
12820=ASTRewritingModifyingInsertTest:allTests()
12821=ASTRewritingModifyingInsertTest:test0006()
12822=ASTRewritingModifyingInsertTest:test0007()
12823=ASTRewritingModifyingInsertTest:suite()
12824=ASTRewritingModifyingInsertTest:test0004()
12825=ASTRewritingModifyingInsertTest:test0016()
12826=TestB2:bar()
12827=TestB2:foo()
12828=A:foo()
12829=TypeParameter:resolve(ClassScope)
12830=TypeParameter:internalResolve(Scope, boolean)
12831=TypeParameter:generateCode(BlockScope, CodeStream)
12832=TypeParameter:getKind()
12833=TypeParameter:resolve(BlockScope)
12834=TypeParameter:traverse(ASTVisitor, BlockScope)
12835=TypeParameter:printStatement(int, StringBuffer)
12836=TypeParameter:getAllAnnotationContexts(int, int, List)
12837=TypeParameter:resolveAnnotations(Scope)
12838=TypeParameter:checkBounds(Scope)
12839=TypeParameter:traverse(ASTVisitor, ClassScope)
12840=MultiCatchExceptionLabel:MultiCatchExceptionLabel(CodeStream, TypeBinding)
12841=MultiCatchExceptionLabel:placeStart()
12842=MultiCatchExceptionLabel:placeEnd()
12843=MultiCatchExceptionLabel:initialize(UnionTypeReference, Annotation[])
12844=MultiCatchExceptionLabel:getCount()
12845=MultiCatchExceptionLabel:place()
12846=FailureDetailView:getComponent()
12847=FailureDetailView:clear()
12848=FailureDetailView:showFailure(TestFailure)
12849=NameEnvironmentAnswer:getSourceTypes()
12850=NameEnvironmentAnswer:NameEnvironmentAnswer(ISourceType[])
12851=NameEnvironmentAnswer:NameEnvironmentAnswer(ICompilationUnit)
12852=NameEnvironmentAnswer:getBinaryType()
12853=NameEnvironmentAnswer:isBinaryType()
12854=NameEnvironmentAnswer:getCompilationUnit()
12855=NameEnvironmentAnswer:isCompilationUnit()
12856=NameEnvironmentAnswer:NameEnvironmentAnswer(IBinaryType)
12857=NameEnvironmentAnswer:isSourceType()
12858=LookupEnvironment:filterNullTypeAnnotations(AnnotationBinding[])
12859=LookupEnvironment:convertToParameterizedType(ReferenceBinding)
12860=LookupEnvironment:updateCaches(UnresolvedReferenceBinding, ReferenceBinding)
12861=LookupEnvironment:isMissingType(char[])
12862=LookupEnvironment:qualifiedNameMatchesSignature(char[][], char[])
12863=LookupEnvironment:getResolvedType(char[][], Scope)
12864=LookupEnvironment:isPackage(char[][], char[])
12865=LookupEnvironment:convertToRawType(TypeBinding, boolean)
12866=LookupEnvironment:createBinaryTypeFrom(IBinaryType, PackageBinding, boolean, AccessRestriction)
12867=LookupEnvironment:maybeCreateParameterizedType(ReferenceBinding, ReferenceBinding)
12868=LookupEnvironment:updatePolymorphicMethodReturnType(PolymorphicMethodBinding, TypeBinding)
12869=LookupEnvironment:convertToRawTypes(ReferenceBinding[], boolean, boolean)
12870=LookupEnvironment:countNonStaticNestingLevels(TypeBinding)
12871=LookupEnvironment:getNonNullByDefaultAnnotationName()
12872=LookupEnvironment:getTypeFromConstantPoolName(char[], int, int, boolean, char[][][])
12873=LookupEnvironment:completeTypeBindings()
12874=LookupEnvironment:completeTypeBindings(CompilationUnitDeclaration)
12875=LookupEnvironment:createBinaryTypeFrom(IBinaryType, PackageBinding, AccessRestriction)
12876=LookupEnvironment:createParameterizedGenericMethod(MethodBinding, TypeBinding[], boolean, boolean)
12877=LookupEnvironment:setAccessRestriction(ReferenceBinding, AccessRestriction)
12878=LookupEnvironment:getCachedType(char[][])
12879=LookupEnvironment:createIntersectionType18(ReferenceBinding[])
12880=LookupEnvironment:initializeUsesNullTypeAnnotation()
12881=LookupEnvironment:createPackage(char[][])
12882=LookupEnvironment:containsNullTypeAnnotation(IBinaryAnnotation[])
12883=LookupEnvironment:createRawType(ReferenceBinding, ReferenceBinding, AnnotationBinding[])
12884=LookupEnvironment:createRawType(ReferenceBinding, ReferenceBinding)
12885=LookupEnvironment:getUnannotatedType(TypeBinding)
12886=LookupEnvironment:getNullAnnotationBit(char[][])
12887=LookupEnvironment:annotateType(TypeBinding, ITypeAnnotationWalker, char[][][])
12888=LookupEnvironment:addResolutionListener(IQualifiedTypeResolutionListener)
12889=LookupEnvironment:containsNullTypeAnnotation(AnnotationBinding[])
12890=LookupEnvironment:getTypeFromTypeVariable(TypeVariableBinding, int, AnnotationBinding[][], ITypeAnnotationWalker, char[][][])
12891=LookupEnvironment:getNonNullAnnotation()
12892=LookupEnvironment:methodVerifier()
12893=LookupEnvironment:createAnnotatedType(TypeBinding, AnnotationBinding[])
12894=LookupEnvironment:createWildcard(ReferenceBinding, int, TypeBinding, TypeBinding[], int)
12895=LookupEnvironment:computePackageFrom(char[][], boolean)
12896=LookupEnvironment:getType(char[][])
12897=LookupEnvironment:computeBoxingType(TypeBinding)
12898=LookupEnvironment:createUnresolvedAnnotation(ReferenceBinding, ElementValuePair[])
12899=LookupEnvironment:createParameterizedType(ReferenceBinding, TypeBinding[], ReferenceBinding, AnnotationBinding[])
12900=LookupEnvironment:usesNullTypeAnnotations()
12901=LookupEnvironment:cacheBinaryType(IBinaryType, AccessRestriction)
12902=LookupEnvironment:askForType(char[][])
12903=LookupEnvironment:getAnnotatedTypes(TypeBinding)
12904=LookupEnvironment:createGetClassMethod(TypeBinding, MethodBinding, Scope)
12905=LookupEnvironment:createParameterizedGenericMethod(MethodBinding, TypeBinding[])
12906=LookupEnvironment:createMemberType(ReferenceBinding, ReferenceBinding)
12907=LookupEnvironment:nullAnnotationsFromTagBits(long)
12908=LookupEnvironment:getTypeFromConstantPoolName(char[], int, int, boolean, char[][][], ITypeAnnotationWalker)
12909=LookupEnvironment:getPackage0(char[])
12910=LookupEnvironment:getTypeFromVariantTypeSignature(SignatureWrapper, TypeVariableBinding[], ReferenceBinding, ReferenceBinding, int, char[][][], ITypeAnnotationWalker)
12911=LookupEnvironment:getAccessRestriction(TypeBinding)
12912=LookupEnvironment:buildTypeBindings(CompilationUnitDeclaration, AccessRestriction)
12913=LookupEnvironment:releaseClassFiles(org.eclipse.jdt.internal.compiler.ClassFile[])
12914=LookupEnvironment:getTypeArgumentsFromSignature(SignatureWrapper, TypeVariableBinding[], ReferenceBinding, ReferenceBinding, char[][][], ITypeAnnotationWalker)
12915=LookupEnvironment:createParameterizedGenericMethod(MethodBinding, RawTypeBinding)
12916=LookupEnvironment:completeTypeBindings(CompilationUnitDeclaration, boolean)
12917=LookupEnvironment:createMissingType(PackageBinding, char[][])
12918=LookupEnvironment:askForType(PackageBinding, char[])
12919=LookupEnvironment:getTopLevelPackage(char[])
12920=LookupEnvironment:reset()
12921=LookupEnvironment:getNullableAnnotationName()
12922=LookupEnvironment:createArrayType(TypeBinding, int)
12923=LookupEnvironment:createAnnotation(ReferenceBinding, ElementValuePair[])
12924=LookupEnvironment:createArrayType(TypeBinding, int, AnnotationBinding[])
12925=LookupEnvironment:createParameterizedType(ReferenceBinding, TypeBinding[], ReferenceBinding)
12926=LookupEnvironment:createPolymorphicMethod(MethodBinding, TypeBinding[])
12927=LookupEnvironment:isNullnessAnnotationPackage(PackageBinding)
12928=LookupEnvironment:getNonNullAnnotationName()
12929=LookupEnvironment:usesAnnotatedTypeSystem()
12930=LookupEnvironment:convertUnresolvedBinaryToRawType(TypeBinding)
12931=LookupEnvironment:cacheBinaryType(IBinaryType, boolean, AccessRestriction)
12932=LookupEnvironment:createCapturedWildcard(WildcardBinding, ReferenceBinding, int, int, ASTNode, int)
12933=LookupEnvironment:createAnnotatedType(TypeBinding, AnnotationBinding[][])
12934=LookupEnvironment:getTypeFromCompoundName(char[][], boolean, boolean)
12935=LookupEnvironment:getTypeFromSignature(char[], int, int, boolean, TypeBinding, char[][][], ITypeAnnotationWalker)
12936=LookupEnvironment:LookupEnvironment(ITypeRequestor, CompilerOptions, ProblemReporter, INameEnvironment)
12937=LookupEnvironment:getNullableAnnotation()
12938=LookupEnvironment:completeTypeBindings(CompilationUnitDeclaration[], boolean[], int)
12939=LookupEnvironment:createWildcard(ReferenceBinding, int, TypeBinding, TypeBinding[], int, AnnotationBinding[])
12940=LookupEnvironment:newMethodVerifier()
12941=LookupEnvironment:getTypeFromTypeSignature(SignatureWrapper, TypeVariableBinding[], ReferenceBinding, char[][][], ITypeAnnotationWalker)
12942=TypeDeclarationImpl:getQualifiedName()
12943=TypeDeclarationImpl:getNestedTypes()
12944=TypeDeclarationImpl:isAssignmentCompatible(EclipseMirrorType)
12945=TypeDeclarationImpl:getASTFields(AbstractTypeDeclaration, List<FieldDeclaration>)
12946=TypeDeclarationImpl:getSimpleName()
12947=TypeDeclarationImpl:isSubClassOf(ITypeBinding, ITypeBinding)
12948=TypeDeclarationImpl:getSuperinterfaces()
12949=TypeDeclarationImpl:_getMethods()
12950=TypeDeclarationImpl:getFormalTypeParameters()
12951=TypeDeclarationImpl:getASTMethods(AbstractTypeDeclaration, List<MethodDeclaration>)
12952=TypeDeclarationImpl:getTypeBinding()
12953=TypeDeclarationImpl:getDeclaration()
12954=TypeDeclarationImpl:eq(ITypeBinding, ITypeBinding)
12955=TypeDeclarationImpl:getDeclarationBinding()
12956=TypeDeclarationImpl:isImplementorOf(ITypeBinding, ITypeBinding)
12957=TypeDeclarationImpl:isSubTypeCompatible(EclipseMirrorType)
12958=TypeDeclarationImpl:getContainingType()
12959=TypeDeclarationImpl:accept(DeclarationVisitor)
12960=TypeDeclarationImpl:isFromSource()
12961=TypeDeclarationImpl:getDeclaringType()
12962=TypeDeclarationImpl:TypeDeclarationImpl(ITypeBinding, BaseProcessorEnv)
12963=TypeDeclarationImpl:getPackage()
12964=TypeDeclarationImpl:getActualTypeArguments()
12965=TypeDeclarationImpl:getFields()
12966=TypeDeclarationImpl:toString()
12967=TestSetup:TestSetup(Test)
12968=TestSetup:run(TestResult)
12969=TestSetup:setUp()
12970=TestSetup:tearDown()
12971=BugTest2Buggy:testIt()
12972=X:foo()
12973=X:X(String)
12974=X14b:foo()
12975=ClasspathJsr199:findTypeNames(String)
12976=ClasspathJsr199:initialize()
12977=ClasspathJsr199:getMode()
12978=ClasspathJsr199:findClass(char[], String, String)
12979=ClasspathJsr199:isPackage(String)
12980=ClasspathJsr199:reset()
12981=ClasspathJsr199:fetchLinkedJars(FileSystem.ClasspathSectionProblemReporter)
12982=ClasspathJsr199:toString()
12983=ClasspathJsr199:findClass(char[], String, String, boolean)
12984=ClasspathJsr199:getPath()
12985=ClasspathJsr199:normalizedPath()
12986=ClasspathJsr199:hasAnnotationFileFor(String)
12987=ClasspathJsr199:ClasspathJsr199(JavaFileManager, JavaFileManager.Location)
12988=IGenericMethod:isConstructor()
12989=IGenericMethod:getSelector()
12990=IGenericMethod:getArgumentNames()
12991=IGenericMethod:getModifiers()
12992=SomeClass:foo()
12993=ConstructorPattern:ConstructorPattern(char[], char[], char[][], char[][], int, int)
12994=ConstructorPattern:hasConstructorParameters()
12995=ConstructorPattern:queryIn(Index)
12996=ConstructorPattern:matchesDecodedKey(SearchPattern)
12997=ConstructorPattern:getIndexCategories()
12998=ConstructorPattern:getTypeErasure(char[])
12999=ConstructorPattern:hasConstructorArguments()
13000=ConstructorPattern:ConstructorPattern(char[], char[], char[][], char[][], String[], IMethod, int, int)
13001=ConstructorPattern:decodeExtraFlags(int)
13002=ConstructorPattern:encodeExtraFlags(int)
13003=ConstructorPattern:print(StringBuffer)
13004=ConstructorPattern:createDefaultDeclarationIndexKey(char[], char[], int, int)
13005=ConstructorPattern:decodeModifers(int)
13006=ConstructorPattern:decodeIndexKey(char[])
13007=ConstructorPattern:ConstructorPattern(char[], char[], String, char[][], char[][], String[], char[][], int, int)
13008=ConstructorPattern:getBlankPattern()
13009=ConstructorPattern:mustResolve()
13010=ConstructorPattern:ConstructorPattern(int)
13011=ConstructorPattern:createIndexKey(char[], int)
13012=ConstructorPattern:createDeclarationIndexKey(char[], int, char[], char[][], char[][], int, char[], int, int)
13013=MethodPropertyDatabase:read(String)
13014=MethodProperty:copyFrom(ActualType)
13015=GenericsBug:readDatabase(DatabaseType, String)
13016=GenericsBug:readDatabase()
13017=FooProperty:copyFrom(FooProperty)
13018=X:add(T, A<T>, A<T>.B<T>, A<T>.C<T>, A<T>.B<T>.D<T>)
13019=X:fred()
13020=X:bar()
13021=X:foo()
13022=ExplicitConstructorInvocationCompletionTest:testWrapperPrimarySuper()
13023=ExplicitConstructorInvocationCompletionTest:testWrapperThis()
13024=ExplicitConstructorInvocationCompletionTest:testPrimaryThis()
13025=ExplicitConstructorInvocationCompletionTest:testThis()
13026=ExplicitConstructorInvocationCompletionTest:testPrimarySuper()
13027=ExplicitConstructorInvocationCompletionTest:suite()
13028=ExplicitConstructorInvocationCompletionTest:testWrapperSuper()
13029=ExplicitConstructorInvocationCompletionTest:ExplicitConstructorInvocationCompletionTest(String)
13030=ExplicitConstructorInvocationCompletionTest:testWrapperNameSuper()
13031=ExplicitConstructorInvocationCompletionTest:testSuper()
13032=ExplicitConstructorInvocationCompletionTest:testWrapperNameThis()
13033=ConflictingSimpleNameFinder:findConflictingSimpleNames(Set<String>, Set<String>, IProgressMonitor)
13034=A:foo(String, Object)
13035=A:A()
13036=CompletionParserTest2:test0105_Method()
13037=CompletionParserTest2:test0068_Method()
13038=CompletionParserTest2:test0166_Method()
13039=CompletionParserTest2:test0066_Diet()
13040=CompletionParserTest2:test0120_Diet()
13041=CompletionParserTest2:test0046()
13042=CompletionParserTest2:test0062_Diet()
13043=CompletionParserTest2:test0154_Diet()
13044=CompletionParserTest2:test0035_Method()
13045=CompletionParserTest2:test0113_Method()
13046=CompletionParserTest2:test0169_Diet()
13047=CompletionParserTest2:test0036_Diet()
13048=CompletionParserTest2:test0032_Diet()
13049=CompletionParserTest2:test0150_Diet()
13050=CompletionParserTest2:test0165_Diet()
13051=CompletionParserTest2:test0021_Diet()
13052=CompletionParserTest2:test0158_Diet()
13053=CompletionParserTest2:test0029_Diet()
13054=CompletionParserTest2:test0071_Method()
13055=CompletionParserTest2:test0048_Method()
13056=CompletionParserTest2:test0051_Method()
13057=CompletionParserTest2:test0001()
13058=CompletionParserTest2:test0158_Method()
13059=CompletionParserTest2:test0002_Method()
13060=CompletionParserTest2:test0084_Method()
13061=CompletionParserTest2:test0121_Method()
13062=CompletionParserTest2:test0002_Diet()
13063=CompletionParserTest2:test0058()
13064=CompletionParserTest2:test0006_Diet()
13065=CompletionParserTest2:test0056_Method()
13066=CompletionParserTest2:test0015_Method()
13067=CompletionParserTest2:test0085_Diet()
13068=CompletionParserTest2:test0083_Method()
13069=CompletionParserTest2:test0044_Diet()
13070=CompletionParserTest2:test0047_Diet()
13071=CompletionParserTest2:test0126_Method()
13072=CompletionParserTest2:test0080_Diet()
13073=CompletionParserTest2:test0088_Diet()
13074=CompletionParserTest2:test0106_Diet()
13075=CompletionParserTest2:test0109_Diet()
13076=CompletionParserTest2:test0101_Diet()
13077=CompletionParserTest2:test0023_Method()
13078=CompletionParserTest2:test0153_Method()
13079=CompletionParserTest2:test0112_Method()
13080=CompletionParserTest2:test0003_Diet()
13081=CompletionParserTest2:test0055()
13082=CompletionParserTest2:test0014_Diet()
13083=CompletionParserTest2:test0154_Method()
13084=CompletionParserTest2:test0030_Method()
13085=CompletionParserTest2:test0042_Method()
13086=CompletionParserTest2:test0125_Method()
13087=CompletionParserTest2:test0096_Diet()
13088=CompletionParserTest2:test0027_Method()
13089=CompletionParserTest2:test0036_Method()
13090=CompletionParserTest2:test0099_Diet()
13091=CompletionParserTest2:test0112_Diet()
13092=CompletionParserTest2:test0022()
13093=CompletionParserTest2:test0011_Method()
13094=CompletionParserTest2:test0077_Diet()
13095=CompletionParserTest2:test0100_Method()
13096=CompletionParserTest2:test0074_Diet()
13097=CompletionParserTest2:test0128_Diet()
13098=CompletionParserTest2:test0153_Diet()
13099=CompletionParserTest2:test0117_Diet()
13100=CompletionParserTest2:test0014_Method()
13101=CompletionParserTest2:test0142_Diet()
13102=CompletionParserTest2:test0096_Method()
13103=CompletionParserTest2:test0138_Method()
13104=CompletionParserTest2:test0131_Diet()
13105=CompletionParserTest2:test0008_Method()
13106=CompletionParserTest2:test0033_Diet()
13107=CompletionParserTest2:test0010()
13108=CompletionParserTest2:test0091()
13109=CompletionParserTest2:test0136()
13110=CompletionParserTest2:test0159()
13111=CompletionParserTest2:test0067_Diet()
13112=CompletionParserTest2:suite()
13113=CompletionParserTest2:test0114_Method()
13114=CompletionParserTest2:test0004()
13115=CompletionParserTest2:test0121_Diet()
13116=CompletionParserTest2:test0063_Diet()
13117=CompletionParserTest2:test0132_Method()
13118=CompletionParserTest2:test0087_Method()
13119=CompletionParserTest2:test0148()
13120=CompletionParserTest2:test0124_Method()
13121=CompletionParserTest2:test0165_Method()
13122=CompletionParserTest2:test0106_Method()
13123=CompletionParserTest2:test0142_Method()
13124=CompletionParserTest2:test0059_Method()
13125=CompletionParserTest2:test0137_Method()
13126=CompletionParserTest2:test0039_Diet()
13127=CompletionParserTest2:test0050_Diet()
13128=CompletionParserTest2:test0069_Method()
13129=CompletionParserTest2:test0028()
13130=CompletionParserTest2:test0070_Method()
13131=CompletionParserTest2:test0110_Diet()
13132=CompletionParserTest2:test0072_Diet()
13133=CompletionParserTest2:test0173_Method()
13134=CompletionParserTest2:test0155_Diet()
13135=CompletionParserTest2:test0144_Diet()
13136=CompletionParserTest2:test0170_Method()
13137=CompletionParserTest2:test0109_Method()
13138=CompletionParserTest2:test0032_Method()
13139=CompletionParserTest2:test0016()
13140=CompletionParserTest2:test0017_Diet()
13141=CompletionParserTest2:test0035_Diet()
13142=CompletionParserTest2:test0177_Diet()
13143=CompletionParserTest2:test0166_Diet()
13144=CompletionParserTest2:test0024_Diet()
13145=CompletionParserTest2:test0097_Method()
13146=CompletionParserTest2:test0104_Method()
13147=CompletionParserTest2:test0145_Method()
13148=CompletionParserTest2:test0084_Diet()
13149=CompletionParserTest2:test0134()
13150=CompletionParserTest2:test0111_Method()
13151=CompletionParserTest2:test0178_Method()
13152=CompletionParserTest2:test0045_Diet()
13153=CompletionParserTest2:test0089_Diet()
13154=CompletionParserTest2:test0025()
13155=CompletionParserTest2:test0089_Method()
13156=CompletionParserTest2:test0105_Diet()
13157=CompletionParserTest2:test0100_Diet()
13158=CompletionParserTest2:test0117_Method()
13159=CompletionParserTest2:test0143_Diet()
13160=CompletionParserTest2:test0138_Diet()
13161=CompletionParserTest2:test0132_Diet()
13162=CompletionParserTest2:test0060_Method()
13163=CompletionParserTest2:test0012_Method()
13164=CompletionParserTest2:test0176_Diet()
13165=CompletionParserTest2:test0013()
13166=CompletionParserTest2:test0101_Method()
13167=CompletionParserTest2:test0149_Diet()
13168=CompletionParserTest2:test0012_Diet()
13169=CompletionParserTest2:test0018_Diet()
13170=CompletionParserTest2:test0095_Diet()
13171=CompletionParserTest2:test0056_Diet()
13172=CompletionParserTest2:test0051_Diet()
13173=CompletionParserTest2:test0063_Method()
13174=CompletionParserTest2:test0066_Method()
13175=CompletionParserTest2:test0049()
13176=CompletionParserTest2:test0155_Method()
13177=CompletionParserTest2:test0116_Diet()
13178=CompletionParserTest2:test0078_Diet()
13179=CompletionParserTest2:test0147()
13180=CompletionParserTest2:test0171_Diet()
13181=CompletionParserTest2:CompletionParserTest2(String)
13182=CompletionParserTest2:test0079_Method()
13183=CompletionParserTest2:test0037()
13184=CompletionParserTest2:test0050_Method()
13185=CompletionParserTest2:test0038_Method()
13186=CompletionParserTest2:test0168_Method()
13187=CompletionParserTest2:test0068_Diet()
13188=CompletionParserTest2:test0086_Method()
13189=CompletionParserTest2:test0122_Diet()
13190=CompletionParserTest2:test0123_Method()
13191=CompletionParserTest2:test0060_Diet()
13192=CompletionParserTest2:test0061()
13193=CompletionParserTest2:test0030_Diet()
13194=CompletionParserTest2:test0019()
13195=CompletionParserTest2:test0017_Method()
13196=CompletionParserTest2:test0034_Diet()
13197=CompletionParserTest2:test0027_Diet()
13198=CompletionParserTest2:test0023_Diet()
13199=CompletionParserTest2:test0156_Diet()
13200=CompletionParserTest2:test0053_Method()
13201=CompletionParserTest2:test0167_Diet()
13202=CompletionParserTest2:test0075_Diet()
13203=CompletionParserTest2:test0057_Diet()
13204=CompletionParserTest2:test0073()
13205=CompletionParserTest2:test0090_Diet()
13206=CompletionParserTest2:test0128_Method()
13207=CompletionParserTest2:test0053_Diet()
13208=CompletionParserTest2:test0143_Method()
13209=CompletionParserTest2:test0045_Method()
13210=CompletionParserTest2:test0098_Diet()
13211=CompletionParserTest2:test0111_Diet()
13212=CompletionParserTest2:test0115_Diet()
13213=CompletionParserTest2:test0079_Diet()
13214=CompletionParserTest2:test0071_Diet()
13215=CompletionParserTest2:test0078_Method()
13216=CompletionParserTest2:test0137_Diet()
13217=CompletionParserTest2:test0081_Method()
13218=CompletionParserTest2:test0119_Diet()
13219=CompletionParserTest2:test0133_Diet()
13220=CompletionParserTest2:test0126_Diet()
13221=CompletionParserTest2:test0115_Method()
13222=CompletionParserTest2:test0156_Method()
13223=CompletionParserTest2:test0160()
13224=CompletionParserTest2:test0110_Method()
13225=CompletionParserTest2:test0009_Method()
13226=CompletionParserTest2:test0151_Method()
13227=CompletionParserTest2:test0169_Method()
13228=CompletionParserTest2:test0082_Diet()
13229=CompletionParserTest2:test0083_Diet()
13230=CompletionParserTest2:test0065_Method()
13231=CompletionParserTest2:test0074_Method()
13232=CompletionParserTest2:test0104_Diet()
13233=CompletionParserTest2:test0135_Method()
13234=CompletionParserTest2:test0093_Method()
13235=CompletionParserTest2:test0103_Diet()
13236=CompletionParserTest2:test0145_Diet()
13237=CompletionParserTest2:test0170_Diet()
13238=CompletionParserTest2:test0127()
13239=CompletionParserTest2:test0099_Method()
13240=CompletionParserTest2:test0041_Diet()
13241=CompletionParserTest2:test0107_Method()
13242=CompletionParserTest2:test0018_Method()
13243=CompletionParserTest2:test0005_Diet()
13244=CompletionParserTest2:test0094()
13245=CompletionParserTest2:test0139()
13246=CompletionParserTest2:test0033_Method()
13247=CompletionParserTest2:test0131_Method()
13248=CompletionParserTest2:test0038_Diet()
13249=CompletionParserTest2:test0119_Method()
13250=CompletionParserTest2:test0007()
13251=CompletionParserTest2:test0103_Method()
13252=CompletionParserTest2:test0005_Method()
13253=CompletionParserTest2:test0020_Method()
13254=CompletionParserTest2:test0011_Diet()
13255=CompletionParserTest2:test0150_Method()
13256=CompletionParserTest2:test0144_Method()
13257=CompletionParserTest2:test0008_Diet()
13258=CompletionParserTest2:test0175_Diet()
13259=CompletionParserTest2:test0116_Method()
13260=CompletionParserTest2:test0080_Method()
13261=CompletionParserTest2:test0122_Method()
13262=CompletionParserTest2:test0065_Diet()
13263=CompletionParserTest2:test0069_Diet()
13264=CompletionParserTest2:test0076()
13265=CompletionParserTest2:test0157_Method()
13266=CompletionParserTest2:test0077_Method()
13267=CompletionParserTest2:test0095_Method()
13268=CompletionParserTest2:test0129_Method()
13269=CompletionParserTest2:test0090_Method()
13270=CompletionParserTest2:test0034_Method()
13271=CompletionParserTest2:test0129_Diet()
13272=CompletionParserTest2:test0118_Diet()
13273=CompletionParserTest2:test0140()
13274=CompletionParserTest2:test0123_Diet()
13275=CompletionParserTest2:test0125_Diet()
13276=CompletionParserTest2:test0163()
13277=CompletionParserTest2:test0006_Method()
13278=CompletionParserTest2:test0024_Method()
13279=CompletionParserTest2:test0039_Method()
13280=CompletionParserTest2:test0093_Diet()
13281=CompletionParserTest2:test0054_Method()
13282=CompletionParserTest2:test0054_Diet()
13283=CompletionParserTest2:test0152()
13284=CompletionParserTest2:test0097_Diet()
13285=CompletionParserTest2:test0114_Diet()
13286=CompletionParserTest2:test0075_Method()
13287=CompletionParserTest2:test0043()
13288=CompletionParserTest2:test0167_Method()
13289=CompletionParserTest2:test0026_Method()
13290=CompletionParserTest2:test0173_Diet()
13291=CompletionParserTest2:test0141()
13292=CompletionParserTest2:test0164()
13293=CompletionParserTest2:test0067_Method()
13294=CompletionParserTest2:test0092_Method()
13295=CompletionParserTest2:test0042_Diet()
13296=CompletionParserTest2:test0031_Diet()
13297=CompletionParserTest2:test0151_Diet()
13298=CompletionParserTest2:test0020_Diet()
13299=CompletionParserTest2:test0021_Method()
13300=CompletionParserTest2:test0062_Method()
13301=CompletionParserTest2:test0108_Method()
13302=CompletionParserTest2:test0172()
13303=CompletionParserTest2:test0048_Diet()
13304=CompletionParserTest2:test0102_Method()
13305=CompletionParserTest2:test0098_Method()
13306=CompletionParserTest2:test0120_Method()
13307=CompletionParserTest2:test0031_Method()
13308=CompletionParserTest2:test0087_Diet()
13309=CompletionParserTest2:test0107_Diet()
13310=CompletionParserTest2:test0108_Diet()
13311=CompletionParserTest2:test0040()
13312=CompletionParserTest2:test0081_Diet()
13313=CompletionParserTest2:test0086_Diet()
13314=CompletionParserTest2:test0102_Diet()
13315=CompletionParserTest2:test0029_Method()
13316=CompletionParserTest2:test0118_Method()
13317=CompletionParserTest2:test0161()
13318=CompletionParserTest2:test0041_Method()
13319=CompletionParserTest2:test0130_Diet()
13320=CompletionParserTest2:test0130_Method()
13321=CompletionParserTest2:test0171_Method()
13322=CompletionParserTest2:test0009_Diet()
13323=CompletionParserTest2:test0174_Diet()
13324=CompletionParserTest2:test0047_Method()
13325=CompletionParserTest2:test0088_Method()
13326=CompletionParserTest2:test0092_Diet()
13327=CompletionParserTest2:test0059_Diet()
13328=CompletionParserTest2:test0146_Method()
13329=CompletionParserTest2:test0082_Method()
13330=CompletionParserTest2:test0113_Diet()
13331=CompletionParserTest2:test0057_Method()
13332=CompletionParserTest2:test0072_Method()
13333=CompletionParserTest2:test0064()
13334=CompletionParserTest2:test0149_Method()
13335=CompletionParserTest2:test0070_Diet()
13336=CompletionParserTest2:test0146_Diet()
13337=CompletionParserTest2:test0003_Method()
13338=CompletionParserTest2:test0162()
13339=CompletionParserTest2:test0133_Method()
13340=CompletionParserTest2:test0124_Diet()
13341=CompletionParserTest2:test0135_Diet()
13342=CompletionParserTest2:test0026_Diet()
13343=CompletionParserTest2:test0085_Method()
13344=CompletionParserTest2:test0044_Method()
13345=CompletionParserTest2:test0157_Diet()
13346=CompletionParserTest2:test0052()
13347=CompletionParserTest2:test0015_Diet()
13348=CompletionParserTest2:test0168_Diet()
13349=X14:foo()
13350=X01:test()
13351=CreatePackageDeclarationOperation:generateElementAST(ASTRewrite, ICompilationUnit)
13352=CreatePackageDeclarationOperation:CreatePackageDeclarationOperation(String, ICompilationUnit)
13353=CreatePackageDeclarationOperation:initializeDefaultPosition()
13354=CreatePackageDeclarationOperation:verify()
13355=CreatePackageDeclarationOperation:getMainTaskName()
13356=CreatePackageDeclarationOperation:getChildPropertyDescriptor(ASTNode)
13357=CreatePackageDeclarationOperation:generateResultHandle()
13358=CompletionTestsRequestor2:getResults()
13359=CompletionTestsRequestor2:allowAllRequiredProposals()
13360=CompletionTestsRequestor2:setComputeVisibleElements(boolean)
13361=CompletionTestsRequestor2:getContext()
13362=CompletionTestsRequestor2:CompletionTestsRequestor2(boolean, boolean, boolean, boolean, boolean, boolean)
13363=CompletionTestsRequestor2:compare(CompletionProposal, CompletionProposal)
13364=CompletionTestsRequestor2:CompletionTestsRequestor2(boolean, boolean, boolean, boolean, boolean)
13365=CompletionTestsRequestor2:CompletionTestsRequestor2(boolean, boolean, boolean, boolean)
13366=CompletionTestsRequestor2:CompletionTestsRequestor2(boolean, boolean)
13367=CompletionTestsRequestor2:canUseDiamond(int)
13368=CompletionTestsRequestor2:getVisibleLocalVariables()
13369=CompletionTestsRequestor2:CompletionTestsRequestor2(boolean)
13370=CompletionTestsRequestor2:getResultsWithoutSorting()
13371=CompletionTestsRequestor2:CompletionTestsRequestor2()
13372=CompletionTestsRequestor2:toString()
13373=CompletionTestsRequestor2:getStringsResult()
13374=CompletionTestsRequestor2:getVisibleFields()
13375=CompletionTestsRequestor2:acceptContext(CompletionContext)
13376=CompletionTestsRequestor2:accept(CompletionProposal)
13377=CompletionTestsRequestor2:CompletionTestsRequestor2(boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean)
13378=CompletionTestsRequestor2:printProposal(CompletionProposal, int, StringBuffer)
13379=CompletionTestsRequestor2:setComputeEnclosingElement(boolean)
13380=CompletionTestsRequestor2:setAssignableType(String)
13381=CompletionTestsRequestor2:completionFailure(IProblem)
13382=CompletionTestsRequestor2:getElementName(CompletionProposal)
13383=CompletionTestsRequestor2:getCompletionNode()
13384=CompletionTestsRequestor2:CompletionTestsRequestor2(boolean, boolean, boolean)
13385=CompletionTestsRequestor2:getVisibleMethods()
13386=CompletionTestsRequestor2:quickSort(CompletionProposal[], int, int)
13387=CompletionTestsRequestor2:getCompletionNodeParent()
13388=CompletionTestsRequestor2:getProblem()
13389=CompletionTestsRequestor2:printProposal(CompletionProposal)
13390=CompletionTestsRequestor2:getReversedResults()
13391=X03:foo(int, int)
13392=IClassFileDisassembler:disassemble(IClassFileReader, String)
13393=IClassFileDisassembler:disassemble(IClassFileReader, String, int)
13394=Test:foo(int)
13395=InnerEmulationDependency:InnerEmulationDependency(BlockScope, boolean)
13396=INameEnvironmentExtension:findType(char[], char[][], boolean)
13397=Test:foo()
13398=D:foo()
13399=Convertible:convert()
13400=MethodDeclarationMatch:MethodDeclarationMatch(IJavaElement, int, int, int, SearchParticipant, IResource)
13401=View:dump(PrintStream, Scenario)
13402=View:main(String[])
13403=JavaSearchGenericConstructorEquivalentTests:JavaSearchGenericConstructorEquivalentTests(String)
13404=JavaSearchGenericConstructorEquivalentTests:removeFirstTypeArgument(char[])
13405=JavaSearchGenericConstructorEquivalentTests:addResultLine(StringBuffer, char[])
13406=JavaSearchGenericConstructorEquivalentTests:suite()
13407=ISourceManipulation:copy(IJavaElement, IJavaElement, String, boolean, IProgressMonitor)
13408=ISourceManipulation:delete(boolean, IProgressMonitor)
13409=ISourceManipulation:move(IJavaElement, IJavaElement, String, boolean, IProgressMonitor)
13410=ISourceManipulation:rename(String, boolean, IProgressMonitor)
13411=JarFactoryContainer:getServiceClassnamesFromJar(File)
13412=JarFactoryContainer:exists()
13413=JarFactoryContainer:getJarFile()
13414=JarFactoryContainer:readServiceProvider(InputStream, String, Map<String, String>)
13415=JarFactoryContainer:loadFactoryNames()
13416=IncrementalTests:testBug364450()
13417=IncrementalTests:testNewJCL()
13418=IncrementalTests:_testWrongCompilationUnitLocation()
13419=IncrementalTests:testBug334377()
13420=IncrementalTests:test$InTypeName()
13421=IncrementalTests:testMemberTypeCollisionWithBinary2()
13422=IncrementalTests:testAddDuplicateSecondaryType()
13423=IncrementalTests:IncrementalTests(String)
13424=IncrementalTests:testMoveMemberType()
13425=IncrementalTests:testSecondaryType()
13426=IncrementalTests:testRenameMainType()
13427=IncrementalTests:testMoveSecondaryType()
13428=IncrementalTests:testRemoveSecondaryType2()
13429=IncrementalTests:test129316()
13430=IncrementalTests:testDefaultPackage2()
13431=IncrementalTests:testRemoveSecondaryType()
13432=IncrementalTests:testObjectWithSuperInterfaces()
13433=IncrementalTests:testMissingType003()
13434=IncrementalTests:suite()
13435=IncrementalTests:testMemberTypeFromClassFile()
13436=IncrementalTests:testMissingType001()
13437=IncrementalTests:testMovePackage()
13438=IncrementalTests:testMemberTypeOfOtherProject()
13439=IncrementalTests:testMovePackage2()
13440=IncrementalTests:testMissingType002()
13441=IncrementalTests:testDefaultPackage()
13442=IncrementalTests:testMemberTypeCollisionWithBinary()
13443=X01:foo(String)
13444=State:State()
13445=State:tagAsNoopBuild()
13446=State:isSourceFolderEmpty(IContainer)
13447=State:removePackage(IResourceDelta)
13448=State:removeQualifiedTypeName(String)
13449=State:wasStructurallyChanged(IProject, State)
13450=State:getDefinedTypeNamesFor(String)
13451=State:getReferences()
13452=State:record(String, char[][][], char[][], char[][], char[], ArrayList)
13453=State:isDuplicateLocator(String, String)
13454=State:recordStructuralDependency(IProject, State)
13455=State:writeRestriction(AccessRuleSet, DataOutputStream)
13456=State:tagAsStructurallyChanged()
13457=State:writeNames(char[][], DataOutputStream)
13458=State:write(DataOutputStream)
13459=State:isKnownPackage(String)
13460=State:computeStructuralBuildTime(long)
13461=State:removeLocator(String)
13462=State:readName(DataInputStream)
13463=State:copyFrom(State)
13464=State:State(JavaBuilder)
13465=State:readRestriction(DataInputStream)
13466=State:wasStructurallyChanged(String)
13467=State:getStructurallyChangedTypes(State)
13468=State:isKnownType(String)
13469=State:readNames(DataInputStream)
13470=State:read(IProject, DataInputStream)
13471=State:wasNoopBuild()
13472=State:writeName(char[], DataOutputStream)
13473=State:toString()
13474=State:recordLocatorForType(String, String)
13475=X:X()
13476=X:bar(int, String)
13477=X:main(String[])
13478=BPThread:isSuspended()
13479=BPThread:suspend(int)
13480=BPThread:toString()
13481=BPThread:start(Runnable)
13482=BPThread:runToBP(int)
13483=BPThread:BPThread(String)
13484=BPThread:runToEnd()
13485=BPThread:resume()
13486=Java8ElementsTests:testTypeAnnotations8()
13487=Java8ElementsTests:testPackageAnnotations()
13488=Java8ElementsTests:testTypeAnnotations7()
13489=Java8ElementsTests:testTypeAnnotations26WithJavac()
13490=Java8ElementsTests:testTypeAnnotations16WithJavac()
13491=Java8ElementsTests:_testTypeAnnotations6WithJavac()
13492=Java8ElementsTests:testRepeatedAnnotations22()
13493=Java8ElementsTests:testTypeAnnotations6()
13494=Java8ElementsTests:testRepeatedAnnotations19WithJavac()
13495=Java8ElementsTests:testTypeAnnotations10()
13496=Java8ElementsTests:_testTypeAnnotations11WithJavac()
13497=Java8ElementsTests:testRepeatedAnnotations25()
13498=Java8ElementsTests:testTypeAnnotations5()
13499=Java8ElementsTests:testTypeAnnotations11()
13500=Java8ElementsTests:testRepeatedAnnotations24WithJavac()
13501=Java8ElementsTests:_testTypeAnnotations27()
13502=Java8ElementsTests:testRepeatedAnnotations24()
13503=Java8ElementsTests:testTypeAnnotations12WithJavac()
13504=Java8ElementsTests:testTypeAnnotations12()
13505=Java8ElementsTests:_testTypeAnnotations9WithJavac()
13506=Java8ElementsTests:suite()
13507=Java8ElementsTests:testTypeAnnotations23()
13508=Java8ElementsTests:testTypeAnnotations()
13509=Java8ElementsTests:testRepeatedAnnotations21WithJavac()
13510=Java8ElementsTests:_testTypeAnnotations4WithJavac()
13511=Java8ElementsTests:testTypeAnnotations13()
13512=Java8ElementsTests:testTypeAnnotations1WithJavac()
13513=Java8ElementsTests:_testTypeAnnotations8WithJavac()
13514=Java8ElementsTests:testTypeAnnotations14()
13515=Java8ElementsTests:_testTypeAnnotations5WithJavac()
13516=Java8ElementsTests:testTypeAnnotations13WithJavac()
13517=Java8ElementsTests:testRepeatedAnnotations21()
13518=Java8ElementsTests:testLambdaSpecificsWithJavac()
13519=Java8ElementsTests:testTypeAnnotations9()
13520=Java8ElementsTests:_testRepeatedAnnotations22WithJavac()
13521=Java8ElementsTests:testTypeAnnotations15()
13522=Java8ElementsTests:testTypeAnnotations26()
13523=Java8ElementsTests:testLambdaSpecifics()
13524=Java8ElementsTests:testRepeatedAnnotations25WithJavac()
13525=Java8ElementsTests:testRepeatedAnnotations20()
13526=Java8ElementsTests:_testTypeAnnotationsWithJavac()
13527=Java8ElementsTests:internalTest(JavaCompiler, String, String)
13528=Java8ElementsTests:testTypeAnnotations15WithJavac()
13529=Java8ElementsTests:testTypeAnnotations16()
13530=Java8ElementsTests:setUp()
13531=Java8ElementsTests:tearDown()
13532=Java8ElementsTests:_testTypeAnnotations7WithJavac()
13533=Java8ElementsTests:testRepeatedAnnotations19()
13534=Java8ElementsTests:_testTypeAnnotations14WithJavac()
13535=Java8ElementsTests:_testTypeAnnotations2WithJavac()
13536=Java8ElementsTests:testRepeatedAnnotations20WithJavac()
13537=Java8ElementsTests:testTypeAnnotations23WithJavac()
13538=Java8ElementsTests:canRunJava8()
13539=Java8ElementsTests:internalTest(JavaCompiler, String, String, String, String)
13540=Java8ElementsTests:testRepeatedAnnotations17WithJavac()
13541=Java8ElementsTests:testTypeAnnotations10WithJavac()
13542=Java8ElementsTests:testTypeAnnotations4()
13543=Java8ElementsTests:_testSE8SpecificsWithJavac()
13544=Java8ElementsTests:_testTypeAnnotations3WithJavac()
13545=Java8ElementsTests:testRepeatedAnnotations18WithJavac()
13546=Java8ElementsTests:testTypeAnnotations3()
13547=Java8ElementsTests:_testTypeAnnotations27WithJavac()
13548=Java8ElementsTests:internalTest(JavaCompiler, String, String, String)
13549=Java8ElementsTests:testTypeAnnotations2()
13550=Java8ElementsTests:testRepeatedAnnotations18()
13551=Java8ElementsTests:testSE8Specifics()
13552=Java8ElementsTests:testPackageAnnotationsWithJavac()
13553=Java8ElementsTests:testTypeAnnotations1()
13554=Java8ElementsTests:testRepeatedAnnotations17()
13555=QualifiedAllocationExpression:QualifiedAllocationExpression()
13556=QualifiedAllocationExpression:manageEnclosingInstanceAccessIfNecessary(BlockScope, FlowInfo)
13557=QualifiedAllocationExpression:QualifiedAllocationExpression(TypeDeclaration)
13558=QualifiedAllocationExpression:enclosingInstance()
13559=QualifiedAllocationExpression:resolveType(BlockScope)
13560=QualifiedAllocationExpression:printExpression(int, StringBuffer)
13561=QualifiedAllocationExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
13562=QualifiedAllocationExpression:isSuperAccess()
13563=QualifiedAllocationExpression:traverse(ASTVisitor, BlockScope)
13564=QualifiedAllocationExpression:generateCode(BlockScope, CodeStream, boolean)
13565=FC47209:FC47209(String)
13566=FC47209:m47209(int)
13567=CodeFormatterApplication:start(IApplicationContext)
13568=CodeFormatterApplication:formatFile(File, CodeFormatter)
13569=CodeFormatterApplication:readConfig(String)
13570=CodeFormatterApplication:Messages:bind(String, Object)
13571=CodeFormatterApplication:Messages:bind(String, Object, Object)
13572=CodeFormatterApplication:Messages:bind(String)
13573=CodeFormatterApplication:stop()
13574=CodeFormatterApplication:formatDirTree(File, CodeFormatter)
13575=CodeFormatterApplication:displayHelp()
13576=CodeFormatterApplication:displayHelp(String)
13577=CodeFormatterApplication:processCommandLine(String[])
13578=CodeFormatterApplication:Messages:bind(String, Object[])
13579=R4:simple_name()
13580=R4:qualified_name(g1.t.s.def.Generic<Object>.Member<Object>, g1.t.s.def.Generic<Exception>.Member<Exception>, g1.t.s.def.Generic<? extends Throwable>.Member<? extends Throwable>, g1.t.s.def.Generic<? super RuntimeException>.Member<? super RuntimeException>)
13581=ClasspathAttribute:getName()
13582=ClasspathAttribute:getValue()
13583=ClasspathAttribute:toString()
13584=ClasspathAttribute:hashCode()
13585=ClasspathAttribute:ClasspathAttribute(String, String)
13586=ClasspathAttribute:equals(Object)
13587=PackageFragmentRootInfo:getNonJavaResources(IJavaProject, IResource, PackageFragmentRoot)
13588=PackageFragmentRootInfo:computeNonJavaResources(IResource, PackageFragmentRoot)
13589=PackageFragmentRootInfo:getRootKind()
13590=PackageFragmentRootInfo:PackageFragmentRootInfo()
13591=PackageFragmentRootInfo:setNonJavaResources(Object[])
13592=PackageFragmentRootInfo:ignoreOptionalProblems(PackageFragmentRoot)
13593=PackageFragmentRootInfo:getSourceMapper()
13594=PackageFragmentRootInfo:setSourceMapper(SourceMapper)
13595=PackageFragmentRootInfo:computeFolderNonJavaResources(IPackageFragmentRoot, IContainer, char[][], char[][])
13596=PackageFragmentRootInfo:setRootKind(int)
13597=PackageFragmentRootInfo:isClasspathEntry(IPath, IClasspathEntry[])
13598=ConstructorDeclaration:resolveJavadoc()
13599=ConstructorDeclaration:isRecursive(ArrayList)
13600=ConstructorDeclaration:internalGenerateCode(ClassScope, ClassFile)
13601=ConstructorDeclaration:generateCode(ClassScope, ClassFile)
13602=ConstructorDeclaration:typeParameters()
13603=ConstructorDeclaration:resolveStatements()
13604=ConstructorDeclaration:isInitializationMethod()
13605=ConstructorDeclaration:isValueProvidedUsingAnnotation(FieldDeclaration)
13606=ConstructorDeclaration:getAllAnnotationContexts(int, List)
13607=ConstructorDeclaration:isConstructor()
13608=ConstructorDeclaration:generateSyntheticFieldInitializationsIfNecessary(MethodScope, CodeStream, ReferenceBinding)
13609=ConstructorDeclaration:analyseCode(ClassScope, InitializationFlowContext, FlowInfo, int)
13610=ConstructorDeclaration:parseStatements(Parser, CompilationUnitDeclaration)
13611=ConstructorDeclaration:isDefaultConstructor()
13612=ConstructorDeclaration:printBody(int, StringBuffer)
13613=ConstructorDeclaration:ConstructorDeclaration(CompilationResult)
13614=ConstructorDeclaration:traverse(ASTVisitor, ClassScope)
13615=CreateMembersTests:test007()
13616=CreateMembersTests:CreateMembersTests(String)
13617=CreateMembersTests:suite()
13618=CreateMembersTests:tearDownSuite()
13619=CreateMembersTests:setUpSuite()
13620=CreateMembersTests:test002()
13621=CreateMembersTests:test001()
13622=CreateMembersTests:test004()
13623=CreateMembersTests:test003()
13624=CreateMembersTests:test006()
13625=CreateMembersTests:test005()
13626=X02:test()
13627=Test:main(String[])
13628=A:m()
13629=A:X:X(X)
13630=A:A()
13631=A:A(A)
13632=PrimitiveTypeImpl:equals(Object)
13633=PrimitiveTypeImpl:isSubTypeCompatible(EclipseMirrorType)
13634=PrimitiveTypeImpl:kind()
13635=PrimitiveTypeImpl:toString()
13636=PrimitiveTypeImpl:getKind()
13637=PrimitiveTypeImpl:isAssignmentCompatible(EclipseMirrorType)
13638=PrimitiveTypeImpl:getTypeBinding()
13639=PrimitiveTypeImpl:PrimitiveTypeImpl(ITypeBinding)
13640=PrimitiveTypeImpl:getEnvironment()
13641=PrimitiveTypeImpl:accept(TypeVisitor)
13642=ImportBinding:readableName()
13643=ImportBinding:kind()
13644=ImportBinding:ImportBinding(char[][], boolean, Binding, ImportReference)
13645=ImportBinding:toString()
13646=ImportBinding:isStatic()
13647=X:foo()
13648=X:main(String[])
13649=Round2GenAnnotationProcessor:process()
13650=Round2GenAnnotationProcessor:Round2GenAnnotationProcessor(AnnotationProcessorEnvironment)
13651=CompilerInvocationTests:SubstringDetector:SubstringDetector(String)
13652=CompilerInvocationTests:test015_files_access_write()
13653=CompilerInvocationTests:test010_inappropriate_encoding_diagnosis()
13654=CompilerInvocationTests:test011_inappropriate_encoding_diagnosis()
13655=CompilerInvocationTests:test007_options_consumption()
13656=CompilerInvocationTests:GetLocationDetector:getLocation(Location)
13657=CompilerInvocationTests:testClass()
13658=CompilerInvocationTests:GetJavaFileDetector:getJavaFileObjects(File)
13659=CompilerInvocationTests:test008_options_consumption()
13660=CompilerInvocationTests:_test020_sourcepath_with_destination()
13661=CompilerInvocationTests:test005_dash_d_option_custom_file_manager()
13662=CompilerInvocationTests:GetJavaFileForOutputDetector:GetJavaFileForOutputDetector(StandardJavaFileManager, String)
13663=CompilerInvocationTests:_test014_files_access_read()
13664=CompilerInvocationTests:_test013_files_access_read()
13665=CompilerInvocationTests:GetJavaFileForInputDetector:GetJavaFileForInputDetector(StandardJavaFileManager, String, Kind)
13666=CompilerInvocationTests:test019_sourcepath_without_destination()
13667=CompilerInvocationTests:GetJavaFileDetector:detector(JavaFileObject)
13668=CompilerInvocationTests:GetJavaFileDetector:GetJavaFileDetector(StandardJavaFileManager)
13669=CompilerInvocationTests:test012_files_access_read()
13670=CompilerInvocationTests:_test018_sourcepath_with_destination()
13671=CompilerInvocationTests:GetJavaFileForOutputDetector:GetJavaFileForOutputDetector(StandardJavaFileManager)
13672=CompilerInvocationTests:runTest(boolean, String[], StandardJavaFileManager, List<String>, String[], String, String, boolean, String[])
13673=CompilerInvocationTests:GetJavaFileDetector:getJavaFileObjects(String)
13674=CompilerInvocationTests:GetJavaFileForInputDetector:getJavaFileForInput(Location, String, Kind)
13675=CompilerInvocationTests:CompilerInvocationTests(String)
13676=CompilerInvocationTests:GetJavaFileForInputDetector:GetJavaFileForInputDetector(StandardJavaFileManager)
13677=CompilerInvocationTests:SetLocationDetector:matchFound()
13678=CompilerInvocationTests:GetJavaFileForOutputDetector:getFileForOutput(Location, String, String, FileObject)
13679=CompilerInvocationTests:test001_basic()
13680=CompilerInvocationTests:GetJavaFileForOutputDetector:detector(JavaFileObject)
13681=CompilerInvocationTests:_test023_output_streams()
13682=CompilerInvocationTests:GetLocationDetector:matchFound()
13683=CompilerInvocationTests:GetJavaFileDetector:getJavaFileObjectsFromStrings(Iterable<String>)
13684=CompilerInvocationTests:test002_dash_d_option()
13685=CompilerInvocationTests:test004_no_dash_d_option()
13686=CompilerInvocationTests:SetLocationDetector:setLocation(Location, Iterable<? extends File>)
13687=CompilerInvocationTests:test022_output_streams()
13688=CompilerInvocationTests:SubstringDetector:matchFound()
13689=CompilerInvocationTests:suite()
13690=CompilerInvocationTests:test017_sourcepath_without_destination()
13691=CompilerInvocationTests:checkClassFiles(String[])
13692=CompilerInvocationTests:GetJavaFileForInputDetector:getFileForInput(Location, String, String)
13693=CompilerInvocationTests:compareFileLocations(String[], Iterator<? extends File>)
13694=CompilerInvocationTests:GetJavaFileDetector:getJavaFileObjectsFromFiles(Iterable<? extends File>)
13695=CompilerInvocationTests:GetJavaFileForInputDetector:detector(JavaFileObject)
13696=CompilerInvocationTests:SetLocationDetector:SetLocationDetector(StandardJavaFileManager, Location)
13697=CompilerInvocationTests:SubstringDetector:log(LogRecord)
13698=CompilerInvocationTests:GetJavaFileDetector:GetJavaFileDetector(StandardJavaFileManager, String)
13699=CompilerInvocationTests:test006_no_dash_d_option_custom_file_manager()
13700=CompilerInvocationTests:GetJavaFileDetector:list(Location, String, Set<Kind>, boolean)
13701=CompilerInvocationTests:test009_options_consumption()
13702=CompilerInvocationTests:GetLocationDetector:GetLocationDetector(StandardJavaFileManager, Location)
13703=CompilerInvocationTests:test003_dash_d_option()
13704=CompilerInvocationTests:test021_output_streams()
13705=CompilerInvocationTests:GetJavaFileForOutputDetector:getJavaFileForOutput(Location, String, Kind, FileObject)
13706=CompilerInvocationTests:test016_files_access_write()
13707=DietRecoveryTest:test08()
13708=DietRecoveryTest:test61()
13709=DietRecoveryTest:test84()
13710=DietRecoveryTest:test100()
13711=DietRecoveryTest:test123()
13712=DietRecoveryTest:test50()
13713=DietRecoveryTest:test73()
13714=DietRecoveryTest:test96()
13715=DietRecoveryTest:test112()
13716=DietRecoveryTest:test07()
13717=DietRecoveryTest:test122()
13718=DietRecoveryTest:test60()
13719=DietRecoveryTest:test83()
13720=DietRecoveryTest:test19()
13721=DietRecoveryTest:test111()
13722=DietRecoveryTest:test95()
13723=DietRecoveryTest:test72()
13724=DietRecoveryTest:_test101()
13725=DietRecoveryTest:_test124()
13726=DietRecoveryTest:test29()
13727=DietRecoveryTest:test06()
13728=DietRecoveryTest:test125()
13729=DietRecoveryTest:test82()
13730=DietRecoveryTest:test102()
13731=DietRecoveryTest:test18()
13732=DietRecoveryTest:test114()
13733=DietRecoveryTest:test71()
13734=DietRecoveryTest:test94()
13735=DietRecoveryTest:test28()
13736=DietRecoveryTest:test05()
13737=DietRecoveryTest:test81()
13738=DietRecoveryTest:test17()
13739=DietRecoveryTest:test70()
13740=DietRecoveryTest:test113()
13741=DietRecoveryTest:test93()
13742=DietRecoveryTest:test42()
13743=DietRecoveryTest:test65()
13744=DietRecoveryTest:test88()
13745=DietRecoveryTest:test31()
13746=DietRecoveryTest:test54()
13747=DietRecoveryTest:test77()
13748=DietRecoveryTest:test64()
13749=DietRecoveryTest:test87()
13750=DietRecoveryTest:test41()
13751=DietRecoveryTest:test53()
13752=DietRecoveryTest:test99()
13753=DietRecoveryTest:test76()
13754=DietRecoveryTest:_test32()
13755=DietRecoveryTest:test405778()
13756=DietRecoveryTest:test456861()
13757=DietRecoveryTest:test30()
13758=DietRecoveryTest:test86()
13759=DietRecoveryTest:test121()
13760=DietRecoveryTest:test40()
13761=DietRecoveryTest:test63()
13762=DietRecoveryTest:test75()
13763=DietRecoveryTest:test98()
13764=DietRecoveryTest:test110()
13765=DietRecoveryTest:test52()
13766=DietRecoveryTest:test09()
13767=DietRecoveryTest:test85()
13768=DietRecoveryTest:test62()
13769=DietRecoveryTest:test120()
13770=DietRecoveryTest:test97()
13771=DietRecoveryTest:test74()
13772=DietRecoveryTest:checkParse(char[], String, String, String, String, String, String)
13773=DietRecoveryTest:test51()
13774=DietRecoveryTest:test46()
13775=DietRecoveryTest:test69()
13776=DietRecoveryTest:test108()
13777=DietRecoveryTest:test23()
13778=DietRecoveryTest:test35()
13779=DietRecoveryTest:test58()
13780=DietRecoveryTest:test405778a()
13781=DietRecoveryTest:test117_2()
13782=DietRecoveryTest:test12()
13783=DietRecoveryTest:test45()
13784=DietRecoveryTest:test68()
13785=DietRecoveryTest:test107()
13786=DietRecoveryTest:test22()
13787=DietRecoveryTest:test34()
13788=DietRecoveryTest:test57()
13789=DietRecoveryTest:suite()
13790=DietRecoveryTest:test119()
13791=DietRecoveryTest:test11()
13792=DietRecoveryTest:test44()
13793=DietRecoveryTest:test67()
13794=DietRecoveryTest:test21()
13795=DietRecoveryTest:test33()
13796=DietRecoveryTest:test56()
13797=DietRecoveryTest:test79()
13798=DietRecoveryTest:test10()
13799=DietRecoveryTest:test43()
13800=DietRecoveryTest:test89()
13801=DietRecoveryTest:test66()
13802=DietRecoveryTest:test109()
13803=DietRecoveryTest:test20()
13804=DietRecoveryTest:DietRecoveryTest(String)
13805=DietRecoveryTest:test78()
13806=DietRecoveryTest:test55()
13807=DietRecoveryTest:test04()
13808=DietRecoveryTest:test27()
13809=DietRecoveryTest:test80()
13810=DietRecoveryTest:test104()
13811=DietRecoveryTest:test127()
13812=DietRecoveryTest:test39()
13813=DietRecoveryTest:test16()
13814=DietRecoveryTest:test92()
13815=DietRecoveryTest:test116()
13816=DietRecoveryTest:test49()
13817=DietRecoveryTest:test103()
13818=DietRecoveryTest:test126()
13819=DietRecoveryTest:test26()
13820=DietRecoveryTest:test03()
13821=DietRecoveryTest:test38()
13822=DietRecoveryTest:test115()
13823=DietRecoveryTest:test15()
13824=DietRecoveryTest:test91()
13825=DietRecoveryTest:test48()
13826=DietRecoveryTest:test02()
13827=DietRecoveryTest:test25()
13828=DietRecoveryTest:test106()
13829=DietRecoveryTest:test37()
13830=DietRecoveryTest:test118()
13831=DietRecoveryTest:test14()
13832=DietRecoveryTest:test90()
13833=DietRecoveryTest:test47()
13834=DietRecoveryTest:test105()
13835=DietRecoveryTest:test128()
13836=DietRecoveryTest:test24()
13837=DietRecoveryTest:test01()
13838=DietRecoveryTest:test36()
13839=DietRecoveryTest:test59()
13840=DietRecoveryTest:test117()
13841=DietRecoveryTest:test13()
13842=A:foo()
13843=A:foo()
13844=AnnotationTypeMemberDeclaration:propertyDescriptors(int)
13845=AnnotationTypeMemberDeclaration:internalModifiers2Property()
13846=AnnotationTypeMemberDeclaration:memSize()
13847=AnnotationTypeMemberDeclaration:internalStructuralPropertiesForType(int)
13848=AnnotationTypeMemberDeclaration:accept0(ASTVisitor)
13849=AnnotationTypeMemberDeclaration:clone0(AST)
13850=AnnotationTypeMemberDeclaration:setName(SimpleName)
13851=AnnotationTypeMemberDeclaration:setType(Type)
13852=AnnotationTypeMemberDeclaration:internalJavadocProperty()
13853=AnnotationTypeMemberDeclaration:setDefault(Expression)
13854=AnnotationTypeMemberDeclaration:internalGetChildListProperty(ChildListPropertyDescriptor)
13855=AnnotationTypeMemberDeclaration:getName()
13856=AnnotationTypeMemberDeclaration:AnnotationTypeMemberDeclaration(AST)
13857=AnnotationTypeMemberDeclaration:getNodeType0()
13858=AnnotationTypeMemberDeclaration:resolveBinding()
13859=AnnotationTypeMemberDeclaration:treeSize()
13860=AnnotationTypeMemberDeclaration:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
13861=AnnotationTypeMemberDeclaration:subtreeMatch0(ASTMatcher, Object)
13862=AnnotationTypeMemberDeclaration:getType()
13863=AnnotationTypeMemberDeclaration:internalModifiersProperty()
13864=AnnotationTypeMemberDeclaration:getDefault()
13865=TestSuitePanel:TestTreeCellRenderer:loadIcons()
13866=TestSuitePanel:TestTreeCellRenderer:getTreeCellRendererComponent(JTree, Object, boolean, boolean, boolean, int, boolean)
13867=TestSuitePanel:getTree()
13868=TestSuitePanel:showTestTree(Test)
13869=TestSuitePanel:fireTestChanged(Test, boolean)
13870=TestSuitePanel:startTest(Test)
13871=TestSuitePanel:endTest(Test)
13872=TestSuitePanel:TestTreeCellRenderer:TestTreeCellRenderer()
13873=TestSuitePanel:TestTreeCellRenderer:stripParenthesis(Object)
13874=TestSuitePanel:addError(Test, Throwable)
13875=TestSuitePanel:addFailure(Test, AssertionFailedError)
13876=TestSuitePanel:getSelectedTest()
13877=TestSuitePanel:TestSuitePanel()
13878=DefaultProblem:DefaultProblem(char[], String, int, String[], int, int, int, int)
13879=DefaultProblem:setSourceLineNumber(int)
13880=DefaultProblem:getOriginatingFileName()
13881=DefaultProblem:getArguments()
13882=DefaultProblem:getID()
13883=DefaultProblem:errorReportSource(char[])
13884=DefaultProblem:isError()
13885=DefaultProblem:setOriginatingFileName(char[])
13886=DefaultProblem:getSourceEnd()
13887=DefaultProblem:getSourceStart()
13888=DefaultProblem:toString()
13889=DefaultProblem:getMessage()
13890=DefaultProblem:setSourceStart(int)
13891=DefaultProblem:getSourceLineNumber()
13892=DefaultProblem:setSourceEnd(int)
13893=DefaultProblem:isWarning()
13894=TypeNameMatch:getModifiers()
13895=TypeNameMatch:getTypeQualifiedName()
13896=TypeNameMatch:getSimpleTypeName()
13897=TypeNameMatch:getFullyQualifiedName()
13898=TypeNameMatch:getPackageFragmentRoot()
13899=TypeNameMatch:getPackageName()
13900=TypeNameMatch:getType()
13901=TypeNameMatch:getTypeContainerName()
13902=TypeNameMatch:getAccessibility()
13903=AllTests:suite()
13904=StaticFinalTests:testDouble()
13905=StaticFinalTests:StaticFinalTests(String)
13906=StaticFinalTests:testInt()
13907=StaticFinalTests:testChar()
13908=StaticFinalTests:testByte()
13909=StaticFinalTests:testString()
13910=StaticFinalTests:testLong()
13911=StaticFinalTests:suite()
13912=StaticFinalTests:testFloat()
13913=StaticFinalTests:testShort()
13914=StaticFinalTests:testBoolean()
13915=IDOMField:setName(String)
13916=IDOMField:setInitializer(String)
13917=IDOMField:getType()
13918=IDOMField:getInitializer()
13919=IDOMField:setType(String)
13920=IDOMField:getName()
13921=X06:foo()
13922=BatchGenAnnotationFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
13923=BatchGenAnnotationFactory:BatchGen1AnnotationProcessor:process()
13924=BatchGenAnnotationFactory:BatchGen0AnnotationProcessor:process()
13925=BatchGenAnnotationFactory:supportedOptions()
13926=BatchGenAnnotationFactory:BatchGen0AnnotationProcessor:BatchGen0AnnotationProcessor(AnnotationProcessorEnvironment)
13927=BatchGenAnnotationFactory:BatchGen1AnnotationProcessor:BatchGen1AnnotationProcessor(AnnotationProcessorEnvironment)
13928=BatchGenAnnotationFactory:supportedAnnotationTypes()
13929=X:foo()
13930=X:main(String[])
13931=XXX:foo()
13932=StringLiteralConcatenation:traverse(ASTVisitor, BlockScope)
13933=StringLiteralConcatenation:source()
13934=StringLiteralConcatenation:extendsWith(StringLiteral)
13935=StringLiteralConcatenation:StringLiteralConcatenation(StringLiteral, StringLiteral)
13936=StringLiteralConcatenation:printExpression(int, StringBuffer)
13937=ICompilationUnit:getContents()
13938=ICompilationUnit:getMainTypeName()
13939=ICompilationUnit:getPackageName()
13940=ProcessorInfo:ProcessorInfo(Processor)
13941=ProcessorInfo:hashCode()
13942=ProcessorInfo:toString()
13943=ProcessorInfo:supportsStar()
13944=ProcessorInfo:equals(Object)
13945=ProcessorInfo:reset()
13946=ProcessorInfo:getSupportedAnnotationTypesAsString()
13947=ProcessorInfo:computeSupportedAnnotations(Set<TypeElement>, Set<TypeElement>)
13948=DoStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
13949=DoStatement:generateCode(BlockScope, CodeStream)
13950=DoStatement:traverse(ASTVisitor, BlockScope)
13951=DoStatement:printStatement(int, StringBuffer)
13952=DoStatement:resolve(BlockScope)
13953=DoStatement:DoStatement(Expression, Statement, int, int)
13954=Test:foo()
13955=DualParseSyntaxErrorTest:test10()
13956=DualParseSyntaxErrorTest:test03()
13957=DualParseSyntaxErrorTest:test04()
13958=DualParseSyntaxErrorTest:DualParseSyntaxErrorTest(String)
13959=DualParseSyntaxErrorTest:test01()
13960=DualParseSyntaxErrorTest:test02()
13961=DualParseSyntaxErrorTest:test07()
13962=DualParseSyntaxErrorTest:test08()
13963=DualParseSyntaxErrorTest:test05()
13964=DualParseSyntaxErrorTest:test06()
13965=DualParseSyntaxErrorTest:checkParse(char[], String, String)
13966=DualParseSyntaxErrorTest:test09()
13967=SourceModifierTest:SourceModifierTest(String)
13968=SourceModifierTest:testRemoveIndents()
13969=SourceModifierTest:suite()
13970=SourceModifierTest:testAddIndents()
13971=RecoveredUnit:updateSourceEndIfNecessary(int, int)
13972=RecoveredUnit:sourceEnd()
13973=RecoveredUnit:toString(int)
13974=RecoveredUnit:add(FieldDeclaration, int)
13975=RecoveredUnit:RecoveredUnit(CompilationUnitDeclaration, int, Parser)
13976=RecoveredUnit:add(TypeDeclaration, int)
13977=RecoveredUnit:add(ImportReference, int)
13978=RecoveredUnit:updateParseTree()
13979=RecoveredUnit:updatedCompilationUnitDeclaration()
13980=RecoveredUnit:add(AbstractMethodDeclaration, int)
13981=RecoveredUnit:parseTree()
13982=IVariableBinding:isEffectivelyFinal()
13983=IVariableBinding:getType()
13984=IVariableBinding:getDeclaringClass()
13985=IVariableBinding:getVariableDeclaration()
13986=IVariableBinding:getDeclaringMethod()
13987=IVariableBinding:getConstantValue()
13988=IVariableBinding:isField()
13989=IVariableBinding:getVariableId()
13990=IVariableBinding:getName()
13991=IVariableBinding:isEnumConstant()
13992=IVariableBinding:isParameter()
13993=Test:foo(Object)
13994=Test:foo(String[])
13995=Test:bar()
13996=Scanner:extractInt(char[], int, int)
13997=Scanner:maybeAtReferenceExpression()
13998=Scanner:optimizedCurrentTokenSource1()
13999=Scanner:getNextUnicodeChar()
14000=Scanner:getNextCharAsJavaIdentifierPartWithBoundCheck()
14001=Scanner:getNextToken0()
14002=Scanner:VanguardParser:VanguardParser(VanguardScanner)
14003=Scanner:isKeyword(int)
14004=Scanner:scanEscapeCharacter()
14005=Scanner:isIdentifier(int)
14006=Scanner:getNextToken()
14007=Scanner:getNextCharAsDigit()
14008=Scanner:unicodeInitializeBuffer(int)
14009=Scanner:getCurrentIdentifierSource()
14010=Scanner:isAtAssistIdentifier()
14011=Scanner:setSource(char[], CompilationResult)
14012=Scanner:toString()
14013=Scanner:getNextChar(char, char)
14014=Scanner:getNextChar()
14015=Scanner:ungetToken(int)
14016=Scanner:atTypeAnnotation()
14017=Scanner:getVanguardParser()
14018=Scanner:getLineStart(int)
14019=Scanner:getCurrentTokenString()
14020=Scanner:getRawTokenSourceEnd()
14021=Scanner:pushUnicodeLineSeparator()
14022=Scanner:VanguardParser:parse(Goal)
14023=Scanner:getCurrentStringLiteral()
14024=Scanner:VanguardScanner:VanguardScanner(long, long)
14025=Scanner:optimizedCurrentTokenSource5()
14026=Scanner:getSource()
14027=Scanner:maybeAtLambdaOrCast()
14028=Scanner:getIdentityComparisonLines()
14029=Scanner:optimizedCurrentTokenSource4()
14030=Scanner:consumeDigits(int, boolean)
14031=Scanner:getCurrentTokenSourceString()
14032=Scanner:unicodeStore()
14033=Scanner:consumeDigits0(int, int, int, boolean)
14034=Scanner:getLineEnds()
14035=Scanner:optimizedCurrentTokenSource3()
14036=Scanner:atEnd()
14037=Scanner:getLineNumber(int)
14038=Scanner:disambiguatedToken(int)
14039=Scanner:setSource(CompilationResult)
14040=Scanner:maybeAtEllipsisAnnotationsStart()
14041=Scanner:Scanner(boolean, boolean, boolean, long, char[][], char[][], boolean)
14042=Scanner:jumpOverMethodBody()
14043=Scanner:optimizedCurrentTokenSource2()
14044=Scanner:isLiteral(int)
14045=Scanner:getRawTokenSource()
14046=Scanner:getNextCharAsJavaIdentifierPart()
14047=Scanner:Goal:hasBeenReached(int, int)
14048=Scanner:consumeDigits(int)
14049=Scanner:getNextCharWithBoundChecks()
14050=Scanner:Goal:followSetOfCast()
14051=Scanner:scanIdentifier()
14052=Scanner:checkTaskTag(int, int)
14053=Scanner:jumpOverUnicodeWhiteSpace()
14054=Scanner:pushLineSeparator()
14055=Scanner:parseTags()
14056=Scanner:Scanner(boolean, boolean, boolean, long, long, char[][], char[][], boolean)
14057=Scanner:getNextChar(char)
14058=Scanner:isFirstTag()
14059=Scanner:getCurrentTokenSource()
14060=Scanner:toStringAction(int)
14061=Scanner:resetTo(int, int)
14062=Scanner:setSource(char[])
14063=Scanner:optimizedCurrentTokenSource6()
14064=Scanner:unicodeStore(char)
14065=Scanner:getCurrentTokenStartPosition()
14066=Scanner:internalScanIdentifierOrKeyword(int, int, char[])
14067=Scanner:getNextCharAsDigit(int)
14068=Scanner:scanIdentifierOrKeyword()
14069=Scanner:recordComment(int)
14070=Scanner:scanNumber(boolean)
14071=Scanner:VanguardScanner:getNextToken()
14072=Scanner:getNLSTags()
14073=Scanner:getLineEnd(int)
14074=Scanner:Goal:Goal(int, int[], int)
14075=Scanner:scanIdentifierOrKeywordWithBoundCheck()
14076=Scanner:getCurrentTokenEndPosition()
14077=Scanner:VanguardParser:toString()
14078=Scanner:setActiveParser(ConflictedParser)
14079=Scanner:fastForward(Statement)
14080=Scanner:Scanner()
14081=X210070:foo()
14082=CompletionWithMissingTypesTests2:setUpSuite()
14083=CompletionWithMissingTypesTests2:suite()
14084=CompletionWithMissingTypesTests2:CompletionWithMissingTypesTests2(String)
14085=CompletionWithMissingTypesTests2:createFile(File, String, String)
14086=CompletionWithMissingTypesTests2:createDirectory(File, String)
14087=CompletionWithMissingTypesTests2:test0001()
14088=CompletionWithMissingTypesTests2:tearDownSuite()
14089=CompletionWithMissingTypesTests2:test0002()
14090=CompletionWithMissingTypesTests2:assertResults(String, String)
14091=A:getColumnDataCell(int)
14092=IgnoreOptionalProblemsFromSourceFoldersTests:test006()
14093=IgnoreOptionalProblemsFromSourceFoldersTests:IgnoreOptionalProblemsFromSourceFoldersTests(String)
14094=IgnoreOptionalProblemsFromSourceFoldersTests:test005()
14095=IgnoreOptionalProblemsFromSourceFoldersTests:suite()
14096=IgnoreOptionalProblemsFromSourceFoldersTests:test004()
14097=IgnoreOptionalProblemsFromSourceFoldersTests:test003()
14098=IgnoreOptionalProblemsFromSourceFoldersTests:test002()
14099=IgnoreOptionalProblemsFromSourceFoldersTests:test001()
14100=A:foo()
14101=B108088:doit(A108088, String)
14102=NegativeTests:testNegativeModel10WithSystemCompiler()
14103=NegativeTests:testNegativeModel8WithEclipseCompiler()
14104=NegativeTests:testNegativeModel6WithEclipseCompiler()
14105=NegativeTests:TestDiagnosticListener:TestDiagnosticListener(PrintWriter)
14106=NegativeTests:testNegativeModel2WithEclipseCompiler()
14107=NegativeTests:testNegativeModel1WithEclipseCompiler()
14108=NegativeTests:testNegativeModel9WithEclipseCompiler()
14109=NegativeTests:testNegativeModel5WithEclipseCompiler()
14110=NegativeTests:tearDown()
14111=NegativeTests:setUp()
14112=NegativeTests:testNegativeModelWithSystemCompiler()
14113=NegativeTests:testNegativeModel10WithEclipseCompiler()
14114=NegativeTests:testNegativeModel4WithEclipseCompiler()
14115=NegativeTests:testNegativeModel3WithEclipseCompiler()
14116=NegativeTests:TestDiagnosticListener:report(Diagnostic<? extends JavaFileObject>)
14117=NegativeTests:testNegativeModel7WithEclipseCompiler()
14118=NegativeTests:internalTestNegativeModel(JavaCompiler, int, Collection<String>)
14119=JavadocQualifiedTypeReference:reportInvalidType(Scope)
14120=JavadocQualifiedTypeReference:resolveType(BlockScope, boolean, int)
14121=JavadocQualifiedTypeReference:traverse(ASTVisitor, BlockScope)
14122=JavadocQualifiedTypeReference:JavadocQualifiedTypeReference(char[][], long[], int, int)
14123=JavadocQualifiedTypeReference:reportDeprecatedType(TypeBinding, Scope)
14124=JavadocQualifiedTypeReference:traverse(ASTVisitor, ClassScope)
14125=JavadocQualifiedTypeReference:resolveType(ClassScope, int)
14126=JavadocQualifiedTypeReference:internalResolveType(Scope, boolean)
14127=JavadocQualifiedTypeReference:reportDeprecatedType(TypeBinding, Scope, int)
14128=C:m()
14129=C:bar()
14130=C:foo()
14131=C:getReader()
14132=X:foo()
14133=CompletionOnJavadocParamNameReference:addCompletionFlags(int)
14134=CompletionOnJavadocParamNameReference:CompletionOnJavadocParamNameReference(JavadocSingleNameReference)
14135=CompletionOnJavadocParamNameReference:CompletionOnJavadocParamNameReference(char[], long, int, int)
14136=CompletionOnJavadocParamNameReference:printExpression(int, StringBuffer)
14137=CompletionOnJavadocParamNameReference:reportError(BlockScope)
14138=CompletionOnJavadocParamNameReference:getCompletionFlags()
14139=Javadoc:verifyTypeReference(Expression, Expression, Scope, boolean, ReferenceBinding, int)
14140=Javadoc:print(int, StringBuffer)
14141=Javadoc:resolve(MethodScope)
14142=Javadoc:traverse(ASTVisitor, ClassScope)
14143=Javadoc:resolveParamTags(MethodScope, boolean, boolean)
14144=Javadoc:resolveThrowsTags(MethodScope, boolean)
14145=Javadoc:Javadoc(int, int)
14146=Javadoc:resolveReference(Expression, Scope)
14147=Javadoc:canBeSeen(int, int)
14148=Javadoc:resolve(ClassScope)
14149=Javadoc:resolve(CompilationUnitScope)
14150=Javadoc:resolveTypeParameterTags(Scope, boolean)
14151=Javadoc:getNodeStartingAt(int)
14152=Javadoc:traverse(ASTVisitor, BlockScope)
14153=Test:main(String[])
14154=B:B()
14155=A:A()
14156=JavadocTestForMethod:test104()
14157=JavadocTestForMethod:test127()
14158=JavadocTestForMethod:test071()
14159=JavadocTestForMethod:test094()
14160=JavadocTestForMethod:test116()
14161=JavadocTestForMethod:test006()
14162=JavadocTestForMethod:test060()
14163=JavadocTestForMethod:test105()
14164=JavadocTestForMethod:test095()
14165=JavadocTestForMethod:test072()
14166=JavadocTestForMethod:test117()
14167=JavadocTestForMethod:test007()
14168=JavadocTestForMethod:test148()
14169=JavadocTestForMethod:test102()
14170=JavadocTestForMethod:test125()
14171=JavadocTestForMethod:test016()
14172=JavadocTestForMethod:test091()
14173=JavadocTestForMethod:test092()
14174=JavadocTestForMethod:test137()
14175=JavadocTestForMethod:test004()
14176=JavadocTestForMethod:test080()
14177=JavadocTestForMethod:test126()
14178=JavadocTestForMethod:test081()
14179=JavadocTestForMethod:test103()
14180=JavadocTestForMethod:test017()
14181=JavadocTestForMethod:test070()
14182=JavadocTestForMethod:test115()
14183=JavadocTestForMethod:test093()
14184=JavadocTestForMethod:test138()
14185=JavadocTestForMethod:test005()
14186=JavadocTestForMethod:getCompilerOptions()
14187=JavadocTestForMethod:test063()
14188=JavadocTestForMethod:test086()
14189=JavadocTestForMethod:test161()
14190=JavadocTestForMethod:test108()
14191=JavadocTestForMethod:test052()
14192=JavadocTestForMethod:test075()
14193=JavadocTestForMethod:test150()
14194=JavadocTestForMethod:test087()
14195=JavadocTestForMethod:test162()
14196=JavadocTestForMethod:test030()
14197=JavadocTestForMethod:test109()
14198=JavadocTestForMethod:test053()
14199=JavadocTestForMethod:test076()
14200=JavadocTestForMethod:test151()
14201=JavadocTestForMethod:test106()
14202=JavadocTestForMethod:test061()
14203=JavadocTestForMethod:test050()
14204=JavadocTestForMethod:test073()
14205=JavadocTestForMethod:test118()
14206=JavadocTestForMethod:test008()
14207=JavadocTestForMethod:test062()
14208=JavadocTestForMethod:test107()
14209=JavadocTestForMethod:test085()
14210=JavadocTestForMethod:test160()
14211=JavadocTestForMethod:test051()
14212=JavadocTestForMethod:test074()
14213=JavadocTestForMethod:suite()
14214=JavadocTestForMethod:test142()
14215=JavadocTestForMethod:test067()
14216=JavadocTestForMethod:test033()
14217=JavadocTestForMethod:JavadocTestForMethod(String)
14218=JavadocTestForMethod:test056()
14219=JavadocTestForMethod:test131()
14220=JavadocTestForMethod:test154()
14221=JavadocTestForMethod:test021()
14222=JavadocTestForMethod:javadocTestClass()
14223=JavadocTestForMethod:test068()
14224=JavadocTestForMethod:test143()
14225=JavadocTestForMethod:test120()
14226=JavadocTestForMethod:test034()
14227=JavadocTestForMethod:test011()
14228=JavadocTestForMethod:test155()
14229=JavadocTestForMethod:test057()
14230=JavadocTestForMethod:test132()
14231=JavadocTestForMethod:test022()
14232=JavadocTestForMethod:test065()
14233=JavadocTestForMethod:test140()
14234=JavadocTestForMethod:test163()
14235=JavadocTestForMethod:test031()
14236=JavadocTestForMethod:test152()
14237=JavadocTestForMethod:test066()
14238=JavadocTestForMethod:test141()
14239=JavadocTestForMethod:test032()
14240=JavadocTestForMethod:test055()
14241=JavadocTestForMethod:test153()
14242=JavadocTestForMethod:test130()
14243=JavadocTestForMethod:test020()
14244=JavadocTestForMethod:test100()
14245=JavadocTestForMethod:test123()
14246=JavadocTestForMethod:test146()
14247=JavadocTestForMethod:test014()
14248=JavadocTestForMethod:test135()
14249=JavadocTestForMethod:test158()
14250=JavadocTestForMethod:test037()
14251=JavadocTestForMethod:test025()
14252=JavadocTestForMethod:test002()
14253=JavadocTestForMethod:test101()
14254=JavadocTestForMethod:test147()
14255=JavadocTestForMethod:test124()
14256=JavadocTestForMethod:test015()
14257=JavadocTestForMethod:test090()
14258=JavadocTestForMethod:test159()
14259=JavadocTestForMethod:test136()
14260=JavadocTestForMethod:test038()
14261=JavadocTestForMethod:test003()
14262=JavadocTestForMethod:test026()
14263=JavadocTestForMethod:test144()
14264=JavadocTestForMethod:test121()
14265=JavadocTestForMethod:test069()
14266=JavadocTestForMethod:test035()
14267=JavadocTestForMethod:test012()
14268=JavadocTestForMethod:test133()
14269=JavadocTestForMethod:test156()
14270=JavadocTestForMethod:test058()
14271=JavadocTestForMethod:test110()
14272=JavadocTestForMethod:test023()
14273=JavadocTestForMethod:test122()
14274=JavadocTestForMethod:test145()
14275=JavadocTestForMethod:test013()
14276=JavadocTestForMethod:test157()
14277=JavadocTestForMethod:test036()
14278=JavadocTestForMethod:test001()
14279=JavadocTestForMethod:test024()
14280=DefaultJavaRuntimeEnvironment:cleanup()
14281=DefaultJavaRuntimeEnvironment:create(String[])
14282=DefaultJavaRuntimeEnvironment:getDefaultClassPaths()
14283=DefaultJavaRuntimeEnvironment:DefaultJavaRuntimeEnvironment(String[])
14284=ASTRewritingModifyingOtherTest:test0002()
14285=ASTRewritingModifyingOtherTest:test0001()
14286=ASTRewritingModifyingOtherTest:test0004()
14287=ASTRewritingModifyingOtherTest:test0003()
14288=ASTRewritingModifyingOtherTest:test0006()
14289=ASTRewritingModifyingOtherTest:test0005()
14290=ASTRewritingModifyingOtherTest:suite()
14291=ASTRewritingModifyingOtherTest:ASTRewritingModifyingOtherTest(String)
14292=ASTRewritingModifyingOtherTest:test0000()
14293=ASTRewritingModifyingOtherTest:allTests()
14294=NullLiteral:propertyDescriptors(int)
14295=NullLiteral:treeSize()
14296=NullLiteral:clone0(AST)
14297=NullLiteral:subtreeMatch0(ASTMatcher, Object)
14298=NullLiteral:NullLiteral(AST)
14299=NullLiteral:accept0(ASTVisitor)
14300=NullLiteral:getNodeType0()
14301=NullLiteral:memSize()
14302=NullLiteral:internalStructuralPropertiesForType(int)
14303=EclipseFormatTest:main(String[])
14304=X05:foo(Object)
14305=EvaluationSetup:setUp()
14306=EvaluationSetup:startReader(String, InputStream, PrintStream)
14307=EvaluationSetup:EvaluationSetup(long)
14308=EvaluationSetup:tearDown()
14309=FormaterBug:main(String[])
14310=DirectoryComparator:collectAllFiles(File, ArrayList)
14311=DirectoryComparator:logError(String)
14312=DirectoryComparator:getAllFiles(File)
14313=DirectoryComparator:main(String[])
14314=DirectoryComparator:compare()
14315=DirectoryComparator:getBytes(File)
14316=DirectoryComparator:DirectoryComparator(String[])
14317=DirectoryComparator:equals(byte[], byte[])
14318=X02b:setCharset(String, Object)
14319=T_124645:m()
14320=AnnotationDefaultAttribute:getMemberValue()
14321=AnnotationDefaultAttribute:AnnotationDefaultAttribute(byte[], IConstantPool, int)
14322=ValueConversionProcessor:ValueConversionProcessor(AnnotationProcessorEnvironment)
14323=ValueConversionProcessor:assertValueMatch(String, byte, byte)
14324=ValueConversionProcessor:assertValueMatch(String, int, int)
14325=ValueConversionProcessor:assertValueMatch(String, double, double)
14326=ValueConversionProcessor:assertValueMatch(String, char, char)
14327=ValueConversionProcessor:assertValueMatch(String, long, long)
14328=ValueConversionProcessor:assertArrayValueMatch(String, float[], float[])
14329=ValueConversionProcessor:assertArrayValueMatch(String, char[], char[])
14330=ValueConversionProcessor:assertValueTypeMatch(String, Object, Class<?>, Object)
14331=ValueConversionProcessor:testCompilerAPIPath(TypeDeclaration)
14332=ValueConversionProcessor:assertArrayValueMatch(String, double[], double[])
14333=ValueConversionProcessor:testReflectionPath(TypeDeclaration)
14334=ValueConversionProcessor:assertArrayValueMatch(String, short[], short[])
14335=ValueConversionProcessor:assertArrayValueTypeMatch(String, List<AnnotationValue>, Class<?>, Object[])
14336=ValueConversionProcessor:assertArrayValueMatch(String, boolean[], boolean[])
14337=ValueConversionProcessor:assertArrayValueMatch(String, long[], long[])
14338=ValueConversionProcessor:assertArrayValueMatch(String, byte[], byte[])
14339=ValueConversionProcessor:process()
14340=ValueConversionProcessor:assertArrayValueMatch(String, int[], int[])
14341=ValueConversionProcessor:assertValueMatch(String, float, float)
14342=ValueConversionProcessor:assertValueMatch(String, boolean, boolean)
14343=ValueConversionProcessor:assertValueMatch(String, short, short)
14344=ValueConversionProcessor:compare(String, Object)
14345=X18:Y18:foo()
14346=DeclarationScanner:visitMemberDeclaration(MemberDeclaration)
14347=DeclarationScanner:visitAnnotationTypeElementDeclaration(AnnotationTypeElementDeclaration)
14348=DeclarationScanner:visitFieldDeclaration(FieldDeclaration)
14349=DeclarationScanner:visitClassDeclaration(ClassDeclaration)
14350=DeclarationScanner:visitTypeDeclaration(TypeDeclaration)
14351=DeclarationScanner:visitMethodDeclaration(MethodDeclaration)
14352=DeclarationScanner:visitEnumConstantDeclaration(EnumConstantDeclaration)
14353=DeclarationScanner:visitTypeParameterDeclaration(TypeParameterDeclaration)
14354=DeclarationScanner:visitInterfaceDeclaration(InterfaceDeclaration)
14355=DeclarationScanner:visitAnnotationTypeDeclaration(AnnotationTypeDeclaration)
14356=DeclarationScanner:visitParameterDeclaration(ParameterDeclaration)
14357=DeclarationScanner:visitConstructorDeclaration(ConstructorDeclaration)
14358=DeclarationScanner:visitEnumDeclaration(EnumDeclaration)
14359=DeclarationScanner:visitDeclaration(Declaration)
14360=DeclarationScanner:DeclarationScanner(DeclarationVisitor, DeclarationVisitor)
14361=DeclarationScanner:visitPackageDeclaration(PackageDeclaration)
14362=DeclarationScanner:visitExecutableDeclaration(ExecutableDeclaration)
14363=SelectionOnArgumentName:print(int, StringBuffer)
14364=SelectionOnArgumentName:resolve(BlockScope)
14365=SelectionOnArgumentName:SelectionOnArgumentName(char[], long, TypeReference, int)
14366=SelectionOnArgumentName:bind(MethodScope, TypeBinding, boolean)
14367=SelectionOnArgumentName:SelectionOnArgumentName(char[], long, TypeReference, int, boolean)
14368=SelectionOnArgumentName:resolveForCatch(BlockScope)
14369=ResolveTests_1_5:setUpSuite()
14370=ResolveTests_1_5:test0007()
14371=ResolveTests_1_5:test0083()
14372=ResolveTests_1_5:test0116()
14373=ResolveTests_1_5:test0060()
14374=ResolveTests_1_5:test0018()
14375=ResolveTests_1_5:tearDownSuite()
14376=ResolveTests_1_5:test0094()
14377=ResolveTests_1_5:test0105()
14378=ResolveTests_1_5:test0071()
14379=ResolveTests_1_5:test0008()
14380=ResolveTests_1_5:test0084()
14381=ResolveTests_1_5:test0117()
14382=ResolveTests_1_5:test0061()
14383=ResolveTests_1_5:test0019()
14384=ResolveTests_1_5:test0095()
14385=ResolveTests_1_5:test0106()
14386=ResolveTests_1_5:test0072()
14387=ResolveTests_1_5:test0009()
14388=ResolveTests_1_5:test0085()
14389=ResolveTests_1_5:test0062()
14390=ResolveTests_1_5:test0118()
14391=ResolveTests_1_5:test0073()
14392=ResolveTests_1_5:test0096()
14393=ResolveTests_1_5:test0107()
14394=ResolveTests_1_5:test0050()
14395=ResolveTests_1_5:test0086()
14396=ResolveTests_1_5:test0040()
14397=ResolveTests_1_5:test0063()
14398=ResolveTests_1_5:test0119()
14399=ResolveTests_1_5:ResolveTests_1_5(String)
14400=ResolveTests_1_5:test0074()
14401=ResolveTests_1_5:test0097()
14402=ResolveTests_1_5:test0051()
14403=ResolveTests_1_5:test0108()
14404=ResolveTests_1_5:test0087()
14405=ResolveTests_1_5:test0064()
14406=ResolveTests_1_5:test0041()
14407=ResolveTests_1_5:selectAfter(String, String, String)
14408=ResolveTests_1_5:test0075()
14409=ResolveTests_1_5:test0098()
14410=ResolveTests_1_5:test0109()
14411=ResolveTests_1_5:test0052()
14412=ResolveTests_1_5:test0088()
14413=ResolveTests_1_5:test0042()
14414=ResolveTests_1_5:test0065()
14415=ResolveTests_1_5:test0099()
14416=ResolveTests_1_5:test0076()
14417=ResolveTests_1_5:test0053()
14418=ResolveTests_1_5:test0030()
14419=ResolveTests_1_5:test0066()
14420=ResolveTests_1_5:test0089()
14421=ResolveTests_1_5:test0043()
14422=ResolveTests_1_5:test0020()
14423=ResolveTests_1_5:test0077()
14424=ResolveTests_1_5:test0031()
14425=ResolveTests_1_5:test0054()
14426=ResolveTests_1_5:test0044()
14427=ResolveTests_1_5:test0067()
14428=ResolveTests_1_5:test0021()
14429=ResolveTests_1_5:test0055()
14430=ResolveTests_1_5:test0078()
14431=ResolveTests_1_5:test0032()
14432=ResolveTests_1_5:test0022()
14433=ResolveTests_1_5:test0068()
14434=ResolveTests_1_5:test0045()
14435=ResolveTests_1_5:test0033()
14436=ResolveTests_1_5:test0056()
14437=ResolveTests_1_5:test0079()
14438=ResolveTests_1_5:test0120()
14439=ResolveTests_1_5:test0010()
14440=ResolveTests_1_5:test0023()
14441=ResolveTests_1_5:test0046()
14442=ResolveTests_1_5:test0069()
14443=ResolveTests_1_5:tearDown()
14444=ResolveTests_1_5:test0011()
14445=ResolveTests_1_5:test0057()
14446=ResolveTests_1_5:test0034()
14447=ResolveTests_1_5:test0121()
14448=ResolveTests_1_5:test0001()
14449=ResolveTests_1_5:test0047()
14450=ResolveTests_1_5:test0024()
14451=ResolveTests_1_5:test0110()
14452=ResolveTests_1_5:test0012()
14453=ResolveTests_1_5:test0035()
14454=ResolveTests_1_5:test0058()
14455=ResolveTests_1_5:getWorkingCopy(String, String)
14456=ResolveTests_1_5:test0122()
14457=ResolveTests_1_5:test0048()
14458=ResolveTests_1_5:test0002()
14459=ResolveTests_1_5:test0025()
14460=ResolveTests_1_5:test0111()
14461=ResolveTests_1_5:test0059()
14462=ResolveTests_1_5:test0036()
14463=ResolveTests_1_5:test0013()
14464=ResolveTests_1_5:test0123()
14465=ResolveTests_1_5:test0100()
14466=ResolveTests_1_5:test0026()
14467=ResolveTests_1_5:test0049()
14468=ResolveTests_1_5:test0003()
14469=ResolveTests_1_5:test0112()
14470=ResolveTests_1_5:test0037()
14471=ResolveTests_1_5:test0014()
14472=ResolveTests_1_5:test0101()
14473=ResolveTests_1_5:test0124()
14474=ResolveTests_1_5:test0090()
14475=ResolveTests_1_5:test0004()
14476=ResolveTests_1_5:test0027()
14477=ResolveTests_1_5:test0080()
14478=ResolveTests_1_5:test0113()
14479=ResolveTests_1_5:test0015()
14480=ResolveTests_1_5:test0038()
14481=ResolveTests_1_5:test0091()
14482=ResolveTests_1_5:test0102()
14483=ResolveTests_1_5:test0125()
14484=ResolveTests_1_5:setUp()
14485=ResolveTests_1_5:test0005()
14486=ResolveTests_1_5:test0028()
14487=ResolveTests_1_5:test0081()
14488=ResolveTests_1_5:test0114()
14489=ResolveTests_1_5:test0016()
14490=ResolveTests_1_5:test0039()
14491=ResolveTests_1_5:suite()
14492=ResolveTests_1_5:test0092()
14493=ResolveTests_1_5:test0103()
14494=ResolveTests_1_5:test0006()
14495=ResolveTests_1_5:test0029()
14496=ResolveTests_1_5:select(String, String, String)
14497=ResolveTests_1_5:test0082()
14498=ResolveTests_1_5:test0115()
14499=ResolveTests_1_5:test0017()
14500=ResolveTests_1_5:test0093()
14501=ResolveTests_1_5:test0104()
14502=ResolveTests_1_5:test0070()
14503=TestDecorator:countTestCases()
14504=TestDecorator:getTest()
14505=TestDecorator:basicRun(TestResult)
14506=TestDecorator:TestDecorator(Test)
14507=TestDecorator:run(TestResult)
14508=TestDecorator:toString()
14509=Foo:foo(Point.Float)
14510=X02c:foo()
14511=IType:getTypeParameter(String)
14512=IType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, CompletionRequestor)
14513=IType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, CompletionRequestor, WorkingCopyOwner)
14514=IType:loadTypeHierachy(InputStream, IProgressMonitor)
14515=IType:getTypeQualifiedName(char)
14516=IType:getTypeParameterSignatures()
14517=IType:newTypeHierarchy(IWorkingCopy[], IProgressMonitor)
14518=IType:getInitializers()
14519=IType:createMethod(String, IJavaElement, boolean, IProgressMonitor)
14520=IType:getInitializer(int)
14521=IType:getSuperInterfaceTypeSignatures()
14522=IType:newTypeHierarchy(ICompilationUnit[], IProgressMonitor)
14523=IType:isResolved()
14524=IType:createInitializer(String, IJavaElement, IProgressMonitor)
14525=IType:getType(String)
14526=IType:isClass()
14527=IType:getMethods()
14528=IType:getFullyQualifiedName(char)
14529=IType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, ICompletionRequestor)
14530=IType:getSuperclassTypeSignature()
14531=IType:isMember()
14532=IType:getTypeParameters()
14533=IType:createType(String, IJavaElement, boolean, IProgressMonitor)
14534=IType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, CompletionRequestor, IProgressMonitor)
14535=IType:getChildrenForCategory(String)
14536=IType:getTypeQualifiedName()
14537=IType:getElementName()
14538=IType:getTypes()
14539=IType:resolveType(String)
14540=IType:isLambda()
14541=IType:resolveType(String, WorkingCopyOwner)
14542=IType:newTypeHierarchy(WorkingCopyOwner, IProgressMonitor)
14543=IType:newTypeHierarchy(IJavaProject, WorkingCopyOwner, IProgressMonitor)
14544=IType:newSupertypeHierarchy(IWorkingCopy[], IProgressMonitor)
14545=IType:findMethods(IMethod)
14546=IType:getPackageFragment()
14547=IType:getSuperclassName()
14548=IType:newSupertypeHierarchy(IProgressMonitor)
14549=IType:getSuperInterfaceNames()
14550=IType:createField(String, IJavaElement, boolean, IProgressMonitor)
14551=IType:getKey()
14552=IType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, ICompletionRequestor, WorkingCopyOwner)
14553=IType:getMethod(String, String[])
14554=IType:getFullyQualifiedName()
14555=IType:newSupertypeHierarchy(WorkingCopyOwner, IProgressMonitor)
14556=IType:getFields()
14557=IType:getFullyQualifiedParameterizedName()
14558=IType:newSupertypeHierarchy(ICompilationUnit[], IProgressMonitor)
14559=IType:isEnum()
14560=IType:isAnonymous()
14561=IType:getField(String)
14562=IType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, CompletionRequestor, WorkingCopyOwner, IProgressMonitor)
14563=IType:newTypeHierarchy(IProgressMonitor)
14564=IType:isAnnotation()
14565=IType:newTypeHierarchy(IJavaProject, IProgressMonitor)
14566=IType:isLocal()
14567=IType:isInterface()
14568=JavaElementDelta:sourceDetached(IJavaElement)
14569=JavaElementDelta:addResourceDelta(IResourceDelta)
14570=JavaElementDelta:removeAffectedChild(JavaElementDelta)
14571=JavaElementDelta:movedTo(IJavaElement, IJavaElement)
14572=JavaElementDelta:Key:hashCode()
14573=JavaElementDelta:getAffectedChildren()
14574=JavaElementDelta:find(IJavaElement)
14575=JavaElementDelta:JavaElementDelta(IJavaElement)
14576=JavaElementDelta:createDeltaTree(IJavaElement, JavaElementDelta)
14577=JavaElementDelta:getAnnotationDeltas()
14578=JavaElementDelta:getElement()
14579=JavaElementDelta:getChangedChildren()
14580=JavaElementDelta:addNewChild(JavaElementDelta)
14581=JavaElementDelta:toString()
14582=JavaElementDelta:getCompilationUnitAST()
14583=JavaElementDelta:toDebugString(StringBuffer, int)
14584=JavaElementDelta:getAddedChildren()
14585=JavaElementDelta:Key:equals(Object)
14586=JavaElementDelta:toDebugString(int)
14587=JavaElementDelta:opened(IJavaElement)
14588=JavaElementDelta:clearAffectedChildren()
14589=JavaElementDelta:sourceAttached(IJavaElement)
14590=JavaElementDelta:removeExistingChild(Key, int)
14591=JavaElementDelta:getChildIndex(Key)
14592=JavaElementDelta:addAffectedChild(JavaElementDelta)
14593=JavaElementDelta:insertDeltaTree(IJavaElement, JavaElementDelta)
14594=JavaElementDelta:removed(IJavaElement, int)
14595=JavaElementDelta:getChildrenOfType(int)
14596=JavaElementDelta:added(IJavaElement, int)
14597=JavaElementDelta:contentChanged()
14598=JavaElementDelta:getDeltaFor(IJavaElement)
14599=JavaElementDelta:added(IJavaElement)
14600=JavaElementDelta:equalsAndSameParent(IJavaElement, IJavaElement)
14601=JavaElementDelta:closed(IJavaElement)
14602=JavaElementDelta:findDescendant(Key)
14603=JavaElementDelta:changedAST(CompilationUnit)
14604=JavaElementDelta:growAndAddToArray(IJavaElementDelta[], IJavaElementDelta)
14605=JavaElementDelta:changed(IJavaElement, int)
14606=JavaElementDelta:getAncestors(IJavaElement)
14607=JavaElementDelta:movedFrom(IJavaElement, IJavaElement)
14608=JavaElementDelta:getMovedToElement()
14609=JavaElementDelta:getMovedFromElement()
14610=JavaElementDelta:getRemovedChildren()
14611=JavaElementDelta:removed(IJavaElement)
14612=JavaElementDelta:fineGrained()
14613=JavaElementDelta:Key:Key(IJavaElement)
14614=JavaElementDelta:removeAndShrinkArray(IJavaElementDelta[], int)
14615=JavaElementDelta:getResourceDeltas()
14616=OverflowingCacheTests:OverflowingTestBuffer:setContents(String)
14617=OverflowingCacheTests:testElementCacheUseNoOverflow()
14618=OverflowingCacheTests:OverflowingTestBuffer:getOwner()
14619=OverflowingCacheTests:OverflowingTestBuffer:isReadOnly()
14620=OverflowingCacheTests:OverflowingTestBuffer:getContents()
14621=OverflowingCacheTests:suite()
14622=OverflowingCacheTests:testElementCacheCreation()
14623=OverflowingCacheTests:OverflowingTestBuffer:save(IProgressMonitor, boolean)
14624=OverflowingCacheTests:OverflowingTestOpenable:close()
14625=OverflowingCacheTests:OverflowingTestOpenable:OverflowingTestOpenable(OverflowingTestBuffer, OverflowingLRUCache)
14626=OverflowingCacheTests:OverflowingTestBuffer:hasUnsavedChanges()
14627=OverflowingCacheTests:OverflowingTestBuffer:getChar(int)
14628=OverflowingCacheTests:testElementCacheFill()
14629=OverflowingCacheTests:OverflowingTestBuffer:getText(int, int)
14630=OverflowingCacheTests:OverflowingTestOpenable:save(IProgressMonitor, boolean)
14631=OverflowingCacheTests:testBufferCacheCreation()
14632=OverflowingCacheTests:OverflowingTestBuffer:addBufferChangedListener(IBufferChangedListener)
14633=OverflowingCacheTests:OverflowingTestBuffer:getCharacters()
14634=OverflowingCacheTests:testBufferCacheFill()
14635=OverflowingCacheTests:OverflowingTestOpenable:equals(Object)
14636=OverflowingCacheTests:OverflowingTestOpenable:hasUnsavedChanges()
14637=OverflowingCacheTests:OverflowingTestBuffer:replace(int, int, String)
14638=OverflowingCacheTests:OverflowingTestOpenable:buildStructure(OpenableElementInfo, IProgressMonitor, Map, IResource)
14639=OverflowingCacheTests:OverflowingTestBuffer:removeBufferChangedListener(IBufferChangedListener)
14640=OverflowingCacheTests:OverflowingTestBuffer:save(IProgressMonitor)
14641=OverflowingCacheTests:testBigNumberOfRoots()
14642=OverflowingCacheTests:OverflowingTestBuffer:close()
14643=OverflowingCacheTests:OverflowingCacheTests(String)
14644=OverflowingCacheTests:OverflowingTestBuffer:getUnderlyingResource()
14645=OverflowingCacheTests:testBufferCacheUseOverflow()
14646=OverflowingCacheTests:OverflowingTestOpenable:getElementType()
14647=OverflowingCacheTests:OverflowingTestOpenable:isConsistent()
14648=OverflowingCacheTests:testBufferRecycling()
14649=OverflowingCacheTests:testBufferCacheUseNoOverflow()
14650=OverflowingCacheTests:OverflowingTestBuffer:append(String)
14651=OverflowingCacheTests:OverflowingTestBuffer:getLength()
14652=OverflowingCacheTests:OverflowingTestOpenable:getHandleMementoDelimiter()
14653=OverflowingCacheTests:OverflowingTestBuffer:replace(int, int, char[])
14654=OverflowingCacheTests:OverflowingTestOpenable:isOpen()
14655=OverflowingCacheTests:OverflowingTestOpenable:save(IProgressMonitor)
14656=OverflowingCacheTests:OverflowingTestOpenable:open(IProgressMonitor)
14657=OverflowingCacheTests:OverflowingTestBuffer:OverflowingTestBuffer(boolean, OverflowingLRUCache)
14658=OverflowingCacheTests:OverflowingTestOpenable:getPath()
14659=OverflowingCacheTests:OverflowingTestBuffer:setContents(char[])
14660=OverflowingCacheTests:OverflowingTestBuffer:isClosed()
14661=OverflowingCacheTests:OverflowingTestOpenable:getBuffer()
14662=OverflowingCacheTests:OverflowingTestOpenable:makeConsistent(IProgressMonitor)
14663=OverflowingCacheTests:testElementCacheUseOverflow()
14664=OverflowingCacheTests:OverflowingTestOpenable:getHandleFromMemento(String, MementoTokenizer, WorkingCopyOwner)
14665=OverflowingCacheTests:hasUnsavedChanges(int)
14666=OverflowingCacheTests:OverflowingTestOpenable:resource(PackageFragmentRoot)
14667=OverflowingCacheTests:OverflowingTestOpenable:validateExistence(IResource)
14668=OverflowingCacheTests:OverflowingTestBuffer:append(char[])
14669=IRegion:getElements()
14670=IRegion:remove(IJavaElement)
14671=IRegion:contains(IJavaElement)
14672=IRegion:add(IJavaElement)
14673=JavaSearchScope:add(String, String, String, boolean, AccessRuleSet)
14674=JavaSearchScope:getAccessRuleSet(String, String)
14675=JavaSearchScope:normalize(String)
14676=JavaSearchScope:toString()
14677=JavaSearchScope:add(JavaProject, IPath, int, HashSet, HashSet, IClasspathEntry)
14678=JavaSearchScope:encloses(String)
14679=JavaSearchScope:add(IJavaElement)
14680=JavaSearchScope:packageFragmentRoot(String, int, String)
14681=JavaSearchScope:getPath(IJavaElement, boolean)
14682=JavaSearchScope:indexOf(String, String)
14683=JavaSearchScope:indexOf(String)
14684=JavaSearchScope:processDelta(IJavaElementDelta, int)
14685=JavaSearchScope:JavaSearchScope(int)
14686=JavaSearchScope:rehash()
14687=JavaSearchScope:encloses(String, String, int)
14688=JavaSearchScope:add(JavaProject, int, HashSet)
14689=JavaSearchScope:addEnclosingProjectOrJar(IPath)
14690=JavaSearchScope:initialize(int)
14691=JavaSearchScope:enclosingProjectsAndJars()
14692=JavaSearchScope:encloses(IJavaElement)
14693=JavaSearchScope:JavaSearchScope()
14694=TestCase:assertEquals(String, String)
14695=TestCase:startMeasuring()
14696=TestCase:buildTestsList(Class, int, long)
14697=TestCase:assertPerformance()
14698=TestCase:TestCase(String)
14699=TestCase:assertStringEquals(String, String, boolean)
14700=TestCase:assumeEquals(String, String)
14701=TestCase:assertSame(String, int, int)
14702=TestCase:setUp()
14703=TestCase:assertSame(int, int)
14704=TestCase:buildTestSuite(Class)
14705=TestCase:tearDown()
14706=TestCase:assumeEquals(String, String, String)
14707=TestCase:commitMeasurements()
14708=TestCase:showLineSeparators(String)
14709=TestCase:format(long)
14710=TestCase:failNotSame(String, int, int)
14711=TestCase:assumeEquals(String, int, int)
14712=TestCase:buildTestSuite(Class, String)
14713=TestCase:buildTestsList(Class)
14714=TestCase:isFirst()
14715=TestCase:verifyLogDir(File)
14716=TestCase:printAssertionFailure(AssertionFailedError)
14717=TestCase:assertEquals(String, String, String)
14718=TestCase:stopMeasuring()
14719=TestCase:clean()
14720=TestCase:assumeEquals(String, long, long)
14721=TestCase:assumeTrue(String, boolean)
14722=TestCase:buildTestsList(Class, int)
14723=TestCase:createMemLogFile()
14724=TestCase:setUpTest(Test)
14725=TestCase:assertStringEquals(String, String, String, boolean)
14726=A:foo()
14727=CompletionOnLocalName:resolve(BlockScope)
14728=CompletionOnLocalName:printAsExpression(int, StringBuffer)
14729=CompletionOnLocalName:CompletionOnLocalName(char[], int, int)
14730=CompletionOnLocalName:printStatement(int, StringBuffer)
14731=PossibleMatchSet:getPossibleMatches(IPackageFragmentRoot[])
14732=PossibleMatchSet:reset()
14733=PossibleMatchSet:add(PossibleMatch)
14734=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(ContinueStatement)
14735=FullSourceWorkspaceASTTests:FullSourceWorkspaceASTTests(String)
14736=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(ParenthesizedExpression)
14737=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(AnonymousClassDeclaration)
14738=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(TypeDeclaration)
14739=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(MethodRef)
14740=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(BreakStatement)
14741=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(EmptyStatement)
14742=FullSourceWorkspaceASTTests:testClass()
14743=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(SingleVariableDeclaration)
14744=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(VariableDeclarationExpression)
14745=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(ImportDeclaration)
14746=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(CastExpression)
14747=FullSourceWorkspaceASTTests:testWkspDomAstCreationJLS2()
14748=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(QualifiedName)
14749=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(ForStatement)
14750=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(NullLiteral)
14751=FullSourceWorkspaceASTTests:testPerfDomAstCreationJLS3()
14752=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(ArrayInitializer)
14753=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(ThisExpression)
14754=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(IfStatement)
14755=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(BlockComment)
14756=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(ParenthesizedExpression)
14757=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:CommentMapperASTVisitor(CompilationUnit)
14758=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(InstanceofExpression)
14759=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(SuperMethodInvocation)
14760=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(EmptyStatement)
14761=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(AssertStatement)
14762=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(MethodRef)
14763=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(NumberLiteral)
14764=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(ArrayCreation)
14765=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(InstanceofExpression)
14766=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(NullLiteral)
14767=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(TagElement)
14768=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(ClassInstanceCreation)
14769=FullSourceWorkspaceASTTests:tearDown()
14770=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(CastExpression)
14771=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(TypeDeclaration)
14772=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(CatchClause)
14773=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(ArrayType)
14774=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(FieldAccess)
14775=FullSourceWorkspaceASTTests:runAllProjectsAstCreation(int)
14776=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(SimpleName)
14777=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(DoStatement)
14778=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(Initializer)
14779=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(MethodInvocation)
14780=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(ThrowStatement)
14781=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(MethodRefParameter)
14782=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(BooleanLiteral)
14783=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(Assignment)
14784=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(FieldDeclaration)
14785=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(ArrayInitializer)
14786=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(ArrayType)
14787=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(ReturnStatement)
14788=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(PackageDeclaration)
14789=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(VariableDeclarationStatement)
14790=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(CatchClause)
14791=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(ExpressionStatement)
14792=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(MemberRef)
14793=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(SynchronizedStatement)
14794=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(FieldAccess)
14795=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(SwitchStatement)
14796=FullSourceWorkspaceASTTests:runAstCreation(IJavaProject)
14797=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(SynchronizedStatement)
14798=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(PrimitiveType)
14799=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(ArrayCreation)
14800=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(Javadoc)
14801=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(CharacterLiteral)
14802=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(AnonymousClassDeclaration)
14803=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(SingleVariableDeclaration)
14804=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(DoStatement)
14805=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(VariableDeclarationExpression)
14806=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(IfStatement)
14807=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(ThisExpression)
14808=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(NumberLiteral)
14809=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(WhileStatement)
14810=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(MemberRef)
14811=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(SuperFieldAccess)
14812=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(PackageDeclaration)
14813=FullSourceWorkspaceASTTests:setUp()
14814=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(PrefixExpression)
14815=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(TypeLiteral)
14816=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(ClassInstanceCreation)
14817=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(CompilationUnit)
14818=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(LineComment)
14819=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(Assignment)
14820=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(VariableDeclarationFragment)
14821=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(ExpressionStatement)
14822=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(BlockComment)
14823=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(Block)
14824=FullSourceWorkspaceASTTests:createAST(ICompilationUnit, int)
14825=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(SuperFieldAccess)
14826=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(ThrowStatement)
14827=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(ForStatement)
14828=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(Block)
14829=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(PrimitiveType)
14830=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(TryStatement)
14831=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(VariableDeclarationFragment)
14832=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(SimpleType)
14833=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(TypeLiteral)
14834=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(SwitchCase)
14835=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(InfixExpression)
14836=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(WhileStatement)
14837=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(Javadoc)
14838=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(SimpleName)
14839=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(Initializer)
14840=FullSourceWorkspaceASTTests:testDomAstCreationProjectJLS3()
14841=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(LineComment)
14842=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(MethodDeclaration)
14843=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(SuperMethodInvocation)
14844=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(StringLiteral)
14845=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(LabeledStatement)
14846=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(TypeDeclarationStatement)
14847=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(TagElement)
14848=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(LabeledStatement)
14849=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(InfixExpression)
14850=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visitNode(ASTNode)
14851=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(BreakStatement)
14852=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(SuperConstructorInvocation)
14853=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(PostfixExpression)
14854=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(SuperConstructorInvocation)
14855=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(ArrayAccess)
14856=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(TypeDeclarationStatement)
14857=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(ContinueStatement)
14858=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(ReturnStatement)
14859=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(TextElement)
14860=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(PostfixExpression)
14861=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(CompilationUnit)
14862=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(AssertStatement)
14863=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(SwitchStatement)
14864=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(FieldDeclaration)
14865=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(PrefixExpression)
14866=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(QualifiedName)
14867=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(ImportDeclaration)
14868=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisitNode(ASTNode)
14869=FullSourceWorkspaceASTTests:testPerfDomAstCreationJLS2()
14870=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(StringLiteral)
14871=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(ConstructorInvocation)
14872=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(SwitchCase)
14873=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(CharacterLiteral)
14874=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(MethodDeclaration)
14875=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(TryStatement)
14876=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(ConditionalExpression)
14877=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(ArrayAccess)
14878=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(SimpleType)
14879=FullSourceWorkspaceASTTests:suite()
14880=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(VariableDeclarationStatement)
14881=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(TextElement)
14882=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(BooleanLiteral)
14883=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(ConstructorInvocation)
14884=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:visit(MethodRefParameter)
14885=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(ConditionalExpression)
14886=FullSourceWorkspaceASTTests:CommentMapperASTVisitor:endVisit(MethodInvocation)
14887=MarkerAnnotation:propertyDescriptors(int)
14888=MarkerAnnotation:subtreeMatch0(ASTMatcher, Object)
14889=MarkerAnnotation:internalTypeNameProperty()
14890=MarkerAnnotation:MarkerAnnotation(AST)
14891=MarkerAnnotation:accept0(ASTVisitor)
14892=MarkerAnnotation:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
14893=MarkerAnnotation:clone0(AST)
14894=MarkerAnnotation:treeSize()
14895=MarkerAnnotation:memSize()
14896=MarkerAnnotation:internalStructuralPropertiesForType(int)
14897=MarkerAnnotation:getNodeType0()
14898=FlowInfo:initsWhenTrue()
14899=FlowInfo:markAsDefinitelyNotAssigned(FieldBinding)
14900=FlowInfo:mergedWith(UnconditionalFlowInfo)
14901=FlowInfo:toString()
14902=FlowInfo:addPotentialInitializationsFrom(FlowInfo)
14903=FlowInfo:setReachMode(int)
14904=FlowInfo:copy()
14905=FlowInfo:markAsDefinitelyNotAssigned(LocalVariableBinding)
14906=FlowInfo:initsWhenFalse()
14907=FlowInfo:unconditionalInits()
14908=FlowInfo:conditional(FlowInfo, FlowInfo)
14909=FlowInfo:markAsDefinitelyAssigned(LocalVariableBinding)
14910=FlowInfo:isDefinitelyAssigned(LocalVariableBinding)
14911=FlowInfo:markAsDefinitelyAssigned(FieldBinding)
14912=FlowInfo:isPotentiallyAssigned(LocalVariableBinding)
14913=FlowInfo:asNegatedCondition()
14914=FlowInfo:isPotentiallyAssigned(FieldBinding)
14915=FlowInfo:isReachable()
14916=FlowInfo:reachMode()
14917=FlowInfo:isDefinitelyAssigned(FieldBinding)
14918=FlowInfo:mergedOptimizedBranches(FlowInfo, boolean, FlowInfo, boolean, boolean)
14919=FlowInfo:initial(int)
14920=FlowInfo:addInitializationsFrom(FlowInfo)
14921=SourceField:getName()
14922=SourceField:getModifiers()
14923=SourceField:getDeclarationSourceEnd()
14924=SourceField:getTypeName()
14925=SourceField:toString()
14926=SourceField:setDeclarationSourceEnd(int)
14927=SourceField:getActualName()
14928=SourceField:toString(int)
14929=SourceField:getInitializationSource()
14930=SourceField:getNameSourceStart()
14931=SourceField:getDeclarationSourceStart()
14932=SourceField:SourceField(int, int, char[], char[], int, int, char[])
14933=SourceField:getNameSourceEnd()
14934=SourceField:tabString(int)
14935=SourceField:displayModifiers()
14936=Test:main(String[])
14937=BooleanTest:test012()
14938=BooleanTest:test035()
14939=BooleanTest:test011()
14940=BooleanTest:test023()
14941=BooleanTest:test046()
14942=BooleanTest:test022()
14943=BooleanTest:test034()
14944=BooleanTest:test033()
14945=BooleanTest:test010()
14946=BooleanTest:test045()
14947=BooleanTest:test044()
14948=BooleanTest:test021()
14949=BooleanTest:test032()
14950=BooleanTest:test020()
14951=BooleanTest:test043()
14952=BooleanTest:suite()
14953=BooleanTest:test031()
14954=BooleanTest:test016()
14955=BooleanTest:test039()
14956=BooleanTest:BooleanTest(String)
14957=BooleanTest:test027()
14958=BooleanTest:test004()
14959=BooleanTest:test038()
14960=BooleanTest:test015()
14961=BooleanTest:test049()
14962=BooleanTest:test003()
14963=BooleanTest:test026()
14964=BooleanTest:test037()
14965=BooleanTest:test014()
14966=BooleanTest:test002()
14967=BooleanTest:test048()
14968=BooleanTest:test025()
14969=BooleanTest:test013()
14970=BooleanTest:test036()
14971=BooleanTest:test001()
14972=BooleanTest:test024()
14973=BooleanTest:test047()
14974=BooleanTest:test008()
14975=BooleanTest:test019()
14976=BooleanTest:test007()
14977=BooleanTest:test018()
14978=BooleanTest:test006()
14979=BooleanTest:test029()
14980=BooleanTest:test017()
14981=BooleanTest:test005()
14982=BooleanTest:test028()
14983=BooleanTest:test042()
14984=BooleanTest:test030()
14985=BooleanTest:test041()
14986=BooleanTest:test040()
14987=BooleanTest:testClass()
14988=BooleanTest:test050()
14989=BooleanTest:test009()
14990=X09:foo()
14991=CompletionInstanceofOperator1:foo(WWWCompletionInstanceof2)
14992=A:foo()
14993=AllJdtCoreTests:AllJdtCoreTests(String)
14994=SignatureAttribute:getSignatureIndex()
14995=SignatureAttribute:SignatureAttribute(byte[], IConstantPool, int)
14996=SignatureAttribute:getSignature()
14997=E:foo1(int)
14998=E:foo1()
14999=A:method()
15000=JavaElementDeltaBuilder:JavaElementDeltaBuilder(IJavaElement, int)
15001=JavaElementDeltaBuilder:removeElementInfo(IJavaElement)
15002=JavaElementDeltaBuilder:ListItem:ListItem(IJavaElement, IJavaElement)
15003=JavaElementDeltaBuilder:initialize()
15004=JavaElementDeltaBuilder:recordNewPositions(IJavaElement, int)
15005=JavaElementDeltaBuilder:getElementInfo(IJavaElement)
15006=JavaElementDeltaBuilder:findDeletions()
15007=JavaElementDeltaBuilder:removed(IJavaElement)
15008=JavaElementDeltaBuilder:added(IJavaElement)
15009=JavaElementDeltaBuilder:findAnnotationChanges(IAnnotation[], IAnnotation[], IJavaElement)
15010=JavaElementDeltaBuilder:trimDelta(JavaElementDelta)
15011=JavaElementDeltaBuilder:toString()
15012=JavaElementDeltaBuilder:equals(char[][][], char[][][])
15013=JavaElementDeltaBuilder:recordElementInfo(IJavaElement, JavaModel, int)
15014=JavaElementDeltaBuilder:isPositionedCorrectly(IJavaElement)
15015=JavaElementDeltaBuilder:buildDeltas()
15016=JavaElementDeltaBuilder:JavaElementDeltaBuilder(IJavaElement)
15017=JavaElementDeltaBuilder:findContentChange(JavaElementInfo, JavaElementInfo, IJavaElement)
15018=JavaElementDeltaBuilder:findChangesInPositioning(IJavaElement, int)
15019=JavaElementDeltaBuilder:insertPositions(IJavaElement[], boolean)
15020=JavaElementDeltaBuilder:findAdditions(IJavaElement, int)
15021=JavaElementDeltaBuilder:getOldPosition(IJavaElement)
15022=JavaElementDeltaBuilder:getNewPosition(IJavaElement)
15023=AnnotationCompletionParserTest:test0063()
15024=AnnotationCompletionParserTest:test0086()
15025=AnnotationCompletionParserTest:test0013_Method()
15026=AnnotationCompletionParserTest:test0071_Diet()
15027=AnnotationCompletionParserTest:test0108_Method()
15028=AnnotationCompletionParserTest:test0111_Method()
15029=AnnotationCompletionParserTest:test0051()
15030=AnnotationCompletionParserTest:test0097()
15031=AnnotationCompletionParserTest:test0074()
15032=AnnotationCompletionParserTest:test0034_Diet()
15033=AnnotationCompletionParserTest:test0062()
15034=AnnotationCompletionParserTest:test0085()
15035=AnnotationCompletionParserTest:test0041_Diet()
15036=AnnotationCompletionParserTest:test0009()
15037=AnnotationCompletionParserTest:test0050()
15038=AnnotationCompletionParserTest:test0073()
15039=AnnotationCompletionParserTest:test0096()
15040=AnnotationCompletionParserTest:test0118()
15041=AnnotationCompletionParserTest:test0041_Method()
15042=AnnotationCompletionParserTest:test0046_Method()
15043=AnnotationCompletionParserTest:test0053_Diet()
15044=AnnotationCompletionParserTest:test0042()
15045=AnnotationCompletionParserTest:test0053_Method()
15046=AnnotationCompletionParserTest:test0059_Method()
15047=AnnotationCompletionParserTest:test0088()
15048=AnnotationCompletionParserTest:test0110_Diet()
15049=AnnotationCompletionParserTest:test0030()
15050=AnnotationCompletionParserTest:test0076()
15051=AnnotationCompletionParserTest:test0099()
15052=AnnotationCompletionParserTest:test0064_Diet()
15053=AnnotationCompletionParserTest:test0110_Method()
15054=AnnotationCompletionParserTest:test0087()
15055=AnnotationCompletionParserTest:test0075()
15056=AnnotationCompletionParserTest:test0107_Diet()
15057=AnnotationCompletionParserTest:test0034_Method()
15058=AnnotationCompletionParserTest:test0040_Method()
15059=AnnotationCompletionParserTest:suite()
15060=AnnotationCompletionParserTest:test0098()
15061=AnnotationCompletionParserTest:test0065_Method()
15062=AnnotationCompletionParserTest:test0035_Diet()
15063=AnnotationCompletionParserTest:test0021()
15064=AnnotationCompletionParserTest:test0044()
15065=AnnotationCompletionParserTest:test0067()
15066=AnnotationCompletionParserTest:test0109_Method()
15067=AnnotationCompletionParserTest:test0032()
15068=AnnotationCompletionParserTest:test0055()
15069=AnnotationCompletionParserTest:test0078()
15070=AnnotationCompletionParserTest:test0020()
15071=AnnotationCompletionParserTest:test0024_Method()
15072=AnnotationCompletionParserTest:test0043()
15073=AnnotationCompletionParserTest:test0066()
15074=AnnotationCompletionParserTest:test0089()
15075=AnnotationCompletionParserTest:test0031()
15076=AnnotationCompletionParserTest:test0052_Method()
15077=AnnotationCompletionParserTest:test0035_Method()
15078=AnnotationCompletionParserTest:test0040_Diet()
15079=AnnotationCompletionParserTest:test0054()
15080=AnnotationCompletionParserTest:test0052_Diet()
15081=AnnotationCompletionParserTest:test0121()
15082=AnnotationCompletionParserTest:test0023()
15083=AnnotationCompletionParserTest:test0069()
15084=AnnotationCompletionParserTest:test0111_Diet()
15085=AnnotationCompletionParserTest:test0106_Diet()
15086=AnnotationCompletionParserTest:test0011()
15087=AnnotationCompletionParserTest:test0057()
15088=AnnotationCompletionParserTest:test0046_Diet()
15089=AnnotationCompletionParserTest:AnnotationCompletionParserTest(String)
15090=AnnotationCompletionParserTest:test0022()
15091=AnnotationCompletionParserTest:test0119_Method()
15092=AnnotationCompletionParserTest:test0045()
15093=AnnotationCompletionParserTest:test0068()
15094=AnnotationCompletionParserTest:test0058_Method()
15095=AnnotationCompletionParserTest:test0070_Method()
15096=AnnotationCompletionParserTest:test0013_Diet()
15097=AnnotationCompletionParserTest:test0024_Diet()
15098=AnnotationCompletionParserTest:test0010()
15099=AnnotationCompletionParserTest:test0033()
15100=AnnotationCompletionParserTest:test0106_Method()
15101=AnnotationCompletionParserTest:test0056()
15102=AnnotationCompletionParserTest:test0079()
15103=AnnotationCompletionParserTest:test0100()
15104=AnnotationCompletionParserTest:test0123()
15105=AnnotationCompletionParserTest:test0002()
15106=AnnotationCompletionParserTest:test0048()
15107=AnnotationCompletionParserTest:test0025()
15108=AnnotationCompletionParserTest:test0029_Diet()
15109=AnnotationCompletionParserTest:test0036()
15110=AnnotationCompletionParserTest:test0122()
15111=AnnotationCompletionParserTest:test0113_Method()
15112=AnnotationCompletionParserTest:test0001()
15113=AnnotationCompletionParserTest:test0120_Diet()
15114=AnnotationCompletionParserTest:test0105_Diet()
15115=AnnotationCompletionParserTest:test0012()
15116=AnnotationCompletionParserTest:test0105_Method()
15117=AnnotationCompletionParserTest:test0080()
15118=AnnotationCompletionParserTest:test0071_Method()
15119=AnnotationCompletionParserTest:test0102()
15120=AnnotationCompletionParserTest:test0125()
15121=AnnotationCompletionParserTest:test0058_Diet()
15122=AnnotationCompletionParserTest:test0114_Method()
15123=AnnotationCompletionParserTest:test0109_Diet()
15124=AnnotationCompletionParserTest:test0027()
15125=AnnotationCompletionParserTest:test0004()
15126=AnnotationCompletionParserTest:test0112_Diet()
15127=AnnotationCompletionParserTest:test0113_Diet()
15128=AnnotationCompletionParserTest:test0091()
15129=AnnotationCompletionParserTest:test0038()
15130=AnnotationCompletionParserTest:test0015()
15131=AnnotationCompletionParserTest:test0028_Diet()
15132=AnnotationCompletionParserTest:test0047_Diet()
15133=AnnotationCompletionParserTest:test0101()
15134=AnnotationCompletionParserTest:test0124()
15135=AnnotationCompletionParserTest:test0049()
15136=AnnotationCompletionParserTest:test0003()
15137=AnnotationCompletionParserTest:test0026()
15138=AnnotationCompletionParserTest:test0090()
15139=AnnotationCompletionParserTest:test0028_Method()
15140=AnnotationCompletionParserTest:test0014()
15141=AnnotationCompletionParserTest:test0037()
15142=AnnotationCompletionParserTest:test0082()
15143=AnnotationCompletionParserTest:test0070_Diet()
15144=AnnotationCompletionParserTest:test0104()
15145=AnnotationCompletionParserTest:test0127()
15146=AnnotationCompletionParserTest:test0120_Method()
15147=AnnotationCompletionParserTest:test0047_Method()
15148=AnnotationCompletionParserTest:test0006()
15149=AnnotationCompletionParserTest:test0093()
15150=AnnotationCompletionParserTest:test0115()
15151=AnnotationCompletionParserTest:test0017()
15152=AnnotationCompletionParserTest:getCompilerOptions()
15153=AnnotationCompletionParserTest:test0081()
15154=AnnotationCompletionParserTest:test0103()
15155=AnnotationCompletionParserTest:test0126()
15156=AnnotationCompletionParserTest:test0107_Method()
15157=AnnotationCompletionParserTest:test0005()
15158=AnnotationCompletionParserTest:test0092()
15159=AnnotationCompletionParserTest:test0029_Method()
15160=AnnotationCompletionParserTest:test0016()
15161=AnnotationCompletionParserTest:test0039()
15162=AnnotationCompletionParserTest:test0061()
15163=AnnotationCompletionParserTest:test0084()
15164=AnnotationCompletionParserTest:test0129()
15165=AnnotationCompletionParserTest:test0059_Diet()
15166=AnnotationCompletionParserTest:test0008()
15167=AnnotationCompletionParserTest:test0108_Diet()
15168=AnnotationCompletionParserTest:test0114_Diet()
15169=AnnotationCompletionParserTest:test0117()
15170=AnnotationCompletionParserTest:test0072()
15171=AnnotationCompletionParserTest:test0095()
15172=AnnotationCompletionParserTest:test0019()
15173=AnnotationCompletionParserTest:test0083()
15174=AnnotationCompletionParserTest:test0128()
15175=AnnotationCompletionParserTest:test0060()
15176=AnnotationCompletionParserTest:test0065_Diet()
15177=AnnotationCompletionParserTest:test0007()
15178=AnnotationCompletionParserTest:test0119_Diet()
15179=AnnotationCompletionParserTest:test0094()
15180=AnnotationCompletionParserTest:test0116()
15181=AnnotationCompletionParserTest:test0018()
15182=AnnotationCompletionParserTest:test0064_Method()
15183=AnnotationCompletionParserTest:test0112_Method()
15184=ASTStructuralPropertyTest:testDelete()
15185=ASTStructuralPropertyTest:testStructuralProperties()
15186=ASTStructuralPropertyTest:tearDown()
15187=ASTStructuralPropertyTest:testCreateInstance()
15188=ASTStructuralPropertyTest:getName()
15189=ASTStructuralPropertyTest:suite()
15190=ASTStructuralPropertyTest:testLocationInParent()
15191=ASTStructuralPropertyTest:testProtect()
15192=ASTStructuralPropertyTest:testNodeClassForType()
15193=ASTStructuralPropertyTest:ASTStructuralPropertyTest(String, int)
15194=ASTStructuralPropertyTest:ASTStructuralPropertyTest(String)
15195=ASTStructuralPropertyTest:setUp()
15196=A:foo()
15197=X02:foo()
15198=QualifiedThisReference:generateCode(BlockScope, CodeStream, boolean)
15199=QualifiedThisReference:analyseCode(BlockScope, FlowContext, FlowInfo, boolean)
15200=QualifiedThisReference:resolveType(BlockScope)
15201=QualifiedThisReference:analyseCode(BlockScope, FlowContext, FlowInfo)
15202=QualifiedThisReference:printExpression(int, StringBuffer)
15203=QualifiedThisReference:traverse(ASTVisitor, BlockScope)
15204=QualifiedThisReference:QualifiedThisReference(TypeReference, int, int)
15205=Buffer:getUnderlyingResource()
15206=Buffer:getText(int, int)
15207=Buffer:toString()
15208=Buffer:hasUnsavedChanges()
15209=Buffer:append(String)
15210=Buffer:replace(int, int, String)
15211=Buffer:moveAndResizeGap(int, int)
15212=Buffer:getChar(int)
15213=Buffer:isClosed()
15214=Buffer:replace(int, int, char[])
15215=Buffer:setContents(String)
15216=Buffer:append(char[])
15217=Buffer:removeBufferChangedListener(IBufferChangedListener)
15218=Buffer:isReadOnly()
15219=Buffer:addBufferChangedListener(IBufferChangedListener)
15220=Buffer:notifyChanged(BufferChangedEvent)
15221=Buffer:close()
15222=Buffer:getOwner()
15223=Buffer:getLength()
15224=Buffer:setContents(char[])
15225=Buffer:getContents()
15226=Buffer:setReadOnly(boolean)
15227=Buffer:save(IProgressMonitor, boolean)
15228=Buffer:getCharacters()
15229=Buffer:Buffer(IFile, IOpenable, boolean)
15230=ManifestAnalyzer:addCurrentTokenJarWhenNecessary(StringBuffer)
15231=ManifestAnalyzer:getClasspathSectionsCount()
15232=ManifestAnalyzer:getCalledFileNames()
15233=ManifestAnalyzer:analyzeManifestContents(InputStream)
15234=SourceFile:getContents()
15235=SourceFile:extractTypeName()
15236=SourceFile:equals(Object)
15237=SourceFile:getMainTypeName()
15238=SourceFile:typeLocator()
15239=SourceFile:getFileName()
15240=SourceFile:SourceFile(IFile, ClasspathMultiDirectory)
15241=SourceFile:hashCode()
15242=SourceFile:getPackageName()
15243=SourceFile:SourceFile(IFile, ClasspathMultiDirectory, boolean)
15244=SourceFile:ignoreOptionalProblems()
15245=SourceFile:toString()
15246=TypeResolveTests:testResolveSiblingTypeInInner()
15247=TypeResolveTests:testParamAnnotations8()
15248=TypeResolveTests:test479963a()
15249=TypeResolveTests:testParamAnnotations7()
15250=TypeResolveTests:testBug458613()
15251=TypeResolveTests:getType(IType[], String)
15252=TypeResolveTests:testResolveTypeWithTypeImport()
15253=TypeResolveTests:testResolveTypeInInner2()
15254=TypeResolveTests:testParamAnnotations6()
15255=TypeResolveTests:testResolveTypeInBinary1()
15256=TypeResolveTests:testParamAnnotations5()
15257=TypeResolveTests:test405026b()
15258=TypeResolveTests:testResolveTypeInInner()
15259=TypeResolveTests:testResolveInSecondaryType()
15260=TypeResolveTests:testBug458613b()
15261=TypeResolveTests:assertTypesEqual(String, String[][])
15262=TypeResolveTests:test479963()
15263=TypeResolveTests:testResolveInnerType2()
15264=TypeResolveTests:testResolveParameterizedType()
15265=TypeResolveTests:testParamAnnotations()
15266=TypeResolveTests:getType(String)
15267=TypeResolveTests:suite()
15268=TypeResolveTests:testResolveInnerType1()
15269=TypeResolveTests:testParamAnnotations9()
15270=TypeResolveTests:tearDownSuite()
15271=TypeResolveTests:testResolveTypeWithOnDemandImport()
15272=TypeResolveTests:TypeResolveTests(String)
15273=TypeResolveTests:testResolveMemberTypeInInner()
15274=TypeResolveTests:resolveType(String, String)
15275=TypeResolveTests:test377710()
15276=TypeResolveTests:testParamAnnotations4()
15277=TypeResolveTests:test405026a()
15278=TypeResolveTests:testResolveTypeInBinary3()
15279=TypeResolveTests:test433404()
15280=TypeResolveTests:testParamAnnotations3()
15281=TypeResolveTests:testResolveTypeInBinary2()
15282=TypeResolveTests:testResolveTypeWithNoImports()
15283=TypeResolveTests:testParamAnnotations2()
15284=TypeResolveTests:testResolveString()
15285=TypeResolveTests:testResolveTypeInJavaLang()
15286=TypeResolveTests:setUpSuite()
15287=TypeResolveTests:testResolveTypeInBinary4()
15288=TypeResolveTests:testBug342393()
15289=X:foo()
15290=SourceMethodElementInfo:setReturnType(char[])
15291=SourceMethodElementInfo:getReturnTypeName()
15292=SourceMethodElementInfo:isAnnotationMethod()
15293=SourceMethodElementInfo:isConstructor()
15294=SourceMethodElementInfo:getTypeParameterNames()
15295=SourceMethodElementInfo:getExceptionTypeNames()
15296=SourceMethodElementInfo:getArgumentNames()
15297=SourceMethodElementInfo:setArgumentNames(char[][])
15298=SourceMethodElementInfo:setExceptionTypeNames(char[][])
15299=SourceMethodElementInfo:getTypeParameterBounds()
15300=firstClass:myMethod()
15301=NestedHelloWorldAnnotationProcessor:NestedHelloWorldAnnotationProcessor(AnnotationProcessorEnvironment)
15302=NestedHelloWorldAnnotationProcessor:process()
15303=NestedHelloWorldAnnotationProcessor:getCode()
15304=ILocalVariableAttribute:getLocalVariableTable()
15305=ILocalVariableAttribute:getLocalVariableTableLength()
15306=FlowAnalysisTest8:testReferenceExpression1()
15307=FlowAnalysisTest8:testLambda_01()
15308=FlowAnalysisTest8:suite()
15309=FlowAnalysisTest8:testLambda_02()
15310=FlowAnalysisTest8:testLambda_03()
15311=FlowAnalysisTest8:testReferenceExpression_nullAnnotation_3()
15312=FlowAnalysisTest8:testReferenceExpression_nullAnnotation_2()
15313=FlowAnalysisTest8:testReferenceExpression_nullAnnotation_1()
15314=FlowAnalysisTest8:testLambda_05a()
15315=FlowAnalysisTest8:testLambda_04()
15316=FlowAnalysisTest8:testLambda_05()
15317=FlowAnalysisTest8:testClass()
15318=FlowAnalysisTest8:FlowAnalysisTest8(String)
15319=FlowAnalysisTest8:testReferenceExpression_null_1()
15320=NullChecksTests:_testIfNonNull()
15321=NullChecksTests:NullChecksTests(String)
15322=NullChecksTests:testRequireNonEmptyString()
15323=NullChecksTests:testRequireNonEmptyCollection()
15324=NullChecksTests:testRequireNonNull()
15325=NullChecksTests:testAssertNonNullElements()
15326=NullChecksTests:testIsNull()
15327=NullChecksTests:testNonNullElse()
15328=NullChecksTests:testAssertNonNull1()
15329=NullChecksTests:testClass()
15330=NullChecksTests:suite()
15331=NullChecksTests:testAsNullable()
15332=Test:foo()
15333=Example:bar()
15334=Example:foo()
15335=DocCommentParser:pushThrowName(Object)
15336=DocCommentParser:createTag()
15337=DocCommentParser:DocCommentParser(AST, Scanner, boolean)
15338=DocCommentParser:parse(int[])
15339=DocCommentParser:parseReturn()
15340=DocCommentParser:parseIdentifierTag(boolean)
15341=DocCommentParser:refreshInlineTagPosition(int)
15342=DocCommentParser:pushSeeRef(Object)
15343=DocCommentParser:pushParamName(boolean)
15344=DocCommentParser:parse(int, int)
15345=DocCommentParser:createArgumentReference(char[], int, boolean, Object, long[], long)
15346=DocCommentParser:createMethodReference(Object, List)
15347=DocCommentParser:toString()
15348=DocCommentParser:pushText(int, int)
15349=DocCommentParser:setComment(int, int)
15350=DocCommentParser:updateDocComment()
15351=DocCommentParser:parseTag(int)
15352=DocCommentParser:createTypeReference(int)
15353=DocCommentParser:createFieldReference(Object)
15354=Foo:foo()
15355=X08:foo(boolean)
15356=ITypeRequestor:accept(ISourceType[], PackageBinding, AccessRestriction)
15357=ITypeRequestor:accept(IBinaryType, PackageBinding, AccessRestriction)
15358=ITypeRequestor:accept(ICompilationUnit, AccessRestriction)
15359=ProblemFactory:getProblemFactory(Locale)
15360=ProblemFactory:ProblemFactory(Locale)
15361=TypeParameter:resolve(ClassScope)
15362=TypeParameter:generateCode(BlockScope, CodeStream)
15363=TypeParameter:traverse(ASTVisitor, BlockScope)
15364=TypeParameter:printStatement(int, StringBuffer)
15365=TypeParameter:traverse(ASTVisitor, ClassScope)
15366=Test:main(String[])
15367=Test:main(String[])
15368=X05:foo()
15369=X:setFoo(String, int, int, int)
15370=HashtableOfIntValues:clone()
15371=HashtableOfIntValues:containsKey(char[])
15372=HashtableOfIntValues:get(char[])
15373=HashtableOfIntValues:HashtableOfIntValues(int)
15374=HashtableOfIntValues:toString()
15375=HashtableOfIntValues:size()
15376=HashtableOfIntValues:rehash()
15377=HashtableOfIntValues:removeKey(char[])
15378=HashtableOfIntValues:put(char[], int)
15379=HashtableOfIntValues:HashtableOfIntValues()
15380=CharArrayCache:put(char[], int)
15381=CharArrayCache:size()
15382=CharArrayCache:CharArrayCache()
15383=CharArrayCache:CharArrayCache(int)
15384=CharArrayCache:remove(char[])
15385=CharArrayCache:putIfAbsent(char[], int)
15386=CharArrayCache:rehash()
15387=CharArrayCache:clear()
15388=CharArrayCache:returnKeyFor(int)
15389=CharArrayCache:get(char[])
15390=CharArrayCache:containsKey(char[])
15391=CharArrayCache:toString()
15392=ASTRewritingMoveCodeTest:testNestedCopies_only_2_3_4()
15393=ASTRewritingMoveCodeTest:testMoveMultipleNodes4()
15394=ASTRewritingMoveCodeTest:testMoveDeclSameLevel()
15395=ASTRewritingMoveCodeTest:testChangesInMoveCD()
15396=ASTRewritingMoveCodeTest:testMoveMultipleNodes3()
15397=ASTRewritingMoveCodeTest:testMoveMultipleNodes2()
15398=ASTRewritingMoveCodeTest:testChangesInMove()
15399=ASTRewritingMoveCodeTest:testMoveDeclDifferentLevel_only_2_3_4()
15400=ASTRewritingMoveCodeTest:testCopyMultipleNodes()
15401=ASTRewritingMoveCodeTest:testMultipleCopiesOfSameNode()
15402=ASTRewritingMoveCodeTest:testCopyMultipleNodes0()
15403=ASTRewritingMoveCodeTest:testMoveDeclDifferentLevelCD_only_2_3_4()
15404=ASTRewritingMoveCodeTest:testMoveDeclSameLevelCD()
15405=ASTRewritingMoveCodeTest:testCopyMultipleNodes2()
15406=ASTRewritingMoveCodeTest:testSwapCD()
15407=ASTRewritingMoveCodeTest:testMoveForStatementToForBlock()
15408=ASTRewritingMoveCodeTest:testMove_only_2_3_4()
15409=ASTRewritingMoveCodeTest:suite()
15410=ASTRewritingMoveCodeTest:testCopyMultipleNodes1()
15411=ASTRewritingMoveCodeTest:ASTRewritingMoveCodeTest(String, int)
15412=ASTRewritingMoveCodeTest:testCopyMultipleNodes4()
15413=ASTRewritingMoveCodeTest:testMultipleCopiesOfSameNodeAndMove()
15414=ASTRewritingMoveCodeTest:testReplaceMoveMultiple()
15415=ASTRewritingMoveCodeTest:testCopyMultipleNodes3()
15416=ASTRewritingMoveCodeTest:ASTRewritingMoveCodeTest(String)
15417=ASTRewritingMoveCodeTest:testMoveStatements()
15418=ASTRewritingMoveCodeTest:testMoveStatementsCD()
15419=ASTRewritingMoveCodeTest:testCopyFromDeleted()
15420=ASTRewritingMoveCodeTest:testMoveMultipleNodes()
15421=ASTRewritingMoveCodeTest:testMoveForStatementToForBlockCD()
15422=ASTRewritingMoveCodeTest:testSwap()
15423=A:goo()
15424=A:bar()
15425=A:foo(int, int)
15426=JavadocBugsCompletionModelTest:testBug117183d()
15427=JavadocBugsCompletionModelTest:testBug114341e()
15428=JavadocBugsCompletionModelTest:testBug185576b()
15429=JavadocBugsCompletionModelTest:testBug68757()
15430=JavadocBugsCompletionModelTest:testBug139621d()
15431=JavadocBugsCompletionModelTest:testBug117183c()
15432=JavadocBugsCompletionModelTest:testBug114341d()
15433=JavadocBugsCompletionModelTest:testBug139621e()
15434=JavadocBugsCompletionModelTest:testBug171016()
15435=JavadocBugsCompletionModelTest:setUp()
15436=JavadocBugsCompletionModelTest:_testBug171031()
15437=JavadocBugsCompletionModelTest:testBug114341c()
15438=JavadocBugsCompletionModelTest:testBug139621b()
15439=JavadocBugsCompletionModelTest:_testBug75551()
15440=JavadocBugsCompletionModelTest:testBug3270a()
15441=JavadocBugsCompletionModelTest:testBug114341b()
15442=JavadocBugsCompletionModelTest:testBug139621c()
15443=JavadocBugsCompletionModelTest:testBug115662c()
15444=JavadocBugsCompletionModelTest:testBug115662b()
15445=JavadocBugsCompletionModelTest:testBug87868()
15446=JavadocBugsCompletionModelTest:testBug139621a()
15447=JavadocBugsCompletionModelTest:testBug115662a()
15448=JavadocBugsCompletionModelTest:testBug3270()
15449=JavadocBugsCompletionModelTest:testBug67732()
15450=JavadocBugsCompletionModelTest:testBug117183b()
15451=JavadocBugsCompletionModelTest:testBug144866()
15452=JavadocBugsCompletionModelTest:testBug117183a()
15453=JavadocBugsCompletionModelTest:testBug114341f()
15454=JavadocBugsCompletionModelTest:testBug185576a()
15455=JavadocBugsCompletionModelTest:testBug255752()
15456=JavadocBugsCompletionModelTest:testBug113374b()
15457=JavadocBugsCompletionModelTest:testBug86112()
15458=JavadocBugsCompletionModelTest:testBug22043a()
15459=JavadocBugsCompletionModelTest:JavadocBugsCompletionModelTest(String)
15460=JavadocBugsCompletionModelTest:testBug249785a()
15461=JavadocBugsCompletionModelTest:testBug22043b()
15462=JavadocBugsCompletionModelTest:testBug171016b()
15463=JavadocBugsCompletionModelTest:suite()
15464=JavadocBugsCompletionModelTest:testBug22043()
15465=JavadocBugsCompletionModelTest:testBug118311()
15466=JavadocBugsCompletionModelTest:testBug22043c()
15467=JavadocBugsCompletionModelTest:testBug118092()
15468=JavadocBugsCompletionModelTest:testBug255752a()
15469=JavadocBugsCompletionModelTest:testBug113374a()
15470=JavadocBugsCompletionModelTest:testBug118105()
15471=JavadocBugsCompletionModelTest:testBug3270b()
15472=JavadocBugsCompletionModelTest:testBug114341a()
15473=JavadocBugsCompletionModelTest:testBug68757a()
15474=JavadocBugsCompletionModelTest:testBug113376a()
15475=JavadocBugsCompletionModelTest:testBug118397d()
15476=JavadocBugsCompletionModelTest:testBug139621h()
15477=JavadocBugsCompletionModelTest:testBug68757b()
15478=JavadocBugsCompletionModelTest:testBug113376b()
15479=JavadocBugsCompletionModelTest:testBug139621i()
15480=JavadocBugsCompletionModelTest:testBug118397c()
15481=JavadocBugsCompletionModelTest:testBug139621f()
15482=JavadocBugsCompletionModelTest:testBug118397b()
15483=JavadocBugsCompletionModelTest:testBug118397a()
15484=JavadocBugsCompletionModelTest:testBug139621g()
15485=Expression:generateOptimizedStringConcatenationCreation(BlockScope, CodeStream, int)
15486=Expression:postConversionType(Scope)
15487=Expression:checkNPE(BlockScope, FlowContext, FlowInfo, int)
15488=Expression:toTypeReference()
15489=Expression:isCompactableOperation()
15490=Expression:optimizedBooleanConstant()
15491=Expression:nullStatus(FlowInfo, FlowContext)
15492=Expression:forcedToBeRaw(ReferenceContext)
15493=Expression:tagAsNeedCheckCast()
15494=Expression:isFunctionalType()
15495=Expression:traverse(ASTVisitor, ClassScope)
15496=Expression:generateOptimizedStringConcatenation(BlockScope, CodeStream, int)
15497=Expression:print(int, StringBuffer)
15498=Expression:checkNPE(BlockScope, FlowContext, FlowInfo)
15499=Expression:analyseCode(BlockScope, FlowContext, FlowInfo, boolean)
15500=Expression:setExpectedType(TypeBinding)
15501=Expression:isPotentiallyCompatibleWith(TypeBinding, Scope)
15502=Expression:nullAnnotatedVariableBinding(boolean)
15503=Expression:generateCode(BlockScope, CodeStream)
15504=Expression:generateCode(BlockScope, CodeStream, boolean)
15505=Expression:checkUnsafeCast(Scope, TypeBinding, TypeBinding, TypeBinding, boolean)
15506=Expression:analyseCode(BlockScope, FlowContext, FlowInfo)
15507=Expression:checkNPEbyUnboxing(BlockScope, FlowContext, FlowInfo)
15508=Expression:computeConversion(Scope, TypeBinding, TypeBinding)
15509=Expression:checkCastTypesCompatibility(Scope, TypeBinding, TypeBinding, Expression)
15510=Expression:localVariableBinding()
15511=Expression:statementExpression()
15512=Expression:isPolyExpression()
15513=Expression:printExpression(int, StringBuffer)
15514=Expression:isExactMethodReference()
15515=Expression:tagAsUnnecessaryCast(Scope, TypeBinding)
15516=Expression:getPolyExpressions()
15517=Expression:isCompatibleWith(TypeBinding, Scope)
15518=Expression:printStatement(int, StringBuffer)
15519=Expression:Expression()
15520=Expression:resolveExpressionExpecting(TypeBinding, Scope, InferenceContext18)
15521=Expression:traverse(ASTVisitor, BlockScope)
15522=Expression:generateOptimizedBoolean(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
15523=Expression:getDirectBinding(Expression)
15524=Expression:markAsNonNull()
15525=Expression:resolveType(ClassScope)
15526=Expression:resolve(BlockScope)
15527=Expression:isPertinentToApplicability(TypeBinding, MethodBinding)
15528=Expression:sIsMoreSpecific(TypeBinding, TypeBinding, Scope)
15529=Expression:getAllInheritedMethods0(ReferenceBinding, ArrayList<MethodBinding>)
15530=Expression:isConstantValueOfTypeAssignableToType(TypeBinding, TypeBinding)
15531=Expression:resolveType(BlockScope)
15532=Expression:resolveTypeExpecting(BlockScope, TypeBinding)
15533=Expression:setExpressionContext(ExpressionContext)
15534=Expression:isBoxingCompatibleWith(TypeBinding, Scope)
15535=Expression:reusableJSRTarget()
15536=Expression:isPolyExpression(MethodBinding)
15537=Expression:isConstantValueRepresentable(Constant, int, int)
15538=Expression:isTypeReference()
15539=Expression:getAllOriginalInheritedMethods(ReferenceBinding)
15540=ProblemReporter:fieldHiding(FieldDeclaration, Binding)
15541=ProblemReporter:javadocInvalidReference(int, int)
15542=ProblemReporter:uninitializedLocalVariable(LocalVariableBinding, ASTNode)
15543=ProblemReporter:arrayConstantsOnlyInArrayInitializers(int, int)
15544=ProblemReporter:javadocMissingReference(int, int)
15545=ProblemReporter:genericTypeCannotExtendThrowable(TypeDeclaration)
15546=ProblemReporter:typeMismatchError(TypeBinding, TypeBinding, ASTNode)
15547=ProblemReporter:unusedPrivateConstructor(ConstructorDeclaration)
15548=ProblemReporter:javadocInvalidThrowsClass(int, int)
15549=ProblemReporter:illegalModifierForLocalClass(SourceTypeBinding)
15550=ProblemReporter:possibleAccidentalBooleanAssignment(Assignment)
15551=ProblemReporter:parseErrorMergeTokens(int, int, String)
15552=ProblemReporter:undocumentedEmptyBlock(int, int)
15553=ProblemReporter:duplicateImport(ImportReference)
15554=ProblemReporter:handle(int, String[], String[], int, int, CompilationResult)
15555=ProblemReporter:parseErrorInsertToComplete(int, int, String, String)
15556=ProblemReporter:staticMemberOfParameterizedType(ASTNode, ReferenceBinding)
15557=ProblemReporter:abstractMethodMustBeImplemented(SourceTypeBinding, MethodBinding)
15558=ProblemReporter:invalidNullToSynchronize(Expression)
15559=ProblemReporter:errorNoMethodFor(MessageSend, TypeBinding, TypeBinding[])
15560=ProblemReporter:missingSerialVersion(TypeDeclaration)
15561=ProblemReporter:parseErrorDeleteTokens(int, int)
15562=ProblemReporter:unexpectedStaticModifierForField(SourceTypeBinding, FieldDeclaration)
15563=ProblemReporter:incorrectSwitchType(Expression, TypeBinding)
15564=ProblemReporter:innerTypesCannotDeclareStaticInitializers(ReferenceBinding, ASTNode)
15565=ProblemReporter:finalMethodCannotBeOverridden(MethodBinding, MethodBinding)
15566=ProblemReporter:stringConstantIsExceedingUtf8Limit(ASTNode)
15567=ProblemReporter:illegalVisibilityModifierCombinationForMemberType(SourceTypeBinding)
15568=ProblemReporter:nativeMethodsCannotBeStrictfp(ReferenceBinding, AbstractMethodDeclaration)
15569=ProblemReporter:noMoreAvailableSpaceInConstantPool(TypeDeclaration)
15570=ProblemReporter:useEnumAsAnIdentifier(int, int)
15571=ProblemReporter:corruptedSignature(TypeBinding, char[], int)
15572=ProblemReporter:invalidUsageOfAnnotationDeclarations(AnnotationTypeDeclaration)
15573=ProblemReporter:javadocMissingThrowsClassName(int, int)
15574=ProblemReporter:typeMismatchError(TypeBinding, TypeVariableBinding, ReferenceBinding, ASTNode)
15575=ProblemReporter:bytecodeExceeds64KLimit(TypeDeclaration)
15576=ProblemReporter:overridesDeprecatedMethod(MethodBinding, MethodBinding)
15577=ProblemReporter:javadocUnexpectedTag(int, int)
15578=ProblemReporter:invalidUnaryExpression(Expression)
15579=ProblemReporter:nonGenericTypeCannotBeParameterized(ASTNode, TypeBinding, TypeBinding[])
15580=ProblemReporter:needImplementation()
15581=ProblemReporter:unnecessaryCastForArgument(CastExpression, TypeBinding)
15582=ProblemReporter:invalidContinue(ASTNode)
15583=ProblemReporter:inheritedMethodReducesVisibility(SourceTypeBinding, MethodBinding, MethodBinding[])
15584=ProblemReporter:invalidTypeVariableAsException(TypeBinding, ASTNode)
15585=ProblemReporter:javadocInvalidConstructor(Statement, MethodBinding, int)
15586=ProblemReporter:conditionalArgumentsIncompatibleTypes(ConditionalExpression, TypeBinding, TypeBinding)
15587=ProblemReporter:forwardReference(Reference, int, TypeBinding)
15588=ProblemReporter:nonExternalizedStringLiteral(ASTNode)
15589=ProblemReporter:parseErrorInsertToCompleteScope(int, int, String)
15590=ProblemReporter:notCompatibleTypesErrorInForeach(Expression, TypeBinding, TypeBinding)
15591=ProblemReporter:javadocDuplicatedParamTag(JavadocSingleNameReference, int)
15592=ProblemReporter:shouldReturn(TypeBinding, ASTNode)
15593=ProblemReporter:wildcardInvocation(ASTNode, TypeBinding, MethodBinding, TypeBinding[])
15594=ProblemReporter:duplicateCase(CaseStatement)
15595=ProblemReporter:cannotAllocateVoidArray(Expression)
15596=ProblemReporter:cannotDireclyInvokeAbstractMethod(MessageSend, MethodBinding)
15597=ProblemReporter:invalidExpressionAsStatement(Expression)
15598=ProblemReporter:unusedPrivateMethod(AbstractMethodDeclaration)
15599=ProblemReporter:noSuchEnclosingInstance(TypeBinding, ASTNode, boolean)
15600=ProblemReporter:isClassPathCorrect(char[][], CompilationUnitDeclaration)
15601=ProblemReporter:duplicateModifierForVariable(LocalDeclaration, boolean)
15602=ProblemReporter:parseErrorUnexpectedEnd(int, int)
15603=ProblemReporter:unnecessaryElse(ASTNode)
15604=ProblemReporter:uninitializedBlankFinalField(FieldBinding, ASTNode)
15605=ProblemReporter:packageCollidesWithType(CompilationUnitDeclaration)
15606=ProblemReporter:javadocDeprecatedField(FieldBinding, ASTNode, int)
15607=ProblemReporter:cannotAssignToFinalOuterLocal(LocalVariableBinding, ASTNode)
15608=ProblemReporter:illegalVisibilityModifierForInterfaceMemberType(SourceTypeBinding)
15609=ProblemReporter:notCompatibleTypesError(InstanceOfExpression, TypeBinding, TypeBinding)
15610=ProblemReporter:invalidParameterizedExceptionType(TypeBinding, ASTNode)
15611=ProblemReporter:incorrectLocationForEmptyDimension(ArrayAllocationExpression, int)
15612=ProblemReporter:objectCannotBeGeneric(TypeDeclaration)
15613=ProblemReporter:wrongSequenceOfExceptionTypesError(TryStatement, TypeBinding, int, TypeBinding)
15614=ProblemReporter:nonStaticAccessToStaticMethod(ASTNode, MethodBinding)
15615=ProblemReporter:invalidField(FieldReference, TypeBinding)
15616=ProblemReporter:returnTypeCannotBeVoidArray(SourceTypeBinding, MethodDeclaration)
15617=ProblemReporter:forwardTypeVariableReference(ASTNode, TypeVariableBinding)
15618=ProblemReporter:hierarchyHasProblems(SourceTypeBinding)
15619=ProblemReporter:attemptToReturnVoidValue(ReturnStatement)
15620=ProblemReporter:javadocAmbiguousMethodReference(int, int, Binding, int)
15621=ProblemReporter:assignmentHasNoEffect(Assignment, char[])
15622=ProblemReporter:caseExpressionMustBeConstant(Expression)
15623=ProblemReporter:unexpectedStaticModifierForMethod(ReferenceBinding, AbstractMethodDeclaration)
15624=ProblemReporter:invalidConstructor(Statement, MethodBinding)
15625=ProblemReporter:javadocInvalidParamName(JavadocSingleNameReference, int)
15626=ProblemReporter:abstractMethodInAbstractClass(SourceTypeBinding, AbstractMethodDeclaration)
15627=ProblemReporter:invalidField(QualifiedNameReference, FieldBinding, int, TypeBinding)
15628=ProblemReporter:illegalModifierForInterface(SourceTypeBinding)
15629=ProblemReporter:packageIsNotExpectedPackage(CompilationUnitDeclaration)
15630=ProblemReporter:variableTypeCannotBeVoid(AbstractVariableDeclaration)
15631=ProblemReporter:nestedClassCannotDeclareInterface(TypeDeclaration)
15632=ProblemReporter:unusedArgument(LocalDeclaration)
15633=ProblemReporter:wildcardAssignment(TypeBinding, TypeBinding, ASTNode)
15634=ProblemReporter:invalidBreak(ASTNode)
15635=ProblemReporter:mustUseAStaticMethod(MessageSend, MethodBinding)
15636=ProblemReporter:illegalAbstractModifierCombinationForMethod(ReferenceBinding, AbstractMethodDeclaration)
15637=ProblemReporter:duplicateDefaultCase(ASTNode)
15638=ProblemReporter:syntaxError(int, int, int, int, char[], String, String)
15639=ProblemReporter:scannerError(Parser, String)
15640=ProblemReporter:alreadyDefinedLabel(char[], ASTNode)
15641=ProblemReporter:mustDefineDimensionsOrInitializer(ArrayAllocationExpression)
15642=ProblemReporter:cannotUseSuperInCodeSnippet(int, int)
15643=ProblemReporter:conflictingImport(ImportReference)
15644=ProblemReporter:duplicateTypes(CompilationUnitDeclaration, TypeDeclaration)
15645=ProblemReporter:unusedLocalVariable(LocalDeclaration)
15646=ProblemReporter:redefineArgument(Argument)
15647=ProblemReporter:finalVariableBound(TypeVariableBinding, TypeReference)
15648=ProblemReporter:parseErrorReplaceTokens(int, int, String)
15649=ProblemReporter:duplicateSuperinterface(SourceTypeBinding, TypeDeclaration, ReferenceBinding)
15650=ProblemReporter:javadocDuplicatedThrowsClassName(TypeReference, int)
15651=ProblemReporter:superTypeCannotUseWildcard(SourceTypeBinding, TypeReference, TypeBinding)
15652=ProblemReporter:noMoreAvailableSpaceForArgument(LocalVariableBinding, ASTNode)
15653=ProblemReporter:cannotThrowNull(ThrowStatement)
15654=ProblemReporter:javadocInvalidValueReference(int, int)
15655=ProblemReporter:cannotImportPackage(ImportReference)
15656=ProblemReporter:indirectAccessToStaticType(ASTNode, ReferenceBinding)
15657=ProblemReporter:duplicateFieldInType(SourceTypeBinding, FieldDeclaration)
15658=ProblemReporter:javadocMissingReturnTag(int, int, int)
15659=ProblemReporter:signalNoImplicitStringConversionForCharArrayExpression(Expression)
15660=ProblemReporter:illegalModifierForMemberClass(SourceTypeBinding)
15661=ProblemReporter:illegalVisibilityModifierCombinationForField(ReferenceBinding, FieldDeclaration)
15662=ProblemReporter:unnecessaryInstanceof(InstanceOfExpression, TypeBinding)
15663=ProblemReporter:needToEmulateMethodAccess(MethodBinding, ASTNode)
15664=ProblemReporter:superinterfacesCollide(ReferenceBinding, TypeDeclaration, ReferenceBinding, ReferenceBinding)
15665=ProblemReporter:deprecatedMethod(MethodBinding, ASTNode)
15666=ProblemReporter:incompatibleExceptionInThrowsClause(SourceTypeBinding, MethodBinding, MethodBinding, ReferenceBinding)
15667=ProblemReporter:javadocInvalidSeeReferenceArgs(int, int)
15668=ProblemReporter:constantOutOfRange(Literal, TypeBinding)
15669=ProblemReporter:staticAndInstanceConflict(MethodBinding, MethodBinding)
15670=ProblemReporter:parseErrorReplaceToken(int, int, int, char[], String, String)
15671=ProblemReporter:illegalModifierForMemberInterface(SourceTypeBinding)
15672=ProblemReporter:fieldsOrThisBeforeConstructorInvocation(ThisReference)
15673=ProblemReporter:parseErrorNoSuggestionForTokens(int, int)
15674=ProblemReporter:superinterfaceMustBeAnInterface(SourceTypeBinding, TypeReference, ReferenceBinding)
15675=ProblemReporter:emptyControlFlowStatement(int, int)
15676=ProblemReporter:javadocDeprecatedType(TypeBinding, ASTNode, int)
15677=ProblemReporter:mustSpecifyPackage(CompilationUnitDeclaration)
15678=ProblemReporter:unnecessaryEnclosingInstanceSpecification(Expression, ReferenceBinding)
15679=ProblemReporter:isIdentifier(int)
15680=ProblemReporter:hidingEnclosingType(TypeDeclaration)
15681=ProblemReporter:parseErrorInsertToCompletePhrase(int, int, String)
15682=ProblemReporter:staticFieldAccessToNonStaticVariable(ASTNode, FieldBinding)
15683=ProblemReporter:javadocMissingParamTag(Argument, int)
15684=ProblemReporter:unresolvableReference(NameReference, Binding)
15685=ProblemReporter:invalidTypeToSynchronize(Expression, TypeBinding)
15686=ProblemReporter:referenceMustBeArrayTypeAt(TypeBinding, ArrayReference)
15687=ProblemReporter:incompatibleReturnType(MethodBinding, MethodBinding)
15688=ProblemReporter:annotationTypeMemberDeclarationWithConstructorName(AnnotationTypeMemberDeclaration)
15689=ProblemReporter:abstractMethodCannotBeOverridden(SourceTypeBinding, MethodBinding)
15690=ProblemReporter:attemptToReturnNonVoidExpression(ReturnStatement, TypeBinding)
15691=ProblemReporter:undefinedTypeVariableSignature(char[], ReferenceBinding)
15692=ProblemReporter:argumentTypeCannotBeVoid(SourceTypeBinding, AbstractMethodDeclaration, Argument)
15693=ProblemReporter:handle(int, String[], String[], int, int)
15694=ProblemReporter:cannotReturnInInitializer(ASTNode)
15695=ProblemReporter:invalidEnclosingType(Expression, TypeBinding, ReferenceBinding)
15696=ProblemReporter:duplicateModifierForField(ReferenceBinding, FieldDeclaration)
15697=ProblemReporter:anonymousClassCannotExtendFinalClass(Expression, TypeBinding)
15698=ProblemReporter:invalidParenthesizedExpression(ASTNode)
15699=ProblemReporter:invalidUsageOfAnnotation(Annotation)
15700=ProblemReporter:interfaceCannotHaveConstructors(ConstructorDeclaration)
15701=ProblemReporter:objectCannotHaveSuperTypes(SourceTypeBinding)
15702=ProblemReporter:duplicateModifierForType(SourceTypeBinding)
15703=ProblemReporter:forbiddenReference(TypeBinding, ASTNode, String)
15704=ProblemReporter:javadocMalformedSeeReference(int, int)
15705=ProblemReporter:illegalModifierForField(ReferenceBinding, FieldDeclaration)
15706=ProblemReporter:invalidExplicitConstructorCall(ASTNode)
15707=ProblemReporter:invalidFileNameForPackageAnnotations(Annotation)
15708=ProblemReporter:illegalVoidExpression(ASTNode)
15709=ProblemReporter:interfaceCannotHaveInitializers(SourceTypeBinding, FieldDeclaration)
15710=ProblemReporter:javadocInvalidField(int, int, Binding, TypeBinding, int)
15711=ProblemReporter:operatorOnlyValidOnNumericType(CompoundAssignment, TypeBinding, TypeBinding)
15712=ProblemReporter:unreachableCode(Statement)
15713=ProblemReporter:tooManyDimensions(ASTNode)
15714=ProblemReporter:parameterizedMemberTypeMissingArguments(ASTNode, TypeBinding)
15715=ProblemReporter:abortDueToInternalError(String)
15716=ProblemReporter:indirectAccessToStaticField(ASTNode, FieldBinding)
15717=ProblemReporter:unusedImport(ImportReference)
15718=ProblemReporter:javadocUnexpectedText(int, int)
15719=ProblemReporter:illegalPrimitiveOrArrayTypeForEnclosingInstance(TypeBinding, ASTNode)
15720=ProblemReporter:missingReturnType(AbstractMethodDeclaration)
15721=ProblemReporter:overridesPackageDefaultMethod(MethodBinding, MethodBinding)
15722=ProblemReporter:javadocUnterminatedInlineTag(int, int)
15723=ProblemReporter:parseError(int, int, int, char[], String, String[])
15724=ProblemReporter:rawMemberTypeCannotBeParameterized(ASTNode, ReferenceBinding, TypeBinding[])
15725=ProblemReporter:javadocMissingThrowsTag(TypeReference, int)
15726=ProblemReporter:duplicateTypeParameterInType(TypeParameter)
15727=ProblemReporter:unusedPrivateField(FieldDeclaration)
15728=ProblemReporter:fieldLocation(FieldBinding, ASTNode)
15729=ProblemReporter:hierarchyCircularity(SourceTypeBinding, ReferenceBinding, TypeReference)
15730=ProblemReporter:unnecessaryCast(CastExpression)
15731=ProblemReporter:unsafeCast(CastExpression)
15732=ProblemReporter:parseErrorMisplacedConstruct(int, int)
15733=ProblemReporter:illegalModifierForInterfaceMethod(ReferenceBinding, AbstractMethodDeclaration)
15734=ProblemReporter:errorThisSuperInStatic(ASTNode)
15735=ProblemReporter:deprecatedType(TypeBinding, ASTNode)
15736=ProblemReporter:invalidTypeForCollection(Expression)
15737=ProblemReporter:deprecatedField(FieldBinding, ASTNode)
15738=ProblemReporter:inheritedMethodsHaveIncompatibleReturnTypes(SourceTypeBinding, MethodBinding[], int)
15739=ProblemReporter:invalidOperator(CompoundAssignment, TypeBinding, TypeBinding)
15740=ProblemReporter:cannotDeclareLocalInterface(char[], int, int)
15741=ProblemReporter:cannotUseSuperInJavaLangObject(ASTNode)
15742=ProblemReporter:superclassMustBeAClass(SourceTypeBinding, TypeReference, ReferenceBinding)
15743=ProblemReporter:typeCollidesWithPackage(CompilationUnitDeclaration, TypeDeclaration)
15744=ProblemReporter:javadocEmptyReturnTag(int, int)
15745=ProblemReporter:abstractMethodNeedingNoBody(AbstractMethodDeclaration)
15746=ProblemReporter:abortDueToInternalError(String, ASTNode)
15747=ProblemReporter:bytecodeExceeds64KLimit(AbstractMethodDeclaration)
15748=ProblemReporter:handle(int, String[], String[], int, int, int)
15749=ProblemReporter:hiddenCatchBlock(ReferenceBinding, ASTNode)
15750=ProblemReporter:invalidUsageOfTypeParameters(TypeParameter, TypeParameter)
15751=ProblemReporter:illegalModifierForVariable(LocalDeclaration, boolean)
15752=ProblemReporter:javadocInvalidType(ASTNode, TypeBinding, int)
15753=ProblemReporter:illegalUsageOfQualifiedTypeReference(QualifiedTypeReference)
15754=ProblemReporter:parseErrorDeleteToken(int, int, int, char[], String)
15755=ProblemReporter:illegalModifierCombinationFinalAbstractForClass(SourceTypeBinding)
15756=ProblemReporter:codeSnippetMissingClass(String, int, int)
15757=ProblemReporter:invalidTypeReference(Expression)
15758=ProblemReporter:illegalModifierForMethod(ReferenceBinding, AbstractMethodDeclaration)
15759=ProblemReporter:javadocInvalidSeeUrlReference(int, int)
15760=ProblemReporter:undefinedLabel(BranchStatement)
15761=ProblemReporter:parseErrorNoSuggestion(int, int, int, char[], String)
15762=ProblemReporter:cannotDefineDimensionsAndInitializer(ArrayAllocationExpression)
15763=ProblemReporter:cannotAssignToFinalField(FieldBinding, ASTNode)
15764=ProblemReporter:javadocVisibility(int, int)
15765=ProblemReporter:staticInheritedMethodConflicts(SourceTypeBinding, MethodBinding, MethodBinding[])
15766=ProblemReporter:parameterBoundAsString(TypeVariableBinding, boolean)
15767=ProblemReporter:tooManyFields(TypeDeclaration)
15768=ProblemReporter:unsafeRawInvocation(ASTNode, TypeBinding, MethodBinding)
15769=ProblemReporter:methodWithConstructorName(MethodDeclaration)
15770=ProblemReporter:cannotThrowType(SourceTypeBinding, AbstractMethodDeclaration, TypeReference, TypeBinding)
15771=ProblemReporter:missingSemiColon(Expression)
15772=ProblemReporter:computeSeverity(int)
15773=ProblemReporter:javadocDeprecatedMethod(MethodBinding, ASTNode, int)
15774=ProblemReporter:parametersAsString(TypeBinding[], boolean)
15775=ProblemReporter:duplicateInitializationOfFinalLocal(LocalVariableBinding, ASTNode)
15776=ProblemReporter:illegalStaticModifierForMemberType(SourceTypeBinding)
15777=ProblemReporter:duplicateNestedType(TypeDeclaration)
15778=ProblemReporter:unusedPrivateType(TypeDeclaration)
15779=ProblemReporter:invalidMethod(MessageSend, MethodBinding)
15780=ProblemReporter:cannotAssignToFinalLocal(LocalVariableBinding, ASTNode)
15781=ProblemReporter:incorrectArityForParameterizedType(ASTNode, TypeBinding, TypeBinding[])
15782=ProblemReporter:invalidOperator(BinaryExpression, TypeBinding, TypeBinding)
15783=ProblemReporter:unsafeRawConversion(Expression, TypeBinding, TypeBinding)
15784=ProblemReporter:classExtendFinalClass(SourceTypeBinding, TypeReference, TypeBinding)
15785=ProblemReporter:recursiveConstructorInvocation(ExplicitConstructorCall)
15786=ProblemReporter:cannotReferToNonFinalOuterLocal(LocalVariableBinding, ASTNode)
15787=ProblemReporter:duplicateModifierForMethod(ReferenceBinding, AbstractMethodDeclaration)
15788=ProblemReporter:illegalModifierForInterfaceField(ReferenceBinding, FieldDeclaration)
15789=ProblemReporter:invalidUsageOfEnumDeclarations(EnumDeclaration)
15790=ProblemReporter:visibilityConflict(MethodBinding, MethodBinding)
15791=ProblemReporter:initializerMustCompleteNormally(FieldDeclaration)
15792=ProblemReporter:javadocDuplicatedReturnTag(int, int)
15793=ProblemReporter:unsafeReturnTypeOverride(MethodBinding, MethodBinding, ASTNode)
15794=ProblemReporter:noMoreAvailableSpaceForLocal(LocalVariableBinding, ASTNode)
15795=ProblemReporter:javadocMissingParamName(int, int)
15796=ProblemReporter:illegalExtendedDimensions(AnnotationTypeMemberDeclaration)
15797=ProblemReporter:nonStaticAccessToStaticField(ASTNode, FieldBinding)
15798=ProblemReporter:parseErrorInsertBeforeToken(int, int, int, char[], String, String)
15799=ProblemReporter:invalidUsageOfStaticImports(ImportReference)
15800=ProblemReporter:useAssertAsAnIdentifier(int, int)
15801=ProblemReporter:invalidField(NameReference, FieldBinding)
15802=ProblemReporter:unusedDeclaredThrownException(ReferenceBinding, AbstractMethodDeclaration, ASTNode)
15803=ProblemReporter:parseErrorInvalidToken(int, int, int, char[], String, String)
15804=ProblemReporter:unreachableCatchBlock(ReferenceBinding, ASTNode)
15805=ProblemReporter:invalidUsageOfVarargs(Argument)
15806=ProblemReporter:javadocErrorNoMethodFor(MessageSend, TypeBinding, TypeBinding[], int)
15807=ProblemReporter:ProblemReporter(IErrorHandlingPolicy, CompilerOptions, IProblemFactory)
15808=ProblemReporter:methodNameClash(MethodBinding, MethodBinding)
15809=ProblemReporter:constantOutOfFormat(NumberLiteral)
15810=ProblemReporter:javadocMissingHashCharacter(int, int, String)
15811=ProblemReporter:cannotInstantiate(TypeReference, TypeBinding)
15812=ProblemReporter:codeSnippetMissingMethod(String, String, String, int, int)
15813=ProblemReporter:duplicateMethodInType(SourceTypeBinding, AbstractMethodDeclaration)
15814=ProblemReporter:indirectAccessToStaticMethod(ASTNode, MethodBinding)
15815=ProblemReporter:importProblem(ImportReference, Binding)
15816=ProblemReporter:javadocMissing(int, int, int)
15817=ProblemReporter:unsafeRawFieldAssignment(FieldBinding, TypeBinding, ASTNode)
15818=ProblemReporter:javadocInvalidThrowsClassName(TypeReference, int)
15819=ProblemReporter:redefineLocal(LocalDeclaration)
15820=ProblemReporter:tooManyMethods(TypeDeclaration)
15821=ProblemReporter:methodNeedBody(AbstractMethodDeclaration)
15822=ProblemReporter:argumentTypeCannotBeVoidArray(SourceTypeBinding, AbstractMethodDeclaration, Argument)
15823=ProblemReporter:illegalInstanceOfGenericType(TypeBinding, ASTNode)
15824=ProblemReporter:invalidType(ASTNode, TypeBinding)
15825=ProblemReporter:noMoreAvailableSpaceForConstant(TypeDeclaration)
15826=ProblemReporter:superfluousSemicolon(int, int)
15827=ProblemReporter:finallyMustCompleteNormally(Block)
15828=ProblemReporter:invalidUsageOfTypeArguments(TypeReference, TypeReference)
15829=ProblemReporter:variableTypeCannotBeVoidArray(AbstractVariableDeclaration)
15830=ProblemReporter:duplicateInitializationOfBlankFinalField(FieldBinding, Reference)
15831=ProblemReporter:needToEmulateFieldAccess(FieldBinding, ASTNode, boolean)
15832=ProblemReporter:publicClassMustMatchFileName(CompilationUnitDeclaration, TypeDeclaration)
15833=ProblemReporter:isKeyword(int)
15834=ProblemReporter:isLiteral(int)
15835=ProblemReporter:expressionShouldBeAVariable(Expression)
15836=ProblemReporter:illegalGenericArray(TypeBinding, ASTNode)
15837=ProblemReporter:unhandledException(TypeBinding, ASTNode)
15838=ProblemReporter:notCompatibleTypesError(EqualExpression, TypeBinding, TypeBinding)
15839=ProblemReporter:unmatchedBracket(int, ReferenceContext, CompilationResult)
15840=ProblemReporter:unqualifiedFieldAccess(NameReference, FieldBinding)
15841=ProblemReporter:javadocVisibilityArgument(int, int)
15842=ProblemReporter:illegalVisibilityModifierCombinationForMethod(ReferenceBinding, AbstractMethodDeclaration)
15843=ProblemReporter:localVariableHiding(LocalDeclaration, Binding, boolean)
15844=ProblemReporter:boundsMustBeAnInterface(ASTNode, TypeBinding)
15845=ProblemReporter:invalidUsageOfForeachStatements(LocalDeclaration, Expression)
15846=ProblemReporter:typeCastError(CastExpression, TypeBinding, TypeBinding)
15847=ProblemReporter:javadocInvalidMethod(MessageSend, MethodBinding, int)
15848=ProblemReporter:illegalClassLiteralForTypeVariable(TypeVariableBinding, ASTNode)
15849=ProblemReporter:illegalModifierCombinationFinalVolatileForField(ReferenceBinding, FieldDeclaration)
15850=ProblemReporter:parseErrorInsertAfterToken(int, int, int, char[], String, String)
15851=ProblemReporter:task(String, String, String, int, int)
15852=ProblemReporter:javadocInvalidTag(int, int)
15853=ProblemReporter:methodNeedingNoBody(MethodDeclaration)
15854=ProblemReporter:illegalModifierForClass(SourceTypeBinding)
15855=ProblemReporter:invalidOperator(UnaryExpression, TypeBinding)
15856=ConstraintExpressionFormula:inputVariables(InferenceContext18)
15857=ConstraintExpressionFormula:inferInvocationApplicability(InferenceContext18, MethodBinding, TypeBinding[], boolean, int)
15858=ConstraintExpressionFormula:ConstraintExpressionFormula(Expression, TypeBinding, int, boolean)
15859=ConstraintExpressionFormula:reduce(InferenceContext18)
15860=ConstraintExpressionFormula:canBePolyExpression(Expression)
15861=ConstraintExpressionFormula:toString()
15862=ConstraintExpressionFormula:needsInference(ReferenceExpression, MethodBinding)
15863=ConstraintExpressionFormula:reduceReferenceExpressionCompatibility(ReferenceExpression, InferenceContext18)
15864=ConstraintExpressionFormula:inferPolyInvocationType(InferenceContext18, InvocationSite, TypeBinding, MethodBinding)
15865=ConstraintExpressionFormula:ConstraintExpressionFormula(Expression, TypeBinding, int)
15866=ConstraintExpressionFormula:findGroundTargetType(InferenceContext18, BlockScope, LambdaExpression, ParameterizedTypeBinding)
15867=ConstraintExpressionFormula:determineInferenceKind(MethodBinding, TypeBinding[], InferenceContext18)
15868=Example:foo(int, int, int, int, int, int)
15869=Test:foo(String, int, Vector, char[])
15870=GenericTypeSignatureTest:getFileNames(String[])
15871=GenericTypeSignatureTest:testBug460491()
15872=GenericTypeSignatureTest:runJavac(String, String[])
15873=GenericTypeSignatureTest:test009()
15874=GenericTypeSignatureTest:Logger:Logger(InputStream, String)
15875=GenericTypeSignatureTest:test018()
15876=GenericTypeSignatureTest:test007()
15877=GenericTypeSignatureTest:test019()
15878=GenericTypeSignatureTest:test008()
15879=GenericTypeSignatureTest:test016()
15880=GenericTypeSignatureTest:test005()
15881=GenericTypeSignatureTest:test017()
15882=GenericTypeSignatureTest:test006()
15883=GenericTypeSignatureTest:test014()
15884=GenericTypeSignatureTest:test003()
15885=GenericTypeSignatureTest:testClass()
15886=GenericTypeSignatureTest:test015()
15887=GenericTypeSignatureTest:Logger:run()
15888=GenericTypeSignatureTest:test004()
15889=GenericTypeSignatureTest:cleanUp()
15890=GenericTypeSignatureTest:writeFiles(String[])
15891=GenericTypeSignatureTest:test012()
15892=GenericTypeSignatureTest:test013()
15893=GenericTypeSignatureTest:test001()
15894=GenericTypeSignatureTest:test002()
15895=GenericTypeSignatureTest:GenericTypeSignatureTest(String)
15896=GenericTypeSignatureTest:test010()
15897=GenericTypeSignatureTest:test011()
15898=GenericTypeSignatureTest:suite()
15899=GenericTypeSignatureTest:test020()
15900=ConstraintFormula:reduce(InferenceContext18)
15901=ConstraintFormula:outputVariables(InferenceContext18)
15902=ConstraintFormula:applySubstitution(BoundSet, InferenceVariable[])
15903=ConstraintFormula:inputVariables(InferenceContext18)
15904=ConstraintFormula:appendTypeName(StringBuffer, TypeBinding)
15905=CompletionProposal:setKey(char[])
15906=CompletionProposal:setDeclarationKey(char[])
15907=CompletionProposal:getReceiverStart()
15908=CompletionProposal:canUseDiamond(CompletionContext)
15909=CompletionProposal:setSignature(char[])
15910=CompletionProposal:getAccessibility()
15911=CompletionProposal:getSignature()
15912=CompletionProposal:isConstructor()
15913=CompletionProposal:getFlags()
15914=CompletionProposal:getKind()
15915=CompletionProposal:setRelevance(int)
15916=CompletionProposal:getTokenStart()
15917=CompletionProposal:getReplaceEnd()
15918=CompletionProposal:setRequiredProposals(CompletionProposal[])
15919=CompletionProposal:getReplaceStart()
15920=CompletionProposal:setParameterNames(char[][])
15921=CompletionProposal:getCompletionLocation()
15922=CompletionProposal:getKey()
15923=CompletionProposal:setDeclarationSignature(char[])
15924=CompletionProposal:getReceiverEnd()
15925=CompletionProposal:getRelevance()
15926=CompletionProposal:setReceiverRange(int, int)
15927=CompletionProposal:setTokenRange(int, int)
15928=CompletionProposal:getDeclarationKey()
15929=CompletionProposal:getCompletion()
15930=CompletionProposal:setAdditionalFlags(int)
15931=CompletionProposal:setReplaceRange(int, int)
15932=CompletionProposal:findParameterNames(IProgressMonitor)
15933=CompletionProposal:getName()
15934=CompletionProposal:setName(char[])
15935=CompletionProposal:setReceiverSignature(char[])
15936=CompletionProposal:getDeclarationSignature()
15937=CompletionProposal:getAdditionalFlags()
15938=CompletionProposal:getRequiredProposals()
15939=CompletionProposal:setFlags(int)
15940=CompletionProposal:create(int, int)
15941=CompletionProposal:getReceiverSignature()
15942=CompletionProposal:getTokenEnd()
15943=CompletionProposal:setCompletion(char[])
15944=ASTMatcherTest:TestMatcher:match(MethodInvocation, Object)
15945=ASTMatcherTest:basicMatch(ASTNode)
15946=ASTMatcherTest:TestMatcher:match(SingleVariableDeclaration, Object)
15947=ASTMatcherTest:testMethodDeclaration()
15948=ASTMatcherTest:getName()
15949=ASTMatcherTest:TestMatcher:match(LambdaExpression, Object)
15950=ASTMatcherTest:testUnionType()
15951=ASTMatcherTest:TestMatcher:match(QualifiedName, Object)
15952=ASTMatcherTest:testAssignment()
15953=ASTMatcherTest:TestMatcher:match(MethodRefParameter, Object)
15954=ASTMatcherTest:testTypeAnnotations1()
15955=ASTMatcherTest:testBooleanLiteral()
15956=ASTMatcherTest:testInfixExpression()
15957=ASTMatcherTest:TestMatcher:TestMatcher(boolean)
15958=ASTMatcherTest:TestMatcher:match(AnnotationTypeDeclaration, Object)
15959=ASTMatcherTest:TestMatcher:match(VariableDeclarationStatement, Object)
15960=ASTMatcherTest:TestMatcher:match(SynchronizedStatement, Object)
15961=ASTMatcherTest:testSingleVariableDeclarationVarargsAnnotation()
15962=ASTMatcherTest:testFieldDeclaration()
15963=ASTMatcherTest:TestMatcher:match(TypeLiteral, Object)
15964=ASTMatcherTest:testTypeMethodReference()
15965=ASTMatcherTest:setUp()
15966=ASTMatcherTest:TestMatcher:match(InstanceofExpression, Object)
15967=ASTMatcherTest:TestMatcher:match(CastExpression, Object)
15968=ASTMatcherTest:TestMatcher:match(LineComment, Object)
15969=ASTMatcherTest:TestMatcher:match(Initializer, Object)
15970=ASTMatcherTest:TestMatcher:match(AnonymousClassDeclaration, Object)
15971=ASTMatcherTest:testQualifiedName()
15972=ASTMatcherTest:testTypeAnnotations2()
15973=ASTMatcherTest:testVariableDeclarationExpression()
15974=ASTMatcherTest:TestMatcher:match(StringLiteral, Object)
15975=ASTMatcherTest:TestMatcher:match(VariableDeclarationExpression, Object)
15976=ASTMatcherTest:testAssertStatement()
15977=ASTMatcherTest:testParameterizedType()
15978=ASTMatcherTest:tearDown()
15979=ASTMatcherTest:testFieldAccess()
15980=ASTMatcherTest:testCastExpression()
15981=ASTMatcherTest:TestMatcher:match(SwitchCase, Object)
15982=ASTMatcherTest:TestMatcher:match(NormalAnnotation, Object)
15983=ASTMatcherTest:TestMatcher:TestMatcher()
15984=ASTMatcherTest:testWildcardType()
15985=ASTMatcherTest:TestMatcher:match(SuperConstructorInvocation, Object)
15986=ASTMatcherTest:testTryStatementWithResources()
15987=ASTMatcherTest:TestMatcher:match(Assignment, Object)
15988=ASTMatcherTest:testTypeAnnotations3()
15989=ASTMatcherTest:TestMatcher:match(ThisExpression, Object)
15990=ASTMatcherTest:testBlockComment()
15991=ASTMatcherTest:TestMatcher:match(LabeledStatement, Object)
15992=ASTMatcherTest:TestMatcher:match(AssertStatement, Object)
15993=ASTMatcherTest:testMemberRef()
15994=ASTMatcherTest:ASTMatcherTest(String, int)
15995=ASTMatcherTest:TestMatcher:match(EnumConstantDeclaration, Object)
15996=ASTMatcherTest:testLambdaExpressions4()
15997=ASTMatcherTest:TestMatcher:match(CharacterLiteral, Object)
15998=ASTMatcherTest:TestMatcher:match(NameQualifiedType, Object)
15999=ASTMatcherTest:TestMatcher:match(IfStatement, Object)
16000=ASTMatcherTest:testMethodRef()
16001=ASTMatcherTest:testNormalAnnotation()
16002=ASTMatcherTest:TestMatcher:match(ArrayCreation, Object)
16003=ASTMatcherTest:testThrowStatement()
16004=ASTMatcherTest:TestMatcher:match(ThrowStatement, Object)
16005=ASTMatcherTest:testMethodRefParameter()
16006=ASTMatcherTest:testTypeAnnotations10()
16007=ASTMatcherTest:TestMatcher:match(CompilationUnit, Object)
16008=ASTMatcherTest:TestMatcher:match(MemberValuePair, Object)
16009=ASTMatcherTest:testLambdaExpressions3()
16010=ASTMatcherTest:TestMatcher:match(SimpleName, Object)
16011=ASTMatcherTest:testEnhancedForStatement()
16012=ASTMatcherTest:TestMatcher:match(MarkerAnnotation, Object)
16013=ASTMatcherTest:TestMatcher:match(EnhancedForStatement, Object)
16014=ASTMatcherTest:testBreakStatement()
16015=ASTMatcherTest:TestMatcher:match(ExpressionMethodReference, Object)
16016=ASTMatcherTest:TestMatcher:match(BlockComment, Object)
16017=ASTMatcherTest:TestMatcher:match(UnionType, Object)
16018=ASTMatcherTest:TestMatcher:match(Block, Object)
16019=ASTMatcherTest:testCreationReference()
16020=ASTMatcherTest:TestMatcher:match(Dimension, Object)
16021=ASTMatcherTest:testLambdaExpressions2()
16022=ASTMatcherTest:TestMatcher:match(BooleanLiteral, Object)
16023=ASTMatcherTest:testConditionalExpression()
16024=ASTMatcherTest:NodeCounter:preVisit(ASTNode)
16025=ASTMatcherTest:testTypeParameter()
16026=ASTMatcherTest:testTagElement()
16027=ASTMatcherTest:TestMatcher:match(TypeMethodReference, Object)
16028=ASTMatcherTest:TestMatcher:match(ContinueStatement, Object)
16029=ASTMatcherTest:testArrayCreation()
16030=ASTMatcherTest:testTypeAnnotations12()
16031=ASTMatcherTest:testLambdaExpressions1()
16032=ASTMatcherTest:testParameterizedQualifiedTypeAnnotation()
16033=ASTMatcherTest:TestMatcher:match(CatchClause, Object)
16034=ASTMatcherTest:TestMatcher:match(WildcardType, Object)
16035=ASTMatcherTest:testCompilationUnit()
16036=ASTMatcherTest:TestMatcher:match(ClassInstanceCreation, Object)
16037=ASTMatcherTest:testMarkerAnnotation()
16038=ASTMatcherTest:testArrayAccess()
16039=ASTMatcherTest:TestMatcher:match(ArrayType, Object)
16040=ASTMatcherTest:TestMatcher:match(FieldDeclaration, Object)
16041=ASTMatcherTest:testImportDeclaration()
16042=ASTMatcherTest:TestMatcher:match(PackageDeclaration, Object)
16043=ASTMatcherTest:testArrayInitializer()
16044=ASTMatcherTest:TestMatcher:match(TypeDeclarationStatement, Object)
16045=ASTMatcherTest:testTypeAnnotations11()
16046=ASTMatcherTest:testEnumDeclaration()
16047=ASTMatcherTest:testTypeAnnotations8()
16048=ASTMatcherTest:testSynchronizedStatement()
16049=ASTMatcherTest:testDoStatement()
16050=ASTMatcherTest:testSwitchStatement()
16051=ASTMatcherTest:TestMatcher:match(FieldAccess, Object)
16052=ASTMatcherTest:TestMatcher:match(AnnotationTypeMemberDeclaration, Object)
16053=ASTMatcherTest:TestMatcher:match(SuperMethodReference, Object)
16054=ASTMatcherTest:TestMatcher:match(DoStatement, Object)
16055=ASTMatcherTest:TestMatcher:match(SuperFieldAccess, Object)
16056=ASTMatcherTest:testAnnotationTypeDeclaration()
16057=ASTMatcherTest:testSuperConstructorInvocation()
16058=ASTMatcherTest:TestMatcher:match(EmptyStatement, Object)
16059=ASTMatcherTest:testSuperMethodInvocation()
16060=ASTMatcherTest:TestMatcher:match(PrimitiveType, Object)
16061=ASTMatcherTest:testPrimitiveType()
16062=ASTMatcherTest:testTypeAnnotations9()
16063=ASTMatcherTest:testTypeLiteral()
16064=ASTMatcherTest:testCharacterLiteral()
16065=ASTMatcherTest:NodeCounter:NodeCounter(boolean)
16066=ASTMatcherTest:testSimpleType()
16067=ASTMatcherTest:testJavadoc()
16068=ASTMatcherTest:testSingleMemberAnnotation()
16069=ASTMatcherTest:testAnnotationTypeMemberDeclaration()
16070=ASTMatcherTest:TestMatcher:match(IntersectionType, Object)
16071=ASTMatcherTest:testNameQualifiedType()
16072=ASTMatcherTest:testWhileStatement()
16073=ASTMatcherTest:TestMatcher:match(SwitchStatement, Object)
16074=ASTMatcherTest:TestMatcher:match(TypeDeclaration, Object)
16075=ASTMatcherTest:TestMatcher:match(TypeParameter, Object)
16076=ASTMatcherTest:testNullLiteral()
16077=ASTMatcherTest:suite()
16078=ASTMatcherTest:TestMatcher:match(MethodDeclaration, Object)
16079=ASTMatcherTest:testTryStatement()
16080=ASTMatcherTest:testLineComment()
16081=ASTMatcherTest:TestMatcher:match(SuperMethodInvocation, Object)
16082=ASTMatcherTest:TestMatcher:match(ConstructorInvocation, Object)
16083=ASTMatcherTest:testTypeDeclaration()
16084=ASTMatcherTest:testSwitchCase()
16085=ASTMatcherTest:testExpressionStatement()
16086=ASTMatcherTest:testIntersectionType()
16087=ASTMatcherTest:TestMatcher:match(WhileStatement, Object)
16088=ASTMatcherTest:testMethodInvocation()
16089=ASTMatcherTest:TestMatcher:match(SingleMemberAnnotation, Object)
16090=ASTMatcherTest:TestMatcher:match(TagElement, Object)
16091=ASTMatcherTest:TestMatcher:standardBody(ASTNode, Object, boolean)
16092=ASTMatcherTest:testContinueStatement()
16093=ASTMatcherTest:testNumberLiteral()
16094=ASTMatcherTest:testTypeDeclarationStatement()
16095=ASTMatcherTest:testParenthesizedExpression()
16096=ASTMatcherTest:TestMatcher:match(CreationReference, Object)
16097=ASTMatcherTest:testCatchClause()
16098=ASTMatcherTest:TestMatcher:match(NumberLiteral, Object)
16099=ASTMatcherTest:TestMatcher:match(EnumDeclaration, Object)
16100=ASTMatcherTest:TestMatcher:match(ExpressionStatement, Object)
16101=ASTMatcherTest:TestMatcher:match(SimpleType, Object)
16102=ASTMatcherTest:testTypeAnnotations4()
16103=ASTMatcherTest:TestMatcher:match(PostfixExpression, Object)
16104=ASTMatcherTest:TestMatcher:match(MemberRef, Object)
16105=ASTMatcherTest:testIfStatement()
16106=ASTMatcherTest:testLabeledStatement()
16107=ASTMatcherTest:testQualifiedTypeAnnotation()
16108=ASTMatcherTest:testClassInstanceCreation()
16109=ASTMatcherTest:testPrefixExpression()
16110=ASTMatcherTest:TestMatcher:match(Modifier, Object)
16111=ASTMatcherTest:testSingleVariableDeclaration()
16112=ASTMatcherTest:TestMatcher:match(InfixExpression, Object)
16113=ASTMatcherTest:TestMatcher:match(ArrayAccess, Object)
16114=ASTMatcherTest:TestMatcher:match(VariableDeclarationFragment, Object)
16115=ASTMatcherTest:testEnumConstantDeclaration()
16116=ASTMatcherTest:testInitializer()
16117=ASTMatcherTest:testAnonymousClassDeclaration()
16118=ASTMatcherTest:testBlock()
16119=ASTMatcherTest:TestMatcher:match(NullLiteral, Object)
16120=ASTMatcherTest:testTypeAnnotations5()
16121=ASTMatcherTest:TestMatcher:match(TryStatement, Object)
16122=ASTMatcherTest:TestMatcher:match(TextElement, Object)
16123=ASTMatcherTest:testSuperMethodReference()
16124=ASTMatcherTest:testQualifiedType()
16125=ASTMatcherTest:TestMatcher:match(ArrayInitializer, Object)
16126=ASTMatcherTest:TestMatcher:match(ParenthesizedExpression, Object)
16127=ASTMatcherTest:testArrayType()
16128=ASTMatcherTest:nodeCount(ASTNode, boolean)
16129=ASTMatcherTest:testConstructorInvocation()
16130=ASTMatcherTest:TestMatcher:match(MethodRef, Object)
16131=ASTMatcherTest:TestMatcher:match(ImportDeclaration, Object)
16132=ASTMatcherTest:TestMatcher:match(Javadoc, Object)
16133=ASTMatcherTest:TestMatcher:match(ConditionalExpression, Object)
16134=ASTMatcherTest:testPackageDeclaration()
16135=ASTMatcherTest:testTypeAnnotations6()
16136=ASTMatcherTest:testVariableDeclarationFragment()
16137=ASTMatcherTest:testTextElement()
16138=ASTMatcherTest:testSimpleName()
16139=ASTMatcherTest:testReturnStatement()
16140=ASTMatcherTest:TestMatcher:match(ParameterizedType, Object)
16141=ASTMatcherTest:testPostfixExpression()
16142=ASTMatcherTest:testTypeAnnotations7()
16143=ASTMatcherTest:TestMatcher:match(ForStatement, Object)
16144=ASTMatcherTest:TestMatcher:match(ReturnStatement, Object)
16145=ASTMatcherTest:TestMatcher:match(BreakStatement, Object)
16146=ASTMatcherTest:TestMatcher:match(PrefixExpression, Object)
16147=ASTMatcherTest:testSuperFieldAccess()
16148=ASTMatcherTest:TestMatcher:match(QualifiedType, Object)
16149=ASTMatcherTest:testThisExpression()
16150=ASTMatcherTest:testStringLiteral()
16151=ASTMatcherTest:testForStatement()
16152=ASTMatcherTest:testExpressionMethodReference()
16153=ASTMatcherTest:testEmptyStatement()
16154=ASTMatcherTest:testVariableDeclarationStatement()
16155=Test:___run(java.lang.String[])
16156=Test:foo()
16157=SelectionOnSingleTypeReference:printExpression(int, StringBuffer)
16158=SelectionOnSingleTypeReference:resolveTypeEnclosing(BlockScope, ReferenceBinding)
16159=SelectionOnSingleTypeReference:SelectionOnSingleTypeReference(char[], long)
16160=SelectionOnSingleTypeReference:aboutToResolve(Scope)
16161=SelectionOnSingleTypeReference:getTypeBinding(Scope)
16162=Foo:foo(Point.Float[])
16163=X29:foo()
16164=Convertible:convert()
16165=ListRewrite:getLocationInParent()
16166=ListRewrite:createMoveTarget(ASTNode, ASTNode)
16167=ListRewrite:insertBefore(ASTNode, ASTNode, TextEditGroup)
16168=ListRewrite:getOriginalList()
16169=ListRewrite:createCopyTarget(ASTNode, ASTNode)
16170=ListRewrite:getParent()
16171=ListRewrite:remove(ASTNode, TextEditGroup)
16172=ListRewrite:insertAt(ASTNode, int, TextEditGroup)
16173=ListRewrite:insertLast(ASTNode, TextEditGroup)
16174=ListRewrite:createTargetNode(ASTNode, ASTNode, boolean, ASTNode, TextEditGroup)
16175=ListRewrite:getEvent()
16176=ListRewrite:isInsertBoundToPreviousByDefault(ASTNode)
16177=ListRewrite:createMoveTarget(ASTNode, ASTNode, ASTNode, TextEditGroup)
16178=ListRewrite:replace(ASTNode, ASTNode, TextEditGroup)
16179=ListRewrite:internalInsertAt(ASTNode, int, boolean, TextEditGroup)
16180=ListRewrite:getRewriteStore()
16181=ListRewrite:validatePropertyType(ASTNode)
16182=ListRewrite:ListRewrite(ASTRewrite, ASTNode, ChildListPropertyDescriptor)
16183=ListRewrite:getASTRewrite()
16184=ListRewrite:getRewrittenList()
16185=ListRewrite:insertFirst(ASTNode, TextEditGroup)
16186=ListRewrite:insertAfter(ASTNode, ASTNode, TextEditGroup)
16187=ConstructorInvocation:arguments()
16188=ConstructorInvocation:internalGetChildListProperty(ChildListPropertyDescriptor)
16189=ConstructorInvocation:memSize()
16190=ConstructorInvocation:subtreeMatch0(ASTMatcher, Object)
16191=ConstructorInvocation:internalStructuralPropertiesForType(int)
16192=ConstructorInvocation:resolveConstructorBinding()
16193=ConstructorInvocation:accept0(ASTVisitor)
16194=ConstructorInvocation:typeArguments()
16195=ConstructorInvocation:clone0(AST)
16196=ConstructorInvocation:treeSize()
16197=ConstructorInvocation:ConstructorInvocation(AST)
16198=ConstructorInvocation:propertyDescriptors(int)
16199=ConstructorInvocation:getNodeType0()
16200=CompilerTestSetup:run(TestResult)
16201=CompilerTestSetup:tearDown()
16202=CompilerTestSetup:initTest(Object)
16203=CompilerTestSetup:CompilerTestSetup(long)
16204=CompilerTestSetup:setUp()
16205=Test:foo()
16206=X:X()
16207=X:bar(int, String)
16208=Z:foo()
16209=Scope:findMethod(ReferenceBinding, char[], TypeBinding[], InvocationSite, boolean)
16210=Scope:hasErasedCandidatesCollisions(TypeBinding, TypeBinding, Map, ReferenceBinding, ASTNode)
16211=Scope:getJavaLangClass()
16212=Scope:findMethodInSuperInterfaces(ReferenceBinding, char[], ObjectVector, List<TypeBinding>, InvocationSite)
16213=Scope:minimalErasedCandidates(TypeBinding[], Map)
16214=Scope:getJavaLangThrowable()
16215=Scope:parameterCompatibilityLevel(TypeBinding, TypeBinding)
16216=Scope:Substitutor:substitute(Substitution, ReferenceBinding[])
16217=Scope:deferCheck(Runnable)
16218=Scope:Substitutor:substitute(Substitution, TypeBinding)
16219=Scope:isBoxingCompatibleWith(TypeBinding, TypeBinding)
16220=Scope:findField(TypeBinding, char[], InvocationSite, boolean)
16221=Scope:isAcceptableMethod(MethodBinding, MethodBinding)
16222=Scope:getFilteredExceptions(MethodBinding)
16223=Scope:mostSpecificClassMethodBinding(MethodBinding[], int, InvocationSite)
16224=Scope:getBaseType(char[])
16225=Scope:getType(char[], PackageBinding)
16226=Scope:methodScope()
16227=Scope:isLambdaSubscope()
16228=Scope:environment()
16229=Scope:getPackage(char[][])
16230=Scope:isOverriddenMethodGeneric(MethodBinding)
16231=Scope:findType(char[], PackageBinding, PackageBinding)
16232=Scope:getMemberType(char[], ReferenceBinding)
16233=Scope:getJavaLangInvokeSerializedLambda()
16234=Scope:getConstructor(ReferenceBinding, TypeBinding[], InvocationSite)
16235=Scope:getJavaLangInvokeLambdaMetafactory()
16236=Scope:enclosingLambdaScope()
16237=Scope:compilationUnitScope()
16238=Scope:getType(char[])
16239=Scope:enclosingClassScope()
16240=Scope:greaterLowerBound(TypeBinding[], Scope, LookupEnvironment)
16241=Scope:parameterCompatibilityLevel(MethodBinding, TypeBinding[], InvocationSite)
16242=Scope:enclosingMethodScope()
16243=Scope:getJavaLangInvokeMethodHandlesLookup()
16244=Scope:computeCompatibleMethod(MethodBinding, TypeBinding[], InvocationSite)
16245=Scope:Substitutor:substitute(Substitution, TypeBinding[])
16246=Scope:lowerUpperBound(TypeBinding[])
16247=Scope:findMethod0(ReferenceBinding, char[], TypeBinding[], InvocationSite, boolean)
16248=Scope:computeCompatibleMethod(MethodBinding, TypeBinding[], InvocationSite, boolean)
16249=Scope:enclosingReferenceContext()
16250=Scope:getDeclarationModifiers()
16251=Scope:namedMethodScope()
16252=Scope:createArrayType(TypeBinding, int)
16253=Scope:Substitutor:isMemberTypeOfRaw(TypeBinding, ReferenceBinding)
16254=Scope:getType(char[][], int)
16255=Scope:getJavaLangString()
16256=Scope:leastContainingInvocation(TypeBinding, Object, ArrayList)
16257=Scope:findDirectMemberType(char[], ReferenceBinding)
16258=Scope:enclosingReceiverType()
16259=Scope:convertEliminatingTypeVariables(TypeBinding, ReferenceBinding, int, Set)
16260=Scope:getExactConstructor(TypeBinding, InvocationSite)
16261=Scope:leastContainingTypeArgument(TypeBinding, TypeBinding, ReferenceBinding, int, ArrayList)
16262=Scope:outerMostClassScope()
16263=Scope:findVariable(char[])
16264=Scope:parameterCompatibilityLevel(MethodBinding, TypeBinding[], boolean)
16265=Scope:getJavaLangEnum()
16266=Scope:findExactMethod(ReferenceBinding, char[], TypeBinding[], InvocationSite)
16267=Scope:substitute(Substitution, ReferenceBinding[])
16268=Scope:connectTypeVariables(TypeParameter[], boolean)
16269=Scope:originalReferenceContext()
16270=Scope:substitute(Substitution, TypeBinding)
16271=Scope:tagAsAccessingEnclosingInstanceStateOf(ReferenceBinding, boolean)
16272=Scope:getJavaLangIterable()
16273=Scope:resolveTypeParameter(TypeParameter)
16274=Scope:getJavaLangCloneable()
16275=Scope:problemReporter()
16276=Scope:getTypeOrPackage(char[][])
16277=Scope:deferBoundCheck(TypeReference)
16278=Scope:findMemberType(char[], ReferenceBinding)
16279=Scope:getConstructor0(ReferenceBinding, TypeBinding[], InvocationSite)
16280=Scope:isDefinedInSameUnit(ReferenceBinding)
16281=Scope:getStaticFactory(ParameterizedTypeBinding, ReferenceBinding, TypeBinding[], InvocationSite)
16282=Scope:getJavaLangObject()
16283=Scope:getBinding(char[], int, InvocationSite, boolean)
16284=Scope:lowerUpperBound(TypeBinding[], ArrayList)
16285=Scope:substitute(Substitution, TypeBinding[])
16286=Scope:boxing(TypeBinding)
16287=Scope:hasDefaultNullnessFor(int)
16288=Scope:getExactMethod(TypeBinding, char[], InvocationSite)
16289=Scope:findField(TypeBinding, char[], InvocationSite, boolean, boolean)
16290=Scope:mostSpecificInterfaceMethodBinding(MethodBinding[], int, InvocationSite)
16291=Scope:innermostSwitchCase()
16292=Scope:getMethod(TypeBinding, char[], TypeBinding[], InvocationSite)
16293=Scope:validateNullAnnotation(long, TypeReference, Annotation[])
16294=Scope:findDefaultAbstractMethod(ReferenceBinding, char[], TypeBinding[], InvocationSite, ReferenceBinding, ObjectVector, MethodBinding[])
16295=Scope:enclosingSourceType()
16296=Scope:getField(TypeBinding, char[], InvocationSite)
16297=Scope:isInsideDeprecatedCode()
16298=Scope:findMethodForArray(ArrayBinding, char[], TypeBinding[], InvocationSite)
16299=Scope:compilerOptions()
16300=Scope:getImplicitMethod(char[], TypeBinding[], InvocationSite)
16301=Scope:getJavaLangAnnotationAnnotation()
16302=Scope:createArrayType(TypeBinding, int, AnnotationBinding[])
16303=Scope:getJavaIoSerializable()
16304=Scope:isLambdaScope()
16305=Scope:getCurrentPackage()
16306=Scope:getExactMethod(TypeBinding, TypeBinding, char[], InvocationSite, MethodBinding)
16307=Scope:parameterCompatibilityLevel(MethodBinding, TypeBinding[])
16308=Scope:getJavaLangIllegalArgumentException()
16309=Scope:startIndex()
16310=Scope:mostSpecificMethodBinding(MethodBinding[], int, TypeBinding[], InvocationSite, ReferenceBinding)
16311=Scope:getOnlyPackage(char[][])
16312=Scope:isDefinedInType(ReferenceBinding)
16313=Scope:createTypeVariables(TypeParameter[], Binding)
16314=Scope:parameterCompatibilityLevel(TypeBinding, TypeBinding, LookupEnvironment, boolean)
16315=Scope:Scope(int, Scope)
16316=Scope:classScope()
16317=Scope:getTypeOrPackage(char[], int, boolean)
16318=Scope:getJavaUtilIterator()
16319=Scope:outerMostMethodScope()
16320=Scope:greaterLowerBound(ReferenceBinding[])
16321=Scope:isDefinedInMethod(MethodBinding)
16322=Scope:isInsideCase(CaseStatement)
16323=Scope:isDefinedInField(FieldBinding)
16324=Scope:isSubtypeOfRawType(TypeBinding)
16325=Scope:typeAnnotationsResolutionScope(Scope)
16326=Scope:compareTypes(TypeBinding, TypeBinding)
16327=Scope:referenceCompilationUnit()
16328=Scope:getJavaLangAssertionError()
16329=Scope:referenceContext()
16330=Test:main(String[])
16331=ISourceReference:getSourceRange()
16332=ISourceReference:getNameRange()
16333=ISourceReference:getSource()
16334=ISourceReference:exists()
16335=Test:goo(Object)
16336=X:main(String[])
16337=A:getCategory()
16338=APTDispatchRunnable:build(BuildEnv)
16339=APTDispatchRunnable:runAPTDuringReconcile(ReconcileContext, AptProject, Map<AnnotationProcessorFactory, FactoryPath.Attributes>)
16340=APTDispatchRunnable:reportResult(BuildContext, Set<IFile>, Set<IFile>, List<? extends CategorizedProblem>, Set<String>, GeneratedFileManager, BuildEnv)
16341=APTDispatchRunnable:dispatchToFileBasedProcessor(AbstractCompilationEnv, boolean, boolean)
16342=APTDispatchRunnable:runAPTInMixedMode(BuildEnv)
16343=APTDispatchRunnable:reconcile(ReconcileContext, IJavaProject)
16344=APTDispatchRunnable:shouldDispatchToBatchProcessor(AbstractCompilationEnv)
16345=APTDispatchRunnable:getFileNamesForPrinting(BuildEnv)
16346=APTDispatchRunnable:cleanupAllGeneratedFilesFrom(BuildContext[])
16347=APTDispatchRunnable:getFileNamesForPrinting(AbstractCompilationEnv)
16348=APTDispatchRunnable:ReconcileEnvCallback:run(AbstractCompilationEnv)
16349=APTDispatchRunnable:APTDispatchRunnable(BuildContext[], BuildContext[], Map<IFile, CategorizedProblem[]>, AptProject, Map<AnnotationProcessorFactory, FactoryPath.Attributes>, Set<AnnotationProcessorFactory>, boolean)
16350=APTDispatchRunnable:getFactorySupportedAnnotations(AnnotationProcessorFactory, Map<String, AnnotationTypeDeclaration>)
16351=APTDispatchRunnable:runAPTDuringBuild(BuildContext[], BuildContext[], Map<IFile, CategorizedProblem[]>, AptProject, Map<AnnotationProcessorFactory, FactoryPath.Attributes>, Set<AnnotationProcessorFactory>, boolean)
16352=APTDispatchRunnable:APTDispatchRunnable(AptProject, Map<AnnotationProcessorFactory, FactoryPath.Attributes>)
16353=APTDispatchRunnable:setIntersect(Set<AnnotationTypeDeclaration>, Set<AnnotationTypeDeclaration>)
16354=APTDispatchRunnable:hasBatchFactory()
16355=APTDispatchRunnable:build()
16356=APTDispatchRunnable:trace(String, AbstractCompilationEnv)
16357=APTDispatchRunnable:runAPTInFileBasedMode(BuildEnv)
16358=APTDispatchRunnable:run(IProgressMonitor)
16359=APTDispatchRunnable:cleanupAllGeneratedFiles()
16360=APTDispatchRunnable:cleanupNoLongerGeneratedFiles(IFile, Set<IFile>, GeneratedFileManager, BuildEnv, Collection<IFile>)
16361=APTDispatchRunnable:ReconcileEnvCallback:ReconcileEnvCallback(ReconcileContext, GeneratedFileManager)
16362=APTDispatchRunnable:shouldBuild()
16363=IMemberValuePairBinding:getMethodBinding()
16364=IMemberValuePairBinding:isDefault()
16365=IMemberValuePairBinding:getName()
16366=IMemberValuePairBinding:getValue()
16367=X:foo(String[])
16368=A:foo()
16369=DefaultProblemFactory:getLocalizedMessage(int, int, String[])
16370=DefaultProblemFactory:loadMessageTemplates(Locale)
16371=DefaultProblemFactory:createProblem(char[], int, String[], String[], int, int, int, int, int)
16372=DefaultProblemFactory:createProblem(char[], int, String[], int, String[], int, int, int, int, int)
16373=DefaultProblemFactory:DefaultProblemFactory(Locale)
16374=DefaultProblemFactory:setLocale(Locale)
16375=DefaultProblemFactory:getLocale()
16376=DefaultProblemFactory:DefaultProblemFactory()
16377=DefaultProblemFactory:getLocalizedMessage(int, String[])
16378=DefaultProblemFactory:keyFromID(int)
16379=DefaultProblemFactory:localizedMessage(CategorizedProblem)
16380=ImportRewrite:getAddedStaticImports()
16381=ImportRewrite:addImport(ITypeBinding)
16382=ImportRewrite:addImport(String, ImportRewriteContext)
16383=ImportRewrite:addStaticImport(IBinding, ImportRewriteContext)
16384=ImportRewrite:getCreatedStaticImports()
16385=ImportRewrite:getRemovedStaticImports()
16386=ImportRewrite:ImportRewriteContext:findInContext(String, String, int)
16387=ImportRewrite:addImportFromSignature(String, AST)
16388=ImportRewrite:getRawQualifiedName(ITypeBinding)
16389=ImportRewrite:filterFromList(List<String>, char)
16390=ImportRewrite:setStaticOnDemandImportThreshold(int)
16391=ImportRewrite:addAnnotation(IAnnotationBinding, AST, ImportRewriteContext)
16392=ImportRewrite:addImport(ITypeBinding, ImportRewriteContext)
16393=ImportRewrite:addStaticImport(IBinding)
16394=ImportRewrite:setFilterImplicitImports(boolean)
16395=ImportRewrite:create(CompilationUnit, boolean)
16396=ImportRewrite:getDefaultImportRewriteContext()
16397=ImportRewrite:annotateType(ITypeBinding, AST, ImportRewriteContext, Type)
16398=ImportRewrite:createBaseType(AST, ImportRewriteContext, ITypeBinding)
16399=ImportRewrite:containsNestedCapture(ITypeBinding, boolean)
16400=ImportRewrite:setUseContextToFilterImplicitImports(boolean)
16401=ImportRewrite:addStaticImport(String, String, boolean)
16402=ImportRewrite:internalAddImport(ITypeBinding, AST, ImportRewriteContext, Type, boolean)
16403=ImportRewrite:rewriteImports(IProgressMonitor)
16404=ImportRewrite:getRemovedImports()
16405=ImportRewrite:hasRecordedChanges()
16406=ImportRewrite:checkAnnotationAndGenerics(ITypeBinding)
16407=ImportRewrite:getAddedImports()
16408=ImportRewrite:compareImport(char, String, String, String)
16409=ImportRewrite:getCompilationUnit()
16410=ImportRewrite:getRawName(ITypeBinding)
16411=ImportRewrite:getArrayType(Type, AST, ImportRewriteContext, ITypeBinding)
16412=ImportRewrite:buildType(ITypeBinding, ITypeBinding, AST, ImportRewriteContext, Type)
16413=ImportRewrite:addImport(ITypeBinding, AST)
16414=ImportRewrite:removeStaticImport(String)
16415=ImportRewrite:setOnDemandImportThreshold(int)
16416=ImportRewrite:setImportOrder(String[])
16417=ImportRewrite:addImport(ITypeBinding, AST, ImportRewriteContext)
16418=ImportRewrite:buildImportRewriteConfiguration()
16419=ImportRewrite:getCreatedImports()
16420=ImportRewrite:addAnnotation(AST, Object, ImportRewriteContext)
16421=ImportRewrite:removeImport(String)
16422=ImportRewrite:findInImports(String, String, int)
16423=ImportRewrite:normalizeTypeBinding(ITypeBinding)
16424=ImportRewrite:removeEntry(String)
16425=ImportRewrite:annotateList(List, IAnnotationBinding[], AST, ImportRewriteContext)
16426=ImportRewrite:addImportFromSignature(String, AST, ImportRewriteContext)
16427=ImportRewrite:ImportRewrite(ICompilationUnit, CompilationUnit, List)
16428=ImportRewrite:containsNestedCapture(String)
16429=ImportRewrite:internalAddImport(String, ImportRewriteContext)
16430=ImportRewrite:addStaticImport(String, String, boolean, ImportRewriteContext)
16431=ImportRewrite:create(ICompilationUnit, boolean)
16432=ImportRewrite:addImport(String)
16433=ImportRewrite:addEntry(String)
16434=A:A(int)
16435=A:foo(java.lang.String, long)
16436=CorrectReturnType2:foo()
16437=DeclarationImpl:getDeclarationBinding()
16438=DeclarationImpl:DeclarationImpl(IBinding, BaseProcessorEnv)
16439=DeclarationImpl:isBindingBased()
16440=DeclarationImpl:getAstNode()
16441=DeclarationImpl:equals(Object)
16442=DeclarationImpl:hashCode()
16443=DeclarationImpl:getModifiers()
16444=DeclarationImpl:getResource()
16445=DeclarationImpl:getCompilationUnit()
16446=SourceParameterDeclarationImpl:toString()
16447=SourceParameterDeclarationImpl:equals(Object)
16448=SourceParameterDeclarationImpl:getAstNode()
16449=SourceParameterDeclarationImpl:getSimpleName()
16450=SourceParameterDeclarationImpl:SourceParameterDeclarationImpl(SingleVariableDeclaration, IFile, BaseProcessorEnv)
16451=SourceParameterDeclarationImpl:getDocComment()
16452=SourceParameterDeclarationImpl:kind()
16453=SourceParameterDeclarationImpl:hashCode()
16454=SourceParameterDeclarationImpl:accept(DeclarationVisitor)
16455=SourceParameterDeclarationImpl:getType()
16456=IRuntimeVisibleTypeAnnotationsAttribute:getExtendedAnnotationsNumber()
16457=IRuntimeVisibleTypeAnnotationsAttribute:getExtendedAnnotations()
16458=ASTRewritingWithStatementsRecoveryTest:testBug272711_02_since_3()
16459=ASTRewritingWithStatementsRecoveryTest:ASTRewritingWithStatementsRecoveryTest(String)
16460=ASTRewritingWithStatementsRecoveryTest:testBug272711_03_since_3()
16461=ASTRewritingWithStatementsRecoveryTest:ASTRewritingWithStatementsRecoveryTest(String, int)
16462=ASTRewritingWithStatementsRecoveryTest:suite()
16463=ASTRewritingWithStatementsRecoveryTest:testBug272711_01_since_3()
16464=Test:m(int, int)
16465=AbstractImageBuilder:internalException(CoreException)
16466=AbstractImageBuilder:storeProblemsFor(SourceFile, CategorizedProblem[])
16467=AbstractImageBuilder:processAnnotationResults(CompilationParticipantResult[])
16468=AbstractImageBuilder:AbstractImageBuilder(JavaBuilder, boolean, State)
16469=AbstractImageBuilder:writeClassFile(ClassFile, SourceFile, boolean)
16470=AbstractImageBuilder:cleanUp()
16471=AbstractImageBuilder:processAnnotations(CompilationParticipantResult[])
16472=AbstractImageBuilder:createProblemFor(IResource, IMember, String, String)
16473=AbstractImageBuilder:findSourceFile(IFile, boolean)
16474=AbstractImageBuilder:storeTasksFor(SourceFile, CategorizedProblem[])
16475=AbstractImageBuilder:fromIFile(IFile)
16476=AbstractImageBuilder:deleteGeneratedFiles(IFile[])
16477=AbstractImageBuilder:acceptSecondaryType(ClassFile)
16478=AbstractImageBuilder:addAllSourceFiles(ArrayList)
16479=AbstractImageBuilder:recordParticipantResult(CompilationParticipantResult)
16480=AbstractImageBuilder:copyResource(IResource, IResource)
16481=AbstractImageBuilder:updateTasksFor(SourceFile, CompilationResult)
16482=AbstractImageBuilder:acceptResult(CompilationResult)
16483=AbstractImageBuilder:finishedWith(String, CompilationResult, char[], ArrayList, ArrayList)
16484=AbstractImageBuilder:initializeAnnotationProcessorManager(Compiler)
16485=AbstractImageBuilder:createFolder(IPath, IContainer)
16486=AbstractImageBuilder:isExcludedFromProject(IPath)
16487=AbstractImageBuilder:notifyParticipants(SourceFile[])
16488=AbstractImageBuilder:writeClassFileContents(ClassFile, IFile, String, boolean, SourceFile)
16489=AbstractImageBuilder:compile(SourceFile[])
16490=AbstractImageBuilder:updateProblemsFor(SourceFile, CompilationResult)
16491=AbstractImageBuilder:newCompiler()
16492=AbstractImageBuilder:compile(SourceFile[], SourceFile[], boolean)
16493=X:main(String[])
16494=EnvUtil:EndingOffsetFinder:preVisit(ASTNode)
16495=EnvUtil:updateProblemLength(List<APTProblem>, CompilationUnit)
16496=EnvUtil:getClassNameRange(CompilationUnit)
16497=EnvUtil:EndingOffsetFinder:EndingOffsetFinder(int[])
16498=EnvUtil:EndingOffsetFinder:getEndingOffset(int)
16499=CompletionFindMethodInThis:foobar(int)
16500=CompletionFindMethodInThis:foo()
16501=X:foo()
16502=X:main(String[])
16503=C:foo()
16504=A:foo(Inner)
16505=A:foo2(B)
16506=X02:setCharset(String, Object)
16507=X:min(Collection<? extends T>)
16508=LongConstant:toString()
16509=LongConstant:equals(Object)
16510=LongConstant:longValue()
16511=LongConstant:byteValue()
16512=LongConstant:fromValue(long)
16513=LongConstant:charValue()
16514=LongConstant:doubleValue()
16515=LongConstant:stringValue()
16516=LongConstant:typeID()
16517=LongConstant:intValue()
16518=LongConstant:shortValue()
16519=LongConstant:floatValue()
16520=LongConstant:LongConstant(long)
16521=LongConstant:hashCode()
16522=GetResourcesTests:test014()
16523=GetResourcesTests:test002()
16524=GetResourcesTests:test013()
16525=GetResourcesTests:test001()
16526=GetResourcesTests:test016()
16527=GetResourcesTests:test004()
16528=GetResourcesTests:test015()
16529=GetResourcesTests:test003()
16530=GetResourcesTests:GetResourcesTests(String)
16531=GetResourcesTests:test006()
16532=GetResourcesTests:suite()
16533=GetResourcesTests:getResourceOuput(IResource[])
16534=GetResourcesTests:test005()
16535=GetResourcesTests:test009()
16536=GetResourcesTests:test008()
16537=GetResourcesTests:test007()
16538=GetResourcesTests:test010()
16539=GetResourcesTests:test012()
16540=GetResourcesTests:test011()
16541=TypeNameMatchRequestor:acceptTypeNameMatch(TypeNameMatch)
16542=BatchAnnotationFactory:supportedOptions()
16543=BatchAnnotationFactory:supportedAnnotationTypes()
16544=BatchAnnotationFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
16545=PrefixExpression:PrefixExpression(Expression, Expression, int, int)
16546=PrefixExpression:operatorToString()
16547=PrefixExpression:traverse(ASTVisitor, BlockScope)
16548=PrefixExpression:restrainUsageToNumericTypes()
16549=PrefixExpression:printExpressionNoParenthesis(int, StringBuffer)
16550=ResolvedLambdaExpression:equals(Object)
16551=ResolvedLambdaExpression:unresolved()
16552=ResolvedLambdaExpression:getKey()
16553=ResolvedLambdaExpression:toStringInfo(int, StringBuffer, Object, boolean)
16554=ResolvedLambdaExpression:isResolved()
16555=ResolvedLambdaExpression:getFullyQualifiedParameterizedName()
16556=ResolvedLambdaExpression:ResolvedLambdaExpression(JavaElement, LambdaExpression, String)
16557=MethodDeclarationImpl:toString()
16558=MethodDeclarationImpl:MethodDeclarationImpl(IMethodBinding, BaseProcessorEnv)
16559=MethodDeclarationImpl:getReturnType()
16560=MethodDeclarationImpl:kind()
16561=MethodDeclarationImpl:accept(DeclarationVisitor)
16562=X:bar()
16563=X:main(String[])
16564=IBytecodeVisitor:_l2f(int)
16565=IBytecodeVisitor:_ifgt(int, int)
16566=IBytecodeVisitor:_areturn(int)
16567=IBytecodeVisitor:_d2f(int)
16568=IBytecodeVisitor:_lookupswitch(int, int, int, int[][])
16569=IBytecodeVisitor:_istore_3(int)
16570=IBytecodeVisitor:_ifge(int, int)
16571=IBytecodeVisitor:_monitorexit(int)
16572=IBytecodeVisitor:_lstore_3(int)
16573=IBytecodeVisitor:_fload_3(int)
16574=IBytecodeVisitor:_ifnull(int, int)
16575=IBytecodeVisitor:_if_icmpne(int, int)
16576=IBytecodeVisitor:_f2d(int)
16577=IBytecodeVisitor:_sipush(int, short)
16578=IBytecodeVisitor:_invokedynamic(int, int, IConstantPoolEntry)
16579=IBytecodeVisitor:_aastore(int)
16580=IBytecodeVisitor:_i2c(int)
16581=IBytecodeVisitor:_dsub(int)
16582=IBytecodeVisitor:_fstore(int, int)
16583=IBytecodeVisitor:_dload_0(int)
16584=IBytecodeVisitor:_fload(int, int)
16585=IBytecodeVisitor:_ifnonnull(int, int)
16586=IBytecodeVisitor:_lload_1(int)
16587=IBytecodeVisitor:_jsr_w(int, int)
16588=IBytecodeVisitor:_dmul(int)
16589=IBytecodeVisitor:_fcmpg(int)
16590=IBytecodeVisitor:_ifle(int, int)
16591=IBytecodeVisitor:_f2l(int)
16592=IBytecodeVisitor:_dup2_x2(int)
16593=IBytecodeVisitor:_aload_3(int)
16594=IBytecodeVisitor:_lrem(int)
16595=IBytecodeVisitor:_dload_3(int)
16596=IBytecodeVisitor:_caload(int)
16597=IBytecodeVisitor:_iconst_4(int)
16598=IBytecodeVisitor:_newarray(int, int)
16599=IBytecodeVisitor:_irem(int)
16600=IBytecodeVisitor:_lxor(int)
16601=IBytecodeVisitor:_dup_x1(int)
16602=IBytecodeVisitor:_bipush(int, byte)
16603=IBytecodeVisitor:_dconst_0(int)
16604=IBytecodeVisitor:_ifne(int, int)
16605=IBytecodeVisitor:_iload_0(int)
16606=IBytecodeVisitor:_lconst_0(int)
16607=IBytecodeVisitor:_d2i(int)
16608=IBytecodeVisitor:_l2i(int)
16609=IBytecodeVisitor:_dadd(int)
16610=IBytecodeVisitor:_iaload(int)
16611=IBytecodeVisitor:_if_icmpgt(int, int)
16612=IBytecodeVisitor:_iushr(int)
16613=IBytecodeVisitor:_aload_2(int)
16614=IBytecodeVisitor:_istore(int, int)
16615=IBytecodeVisitor:_astore_3(int)
16616=IBytecodeVisitor:_ior(int)
16617=IBytecodeVisitor:_ixor(int)
16618=IBytecodeVisitor:_iconst_3(int)
16619=IBytecodeVisitor:_goto_w(int, int)
16620=IBytecodeVisitor:_i2d(int)
16621=IBytecodeVisitor:_fconst_0(int)
16622=IBytecodeVisitor:_dup(int)
16623=IBytecodeVisitor:_swap(int)
16624=IBytecodeVisitor:_iload_3(int)
16625=IBytecodeVisitor:_i2s(int)
16626=IBytecodeVisitor:_fmul(int)
16627=IBytecodeVisitor:_athrow(int)
16628=IBytecodeVisitor:_istore_2(int)
16629=IBytecodeVisitor:_dstore_0(int)
16630=IBytecodeVisitor:_if_acmpeq(int, int)
16631=IBytecodeVisitor:_goto(int, int)
16632=IBytecodeVisitor:_lload_2(int)
16633=IBytecodeVisitor:_istore_0(int)
16634=IBytecodeVisitor:_dstore_2(int)
16635=IBytecodeVisitor:_iload_1(int)
16636=IBytecodeVisitor:_astore_2(int)
16637=IBytecodeVisitor:_castore(int)
16638=IBytecodeVisitor:_lstore_0(int)
16639=IBytecodeVisitor:_pop(int)
16640=IBytecodeVisitor:_invokeinterface(int, int, byte, IConstantPoolEntry)
16641=IBytecodeVisitor:_aload_0(int)
16642=IBytecodeVisitor:_idiv(int)
16643=IBytecodeVisitor:_iconst_1(int)
16644=IBytecodeVisitor:_lmul(int)
16645=IBytecodeVisitor:_dup2(int)
16646=IBytecodeVisitor:_if_icmple(int, int)
16647=IBytecodeVisitor:_invokestatic(int, int, IConstantPoolEntry)
16648=IBytecodeVisitor:_lconst_1(int)
16649=IBytecodeVisitor:_frem(int)
16650=IBytecodeVisitor:_ishl(int)
16651=IBytecodeVisitor:_ddiv(int)
16652=IBytecodeVisitor:_bastore(int)
16653=IBytecodeVisitor:_checkcast(int, int, IConstantPoolEntry)
16654=IBytecodeVisitor:_if_icmpeq(int, int)
16655=IBytecodeVisitor:_fconst_2(int)
16656=IBytecodeVisitor:_d2l(int)
16657=IBytecodeVisitor:_i2l(int)
16658=IBytecodeVisitor:_i2b(int)
16659=IBytecodeVisitor:_freturn(int)
16660=IBytecodeVisitor:_dload_2(int)
16661=IBytecodeVisitor:_dcmpl(int)
16662=IBytecodeVisitor:_iflt(int, int)
16663=IBytecodeVisitor:_dneg(int)
16664=IBytecodeVisitor:_monitorenter(int)
16665=IBytecodeVisitor:_arraylength(int)
16666=IBytecodeVisitor:_fastore(int)
16667=IBytecodeVisitor:_lcmp(int)
16668=IBytecodeVisitor:_lload_0(int)
16669=IBytecodeVisitor:_dcmpg(int)
16670=IBytecodeVisitor:_fstore_3(int)
16671=IBytecodeVisitor:_fload_1(int)
16672=IBytecodeVisitor:_lstore_2(int)
16673=IBytecodeVisitor:_astore_0(int)
16674=IBytecodeVisitor:_new(int, int, IConstantPoolEntry)
16675=IBytecodeVisitor:_lshr(int)
16676=IBytecodeVisitor:_sastore(int)
16677=IBytecodeVisitor:_impdep2(int)
16678=IBytecodeVisitor:_istore_1(int)
16679=IBytecodeVisitor:_lstore_1(int)
16680=IBytecodeVisitor:_dstore_1(int)
16681=IBytecodeVisitor:_invokevirtual(int, int, IConstantPoolEntry)
16682=IBytecodeVisitor:_faload(int)
16683=IBytecodeVisitor:_isub(int)
16684=IBytecodeVisitor:_ishr(int)
16685=IBytecodeVisitor:_aload(int, int)
16686=IBytecodeVisitor:_iload_2(int)
16687=IBytecodeVisitor:_astore_1(int)
16688=IBytecodeVisitor:_iinc(int, int, int)
16689=IBytecodeVisitor:_lload_3(int)
16690=IBytecodeVisitor:_lushr(int)
16691=IBytecodeVisitor:_wide(int, int, int, int)
16692=IBytecodeVisitor:_ineg(int)
16693=IBytecodeVisitor:_ldc2_w(int, int, IConstantPoolEntry)
16694=IBytecodeVisitor:_ladd(int)
16695=IBytecodeVisitor:_lneg(int)
16696=IBytecodeVisitor:_putfield(int, int, IConstantPoolEntry)
16697=IBytecodeVisitor:_lsub(int)
16698=IBytecodeVisitor:_l2d(int)
16699=IBytecodeVisitor:_lastore(int)
16700=IBytecodeVisitor:_saload(int)
16701=IBytecodeVisitor:_fadd(int)
16702=IBytecodeVisitor:_iconst_5(int)
16703=IBytecodeVisitor:_fneg(int)
16704=IBytecodeVisitor:_astore(int, int)
16705=IBytecodeVisitor:_anewarray(int, int, IConstantPoolEntry)
16706=IBytecodeVisitor:_iconst_m1(int)
16707=IBytecodeVisitor:_getstatic(int, int, IConstantPoolEntry)
16708=IBytecodeVisitor:_iadd(int)
16709=IBytecodeVisitor:_fstore_1(int)
16710=IBytecodeVisitor:_dup2_x1(int)
16711=IBytecodeVisitor:_lstore(int, int)
16712=IBytecodeVisitor:_dup_x2(int)
16713=IBytecodeVisitor:_invokespecial(int, int, IConstantPoolEntry)
16714=IBytecodeVisitor:_jsr(int, int)
16715=IBytecodeVisitor:_fconst_1(int)
16716=IBytecodeVisitor:_dconst_1(int)
16717=IBytecodeVisitor:_lor(int)
16718=IBytecodeVisitor:_iconst_2(int)
16719=IBytecodeVisitor:_instanceof(int, int, IConstantPoolEntry)
16720=IBytecodeVisitor:_daload(int)
16721=IBytecodeVisitor:_aload_1(int)
16722=IBytecodeVisitor:_land(int)
16723=IBytecodeVisitor:_lload(int, int)
16724=IBytecodeVisitor:_iastore(int)
16725=IBytecodeVisitor:_ireturn(int)
16726=IBytecodeVisitor:_fsub(int)
16727=IBytecodeVisitor:_ldc(int, int, IConstantPoolEntry)
16728=IBytecodeVisitor:_drem(int)
16729=IBytecodeVisitor:_iand(int)
16730=IBytecodeVisitor:_dreturn(int)
16731=IBytecodeVisitor:_fcmpl(int)
16732=IBytecodeVisitor:_fdiv(int)
16733=IBytecodeVisitor:_fload_2(int)
16734=IBytecodeVisitor:_i2f(int)
16735=IBytecodeVisitor:_putstatic(int, int, IConstantPoolEntry)
16736=IBytecodeVisitor:_ifeq(int, int)
16737=IBytecodeVisitor:_tableswitch(int, int, int, int, int[])
16738=IBytecodeVisitor:_dload(int, int)
16739=IBytecodeVisitor:_fstore_0(int)
16740=IBytecodeVisitor:_dstore(int, int)
16741=IBytecodeVisitor:_dastore(int)
16742=IBytecodeVisitor:_fstore_2(int)
16743=IBytecodeVisitor:_getfield(int, int, IConstantPoolEntry)
16744=IBytecodeVisitor:_imul(int)
16745=IBytecodeVisitor:_ret(int, int)
16746=IBytecodeVisitor:_iload(int, int)
16747=IBytecodeVisitor:_fload_0(int)
16748=IBytecodeVisitor:_if_icmplt(int, int)
16749=IBytecodeVisitor:_breakpoint(int)
16750=IBytecodeVisitor:_f2i(int)
16751=IBytecodeVisitor:_baload(int)
16752=IBytecodeVisitor:_impdep1(int)
16753=IBytecodeVisitor:_pop2(int)
16754=IBytecodeVisitor:_wide(int, int, int)
16755=IBytecodeVisitor:_aconst_null(int)
16756=IBytecodeVisitor:_ldiv(int)
16757=IBytecodeVisitor:_ldc_w(int, int, IConstantPoolEntry)
16758=IBytecodeVisitor:_if_icmpge(int, int)
16759=IBytecodeVisitor:_invokedynamic(int, int, IConstantPoolEntry, IConstantPoolEntry)
16760=IBytecodeVisitor:_lshl(int)
16761=IBytecodeVisitor:_iconst_0(int)
16762=IBytecodeVisitor:_nop(int)
16763=IBytecodeVisitor:_if_acmpne(int, int)
16764=IBytecodeVisitor:_dload_1(int)
16765=IBytecodeVisitor:_aaload(int)
16766=IBytecodeVisitor:_laload(int)
16767=IBytecodeVisitor:_dstore_3(int)
16768=IBytecodeVisitor:_lreturn(int)
16769=IBytecodeVisitor:_multianewarray(int, int, int, IConstantPoolEntry)
16770=IBytecodeVisitor:_return(int)
16771=TestInvalid1:foo()
16772=MemberTypeBinding:clone(TypeBinding)
16773=MemberTypeBinding:checkSyntheticArgsAndFields()
16774=MemberTypeBinding:toString()
16775=MemberTypeBinding:constantPoolName()
16776=MemberTypeBinding:initializeDeprecatedAnnotationTagBits()
16777=MemberTypeBinding:MemberTypeBinding(MemberTypeBinding)
16778=MemberTypeBinding:MemberTypeBinding(char[][], ClassScope, SourceTypeBinding)
16779=A:foo()
16780=A:someMethod()
16781=A:foo(Object)
16782=SelectionRequestor:acceptMethodDeclaration(IType, char[], int, int)
16783=SelectionRequestor:acceptPackage(char[])
16784=SelectionRequestor:acceptBinaryMethod(IType, char[], char[][], char[][], String[], char[][], char[][][], char[], boolean)
16785=SelectionRequestor:acceptSourceMethod(IType, char[], char[][], char[][], String[], char[][], char[][][], char[])
16786=SelectionRequestor:acceptLocalMethod(MethodBinding)
16787=SelectionRequestor:SelectionRequestor(NameLookup, Openable)
16788=SelectionRequestor:resolveType(char[], char[], int)
16789=SelectionRequestor:resolveTypeByLocation(char[], char[], int, int, int)
16790=SelectionRequestor:acceptLocalType(TypeBinding)
16791=SelectionRequestor:findLocalElement(int, MethodScope)
16792=SelectionRequestor:acceptLocalTypeParameter(TypeVariableBinding)
16793=SelectionRequestor:acceptMethodTypeParameter(char[], char[], char[], int, int, char[], boolean, int, int)
16794=SelectionRequestor:addElement(IJavaElement)
16795=SelectionRequestor:findLocalElement(int)
16796=SelectionRequestor:acceptType(char[], char[], int, boolean, char[], int, int)
16797=SelectionRequestor:getElements()
16798=SelectionRequestor:acceptField(char[], char[], char[], boolean, char[], int, int)
16799=SelectionRequestor:acceptMethod(char[], char[], String, char[], char[][], char[][], String[], char[][], char[][][], boolean, boolean, char[], int, int)
16800=SelectionRequestor:acceptLocalVariable(LocalVariableBinding, org.eclipse.jdt.internal.compiler.env.ICompilationUnit)
16801=SelectionRequestor:acceptError(CategorizedProblem)
16802=SelectionRequestor:acceptLocalMethodTypeParameter(TypeVariableBinding)
16803=SelectionRequestor:acceptBinaryMethod(IType, IMethod, char[], boolean)
16804=SelectionRequestor:acceptLocalField(FieldBinding)
16805=SelectionRequestor:areTypeParametersCompatible(IMethod, char[][], char[][][])
16806=SelectionRequestor:acceptType(IType)
16807=SelectionRequestor:findMethodFromBinding(MethodBinding, String[], ReferenceBinding)
16808=SelectionRequestor:acceptTypeParameter(char[], char[], char[], boolean, int, int)
16809=A:A(E)
16810=A:toString()
16811=A:B:toString()
16812=X:main(String[])
16813=A:B:B(Integer)
16814=Convertible:convert()
16815=X:main(String[])
16816=TypeParameterDeclaration:getBounds()
16817=TypeParameterDeclaration:getOwner()
16818=ProblemReporter:invalidUsageOfAnnotationDeclarations(TypeDeclaration)
16819=ProblemReporter:needImplementation(ASTNode)
16820=ProblemReporter:fieldHiding(FieldDeclaration, Binding)
16821=ProblemReporter:nullityMismatchVariableIsFreeTypeVariable(VariableBinding, ASTNode)
16822=ProblemReporter:contradictoryNullAnnotations(int, int)
16823=ProblemReporter:javadocInvalidReference(int, int)
16824=ProblemReporter:typeMismatchError(TypeBinding, TypeBinding, ASTNode, ASTNode)
16825=ProblemReporter:uninitializedLocalVariable(LocalVariableBinding, ASTNode)
16826=ProblemReporter:arrayConstantsOnlyInArrayInitializers(int, int)
16827=ProblemReporter:genericTypeCannotExtendThrowable(TypeDeclaration)
16828=ProblemReporter:unusedPrivateConstructor(ConstructorDeclaration)
16829=ProblemReporter:illegalModifiers(int, int)
16830=ProblemReporter:redundantSpecificationOfTypeArguments(ASTNode, TypeBinding[])
16831=ProblemReporter:javadocInvalidThrowsClass(int, int)
16832=ProblemReporter:missingDeprecatedAnnotationForType(TypeDeclaration)
16833=ProblemReporter:illegalSuperCallBypassingOverride(InvocationSite, MethodBinding, ReferenceBinding)
16834=ProblemReporter:illegalModifierForLocalClass(SourceTypeBinding)
16835=ProblemReporter:possibleAccidentalBooleanAssignment(Assignment)
16836=ProblemReporter:getProblemCategory(int, int)
16837=ProblemReporter:deprecatedType(TypeBinding, ASTNode, int)
16838=ProblemReporter:parseErrorMergeTokens(int, int, String)
16839=ProblemReporter:undocumentedEmptyBlock(int, int)
16840=ProblemReporter:javadocInvalidParamTagName(int, int)
16841=ProblemReporter:nodeSourceStart(Binding, ASTNode, int)
16842=ProblemReporter:duplicateImport(ImportReference)
16843=ProblemReporter:handle(int, String[], String[], int, int, CompilationResult)
16844=ProblemReporter:parseErrorInsertToComplete(int, int, String, String)
16845=ProblemReporter:staticMemberOfParameterizedType(ASTNode, ReferenceBinding, ReferenceBinding, int)
16846=ProblemReporter:undefinedAnnotationValue(TypeBinding, MemberValuePair)
16847=ProblemReporter:forwardReference(Reference, int, FieldBinding)
16848=ProblemReporter:contradictoryNullAnnotations(Annotation[])
16849=ProblemReporter:abstractMethodMustBeImplemented(SourceTypeBinding, MethodBinding)
16850=ProblemReporter:invalidNullToSynchronize(Expression)
16851=ProblemReporter:errorNoMethodFor(MessageSend, TypeBinding, TypeBinding[])
16852=ProblemReporter:missingSerialVersion(TypeDeclaration)
16853=ProblemReporter:parseErrorDeleteTokens(int, int)
16854=ProblemReporter:unexpectedStaticModifierForField(SourceTypeBinding, FieldDeclaration)
16855=ProblemReporter:incorrectSwitchType(Expression, TypeBinding)
16856=ProblemReporter:localVariableNullInstanceof(LocalVariableBinding, ASTNode)
16857=ProblemReporter:localVariableNonNullComparedToNull(LocalVariableBinding, ASTNode)
16858=ProblemReporter:nodeSourceEnd(Binding, ASTNode, int)
16859=ProblemReporter:duplicateAnnotationValue(TypeBinding, MemberValuePair)
16860=ProblemReporter:reset()
16861=ProblemReporter:unsafeRawGenericMethodInvocation(ASTNode, MethodBinding, TypeBinding[])
16862=ProblemReporter:objectMustBeClass(SourceTypeBinding)
16863=ProblemReporter:annotationValueMustBeClassLiteral(TypeBinding, char[], Expression)
16864=ProblemReporter:conflictingNullAnnotations(MethodBinding, ASTNode, MethodBinding)
16865=ProblemReporter:annotationMembersCannotHaveParameters(AnnotationMethodDeclaration)
16866=ProblemReporter:incorrectArityForParameterizedType(ASTNode, TypeBinding, TypeBinding[], int)
16867=ProblemReporter:finalMethodCannotBeOverridden(MethodBinding, MethodBinding)
16868=ProblemReporter:stringConstantIsExceedingUtf8Limit(ASTNode)
16869=ProblemReporter:illegalVisibilityModifierCombinationForMemberType(SourceTypeBinding)
16870=ProblemReporter:nativeMethodsCannotBeStrictfp(ReferenceBinding, AbstractMethodDeclaration)
16871=ProblemReporter:noMoreAvailableSpaceInConstantPool(TypeDeclaration)
16872=ProblemReporter:useEnumAsAnIdentifier(int, int)
16873=ProblemReporter:corruptedSignature(TypeBinding, char[], int)
16874=ProblemReporter:resourceHasToImplementAutoCloseable(TypeBinding, TypeReference)
16875=ProblemReporter:missingDefaultCase(SwitchStatement, boolean, TypeBinding)
16876=ProblemReporter:possibleFallThroughCase(CaseStatement)
16877=ProblemReporter:repeatableAnnotationTypeIsDocumented(ASTNode, ReferenceBinding, ReferenceBinding)
16878=ProblemReporter:getElaborationId(int, byte)
16879=ProblemReporter:typeMismatchError(TypeBinding, TypeVariableBinding, ReferenceBinding, ASTNode)
16880=ProblemReporter:bytecodeExceeds64KLimit(TypeDeclaration)
16881=ProblemReporter:overridesDeprecatedMethod(MethodBinding, MethodBinding)
16882=ProblemReporter:parameterizedMemberTypeMissingArguments(ASTNode, TypeBinding, int)
16883=ProblemReporter:multiCatchNotBelow17(ASTNode)
16884=ProblemReporter:unusedLabel(LabeledStatement)
16885=ProblemReporter:javadocUnexpectedTag(int, int)
16886=ProblemReporter:invalidUnaryExpression(Expression)
16887=ProblemReporter:unnecessaryTypeArgumentsForMethodInvocation(MethodBinding, TypeBinding[], TypeReference[])
16888=ProblemReporter:localVariableRedundantCheckOnNonNull(LocalVariableBinding, ASTNode)
16889=ProblemReporter:getIrritant(int)
16890=ProblemReporter:nodeSourceEnd(Binding, ASTNode)
16891=ProblemReporter:illegalArrayOfUnionType(char[], TypeReference)
16892=ProblemReporter:nodeSourceStart(Binding, ASTNode)
16893=ProblemReporter:abstractMethodInConcreteClass(SourceTypeBinding)
16894=ProblemReporter:invalidContinue(ASTNode)
16895=ProblemReporter:forbiddenReference(MethodBinding, ASTNode, byte, String, int)
16896=ProblemReporter:illegalModifierForMethod(AbstractMethodDeclaration)
16897=ProblemReporter:illegalExtendedDimensions(Argument)
16898=ProblemReporter:repeatableAnnotationWithRepeatingContainer(Annotation, ReferenceBinding)
16899=ProblemReporter:inheritedMethodReducesVisibility(SourceTypeBinding, MethodBinding, MethodBinding[])
16900=ProblemReporter:invalidTypeVariableAsException(TypeBinding, ASTNode)
16901=ProblemReporter:toleratedMisplacedTypeAnnotations(Annotation, Annotation)
16902=ProblemReporter:cannotInvokeSuperConstructorInEnum(ExplicitConstructorCall, MethodBinding)
16903=ProblemReporter:lambdaSignatureMismatched(LambdaExpression)
16904=ProblemReporter:illegalModifiersForElidedType(Argument)
16905=ProblemReporter:javadocInvalidConstructor(Statement, MethodBinding, int)
16906=ProblemReporter:conditionalArgumentsIncompatibleTypes(ConditionalExpression, TypeBinding, TypeBinding)
16907=ProblemReporter:nonExternalizedStringLiteral(ASTNode)
16908=ProblemReporter:parseErrorInsertToCompleteScope(int, int, String)
16909=ProblemReporter:notCompatibleTypesErrorInForeach(Expression, TypeBinding, TypeBinding)
16910=ProblemReporter:diamondNotBelow17(ASTNode)
16911=ProblemReporter:shouldReturn(TypeBinding, ASTNode)
16912=ProblemReporter:forbiddenReference(FieldBinding, ASTNode, byte, String, int)
16913=ProblemReporter:illegalExtendedDimensions(AnnotationMethodDeclaration)
16914=ProblemReporter:contradictoryNullAnnotationsInferred(MethodBinding, ASTNode)
16915=ProblemReporter:wildcardInvocation(ASTNode, TypeBinding, MethodBinding, TypeBinding[])
16916=ProblemReporter:duplicateCase(CaseStatement)
16917=ProblemReporter:referenceExpressionArgumentNullityMismatch(ReferenceExpression, TypeBinding, TypeBinding, MethodBinding, int, NullAnnotationMatching)
16918=ProblemReporter:cannotAllocateVoidArray(Expression)
16919=ProblemReporter:methodReferenceSwingsBothWays(ReferenceExpression, MethodBinding, MethodBinding)
16920=ProblemReporter:javadocMissingParamName(int, int, int)
16921=ProblemReporter:invalidExpressionAsStatement(Expression)
16922=ProblemReporter:unusedPrivateMethod(AbstractMethodDeclaration)
16923=ProblemReporter:noSuchEnclosingInstance(TypeBinding, ASTNode, boolean)
16924=ProblemReporter:typeHiding(TypeParameter, Binding)
16925=ProblemReporter:nonStaticAccessToStaticField(ASTNode, FieldBinding, int)
16926=ProblemReporter:duplicateModifierForVariable(LocalDeclaration, boolean)
16927=ProblemReporter:parseErrorUnexpectedEnd(int, int)
16928=ProblemReporter:unnecessaryElse(ASTNode)
16929=ProblemReporter:uninitializedBlankFinalField(FieldBinding, ASTNode)
16930=ProblemReporter:packageCollidesWithType(CompilationUnitDeclaration)
16931=ProblemReporter:typesAsString(TypeBinding[], boolean)
16932=ProblemReporter:lambdaExpressionsNotBelow18(LambdaExpression)
16933=ProblemReporter:javadocDeprecatedField(FieldBinding, ASTNode, int)
16934=ProblemReporter:cannotAssignToFinalOuterLocal(LocalVariableBinding, ASTNode)
16935=ProblemReporter:illegalVisibilityModifierForInterfaceMemberType(SourceTypeBinding)
16936=ProblemReporter:expressionPotentialNullReference(ASTNode)
16937=ProblemReporter:notCompatibleTypesError(InstanceOfExpression, TypeBinding, TypeBinding)
16938=ProblemReporter:wrongSequenceOfExceptionTypesError(TypeReference, TypeBinding, TypeBinding)
16939=ProblemReporter:notAnnotationType(TypeBinding, ASTNode)
16940=ProblemReporter:invalidParameterizedExceptionType(TypeBinding, ASTNode)
16941=ProblemReporter:unusedObjectAllocation(AllocationExpression)
16942=ProblemReporter:unusedExceptionParameter(LocalDeclaration)
16943=ProblemReporter:isRecoveredName(char[][])
16944=ProblemReporter:objectCannotBeGeneric(TypeDeclaration)
16945=ProblemReporter:methodMustOverride(AbstractMethodDeclaration, long)
16946=ProblemReporter:tooManyParametersForSyntheticMethod(AbstractMethodDeclaration)
16947=ProblemReporter:nonStaticAccessToStaticMethod(ASTNode, MethodBinding)
16948=ProblemReporter:enumConstantsCannotBeSurroundedByParenthesis(Expression)
16949=ProblemReporter:invalidField(FieldReference, TypeBinding)
16950=ProblemReporter:invalidUsageOfTypeParametersForAnnotationDeclaration(TypeDeclaration)
16951=ProblemReporter:annotationCannotOverrideMethod(MethodBinding, MethodBinding)
16952=ProblemReporter:forwardTypeVariableReference(ASTNode, TypeVariableBinding)
16953=ProblemReporter:errorNoMethodFor(Expression, TypeBinding, char[], TypeBinding[])
16954=ProblemReporter:hierarchyHasProblems(SourceTypeBinding)
16955=ProblemReporter:attemptToReturnVoidValue(ReturnStatement)
16956=ProblemReporter:javadocAmbiguousMethodReference(int, int, Binding, int)
16957=ProblemReporter:argumentTypeCannotBeVoidArray(Argument)
16958=ProblemReporter:repeatableAnnotationTypeIsInherited(ASTNode, ReferenceBinding, ReferenceBinding)
16959=ProblemReporter:typeHiding(TypeDeclaration, TypeBinding)
16960=ProblemReporter:illegalSuperAccess(TypeBinding, TypeBinding, ASTNode)
16961=ProblemReporter:assignmentHasNoEffect(Assignment, char[])
16962=ProblemReporter:caseExpressionMustBeConstant(Expression)
16963=ProblemReporter:forbiddenReference(TypeBinding, ASTNode, byte, String, int)
16964=ProblemReporter:unexpectedStaticModifierForMethod(ReferenceBinding, AbstractMethodDeclaration)
16965=ProblemReporter:javadocMissingThrowsClassName(int, int, int)
16966=ProblemReporter:anonymousClassCannotExtendFinalClass(TypeReference, TypeBinding)
16967=ProblemReporter:invalidConstructor(Statement, MethodBinding)
16968=ProblemReporter:javadocDeprecatedType(TypeBinding, ASTNode, int, int)
16969=ProblemReporter:uninternedIdentityComparison(EqualExpression, TypeBinding, TypeBinding, CompilationUnitDeclaration)
16970=ProblemReporter:illegalAccessFromTypeVariable(TypeVariableBinding, ASTNode)
16971=ProblemReporter:danglingReference(ReferenceExpression, TypeBinding, char[], TypeBinding[])
16972=ProblemReporter:annotationTypeDeclarationCannotHaveSuperclass(TypeDeclaration)
16973=ProblemReporter:illegalAnnotationForBaseType(TypeReference, Annotation[], long)
16974=ProblemReporter:targetTypeIsNotAFunctionalInterface(FunctionalExpression)
16975=ProblemReporter:inheritedDefaultMethodConflictsWithOtherInherited(SourceTypeBinding, MethodBinding, MethodBinding)
16976=ProblemReporter:abstractMethodInAbstractClass(SourceTypeBinding, AbstractMethodDeclaration)
16977=ProblemReporter:staticInterfaceMethodsNotBelow18(MethodDeclaration)
16978=ProblemReporter:invalidField(QualifiedNameReference, FieldBinding, int, TypeBinding)
16979=ProblemReporter:unhandledWarningToken(Expression)
16980=ProblemReporter:illegalModifierForInterface(SourceTypeBinding)
16981=ProblemReporter:packageIsNotExpectedPackage(CompilationUnitDeclaration)
16982=ProblemReporter:variableTypeCannotBeVoid(AbstractVariableDeclaration)
16983=ProblemReporter:unusedArgument(LocalDeclaration)
16984=ProblemReporter:wildcardAssignment(TypeBinding, TypeBinding, ASTNode)
16985=ProblemReporter:invalidBreak(ASTNode)
16986=ProblemReporter:retrieveEndingPositionAfterOpeningParenthesis(int, int, int)
16987=ProblemReporter:mustUseAStaticMethod(MessageSend, MethodBinding)
16988=ProblemReporter:duplicateTargetInTargetAnnotation(TypeBinding, NameReference)
16989=ProblemReporter:illegalAbstractModifierCombinationForMethod(ReferenceBinding, AbstractMethodDeclaration)
16990=ProblemReporter:duplicateDefaultCase(ASTNode)
16991=ProblemReporter:annotationValueMustBeConstant(TypeBinding, char[], Expression, boolean)
16992=ProblemReporter:onlyReferenceTypesInIntersectionCast(TypeReference)
16993=ProblemReporter:syntaxError(int, int, int, int, char[], String, String)
16994=ProblemReporter:methodMustBeAccessedWithInstance(ReferenceExpression, MethodBinding)
16995=ProblemReporter:scannerError(Parser, String)
16996=ProblemReporter:illegalModifierForAnnotationType(SourceTypeBinding)
16997=ProblemReporter:inheritedMethodReducesVisibility(TypeParameter, MethodBinding, MethodBinding[])
16998=ProblemReporter:unsafeNullnessCast(CastExpression, Scope)
16999=ProblemReporter:alreadyDefinedLabel(char[], ASTNode)
17000=ProblemReporter:mustDefineDimensionsOrInitializer(ArrayAllocationExpression)
17001=ProblemReporter:cannotUseSuperInCodeSnippet(int, int)
17002=ProblemReporter:varargsConflict(MethodBinding, MethodBinding, SourceTypeBinding)
17003=ProblemReporter:explicitlyClosedAutoCloseable(FakedTrackingVariable)
17004=ProblemReporter:messageSendPotentialNullReference(MethodBinding, ASTNode)
17005=ProblemReporter:invalidUsageOfEnumDeclarations(TypeDeclaration)
17006=ProblemReporter:isClassPathCorrect(char[][], CompilationUnitDeclaration, Object)
17007=ProblemReporter:conflictingImport(ImportReference)
17008=ProblemReporter:illegalModifierForEnum(SourceTypeBinding)
17009=ProblemReporter:lambdaParameterTypeMismatched(Argument, TypeReference, TypeBinding)
17010=ProblemReporter:duplicateTypes(CompilationUnitDeclaration, TypeDeclaration)
17011=ProblemReporter:unusedLocalVariable(LocalDeclaration)
17012=ProblemReporter:illegalQualifierForExplicitThis(Receiver, TypeBinding)
17013=ProblemReporter:redefineArgument(Argument)
17014=ProblemReporter:autoManagedResourcesNotBelow17(LocalDeclaration[])
17015=ProblemReporter:duplicateSuperinterface(SourceTypeBinding, TypeReference, ReferenceBinding)
17016=ProblemReporter:retrieveStartingPositionAfterOpeningParenthesis(int, int, int)
17017=ProblemReporter:illegalModifierForEnumConstant(ReferenceBinding, FieldDeclaration)
17018=ProblemReporter:unsafeGenericArrayForVarargs(TypeBinding, ASTNode)
17019=ProblemReporter:finalVariableBound(TypeVariableBinding, TypeReference)
17020=ProblemReporter:missingTypeInLambda(LambdaExpression, MethodBinding)
17021=ProblemReporter:parseErrorReplaceTokens(int, int, String)
17022=ProblemReporter:illegalSourceLevelForThis(Argument)
17023=ProblemReporter:rawTypeReference(ASTNode, TypeBinding)
17024=ProblemReporter:javadocDuplicatedThrowsClassName(TypeReference, int)
17025=ProblemReporter:parameterLackingNullableAnnotation(Argument, ReferenceBinding, char[][])
17026=ProblemReporter:lambdaRedeclaresArgument(Argument)
17027=ProblemReporter:superTypeCannotUseWildcard(SourceTypeBinding, TypeReference, TypeBinding)
17028=ProblemReporter:noMoreAvailableSpaceForArgument(LocalVariableBinding, ASTNode)
17029=ProblemReporter:localVariableRedundantNullAssignment(LocalVariableBinding, ASTNode)
17030=ProblemReporter:duplicateInheritedMethods(SourceTypeBinding, MethodBinding, MethodBinding, boolean)
17031=ProblemReporter:cannotImportPackage(ImportReference)
17032=ProblemReporter:missingEnumConstantCase(SwitchStatement, FieldBinding)
17033=ProblemReporter:cannotThrowType(ASTNode, TypeBinding)
17034=ProblemReporter:duplicateFieldInType(SourceTypeBinding, FieldDeclaration)
17035=ProblemReporter:javadocMissingReturnTag(int, int, int)
17036=ProblemReporter:signalNoImplicitStringConversionForCharArrayExpression(Expression)
17037=ProblemReporter:illegalModifierForMemberClass(SourceTypeBinding)
17038=ProblemReporter:javadocMissingReference(int, int, int)
17039=ProblemReporter:lambdaRedeclaresLocal(LocalDeclaration)
17040=ProblemReporter:illegalReturnRedefinition(AbstractMethodDeclaration, MethodBinding, char[][])
17041=ProblemReporter:illegalVisibilityModifierCombinationForField(ReferenceBinding, FieldDeclaration)
17042=ProblemReporter:unnecessaryInstanceof(InstanceOfExpression, TypeBinding)
17043=ProblemReporter:explitAnnotationTargetRequired(Annotation)
17044=ProblemReporter:needToEmulateMethodAccess(MethodBinding, ASTNode)
17045=ProblemReporter:deprecatedMethod(MethodBinding, ASTNode)
17046=ProblemReporter:illegalVarargInLambda(Argument)
17047=ProblemReporter:incompatibleExceptionInThrowsClause(SourceTypeBinding, MethodBinding, MethodBinding, ReferenceBinding)
17048=ProblemReporter:javadocInvalidSeeReferenceArgs(int, int)
17049=ProblemReporter:constantOutOfRange(Literal, TypeBinding)
17050=ProblemReporter:staticAndInstanceConflict(MethodBinding, MethodBinding)
17051=ProblemReporter:superinterfacesCollide(TypeBinding, ASTNode, TypeBinding, TypeBinding)
17052=ProblemReporter:parseErrorReplaceToken(int, int, int, char[], String, String)
17053=ProblemReporter:invalidUsageOfTypeParametersForEnumDeclaration(TypeDeclaration)
17054=ProblemReporter:illegalModifierForMemberInterface(SourceTypeBinding)
17055=ProblemReporter:parseErrorNoSuggestionForTokens(int, int)
17056=ProblemReporter:superinterfaceMustBeAnInterface(SourceTypeBinding, TypeReference, ReferenceBinding)
17057=ProblemReporter:typeCollidesWithEnclosingType(TypeDeclaration)
17058=ProblemReporter:emptyControlFlowStatement(int, int)
17059=ProblemReporter:javadocDeprecatedType(TypeBinding, ASTNode, int)
17060=ProblemReporter:potentiallyUnclosedCloseable(FakedTrackingVariable, ASTNode)
17061=ProblemReporter:annotationTypeDeclarationCannotHaveSuperinterfaces(TypeDeclaration)
17062=ProblemReporter:unnecessaryEnclosingInstanceSpecification(Expression, ReferenceBinding)
17063=ProblemReporter:javadocMissingIdentifier(int, int, int)
17064=ProblemReporter:methodCanBeDeclaredStatic(MethodDeclaration)
17065=ProblemReporter:javadocHiddenReference(int, int, Scope, int)
17066=ProblemReporter:isIdentifier(int)
17067=ProblemReporter:unnecessaryNLSTags(int, int)
17068=ProblemReporter:inheritedMethodReducesVisibility(int, int, MethodBinding, MethodBinding[])
17069=ProblemReporter:rawConstructorReferenceNotWithExplicitTypeArguments(TypeReference[])
17070=ProblemReporter:parseErrorInsertToCompletePhrase(int, int, String)
17071=ProblemReporter:staticFieldAccessToNonStaticVariable(ASTNode, FieldBinding)
17072=ProblemReporter:unresolvableReference(NameReference, Binding)
17073=ProblemReporter:javadocInvalidSeeHref(int, int)
17074=ProblemReporter:invalidTypeToSynchronize(Expression, TypeBinding)
17075=ProblemReporter:referenceMustBeArrayTypeAt(TypeBinding, ArrayReference)
17076=ProblemReporter:repeatableAnnotationTypeTargetMismatch(ASTNode, ReferenceBinding, ReferenceBinding, String)
17077=ProblemReporter:incompatibleReturnType(MethodBinding, MethodBinding)
17078=ProblemReporter:overridesMethodWithoutSuperInvocation(MethodBinding)
17079=ProblemReporter:methodNameClash(MethodBinding, MethodBinding, int)
17080=ProblemReporter:abstractMethodCannotBeOverridden(SourceTypeBinding, MethodBinding)
17081=ProblemReporter:attemptToReturnNonVoidExpression(ReturnStatement, TypeBinding)
17082=ProblemReporter:missingSynchronizedOnInheritedMethod(MethodBinding, MethodBinding)
17083=ProblemReporter:illegalLocalTypeDeclaration(TypeDeclaration)
17084=ProblemReporter:undefinedTypeVariableSignature(char[], ReferenceBinding)
17085=ProblemReporter:contradictoryNullAnnotations(Annotation)
17086=ProblemReporter:javadocInvalidParamTypeParameter(int, int)
17087=ProblemReporter:missingTypeInConstructor(ASTNode, MethodBinding)
17088=ProblemReporter:handle(int, String[], String[], int, int)
17089=ProblemReporter:cannotReturnInInitializer(ASTNode)
17090=ProblemReporter:invalidEnclosingType(Expression, TypeBinding, ReferenceBinding)
17091=ProblemReporter:duplicateModifierForField(ReferenceBinding, FieldDeclaration)
17092=ProblemReporter:findAnnotation(Annotation[], int)
17093=ProblemReporter:expressionNonNullComparison(Expression, boolean)
17094=ProblemReporter:invalidParenthesizedExpression(ASTNode)
17095=ProblemReporter:invalidUsageOfAnnotation(Annotation)
17096=ProblemReporter:fieldsOrThisBeforeConstructorInvocation(ASTNode)
17097=ProblemReporter:interfaceCannotHaveConstructors(ConstructorDeclaration)
17098=ProblemReporter:objectCannotHaveSuperTypes(SourceTypeBinding)
17099=ProblemReporter:duplicateModifierForType(SourceTypeBinding)
17100=ProblemReporter:javadocUndeclaredParamTagName(char[], int, int, int)
17101=ProblemReporter:polymorphicMethodNotBelow17(ASTNode)
17102=ProblemReporter:handle(int, String[], int, String[], int, int, int)
17103=ProblemReporter:invalidTypeArguments(TypeReference[])
17104=ProblemReporter:lambdaExpressionCannotImplementGenericMethod(LambdaExpression, MethodBinding)
17105=ProblemReporter:javadocMalformedSeeReference(int, int)
17106=ProblemReporter:nullityMismatchSpecdNullable(Expression, TypeBinding, char[][])
17107=ProblemReporter:messageSendRedundantCheckOnNonNull(MethodBinding, ASTNode)
17108=ProblemReporter:missingDeprecatedAnnotationForMethod(AbstractMethodDeclaration)
17109=ProblemReporter:nullityMismatchIsUnknown(Expression, TypeBinding, TypeBinding, char[][])
17110=ProblemReporter:illegalParameterRedefinition(Argument, ReferenceBinding, TypeBinding)
17111=ProblemReporter:illegalModifierForField(ReferenceBinding, FieldDeclaration)
17112=ProblemReporter:invalidExplicitConstructorCall(ASTNode)
17113=ProblemReporter:invalidFileNameForPackageAnnotations(Annotation)
17114=ProblemReporter:inheritedMethodsHaveNameClash(SourceTypeBinding, MethodBinding, MethodBinding)
17115=ProblemReporter:illegalVoidExpression(ASTNode)
17116=ProblemReporter:typesAsString(MethodBinding, TypeBinding[], boolean, boolean)
17117=ProblemReporter:contradictoryNullAnnotationsInferred(MethodBinding, int, int, boolean)
17118=ProblemReporter:operatorOnlyValidOnNumericType(CompoundAssignment, TypeBinding, TypeBinding)
17119=ProblemReporter:duplicateBounds(ASTNode, TypeBinding)
17120=ProblemReporter:unreachableCode(Statement)
17121=ProblemReporter:tooManyDimensions(ASTNode)
17122=ProblemReporter:javadocMissingTagDescription(char[], int, int, int)
17123=ProblemReporter:abortDueToInternalError(String)
17124=ProblemReporter:localVariableRedundantCheckOnNull(LocalVariableBinding, ASTNode)
17125=ProblemReporter:unhandledException(TypeBinding, ReferenceExpression)
17126=ProblemReporter:annotationTypeDeclarationCannotHaveConstructor(ConstructorDeclaration)
17127=ProblemReporter:indirectAccessToStaticField(ASTNode, FieldBinding)
17128=ProblemReporter:unusedImport(ImportReference)
17129=ProblemReporter:possibleHeapPollutionFromVararg(AbstractVariableDeclaration)
17130=ProblemReporter:javadocInvalidMemberTypeQualification(int, int, int)
17131=ProblemReporter:illegalModifierForInterfaceField(FieldDeclaration)
17132=ProblemReporter:javadocUnexpectedText(int, int)
17133=ProblemReporter:illegalPrimitiveOrArrayTypeForEnclosingInstance(TypeBinding, ASTNode)
17134=ProblemReporter:missingReturnType(AbstractMethodDeclaration)
17135=ProblemReporter:diamondNotBelow17(ASTNode, int)
17136=ProblemReporter:nullAnnotationUnsupportedLocation(TypeReference)
17137=ProblemReporter:overridesPackageDefaultMethod(MethodBinding, MethodBinding)
17138=ProblemReporter:javadocUnterminatedInlineTag(int, int)
17139=ProblemReporter:parseError(int, int, int, char[], String, String[])
17140=ProblemReporter:cannotUseQualifiedEnumConstantInCaseLabel(Reference, FieldBinding)
17141=ProblemReporter:rawMemberTypeCannotBeParameterized(ASTNode, ReferenceBinding, TypeBinding[])
17142=ProblemReporter:nullAnnotationIsRedundant(AbstractMethodDeclaration, int)
17143=ProblemReporter:unsafeRawInvocation(ASTNode, MethodBinding)
17144=ProblemReporter:implicitObjectBoundNoNullDefault(TypeReference)
17145=ProblemReporter:javadocMissingThrowsTag(TypeReference, int)
17146=ProblemReporter:cannotInstantiate(Expression, TypeBinding)
17147=ProblemReporter:duplicateTypeParameterInType(TypeParameter)
17148=ProblemReporter:unusedPrivateField(FieldDeclaration)
17149=ProblemReporter:shouldImplementHashcode(SourceTypeBinding)
17150=ProblemReporter:typeHiding(TypeDeclaration, TypeVariableBinding)
17151=ProblemReporter:enumAbstractMethodMustBeImplemented(AbstractMethodDeclaration)
17152=ProblemReporter:cannotReadSource(CompilationUnitDeclaration, AbortCompilationUnit, boolean)
17153=ProblemReporter:isRecoveredName(char[])
17154=ProblemReporter:cannotDireclyInvokeAbstractMethod(ASTNode, MethodBinding)
17155=ProblemReporter:hierarchyCircularity(SourceTypeBinding, ReferenceBinding, TypeReference)
17156=ProblemReporter:unnecessaryCast(CastExpression)
17157=ProblemReporter:parseErrorMisplacedConstruct(int, int)
17158=ProblemReporter:typesAsString(MethodBinding, boolean)
17159=ProblemReporter:errorThisSuperInStatic(ASTNode)
17160=ProblemReporter:fakeReachable(ASTNode)
17161=ProblemReporter:abstractMethodMustBeImplemented(SourceTypeBinding, MethodBinding, MethodBinding)
17162=ProblemReporter:deprecatedType(TypeBinding, ASTNode)
17163=ProblemReporter:illegalModifierForEnumConstructor(AbstractMethodDeclaration)
17164=ProblemReporter:invalidTypeForCollection(Expression)
17165=ProblemReporter:cannotImplementIncompatibleNullness(MethodBinding, MethodBinding, boolean)
17166=ProblemReporter:deprecatedField(FieldBinding, ASTNode)
17167=ProblemReporter:invalidOperator(CompoundAssignment, TypeBinding, TypeBinding)
17168=ProblemReporter:cannotUseSuperInJavaLangObject(ASTNode)
17169=ProblemReporter:superclassMustBeAClass(SourceTypeBinding, TypeReference, ReferenceBinding)
17170=ProblemReporter:typeCollidesWithPackage(CompilationUnitDeclaration, TypeDeclaration)
17171=ProblemReporter:abstractMethodNeedingNoBody(AbstractMethodDeclaration)
17172=ProblemReporter:internalAnnotatedTypeName(char[], char[], int)
17173=ProblemReporter:genericInferenceError(String, InvocationSite)
17174=ProblemReporter:nodeSourceEnd(ASTNode)
17175=ProblemReporter:abortDueToInternalError(String, ASTNode)
17176=ProblemReporter:assignmentHasNoEffect(AbstractVariableDeclaration, char[])
17177=ProblemReporter:nullityMismatchingTypeAnnotation(Expression, TypeBinding, TypeBinding, NullAnnotationMatching)
17178=ProblemReporter:defaultMethodsNotBelow18(MethodDeclaration)
17179=ProblemReporter:boundMustBeAnInterface(ASTNode, TypeBinding)
17180=ProblemReporter:bytecodeExceeds64KLimit(AbstractMethodDeclaration)
17181=ProblemReporter:illegalVararg(Argument, AbstractMethodDeclaration)
17182=ProblemReporter:handle(int, String[], String[], int, int, int)
17183=ProblemReporter:unsafeCast(CastExpression, Scope)
17184=ProblemReporter:shortAnnotatedTypeName(TypeBinding, char[][])
17185=ProblemReporter:hiddenCatchBlock(ReferenceBinding, ASTNode)
17186=ProblemReporter:invalidUsageOfTypeParameters(TypeParameter, TypeParameter)
17187=ProblemReporter:localVariablePotentialNullReference(LocalVariableBinding, ASTNode)
17188=ProblemReporter:illegalModifierForVariable(LocalDeclaration, boolean)
17189=ProblemReporter:nullableFieldDereference(FieldBinding, long)
17190=ProblemReporter:unusedTypeParameter(TypeParameter)
17191=ProblemReporter:localVariableNullReference(LocalVariableBinding, ASTNode)
17192=ProblemReporter:nonNullTypeVariableInUnannotatedBinary(LookupEnvironment, MethodBinding, Expression, int)
17193=ProblemReporter:inheritedMethodsHaveIncompatibleReturnTypes(SourceTypeBinding, MethodBinding[], int, boolean[])
17194=ProblemReporter:javadocInvalidType(ASTNode, TypeBinding, int)
17195=ProblemReporter:unhandledExceptionFromAutoClose(TypeBinding, ASTNode)
17196=ProblemReporter:illegalUsageOfQualifiedTypeReference(QualifiedTypeReference)
17197=ProblemReporter:diamondNotWithAnoymousClasses(TypeReference)
17198=ProblemReporter:illegalUsageOfTypeAnnotations(Annotation)
17199=ProblemReporter:parseErrorDeleteToken(int, int, int, char[], String)
17200=ProblemReporter:illegalModifierCombinationFinalAbstractForClass(SourceTypeBinding)
17201=ProblemReporter:javadocDuplicatedParamTag(char[], int, int, int)
17202=ProblemReporter:codeSnippetMissingClass(String, int, int)
17203=ProblemReporter:defaultModifierIllegallySpecified(int, int)
17204=ProblemReporter:javadocInvalidSeeUrlReference(int, int)
17205=ProblemReporter:undefinedLabel(BranchStatement)
17206=ProblemReporter:parseErrorNoSuggestion(int, int, int, char[], String)
17207=ProblemReporter:unsafeElementTypeConversion(Expression, TypeBinding, TypeBinding)
17208=ProblemReporter:cannotDefineDimensionsAndInitializer(ArrayAllocationExpression)
17209=ProblemReporter:cannotAssignToFinalField(FieldBinding, ASTNode)
17210=ProblemReporter:javadocVisibility(int, int)
17211=ProblemReporter:staticInheritedMethodConflicts(SourceTypeBinding, MethodBinding, MethodBinding[])
17212=ProblemReporter:illegalAbstractModifierCombinationForMethod(AbstractMethodDeclaration)
17213=ProblemReporter:varargsArgumentNeedCast(MethodBinding, TypeBinding, InvocationSite)
17214=ProblemReporter:parameterBoundAsString(TypeVariableBinding, boolean)
17215=ProblemReporter:localVariableFreeTypeVariableReference(LocalVariableBinding, ASTNode)
17216=ProblemReporter:tooManyFields(TypeDeclaration)
17217=ProblemReporter:incompatibleReturnType(ReferenceExpression, MethodBinding, TypeBinding)
17218=ProblemReporter:illegalAnnotationForBaseType(Annotation, TypeBinding)
17219=ProblemReporter:methodWithConstructorName(MethodDeclaration)
17220=ProblemReporter:illegalThis(Argument)
17221=ProblemReporter:missingSemiColon(Expression)
17222=ProblemReporter:descriptorHasInvisibleType(FunctionalExpression, ReferenceBinding)
17223=ProblemReporter:disallowedTargetForContainerAnnotation(Annotation, TypeBinding)
17224=ProblemReporter:computeSeverity(int)
17225=ProblemReporter:javadocDeprecatedMethod(MethodBinding, ASTNode, int)
17226=ProblemReporter:duplicateInitializationOfFinalLocal(LocalVariableBinding, ASTNode)
17227=ProblemReporter:cannotReferToNonEffectivelyFinalOuterLocal(LocalVariableBinding, ASTNode)
17228=ProblemReporter:illegalStaticModifierForMemberType(SourceTypeBinding)
17229=ProblemReporter:duplicateNestedType(TypeDeclaration)
17230=ProblemReporter:methodCanBePotentiallyDeclaredStatic(MethodDeclaration)
17231=ProblemReporter:cannotRedefineTypeArgumentNullity(TypeBinding, Binding, ASTNode)
17232=ProblemReporter:typesAsString(MethodBinding, TypeBinding[], boolean)
17233=ProblemReporter:javadocMissingTagDescriptionAfterReference(int, int, int)
17234=ProblemReporter:unusedPrivateType(TypeDeclaration)
17235=ProblemReporter:nullityMismatch(Expression, TypeBinding, TypeBinding, int, char[][])
17236=ProblemReporter:inheritedMethodsHaveIncompatibleReturnTypes(ASTNode, MethodBinding[], int)
17237=ProblemReporter:cannotAssignToFinalLocal(LocalVariableBinding, ASTNode)
17238=ProblemReporter:invalidAnnotationMemberType(MethodDeclaration)
17239=ProblemReporter:illegalThisDeclaration(Argument)
17240=ProblemReporter:incorrectArityForParameterizedType(ASTNode, TypeBinding, TypeBinding[])
17241=ProblemReporter:invalidOperator(BinaryExpression, TypeBinding, TypeBinding)
17242=ProblemReporter:intersectionCastNotBelow18(TypeReference[])
17243=ProblemReporter:classExtendFinalClass(SourceTypeBinding, TypeReference, TypeBinding)
17244=ProblemReporter:typesAsString(MethodBinding, boolean, boolean)
17245=ProblemReporter:nonStaticContextForEnumMemberType(SourceTypeBinding)
17246=ProblemReporter:nullityMismatchTypeArgument(TypeBinding, TypeBinding, ASTNode)
17247=ProblemReporter:methodMustBeAccessedStatically(ReferenceExpression, MethodBinding)
17248=ProblemReporter:recursiveConstructorInvocation(ExplicitConstructorCall)
17249=ProblemReporter:cannotReferToNonFinalOuterLocal(LocalVariableBinding, ASTNode)
17250=ProblemReporter:duplicateModifierForMethod(ReferenceBinding, AbstractMethodDeclaration)
17251=ProblemReporter:illegalModifierForMemberEnum(SourceTypeBinding)
17252=ProblemReporter:visibilityConflict(MethodBinding, MethodBinding)
17253=ProblemReporter:illegalModifierForInterfaceMethod(AbstractMethodDeclaration, boolean)
17254=ProblemReporter:initializerMustCompleteNormally(FieldDeclaration)
17255=ProblemReporter:illegalArrayTypeInIntersectionCast(TypeReference)
17256=ProblemReporter:javadocDuplicatedReturnTag(int, int)
17257=ProblemReporter:conflictingInheritedNullAnnotations(ASTNode, boolean, MethodBinding, boolean, MethodBinding)
17258=ProblemReporter:illegalQualifiedParameterizedTypeAllocation(TypeReference, TypeBinding)
17259=ProblemReporter:comparingIdenticalExpressions(Expression)
17260=ProblemReporter:noMoreAvailableSpaceForLocal(LocalVariableBinding, ASTNode)
17261=ProblemReporter:excludeDueToAnnotation(Annotation[], int)
17262=ProblemReporter:contradictoryNullAnnotationsOnBounds(Annotation, long)
17263=ProblemReporter:misplacedTypeAnnotations(Annotation, Annotation)
17264=ProblemReporter:nullityMismatchIsNull(Expression, TypeBinding)
17265=ProblemReporter:noAdditionalBoundAfterTypeVariable(TypeReference)
17266=ProblemReporter:missingTypeInMethod(ASTNode, MethodBinding)
17267=ProblemReporter:nonStaticAccessToStaticField(ASTNode, FieldBinding)
17268=ProblemReporter:interfaceSuperInvocationNotBelow18(QualifiedSuperReference)
17269=ProblemReporter:methodHasMissingSwitchDefault()
17270=ProblemReporter:javadocMissing(int, int, int, int)
17271=ProblemReporter:cannotInferElidedTypes(AllocationExpression)
17272=ProblemReporter:parseErrorInsertBeforeToken(int, int, int, char[], String, String)
17273=ProblemReporter:constructedArrayIncompatible(ReferenceExpression, TypeBinding, TypeBinding)
17274=ProblemReporter:invalidUsageOfStaticImports(ImportReference)
17275=ProblemReporter:useAssertAsAnIdentifier(int, int)
17276=ProblemReporter:cannotThrowNull(ASTNode)
17277=ProblemReporter:invalidField(NameReference, FieldBinding)
17278=ProblemReporter:unusedDeclaredThrownException(ReferenceBinding, AbstractMethodDeclaration, ASTNode)
17279=ProblemReporter:dereferencingNullableExpression(long, LookupEnvironment)
17280=ProblemReporter:duplicateAnnotation(Annotation, long)
17281=ProblemReporter:disallowedThisParameter(Receiver)
17282=ProblemReporter:genericInferenceProblem(String, InvocationSite, int)
17283=ProblemReporter:autoboxing(Expression, TypeBinding, TypeBinding)
17284=ProblemReporter:parseErrorInvalidToken(int, int, int, char[], String, String)
17285=ProblemReporter:annotationTypeUsedAsSuperinterface(SourceTypeBinding, TypeReference, ReferenceBinding)
17286=ProblemReporter:enumSwitchCannotTargetField(Reference, FieldBinding)
17287=ProblemReporter:unreachableCatchBlock(ReferenceBinding, ASTNode)
17288=ProblemReporter:nullityMismatchPotentiallyNull(Expression, TypeBinding, char[][])
17289=ProblemReporter:invalidUsageOfVarargs(Argument)
17290=ProblemReporter:nullAnnotationUnsupportedLocation(Annotation)
17291=ProblemReporter:javadocErrorNoMethodFor(MessageSend, TypeBinding, TypeBinding[], int)
17292=ProblemReporter:invalidArrayConstructorReference(ReferenceExpression, TypeBinding, TypeBinding[])
17293=ProblemReporter:ProblemReporter(IErrorHandlingPolicy, CompilerOptions, IProblemFactory)
17294=ProblemReporter:arrayReferencePotentialNullReference(ArrayReference)
17295=ProblemReporter:annotationMembersCannotHaveTypeParameters(AnnotationMethodDeclaration)
17296=ProblemReporter:handleUntagged(int, String[], String[], int, int)
17297=ProblemReporter:containerAnnotationTypeMustHaveValue(ASTNode, ReferenceBinding)
17298=ProblemReporter:bytecodeExceeds64KLimit(LambdaExpression)
17299=ProblemReporter:safeVarargsOnNonFinalInstanceMethod(MethodBinding)
17300=ProblemReporter:wrongSequenceOfExceptionTypes(TypeReference, TypeBinding, TypeBinding)
17301=ProblemReporter:unusedWarningToken(Expression)
17302=ProblemReporter:uninitializedNonNullField(FieldBinding, ASTNode)
17303=ProblemReporter:invalidTypeForCollectionTarget14(Expression)
17304=ProblemReporter:javadocMissingParamTag(char[], int, int, int)
17305=ProblemReporter:dereferencingNullableExpression(Expression)
17306=ProblemReporter:illegalTypeForExplicitThis(Receiver, TypeBinding)
17307=ProblemReporter:javadocMissingHashCharacter(int, int, String)
17308=ProblemReporter:safeVarargsOnFixedArityMethod(MethodBinding)
17309=ProblemReporter:illegalRedefinitionToNonNullParameter(Argument, ReferenceBinding, char[][])
17310=ProblemReporter:javadocEmptyReturnTag(int, int, int)
17311=ProblemReporter:codeSnippetMissingMethod(String, String, String, int, int)
17312=ProblemReporter:enumConstantMustImplementAbstractMethod(AbstractMethodDeclaration, FieldDeclaration)
17313=ProblemReporter:annotationCircularity(TypeBinding, TypeBinding, TypeReference)
17314=ProblemReporter:illegalQualifierForExplicitThis2(Receiver)
17315=ProblemReporter:nonGenericTypeCannotBeParameterized(int, ASTNode, TypeBinding, TypeBinding[])
17316=ProblemReporter:nullDefaultAnnotationIsRedundant(ASTNode, Annotation[], Binding)
17317=ProblemReporter:javadocDuplicatedTag(char[], int, int)
17318=ProblemReporter:indirectAccessToStaticMethod(ASTNode, MethodBinding)
17319=ProblemReporter:unsafeTypeConversion(Expression, TypeBinding, TypeBinding)
17320=ProblemReporter:importProblem(ImportReference, Binding)
17321=ProblemReporter:javadocMissing(int, int, int)
17322=ProblemReporter:unsafeRawFieldAssignment(FieldBinding, TypeBinding, ASTNode)
17323=ProblemReporter:typesAsString(TypeBinding[], boolean, boolean)
17324=ProblemReporter:javadocInvalidThrowsClassName(TypeReference, int)
17325=ProblemReporter:nullUnboxing(ASTNode, TypeBinding)
17326=ProblemReporter:missingDeprecatedAnnotationForField(FieldDeclaration)
17327=ProblemReporter:redefineLocal(LocalDeclaration)
17328=ProblemReporter:missingValueForAnnotationMember(Annotation, char[])
17329=ProblemReporter:tooManyMethods(TypeDeclaration)
17330=ProblemReporter:duplicateBoundInIntersectionCast(TypeReference)
17331=ProblemReporter:methodNeedBody(AbstractMethodDeclaration)
17332=ProblemReporter:diamondNotWithExplicitTypeArguments(TypeReference[])
17333=ProblemReporter:illegalInstanceOfGenericType(TypeBinding, ASTNode)
17334=ProblemReporter:localVariableNullComparedToNonNull(LocalVariableBinding, ASTNode)
17335=ProblemReporter:parameterAssignment(LocalVariableBinding, ASTNode)
17336=ProblemReporter:referenceExpressionsNotBelow18(ReferenceExpression)
17337=ProblemReporter:invalidType(ASTNode, TypeBinding)
17338=ProblemReporter:noMoreAvailableSpaceForConstant(TypeDeclaration)
17339=ProblemReporter:duplicateMethodInType(AbstractMethodDeclaration, boolean, int)
17340=ProblemReporter:notAFunctionalInterface(TypeDeclaration)
17341=ProblemReporter:defaultMethodOverridesObjectMethod(MethodBinding)
17342=ProblemReporter:superfluousSemicolon(int, int)
17343=ProblemReporter:finallyMustCompleteNormally(Block)
17344=ProblemReporter:missingOverrideAnnotation(AbstractMethodDeclaration)
17345=ProblemReporter:interfaceCannotHaveInitializers(char[], FieldDeclaration)
17346=ProblemReporter:containerAnnotationTypeHasWrongValueType(ASTNode, ReferenceBinding, ReferenceBinding, TypeBinding)
17347=ProblemReporter:argumentTypeCannotBeVoid(ASTNode, Argument)
17348=ProblemReporter:nullityMismatchIsFreeTypeVariable(TypeBinding, int, int)
17349=ProblemReporter:containerAnnotationTypeHasNonDefaultMembers(ASTNode, ReferenceBinding, char[])
17350=ProblemReporter:invalidUsageOfTypeArguments(TypeReference, TypeReference)
17351=ProblemReporter:unclosedCloseable(FakedTrackingVariable, ASTNode)
17352=ProblemReporter:variableTypeCannotBeVoidArray(AbstractVariableDeclaration)
17353=ProblemReporter:illegalUsageOfWildcard(TypeReference)
17354=ProblemReporter:methodReturnTypeFreeTypeVariableReference(MethodBinding, ASTNode)
17355=ProblemReporter:duplicateInitializationOfBlankFinalField(FieldBinding, Reference)
17356=ProblemReporter:illegalTypeAnnotationsInStaticMemberAccess(Annotation, Annotation)
17357=ProblemReporter:needToEmulateFieldAccess(FieldBinding, ASTNode, boolean)
17358=ProblemReporter:publicClassMustMatchFileName(CompilationUnitDeclaration, TypeDeclaration)
17359=ProblemReporter:enumStaticFieldUsedDuringInitialization(FieldBinding, ASTNode)
17360=ProblemReporter:unsafeReturnTypeOverride(MethodBinding, MethodBinding, SourceTypeBinding)
17361=ProblemReporter:nullAnnotationIsRedundant(FieldDeclaration)
17362=ProblemReporter:isKeyword(int)
17363=ProblemReporter:isLiteral(int)
17364=ProblemReporter:methodNameClashHidden(MethodBinding, MethodBinding)
17365=ProblemReporter:replaceIfSynthetic(String)
17366=ProblemReporter:expressionShouldBeAVariable(Expression)
17367=ProblemReporter:missingNonNullByDefaultAnnotation(TypeDeclaration)
17368=ProblemReporter:illegalGenericArray(TypeBinding, ASTNode)
17369=ProblemReporter:unhandledException(TypeBinding, ASTNode)
17370=ProblemReporter:illFormedParameterizationOfFunctionalInterface(FunctionalExpression)
17371=ProblemReporter:illegalModifierForAnnotationField(FieldDeclaration)
17372=ProblemReporter:potentialNullUnboxing(ASTNode, TypeBinding)
17373=ProblemReporter:notCompatibleTypesError(EqualExpression, TypeBinding, TypeBinding)
17374=ProblemReporter:unmatchedBracket(int, ReferenceContext, CompilationResult)
17375=ProblemReporter:illegalModifierCombinationForInterfaceMethod(AbstractMethodDeclaration)
17376=ProblemReporter:invalidUsageOfTypeAnnotations(Annotation)
17377=ProblemReporter:cannotExtendEnum(SourceTypeBinding, TypeReference, TypeBinding)
17378=ProblemReporter:illegalReturnRedefinition(ASTNode, MethodBinding, boolean, TypeBinding)
17379=ProblemReporter:illegalModifierForAnnotationMemberType(SourceTypeBinding)
17380=ProblemReporter:illegalModifierForAnnotationMember(AbstractMethodDeclaration)
17381=ProblemReporter:illegalUseOfUnderscoreAsAnIdentifier(int, int, boolean)
17382=ProblemReporter:unqualifiedFieldAccess(NameReference, FieldBinding)
17383=ProblemReporter:javadocVisibilityArgument(int, int)
17384=ProblemReporter:duplicateEnumSpecialMethod(SourceTypeBinding, AbstractMethodDeclaration)
17385=ProblemReporter:invalidMethod(MessageSend, MethodBinding, Scope)
17386=ProblemReporter:illegalVisibilityModifierCombinationForMethod(ReferenceBinding, AbstractMethodDeclaration)
17387=ProblemReporter:nodeSourceStart(ASTNode)
17388=ProblemReporter:expressionNullReference(ASTNode)
17389=ProblemReporter:repeatedAnnotationWithContainer(Annotation, Annotation)
17390=ProblemReporter:retrieveClosingAngleBracketPosition(int)
17391=ProblemReporter:annotationValueMustBeArrayInitializer(TypeBinding, char[], Expression)
17392=ProblemReporter:fieldFreeTypeVariableReference(FieldBinding, long)
17393=ProblemReporter:bytecodeExceeds64KLimit(MethodBinding, int, int)
17394=ProblemReporter:localVariableHiding(LocalDeclaration, Binding, boolean)
17395=ProblemReporter:disallowedTargetForAnnotation(Annotation)
17396=ProblemReporter:invalidUsageOfForeachStatements(LocalDeclaration, Expression)
17397=ProblemReporter:typeCastError(CastExpression, TypeBinding, TypeBinding)
17398=ProblemReporter:javadocInvalidMethod(MessageSend, MethodBinding, int)
17399=ProblemReporter:illegalClassLiteralForTypeVariable(TypeVariableBinding, ASTNode)
17400=ProblemReporter:illegalModifierCombinationFinalVolatileForField(ReferenceBinding, FieldDeclaration)
17401=ProblemReporter:javadocInvalidValueReference(int, int, int)
17402=ProblemReporter:parseErrorInsertAfterToken(int, int, int, char[], String, String)
17403=ProblemReporter:task(String, String, String, int, int)
17404=ProblemReporter:annotatedTypeName(TypeBinding, char[][])
17405=ProblemReporter:innerTypesCannotDeclareStaticInitializers(ReferenceBinding, Initializer)
17406=ProblemReporter:javadocInvalidTag(int, int)
17407=ProblemReporter:methodNeedingNoBody(MethodDeclaration)
17408=ProblemReporter:boundCannotBeArray(ASTNode, TypeBinding)
17409=ProblemReporter:illegalModifierForClass(SourceTypeBinding)
17410=ProblemReporter:javadocInvalidField(FieldReference, Binding, TypeBinding, int)
17411=ProblemReporter:redundantSuperInterface(SourceTypeBinding, TypeReference, ReferenceBinding, ReferenceBinding)
17412=ProblemReporter:containerAnnotationTypeHasShorterRetention(ASTNode, ReferenceBinding, String, ReferenceBinding, String)
17413=ProblemReporter:annotationValueMustBeAnnotation(TypeBinding, char[], Expression, TypeBinding)
17414=ProblemReporter:errorNoSuperInInterface(ASTNode)
17415=ProblemReporter:incorrectLocationForNonEmptyDimension(ArrayAllocationExpression, int)
17416=ProblemReporter:invalidOperator(UnaryExpression, TypeBinding)
17417=ProblemReporter:missingOverrideAnnotationForInterfaceMethodImplementation(AbstractMethodDeclaration)
17418=ProblemReporter:parameterLackingNonnullAnnotation(Argument, ReferenceBinding, char[][])
17419=ProblemReporter:hierarchyCircularity(TypeVariableBinding, ReferenceBinding, TypeReference)
17420=A:getString(String)
17421=CompletionNodeDetector:visit(ArrayTypeReference, BlockScope)
17422=CompletionNodeDetector:visit(AND_AND_Expression, BlockScope)
17423=CompletionNodeDetector:endVisit(QualifiedTypeReference, BlockScope)
17424=CompletionNodeDetector:endVisit(ArrayTypeReference, BlockScope)
17425=CompletionNodeDetector:endVisit(AllocationExpression, BlockScope)
17426=CompletionNodeDetector:endVisit(ParameterizedQualifiedTypeReference, BlockScope)
17427=CompletionNodeDetector:visit(ArrayAllocationExpression, BlockScope)
17428=CompletionNodeDetector:endVisit(SingleNameReference, BlockScope)
17429=CompletionNodeDetector:endVisit(ExplicitConstructorCall, BlockScope)
17430=CompletionNodeDetector:endVisit(Assignment, BlockScope)
17431=CompletionNodeDetector:endVisit(CastExpression, BlockScope)
17432=CompletionNodeDetector:endVisit(MemberValuePair, BlockScope)
17433=CompletionNodeDetector:visit(ParameterizedSingleTypeReference, BlockScope)
17434=CompletionNodeDetector:visit(ReferenceExpression, BlockScope)
17435=CompletionNodeDetector:endVisit(SingleTypeReference, BlockScope)
17436=CompletionNodeDetector:visit(ArrayQualifiedTypeReference, ClassScope)
17437=CompletionNodeDetector:endVisit(QualifiedNameReference, BlockScope)
17438=CompletionNodeDetector:visit(ParameterizedQualifiedTypeReference, ClassScope)
17439=CompletionNodeDetector:visit(SingleTypeReference, ClassScope)
17440=CompletionNodeDetector:visit(ThisReference, BlockScope)
17441=CompletionNodeDetector:visit(QualifiedThisReference, BlockScope)
17442=CompletionNodeDetector:endVisit(ArrayReference, BlockScope)
17443=CompletionNodeDetector:visit(StringLiteral, BlockScope)
17444=CompletionNodeDetector:endVisit(ConditionalExpression, BlockScope)
17445=CompletionNodeDetector:visit(EqualExpression, BlockScope)
17446=CompletionNodeDetector:endVisit(PostfixExpression, BlockScope)
17447=CompletionNodeDetector:getCompletionNodeParent()
17448=CompletionNodeDetector:endVisit(PrefixExpression, BlockScope)
17449=CompletionNodeDetector:visit(ConditionalExpression, BlockScope)
17450=CompletionNodeDetector:endVisit(QualifiedThisReference, BlockScope)
17451=CompletionNodeDetector:endVisit(CompoundAssignment, BlockScope)
17452=CompletionNodeDetector:endVisit(MessageSend, BlockScope)
17453=CompletionNodeDetector:visit(Assignment, BlockScope)
17454=CompletionNodeDetector:endVisit(ArrayTypeReference, ClassScope)
17455=CompletionNodeDetector:endVisit(InstanceOfExpression, BlockScope)
17456=CompletionNodeDetector:visit(ArrayQualifiedTypeReference, BlockScope)
17457=CompletionNodeDetector:visit(ParameterizedSingleTypeReference, ClassScope)
17458=CompletionNodeDetector:CompletionNodeDetector(ASTNode, ASTNode)
17459=CompletionNodeDetector:visit(FieldReference, BlockScope)
17460=CompletionNodeDetector:endVisit(AND_AND_Expression, BlockScope)
17461=CompletionNodeDetector:visit(OR_OR_Expression, BlockScope)
17462=CompletionNodeDetector:visit(SuperReference, BlockScope)
17463=CompletionNodeDetector:visit(QualifiedNameReference, BlockScope)
17464=CompletionNodeDetector:visit(UnaryExpression, BlockScope)
17465=CompletionNodeDetector:endVisit(BinaryExpression, BlockScope)
17466=CompletionNodeDetector:endVisit(ParameterizedQualifiedTypeReference, ClassScope)
17467=CompletionNodeDetector:endVisit(SingleTypeReference, ClassScope)
17468=CompletionNodeDetector:visit(PrefixExpression, BlockScope)
17469=CompletionNodeDetector:visit(QualifiedAllocationExpression, BlockScope)
17470=CompletionNodeDetector:visit(PostfixExpression, BlockScope)
17471=CompletionNodeDetector:visit(ExplicitConstructorCall, BlockScope)
17472=CompletionNodeDetector:endVisit(EqualExpression, BlockScope)
17473=CompletionNodeDetector:visit(SingleNameReference, BlockScope)
17474=CompletionNodeDetector:visit(CastExpression, BlockScope)
17475=CompletionNodeDetector:visit(ArrayInitializer, BlockScope)
17476=CompletionNodeDetector:endVisit(OR_OR_Expression, BlockScope)
17477=CompletionNodeDetector:containsCompletionNode()
17478=CompletionNodeDetector:endVisit(ArrayQualifiedTypeReference, ClassScope)
17479=CompletionNodeDetector:visit(ASTNode)
17480=CompletionNodeDetector:visit(ArrayReference, BlockScope)
17481=CompletionNodeDetector:visit(InstanceOfExpression, BlockScope)
17482=CompletionNodeDetector:visit(QualifiedTypeReference, BlockScope)
17483=CompletionNodeDetector:visit(ArrayTypeReference, ClassScope)
17484=CompletionNodeDetector:visit(MemberValuePair, BlockScope)
17485=CompletionNodeDetector:visit(MemberValuePair, CompilationUnitScope)
17486=CompletionNodeDetector:endVisit(ASTNode)
17487=CompletionNodeDetector:endVisit(QualifiedTypeReference, ClassScope)
17488=CompletionNodeDetector:endVisit(ParameterizedSingleTypeReference, BlockScope)
17489=CompletionNodeDetector:visit(ParameterizedQualifiedTypeReference, BlockScope)
17490=CompletionNodeDetector:endVisit(ArrayQualifiedTypeReference, BlockScope)
17491=CompletionNodeDetector:endVisit(LambdaExpression, BlockScope)
17492=CompletionNodeDetector:visit(CompoundAssignment, BlockScope)
17493=CompletionNodeDetector:visit(QualifiedTypeReference, ClassScope)
17494=CompletionNodeDetector:endVisit(UnaryExpression, BlockScope)
17495=CompletionNodeDetector:visit(MessageSend, BlockScope)
17496=CompletionNodeDetector:endVisit(ThisReference, BlockScope)
17497=CompletionNodeDetector:endVisit(MemberValuePair, CompilationUnitScope)
17498=CompletionNodeDetector:endVisit(FieldReference, BlockScope)
17499=CompletionNodeDetector:endVisit(QualifiedAllocationExpression, BlockScope)
17500=CompletionNodeDetector:visit(SingleTypeReference, BlockScope)
17501=CompletionNodeDetector:endVisit(ReferenceExpression, BlockScope)
17502=CompletionNodeDetector:endVisit(SuperReference, BlockScope)
17503=CompletionNodeDetector:endVisit(ArrayInitializer, BlockScope)
17504=CompletionNodeDetector:endVisit(ArrayAllocationExpression, BlockScope)
17505=CompletionNodeDetector:visit(BinaryExpression, BlockScope)
17506=CompletionNodeDetector:visit(AllocationExpression, BlockScope)
17507=CompletionNodeDetector:endVisit(QualifiedSuperReference, BlockScope)
17508=CompletionNodeDetector:visit(QualifiedSuperReference, BlockScope)
17509=CompletionNodeDetector:endVisit(ParameterizedSingleTypeReference, ClassScope)
17510=AssistSourceMethod:getTypeParameter(String)
17511=AssistSourceMethod:getElementInfo(IProgressMonitor)
17512=AssistSourceMethod:toStringInfo(int, StringBuffer, Object, boolean)
17513=AssistSourceMethod:getKey()
17514=AssistSourceMethod:getType(String, int)
17515=AssistSourceMethod:isResolved()
17516=AssistSourceMethod:getAnnotation(String)
17517=AssistSourceMethod:AssistSourceMethod(JavaElement, String, String[], Map, Map)
17518=X06:test()
17519=TestFormatCode:InnerClass:innerMethod()
17520=TestFormatCode:outerMethod()
17521=ClasspathDirectory:ClasspathDirectory(File, String, int, AccessRuleSet, String, Map)
17522=ClasspathDirectory:hasAnnotationFileFor(String)
17523=ClasspathDirectory:findSourceSecondaryType(String, String, String)
17524=ClasspathDirectory:fetchLinkedJars(FileSystem.ClasspathSectionProblemReporter)
17525=ClasspathDirectory:findClass(char[], String, String, boolean)
17526=ClasspathDirectory:toString()
17527=ClasspathDirectory:findClass(char[], String, String)
17528=ClasspathDirectory:reset()
17529=ClasspathDirectory:directoryList(String)
17530=ClasspathDirectory:initialize()
17531=ClasspathDirectory:findSecondaryInClass(char[], String, String)
17532=ClasspathDirectory:getPackageTypes(String)
17533=ClasspathDirectory:getMode()
17534=ClasspathDirectory:doesFileExist(String, String)
17535=ClasspathDirectory:normalizedPath()
17536=ClasspathDirectory:findTypeNames(String)
17537=ClasspathDirectory:getPath()
17538=ClasspathDirectory:isPackage(String)
17539=A:getColumnDataCell(int)
17540=JavadocContents:getJavadoc8Anchor(char[])
17541=JavadocContents:getFieldDoc(IField)
17542=JavadocContents:computeMethodRange(IMethod)
17543=JavadocContents:computeTypeRange()
17544=JavadocContents:JavadocContents(String)
17545=JavadocContents:computeMethodAnchorPrefixEnd(BinaryMethod)
17546=JavadocContents:computeChildrenSections()
17547=JavadocContents:computeFieldRange(IField)
17548=JavadocContents:getAnchorIndex(int)
17549=JavadocContents:getMethodDoc(IMethod)
17550=JavadocContents:computeChildRange(int, char[], int)
17551=JavadocContents:getPackageDoc()
17552=JavadocContents:computeChildRange(char[], int)
17553=JavadocContents:JavadocContents(BinaryType, String)
17554=JavadocContents:getTypeDoc()
17555=PackageReferencePattern:getIndexKey()
17556=PackageReferencePattern:hasNextQuery()
17557=PackageReferencePattern:print(StringBuffer)
17558=PackageReferencePattern:resetQuery()
17559=PackageReferencePattern:getIndexCategories()
17560=PackageReferencePattern:decodeIndexKey(char[])
17561=PackageReferencePattern:matchesDecodedKey(SearchPattern)
17562=PackageReferencePattern:PackageReferencePattern(int)
17563=PackageReferencePattern:getBlankPattern()
17564=PackageReferencePattern:PackageReferencePattern(char[], int)
17565=BinaryLiteralTest:suite()
17566=BinaryLiteralTest:testClass()
17567=BinaryLiteralTest:test006()
17568=BinaryLiteralTest:BinaryLiteralTest(String)
17569=BinaryLiteralTest:test005()
17570=BinaryLiteralTest:test004()
17571=BinaryLiteralTest:test003()
17572=BinaryLiteralTest:test002()
17573=BinaryLiteralTest:test001()
17574=ExtJarFactoryContainer:getId()
17575=ExtJarFactoryContainer:ExtJarFactoryContainer(File)
17576=ExtJarFactoryContainer:getJarFile()
17577=ExtJarFactoryContainer:getType()
17578=BugsProc:process(Set<? extends TypeElement>, RoundEnvironment)
17579=BugsProc:getUnprocessedElements()
17580=BugsProc:getNumRounds()
17581=CreateMethodOperation:generateElementAST(ASTRewrite, ICompilationUnit)
17582=CreateMethodOperation:CreateMethodOperation(IType, String, boolean)
17583=CreateMethodOperation:generateResultHandle()
17584=CreateMethodOperation:convertASTMethodTypesToSignatures()
17585=CreateMethodOperation:rename(ASTNode, SimpleName)
17586=CreateMethodOperation:verifyNameCollision()
17587=CreateMethodOperation:getASTNodeName()
17588=CreateMethodOperation:getMainTaskName()
17589=DefaultFailureDetailView:StackEntryRenderer:getListCellRendererComponent(JList, Object, int, boolean, boolean)
17590=DefaultFailureDetailView:getModel()
17591=DefaultFailureDetailView:StackTraceListModel:scan(String)
17592=DefaultFailureDetailView:clear()
17593=DefaultFailureDetailView:StackTraceListModel:getElementAt(int)
17594=DefaultFailureDetailView:getComponent()
17595=DefaultFailureDetailView:StackTraceListModel:clear()
17596=DefaultFailureDetailView:StackTraceListModel:setTrace(String)
17597=DefaultFailureDetailView:StackTraceListModel:getSize()
17598=DefaultFailureDetailView:showFailure(TestFailure)
17599=Test:bar()
17600=Test:foo(int)
17601=FormaterBug:main(String[])
17602=WildcardTypeImpl:isSubTypeCompatible(EclipseMirrorType)
17603=WildcardTypeImpl:getLowerBounds()
17604=WildcardTypeImpl:accept(TypeVisitor)
17605=WildcardTypeImpl:getUpperBounds()
17606=WildcardTypeImpl:getTypeBinding()
17607=WildcardTypeImpl:WildcardTypeImpl(ITypeBinding, BaseProcessorEnv)
17608=WildcardTypeImpl:getEnvironment()
17609=WildcardTypeImpl:isAssignmentCompatible(EclipseMirrorType)
17610=WildcardTypeImpl:toString()
17611=WildcardTypeImpl:hashCode()
17612=WildcardTypeImpl:kind()
17613=WildcardTypeImpl:equals(Object)
17614=Statement:Statement(AST)
17615=Statement:setLeadingComment(String)
17616=Statement:memSize()
17617=Statement:copyLeadingComment(Statement)
17618=Statement:getLeadingComment()
17619=SomeClass:foo()
17620=A:foo()
17621=AptCompilationParticipant:aboutToBuild(IJavaProject)
17622=AptCompilationParticipant:buildComplete()
17623=AptCompilationParticipant:getJava6GeneratedFiles()
17624=AptCompilationParticipant:cleanStarting(IJavaProject)
17625=AptCompilationParticipant:isAnnotationProcessor()
17626=AptCompilationParticipant:reconcile(ReconcileContext)
17627=AptCompilationParticipant:isActive(IJavaProject)
17628=AptCompilationParticipant:getInstance()
17629=AptCompilationParticipant:addJava6GeneratedFile(IFile)
17630=AptCompilationParticipant:processAnnotations(BuildContext[])
17631=AptCompilationParticipant:buildStarting(BuildContext[], boolean)
17632=AptCompilationParticipant:AptCompilationParticipant()
17633=AptCompilationParticipant:buildFinished(IJavaProject)
17634=Test:m(int, int)
17635=X03:test()
17636=EnumConstantDeclaration:resolveVariable()
17637=EnumConstantDeclaration:treeSize()
17638=EnumConstantDeclaration:clone0(AST)
17639=EnumConstantDeclaration:propertyDescriptors(int)
17640=EnumConstantDeclaration:resolveConstructorBinding()
17641=EnumConstantDeclaration:subtreeMatch0(ASTMatcher, Object)
17642=EnumConstantDeclaration:getAnonymousClassDeclaration()
17643=EnumConstantDeclaration:getNodeType0()
17644=EnumConstantDeclaration:internalGetChildListProperty(ChildListPropertyDescriptor)
17645=EnumConstantDeclaration:internalJavadocProperty()
17646=EnumConstantDeclaration:accept0(ASTVisitor)
17647=EnumConstantDeclaration:setAnonymousClassDeclaration(AnonymousClassDeclaration)
17648=EnumConstantDeclaration:EnumConstantDeclaration(AST)
17649=EnumConstantDeclaration:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
17650=EnumConstantDeclaration:internalModifiers2Property()
17651=EnumConstantDeclaration:internalModifiersProperty()
17652=EnumConstantDeclaration:setName(SimpleName)
17653=EnumConstantDeclaration:internalStructuralPropertiesForType(int)
17654=EnumConstantDeclaration:memSize()
17655=EnumConstantDeclaration:arguments()
17656=EnumConstantDeclaration:getName()
17657=X05:bar()
17658=Test:foo(int)
17659=FormatterJSR308Tests:runTest(String, String)
17660=FormatterJSR308Tests:testBug403881()
17661=FormatterJSR308Tests:testLambda()
17662=FormatterJSR308Tests:test030()
17663=FormatterJSR308Tests:test020()
17664=FormatterJSR308Tests:runTest(CodeFormatter, String, String, int, int, boolean, int, int)
17665=FormatterJSR308Tests:test031()
17666=FormatterJSR308Tests:test021()
17667=FormatterJSR308Tests:test032()
17668=FormatterJSR308Tests:runTest(CodeFormatter, String, String, int, int, boolean, int, int, String)
17669=FormatterJSR308Tests:test022()
17670=FormatterJSR308Tests:test010()
17671=FormatterJSR308Tests:test033()
17672=FormatterJSR308Tests:suite()
17673=FormatterJSR308Tests:test023()
17674=FormatterJSR308Tests:test000()
17675=FormatterJSR308Tests:test034()
17676=FormatterJSR308Tests:test011()
17677=FormatterJSR308Tests:test024()
17678=FormatterJSR308Tests:test001()
17679=FormatterJSR308Tests:test035()
17680=FormatterJSR308Tests:test012()
17681=FormatterJSR308Tests:FormatterJSR308Tests(String)
17682=FormatterJSR308Tests:test002()
17683=FormatterJSR308Tests:test025()
17684=FormatterJSR308Tests:setUp()
17685=FormatterJSR308Tests:tearDownSuite()
17686=FormatterJSR308Tests:test013()
17687=FormatterJSR308Tests:test036()
17688=FormatterJSR308Tests:assertLineEquals(String, String, String, boolean)
17689=FormatterJSR308Tests:test003()
17690=FormatterJSR308Tests:test026()
17691=FormatterJSR308Tests:getOut(String)
17692=FormatterJSR308Tests:setPageWidth80()
17693=FormatterJSR308Tests:test014()
17694=FormatterJSR308Tests:test037()
17695=FormatterJSR308Tests:test027()
17696=FormatterJSR308Tests:test004()
17697=FormatterJSR308Tests:test038()
17698=FormatterJSR308Tests:test015()
17699=FormatterJSR308Tests:test005()
17700=FormatterJSR308Tests:setUpSuite()
17701=FormatterJSR308Tests:test028()
17702=FormatterJSR308Tests:test016()
17703=FormatterJSR308Tests:test039()
17704=FormatterJSR308Tests:runTest(CodeFormatter, String, String, int, int)
17705=FormatterJSR308Tests:testReferenceExpression()
17706=FormatterJSR308Tests:test006()
17707=FormatterJSR308Tests:test029()
17708=FormatterJSR308Tests:test017()
17709=FormatterJSR308Tests:getIn(String)
17710=FormatterJSR308Tests:test007()
17711=FormatterJSR308Tests:test018()
17712=FormatterJSR308Tests:test008()
17713=FormatterJSR308Tests:runFormatter(CodeFormatter, String, int, int, int, int, String, boolean)
17714=FormatterJSR308Tests:test019()
17715=FormatterJSR308Tests:test009()
17716=A:bar()
17717=A:foo(String, Object)
17718=SuperMethodReference:internalTypeArgumentsProperty()
17719=SuperMethodReference:setQualifier(Name)
17720=SuperMethodReference:internalGetChildListProperty(ChildListPropertyDescriptor)
17721=SuperMethodReference:treeSize()
17722=SuperMethodReference:getName()
17723=SuperMethodReference:memSize()
17724=SuperMethodReference:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
17725=SuperMethodReference:clone0(AST)
17726=SuperMethodReference:setName(SimpleName)
17727=SuperMethodReference:accept0(ASTVisitor)
17728=SuperMethodReference:propertyDescriptors(int)
17729=SuperMethodReference:subtreeMatch0(ASTMatcher, Object)
17730=SuperMethodReference:getNodeType0()
17731=SuperMethodReference:SuperMethodReference(AST)
17732=SuperMethodReference:getQualifier()
17733=SuperMethodReference:typeArguments()
17734=SuperMethodReference:internalStructuralPropertiesForType(int)
17735=JavadocValidRef:valid()
17736=FormatterProblem:main(String)
17737=FormatterProblem:buildGUI()
17738=ASTVisitor:visit(ThisReference, BlockScope)
17739=ASTVisitor:visit(SingleTypeReference, BlockScope)
17740=ASTVisitor:visit(StringLiteralConcatenation, BlockScope)
17741=ASTVisitor:visit(ForeachStatement, BlockScope)
17742=ASTVisitor:endVisit(ParameterizedQualifiedTypeReference, BlockScope)
17743=ASTVisitor:endVisit(ParameterizedSingleTypeReference, ClassScope)
17744=ASTVisitor:visit(ReturnStatement, BlockScope)
17745=ASTVisitor:visit(FalseLiteral, BlockScope)
17746=ASTVisitor:endVisit(StringLiteral, BlockScope)
17747=ASTVisitor:visit(ParameterizedQualifiedTypeReference, ClassScope)
17748=ASTVisitor:visit(AnnotationTypeDeclaration, CompilationUnitScope)
17749=ASTVisitor:visit(NormalAnnotation, BlockScope)
17750=ASTVisitor:endVisit(IntLiteral, BlockScope)
17751=ASTVisitor:endVisit(ArrayTypeReference, BlockScope)
17752=ASTVisitor:visit(NormalAnnotation, CompilationUnitScope)
17753=ASTVisitor:endVisit(QualifiedTypeReference, ClassScope)
17754=ASTVisitor:endVisit(MemberValuePair, ClassScope)
17755=ASTVisitor:visit(CastExpression, BlockScope)
17756=ASTVisitor:endVisit(CastExpression, BlockScope)
17757=ASTVisitor:endVisit(SingleMemberAnnotation, CompilationUnitScope)
17758=ASTVisitor:visit(CompilationUnitDeclaration, CompilationUnitScope)
17759=ASTVisitor:endVisit(MessageSend, BlockScope)
17760=ASTVisitor:visit(SwitchStatement, BlockScope)
17761=ASTVisitor:visit(EnumDeclaration, ClassScope)
17762=ASTVisitor:endVisit(ContinueStatement, BlockScope)
17763=ASTVisitor:endVisit(TypeParameter, BlockScope)
17764=ASTVisitor:endVisit(Wildcard, ClassScope)
17765=ASTVisitor:visit(LongLiteral, BlockScope)
17766=ASTVisitor:endVisit(JavadocArgumentExpression, BlockScope)
17767=ASTVisitor:visit(TypeDeclaration, CompilationUnitScope)
17768=ASTVisitor:visit(CompoundAssignment, BlockScope)
17769=ASTVisitor:endVisit(Clinit, ClassScope)
17770=ASTVisitor:visit(TypeParameter, BlockScope)
17771=ASTVisitor:visit(TryStatement, BlockScope)
17772=ASTVisitor:visit(EnumDeclaration, CompilationUnitScope)
17773=ASTVisitor:visit(FieldDeclaration, MethodScope)
17774=ASTVisitor:endVisit(InstanceOfExpression, BlockScope)
17775=ASTVisitor:endVisit(ForeachStatement, BlockScope)
17776=ASTVisitor:endVisit(MarkerAnnotation, CompilationUnitScope)
17777=ASTVisitor:endVisit(ArrayAllocationExpression, BlockScope)
17778=ASTVisitor:endVisit(ConstructorDeclaration, ClassScope)
17779=ASTVisitor:endVisit(OR_OR_Expression, BlockScope)
17780=ASTVisitor:visit(FloatLiteral, BlockScope)
17781=ASTVisitor:visit(SingleNameReference, BlockScope)
17782=ASTVisitor:endVisit(EnumDeclaration, ClassScope)
17783=ASTVisitor:visit(UnaryExpression, BlockScope)
17784=ASTVisitor:endVisit(AND_AND_Expression, BlockScope)
17785=ASTVisitor:visit(CaseStatement, BlockScope)
17786=ASTVisitor:visit(IntLiteral, BlockScope)
17787=ASTVisitor:visit(MemberValuePair, ClassScope)
17788=ASTVisitor:endVisit(BinaryExpression, BlockScope)
17789=ASTVisitor:endVisit(PostfixExpression, BlockScope)
17790=ASTVisitor:visit(InstanceOfExpression, BlockScope)
17791=ASTVisitor:visit(JavadocMessageSend, BlockScope)
17792=ASTVisitor:endVisit(MarkerAnnotation, ClassScope)
17793=ASTVisitor:visit(JavadocSingleNameReference, BlockScope)
17794=ASTVisitor:visit(QualifiedTypeReference, BlockScope)
17795=ASTVisitor:visit(ArrayQualifiedTypeReference, BlockScope)
17796=ASTVisitor:visit(ExplicitConstructorCall, BlockScope)
17797=ASTVisitor:endVisit(ConditionalExpression, BlockScope)
17798=ASTVisitor:visit(JavadocArraySingleTypeReference, BlockScope)
17799=ASTVisitor:endVisit(ArrayReference, BlockScope)
17800=ASTVisitor:endVisit(CaseStatement, BlockScope)
17801=ASTVisitor:visit(MarkerAnnotation, BlockScope)
17802=ASTVisitor:visit(LabeledStatement, BlockScope)
17803=ASTVisitor:endVisit(ForStatement, BlockScope)
17804=ASTVisitor:visit(ExtendedStringLiteral, BlockScope)
17805=ASTVisitor:endVisit(LongLiteral, BlockScope)
17806=ASTVisitor:endVisit(CompoundAssignment, BlockScope)
17807=ASTVisitor:endVisit(UnaryExpression, BlockScope)
17808=ASTVisitor:visit(SingleMemberAnnotation, BlockScope)
17809=ASTVisitor:visit(QualifiedThisReference, BlockScope)
17810=ASTVisitor:endVisit(EqualExpression, BlockScope)
17811=ASTVisitor:visit(Wildcard, BlockScope)
17812=ASTVisitor:visit(StringLiteral, BlockScope)
17813=ASTVisitor:visit(Wildcard, ClassScope)
17814=ASTVisitor:endVisit(FalseLiteral, BlockScope)
17815=ASTVisitor:visit(MarkerAnnotation, ClassScope)
17816=ASTVisitor:visit(OR_OR_Expression, BlockScope)
17817=ASTVisitor:endVisit(ExplicitConstructorCall, BlockScope)
17818=ASTVisitor:visit(Argument, BlockScope)
17819=ASTVisitor:endVisit(QualifiedThisReference, BlockScope)
17820=ASTVisitor:endVisit(SingleNameReference, BlockScope)
17821=ASTVisitor:visit(Block, BlockScope)
17822=ASTVisitor:visit(TrueLiteral, BlockScope)
17823=ASTVisitor:visit(EmptyStatement, BlockScope)
17824=ASTVisitor:visit(EqualExpression, BlockScope)
17825=ASTVisitor:endVisit(FloatLiteral, BlockScope)
17826=ASTVisitor:endVisit(LabeledStatement, BlockScope)
17827=ASTVisitor:visit(ArrayQualifiedTypeReference, ClassScope)
17828=ASTVisitor:endVisit(MarkerAnnotation, BlockScope)
17829=ASTVisitor:visit(ParameterizedSingleTypeReference, BlockScope)
17830=ASTVisitor:endVisit(LocalDeclaration, BlockScope)
17831=ASTVisitor:endVisit(NormalAnnotation, BlockScope)
17832=ASTVisitor:visit(EnumConstant, ClassScope)
17833=ASTVisitor:acceptProblem(IProblem)
17834=ASTVisitor:endVisit(SynchronizedStatement, BlockScope)
17835=ASTVisitor:endVisit(ClassLiteralAccess, BlockScope)
17836=ASTVisitor:endVisit(ArrayQualifiedTypeReference, BlockScope)
17837=ASTVisitor:endVisit(JavadocSingleNameReference, BlockScope)
17838=ASTVisitor:endVisit(MethodDeclaration, ClassScope)
17839=ASTVisitor:endVisit(Initializer, MethodScope)
17840=ASTVisitor:endVisit(Block, BlockScope)
17841=ASTVisitor:visit(NormalAnnotation, ClassScope)
17842=ASTVisitor:endVisit(JavadocMessageSend, BlockScope)
17843=ASTVisitor:visit(MemberValuePair, BlockScope)
17844=ASTVisitor:visit(QualifiedTypeReference, ClassScope)
17845=ASTVisitor:visit(AllocationExpression, BlockScope)
17846=ASTVisitor:endVisit(ReturnStatement, BlockScope)
17847=ASTVisitor:endVisit(EnumDeclaration, BlockScope)
17848=ASTVisitor:visit(SynchronizedStatement, BlockScope)
17849=ASTVisitor:endVisit(MemberValuePair, BlockScope)
17850=ASTVisitor:visit(ForStatement, BlockScope)
17851=ASTVisitor:visit(LocalDeclaration, BlockScope)
17852=ASTVisitor:visit(AnnotationTypeMemberDeclaration, ClassScope)
17853=ASTVisitor:endVisit(ImportReference, CompilationUnitScope)
17854=ASTVisitor:endVisit(QualifiedTypeReference, BlockScope)
17855=ASTVisitor:endVisit(ArrayTypeReference, ClassScope)
17856=ASTVisitor:visit(AnnotationTypeDeclaration, ClassScope)
17857=ASTVisitor:endVisit(TrueLiteral, BlockScope)
17858=ASTVisitor:endVisit(AnnotationTypeMemberDeclaration, ClassScope)
17859=ASTVisitor:endVisit(NormalAnnotation, ClassScope)
17860=ASTVisitor:endVisit(ParameterizedSingleTypeReference, BlockScope)
17861=ASTVisitor:endVisit(DoubleLiteral, BlockScope)
17862=ASTVisitor:visit(PrefixExpression, BlockScope)
17863=ASTVisitor:visit(JavadocArgumentExpression, BlockScope)
17864=ASTVisitor:visit(Assignment, BlockScope)
17865=ASTVisitor:visit(ParameterizedQualifiedTypeReference, BlockScope)
17866=ASTVisitor:endVisit(JavadocArrayQualifiedTypeReference, BlockScope)
17867=ASTVisitor:endVisit(ParameterizedQualifiedTypeReference, ClassScope)
17868=ASTVisitor:endVisit(QualifiedNameReference, BlockScope)
17869=ASTVisitor:visit(IfStatement, BlockScope)
17870=ASTVisitor:endVisit(DoStatement, BlockScope)
17871=ASTVisitor:visit(QualifiedSuperReference, BlockScope)
17872=ASTVisitor:visit(WhileStatement, BlockScope)
17873=ASTVisitor:visit(EnumDeclaration, BlockScope)
17874=ASTVisitor:endVisit(Wildcard, BlockScope)
17875=ASTVisitor:endVisit(TypeParameter, ClassScope)
17876=ASTVisitor:visit(JavadocQualifiedTypeReference, BlockScope)
17877=ASTVisitor:visit(PostfixExpression, BlockScope)
17878=ASTVisitor:endVisit(JavadocQualifiedTypeReference, BlockScope)
17879=ASTVisitor:endVisit(CompilationUnitDeclaration, CompilationUnitScope)
17880=ASTVisitor:endVisit(PrefixExpression, BlockScope)
17881=ASTVisitor:visit(SingleMemberAnnotation, CompilationUnitScope)
17882=ASTVisitor:endVisit(ArrayQualifiedTypeReference, ClassScope)
17883=ASTVisitor:endVisit(ExtendedStringLiteral, BlockScope)
17884=ASTVisitor:endVisit(Argument, BlockScope)
17885=ASTVisitor:visit(ArrayTypeReference, BlockScope)
17886=ASTVisitor:endVisit(FieldReference, BlockScope)
17887=ASTVisitor:endVisit(TypeDeclaration, BlockScope)
17888=ASTVisitor:visit(ParameterizedSingleTypeReference, ClassScope)
17889=ASTVisitor:visit(ClassLiteralAccess, BlockScope)
17890=ASTVisitor:visit(ConstructorDeclaration, ClassScope)
17891=ASTVisitor:endVisit(BreakStatement, BlockScope)
17892=ASTVisitor:visit(SingleTypeReference, ClassScope)
17893=ASTVisitor:visit(Initializer, MethodScope)
17894=ASTVisitor:visit(ArrayReference, BlockScope)
17895=ASTVisitor:visit(ContinueStatement, BlockScope)
17896=ASTVisitor:endVisit(SingleMemberAnnotation, BlockScope)
17897=ASTVisitor:visit(CharLiteral, BlockScope)
17898=ASTVisitor:endVisit(JavadocFieldReference, BlockScope)
17899=ASTVisitor:visit(MethodDeclaration, ClassScope)
17900=ASTVisitor:endVisit(SuperReference, BlockScope)
17901=ASTVisitor:endVisit(Assignment, BlockScope)
17902=ASTVisitor:endVisit(JavadocSingleTypeReference, BlockScope)
17903=ASTVisitor:visit(ThrowStatement, BlockScope)
17904=ASTVisitor:visit(TypeDeclaration, ClassScope)
17905=ASTVisitor:visit(JavadocReturnStatement, BlockScope)
17906=ASTVisitor:endVisit(IfStatement, BlockScope)
17907=ASTVisitor:visit(FieldReference, BlockScope)
17908=ASTVisitor:endVisit(JavadocArraySingleTypeReference, BlockScope)
17909=ASTVisitor:endVisit(TypeDeclaration, CompilationUnitScope)
17910=ASTVisitor:visit(DoubleLiteral, BlockScope)
17911=ASTVisitor:visit(Clinit, ClassScope)
17912=ASTVisitor:endVisit(EnumDeclaration, CompilationUnitScope)
17913=ASTVisitor:visit(ImportReference, CompilationUnitScope)
17914=ASTVisitor:endVisit(MemberValuePair, CompilationUnitScope)
17915=ASTVisitor:visit(MarkerAnnotation, CompilationUnitScope)
17916=ASTVisitor:endVisit(AnnotationTypeDeclaration, ClassScope)
17917=ASTVisitor:endVisit(AssertStatement, BlockScope)
17918=ASTVisitor:endVisit(EnumConstant, ClassScope)
17919=ASTVisitor:endVisit(WhileStatement, BlockScope)
17920=ASTVisitor:visit(ArrayInitializer, BlockScope)
17921=ASTVisitor:visit(SingleMemberAnnotation, ClassScope)
17922=ASTVisitor:visit(TypeDeclaration, BlockScope)
17923=ASTVisitor:endVisit(SingleTypeReference, ClassScope)
17924=ASTVisitor:visit(JavadocArrayQualifiedTypeReference, BlockScope)
17925=ASTVisitor:visit(BinaryExpression, BlockScope)
17926=ASTVisitor:endVisit(SingleTypeReference, BlockScope)
17927=ASTVisitor:endVisit(EmptyStatement, BlockScope)
17928=ASTVisitor:visit(JavadocFieldReference, BlockScope)
17929=ASTVisitor:endVisit(AllocationExpression, BlockScope)
17930=ASTVisitor:visit(ConditionalExpression, BlockScope)
17931=ASTVisitor:endVisit(TypeDeclaration, ClassScope)
17932=ASTVisitor:endVisit(QualifiedSuperReference, BlockScope)
17933=ASTVisitor:endVisit(AnnotationTypeDeclaration, BlockScope)
17934=ASTVisitor:endVisit(NormalAnnotation, CompilationUnitScope)
17935=ASTVisitor:visit(SuperReference, BlockScope)
17936=ASTVisitor:endVisit(TryStatement, BlockScope)
17937=ASTVisitor:visit(ArrayAllocationExpression, BlockScope)
17938=ASTVisitor:endVisit(CharLiteral, BlockScope)
17939=ASTVisitor:visit(QualifiedNameReference, BlockScope)
17940=ASTVisitor:visit(ArrayTypeReference, ClassScope)
17941=ASTVisitor:endVisit(FieldDeclaration, MethodScope)
17942=ASTVisitor:endVisit(QualifiedAllocationExpression, BlockScope)
17943=ASTVisitor:endVisit(NullLiteral, BlockScope)
17944=ASTVisitor:endVisit(ThrowStatement, BlockScope)
17945=ASTVisitor:visit(MessageSend, BlockScope)
17946=ASTVisitor:visit(QualifiedAllocationExpression, BlockScope)
17947=ASTVisitor:endVisit(SwitchStatement, BlockScope)
17948=ASTVisitor:visit(MemberValuePair, CompilationUnitScope)
17949=ASTVisitor:visit(AnnotationTypeDeclaration, BlockScope)
17950=ASTVisitor:endVisit(AnnotationTypeDeclaration, CompilationUnitScope)
17951=ASTVisitor:endVisit(ThisReference, BlockScope)
17952=ASTVisitor:visit(BreakStatement, BlockScope)
17953=ASTVisitor:visit(JavadocSingleTypeReference, BlockScope)
17954=ASTVisitor:endVisit(SingleMemberAnnotation, ClassScope)
17955=ASTVisitor:endVisit(ArrayInitializer, BlockScope)
17956=ASTVisitor:visit(AND_AND_Expression, BlockScope)
17957=ASTVisitor:endVisit(JavadocReturnStatement, BlockScope)
17958=ASTVisitor:visit(AssertStatement, BlockScope)
17959=ASTVisitor:visit(DoStatement, BlockScope)
17960=ASTVisitor:endVisit(StringLiteralConcatenation, BlockScope)
17961=ASTVisitor:visit(NullLiteral, BlockScope)
17962=ASTVisitor:visit(TypeParameter, ClassScope)
17963=ASTConverterTestAST8_2:test0538g()
17964=ASTConverterTestAST8_2:test0542()
17965=ASTConverterTestAST8_2:test0708()
17966=ASTConverterTestAST8_2:test0565()
17967=ASTConverterTestAST8_2:test0588()
17968=ASTConverterTestAST8_2:test0503f()
17969=ASTConverterTestAST8_2:test0421()
17970=ASTConverterTestAST8_2:test0674()
17971=ASTConverterTestAST8_2:test0697()
17972=ASTConverterTestAST8_2:test0444()
17973=ASTConverterTestAST8_2:test0467()
17974=ASTConverterTestAST8_2:test0530()
17975=ASTConverterTestAST8_2:test0553()
17976=ASTConverterTestAST8_2:test0651()
17977=ASTConverterTestAST8_2:test0576()
17978=ASTConverterTestAST8_2:test0599()
17979=ASTConverterTestAST8_2:test0502e()
17980=ASTConverterTestAST8_2:test0432()
17981=ASTConverterTestAST8_2:test0663()
17982=ASTConverterTestAST8_2:test0686()
17983=ASTConverterTestAST8_2:test0455()
17984=ASTConverterTestAST8_2:test0478()
17985=ASTConverterTestAST8_2:test0538h()
17986=ASTConverterTestAST8_2:test0520()
17987=ASTConverterTestAST8_2:test0641()
17988=ASTConverterTestAST8_2:test0503e()
17989=ASTConverterTestAST8_2:test0543()
17990=ASTConverterTestAST8_2:test0589()
17991=ASTConverterTestAST8_2:test0566()
17992=ASTConverterTestAST8_2:test0709()
17993=ASTConverterTestAST8_2:test0675()
17994=ASTConverterTestAST8_2:ASTConverterTestAST8_2(String)
17995=ASTConverterTestAST8_2:test0422()
17996=ASTConverterTestAST8_2:test0445()
17997=ASTConverterTestAST8_2:test0468()
17998=ASTConverterTestAST8_2:test0531()
17999=ASTConverterTestAST8_2:test0502d()
18000=ASTConverterTestAST8_2:test0554()
18001=ASTConverterTestAST8_2:test0410()
18002=ASTConverterTestAST8_2:_test0658()
18003=ASTConverterTestAST8_2:test0664()
18004=ASTConverterTestAST8_2:test0687()
18005=ASTConverterTestAST8_2:test0433()
18006=ASTConverterTestAST8_2:test0456()
18007=ASTConverterTestAST8_2:test0479()
18008=ASTConverterTestAST8_2:test0540()
18009=ASTConverterTestAST8_2:test0563()
18010=ASTConverterTestAST8_2:test0586()
18011=ASTConverterTestAST8_2:test0706()
18012=ASTConverterTestAST8_2:test0503h()
18013=ASTConverterTestAST8_2:test0465()
18014=ASTConverterTestAST8_2:test0442()
18015=ASTConverterTestAST8_2:test0672()
18016=ASTConverterTestAST8_2:test0695()
18017=ASTConverterTestAST8_2:test0488()
18018=ASTConverterTestAST8_2:test0551()
18019=ASTConverterTestAST8_2:test0574()
18020=ASTConverterTestAST8_2:test0597()
18021=ASTConverterTestAST8_2:test0502g()
18022=ASTConverterTestAST8_2:test0718()
18023=ASTConverterTestAST8_2:test0476()
18024=ASTConverterTestAST8_2:test0453()
18025=ASTConverterTestAST8_2:test0661()
18026=ASTConverterTestAST8_2:test0430()
18027=ASTConverterTestAST8_2:test0684()
18028=ASTConverterTestAST8_2:test0499()
18029=ASTConverterTestAST8_2:test0608()
18030=ASTConverterTestAST8_2:test0564()
18031=ASTConverterTestAST8_2:test0541()
18032=ASTConverterTestAST8_2:test0707()
18033=ASTConverterTestAST8_2:test0587()
18034=ASTConverterTestAST8_2:test0503g()
18035=ASTConverterTestAST8_2:test0420()
18036=ASTConverterTestAST8_2:test0443()
18037=ASTConverterTestAST8_2:test0673()
18038=ASTConverterTestAST8_2:test0696()
18039=ASTConverterTestAST8_2:test0466()
18040=ASTConverterTestAST8_2:test0489()
18041=ASTConverterTestAST8_2:test0575()
18042=ASTConverterTestAST8_2:test0552()
18043=ASTConverterTestAST8_2:test0650()
18044=ASTConverterTestAST8_2:test0598()
18045=ASTConverterTestAST8_2:test0502f()
18046=ASTConverterTestAST8_2:test0719()
18047=ASTConverterTestAST8_2:test0431()
18048=ASTConverterTestAST8_2:test0454()
18049=ASTConverterTestAST8_2:test0662()
18050=ASTConverterTestAST8_2:test0685()
18051=ASTConverterTestAST8_2:test0477()
18052=ASTConverterTestAST8_2:test0609()
18053=ASTConverterTestAST8_2:test0644()
18054=ASTConverterTestAST8_2:test0621()
18055=ASTConverterTestAST8_2:test0538c()
18056=ASTConverterTestAST8_2:test0503b()
18057=ASTConverterTestAST8_2:test0523()
18058=ASTConverterTestAST8_2:test0546()
18059=ASTConverterTestAST8_2:test0500()
18060=ASTConverterTestAST8_2:test0425()
18061=ASTConverterTestAST8_2:test0402()
18062=ASTConverterTestAST8_2:test0678()
18063=ASTConverterTestAST8_2:test0448()
18064=ASTConverterTestAST8_2:test0655()
18065=ASTConverterTestAST8_2:test0632()
18066=ASTConverterTestAST8_2:test0537a()
18067=ASTConverterTestAST8_2:test0502a()
18068=ASTConverterTestAST8_2:test0534()
18069=ASTConverterTestAST8_2:test0557()
18070=ASTConverterTestAST8_2:test0698a()
18071=ASTConverterTestAST8_2:test0511()
18072=ASTConverterTestAST8_2:test0436()
18073=ASTConverterTestAST8_2:test0413()
18074=ASTConverterTestAST8_2:test0667()
18075=ASTConverterTestAST8_2:test0459()
18076=ASTConverterTestAST8_2:test0622()
18077=ASTConverterTestAST8_2:test0645()
18078=ASTConverterTestAST8_2:test0503a()
18079=ASTConverterTestAST8_2:test0538d()
18080=ASTConverterTestAST8_2:test0524()
18081=ASTConverterTestAST8_2:test0547()
18082=ASTConverterTestAST8_2:test0501()
18083=ASTConverterTestAST8_2:test0403()
18084=ASTConverterTestAST8_2:test0426()
18085=ASTConverterTestAST8_2:test0449()
18086=ASTConverterTestAST8_2:test0656()
18087=ASTConverterTestAST8_2:test0633()
18088=ASTConverterTestAST8_2:test0610()
18089=ASTConverterTestAST8_2:test0537b()
18090=ASTConverterTestAST8_2:test0490()
18091=ASTConverterTestAST8_2:test0535()
18092=ASTConverterTestAST8_2:test0558()
18093=ASTConverterTestAST8_2:test0698b()
18094=ASTConverterTestAST8_2:test0512()
18095=ASTConverterTestAST8_2:test0720()
18096=ASTConverterTestAST8_2:test0414()
18097=ASTConverterTestAST8_2:test0668()
18098=ASTConverterTestAST8_2:test0437()
18099=ASTConverterTestAST8_2:test0538e()
18100=ASTConverterTestAST8_2:test0503d()
18101=ASTConverterTestAST8_2:test0521()
18102=ASTConverterTestAST8_2:test0544()
18103=ASTConverterTestAST8_2:test0567()
18104=ASTConverterTestAST8_2:test0446()
18105=ASTConverterTestAST8_2:test0676()
18106=ASTConverterTestAST8_2:test0423()
18107=ASTConverterTestAST8_2:test0699()
18108=ASTConverterTestAST8_2:test0469()
18109=ASTConverterTestAST8_2:test0537c()
18110=ASTConverterTestAST8_2:test0653()
18111=ASTConverterTestAST8_2:test0502c()
18112=ASTConverterTestAST8_2:test0532()
18113=ASTConverterTestAST8_2:test0555()
18114=ASTConverterTestAST8_2:test0578()
18115=ASTConverterTestAST8_2:test0630()
18116=ASTConverterTestAST8_2:test0411()
18117=ASTConverterTestAST8_2:test0457()
18118=ASTConverterTestAST8_2:test0665()
18119=ASTConverterTestAST8_2:test0434()
18120=ASTConverterTestAST8_2:test0688()
18121=ASTConverterTestAST8_2:test0538f()
18122=ASTConverterTestAST8_2:test0620()
18123=ASTConverterTestAST8_2:test0643()
18124=ASTConverterTestAST8_2:test0522()
18125=ASTConverterTestAST8_2:test0568()
18126=ASTConverterTestAST8_2:test0503c()
18127=ASTConverterTestAST8_2:test0545()
18128=ASTConverterTestAST8_2:suite()
18129=ASTConverterTestAST8_2:test0401()
18130=ASTConverterTestAST8_2:test0424()
18131=ASTConverterTestAST8_2:test0447()
18132=ASTConverterTestAST8_2:test0677()
18133=ASTConverterTestAST8_2:test0631()
18134=ASTConverterTestAST8_2:test0654()
18135=ASTConverterTestAST8_2:test0533()
18136=ASTConverterTestAST8_2:test0579()
18137=ASTConverterTestAST8_2:test0502b()
18138=ASTConverterTestAST8_2:test0556()
18139=ASTConverterTestAST8_2:test0510()
18140=ASTConverterTestAST8_2:test0412()
18141=ASTConverterTestAST8_2:test0435()
18142=ASTConverterTestAST8_2:test0458()
18143=ASTConverterTestAST8_2:test0666()
18144=ASTConverterTestAST8_2:test0689()
18145=ASTConverterTestAST8_2:test0602()
18146=ASTConverterTestAST8_2:test0648()
18147=ASTConverterTestAST8_2:test0580()
18148=ASTConverterTestAST8_2:test0625()
18149=ASTConverterTestAST8_2:test0527()
18150=ASTConverterTestAST8_2:test0504()
18151=ASTConverterTestAST8_2:test0482()
18152=ASTConverterTestAST8_2:test0711()
18153=ASTConverterTestAST8_2:test0429()
18154=ASTConverterTestAST8_2:test0406()
18155=ASTConverterTestAST8_2:test0659()
18156=ASTConverterTestAST8_2:test0591()
18157=ASTConverterTestAST8_2:test0613()
18158=ASTConverterTestAST8_2:test0636()
18159=ASTConverterTestAST8_2:test0515()
18160=ASTConverterTestAST8_2:test0700()
18161=ASTConverterTestAST8_2:test0723()
18162=ASTConverterTestAST8_2:test0470()
18163=ASTConverterTestAST8_2:test0493()
18164=ASTConverterTestAST8_2:test0417()
18165=ASTConverterTestAST8_2:test0603()
18166=ASTConverterTestAST8_2:test0626()
18167=ASTConverterTestAST8_2:test0649()
18168=ASTConverterTestAST8_2:test0419()
18169=ASTConverterTestAST8_2:test0581()
18170=ASTConverterTestAST8_2:testBug443942()
18171=ASTConverterTestAST8_2:test0666_2()
18172=ASTConverterTestAST8_2:test0528()
18173=ASTConverterTestAST8_2:test0690()
18174=ASTConverterTestAST8_2:test0712()
18175=ASTConverterTestAST8_2:test0505()
18176=ASTConverterTestAST8_2:test0460()
18177=ASTConverterTestAST8_2:test0483()
18178=ASTConverterTestAST8_2:test0407()
18179=ASTConverterTestAST8_2:test0592()
18180=ASTConverterTestAST8_2:test0637()
18181=ASTConverterTestAST8_2:test0614()
18182=ASTConverterTestAST8_2:test0516()
18183=ASTConverterTestAST8_2:test0539()
18184=ASTConverterTestAST8_2:test0724()
18185=ASTConverterTestAST8_2:test0471()
18186=ASTConverterTestAST8_2:test0494()
18187=ASTConverterTestAST8_2:test0701()
18188=ASTConverterTestAST8_2:test0418()
18189=ASTConverterTestAST8_2:test0646()
18190=ASTConverterTestAST8_2:test0623()
18191=ASTConverterTestAST8_2:test0600()
18192=ASTConverterTestAST8_2:test0538a()
18193=ASTConverterTestAST8_2:test0525()
18194=ASTConverterTestAST8_2:test0548()
18195=ASTConverterTestAST8_2:test0480()
18196=ASTConverterTestAST8_2:_test0642()
18197=ASTConverterTestAST8_2:test0404()
18198=ASTConverterTestAST8_2:test0427()
18199=ASTConverterTestAST8_2:test0657()
18200=ASTConverterTestAST8_2:test0611()
18201=ASTConverterTestAST8_2:test0634()
18202=ASTConverterTestAST8_2:test0536()
18203=ASTConverterTestAST8_2:test0559()
18204=ASTConverterTestAST8_2:test0513()
18205=ASTConverterTestAST8_2:test0491()
18206=ASTConverterTestAST8_2:test0721()
18207=ASTConverterTestAST8_2:test0415()
18208=ASTConverterTestAST8_2:test0669()
18209=ASTConverterTestAST8_2:test0438()
18210=ASTConverterTestAST8_2:test0624()
18211=ASTConverterTestAST8_2:test0647()
18212=ASTConverterTestAST8_2:test0601()
18213=ASTConverterTestAST8_2:test0538b()
18214=ASTConverterTestAST8_2:test0526()
18215=ASTConverterTestAST8_2:test0549()
18216=ASTConverterTestAST8_2:test0481()
18217=ASTConverterTestAST8_2:test0710()
18218=ASTConverterTestAST8_2:test0405()
18219=ASTConverterTestAST8_2:test0428()
18220=ASTConverterTestAST8_2:test0590()
18221=ASTConverterTestAST8_2:test0635()
18222=ASTConverterTestAST8_2:test0612()
18223=ASTConverterTestAST8_2:test0514()
18224=ASTConverterTestAST8_2:test0492()
18225=ASTConverterTestAST8_2:_test0652()
18226=ASTConverterTestAST8_2:test0722()
18227=ASTConverterTestAST8_2:test0416()
18228=ASTConverterTestAST8_2:test0439()
18229=ASTConverterTestAST8_2:test0561()
18230=ASTConverterTestAST8_2:test0584()
18231=ASTConverterTestAST8_2:test0463()
18232=ASTConverterTestAST8_2:test0486()
18233=ASTConverterTestAST8_2:test0670()
18234=ASTConverterTestAST8_2:test0715()
18235=ASTConverterTestAST8_2:test0693()
18236=ASTConverterTestAST8_2:setUpSuite()
18237=ASTConverterTestAST8_2:test0440()
18238=ASTConverterTestAST8_2:test0618()
18239=ASTConverterTestAST8_2:test0572()
18240=ASTConverterTestAST8_2:test0595()
18241=ASTConverterTestAST8_2:test0716()
18242=ASTConverterTestAST8_2:test0508()
18243=ASTConverterTestAST8_2:test0474()
18244=ASTConverterTestAST8_2:test0502i()
18245=ASTConverterTestAST8_2:test0497()
18246=ASTConverterTestAST8_2:test0704()
18247=ASTConverterTestAST8_2:test0682()
18248=ASTConverterTestAST8_2:test0451()
18249=ASTConverterTestAST8_2:test0606()
18250=ASTConverterTestAST8_2:test0629()
18251=ASTConverterTestAST8_2:test0585()
18252=ASTConverterTestAST8_2:test0562()
18253=ASTConverterTestAST8_2:test0705()
18254=ASTConverterTestAST8_2:test0503i()
18255=ASTConverterTestAST8_2:test0464()
18256=ASTConverterTestAST8_2:test0487()
18257=ASTConverterTestAST8_2:test0671()
18258=ASTConverterTestAST8_2:test0694()
18259=ASTConverterTestAST8_2:test0441()
18260=ASTConverterTestAST8_2:test0619()
18261=ASTConverterTestAST8_2:test0550()
18262=ASTConverterTestAST8_2:test0596()
18263=ASTConverterTestAST8_2:test0573()
18264=ASTConverterTestAST8_2:internalThrownExceptions(MethodDeclaration)
18265=ASTConverterTestAST8_2:test0502h()
18266=ASTConverterTestAST8_2:test0509()
18267=ASTConverterTestAST8_2:test0717()
18268=ASTConverterTestAST8_2:test0475()
18269=ASTConverterTestAST8_2:test0498()
18270=ASTConverterTestAST8_2:test0660()
18271=ASTConverterTestAST8_2:test0683()
18272=ASTConverterTestAST8_2:test0452()
18273=ASTConverterTestAST8_2:test0607()
18274=ASTConverterTestAST8_2:test0582()
18275=ASTConverterTestAST8_2:test0627()
18276=ASTConverterTestAST8_2:test0604()
18277=ASTConverterTestAST8_2:componentType(ArrayType)
18278=ASTConverterTestAST8_2:test0506()
18279=ASTConverterTestAST8_2:test0518()
18280=ASTConverterTestAST8_2:test0484()
18281=ASTConverterTestAST8_2:test0713()
18282=ASTConverterTestAST8_2:test0691()
18283=ASTConverterTestAST8_2:test0461()
18284=ASTConverterTestAST8_2:test0639()
18285=ASTConverterTestAST8_2:test0570()
18286=ASTConverterTestAST8_2:test0593()
18287=ASTConverterTestAST8_2:test0615()
18288=ASTConverterTestAST8_2:test0638()
18289=ASTConverterTestAST8_2:test0408()
18290=ASTConverterTestAST8_2:test0517()
18291=ASTConverterTestAST8_2:test0529()
18292=ASTConverterTestAST8_2:test0495()
18293=ASTConverterTestAST8_2:test0725()
18294=ASTConverterTestAST8_2:test0680()
18295=ASTConverterTestAST8_2:test0702()
18296=ASTConverterTestAST8_2:test0472()
18297=ASTConverterTestAST8_2:test0560()
18298=ASTConverterTestAST8_2:test0667_2()
18299=ASTConverterTestAST8_2:test0605()
18300=ASTConverterTestAST8_2:test0583()
18301=ASTConverterTestAST8_2:test0462()
18302=ASTConverterTestAST8_2:test0485()
18303=ASTConverterTestAST8_2:test0519()
18304=ASTConverterTestAST8_2:test0692()
18305=ASTConverterTestAST8_2:test0714()
18306=ASTConverterTestAST8_2:test0617()
18307=ASTConverterTestAST8_2:test0409()
18308=ASTConverterTestAST8_2:test0571()
18309=ASTConverterTestAST8_2:test0616()
18310=ASTConverterTestAST8_2:test0594()
18311=ASTConverterTestAST8_2:test0507()
18312=ASTConverterTestAST8_2:test0450()
18313=ASTConverterTestAST8_2:test0473()
18314=ASTConverterTestAST8_2:test0496()
18315=ASTConverterTestAST8_2:test0681()
18316=ASTConverterTestAST8_2:test0502j()
18317=ASTConverterTestAST8_2:test0703()
18318=ASTConverterTestAST8_2:_test0679()
18319=ASTConverterTestAST8_2:test0628()
18320=A:foo(java.lang.String, long, java.lang.String, int, long)
18321=A:A(int)
18322=ExtendedStringLiteral:traverse(ASTVisitor, BlockScope)
18323=ExtendedStringLiteral:ExtendedStringLiteral(StringLiteral, CharLiteral)
18324=ExtendedStringLiteral:printExpression(int, StringBuffer)
18325=ExtendedStringLiteral:extendWith(StringLiteral)
18326=ExtendedStringLiteral:ExtendedStringLiteral(StringLiteral, StringLiteral)
18327=ExtendedStringLiteral:extendWith(CharLiteral)
18328=IImportDeclaration:getFlags()
18329=IImportDeclaration:isOnDemand()
18330=IImportDeclaration:getElementName()
18331=SelectionOnExplicitConstructorCall:SelectionOnExplicitConstructorCall(int)
18332=SelectionOnExplicitConstructorCall:resolve(BlockScope)
18333=SelectionOnExplicitConstructorCall:printStatement(int, StringBuffer)
18334=QualifiedName:accept0(ASTVisitor)
18335=QualifiedName:appendName(StringBuffer)
18336=QualifiedName:getQualifier()
18337=QualifiedName:setName(SimpleName)
18338=QualifiedName:internalStructuralPropertiesForType(int)
18339=QualifiedName:getName()
18340=QualifiedName:treeSize()
18341=QualifiedName:setQualifier(Name)
18342=QualifiedName:propertyDescriptors(int)
18343=QualifiedName:QualifiedName(AST)
18344=QualifiedName:memSize()
18345=QualifiedName:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
18346=QualifiedName:getNodeType0()
18347=QualifiedName:subtreeMatch0(ASTMatcher, Object)
18348=QualifiedName:clone0(AST)
18349=RuntimeInvisibleParameterAnnotationsAttribute:RuntimeInvisibleParameterAnnotationsAttribute(byte[], IConstantPool, int)
18350=RuntimeInvisibleParameterAnnotationsAttribute:getParameterAnnotations()
18351=RuntimeInvisibleParameterAnnotationsAttribute:getParametersNumber()
18352=A:foo()
18353=A:fooooooo()
18354=A:baz()
18355=A:foo()
18356=X28b:foo()
18357=CodeStream:iaload()
18358=CodeStream:athrow()
18359=CodeStream:invoke(byte, MethodBinding, TypeBinding)
18360=CodeStream:dup2_x1()
18361=CodeStream:pop()
18362=CodeStream:addVisibleLocalVariable(LocalVariableBinding)
18363=CodeStream:generateSyntheticEnclosingInstanceValues(BlockScope, ReferenceBinding, Expression, ASTNode)
18364=CodeStream:generateEmulationForMethod(Scope, MethodBinding)
18365=CodeStream:if_acmpne(BranchLabel)
18366=CodeStream:f2l()
18367=CodeStream:ifnull(BranchLabel)
18368=CodeStream:newNoClassDefFoundError()
18369=CodeStream:ldc(float)
18370=CodeStream:addLabel(BranchLabel)
18371=CodeStream:tableswitch(CaseLabel, int, int, int[], int[], CaseLabel[])
18372=CodeStream:invokeDynamic(int, int, int, char[], char[])
18373=CodeStream:aaload()
18374=CodeStream:iand()
18375=CodeStream:generateOuterAccess(Object[], ASTNode, Binding, Scope)
18376=CodeStream:lreturn()
18377=CodeStream:invokeClassGetDeclaredField()
18378=CodeStream:generateSyntheticBodyForFactoryMethod(SyntheticMethodBinding)
18379=CodeStream:fstore_0()
18380=CodeStream:iload(int)
18381=CodeStream:if_icmple(BranchLabel)
18382=CodeStream:goto_w(BranchLabel)
18383=CodeStream:astore(int)
18384=CodeStream:idiv()
18385=CodeStream:load(LocalVariableBinding)
18386=CodeStream:dastore()
18387=CodeStream:astore_0()
18388=CodeStream:load(TypeBinding, int)
18389=CodeStream:dup2_x2()
18390=CodeStream:ifnonnull(BranchLabel)
18391=CodeStream:invokeStringConcatenationAppendForType(int)
18392=CodeStream:checkcast(int)
18393=CodeStream:lconst_1()
18394=CodeStream:invokeStringConcatenationDefaultConstructor()
18395=CodeStream:i2f()
18396=CodeStream:dup_x1()
18397=CodeStream:exitUserScope(BlockScope, LocalVariableBinding)
18398=CodeStream:generateSyntheticBodyForDeserializeLambda(SyntheticMethodBinding, SyntheticMethodBinding[])
18399=CodeStream:lstore(int)
18400=CodeStream:lookupswitch(CaseLabel, int[], int[], CaseLabel[])
18401=CodeStream:removeNotDefinitelyAssignedVariables(Scope, int)
18402=CodeStream:generateEmulationForField(FieldBinding)
18403=CodeStream:fstore_1()
18404=CodeStream:optimizeBranch(int, BranchLabel)
18405=CodeStream:lstore_3()
18406=CodeStream:dup2()
18407=CodeStream:if_icmplt(BranchLabel)
18408=CodeStream:astore_1()
18409=CodeStream:resetForCodeGenUnusedLocals()
18410=CodeStream:writeSignedWord(int, int)
18411=CodeStream:dmul()
18412=CodeStream:reset(AbstractMethodDeclaration, ClassFile)
18413=CodeStream:fsub()
18414=CodeStream:inlineForwardReferencesFromLabelsTargeting(BranchLabel, int)
18415=CodeStream:frem()
18416=CodeStream:dup_x2()
18417=CodeStream:lload_1()
18418=CodeStream:aastore()
18419=CodeStream:iadd()
18420=CodeStream:ior()
18421=CodeStream:invokeJavaLangErrorConstructor()
18422=CodeStream:bipush(byte)
18423=CodeStream:iload_0()
18424=CodeStream:invokeJavaLangReflectMethodInvoke()
18425=CodeStream:generateInlinedValue(int)
18426=CodeStream:initializeMaxLocals(MethodBinding)
18427=CodeStream:CodeStream(ClassFile)
18428=CodeStream:fstore_2()
18429=CodeStream:fconst_0()
18430=CodeStream:ishr()
18431=CodeStream:newJavaLangError()
18432=CodeStream:throwAnyException(LocalVariableBinding)
18433=CodeStream:ireturn()
18434=CodeStream:invokeArrayNewInstance()
18435=CodeStream:lload_0()
18436=CodeStream:getContents()
18437=CodeStream:ineg()
18438=CodeStream:iload_1()
18439=CodeStream:fstore_3()
18440=CodeStream:fconst_1()
18441=CodeStream:freturn()
18442=CodeStream:generateBoxingConversion(int)
18443=CodeStream:faload()
18444=CodeStream:ifeq(BranchLabel)
18445=CodeStream:registerExceptionHandler(ExceptionLabel)
18446=CodeStream:generateInlinedValue(char)
18447=CodeStream:daload()
18448=CodeStream:generateSyntheticBodyForConstructorAccess(SyntheticMethodBinding)
18449=CodeStream:lload_3()
18450=CodeStream:lxor()
18451=CodeStream:aload_3()
18452=CodeStream:instance_of(TypeReference, TypeBinding)
18453=CodeStream:lstore_0()
18454=CodeStream:arrayAtPut(int, boolean)
18455=CodeStream:fastore()
18456=CodeStream:invokeThrowableAddSuppressed()
18457=CodeStream:invokeAccessibleObjectSetAccessible()
18458=CodeStream:i2b()
18459=CodeStream:ldc(TypeBinding)
18460=CodeStream:lload_2()
18461=CodeStream:aload_2()
18462=CodeStream:generateSyntheticBodyForArrayConstructor(SyntheticMethodBinding)
18463=CodeStream:recordPositionsFrom(int, int)
18464=CodeStream:invokeObjectEquals()
18465=CodeStream:generateImplicitConversion(int)
18466=CodeStream:generateSyntheticBodyForMethodAccess(SyntheticMethodBinding)
18467=CodeStream:dstore_3()
18468=CodeStream:generateWideRevertedConditionalBranch(byte, BranchLabel)
18469=CodeStream:invokeStringHashCode()
18470=CodeStream:i2c()
18471=CodeStream:aconst_null()
18472=CodeStream:invokeAutoCloseableClose(TypeBinding)
18473=CodeStream:lconst_0()
18474=CodeStream:dconst_1()
18475=CodeStream:newArray(ArrayBinding)
18476=CodeStream:resetInWideMode()
18477=CodeStream:i2s()
18478=CodeStream:ddiv()
18479=CodeStream:generateSyntheticBodyForSwitchTable(SyntheticMethodBinding)
18480=CodeStream:loadInt(int)
18481=CodeStream:dload(int)
18482=CodeStream:invokeSystemArraycopy()
18483=CodeStream:fadd()
18484=CodeStream:invokeJavaLangEnumValues(TypeBinding, ArrayBinding)
18485=CodeStream:generateEmulationForConstructor(Scope, MethodBinding)
18486=CodeStream:lstore_2()
18487=CodeStream:invoke(byte, int, int, char[], char[], char[])
18488=CodeStream:pushOnStack(TypeBinding)
18489=CodeStream:fdiv()
18490=CodeStream:getPosition()
18491=CodeStream:astore_2()
18492=CodeStream:checkcast(TypeBinding)
18493=CodeStream:invokeStringEquals()
18494=CodeStream:goto_(BranchLabel)
18495=CodeStream:lshr()
18496=CodeStream:f2i()
18497=CodeStream:i2d()
18498=CodeStream:iconst_m1()
18499=CodeStream:writeSignedShort(int)
18500=CodeStream:sort(int[], int, int, int[])
18501=CodeStream:generateInlinedValue(boolean)
18502=CodeStream:record(LocalVariableBinding)
18503=CodeStream:invokeJavaUtilIteratorHasNext()
18504=CodeStream:fieldAccess(byte, int, char[], char[], char[])
18505=CodeStream:lneg()
18506=CodeStream:d2l()
18507=CodeStream:aload(int)
18508=CodeStream:dup()
18509=CodeStream:lstore_1()
18510=CodeStream:iinc(int, int)
18511=CodeStream:generateInlinedValue(byte)
18512=CodeStream:astore_3()
18513=CodeStream:istore_0()
18514=CodeStream:lsub()
18515=CodeStream:ishl()
18516=CodeStream:dstore_1()
18517=CodeStream:iconst_0()
18518=CodeStream:reset(LambdaExpression, ClassFile)
18519=CodeStream:store(LocalVariableBinding, boolean)
18520=CodeStream:newArray(TypeReference, ArrayAllocationExpression, ArrayBinding)
18521=CodeStream:dload_0()
18522=CodeStream:f2d()
18523=CodeStream:resetForProblemClinit(ClassFile)
18524=CodeStream:caload()
18525=CodeStream:if_icmpge(BranchLabel)
18526=CodeStream:fcmpl()
18527=CodeStream:saload()
18528=CodeStream:areturn()
18529=CodeStream:generateSyntheticBodyForEnumValueOf(SyntheticMethodBinding)
18530=CodeStream:instance_of(TypeBinding)
18531=CodeStream:newarray(int)
18532=CodeStream:newJavaLangAssertionError()
18533=CodeStream:invokeStringIntern()
18534=CodeStream:generateSyntheticOuterArgumentValues(BlockScope, ReferenceBinding, ASTNode)
18535=CodeStream:writePosition(BranchLabel)
18536=CodeStream:istore_1()
18537=CodeStream:d2i()
18538=CodeStream:lrem()
18539=CodeStream:monitorexit()
18540=CodeStream:newStringContatenation()
18541=CodeStream:getTYPE(int)
18542=CodeStream:imul()
18543=CodeStream:if_icmpeq(BranchLabel)
18544=CodeStream:invokeJavaLangAssertionErrorDefaultConstructor()
18545=CodeStream:dstore_2()
18546=CodeStream:invokeDynamic(int, int, int, char[], char[], boolean, TypeReference, TypeReference[])
18547=CodeStream:dload_1()
18548=CodeStream:dconst_0()
18549=CodeStream:lload(int)
18550=CodeStream:dneg()
18551=CodeStream:generateUnboxingConversion(int)
18552=CodeStream:removeVariable(LocalVariableBinding)
18553=CodeStream:dreturn()
18554=CodeStream:getBaseTypeValue(int)
18555=CodeStream:istore_2()
18556=CodeStream:generateInlinedValue(long)
18557=CodeStream:dcmpg()
18558=CodeStream:ldc2_w(long)
18559=CodeStream:jsr_w(BranchLabel)
18560=CodeStream:recordExpressionType(TypeBinding)
18561=CodeStream:dadd()
18562=CodeStream:resizeByteArray()
18563=CodeStream:dstore(int)
18564=CodeStream:generateClassLiteralAccessForType(TypeBinding, FieldBinding)
18565=CodeStream:iconst_2()
18566=CodeStream:if_acmpeq(BranchLabel)
18567=CodeStream:toString()
18568=CodeStream:generateCodeAttributeForProblemMethod(String)
18569=CodeStream:multianewarray(TypeReference, TypeBinding, int, ArrayAllocationExpression)
18570=CodeStream:aload_1()
18571=CodeStream:indexOfSameLineEntrySincePC(int, int)
18572=CodeStream:return_()
18573=CodeStream:ldcForIndex(int)
18574=CodeStream:swap()
18575=CodeStream:sendOperator(int, int)
18576=CodeStream:invokeEnumOrdinal(char[])
18577=CodeStream:generateReturnBytecode(Expression)
18578=CodeStream:fload_3()
18579=CodeStream:istore_3()
18580=CodeStream:addDefinitelyAssignedVariables(Scope, int)
18581=CodeStream:l2i()
18582=CodeStream:fieldAccess(byte, FieldBinding, TypeBinding)
18583=CodeStream:generateEmulatedReadAccessForField(FieldBinding)
18584=CodeStream:arraylength()
18585=CodeStream:fmul()
18586=CodeStream:dstore_0()
18587=CodeStream:removeUnusedPcToSourceMapEntries()
18588=CodeStream:iconst_1()
18589=CodeStream:generateEmulatedWriteAccessForField(FieldBinding)
18590=CodeStream:invoke18(byte, int, int, char[], boolean, char[], char[])
18591=CodeStream:invokeStringConcatenationStringConstructor()
18592=CodeStream:generateConstant(Constant, int)
18593=CodeStream:invokeNoClassDefFoundErrorStringConstructor()
18594=CodeStream:iushr()
18595=CodeStream:aload_0()
18596=CodeStream:lastore()
18597=CodeStream:insertionIndex(int[], int, int)
18598=CodeStream:iastore()
18599=CodeStream:invokeClassGetDeclaredConstructor()
18600=CodeStream:fload_2()
18601=CodeStream:if_icmpgt(BranchLabel)
18602=CodeStream:fload(int)
18603=CodeStream:reset(ClassFile)
18604=CodeStream:iconst_4()
18605=CodeStream:invokeJavaLangAssertionErrorConstructor(int)
18606=CodeStream:castore()
18607=CodeStream:generateInlinedValue(double)
18608=CodeStream:ldc2_w(double)
18609=CodeStream:generateSyntheticBodyForFieldReadAccess(SyntheticMethodBinding)
18610=CodeStream:newWrapperFor(int)
18611=CodeStream:pushExceptionOnStack(TypeBinding)
18612=CodeStream:baload()
18613=CodeStream:laload()
18614=CodeStream:jsr(BranchLabel)
18615=CodeStream:fcmpg()
18616=CodeStream:iload_2()
18617=CodeStream:invokeObjectGetClass()
18618=CodeStream:lmul()
18619=CodeStream:irem()
18620=CodeStream:generateSyntheticBodyForArrayClone(SyntheticMethodBinding)
18621=CodeStream:writeSignedShort(int, int)
18622=CodeStream:iflt(BranchLabel)
18623=CodeStream:dcmpl()
18624=CodeStream:fload_1()
18625=CodeStream:generateInlinedValue(short)
18626=CodeStream:writeUnsignedShort(int)
18627=CodeStream:ldiv()
18628=CodeStream:invokeStringConcatenationToString()
18629=CodeStream:sastore()
18630=CodeStream:addVariable(LocalVariableBinding)
18631=CodeStream:ifgt(BranchLabel)
18632=CodeStream:fconst_2()
18633=CodeStream:ifge(BranchLabel)
18634=CodeStream:iconst_3()
18635=CodeStream:if_icmpne(BranchLabel)
18636=CodeStream:lshl()
18637=CodeStream:istore(int)
18638=CodeStream:ldc(String)
18639=CodeStream:writeWidePosition(BranchLabel)
18640=CodeStream:lushr()
18641=CodeStream:dsub()
18642=CodeStream:sipush(int)
18643=CodeStream:generateStringConcatenationAppend(BlockScope, Expression, Expression)
18644=CodeStream:generateSyntheticBodyForEnumInitializationMethod(SyntheticMethodBinding)
18645=CodeStream:invokeJavaLangClassDesiredAssertionStatus()
18646=CodeStream:isDefinitelyAssigned(Scope, int, LocalVariableBinding)
18647=CodeStream:iload_3()
18648=CodeStream:nop()
18649=CodeStream:new_(TypeBinding)
18650=CodeStream:generateInlinedValue(float)
18651=CodeStream:d2f()
18652=CodeStream:generateSyntheticBodyForEnumValues(SyntheticMethodBinding)
18653=CodeStream:fload_0()
18654=CodeStream:anewarray(TypeBinding)
18655=CodeStream:generateSyntheticBodyForFieldWriteAccess(SyntheticMethodBinding)
18656=CodeStream:fstore(int)
18657=CodeStream:l2d()
18658=CodeStream:ifne(BranchLabel)
18659=CodeStream:invokeThrowableGetMessage()
18660=CodeStream:dload_2()
18661=CodeStream:writePosition(BranchLabel, int)
18662=CodeStream:lcmp()
18663=CodeStream:arrayAt(int)
18664=CodeStream:ret(int)
18665=CodeStream:invokeIterableIterator(TypeBinding)
18666=CodeStream:drem()
18667=CodeStream:recordPositionsFrom(int, int, boolean)
18668=CodeStream:ldc(int)
18669=CodeStream:ixor()
18670=CodeStream:invokeJavaLangReflectFieldGetter(int)
18671=CodeStream:invoke(byte, MethodBinding, TypeBinding, TypeReference[])
18672=CodeStream:exitUserScope(BlockScope)
18673=CodeStream:invokeJavaUtilIteratorNext()
18674=CodeStream:init(ClassFile)
18675=CodeStream:isub()
18676=CodeStream:iconst_5()
18677=CodeStream:invokeClassForName()
18678=CodeStream:bastore()
18679=CodeStream:lor()
18680=CodeStream:decrStackSize(int)
18681=CodeStream:new_(TypeReference, TypeBinding)
18682=CodeStream:dload_3()
18683=CodeStream:getConstantPoolDeclaringClass(Scope, MethodBinding, TypeBinding, boolean)
18684=CodeStream:i2l()
18685=CodeStream:checkcast(TypeReference, TypeBinding, int)
18686=CodeStream:land()
18687=CodeStream:ladd()
18688=CodeStream:monitorenter()
18689=CodeStream:fneg()
18690=CodeStream:invokeStringValueOf(int)
18691=CodeStream:swap(int, int, int, int)
18692=CodeStream:findDirectSuperTypeTowards(SyntheticMethodBinding, MethodBinding)
18693=CodeStream:invokeJavaLangReflectConstructorNewInstance()
18694=CodeStream:writeSignedWord(int)
18695=CodeStream:pop2()
18696=CodeStream:invokeJavaLangReflectFieldSetter(int)
18697=CodeStream:invokeClassGetDeclaredMethod()
18698=CodeStream:l2f()
18699=CodeStream:ifle(BranchLabel)
18700=CodeStream:getConstantPoolDeclaringClass(Scope, FieldBinding, TypeBinding, boolean)
18701=CodeStream:invokeJavaLangEnumvalueOf(ReferenceBinding)
18702=ImportRewriteAnalyzer:selectImportComments(CompilationUnit, List<Comment>, int, int, int)
18703=ImportRewriteAnalyzer:readOriginalImports(CompilationUnit)
18704=ImportRewriteAnalyzer:identifyImplicitImports(Collection<ImportName>, Set<String>)
18705=ImportRewriteAnalyzer:requireExplicitImport(boolean, String)
18706=ImportRewriteAnalyzer:RewriteResult:RewriteResult(TextEdit, Set<ImportName>)
18707=ImportRewriteAnalyzer:removeImport(boolean, String)
18708=ImportRewriteAnalyzer:subtractImports(Collection<ImportName>, Set<ImportName>)
18709=ImportRewriteAnalyzer:shouldInsertSpaceBeforeSemicolon(IJavaProject)
18710=ImportRewriteAnalyzer:RewriteResult:getCreatedStaticImports()
18711=ImportRewriteAnalyzer:analyzeRewrite(IProgressMonitor)
18712=ImportRewriteAnalyzer:ImportRewriteAnalyzer(ICompilationUnit, CompilationUnit, ImportRewriteConfiguration)
18713=ImportRewriteAnalyzer:RewriteResult:getCreatedImports()
18714=ImportRewriteAnalyzer:matchExistingOrCreateNew(Collection<ImportName>)
18715=ImportRewriteAnalyzer:RewriteResult:extractQualifiedNames(boolean, Collection<ImportName>)
18716=ImportRewriteAnalyzer:determineTouchedContainers()
18717=ImportRewriteAnalyzer:addImport(boolean, String)
18718=ImportRewriteAnalyzer:determineRewriteSite(CompilationUnit, List<OriginalImportEntry>)
18719=ImportRewriteAnalyzer:getBlankLinesBetweenImportGroups(IJavaProject)
18720=ImportRewriteAnalyzer:mapTopLevelNodes(CompilationUnit)
18721=ImportRewriteAnalyzer:computeDelta(Collection<ImportName>, Collection<OnDemandReduction>)
18722=ImportRewriteAnalyzer:computeImportOrder(IProgressMonitor)
18723=ImportRewriteAnalyzer:determineSurroundingRegion(CompilationUnit, IRegion)
18724=ImportRewriteAnalyzer:determineImportsRegion(List<OriginalImportEntry>)
18725=ImportRewriteAnalyzer:RewriteResult:getTextEdit()
18726=ImportRewriteAnalyzer:mapImportsByNameIdentity(List<OriginalImportEntry>)
18727=Test:main(String[])
18728=ResolveMessageSendOnBaseType:boo()
18729=A:foo()
18730=LocalVariableTypeTableEntry:getNameIndex()
18731=LocalVariableTypeTableEntry:getLength()
18732=LocalVariableTypeTableEntry:getSignature()
18733=LocalVariableTypeTableEntry:getStartPC()
18734=LocalVariableTypeTableEntry:getIndex()
18735=LocalVariableTypeTableEntry:getName()
18736=LocalVariableTypeTableEntry:LocalVariableTypeTableEntry(byte[], IConstantPool, int)
18737=LocalVariableTypeTableEntry:getSignatureIndex()
18738=IdeTestUtils:read(java.io.File)
18739=IdeTestUtils:copyResource(File, File)
18740=IdeTestUtils:copyResources(File, File)
18741=IdeTestUtils:shouldConvertToIndependentLineDelimiter(File)
18742=IdeTestUtils:copyResources(IProject, String, String)
18743=IdeTestUtils:getPluginDirectoryPath()
18744=CompoundAssignment:checkCastCompatibility()
18745=CompoundAssignment:traverse(ASTVisitor, BlockScope)
18746=CompoundAssignment:generateCode(BlockScope, CodeStream, boolean)
18747=CompoundAssignment:resolveType(BlockScope)
18748=CompoundAssignment:printExpressionNoParenthesis(int, StringBuffer)
18749=CompoundAssignment:nullStatus(FlowInfo, FlowContext)
18750=CompoundAssignment:operatorToString()
18751=CompoundAssignment:CompoundAssignment(Expression, Expression, int, int)
18752=CompoundAssignment:analyseCode(BlockScope, FlowContext, FlowInfo)
18753=CompoundAssignment:restrainUsageToNumericTypes()
18754=JavaConventionTests:testValidIdentifier()
18755=JavaConventionTests:testValidUnicodeImportDeclaration()
18756=JavaConventionTests:validate(String, int)
18757=JavaConventionTests:testValidTypeName()
18758=JavaConventionTests:testValidUnicodePackageName()
18759=JavaConventionTests:testValidFieldName()
18760=JavaConventionTests:testValidMethodName()
18761=JavaConventionTests:suite()
18762=JavaConventionTests:testValidImportDeclaration()
18763=JavaConventionTests:testValidPackageName()
18764=JavaConventionTests:testInvalidImportDeclaration3()
18765=JavaConventionTests:testValidTypeVariableName()
18766=JavaConventionTests:testInvalidImportDeclaration2()
18767=JavaConventionTests:testAssertIdentifier()
18768=JavaConventionTests:verifyStatus(IStatus, String[])
18769=JavaConventionTests:testInvalidImportDeclaration1()
18770=JavaConventionTests:testEnumIdentifier()
18771=JavaConventionTests:JavaConventionTests(String)
18772=JavaConventionTests:testInvalidIdentifier()
18773=JavaConventionTests:validate(String, int, String, String)
18774=JavaConventionTests:testValidCompilationUnitName()
18775=JavaConventionTests:testPackageFragmentRootOverlap()
18776=X01c:foo()
18777=TestD1:foo()
18778=TestD1:bar()
18779=LabelFlowContext:individualToString()
18780=LabelFlowContext:checkLabelValidity(BlockScope)
18781=LabelFlowContext:labelName()
18782=LabelFlowContext:LabelFlowContext(FlowContext, ASTNode, char[], Label, BlockScope)
18783=ScalingTests:testGeneratingLotsOfFiles()
18784=ScalingTests:suite()
18785=ScalingTests:setUp()
18786=ScalingTests:ScalingTests(String)
18787=CompletionOnMethodTypeParameter:resolveStatements()
18788=CompletionOnMethodTypeParameter:print(int, StringBuffer)
18789=CompletionOnMethodTypeParameter:CompletionOnMethodTypeParameter(TypeParameter[], CompilationResult)
18790=FormatterRegressionTests:test062()
18791=FormatterRegressionTests:test107()
18792=FormatterRegressionTests:test521()
18793=FormatterRegressionTests:test774()
18794=FormatterRegressionTests:testBug477476b()
18795=FormatterRegressionTests:test665()
18796=FormatterRegressionTests:_test676()
18797=FormatterRegressionTests:test412()
18798=FormatterRegressionTests:test458()
18799=FormatterRegressionTests:test205()
18800=FormatterRegressionTests:testBug384959b()
18801=FormatterRegressionTests:test171()
18802=FormatterRegressionTests:test630()
18803=FormatterRegressionTests:test303()
18804=FormatterRegressionTests:test349()
18805=FormatterRegressionTests:test556()
18806=FormatterRegressionTests:test118()
18807=FormatterRegressionTests:test051()
18808=FormatterRegressionTests:test510()
18809=FormatterRegressionTests:test280()
18810=FormatterRegressionTests:test767b()
18811=FormatterRegressionTests:setPageWidth80(DefaultCodeFormatterOptions)
18812=FormatterRegressionTests:test401()
18813=FormatterRegressionTests:test097()
18814=FormatterRegressionTests:test447()
18815=FormatterRegressionTests:test216()
18816=FormatterRegressionTests:test182()
18817=FormatterRegressionTests:FormatterRegressionTests(String)
18818=FormatterRegressionTests:test641()
18819=FormatterRegressionTests:formatSource(String)
18820=FormatterRegressionTests:test545()
18821=FormatterRegressionTests:test314()
18822=FormatterRegressionTests:test129()
18823=FormatterRegressionTests:test040()
18824=FormatterRegressionTests:test543()
18825=FormatterRegressionTests:test291()
18826=FormatterRegressionTests:test752()
18827=FormatterRegressionTests:test643()
18828=FormatterRegressionTests:test689()
18829=FormatterRegressionTests:test434()
18830=FormatterRegressionTests:test086()
18831=FormatterRegressionTests:test227()
18832=FormatterRegressionTests:test193()
18833=FormatterRegressionTests:test578()
18834=FormatterRegressionTests:test325()
18835=FormatterRegressionTests:test301()
18836=FormatterRegressionTests:test532()
18837=FormatterRegressionTests:test763()
18838=FormatterRegressionTests:test654()
18839=FormatterRegressionTests:test423()
18840=FormatterRegressionTests:test469()
18841=FormatterRegressionTests:test075()
18842=FormatterRegressionTests:formatSource(String, String, int, int, int, int, String, boolean)
18843=FormatterRegressionTests:test238()
18844=FormatterRegressionTests:test567()
18845=FormatterRegressionTests:test336()
18846=FormatterRegressionTests:testBug384959d()
18847=FormatterRegressionTests:test060()
18848=FormatterRegressionTests:test109()
18849=FormatterRegressionTests:test271()
18850=FormatterRegressionTests:test621()
18851=FormatterRegressionTests:test667()
18852=FormatterRegressionTests:test730()
18853=FormatterRegressionTests:test207()
18854=FormatterRegressionTests:test414()
18855=FormatterRegressionTests:testBug370540m()
18856=FormatterRegressionTests:test380()
18857=FormatterRegressionTests:test696a()
18858=FormatterRegressionTests:test765()
18859=FormatterRegressionTests:test512()
18860=FormatterRegressionTests:test173()
18861=FormatterRegressionTests:test305()
18862=FormatterRegressionTests:test558()
18863=FormatterRegressionTests:test095()
18864=FormatterRegressionTests:test282()
18865=FormatterRegressionTests:test741()
18866=FormatterRegressionTests:test403()
18867=FormatterRegressionTests:test449()
18868=FormatterRegressionTests:test632()
18869=FormatterRegressionTests:test678()
18870=FormatterRegressionTests:runTest(CodeFormatter, String, String, int, boolean)
18871=FormatterRegressionTests:test218()
18872=FormatterRegressionTests:test501()
18873=FormatterRegressionTests:test547()
18874=FormatterRegressionTests:test776()
18875=FormatterRegressionTests:test184()
18876=FormatterRegressionTests:test316()
18877=FormatterRegressionTests:test084()
18878=FormatterRegressionTests:test293()
18879=FormatterRegressionTests:test645()
18880=FormatterRegressionTests:test436()
18881=FormatterRegressionTests:test229()
18882=FormatterRegressionTests:test743()
18883=FormatterRegressionTests:test534()
18884=FormatterRegressionTests:test195()
18885=FormatterRegressionTests:test327()
18886=FormatterRegressionTests:_test186()
18887=FormatterRegressionTests:test073()
18888=FormatterRegressionTests:test610()
18889=FormatterRegressionTests:test656()
18890=FormatterRegressionTests:test425()
18891=FormatterRegressionTests:test160()
18892=FormatterRegressionTests:test009()
18893=FormatterRegressionTests:test391()
18894=FormatterRegressionTests:test697b()
18895=FormatterRegressionTests:test754()
18896=FormatterRegressionTests:test523()
18897=FormatterRegressionTests:test338()
18898=FormatterRegressionTests:test569()
18899=FormatterRegressionTests:test416()
18900=FormatterRegressionTests:test209()
18901=FormatterRegressionTests:test273()
18902=FormatterRegressionTests:test623()
18903=FormatterRegressionTests:testBug405038_5()
18904=FormatterRegressionTests:test020()
18905=FormatterRegressionTests:test066()
18906=FormatterRegressionTests:test669()
18907=FormatterRegressionTests:testBug370540k()
18908=FormatterRegressionTests:formatSource(String, String, boolean)
18909=FormatterRegressionTests:test721()
18910=FormatterRegressionTests:test307()
18911=FormatterRegressionTests:test480()
18912=FormatterRegressionTests:test382()
18913=FormatterRegressionTests:test514()
18914=FormatterRegressionTests:test767()
18915=FormatterRegressionTests:test175()
18916=FormatterRegressionTests:test284()
18917=FormatterRegressionTests:test634()
18918=FormatterRegressionTests:test055()
18919=FormatterRegressionTests:test405()
18920=FormatterRegressionTests:test732()
18921=FormatterRegressionTests:test371()
18922=FormatterRegressionTests:test503()
18923=FormatterRegressionTests:test778()
18924=FormatterRegressionTests:test140()
18925=FormatterRegressionTests:test318()
18926=FormatterRegressionTests:test549()
18927=FormatterRegressionTests:test438()
18928=FormatterRegressionTests:test295()
18929=FormatterRegressionTests:test601()
18930=FormatterRegressionTests:testBug118264f()
18931=FormatterRegressionTests:test647()
18932=FormatterRegressionTests:test044()
18933=FormatterRegressionTests:test536()
18934=FormatterRegressionTests:test151()
18935=FormatterRegressionTests:test329()
18936=FormatterRegressionTests:test745()
18937=FormatterRegressionTests:testBug432628c()
18938=FormatterRegressionTests:test197()
18939=FormatterRegressionTests:test260()
18940=FormatterRegressionTests:test427()
18941=FormatterRegressionTests:test612()
18942=FormatterRegressionTests:test079()
18943=FormatterRegressionTests:test169b()
18944=FormatterRegressionTests:test658()
18945=FormatterRegressionTests:test033()
18946=FormatterRegressionTests:test710()
18947=FormatterRegressionTests:_test384()
18948=FormatterRegressionTests:test393()
18949=FormatterRegressionTests:test525()
18950=FormatterRegressionTests:test756()
18951=FormatterRegressionTests:test162()
18952=FormatterRegressionTests:test580()
18953=FormatterRegressionTests:test275()
18954=FormatterRegressionTests:test418()
18955=FormatterRegressionTests:test625()
18956=FormatterRegressionTests:test064()
18957=FormatterRegressionTests:test723()
18958=FormatterRegressionTests:test482()
18959=FormatterRegressionTests:test131()
18960=FormatterRegressionTests:test177()
18961=FormatterRegressionTests:test170b()
18962=FormatterRegressionTests:test309()
18963=FormatterRegressionTests:test769()
18964=FormatterRegressionTests:formatSource(String, String)
18965=FormatterRegressionTests:testBug370540i()
18966=FormatterRegressionTests:test516()
18967=FormatterRegressionTests:test240()
18968=FormatterRegressionTests:test286()
18969=FormatterRegressionTests:test053()
18970=FormatterRegressionTests:test099()
18971=FormatterRegressionTests:test407()
18972=FormatterRegressionTests:test636()
18973=FormatterRegressionTests:test734()
18974=FormatterRegressionTests:test471()
18975=FormatterRegressionTests:test142()
18976=FormatterRegressionTests:test188()
18977=FormatterRegressionTests:test373()
18978=FormatterRegressionTests:runTest(CodeFormatter, String, String)
18979=FormatterRegressionTests:test505()
18980=FormatterRegressionTests:test251()
18981=FormatterRegressionTests:test297()
18982=FormatterRegressionTests:test042()
18983=FormatterRegressionTests:test088()
18984=FormatterRegressionTests:test649()
18985=FormatterRegressionTests:test701()
18986=FormatterRegressionTests:test360()
18987=FormatterRegressionTests:test153()
18988=FormatterRegressionTests:test199()
18989=FormatterRegressionTests:test694a()
18990=FormatterRegressionTests:test747()
18991=FormatterRegressionTests:test538()
18992=FormatterRegressionTests:formatSource(String, String, int)
18993=FormatterRegressionTests:test591()
18994=FormatterRegressionTests:test493()
18995=FormatterRegressionTests:test429()
18996=FormatterRegressionTests:test262()
18997=FormatterRegressionTests:test614()
18998=FormatterRegressionTests:test031()
18999=FormatterRegressionTests:test077()
19000=FormatterRegressionTests:test712()
19001=FormatterRegressionTests:test395()
19002=FormatterRegressionTests:test758()
19003=FormatterRegressionTests:test164()
19004=FormatterRegressionTests:test527()
19005=FormatterRegressionTests:test047()
19006=FormatterRegressionTests:test254()
19007=FormatterRegressionTests:test001()
19008=FormatterRegressionTests:test702()
19009=FormatterRegressionTests:test461()
19010=FormatterRegressionTests:testBug118264c()
19011=FormatterRegressionTests:getSource(ASTNode, char[])
19012=FormatterRegressionTests:test110()
19013=FormatterRegressionTests:test363()
19014=FormatterRegressionTests:testBug370540g()
19015=FormatterRegressionTests:test156()
19016=FormatterRegressionTests:test748()
19017=FormatterRegressionTests:test594()
19018=FormatterRegressionTests:test036()
19019=FormatterRegressionTests:test337b()
19020=FormatterRegressionTests:test496()
19021=FormatterRegressionTests:test615()
19022=FormatterRegressionTests:test265()
19023=FormatterRegressionTests:test713()
19024=FormatterRegressionTests:test450()
19025=FormatterRegressionTests:_test419()
19026=FormatterRegressionTests:test121()
19027=FormatterRegressionTests:test167()
19028=FormatterRegressionTests:test352()
19029=FormatterRegressionTests:test398()
19030=FormatterRegressionTests:test759()
19031=FormatterRegressionTests:test581()
19032=FormatterRegressionTests:test025()
19033=FormatterRegressionTests:test230()
19034=FormatterRegressionTests:test276()
19035=FormatterRegressionTests:test628()
19036=FormatterRegressionTests:test726()
19037=FormatterRegressionTests:testBug405038_2()
19038=FormatterRegressionTests:testBug465910()
19039=FormatterRegressionTests:test483()
19040=FormatterRegressionTests:test692()
19041=FormatterRegressionTests:test132()
19042=FormatterRegressionTests:test178()
19043=FormatterRegressionTests:test385()
19044=FormatterRegressionTests:test517()
19045=FormatterRegressionTests:test570()
19046=FormatterRegressionTests:test014()
19047=FormatterRegressionTests:test408()
19048=FormatterRegressionTests:test639()
19049=FormatterRegressionTests:test287()
19050=FormatterRegressionTests:test737()
19051=FormatterRegressionTests:test049()
19052=FormatterRegressionTests:test472()
19053=FormatterRegressionTests:test143()
19054=FormatterRegressionTests:test189()
19055=FormatterRegressionTests:test374()
19056=FormatterRegressionTests:test506()
19057=FormatterRegressionTests:setFormatterOptions80()
19058=FormatterRegressionTests:test561()
19059=FormatterRegressionTests:test045()
19060=FormatterRegressionTests:testBug118264e()
19061=FormatterRegressionTests:test210()
19062=FormatterRegressionTests:test256()
19063=FormatterRegressionTests:test606()
19064=FormatterRegressionTests:test704()
19065=FormatterRegressionTests:test670()
19066=FormatterRegressionTests:test463()
19067=FormatterRegressionTests:testBug370540e()
19068=FormatterRegressionTests:test158()
19069=FormatterRegressionTests:test365()
19070=FormatterRegressionTests:test112()
19071=FormatterRegressionTests:test596()
19072=FormatterRegressionTests:test550()
19073=FormatterRegressionTests:test034()
19074=FormatterRegressionTests:test221()
19075=FormatterRegressionTests:test267()
19076=FormatterRegressionTests:test167b()
19077=FormatterRegressionTests:test498()
19078=FormatterRegressionTests:test617()
19079=FormatterRegressionTests:test715()
19080=FormatterRegressionTests:test681()
19081=FormatterRegressionTests:test452()
19082=FormatterRegressionTests:test169()
19083=FormatterRegressionTests:test354()
19084=FormatterRegressionTests:test123()
19085=FormatterRegressionTests:test330()
19086=FormatterRegressionTests:test583()
19087=FormatterRegressionTests:test023()
19088=FormatterRegressionTests:test069()
19089=FormatterRegressionTests:testBug405038_4()
19090=FormatterRegressionTests:test278()
19091=FormatterRegressionTests:test232()
19092=FormatterRegressionTests:testBug432593()
19093=FormatterRegressionTests:test519()
19094=FormatterRegressionTests:test485()
19095=FormatterRegressionTests:testBug432628a()
19096=FormatterRegressionTests:test134()
19097=FormatterRegressionTests:test728()
19098=FormatterRegressionTests:test341()
19099=FormatterRegressionTests:test572()
19100=FormatterRegressionTests:test058()
19101=FormatterRegressionTests:test289()
19102=FormatterRegressionTests:test012()
19103=FormatterRegressionTests:testBug325631()
19104=FormatterRegressionTests:test508()
19105=FormatterRegressionTests:test474()
19106=FormatterRegressionTests:test376()
19107=FormatterRegressionTests:test145()
19108=FormatterRegressionTests:test739()
19109=FormatterRegressionTests:test563()
19110=FormatterRegressionTests:test608()
19111=FormatterRegressionTests:test149()
19112=FormatterRegressionTests:test770()
19113=FormatterRegressionTests:test310()
19114=FormatterRegressionTests:testBug384959f()
19115=FormatterRegressionTests:test212()
19116=FormatterRegressionTests:testBug479109b()
19117=FormatterRegressionTests:test465()
19118=FormatterRegressionTests:test247()
19119=FormatterRegressionTests:test672()
19120=FormatterRegressionTests:testBug370540c()
19121=FormatterRegressionTests:test114()
19122=FormatterRegressionTests:test706()
19123=FormatterRegressionTests:test367()
19124=FormatterRegressionTests:test552()
19125=FormatterRegressionTests:test598()
19126=FormatterRegressionTests:test619()
19127=FormatterRegressionTests:test093()
19128=FormatterRegressionTests:test781()
19129=FormatterRegressionTests:test321()
19130=FormatterRegressionTests:test223()
19131=FormatterRegressionTests:test489()
19132=FormatterRegressionTests:test454()
19133=FormatterRegressionTests:test258()
19134=FormatterRegressionTests:test029()
19135=FormatterRegressionTests:test125()
19136=FormatterRegressionTests:test717()
19137=FormatterRegressionTests:test356()
19138=FormatterRegressionTests:test585()
19139=FormatterRegressionTests:test082()
19140=FormatterRegressionTests:test332()
19141=FormatterRegressionTests:test234()
19142=FormatterRegressionTests:test441()
19143=FormatterRegressionTests:test487()
19144=FormatterRegressionTests:test269()
19145=FormatterRegressionTests:test018()
19146=FormatterRegressionTests:test650()
19147=FormatterRegressionTests:getResource(String, String)
19148=FormatterRegressionTests:test136()
19149=FormatterRegressionTests:test455b()
19150=FormatterRegressionTests:test389()
19151=FormatterRegressionTests:test574()
19152=FormatterRegressionTests:test343()
19153=FormatterRegressionTests:test071()
19154=FormatterRegressionTests:test245()
19155=FormatterRegressionTests:test007()
19156=FormatterRegressionTests:test430()
19157=FormatterRegressionTests:test476()
19158=FormatterRegressionTests:test661()
19159=FormatterRegressionTests:test101()
19160=FormatterRegressionTests:test147()
19161=FormatterRegressionTests:test378()
19162=FormatterRegressionTests:test105()
19163=FormatterRegressionTests:test312()
19164=FormatterRegressionTests:test358()
19165=FormatterRegressionTests:test772()
19166=FormatterRegressionTests:test688b()
19167=FormatterRegressionTests:test003()
19168=FormatterRegressionTests:testBug479109d()
19169=FormatterRegressionTests:test456()
19170=FormatterRegressionTests:test203()
19171=FormatterRegressionTests:test421()
19172=FormatterRegressionTests:test249()
19173=FormatterRegressionTests:test038()
19174=FormatterRegressionTests:test674()
19175=FormatterRegressionTests:testBug118264a()
19176=FormatterRegressionTests:test708()
19177=FormatterRegressionTests:test347()
19178=FormatterRegressionTests:test323()
19179=FormatterRegressionTests:test116()
19180=FormatterRegressionTests:test554()
19181=FormatterRegressionTests:testBug488642b()
19182=FormatterRegressionTests:test091()
19183=FormatterRegressionTests:test783()
19184=FormatterRegressionTests:test445()
19185=FormatterRegressionTests:runTest(CodeFormatter, String, String, int, int)
19186=FormatterRegressionTests:test214()
19187=FormatterRegressionTests:test180()
19188=FormatterRegressionTests:test410()
19189=FormatterRegressionTests:test027()
19190=FormatterRegressionTests:test685()
19191=FormatterRegressionTests:test589()
19192=FormatterRegressionTests:test719()
19193=FormatterRegressionTests:test334()
19194=FormatterRegressionTests:test587()
19195=FormatterRegressionTests:test127()
19196=FormatterRegressionTests:test080()
19197=FormatterRegressionTests:test750()
19198=FormatterRegressionTests:test541()
19199=FormatterRegressionTests:_test677()
19200=FormatterRegressionTests:testBug370540r()
19201=FormatterRegressionTests:test687()
19202=FormatterRegressionTests:test478()
19203=FormatterRegressionTests:test225()
19204=FormatterRegressionTests:test191()
19205=FormatterRegressionTests:test443()
19206=FormatterRegressionTests:test016()
19207=FormatterRegressionTests:test652()
19208=FormatterRegressionTests:test345()
19209=FormatterRegressionTests:test369()
19210=FormatterRegressionTests:test138()
19211=FormatterRegressionTests:test576()
19212=FormatterRegressionTests:runTest(CodeFormatter, String, String, int, int, boolean, IRegion[], String)
19213=FormatterRegressionTests:test761()
19214=FormatterRegressionTests:test530()
19215=FormatterRegressionTests:testBug370540a()
19216=FormatterRegressionTests:test467()
19217=FormatterRegressionTests:runTest(String, String, CodeFormatter, int, int, boolean, int, int)
19218=FormatterRegressionTests:test201()
19219=FormatterRegressionTests:test236()
19220=FormatterRegressionTests:test005()
19221=FormatterRegressionTests:test432()
19222=FormatterRegressionTests:test663()
19223=FormatterRegressionTests:test103()
19224=FormatterRegressionTests:test292()
19225=FormatterRegressionTests:test751()
19226=FormatterRegressionTests:test435()
19227=FormatterRegressionTests:test085()
19228=FormatterRegressionTests:test194()
19229=FormatterRegressionTests:test228()
19230=FormatterRegressionTests:test400()
19231=FormatterRegressionTests:test653()
19232=FormatterRegressionTests:test533()
19233=FormatterRegressionTests:test326()
19234=FormatterRegressionTests:test579()
19235=FormatterRegressionTests:test762()
19236=FormatterRegressionTests:test424()
19237=FormatterRegressionTests:test699()
19238=FormatterRegressionTests:test074()
19239=FormatterRegressionTests:test239()
19240=FormatterRegressionTests:setPageWidth80()
19241=FormatterRegressionTests:test390()
19242=FormatterRegressionTests:test664()
19243=FormatterRegressionTests:test697a()
19244=FormatterRegressionTests:test522()
19245=FormatterRegressionTests:test337()
19246=FormatterRegressionTests:test568()
19247=FormatterRegressionTests:test359()
19248=FormatterRegressionTests:test106()
19249=FormatterRegressionTests:test520()
19250=FormatterRegressionTests:test666()
19251=FormatterRegressionTests:_test675()
19252=FormatterRegressionTests:test063()
19253=FormatterRegressionTests:test204()
19254=FormatterRegressionTests:testBug384959a()
19255=FormatterRegressionTests:test457()
19256=FormatterRegressionTests:test170()
19257=FormatterRegressionTests:test422()
19258=FormatterRegressionTests:test631()
19259=FormatterRegressionTests:testBug405038()
19260=FormatterRegressionTests:testBug370540p()
19261=FormatterRegressionTests:test764()
19262=FormatterRegressionTests:test555()
19263=FormatterRegressionTests:test302()
19264=FormatterRegressionTests:test348()
19265=FormatterRegressionTests:codeFormatter()
19266=FormatterRegressionTests:test117()
19267=FormatterRegressionTests:test740()
19268=FormatterRegressionTests:test446()
19269=FormatterRegressionTests:test052()
19270=FormatterRegressionTests:test098()
19271=FormatterRegressionTests:test181()
19272=FormatterRegressionTests:test215()
19273=FormatterRegressionTests:test411()
19274=FormatterRegressionTests:test642()
19275=FormatterRegressionTests:test775()
19276=FormatterRegressionTests:test544()
19277=FormatterRegressionTests:test313()
19278=FormatterRegressionTests:test083()
19279=FormatterRegressionTests:test644()
19280=FormatterRegressionTests:test294()
19281=FormatterRegressionTests:formatSource(String, String, int, int, boolean)
19282=FormatterRegressionTests:test437()
19283=FormatterRegressionTests:test150()
19284=FormatterRegressionTests:test019()
19285=FormatterRegressionTests:test742()
19286=FormatterRegressionTests:test535()
19287=FormatterRegressionTests:test328()
19288=FormatterRegressionTests:test196()
19289=FormatterRegressionTests:test072()
19290=FormatterRegressionTests:testBug485495()
19291=FormatterRegressionTests:test655()
19292=FormatterRegressionTests:test426()
19293=FormatterRegressionTests:test008()
19294=FormatterRegressionTests:test161()
19295=FormatterRegressionTests:test392()
19296=FormatterRegressionTests:test620()
19297=FormatterRegressionTests:test524()
19298=FormatterRegressionTests:test753()
19299=FormatterRegressionTests:test490()
19300=FormatterRegressionTests:test339()
19301=FormatterRegressionTests:runTest(CodeFormatter, String, String, int, int, boolean, int, int)
19302=FormatterRegressionTests:test061()
19303=FormatterRegressionTests:testBug384959c()
19304=FormatterRegressionTests:_test420()
19305=FormatterRegressionTests:test270()
19306=FormatterRegressionTests:testBug477476a()
19307=FormatterRegressionTests:test108()
19308=FormatterRegressionTests:test622()
19309=FormatterRegressionTests:test668()
19310=FormatterRegressionTests:test206()
19311=FormatterRegressionTests:test413()
19312=FormatterRegressionTests:test459()
19313=FormatterRegressionTests:test172()
19314=FormatterRegressionTests:testBug370540n()
19315=FormatterRegressionTests:test720()
19316=FormatterRegressionTests:test511()
19317=FormatterRegressionTests:test766()
19318=FormatterRegressionTests:test557()
19319=FormatterRegressionTests:test304()
19320=FormatterRegressionTests:test050()
19321=FormatterRegressionTests:test281()
19322=FormatterRegressionTests:test119()
19323=FormatterRegressionTests:test767a()
19324=FormatterRegressionTests:test633()
19325=FormatterRegressionTests:test679()
19326=FormatterRegressionTests:test402()
19327=FormatterRegressionTests:test448()
19328=FormatterRegressionTests:test096()
19329=FormatterRegressionTests:test183()
19330=FormatterRegressionTests:test217()
19331=FormatterRegressionTests:test731()
19332=FormatterRegressionTests:test500()
19333=FormatterRegressionTests:test546()
19334=FormatterRegressionTests:test777()
19335=FormatterRegressionTests:test315()
19336=FormatterRegressionTests:runTest(CodeFormatter, String, String, int)
19337=FormatterRegressionTests:test439()
19338=FormatterRegressionTests:test250()
19339=FormatterRegressionTests:test296()
19340=FormatterRegressionTests:test600()
19341=FormatterRegressionTests:test646()
19342=FormatterRegressionTests:test089()
19343=FormatterRegressionTests:test043()
19344=FormatterRegressionTests:tearDownSuite()
19345=FormatterRegressionTests:test152()
19346=FormatterRegressionTests:test744()
19347=FormatterRegressionTests:test198()
19348=FormatterRegressionTests:test537()
19349=FormatterRegressionTests:testBug432628d()
19350=FormatterRegressionTests:test492()
19351=FormatterRegressionTests:test428()
19352=FormatterRegressionTests:test590()
19353=FormatterRegressionTests:test611()
19354=FormatterRegressionTests:test657()
19355=FormatterRegressionTests:test078()
19356=FormatterRegressionTests:test261()
19357=FormatterRegressionTests:test032()
19358=FormatterRegressionTests:test394()
19359=FormatterRegressionTests:test755()
19360=FormatterRegressionTests:test163()
19361=FormatterRegressionTests:test526()
19362=FormatterRegressionTests:test067()
19363=FormatterRegressionTests:test208()
19364=FormatterRegressionTests:test272()
19365=FormatterRegressionTests:test624()
19366=FormatterRegressionTests:test021()
19367=FormatterRegressionTests:test415()
19368=FormatterRegressionTests:testBug370540l()
19369=FormatterRegressionTests:test722()
19370=FormatterRegressionTests:test381()
19371=FormatterRegressionTests:test513()
19372=FormatterRegressionTests:test559()
19373=FormatterRegressionTests:test306()
19374=FormatterRegressionTests:test696b()
19375=FormatterRegressionTests:test174()
19376=FormatterRegressionTests:test768()
19377=FormatterRegressionTests:test404()
19378=FormatterRegressionTests:test010()
19379=FormatterRegressionTests:test056()
19380=FormatterRegressionTests:test635()
19381=FormatterRegressionTests:test283()
19382=FormatterRegressionTests:test219()
19383=FormatterRegressionTests:test733()
19384=FormatterRegressionTests:test370()
19385=FormatterRegressionTests:test502()
19386=FormatterRegressionTests:test317()
19387=FormatterRegressionTests:test185()
19388=FormatterRegressionTests:test779()
19389=FormatterRegressionTests:test548()
19390=FormatterRegressionTests:test252()
19391=FormatterRegressionTests:testBug379793()
19392=FormatterRegressionTests:test041()
19393=FormatterRegressionTests:test087()
19394=FormatterRegressionTests:test298()
19395=FormatterRegressionTests:test648()
19396=FormatterRegressionTests:test694b()
19397=FormatterRegressionTests:test700()
19398=FormatterRegressionTests:test154()
19399=FormatterRegressionTests:test361()
19400=FormatterRegressionTests:test746()
19401=FormatterRegressionTests:test539()
19402=FormatterRegressionTests:test592()
19403=FormatterRegressionTests:test263()
19404=FormatterRegressionTests:test494()
19405=FormatterRegressionTests:test613()
19406=FormatterRegressionTests:test030()
19407=FormatterRegressionTests:test076()
19408=FormatterRegressionTests:test659()
19409=FormatterRegressionTests:setComplianceLevel(String)
19410=FormatterRegressionTests:test711()
19411=FormatterRegressionTests:test350()
19412=FormatterRegressionTests:test396()
19413=FormatterRegressionTests:test757()
19414=FormatterRegressionTests:test528()
19415=FormatterRegressionTests:test165()
19416=FormatterRegressionTests:test274()
19417=FormatterRegressionTests:test417()
19418=FormatterRegressionTests:test065()
19419=FormatterRegressionTests:test626()
19420=FormatterRegressionTests:testBug370540j()
19421=FormatterRegressionTests:test724()
19422=FormatterRegressionTests:test690()
19423=FormatterRegressionTests:test481()
19424=FormatterRegressionTests:test383()
19425=FormatterRegressionTests:test130()
19426=FormatterRegressionTests:test308()
19427=FormatterRegressionTests:test515()
19428=FormatterRegressionTests:test176()
19429=FormatterRegressionTests:test285()
19430=FormatterRegressionTests:test637()
19431=FormatterRegressionTests:test406()
19432=FormatterRegressionTests:test054()
19433=FormatterRegressionTests:test735()
19434=FormatterRegressionTests:test470()
19435=FormatterRegressionTests:test319()
19436=FormatterRegressionTests:test372()
19437=FormatterRegressionTests:test141()
19438=FormatterRegressionTests:test187()
19439=FormatterRegressionTests:test504()
19440=FormatterRegressionTests:test582()
19441=FormatterRegressionTests:test024()
19442=FormatterRegressionTests:test231()
19443=FormatterRegressionTests:test277()
19444=FormatterRegressionTests:test627()
19445=FormatterRegressionTests:test725()
19446=FormatterRegressionTests:test484()
19447=FormatterRegressionTests:test691()
19448=FormatterRegressionTests:test179()
19449=FormatterRegressionTests:test386()
19450=FormatterRegressionTests:test518()
19451=FormatterRegressionTests:test133()
19452=FormatterRegressionTests:test409()
19453=FormatterRegressionTests:test340()
19454=FormatterRegressionTests:test571()
19455=FormatterRegressionTests:test013()
19456=FormatterRegressionTests:test059()
19457=FormatterRegressionTests:test242()
19458=FormatterRegressionTests:runTest(String, String)
19459=FormatterRegressionTests:test288()
19460=FormatterRegressionTests:test638()
19461=FormatterRegressionTests:test736()
19462=FormatterRegressionTests:test473()
19463=FormatterRegressionTests:_test387()
19464=FormatterRegressionTests:test375()
19465=FormatterRegressionTests:test507()
19466=FormatterRegressionTests:test144()
19467=FormatterRegressionTests:test253()
19468=FormatterRegressionTests:test048()
19469=FormatterRegressionTests:test002()
19470=FormatterRegressionTests:test299()
19471=FormatterRegressionTests:test605()
19472=FormatterRegressionTests:test703()
19473=FormatterRegressionTests:test460()
19474=FormatterRegressionTests:testBug118264b()
19475=FormatterRegressionTests:setUpSuite()
19476=FormatterRegressionTests:test362()
19477=FormatterRegressionTests:test155()
19478=FormatterRegressionTests:test749()
19479=FormatterRegressionTests:testBug370540h()
19480=FormatterRegressionTests:testBug488642a()
19481=FormatterRegressionTests:test593()
19482=FormatterRegressionTests:test090()
19483=FormatterRegressionTests:test264()
19484=FormatterRegressionTests:test037()
19485=FormatterRegressionTests:test495()
19486=FormatterRegressionTests:test616()
19487=FormatterRegressionTests:test680()
19488=FormatterRegressionTests:test714()
19489=FormatterRegressionTests:test120()
19490=FormatterRegressionTests:test166()
19491=FormatterRegressionTests:test351()
19492=FormatterRegressionTests:testBug467229()
19493=FormatterRegressionTests:getOut(String)
19494=FormatterRegressionTests:test529()
19495=FormatterRegressionTests:test397()
19496=FormatterRegressionTests:test584()
19497=FormatterRegressionTests:test629()
19498=FormatterRegressionTests:test331()
19499=FormatterRegressionTests:test068()
19500=FormatterRegressionTests:test233()
19501=FormatterRegressionTests:test279()
19502=FormatterRegressionTests:test022()
19503=FormatterRegressionTests:test727()
19504=FormatterRegressionTests:test486()
19505=FormatterRegressionTests:testBug405038_3()
19506=FormatterRegressionTests:test440()
19507=FormatterRegressionTests:test693()
19508=FormatterRegressionTests:test135()
19509=FormatterRegressionTests:testBug432628b()
19510=FormatterRegressionTests:test388()
19511=FormatterRegressionTests:assertLineEquals(String, String, String)
19512=FormatterRegressionTests:test573()
19513=FormatterRegressionTests:test342()
19514=FormatterRegressionTests:test011()
19515=FormatterRegressionTests:test057()
19516=FormatterRegressionTests:test244()
19517=FormatterRegressionTests:test738()
19518=FormatterRegressionTests:test475()
19519=FormatterRegressionTests:test509()
19520=FormatterRegressionTests:test100()
19521=FormatterRegressionTests:test146()
19522=FormatterRegressionTests:test377()
19523=FormatterRegressionTests:test607()
19524=FormatterRegressionTests:runTest(String, String, int)
19525=FormatterRegressionTests:test560()
19526=FormatterRegressionTests:test046()
19527=FormatterRegressionTests:test255()
19528=FormatterRegressionTests:test671()
19529=FormatterRegressionTests:test705()
19530=FormatterRegressionTests:test462()
19531=FormatterRegressionTests:testBug118264d()
19532=FormatterRegressionTests:test364()
19533=FormatterRegressionTests:test157()
19534=FormatterRegressionTests:testBug370540f()
19535=FormatterRegressionTests:test111()
19536=FormatterRegressionTests:test618()
19537=FormatterRegressionTests:test595()
19538=FormatterRegressionTests:test780()
19539=FormatterRegressionTests:runTest(String, String, CodeFormatter, int, int, boolean, int, int, String)
19540=FormatterRegressionTests:test035()
19541=FormatterRegressionTests:test220()
19542=FormatterRegressionTests:runTest(CodeFormatter, String, String, int, int, boolean, int, int, String)
19543=FormatterRegressionTests:test497()
19544=FormatterRegressionTests:test266()
19545=FormatterRegressionTests:test716()
19546=FormatterRegressionTests:test451()
19547=FormatterRegressionTests:test353()
19548=FormatterRegressionTests:test399()
19549=FormatterRegressionTests:test122()
19550=FormatterRegressionTests:test333()
19551=FormatterRegressionTests:test379()
19552=FormatterRegressionTests:test126()
19553=FormatterRegressionTests:test081()
19554=FormatterRegressionTests:test586()
19555=FormatterRegressionTests:test540()
19556=FormatterRegressionTests:testBug370540s()
19557=FormatterRegressionTests:test235()
19558=FormatterRegressionTests:test442()
19559=FormatterRegressionTests:test488()
19560=FormatterRegressionTests:test695()
19561=FormatterRegressionTests:test017()
19562=FormatterRegressionTests:test190()
19563=FormatterRegressionTests:test729()
19564=FormatterRegressionTests:test368()
19565=FormatterRegressionTests:test344()
19566=FormatterRegressionTests:test070()
19567=FormatterRegressionTests:test137()
19568=FormatterRegressionTests:test575()
19569=FormatterRegressionTests:_test491()
19570=FormatterRegressionTests:test246()
19571=FormatterRegressionTests:test431()
19572=FormatterRegressionTests:test477()
19573=FormatterRegressionTests:test660()
19574=FormatterRegressionTests:test006()
19575=FormatterRegressionTests:test102()
19576=FormatterRegressionTests:test562()
19577=FormatterRegressionTests:test609()
19578=FormatterRegressionTests:testBug384959e()
19579=FormatterRegressionTests:test148()
19580=FormatterRegressionTests:test771()
19581=FormatterRegressionTests:runFormatter(CodeFormatter, String, int, int, IRegion[], String)
19582=FormatterRegressionTests:test211()
19583=FormatterRegressionTests:test257()
19584=FormatterRegressionTests:testBug479109a()
19585=FormatterRegressionTests:assertLineEquals(String, String, String, boolean)
19586=FormatterRegressionTests:test464()
19587=FormatterRegressionTests:test673()
19588=FormatterRegressionTests:getZipEntryContents(String, String)
19589=FormatterRegressionTests:testBug370540d()
19590=FormatterRegressionTests:test113()
19591=FormatterRegressionTests:test366()
19592=FormatterRegressionTests:test707()
19593=FormatterRegressionTests:test551()
19594=FormatterRegressionTests:test597()
19595=FormatterRegressionTests:test094()
19596=FormatterRegressionTests:test320()
19597=FormatterRegressionTests:test159()
19598=FormatterRegressionTests:test782()
19599=FormatterRegressionTests:suite()
19600=FormatterRegressionTests:test222()
19601=FormatterRegressionTests:test268()
19602=FormatterRegressionTests:test499()
19603=FormatterRegressionTests:test453()
19604=FormatterRegressionTests:test124()
19605=FormatterRegressionTests:test355()
19606=FormatterRegressionTests:test718()
19607=FormatterRegressionTests:test128()
19608=FormatterRegressionTests:test542()
19609=FormatterRegressionTests:test290()
19610=FormatterRegressionTests:test026()
19611=FormatterRegressionTests:test479()
19612=FormatterRegressionTests:test192()
19613=FormatterRegressionTests:test226()
19614=FormatterRegressionTests:test444()
19615=FormatterRegressionTests:testBug370540q()
19616=FormatterRegressionTests:test651()
19617=FormatterRegressionTests:runFormatter(CodeFormatter, String, int, int, int, int, String, boolean)
19618=FormatterRegressionTests:test577()
19619=FormatterRegressionTests:test324()
19620=FormatterRegressionTests:test139()
19621=FormatterRegressionTests:test300()
19622=FormatterRegressionTests:test760()
19623=FormatterRegressionTests:test531()
19624=FormatterRegressionTests:test015()
19625=FormatterRegressionTests:test468()
19626=FormatterRegressionTests:test202()
19627=FormatterRegressionTests:test237()
19628=FormatterRegressionTests:test433()
19629=FormatterRegressionTests:test662()
19630=FormatterRegressionTests:test026b()
19631=FormatterRegressionTests:test527b()
19632=FormatterRegressionTests:test566()
19633=FormatterRegressionTests:test335()
19634=FormatterRegressionTests:test311()
19635=FormatterRegressionTests:test357()
19636=FormatterRegressionTests:test104()
19637=FormatterRegressionTests:test564()
19638=FormatterRegressionTests:testBug384959g()
19639=FormatterRegressionTests:test773()
19640=FormatterRegressionTests:setUp()
19641=FormatterRegressionTests:test004()
19642=FormatterRegressionTests:testBug479109c()
19643=FormatterRegressionTests:test688a()
19644=FormatterRegressionTests:test213()
19645=FormatterRegressionTests:test248()
19646=FormatterRegressionTests:test466()
19647=FormatterRegressionTests:test039()
19648=FormatterRegressionTests:testBug486719()
19649=FormatterRegressionTests:testBug370540b()
19650=FormatterRegressionTests:test709()
19651=FormatterRegressionTests:test599()
19652=FormatterRegressionTests:test322()
19653=FormatterRegressionTests:test115()
19654=FormatterRegressionTests:test553()
19655=FormatterRegressionTests:test092()
19656=FormatterRegressionTests:test224()
19657=FormatterRegressionTests:getIn(String)
19658=FormatterRegressionTests:test455()
19659=FormatterRegressionTests:test259()
19660=FormatterRegressionTests:test640()
19661=FormatterRegressionTests:test686()
19662=FormatterRegressionTests:test028()
19663=FormatterRegressionTests:test588()
19664=Annotation:Annotation(byte[], IConstantPool, int)
19665=Annotation:getComponentsNumber()
19666=Annotation:getComponents()
19667=Annotation:getTypeIndex()
19668=Annotation:getTypeName()
19669=Annotation:sizeInBytes()
19670=Test:foo()
19671=Evaluator:getSource()
19672=Evaluator:getCompiler(ICompilerRequestor)
19673=Evaluator:getClassName()
19674=Evaluator:Evaluator(EvaluationContext, INameEnvironment, Map<String, String>, IRequestor, IProblemFactory)
19675=Evaluator:addEvaluationResultForCompilationProblem(Map<char[], EvaluationResult>, CategorizedProblem, char[])
19676=Evaluator:getClasses()
19677=Evaluator:evaluationResultsForCompilationProblems(CompilationResult, char[])
19678=IBuffer:save(IProgressMonitor, boolean)
19679=IBuffer:close()
19680=IBuffer:getContents()
19681=IBuffer:hasUnsavedChanges()
19682=IBuffer:append(char[])
19683=IBuffer:isClosed()
19684=IBuffer:setContents(String)
19685=IBuffer:getChar(int)
19686=IBuffer:addBufferChangedListener(IBufferChangedListener)
19687=IBuffer:getCharacters()
19688=IBuffer:getUnderlyingResource()
19689=IBuffer:replace(int, int, char[])
19690=IBuffer:getLength()
19691=IBuffer:setContents(char[])
19692=IBuffer:isReadOnly()
19693=IBuffer:getOwner()
19694=IBuffer:append(String)
19695=IBuffer:replace(int, int, String)
19696=IBuffer:removeBufferChangedListener(IBufferChangedListener)
19697=IBuffer:getText(int, int)
19698=IBuffer:ITextEditCapability:applyTextEdit(TextEdit, IProgressMonitor)
19699=TypeParameterElementImpl:getBounds()
19700=TypeParameterElementImpl:TypeParameterElementImpl(BaseProcessingEnvImpl, TypeVariableBinding)
19701=TypeParameterElementImpl:getAnnotation(Class<A>)
19702=TypeParameterElementImpl:accept(ElementVisitor<R, P>, P)
19703=TypeParameterElementImpl:getPackage()
19704=TypeParameterElementImpl:getEnclosingElement()
19705=TypeParameterElementImpl:getKind()
19706=TypeParameterElementImpl:getGenericElement()
19707=TypeParameterElementImpl:getEnclosedElements()
19708=TypeParameterElementImpl:getAnnotationMirrors()
19709=TypeParameterElementImpl:shouldEmulateJavacBug()
19710=TypeParameterElementImpl:calculateBounds()
19711=TypeParameterElementImpl:TypeParameterElementImpl(BaseProcessingEnvImpl, TypeVariableBinding, Element)
19712=TypeParameterElementImpl:toString()
19713=TypeParameterElementImpl:getAnnotationsByType(Class<A>)
19714=TypeParameterElementImpl:getAnnotationBindings()
19715=WhileStatement:subtreeMatch0(ASTMatcher, Object)
19716=WhileStatement:accept0(ASTVisitor)
19717=WhileStatement:clone0(AST)
19718=WhileStatement:propertyDescriptors(int)
19719=WhileStatement:setBody(Statement)
19720=WhileStatement:internalStructuralPropertiesForType(int)
19721=WhileStatement:getBody()
19722=WhileStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
19723=WhileStatement:getExpression()
19724=WhileStatement:memSize()
19725=WhileStatement:treeSize()
19726=WhileStatement:WhileStatement(AST)
19727=WhileStatement:getNodeType0()
19728=WhileStatement:setExpression(Expression)
19729=A:foo(int)
19730=A:foo(Object, A)
19731=Test:foo()
19732=WkspJarFactoryContainer:getJarFile()
19733=WkspJarFactoryContainer:getType()
19734=WkspJarFactoryContainer:getId()
19735=WkspJarFactoryContainer:WkspJarFactoryContainer(IPath)
19736=Binding:isTaggedRepeatable()
19737=Binding:shortReadableName()
19738=Binding:initializeDeprecatedAnnotationTagBits()
19739=Binding:problemId()
19740=Binding:isVolatile()
19741=Binding:setAnnotations(AnnotationBinding[], Scope)
19742=Binding:isValidBinding()
19743=Binding:getAnnotations()
19744=Binding:computeUniqueKey(boolean)
19745=Binding:kind()
19746=Binding:isAnnotationType()
19747=Binding:readableName()
19748=Binding:isParameter()
19749=Binding:getAnnotationTagBits()
19750=Binding:setAnnotations(AnnotationBinding[])
19751=Binding:computeUniqueKey()
19752=X14c:foo()
19753=BootstrapMethodsEntry:getBootstrapMethodReference()
19754=BootstrapMethodsEntry:BootstrapMethodsEntry(byte, IConstantPool, int)
19755=BootstrapMethodsEntry:getBootstrapArguments()
19756=StackMapFrameCodeStream:addFramePosition(int)
19757=StackMapFrameCodeStream:init(ClassFile)
19758=StackMapFrameCodeStream:addVariable(LocalVariableBinding)
19759=StackMapFrameCodeStream:getStackMarkers()
19760=StackMapFrameCodeStream:recordExpressionType(TypeBinding)
19761=StackMapFrameCodeStream:resetInWideMode()
19762=StackMapFrameCodeStream:writePosition(BranchLabel)
19763=StackMapFrameCodeStream:StackDepthMarker:StackDepthMarker(int, int, TypeBinding)
19764=StackMapFrameCodeStream:writeSignedWord(int, int)
19765=StackMapFrameCodeStream:StackMarker:StackMarker(int, int)
19766=StackMapFrameCodeStream:addDefinitelyAssignedVariables(Scope, int)
19767=StackMapFrameCodeStream:resetSecretLocals()
19768=StackMapFrameCodeStream:addExceptionMarker(int, TypeBinding)
19769=StackMapFrameCodeStream:removeFramePosition(int)
19770=StackMapFrameCodeStream:popStateIndex()
19771=StackMapFrameCodeStream:resetForCodeGenUnusedLocals()
19772=StackMapFrameCodeStream:pushExceptionOnStack(TypeBinding)
19773=StackMapFrameCodeStream:ExceptionMarker:compareTo(Object)
19774=StackMapFrameCodeStream:dreturn()
19775=StackMapFrameCodeStream:getStackDepthMarkers()
19776=StackMapFrameCodeStream:ExceptionMarker:toString()
19777=StackMapFrameCodeStream:StackDepthMarker:toString()
19778=StackMapFrameCodeStream:generateOuterAccess(Object[], ASTNode, Binding, Scope)
19779=StackMapFrameCodeStream:goto_w(BranchLabel)
19780=StackMapFrameCodeStream:pushOnStack(TypeBinding)
19781=StackMapFrameCodeStream:generateClassLiteralAccessForType(TypeBinding, FieldBinding)
19782=StackMapFrameCodeStream:writePosition(BranchLabel, int)
19783=StackMapFrameCodeStream:ireturn()
19784=StackMapFrameCodeStream:athrow()
19785=StackMapFrameCodeStream:pushStateIndex(int)
19786=StackMapFrameCodeStream:StackDepthMarker:StackDepthMarker(int, int)
19787=StackMapFrameCodeStream:removeNotDefinitelyAssignedVariables(Scope, int)
19788=StackMapFrameCodeStream:StackMapFrameCodeStream(ClassFile)
19789=StackMapFrameCodeStream:getExceptionMarkers()
19790=StackMapFrameCodeStream:StackMarker:toString()
19791=StackMapFrameCodeStream:decrStackSize(int)
19792=StackMapFrameCodeStream:ExceptionMarker:ExceptionMarker(int, char[])
19793=StackMapFrameCodeStream:StackMarker:setInfos(VerificationTypeInfo[])
19794=StackMapFrameCodeStream:freturn()
19795=StackMapFrameCodeStream:initializeMaxLocals(MethodBinding)
19796=StackMapFrameCodeStream:areturn()
19797=StackMapFrameCodeStream:addStackDepthMarker(int, int, TypeBinding)
19798=StackMapFrameCodeStream:ExceptionMarker:equals(Object)
19799=StackMapFrameCodeStream:lreturn()
19800=StackMapFrameCodeStream:addStackMarker(int, int)
19801=StackMapFrameCodeStream:ExceptionMarker:hashCode()
19802=StackMapFrameCodeStream:writeWidePosition(BranchLabel)
19803=StackMapFrameCodeStream:getFramePositions()
19804=StackMapFrameCodeStream:hasFramePositions()
19805=StackMapFrameCodeStream:goto_(BranchLabel)
19806=StackMapFrameCodeStream:optimizeBranch(int, BranchLabel)
19807=StackMapFrameCodeStream:reset(ClassFile)
19808=StackMapFrameCodeStream:return_()
19809=X10:bar(String)
19810=X10:foo(String)
19811=StringLiteral:extendWith(StringLiteral)
19812=StringLiteral:source()
19813=StringLiteral:computeConstant()
19814=StringLiteral:extendsWith(StringLiteral)
19815=StringLiteral:printExpression(int, StringBuffer)
19816=StringLiteral:generateCode(BlockScope, CodeStream, boolean)
19817=StringLiteral:extendWith(CharLiteral)
19818=StringLiteral:literalType(BlockScope)
19819=StringLiteral:traverse(ASTVisitor, BlockScope)
19820=StringLiteral:StringLiteral(int, int)
19821=StringLiteral:StringLiteral(char[], int, int)
19822=IntersectionCastTypeReference:augmentTypeWithAdditionalDimensions(int, Annotation[][], boolean)
19823=IntersectionCastTypeReference:IntersectionCastTypeReference(TypeReference[])
19824=IntersectionCastTypeReference:printExpression(int, StringBuffer)
19825=IntersectionCastTypeReference:getLastToken()
19826=IntersectionCastTypeReference:resolveType(BlockScope, boolean, int)
19827=IntersectionCastTypeReference:getTypeName()
19828=IntersectionCastTypeReference:traverse(ASTVisitor, ClassScope)
19829=IntersectionCastTypeReference:traverse(ASTVisitor, BlockScope)
19830=IntersectionCastTypeReference:getTypeReferences()
19831=IntersectionCastTypeReference:getTypeBinding(Scope)
19832=BaseTypeBinding:initializeConversions()
19833=BaseTypeBinding:toString()
19834=BaseTypeBinding:kind()
19835=BaseTypeBinding:clone(TypeBinding)
19836=BaseTypeBinding:BaseTypeBinding(int, char[], char[])
19837=BaseTypeBinding:shortReadableName()
19838=BaseTypeBinding:isWidening(int, int)
19839=BaseTypeBinding:sourceName()
19840=BaseTypeBinding:unannotated()
19841=BaseTypeBinding:setTypeAnnotations(AnnotationBinding[], boolean)
19842=BaseTypeBinding:computeUniqueKey(boolean)
19843=BaseTypeBinding:isUncheckedException(boolean)
19844=BaseTypeBinding:qualifiedSourceName()
19845=BaseTypeBinding:getPackage()
19846=BaseTypeBinding:constantPoolName()
19847=BaseTypeBinding:readableName()
19848=BaseTypeBinding:isNarrowing(int, int)
19849=BaseTypeBinding:isCompatibleWith(TypeBinding, Scope)
19850=TypeWithConstructor:TypeWithConstructor(int)
19851=X31:foo()
19852=ThrowStatement:propertyDescriptors(int)
19853=ThrowStatement:memSize()
19854=ThrowStatement:subtreeMatch0(ASTMatcher, Object)
19855=ThrowStatement:accept0(ASTVisitor)
19856=ThrowStatement:internalStructuralPropertiesForType(int)
19857=ThrowStatement:treeSize()
19858=ThrowStatement:setExpression(Expression)
19859=ThrowStatement:getExpression()
19860=ThrowStatement:getNodeType0()
19861=ThrowStatement:ThrowStatement(AST)
19862=ThrowStatement:clone0(AST)
19863=ThrowStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
19864=X02:foo(int, int)
19865=Test:foo()
19866=WildcardType:WildcardType(AST)
19867=WildcardType:propertyDescriptors(int)
19868=WildcardType:internalAnnotationsProperty()
19869=WildcardType:getNodeType0()
19870=WildcardType:memSize()
19871=WildcardType:isUpperBound()
19872=WildcardType:treeSize()
19873=WildcardType:internalGetChildListProperty(ChildListPropertyDescriptor)
19874=WildcardType:setBound(Type, boolean)
19875=WildcardType:internalGetSetBooleanProperty(SimplePropertyDescriptor, boolean, boolean)
19876=WildcardType:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
19877=WildcardType:setUpperBound(boolean)
19878=WildcardType:clone0(AST)
19879=WildcardType:subtreeMatch0(ASTMatcher, Object)
19880=WildcardType:setBound(Type)
19881=WildcardType:internalStructuralPropertiesForType(int)
19882=WildcardType:accept0(ASTVisitor)
19883=WildcardType:getBound()
19884=LRUCache:setSpaceLimit(int)
19885=LRUCache:Stats:add(int)
19886=LRUCache:fillingRatio()
19887=LRUCache:Stats:getTimestamps(int)
19888=LRUCache:privateAdd(Object, Object, int)
19889=LRUCache:toStringContents()
19890=LRUCache:getKey(Object)
19891=LRUCache:LRUCache(int)
19892=LRUCache:toString()
19893=LRUCache:Stats:getOldestTimestamps()
19894=LRUCache:getOldestTimestampCounter()
19895=LRUCache:privateRemoveEntry(LRUCacheEntry, boolean)
19896=LRUCache:privateAddEntry(LRUCacheEntry, boolean)
19897=LRUCache:keys()
19898=LRUCache:LRUCacheEntry:LRUCacheEntry(Object, Object, int)
19899=LRUCache:updateTimestamp(LRUCacheEntry)
19900=LRUCache:LRUCache()
19901=LRUCache:keysAndValues()
19902=LRUCache:getNewestTimestampCounter()
19903=LRUCache:Stats:printStats()
19904=LRUCache:getCurrentSpace()
19905=LRUCache:spaceFor(Object)
19906=LRUCache:clone()
19907=LRUCache:toStringFillingRation(String)
19908=LRUCache:flush(Object)
19909=LRUCache:getOldestElement()
19910=LRUCache:put(Object, Object)
19911=LRUCache:newInstance(int)
19912=LRUCache:makeSpace(int)
19913=LRUCache:get(Object)
19914=LRUCache:removeKey(Object)
19915=LRUCache:Stats:getAverageAge(long, int, long)
19916=LRUCache:Stats:snapshot()
19917=LRUCache:flush()
19918=LRUCache:Stats:getOldestElement()
19919=LRUCache:getSpaceLimit()
19920=LRUCache:LRUCacheEntry:toString()
19921=LRUCache:peek(Object)
19922=LRUCache:Stats:removeCountersOlderThan(int)
19923=IJarEntryResource:getParent()
19924=IJarEntryResource:getPackageFragmentRoot()
19925=IJarEntryResource:getFullPath()
19926=IJarEntryResource:isFile()
19927=IJarEntryResource:getChildren()
19928=ITypeNameRequestor:acceptInterface(char[], char[], char[][], String)
19929=ITypeNameRequestor:acceptClass(char[], char[], char[][], String)
19930=A:Inner:amount()
19931=Test:foo(String)
19932=CorrectArgument1:foo(int)
19933=MethodPropertyDatabase:read(String)
19934=GenericsBug:readDatabase(DatabaseType, String)
19935=MethodProperty:copyFrom(ActualType)
19936=GenericsBug:readDatabase()
19937=FooProperty:copyFrom(FooProperty)
19938=DOMException:DOMException(String)
19939=DOMException:DOMException()
19940=NoReferenceJ:foo()
19941=JavaSearchNameEnvironment:mapToClassPathLocation(JavaModelManager, PackageFragmentRoot)
19942=JavaSearchNameEnvironment:cleanup()
19943=JavaSearchNameEnvironment:isPackage(char[][], char[])
19944=JavaSearchNameEnvironment:findClass(String, char[])
19945=JavaSearchNameEnvironment:findType(char[], char[][])
19946=JavaSearchNameEnvironment:JavaSearchNameEnvironment(IJavaProject, org.eclipse.jdt.core.ICompilationUnit[])
19947=JavaSearchNameEnvironment:computeClasspathLocations(JavaProject)
19948=JavaSearchNameEnvironment:findType(char[][])
19949=JavaSearchNameEnvironment:addProjectClassPath(JavaProject)
19950=JavaSearchNameEnvironment:isPackage(String)
19951=X:bar(int)
19952=SingleCompletionTest:run(Class, String)
19953=SingleCompletionTest:SingleCompletionTest(String)
19954=SingleCompletionTest:test()
19955=LocalVariablePattern:findIndexMatches(Index, IndexQueryRequestor, SearchParticipant, IJavaSearchScope, IProgressMonitor)
19956=LocalVariablePattern:print(StringBuffer)
19957=LocalVariablePattern:LocalVariablePattern(LocalVariable, int, int)
19958=CompletionRequestorAdapter:acceptLocalVariable(char[], char[], char[], int, int, int, int)
19959=CompletionRequestorAdapter:acceptInterface(char[], char[], char[], int, int, int, int)
19960=CompletionRequestorAdapter:acceptError(IProblem)
19961=CompletionRequestorAdapter:acceptClass(char[], char[], char[], int, int, int, int)
19962=CompletionRequestorAdapter:acceptField(char[], char[], char[], char[], char[], char[], int, int, int, int)
19963=CompletionRequestorAdapter:acceptAnonymousType(char[], char[], char[][], char[][], char[][], char[], int, int, int, int)
19964=CompletionRequestorAdapter:acceptMethodDeclaration(char[], char[], char[], char[][], char[][], char[][], char[], char[], char[], int, int, int, int)
19965=CompletionRequestorAdapter:acceptKeyword(char[], int, int, int)
19966=CompletionRequestorAdapter:acceptLabel(char[], int, int, int)
19967=CompletionRequestorAdapter:acceptModifier(char[], int, int, int)
19968=CompletionRequestorAdapter:acceptVariableName(char[], char[], char[], char[], int, int, int)
19969=CompletionRequestorAdapter:acceptPackage(char[], char[], int, int, int)
19970=CompletionRequestorAdapter:acceptMethod(char[], char[], char[], char[][], char[][], char[][], char[], char[], char[], int, int, int, int)
19971=CompletionRequestorAdapter:acceptType(char[], char[], char[], int, int, int)
19972=X:someMethod(String, String, String)
19973=TestHierarchyRunView:revealFailure(Test)
19974=TestHierarchyRunView:runFinished(Test, TestResult)
19975=TestHierarchyRunView:aboutToStart(Test, TestResult)
19976=TestHierarchyRunView:TestHierarchyRunView(TestRunContext)
19977=TestHierarchyRunView:getSelectedTest()
19978=TestHierarchyRunView:addTab(JTabbedPane)
19979=TestHierarchyRunView:testSelected()
19980=TestHierarchyRunView:activate()
19981=CorrectField1:foo()
19982=IScanner:setSource(char[])
19983=IScanner:getLineEnd(int)
19984=IScanner:getCurrentTokenSource()
19985=IScanner:getRawTokenSource()
19986=IScanner:resetTo(int, int)
19987=IScanner:getLineEnds()
19988=IScanner:getCurrentTokenEndPosition()
19989=IScanner:getLineNumber(int)
19990=IScanner:getLineStart(int)
19991=IScanner:getSource()
19992=IScanner:getNextToken()
19993=IScanner:getCurrentTokenStartPosition()
19994=A:foo()
19995=X:x(int)
19996=SelectionOnReferenceExpressionName:isMethodReference()
19997=SelectionOnReferenceExpressionName:printExpression(int, StringBuffer)
19998=SelectionOnReferenceExpressionName:SelectionOnReferenceExpressionName()
19999=SelectionOnReferenceExpressionName:resolveType(BlockScope)
20000=SelectionOnReferenceExpressionName:isConstructorReference()
20001=A:method()
20002=MemberDeclaration:getDeclaringType()
20003=Test:foo()
20004=A:foo()
20005=ICorrectionRequestor:acceptLocalVariable(char[], char[], char[], int, int, int)
20006=ICorrectionRequestor:acceptMethod(char[], char[], char[], char[][], char[][], char[][], char[], char[], char[], int, int, int)
20007=ICorrectionRequestor:acceptClass(char[], char[], char[], int, int, int)
20008=ICorrectionRequestor:acceptPackage(char[], char[], int, int)
20009=ICorrectionRequestor:acceptInterface(char[], char[], char[], int, int, int)
20010=ICorrectionRequestor:acceptField(char[], char[], char[], char[], char[], char[], int, int, int)
20011=HelloWorldWildcardAnnotationProcessorFactory:supportedAnnotationTypes()
20012=ProblemPackageBinding:ProblemPackageBinding(char[], int)
20013=ProblemPackageBinding:problemId()
20014=ProblemPackageBinding:ProblemPackageBinding(char[][], int)
20015=A:foo()
20016=A:A()
20017=ArgsConstructorProcessor:processArgsConstructorClasses(RoundEnvironment, TypeElement)
20018=ArgsConstructorProcessor:doesClassContainArgsConstructor(Element, List<TypeMirror>)
20019=ArgsConstructorProcessor:process(Set<? extends TypeElement>, RoundEnvironment)
20020=ArgsConstructorProcessor:processClass(Element)
20021=ArgsConstructorProcessor:collectElements()
20022=ArrayAccess:getArray()
20023=ArrayAccess:setArray(Expression)
20024=ArrayAccess:internalStructuralPropertiesForType(int)
20025=ArrayAccess:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
20026=ArrayAccess:accept0(ASTVisitor)
20027=ArrayAccess:treeSize()
20028=ArrayAccess:subtreeMatch0(ASTMatcher, Object)
20029=ArrayAccess:setIndex(Expression)
20030=ArrayAccess:getIndex()
20031=ArrayAccess:memSize()
20032=ArrayAccess:propertyDescriptors(int)
20033=ArrayAccess:ArrayAccess(AST)
20034=ArrayAccess:getNodeType0()
20035=ArrayAccess:clone0(AST)
20036=RecoveredElement:preserveEnclosingBlocks()
20037=RecoveredElement:previousAvailableLineEnd(int)
20038=RecoveredElement:updateOnOpeningBrace(int, int)
20039=RecoveredElement:enclosingMethod()
20040=RecoveredElement:type()
20041=RecoveredElement:sourceEnd()
20042=RecoveredElement:addBlockStatement(RecoveredBlock)
20043=RecoveredElement:addModifier(int, int)
20044=RecoveredElement:addAnnotationName(int, int, int, int)
20045=RecoveredElement:toString(int)
20046=RecoveredElement:enclosingInitializer()
20047=RecoveredElement:enclosingType()
20048=RecoveredElement:updateFromParserState()
20049=RecoveredElement:updateSourceEndIfNecessary(int, int)
20050=RecoveredElement:add(Block, int)
20051=RecoveredElement:tabString(int)
20052=RecoveredElement:depth()
20053=RecoveredElement:add(LocalDeclaration, int)
20054=RecoveredElement:parser()
20055=RecoveredElement:RecoveredElement(RecoveredElement, int)
20056=RecoveredElement:add(Statement, int)
20057=RecoveredElement:add(AbstractMethodDeclaration, int)
20058=RecoveredElement:add(FieldDeclaration, int)
20059=RecoveredElement:updateSourceEndIfNecessary(int)
20060=RecoveredElement:add(TypeDeclaration, int)
20061=RecoveredElement:toString()
20062=RecoveredElement:updateBodyStart(int)
20063=RecoveredElement:updateOnClosingBrace(int, int)
20064=RecoveredElement:topElement()
20065=RecoveredElement:updateParseTree()
20066=RecoveredElement:RecoveredElement(RecoveredElement, int, Parser)
20067=RecoveredElement:add(ImportReference, int)
20068=RecoveredElement:resetPendingModifiers()
20069=RecoveredElement:parseTree()
20070=X:foo()
20071=Test:f()
20072=Test:foo()
20073=ResolveDuplicateMethodDeclaration7:Inner:foo(Zork)
20074=A:someMethod()
20075=X01:foo()
20076=Test:main(String[])
20077=BatchASTCreationTests:test050()
20078=BatchASTCreationTests:testIgnoreMethodBodies2()
20079=BatchASTCreationTests:test061()
20080=BatchASTCreationTests:test008()
20081=BatchASTCreationTests:test072()
20082=BatchASTCreationTests:test019()
20083=BatchASTCreationTests:test083()
20084=BatchASTCreationTests:test052()
20085=BatchASTCreationTests:test063()
20086=BatchASTCreationTests:test085()
20087=BatchASTCreationTests:test028()
20088=BatchASTCreationTests:test039()
20089=BatchASTCreationTests:test004()
20090=BatchASTCreationTests:test015()
20091=BatchASTCreationTests:test076_Bug155003()
20092=BatchASTCreationTests:test075_Bug155003()
20093=BatchASTCreationTests:TestASTRequestor:acceptAST(ICompilationUnit, CompilationUnit)
20094=BatchASTCreationTests:setUpSuite()
20095=BatchASTCreationTests:test006()
20096=BatchASTCreationTests:test070()
20097=BatchASTCreationTests:test017()
20098=BatchASTCreationTests:test081()
20099=BatchASTCreationTests:test001()
20100=BatchASTCreationTests:test047()
20101=BatchASTCreationTests:test012()
20102=BatchASTCreationTests:test058()
20103=BatchASTCreationTests:requestBindings(String[], String[])
20104=BatchASTCreationTests:test023()
20105=BatchASTCreationTests:test069()
20106=BatchASTCreationTests:BindingResolver:acceptBinding(String, IBinding)
20107=BatchASTCreationTests:test034()
20108=BatchASTCreationTests:test003()
20109=BatchASTCreationTests:test049()
20110=BatchASTCreationTests:test077_Bug163647()
20111=BatchASTCreationTests:test014()
20112=BatchASTCreationTests:test025()
20113=BatchASTCreationTests:test036()
20114=BatchASTCreationTests:test054()
20115=BatchASTCreationTests:test065()
20116=BatchASTCreationTests:test030()
20117=BatchASTCreationTests:test074_Bug155003()
20118=BatchASTCreationTests:test087()
20119=BatchASTCreationTests:test041()
20120=BatchASTCreationTests:test045()
20121=BatchASTCreationTests:assertRequestedBindingsFound(String[], String[])
20122=BatchASTCreationTests:test010()
20123=BatchASTCreationTests:test056()
20124=BatchASTCreationTests:test021()
20125=BatchASTCreationTests:BindingResolver:getBindingKeys()
20126=BatchASTCreationTests:test067()
20127=BatchASTCreationTests:test032()
20128=BatchASTCreationTests:test078()
20129=BatchASTCreationTests:test043()
20130=BatchASTCreationTests:createWorkingCopies(String[], boolean)
20131=BatchASTCreationTests:test009()
20132=BatchASTCreationTests:test073()
20133=BatchASTCreationTests:test084()
20134=BatchASTCreationTests:assertRequestedBindingFound(String[], String)
20135=BatchASTCreationTests:test060()
20136=BatchASTCreationTests:resolveASTs(ICompilationUnit[], TestASTRequestor)
20137=BatchASTCreationTests:test040()
20138=BatchASTCreationTests:test086()
20139=BatchASTCreationTests:assertBindingsCreated(String[], String[])
20140=BatchASTCreationTests:test051()
20141=BatchASTCreationTests:testIgnoreMethodBodies1()
20142=BatchASTCreationTests:test062()
20143=BatchASTCreationTests:test005()
20144=BatchASTCreationTests:test016()
20145=BatchASTCreationTests:test080()
20146=BatchASTCreationTests:test027()
20147=BatchASTCreationTests:test063a()
20148=BatchASTCreationTests:test038()
20149=BatchASTCreationTests:test007()
20150=BatchASTCreationTests:test071()
20151=BatchASTCreationTests:test018()
20152=BatchASTCreationTests:createASTs(ICompilationUnit[], TestASTRequestor)
20153=BatchASTCreationTests:test082()
20154=BatchASTCreationTests:test029()
20155=BatchASTCreationTests:test024()
20156=BatchASTCreationTests:test035()
20157=BatchASTCreationTests:BatchASTCreationTests(String)
20158=BatchASTCreationTests:test046()
20159=BatchASTCreationTests:BindingResolver:BindingResolver(MarkerInfo[])
20160=BatchASTCreationTests:test011()
20161=BatchASTCreationTests:test057()
20162=BatchASTCreationTests:test022()
20163=BatchASTCreationTests:test026()
20164=BatchASTCreationTests:test037()
20165=BatchASTCreationTests:test002()
20166=BatchASTCreationTests:test048()
20167=BatchASTCreationTests:TestASTRequestor:acceptBinding(String, IBinding)
20168=BatchASTCreationTests:test013()
20169=BatchASTCreationTests:test059()
20170=BatchASTCreationTests:BindingResolver:getFoundKeys()
20171=BatchASTCreationTests:test031()
20172=BatchASTCreationTests:assertBindingCreated(String[], String)
20173=BatchASTCreationTests:createWorkingCopies(String[])
20174=BatchASTCreationTests:test088()
20175=BatchASTCreationTests:test042()
20176=BatchASTCreationTests:test053()
20177=BatchASTCreationTests:test064()
20178=BatchASTCreationTests:test068()
20179=BatchASTCreationTests:suite()
20180=BatchASTCreationTests:test033()
20181=BatchASTCreationTests:test079()
20182=BatchASTCreationTests:tearDownSuite()
20183=BatchASTCreationTests:test044()
20184=BatchASTCreationTests:BindingResolver:acceptAST(ICompilationUnit, CompilationUnit)
20185=BatchASTCreationTests:test055()
20186=BatchASTCreationTests:test066()
20187=BatchASTCreationTests:test020()
20188=DirectoryComparator:compare()
20189=PathCollector:acceptIndexMatch(String, SearchPattern, SearchParticipant, AccessRuleSet)
20190=PathCollector:getPaths()
20191=MethodBinding:getModifiers()
20192=MethodBinding:overrides(IMethodBinding)
20193=MethodBinding:getTypeArguments()
20194=MethodBinding:isParameterizedMethod()
20195=MethodBinding:isVarargs()
20196=MethodBinding:isDeprecated()
20197=MethodBinding:isDefaultConstructor()
20198=MethodBinding:getReturnType()
20199=MethodBinding:toString()
20200=MethodBinding:filterTypeAnnotations(org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[])
20201=MethodBinding:LambdaMethod:getParameterAnnotations(int)
20202=MethodBinding:LambdaMethod:toString()
20203=MethodBinding:isSynthetic()
20204=MethodBinding:getDefaultValue()
20205=MethodBinding:MethodBinding(BindingResolver, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
20206=MethodBinding:getJavaElement()
20207=MethodBinding:getMethodDeclaration()
20208=MethodBinding:LambdaMethod:getAnnotations()
20209=MethodBinding:LambdaMethod:getKey()
20210=MethodBinding:getParameterTypes()
20211=MethodBinding:getDeclaredReceiverType()
20212=MethodBinding:getDeclaringMember()
20213=MethodBinding:LambdaMethod:getMethodDeclaration()
20214=MethodBinding:getExceptionTypes()
20215=MethodBinding:isRawMethod()
20216=MethodBinding:LambdaMethod:getDeclaringMember()
20217=MethodBinding:getKey()
20218=MethodBinding:getTypeParameters()
20219=MethodBinding:getDeclaringClass()
20220=MethodBinding:getKind()
20221=MethodBinding:LambdaMethod:getParameterTypes()
20222=MethodBinding:getParameterAnnotations(int)
20223=MethodBinding:isRecovered()
20224=MethodBinding:getAnnotations()
20225=MethodBinding:isEqualTo(IBinding)
20226=MethodBinding:LambdaMethod:LambdaMethod(DefaultBindingResolver, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, IBinding)
20227=MethodBinding:isGenericMethod()
20228=MethodBinding:LambdaMethod:getModifiers()
20229=MethodBinding:isConstructor()
20230=MethodBinding:isSubsignature(IMethodBinding)
20231=MethodBinding:isAnnotationMember()
20232=MethodBinding:getName()
20233=MethodBinding:getUnresolvedJavaElement()
20234=ReflectionToStringBuilder:toString(Object)
20235=ReflectionToStringBuilder:ReflectionToStringBuilder(Object, ToStringStyle)
20236=ReflectionToStringBuilder:unregisterObject()
20237=ReflectionToStringBuilder:register(Object)
20238=ReflectionToStringBuilder:appendFieldsIn(Class)
20239=ReflectionToStringBuilder:ReflectionToStringBuilder(Object, ToStringStyle, StringBuffer)
20240=ReflectionToStringBuilder:accept(Field)
20241=ReflectionToStringBuilder:reflectionAppendArray(Object)
20242=ReflectionToStringBuilder:getUpToClass()
20243=ReflectionToStringBuilder:toString(Object, ToStringStyle, boolean, Class)
20244=ReflectionToStringBuilder:isAppendTransients()
20245=ReflectionToStringBuilder:setAppendTransients(boolean)
20246=ReflectionToStringBuilder:toString(Object, ToStringStyle, boolean, boolean, Class)
20247=ReflectionToStringBuilder:toString()
20248=ReflectionToStringBuilder:toString(Object, ToStringStyle, boolean, boolean)
20249=ReflectionToStringBuilder:getRegistry()
20250=ReflectionToStringBuilder:unregister(Object)
20251=ReflectionToStringBuilder:isRegistered(Object)
20252=ReflectionToStringBuilder:ReflectionToStringBuilder(Object)
20253=ReflectionToStringBuilder:ReflectionToStringBuilder(Object, ToStringStyle, StringBuffer, Class, boolean)
20254=ReflectionToStringBuilder:setAppendStatics(boolean)
20255=ReflectionToStringBuilder:ReflectionToStringBuilder(Object, ToStringStyle, StringBuffer, Class, boolean, boolean)
20256=ReflectionToStringBuilder:isAppendStatics()
20257=ReflectionToStringBuilder:toString(Object, ToStringStyle)
20258=ReflectionToStringBuilder:setUpToClass(Class)
20259=ReflectionToStringBuilder:toString(Object, ToStringStyle, boolean)
20260=ReflectionToStringBuilder:getValue(Field)
20261=ReflectionToStringBuilder:registerObject()
20262=X32:foo()
20263=A:foo()
20264=X01:foo()
20265=CompletionWithMissingTypesTests:test0002()
20266=CompletionWithMissingTypesTests:test0037()
20267=CompletionWithMissingTypesTests:test0015()
20268=CompletionWithMissingTypesTests:test0046()
20269=CompletionWithMissingTypesTests:test0035()
20270=CompletionWithMissingTypesTests:test0013()
20271=CompletionWithMissingTypesTests:test0006()
20272=CompletionWithMissingTypesTests:test0019()
20273=CompletionWithMissingTypesTests:test0004()
20274=CompletionWithMissingTypesTests:test0039()
20275=CompletionWithMissingTypesTests:test0028()
20276=CompletionWithMissingTypesTests:test0017()
20277=CompletionWithMissingTypesTests:test0041()
20278=CompletionWithMissingTypesTests:test0008()
20279=CompletionWithMissingTypesTests:CompletionWithMissingTypesTests(String)
20280=CompletionWithMissingTypesTests:test0021()
20281=CompletionWithMissingTypesTests:test0010()
20282=CompletionWithMissingTypesTests:test0045()
20283=CompletionWithMissingTypesTests:test0034()
20284=CompletionWithMissingTypesTests:test0030()
20285=CompletionWithMissingTypesTests:test0043()
20286=CompletionWithMissingTypesTests:test0032()
20287=CompletionWithMissingTypesTests:test0025()
20288=CompletionWithMissingTypesTests:_test0024()
20289=CompletionWithMissingTypesTests:test0014()
20290=CompletionWithMissingTypesTests:test0003()
20291=CompletionWithMissingTypesTests:test0038()
20292=CompletionWithMissingTypesTests:test0023()
20293=CompletionWithMissingTypesTests:test0012()
20294=CompletionWithMissingTypesTests:test0001()
20295=CompletionWithMissingTypesTests:test0036()
20296=CompletionWithMissingTypesTests:test0029()
20297=CompletionWithMissingTypesTests:test0018()
20298=CompletionWithMissingTypesTests:test0007()
20299=CompletionWithMissingTypesTests:test0027()
20300=CompletionWithMissingTypesTests:setUpSuite()
20301=CompletionWithMissingTypesTests:_test0026()
20302=CompletionWithMissingTypesTests:test0016()
20303=CompletionWithMissingTypesTests:suite()
20304=CompletionWithMissingTypesTests:test0005()
20305=CompletionWithMissingTypesTests:test0040()
20306=CompletionWithMissingTypesTests:test0009()
20307=CompletionWithMissingTypesTests:test0044()
20308=CompletionWithMissingTypesTests:test0033()
20309=CompletionWithMissingTypesTests:test0022()
20310=CompletionWithMissingTypesTests:test0011()
20311=CompletionWithMissingTypesTests:test0042()
20312=CompletionWithMissingTypesTests:test0031()
20313=CompletionWithMissingTypesTests:test0020()
20314=A:foo()
20315=CodeSnippetSuperReference:isSuperAccess()
20316=CodeSnippetSuperReference:isTypeAccess()
20317=CodeSnippetSuperReference:setFieldIndex(int)
20318=CodeSnippetSuperReference:freshInferenceContext(Scope)
20319=CodeSnippetSuperReference:CodeSnippetSuperReference(int, int)
20320=CodeSnippetSuperReference:setActualReceiverType(ReferenceBinding)
20321=CodeSnippetSuperReference:resolveType(BlockScope)
20322=CodeSnippetSuperReference:setDepth(int)
20323=CodeSnippetSuperReference:genericTypeArguments()
20324=Bug49361:main(String[])
20325=ParameterizedFieldBinding:ParameterizedFieldBinding(ParameterizedTypeBinding, FieldBinding)
20326=ParameterizedFieldBinding:constant()
20327=ParameterizedFieldBinding:original()
20328=ParameterizedFieldBinding:setConstant(Constant)
20329=Test:foo(Exception)
20330=A:foo()
20331=CompletionOnMemberValueName:CompletionOnMemberValueName(char[], int, int)
20332=CompletionOnMemberValueName:print(int, StringBuffer)
20333=MarkerAnnotation:traverse(ASTVisitor, ClassScope)
20334=MarkerAnnotation:memberValuePairs()
20335=MarkerAnnotation:traverse(ASTVisitor, BlockScope)
20336=MarkerAnnotation:MarkerAnnotation(TypeReference, int)
20337=InvalidCursorLocation:InvalidCursorLocation(String)
20338=X:m()
20339=DeclaredType:getActualTypeArguments()
20340=DeclaredType:getSuperinterfaces()
20341=DeclaredType:getContainingType()
20342=DeclaredType:getDeclaration()
20343=NameEnvironmentAnswer:getAccessRestriction()
20344=NameEnvironmentAnswer:ignoreIfBetter()
20345=NameEnvironmentAnswer:getBinaryType()
20346=NameEnvironmentAnswer:isBetter(NameEnvironmentAnswer)
20347=NameEnvironmentAnswer:getExternalAnnotationPath()
20348=NameEnvironmentAnswer:isCompilationUnit()
20349=NameEnvironmentAnswer:isSourceType()
20350=NameEnvironmentAnswer:NameEnvironmentAnswer(ISourceType[], AccessRestriction, String)
20351=NameEnvironmentAnswer:getSourceTypes()
20352=NameEnvironmentAnswer:NameEnvironmentAnswer(ICompilationUnit, AccessRestriction)
20353=NameEnvironmentAnswer:isBinaryType()
20354=NameEnvironmentAnswer:getCompilationUnit()
20355=NameEnvironmentAnswer:NameEnvironmentAnswer(IBinaryType, AccessRestriction)
20356=JavaElement8Tests:test430141()
20357=JavaElement8Tests:testBug429641a()
20358=JavaElement8Tests:test430141a()
20359=JavaElement8Tests:test431716()
20360=JavaElement8Tests:test430026a()
20361=JavaElement8Tests:test430136()
20362=JavaElement8Tests:testBug429910a()
20363=JavaElement8Tests:testBug428178()
20364=JavaElement8Tests:suite()
20365=JavaElement8Tests:testBug429641()
20366=JavaElement8Tests:test430195()
20367=JavaElement8Tests:testBug428178a()
20368=JavaElement8Tests:testBug429910()
20369=JavaElement8Tests:JavaElement8Tests(String)
20370=JavaElement8Tests:test429948a()
20371=JavaElement8Tests:test430026()
20372=JavaElement8Tests:test429966()
20373=JavaElement8Tests:test430033()
20374=JavaElement8Tests:test429948()
20375=Example:function1(Object, Object, Object, Object)
20376=MatchLocatorParser:consumeTypeParameter1WithExtends()
20377=MatchLocatorParser:consumeTypeParameterHeader()
20378=MatchLocatorParser:parseBodies(CompilationUnitDeclaration)
20379=MatchLocatorParser:consumeCastExpressionWithNameArray()
20380=MatchLocatorParser:consumeMarkerAnnotation(boolean)
20381=MatchLocatorParser:consumeLocalVariableDeclaration()
20382=MatchLocatorParser:consumeFormalParameter(boolean)
20383=MatchLocatorParser:consumeExplicitConstructorInvocationWithTypeArguments(int, int)
20384=MatchLocatorParser:ClassAndMethodDeclarationVisitor:visit(TypeDeclaration, BlockScope)
20385=MatchLocatorParser:consumeSingleMemberAnnotation(boolean)
20386=MatchLocatorParser:getUnspecifiedReferenceOptimized()
20387=MatchLocatorParser:ClassButNoMethodDeclarationVisitor:visit(MethodDeclaration, ClassScope)
20388=MatchLocatorParser:createParser(ProblemReporter, MatchLocator)
20389=MatchLocatorParser:consumeMethodInvocationNameWithTypeArguments()
20390=MatchLocatorParser:consumeWildcardBounds1Extends()
20391=MatchLocatorParser:consumeCastExpressionWithQualifiedGenericsArray()
20392=MatchLocatorParser:consumeMethodInvocationPrimary()
20393=MatchLocatorParser:consumeTypeParameter1WithExtendsAndBounds()
20394=MatchLocatorParser:consumeEnterVariable()
20395=MatchLocatorParser:consumeInstanceOfExpression()
20396=MatchLocatorParser:NoClassNoMethodDeclarationVisitor:visit(ConstructorDeclaration, ClassScope)
20397=MatchLocatorParser:consumeWildcardBoundsSuper()
20398=MatchLocatorParser:consumeCastExpressionLL1WithBounds()
20399=MatchLocatorParser:consumeTypeArgumentReferenceType2()
20400=MatchLocatorParser:consumeTypeArgumentList2()
20401=MatchLocatorParser:consumeMethodHeaderName(boolean)
20402=MatchLocatorParser:consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()
20403=MatchLocatorParser:consumeWildcardBounds1Super()
20404=MatchLocatorParser:consumeWildcardBounds2Extends()
20405=MatchLocatorParser:ClassButNoMethodDeclarationVisitor:visit(TypeDeclaration, ClassScope)
20406=MatchLocatorParser:consumeMethodHeaderRightParen()
20407=MatchLocatorParser:consumeReferenceExpression(ReferenceExpression)
20408=MatchLocatorParser:consumeMemberValuePair()
20409=MatchLocatorParser:consumeTypeArguments()
20410=MatchLocatorParser:ClassButNoMethodDeclarationVisitor:visit(FieldDeclaration, MethodScope)
20411=MatchLocatorParser:consumeOnlyTypeArguments()
20412=MatchLocatorParser:consumeInstanceOfExpressionWithName()
20413=MatchLocatorParser:consumeInterfaceType()
20414=MatchLocatorParser:consumeWildcardBounds3Extends()
20415=MatchLocatorParser:consumeAdditionalBound()
20416=MatchLocatorParser:consumeCastExpressionWithPrimitiveType()
20417=MatchLocatorParser:NoClassNoMethodDeclarationVisitor:visit(Initializer, MethodScope)
20418=MatchLocatorParser:consumeWildcardBounds3Super()
20419=MatchLocatorParser:consumeTypeArgumentReferenceType1()
20420=MatchLocatorParser:parseBodies(TypeDeclaration, CompilationUnitDeclaration)
20421=MatchLocatorParser:ClassButNoMethodDeclarationVisitor:visit(AnnotationMethodDeclaration, ClassScope)
20422=MatchLocatorParser:consumeCastExpressionLL1()
20423=MatchLocatorParser:NoClassNoMethodDeclarationVisitor:visit(MethodDeclaration, ClassScope)
20424=MatchLocatorParser:getTypeReference(int)
20425=MatchLocatorParser:consumeMethodHeaderThrowsClause()
20426=MatchLocatorParser:consumeNormalAnnotation(boolean)
20427=MatchLocatorParser:consumeTypeParameterWithExtends()
20428=MatchLocatorParser:consumeClassHeaderExtends()
20429=MatchLocatorParser:consumePrimaryNoNewArrayWithName()
20430=MatchLocatorParser:consumeCastExpressionWithGenericsArray()
20431=MatchLocatorParser:ClassButNoMethodDeclarationVisitor:visit(ConstructorDeclaration, ClassScope)
20432=MatchLocatorParser:consumeWildcardBoundsExtends()
20433=MatchLocatorParser:consumeLambdaExpression()
20434=MatchLocatorParser:consumeWildcardBounds2Super()
20435=MatchLocatorParser:consumeTypeArgumentList3()
20436=MatchLocatorParser:consumeClassInstanceCreationExpressionWithTypeArguments()
20437=MatchLocatorParser:consumeTypeParameterWithExtendsAndBounds()
20438=MatchLocatorParser:checkComment()
20439=MatchLocatorParser:consumeMethodInvocationName()
20440=MatchLocatorParser:consumeStatementCatch()
20441=MatchLocatorParser:consumeTypeArgumentList1()
20442=MatchLocatorParser:consumeAssignment()
20443=MatchLocatorParser:consumeFieldAccess(boolean)
20444=MatchLocatorParser:getUnspecifiedReference(boolean)
20445=MatchLocatorParser:consumeTypeElidedLambdaParameter(boolean)
20446=MatchLocatorParser:NoClassNoMethodDeclarationVisitor:visit(FieldDeclaration, MethodScope)
20447=MatchLocatorParser:consumeMethodInvocationSuper()
20448=MatchLocatorParser:ClassButNoMethodDeclarationVisitor:visit(Initializer, MethodScope)
20449=MatchLocatorParser:classInstanceCreation(boolean)
20450=MatchLocatorParser:consumeCatchFormalParameter()
20451=MatchLocatorParser:MethodButNoClassDeclarationVisitor:visit(TypeDeclaration, BlockScope)
20452=MatchLocatorParser:consumeExplicitConstructorInvocation(int, int)
20453=MatchLocatorParser:consumeEnterAnonymousClassBody(boolean)
20454=MatchLocatorParser:MatchLocatorParser(ProblemReporter, MatchLocator)
20455=MatchLocatorParser:consumeMethodInvocationPrimaryWithTypeArguments()
20456=MatchLocatorParser:consumeUnaryExpression(int, boolean)
20457=MatchLocatorParser:augmentTypeWithAdditionalDimensions(TypeReference, int, Annotation[][], boolean)
20458=MatchLocatorParser:consumeMethodInvocationSuperWithTypeArguments()
20459=MagicLiteral:source()
20460=MagicLiteral:MagicLiteral(int, int)
20461=MagicLiteral:isValidJavaStatement()
20462=JdtCorePerformanceMeterPlugin:getDefault()
20463=JdtCorePerformanceMeterPlugin:JdtCorePerformanceMeterPlugin()
20464=JdtCorePerformanceMeterPlugin:log(Throwable)
20465=JdtCorePerformanceMeterPlugin:log(IStatus)
20466=UserLibrary:getEntries()
20467=UserLibrary:equals(Object)
20468=UserLibrary:UserLibrary(IClasspathEntry[], boolean)
20469=UserLibrary:isSystemLibrary()
20470=UserLibrary:createFromString(Reader)
20471=UserLibrary:hashCode()
20472=UserLibrary:toString()
20473=UserLibrary:serialize(IClasspathEntry[], boolean)
20474=MemberValuePairBinding:getName()
20475=MemberValuePairBinding:isEqualTo(IBinding)
20476=MemberValuePairBinding:isRecovered()
20477=MemberValuePairBinding:isDeprecated()
20478=MemberValuePairBinding:isSynthetic()
20479=MemberValuePairBinding:buildDOMValue(Object, BindingResolver)
20480=MemberValuePairBinding:getValue()
20481=MemberValuePairBinding:init()
20482=MemberValuePairBinding:getModifiers()
20483=MemberValuePairBinding:appendValue(Object, StringBuffer)
20484=MemberValuePairBinding:isDefault()
20485=MemberValuePairBinding:getKind()
20486=MemberValuePairBinding:getMethodBinding()
20487=MemberValuePairBinding:getJavaElement()
20488=MemberValuePairBinding:internalName()
20489=MemberValuePairBinding:toString()
20490=MemberValuePairBinding:getKey()
20491=MemberValuePairBinding:MemberValuePairBinding(ElementValuePair, BindingResolver)
20492=MemberValuePairBinding:getAnnotations()
20493=GenericXMLWriter:startTag(String, boolean)
20494=GenericXMLWriter:printTag(String, HashMap, boolean, boolean, boolean)
20495=GenericXMLWriter:GenericXMLWriter(OutputStream, String, boolean)
20496=GenericXMLWriter:appendEscapedChar(StringBuffer, char)
20497=GenericXMLWriter:getEscaped(String)
20498=GenericXMLWriter:endTag(String, boolean, boolean)
20499=GenericXMLWriter:getReplacement(char)
20500=GenericXMLWriter:printString(String, boolean, boolean)
20501=GenericXMLWriter:GenericXMLWriter(Writer, String, boolean)
20502=GenericXMLWriter:printTabulation()
20503=Index:containerRelativePath(String)
20504=Index:query(char[][], char[], int)
20505=Index:startQuery()
20506=Index:queryDocumentNames(String)
20507=Index:hasChanged()
20508=Index:isIndexForJar()
20509=Index:getIndexFile()
20510=Index:getIndexLocation()
20511=Index:remove(String)
20512=Index:getIndexLastModified()
20513=Index:stopQuery()
20514=Index:save()
20515=Index:toString()
20516=Index:Index(IndexLocation, String, boolean)
20517=Index:reset()
20518=Index:addIndexEntry(char[], char[], String)
20519=Index:isMatch(char[], char[], int)
20520=A:foo(int[])
20521=RefSingle:testObject()
20522=RefSingle:testException()
20523=RefSingle:testSuper()
20524=RefSingle:testUnbound()
20525=RefSingle:testRuntimeException()
20526=RefSingle:testExtends()
20527=InternalExtendedCompletionContext:getCompletionNode()
20528=InternalExtendedCompletionContext:getJavaElementOfCompilationUnit(ASTNode, Binding)
20529=InternalExtendedCompletionContext:getTypeFromSignature(String, Scope)
20530=InternalExtendedCompletionContext:searchVisibleLocalMethods(MethodBinding[], ReferenceBinding, Scope, InvocationSite, Scope, boolean, ObjectVector)
20531=InternalExtendedCompletionContext:InternalExtendedCompletionContext(InternalCompletionContext, ITypeRoot, CompilationUnitDeclaration, LookupEnvironment, Scope, ASTNode, ASTNode, WorkingCopyOwner, CompletionParser)
20532=InternalExtendedCompletionContext:getVisibleFields()
20533=InternalExtendedCompletionContext:searchVisibleFields(FieldBinding[], ReferenceBinding, Scope, InvocationSite, Scope, boolean, ObjectVector, ObjectVector)
20534=InternalExtendedCompletionContext:computeVisibleElementBindings()
20535=InternalExtendedCompletionContext:searchVisibleVariablesAndMethods(Scope, ObjectVector, ObjectVector, ObjectVector, boolean)
20536=InternalExtendedCompletionContext:searchVisibleFields(ReferenceBinding, Scope, InvocationSite, Scope, boolean, boolean, ObjectVector, ObjectVector)
20537=InternalExtendedCompletionContext:replacePackagesDot(char[])
20538=InternalExtendedCompletionContext:getVisibleLocalVariables()
20539=InternalExtendedCompletionContext:getVisibleElements(String)
20540=InternalExtendedCompletionContext:searchVisibleMethods(ReferenceBinding, Scope, InvocationSite, Scope, boolean, boolean, ObjectVector)
20541=InternalExtendedCompletionContext:searchVisibleInterfaceMethods(ReferenceBinding[], ReferenceBinding, Scope, InvocationSite, Scope, boolean, ObjectVector)
20542=InternalExtendedCompletionContext:getCompletionNodeParent()
20543=InternalExtendedCompletionContext:canUseDiamond(String[], char[])
20544=InternalExtendedCompletionContext:getVisibleMethods()
20545=InternalExtendedCompletionContext:computeEnclosingJavaElements()
20546=InternalExtendedCompletionContext:getJavaElement(LocalVariableBinding)
20547=InternalExtendedCompletionContext:getEnclosingElement()
20548=InternalExtendedCompletionContext:getJavaElementOfCompilationUnit(Binding)
20549=QualifiedNameReference:reportError(BlockScope)
20550=QualifiedNameReference:lastFieldBinding()
20551=QualifiedNameReference:analyseCode(BlockScope, FlowContext, FlowInfo, boolean)
20552=QualifiedNameReference:getGenericCast(int)
20553=QualifiedNameReference:traverse(ASTVisitor, BlockScope)
20554=QualifiedNameReference:generateAssignment(BlockScope, CodeStream, Assignment, boolean)
20555=QualifiedNameReference:setSyntheticAccessor(FieldBinding, int, SyntheticMethodBinding)
20556=QualifiedNameReference:nullAnnotatedVariableBinding(boolean)
20557=QualifiedNameReference:getCodegenBinding(int)
20558=QualifiedNameReference:analyseAssignment(BlockScope, FlowContext, FlowInfo, Assignment, boolean)
20559=QualifiedNameReference:printExpression(int, StringBuffer)
20560=QualifiedNameReference:setFieldIndex(int)
20561=QualifiedNameReference:manageEnclosingInstanceAccessIfNecessary(BlockScope, FlowInfo)
20562=QualifiedNameReference:optimizedBooleanConstant()
20563=QualifiedNameReference:traverse(ASTVisitor, ClassScope)
20564=QualifiedNameReference:computeConversion(Scope, TypeBinding, TypeBinding)
20565=QualifiedNameReference:getName()
20566=QualifiedNameReference:genericTypeArguments()
20567=QualifiedNameReference:generateCompoundAssignment(BlockScope, CodeStream, Expression, int, int, boolean)
20568=QualifiedNameReference:generateReadSequence(BlockScope, CodeStream)
20569=QualifiedNameReference:generateCode(BlockScope, CodeStream, boolean)
20570=QualifiedNameReference:generatePostIncrement(BlockScope, CodeStream, CompoundAssignment, boolean)
20571=QualifiedNameReference:unboundReferenceErrorName()
20572=QualifiedNameReference:getFinalReceiverType()
20573=QualifiedNameReference:QualifiedNameReference(char[][], long[], int, int)
20574=QualifiedNameReference:generateReceiver(CodeStream)
20575=QualifiedNameReference:isFieldAccess()
20576=QualifiedNameReference:manageSyntheticAccessIfNecessary(BlockScope, FieldBinding, int, FlowInfo)
20577=QualifiedNameReference:getOtherFieldBindings(BlockScope)
20578=QualifiedNameReference:checkInternalNPE(BlockScope, FlowContext, FlowInfo, boolean)
20579=QualifiedNameReference:checkNPE(BlockScope, FlowContext, FlowInfo, int)
20580=QualifiedNameReference:postConversionType(Scope)
20581=QualifiedNameReference:isEquivalent(Reference)
20582=QualifiedNameReference:analyseCode(BlockScope, FlowContext, FlowInfo)
20583=QualifiedNameReference:resolveType(BlockScope)
20584=QualifiedNameReference:setGenericCast(int, TypeBinding)
20585=ParameterizedSingleTypeReference:isParameterizedTypeReference()
20586=ParameterizedSingleTypeReference:augmentTypeWithAdditionalDimensions(int, Annotation[][], boolean)
20587=ParameterizedSingleTypeReference:checkBounds(Scope)
20588=ParameterizedSingleTypeReference:createArrayType(Scope, TypeBinding)
20589=ParameterizedSingleTypeReference:ParameterizedSingleTypeReference(char[], TypeReference[], int, long)
20590=ParameterizedSingleTypeReference:resolveType(ClassScope, int)
20591=ParameterizedSingleTypeReference:resolveTypeEnclosing(BlockScope, ReferenceBinding)
20592=ParameterizedSingleTypeReference:printExpression(int, StringBuffer)
20593=ParameterizedSingleTypeReference:traverse(ASTVisitor, BlockScope)
20594=ParameterizedSingleTypeReference:internalResolveLeafType(Scope, ReferenceBinding, boolean)
20595=ParameterizedSingleTypeReference:ParameterizedSingleTypeReference(char[], TypeReference[], int, Annotation[][], long)
20596=ParameterizedSingleTypeReference:getTypeBinding(Scope)
20597=ParameterizedSingleTypeReference:traverse(ASTVisitor, ClassScope)
20598=ParameterizedSingleTypeReference:resolveType(BlockScope, boolean, int)
20599=ParameterizedSingleTypeReference:getTypeArguments()
20600=ParameterizedSingleTypeReference:internalResolveType(Scope, ReferenceBinding, boolean, int)
20601=ParameterizedSingleTypeReference:getParameterizedTypeName()
20602=ParameterizedSingleTypeReference:hasNullTypeAnnotation(AnnotationPosition)
20603=Apt6CompilationParticipant:Apt6CompilationParticipant()
20604=OR_OR_Expression:OR_OR_Expression(Expression, Expression, int)
20605=OR_OR_Expression:generateOptimizedBoolean(BlockScope, CodeStream, Label, Label, boolean)
20606=OR_OR_Expression:isCompactableOperation()
20607=OR_OR_Expression:generateCode(BlockScope, CodeStream, boolean)
20608=OR_OR_Expression:traverse(ASTVisitor, BlockScope)
20609=OR_OR_Expression:analyseCode(BlockScope, FlowContext, FlowInfo)
20610=SourceInitializer:SourceInitializer(int, int)
20611=SourceInitializer:toString(int)
20612=SourceInitializer:setDeclarationSourceEnd(int)
20613=BinaryExpression:traverse(ASTVisitor, BlockScope)
20614=BinaryExpression:optimizedBooleanConstant(int, int, int)
20615=BinaryExpression:optimizedBooleanConstant()
20616=BinaryExpression:generateOptimizedLogicalAnd(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
20617=BinaryExpression:generateOptimizedGreaterThan(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
20618=BinaryExpression:generateOptimizedLogicalOr(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
20619=BinaryExpression:isCompactableOperation()
20620=BinaryExpression:nonRecursiveResolveTypeUpwards(BlockScope)
20621=BinaryExpression:generateOptimizedLogicalXor(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
20622=BinaryExpression:generateOptimizedGreaterThanOrEqual(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
20623=BinaryExpression:computeConstant(BlockScope, int, int)
20624=BinaryExpression:generateLogicalOr(BlockScope, CodeStream, boolean)
20625=BinaryExpression:generateOptimizedStringConcatenation(BlockScope, CodeStream, int)
20626=BinaryExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
20627=BinaryExpression:generateCode(BlockScope, CodeStream, boolean)
20628=BinaryExpression:BinaryExpression(Expression, Expression, int)
20629=BinaryExpression:resolveType(BlockScope)
20630=BinaryExpression:generateLogicalAnd(BlockScope, CodeStream, boolean)
20631=BinaryExpression:generateOptimizedLessThanOrEqual(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
20632=BinaryExpression:generateOptimizedLessThan(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
20633=BinaryExpression:generateLogicalXor(BlockScope, CodeStream, boolean)
20634=BinaryExpression:generateOptimizedBoolean(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
20635=BinaryExpression:BinaryExpression(BinaryExpression)
20636=BinaryExpression:printExpressionNoParenthesis(int, StringBuffer)
20637=BinaryExpression:generateOptimizedStringConcatenationCreation(BlockScope, CodeStream, int)
20638=RecoveredType:add(FieldDeclaration, int)
20639=RecoveredType:lastMemberEnd()
20640=RecoveredType:updateBodyStart(int)
20641=RecoveredType:addModifier(int, int)
20642=RecoveredType:add(TypeDeclaration, int)
20643=RecoveredType:attach(RecoveredAnnotation[], int, int, int)
20644=RecoveredType:updatedTypeDeclaration(int, Set<TypeDeclaration>)
20645=RecoveredType:toString(int)
20646=RecoveredType:enclosingType()
20647=RecoveredType:updatedStatement(int, Set)
20648=RecoveredType:bodyEnd()
20649=RecoveredType:parseTree()
20650=RecoveredType:resetPendingModifiers()
20651=RecoveredType:updateOnClosingBrace(int, int)
20652=RecoveredType:addAnnotationName(int, int, int, int)
20653=RecoveredType:add(AbstractMethodDeclaration, int)
20654=RecoveredType:updateSourceEndIfNecessary(int, int)
20655=RecoveredType:name()
20656=RecoveredType:annotationsConsumed(Annotation[])
20657=RecoveredType:RecoveredType(TypeDeclaration, RecoveredElement, int)
20658=RecoveredType:updateParseTree()
20659=RecoveredType:sourceEnd()
20660=RecoveredType:updateFromParserState()
20661=RecoveredType:add(TypeParameter[], int)
20662=RecoveredType:updateOnOpeningBrace(int, int)
20663=RecoveredType:add(Block, int)
20664=RecoveredType:bodyStartsAtHeaderEnd()
20665=ConflictedParser:atConflictScenario(int)
20666=BlockComment:propertyDescriptors(int)
20667=BlockComment:accept0(ASTVisitor)
20668=BlockComment:treeSize()
20669=BlockComment:memSize()
20670=BlockComment:internalStructuralPropertiesForType(int)
20671=BlockComment:subtreeMatch0(ASTMatcher, Object)
20672=BlockComment:clone0(AST)
20673=BlockComment:BlockComment(AST)
20674=BlockComment:getNodeType0()
20675=UtilTests:test011()
20676=UtilTests:test004()
20677=UtilTests:test002()
20678=UtilTests:test008()
20679=UtilTests:test006()
20680=UtilTests:test001()
20681=UtilTests:test012()
20682=UtilTests:test010()
20683=UtilTests:test005()
20684=UtilTests:test003()
20685=UtilTests:UtilTests(String)
20686=UtilTests:test009()
20687=UtilTests:test007()
20688=UtilTests:suite()
20689=X:main(String[])
20690=ClassFileReader:getName()
20691=ClassFileReader:markAsFromSource()
20692=ClassFileReader:hasStructuralAnnotationChanges(IBinaryAnnotation[], IBinaryAnnotation[])
20693=ClassFileReader:getSourceName()
20694=ClassFileReader:initialize()
20695=ClassFileReader:hasAnnotationProvider()
20696=ClassFileReader:read(String)
20697=ClassFileReader:getFields()
20698=ClassFileReader:isBinaryType()
20699=ClassFileReader:read(InputStream, String)
20700=ClassFileReader:getGenericSignature()
20701=ClassFileReader:toString()
20702=ClassFileReader:read(File, boolean)
20703=ClassFileReader:getExternalAnnotationStatus()
20704=ClassFileReader:setExternalAnnotationProvider(String, String, ZipFile, ZipFileProducer)
20705=ClassFileReader:printTypeModifiers(int)
20706=ClassFileReader:read(InputStream, String, boolean)
20707=ClassFileReader:getTypeAnnotations()
20708=ClassFileReader:read(File)
20709=ClassFileReader:getEnclosingTypeName()
20710=ClassFileReader:getConstantClassNameAt(int)
20711=ClassFileReader:hasStructuralTypeAnnotationChanges(IBinaryTypeAnnotation[], IBinaryTypeAnnotation[])
20712=ClassFileReader:hasStructuralChanges(byte[])
20713=ClassFileReader:enrichWithExternalAnnotationsFor(ITypeAnnotationWalker, Object, LookupEnvironment)
20714=ClassFileReader:isMember()
20715=ClassFileReader:getInnerSourceName()
20716=ClassFileReader:read(String, boolean)
20717=ClassFileReader:hasStructuralChanges(byte[], boolean, boolean)
20718=ClassFileReader:affectsSignature(IBinaryTypeAnnotation)
20719=ClassFileReader:hasNonSyntheticMethodChanges(MethodInfo[], MethodInfo[])
20720=ClassFileReader:getModifiers()
20721=ClassFileReader:getFileName()
20722=ClassFileReader:hasStructuralMethodChanges(MethodInfo, MethodInfo)
20723=ClassFileReader:matchAnnotations(IBinaryAnnotation, IBinaryAnnotation)
20724=ClassFileReader:getTagBits()
20725=ClassFileReader:getSuperclassName()
20726=ClassFileReader:decodeAnnotations(int, boolean)
20727=ClassFileReader:getConstantPoolOffsets()
20728=ClassFileReader:read(java.util.zip.ZipFile, String)
20729=ClassFileReader:getMemberTypes()
20730=ClassFileReader:read(java.util.zip.ZipFile, String, boolean)
20731=ClassFileReader:getMethods()
20732=ClassFileReader:hasNonSyntheticFieldChanges(FieldInfo[], FieldInfo[])
20733=ClassFileReader:getAnnotations()
20734=ClassFileReader:getInterfaceNames()
20735=ClassFileReader:decodeTypeAnnotations(int, boolean)
20736=ClassFileReader:ZipFileProducer:produce()
20737=ClassFileReader:accessFlags()
20738=ClassFileReader:isNestedType()
20739=ClassFileReader:isLocal()
20740=ClassFileReader:ClassFileReader(byte, char[])
20741=ClassFileReader:getMissingTypeNames()
20742=ClassFileReader:isAnonymous()
20743=ClassFileReader:ClassFileReader(byte[], char[], boolean)
20744=ClassFileReader:getEnclosingMethod()
20745=ClassFileReader:getVersion()
20746=ClassFileReader:hasStructuralFieldChanges(FieldInfo, FieldInfo)
20747=ClassFileReader:sourceFileName()
20748=EclipseDeclarationImpl:accept(DeclarationVisitor)
20749=EclipseDeclarationImpl:_getAnnotation(Class<A>, IAnnotationBinding[])
20750=EclipseDeclarationImpl:isFromSource()
20751=EclipseDeclarationImpl:_getAnnotationMirrors(List<org.eclipse.jdt.core.dom.Annotation>)
20752=EclipseDeclarationImpl:getDocComment(BodyDeclaration)
20753=EclipseDeclarationImpl:EclipseDeclarationImpl(BaseProcessorEnv)
20754=EclipseDeclarationImpl:getAstNode()
20755=EclipseDeclarationImpl:getResource()
20756=EclipseDeclarationImpl:_getAnnotationMirrors(IAnnotationBinding[])
20757=EclipseDeclarationImpl:getRangeNode()
20758=EclipseDeclarationImpl:getCompilationUnit()
20759=EclipseDeclarationImpl:isBindingBased()
20760=EclipseDeclarationImpl:getEnvironment()
20761=X:x()
20762=CompletionOnJavadocMessageSend:completeBaseTypes()
20763=CompletionOnJavadocMessageSend:getCompletionFlags()
20764=CompletionOnJavadocMessageSend:completeFormalReference()
20765=CompletionOnJavadocMessageSend:completeAnException()
20766=CompletionOnJavadocMessageSend:printExpression(int, StringBuffer)
20767=CompletionOnJavadocMessageSend:CompletionOnJavadocMessageSend(JavadocMessageSend, int, int)
20768=CompletionOnJavadocMessageSend:CompletionOnJavadocMessageSend(JavadocMessageSend, int)
20769=CompletionOnJavadocMessageSend:completeInText()
20770=CompletionOnJavadocMessageSend:addCompletionFlags(int)
20771=JavaElementFinder:consumeLocalType(char[])
20772=JavaElementFinder:consumeAnnotation()
20773=JavaElementFinder:consumePackage(char[])
20774=JavaElementFinder:newParser()
20775=JavaElementFinder:JavaElementFinder(BindingKeyParser, JavaProject, WorkingCopyOwner)
20776=JavaElementFinder:consumeFullyQualifiedName(char[])
20777=JavaElementFinder:consumeParser(BindingKeyParser)
20778=JavaElementFinder:consumeSecondaryType(char[])
20779=JavaElementFinder:consumeMemberType(char[])
20780=JavaElementFinder:JavaElementFinder(String, JavaProject, WorkingCopyOwner)
20781=JavaElementFinder:consumeMethod(char[], char[])
20782=JavaElementFinder:consumeField(char[])
20783=JavaElementFinder:consumeTypeVariable(char[], char[])
20784=TestResult:runProtected(Test, Protectable)
20785=TestResult:run(TestCase)
20786=TestResult:wasSuccessful()
20787=TestResult:addError(Test, Throwable)
20788=TestResult:startTest(Test)
20789=TestResult:addListener(TestListener)
20790=TestResult:cloneListeners()
20791=TestResult:failureCount()
20792=TestResult:runCount()
20793=TestResult:errorCount()
20794=TestResult:TestResult()
20795=TestResult:shouldStop()
20796=TestResult:failures()
20797=TestResult:removeListener(TestListener)
20798=TestResult:addFailure(Test, AssertionFailedError)
20799=TestResult:stop()
20800=TestResult:errors()
20801=TestResult:endTest(Test)
20802=ResolveField:bar()
20803=IStackMapTableAttribute:getStackMapFrame()
20804=IStackMapTableAttribute:getNumberOfEntries()
20805=CompletionOnJavadocTag:getPossibleInlineTags()
20806=CompletionOnJavadocTag:addCompletionFlags(int)
20807=CompletionOnJavadocTag:CompletionOnJavadocTag(char[], long, int, int, char[][][], boolean)
20808=CompletionOnJavadocTag:filterPossibleTags(Scope)
20809=CompletionOnJavadocTag:getPossibleBlockTags()
20810=CompletionOnJavadocTag:printExpression(int, StringBuffer)
20811=CompletionOnJavadocTag:getCompletionFlags()
20812=Test:main(String[])
20813=ResolveArrayLength:foo()
20814=Apt6Plugin:start(BundleContext)
20815=Apt6Plugin:optionsChanged(DebugOptions)
20816=Apt6Plugin:getPlugin()
20817=Apt6Plugin:Apt6Plugin()
20818=Apt6Plugin:createInfoStatus(Throwable, String)
20819=Apt6Plugin:createWarningStatus(Throwable, String)
20820=Apt6Plugin:log(Throwable, String)
20821=Apt6Plugin:trace(String)
20822=Apt6Plugin:stop(BundleContext)
20823=Apt6Plugin:logWarning(Throwable, String)
20824=Apt6Plugin:createStatus(Throwable, String)
20825=Apt6Plugin:log(IStatus)
20826=Bug317216Proc:printEntrySet(TypeElement)
20827=Bug317216Proc:process(Set<? extends TypeElement>, RoundEnvironment)
20828=ExplicitConstructorCall:getInferenceContext(ParameterizedMethodBinding)
20829=ExplicitConstructorCall:setDepth(int)
20830=ExplicitConstructorCall:freshInferenceContext(Scope)
20831=ExplicitConstructorCall:isTypeAccess()
20832=ExplicitConstructorCall:isImplicitSuper()
20833=ExplicitConstructorCall:registerInferenceContext(ParameterizedGenericMethodBinding, InferenceContext18)
20834=ExplicitConstructorCall:manageEnclosingInstanceAccessIfNecessary(BlockScope, FlowInfo)
20835=ExplicitConstructorCall:printStatement(int, StringBuffer)
20836=ExplicitConstructorCall:arguments()
20837=ExplicitConstructorCall:resolve(BlockScope)
20838=ExplicitConstructorCall:generateCode(BlockScope, CodeStream)
20839=ExplicitConstructorCall:analyseCode(BlockScope, FlowContext, FlowInfo)
20840=ExplicitConstructorCall:genericTypeArguments()
20841=ExplicitConstructorCall:traverse(ASTVisitor, BlockScope)
20842=ExplicitConstructorCall:binding()
20843=ExplicitConstructorCall:registerResult(TypeBinding, MethodBinding)
20844=ExplicitConstructorCall:isSuperAccess()
20845=ExplicitConstructorCall:setFieldIndex(int)
20846=ExplicitConstructorCall:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo)
20847=ExplicitConstructorCall:cleanUpInferenceContexts()
20848=ExplicitConstructorCall:setActualReceiverType(ReferenceBinding)
20849=ExplicitConstructorCall:ExplicitConstructorCall(int)
20850=F:bar2()
20851=F:bar()
20852=F:foo()
20853=A:foo(int, int, int, int, int, int)
20854=A:bar(List)
20855=CodeCorrectionTestsRequestor:SuggestionComparator:compare(Object, Object)
20856=CodeCorrectionTestsRequestor:acceptMethod(char[], char[], char[], char[][], char[][], char[][], char[], char[], char[], int, int, int)
20857=CodeCorrectionTestsRequestor:acceptInterface(char[], char[], char[], int, int, int)
20858=CodeCorrectionTestsRequestor:getEnds()
20859=CodeCorrectionTestsRequestor:getSortedSuggestions()
20860=CodeCorrectionTestsRequestor:getSuggestions()
20861=CodeCorrectionTestsRequestor:Suggestion:Suggestion(char[], int, int)
20862=CodeCorrectionTestsRequestor:acceptLocalVariable(char[], char[], char[], int, int, int)
20863=CodeCorrectionTestsRequestor:acceptPackage(char[], char[], int, int)
20864=CodeCorrectionTestsRequestor:acceptClass(char[], char[], char[], int, int, int)
20865=CodeCorrectionTestsRequestor:getStarts()
20866=CodeCorrectionTestsRequestor:acceptField(char[], char[], char[], char[], char[], char[], int, int, int)
20867=A:foo()
20868=AA:bar()
20869=A:f()
20870=B:main(String[])
20871=B:bar()
20872=Literal:printExpression(int, StringBuffer)
20873=Literal:source()
20874=Literal:resolveType(BlockScope)
20875=Literal:computeConstant()
20876=Literal:literalType(BlockScope)
20877=Literal:Literal(int, int)
20878=Literal:analyseCode(BlockScope, FlowContext, FlowInfo)
20879=IFieldInfo:getAccessFlags()
20880=IFieldInfo:getNameIndex()
20881=IFieldInfo:hasConstantValueAttribute()
20882=IFieldInfo:getAttributeCount()
20883=IFieldInfo:getDescriptorIndex()
20884=IFieldInfo:getName()
20885=IFieldInfo:getDescriptor()
20886=IFieldInfo:isDeprecated()
20887=IFieldInfo:getConstantValueAttribute()
20888=IFieldInfo:isSynthetic()
20889=IFieldInfo:getAttributes()
20890=ExtendedStringLiteral:printExpression(int, StringBuffer)
20891=ExtendedStringLiteral:extendWith(StringLiteral)
20892=ExtendedStringLiteral:extendWith(CharLiteral)
20893=ExtendedStringLiteral:traverse(ASTVisitor, BlockScope)
20894=ExtendedStringLiteral:ExtendedStringLiteral(StringLiteral, CharLiteral)
20895=ExtendedStringLiteral:ExtendedStringLiteral(StringLiteral, StringLiteral)
20896=Test:foo(Selection)
20897=Test:g()
20898=JavaElementInfo:getChildren()
20899=JavaElementInfo:clone()
20900=IOpenable:getBuffer()
20901=IOpenable:findRecommendedLineSeparator()
20902=IOpenable:isConsistent()
20903=IOpenable:makeConsistent(IProgressMonitor)
20904=IOpenable:isOpen()
20905=IOpenable:save(IProgressMonitor, boolean)
20906=IOpenable:hasUnsavedChanges()
20907=IOpenable:open(IProgressMonitor)
20908=IOpenable:close()
20909=AND_AND_Expression:analyseCode(BlockScope, FlowContext, FlowInfo)
20910=AND_AND_Expression:isCompactableOperation()
20911=AND_AND_Expression:generateCode(BlockScope, CodeStream, boolean)
20912=AND_AND_Expression:traverse(ASTVisitor, BlockScope)
20913=AND_AND_Expression:AND_AND_Expression(Expression, Expression, int)
20914=AND_AND_Expression:generateOptimizedBoolean(BlockScope, CodeStream, Label, Label, boolean)
20915=CClass:foo(SuperClass, int)
20916=CClass:Inner:Inner()
20917=CClass:bar(int, int)
20918=KeyKind:consumeRawType()
20919=KeyKind:consumeBaseType(char[])
20920=KeyKind:consumeParameterizedGenericMethod()
20921=KeyKind:consumeField(char[])
20922=KeyKind:consumeParameterizedType(char[], boolean)
20923=KeyKind:consumeParser(BindingKeyParser)
20924=KeyKind:consumeTypeParameter(char[])
20925=KeyKind:KeyKind(String)
20926=KeyKind:newParser()
20927=KeyKind:consumeMemberType(char[])
20928=KeyKind:consumeWildCard(int)
20929=KeyKind:consumeTypeWithCapture()
20930=KeyKind:consumeTopLevelType()
20931=KeyKind:consumeCapture(int)
20932=KeyKind:consumeMethod(char[], char[])
20933=KeyKind:consumeLocalVar(char[], int, int)
20934=KeyKind:consumeLocalType(char[])
20935=KeyKind:KeyKind(BindingKeyParser)
20936=X14:foo(String)
20937=JavadocQualifiedTypeReference:reportInvalidType(Scope)
20938=JavadocQualifiedTypeReference:traverse(ASTVisitor, BlockScope)
20939=JavadocQualifiedTypeReference:reportDeprecatedType(Scope)
20940=JavadocQualifiedTypeReference:resolveType(BlockScope)
20941=JavadocQualifiedTypeReference:internalResolveType(Scope)
20942=JavadocQualifiedTypeReference:JavadocQualifiedTypeReference(char[][], long[], int, int)
20943=JavadocQualifiedTypeReference:resolveType(ClassScope)
20944=JavadocQualifiedTypeReference:traverse(ASTVisitor, ClassScope)
20945=Compliance_1_7:testBug490988()
20946=Compliance_1_7:testBug390889_c()
20947=Compliance_1_7:testBug390889_a()
20948=Compliance_1_7:Compliance_1_7(String)
20949=Compliance_1_7:test2()
20950=Compliance_1_7:suite()
20951=Compliance_1_7:testClass()
20952=Compliance_1_7:testBug390889_b()
20953=Compliance_1_7:test1()
20954=NullReferenceImplTransformations:SymmetricalThreeDimensionalTransformation:mark(char, boolean, boolean, int, int, char)
20955=NullReferenceImplTransformations:SymmetricalThreeDimensionalTransformation:hydrate()
20956=NullReferenceImplTransformations:ThreeDimensionalTransformation:printMissingEntries(BufferedWriter, String)
20957=NullReferenceImplTransformations:ThreeDimensionalTransformation:ThreeDimensionalTransformation(String, byte[][])
20958=NullReferenceImplTransformations:ThreeDimensionalTransformation:printDefinitions(BufferedWriter, State[], String)
20959=NullReferenceImplTransformations:Transformation:rankForState(State)
20960=NullReferenceImplTransformations:ThreeDimensionalTransformation:mark(char, boolean, boolean, int, int, char)
20961=NullReferenceImplTransformations:Transformation:fail()
20962=NullReferenceImplTransformations:TwoDimensionalTransformation:printTruthTables(File)
20963=NullReferenceImplTransformations:SymmetricalThreeDimensionalTransformation:SymmetricalThreeDimensionalTransformation(String, byte[][])
20964=NullReferenceImplTransformations:Transformation:computeOutputs(State[])
20965=NullReferenceImplTransformations:TwoDimensionalTransformation:test()
20966=NullReferenceImplTransformations:Transformation:checkContiguity(String, String)
20967=NullReferenceImplTransformations:Transformation:reinitializeFromComments(BufferedReader, BufferedWriter)
20968=NullReferenceImplTransformations:SymmetricalThreeDimensionalTransformation:printMissingEntries(BufferedWriter, String)
20969=NullReferenceImplTransformations:ThreeDimensionalTransformation:reinitializeFromComments(BufferedReader, BufferedWriter)
20970=NullReferenceImplTransformations:ThreeDimensionalTransformation:printTruthTables(File)
20971=NullReferenceImplTransformations:TwoDimensionalTransformation:reinitializeFromComputedValues(BufferedReader, BufferedWriter, State[])
20972=NullReferenceImplTransformations:TwoDimensionalTransformation:reinitializeFromComments(BufferedReader, BufferedWriter)
20973=NullReferenceImplTransformations:SymmetricalThreeDimensionalTransformation:checkPair(State, State)
20974=NullReferenceImplTransformations:ThreeDimensionalTransformation:test()
20975=NullReferenceImplTransformations:ThreeDimensionalTransformation:reinitializeFromComputedValues(BufferedReader, BufferedWriter, State[])
20976=NullReferenceImplTransformations:ThreeDimensionalTransformation:output(UnconditionalFlowInfo, UnconditionalFlowInfo)
20977=NullReferenceImplTransformations:Transformation:test()
20978=NullReferenceImplTransformations:SymmetricalThreeDimensionalTransformation:getResult(Map, State, State)
20979=NullReferenceImplTransformations:ThreeDimensionalTransformation:ThreeDimensionalTransformation(String)
20980=NullReferenceImplTransformations:SymmetricalThreeDimensionalTransformation:checkSymmetry(Map)
20981=NullReferenceImplTransformations:ThreeDimensionalTransformation:test(int, boolean)
20982=NullReferenceImplTransformations:ThreeDimensionalTransformation:getResult(Map, State, State)
20983=NullReferenceImplTransformations:TwoDimensionalTransformation:TwoDimensionalTransformation(String, byte[][])
20984=NullReferenceImplTransformations:Transformation:reinitializeFromComputedValues(BufferedReader, BufferedWriter, State[])
20985=NullReferenceImplTransformations:ThreeDimensionalTransformation:hydrate()
20986=NullReferenceImplTransformations:ThreeDimensionalTransformation:computeOutputs(State[])
20987=NullReferenceImplTransformations:SymmetricalThreeDimensionalTransformation:test(int, boolean)
20988=NullReferenceImplTransformations:Transformation:hydrate()
20989=NullReferenceImplTransformations:Transformation:printTruthTables(File)
20990=NullReferenceImplTransformations:SymmetricalThreeDimensionalTransformation:addPair(State, State)
20991=NullReferenceImplTransformations:SymmetricalThreeDimensionalTransformation:printDefinitions(BufferedWriter, State[], String)
20992=NullReferenceImplTransformations:TwoDimensionalTransformation:output(UnconditionalFlowInfo, TestLocalVariableBinding)
20993=NullReferenceImplTransformations:SymmetricalThreeDimensionalTransformation:printInitializers(BufferedWriter, State[], String)
20994=NullReferenceImplTransformations:Transformation:Transformation(String)
20995=NullReferenceImplTransformations:TwoDimensionalTransformation:hydrate()
20996=NullReferenceImplTransformations:ThreeDimensionalTransformation:printInitializers(BufferedWriter, State[], String)
20997=NullReferenceImplTransformations:TwoDimensionalTransformation:computeOutputs(State[])
20998=firstClass:myMethod()
20999=JavaSearchBugsTests2:testBug381567b()
21000=JavaSearchBugsTests2:testBug357547d()
21001=JavaSearchBugsTests2:testBug478042_0001()
21002=JavaSearchBugsTests2:testBug375971i()
21003=JavaSearchBugsTests2:testBug469965_0001()
21004=JavaSearchBugsTests2:testBug483650_009()
21005=JavaSearchBugsTests2:testBug357547f()
21006=JavaSearchBugsTests2:testBug478042_0003()
21007=JavaSearchBugsTests2:testBug376673b()
21008=JavaSearchBugsTests2:testBug478042_006()
21009=JavaSearchBugsTests2:testBug383315b()
21010=JavaSearchBugsTests2:testBug483650_007()
21011=JavaSearchBugsTests2:testBug473921()
21012=JavaSearchBugsTests2:testBug375971e()
21013=JavaSearchBugsTests2:testBug123836c()
21014=JavaSearchBugsTests2:testBug483650_005()
21015=JavaSearchBugsTests2:testBug375971g()
21016=JavaSearchBugsTests2:testBug123836a()
21017=JavaSearchBugsTests2:suite()
21018=JavaSearchBugsTests2:testBug483650_0004()
21019=JavaSearchBugsTests2:testBug381392()
21020=JavaSearchBugsTests2:testBug123836g()
21021=JavaSearchBugsTests2:testBug297825d()
21022=JavaSearchBugsTests2:testBug478042_008()
21023=JavaSearchBugsTests2:testBug423409()
21024=JavaSearchBugsTests2:testBug375971b()
21025=JavaSearchBugsTests2:testBug123836e()
21026=JavaSearchBugsTests2:testBug297825b()
21027=JavaSearchBugsTests2:_testBug123836h1()
21028=JavaSearchBugsTests2:testBug376673d()
21029=JavaSearchBugsTests2:testBug395348()
21030=JavaSearchBugsTests2:testBug357547b()
21031=JavaSearchBugsTests2:testBug483650_0002()
21032=JavaSearchBugsTests2:testBug123836i()
21033=JavaSearchBugsTests2:testBug376673a()
21034=JavaSearchBugsTests2:testBug478042_0002()
21035=JavaSearchBugsTests2:testBug357547c()
21036=JavaSearchBugsTests2:testBug375971h()
21037=JavaSearchBugsTests2:testBug401272()
21038=JavaSearchBugsTests2:testBug357547e()
21039=JavaSearchBugsTests2:testBug376673c()
21040=JavaSearchBugsTests2:testBug478042_0004()
21041=JavaSearchBugsTests2:testBug362633()
21042=JavaSearchBugsTests2:testBug381567a()
21043=JavaSearchBugsTests2:testBug469965_0002()
21044=JavaSearchBugsTests2:testBug357547g()
21045=JavaSearchBugsTests2:testBug378390()
21046=JavaSearchBugsTests2:testBug491656_001()
21047=JavaSearchBugsTests2:testBug375971d()
21048=JavaSearchBugsTests2:testBug123836d()
21049=JavaSearchBugsTests2:testBug478042_005()
21050=JavaSearchBugsTests2:testBug483650_008()
21051=JavaSearchBugsTests2:testBug483303_001()
21052=JavaSearchBugsTests2:testBug375971f()
21053=JavaSearchBugsTests2:TestCollector:acceptSearchMatch(SearchMatch)
21054=JavaSearchBugsTests2:testBug123836b()
21055=JavaSearchBugsTests2:setUp()
21056=JavaSearchBugsTests2:testBug383315a()
21057=JavaSearchBugsTests2:testBug483650_006()
21058=JavaSearchBugsTests2:testBug483650_0003()
21059=JavaSearchBugsTests2:testBug123836h()
21060=JavaSearchBugsTests2:testBug489404()
21061=JavaSearchBugsTests2:testBug375971a()
21062=JavaSearchBugsTests2:testBug123836f()
21063=JavaSearchBugsTests2:testBug297825c()
21064=JavaSearchBugsTests2:testBug478042_007()
21065=JavaSearchBugsTests2:testBug375971c()
21066=JavaSearchBugsTests2:testBug376673e()
21067=JavaSearchBugsTests2:testBug382778()
21068=JavaSearchBugsTests2:testBug297825a()
21069=JavaSearchBugsTests2:_testBug123836g1()
21070=JavaSearchBugsTests2:testBug123836j()
21071=JavaSearchBugsTests2:testBug357547a()
21072=JavaSearchBugsTests2:testBug342393()
21073=JavaSearchBugsTests2:testBug483650_0001()
21074=JavaSearchBugsTests2:JavaSearchBugsTests2(String)
21075=ExplicitConstructorCall:setDepth(int)
21076=ExplicitConstructorCall:isTypeAccess()
21077=ExplicitConstructorCall:isImplicitSuper()
21078=ExplicitConstructorCall:manageEnclosingInstanceAccessIfNecessary(BlockScope, FlowInfo)
21079=ExplicitConstructorCall:printStatement(int, StringBuffer)
21080=ExplicitConstructorCall:resolve(BlockScope)
21081=ExplicitConstructorCall:generateCode(BlockScope, CodeStream)
21082=ExplicitConstructorCall:analyseCode(BlockScope, FlowContext, FlowInfo)
21083=ExplicitConstructorCall:genericTypeArguments()
21084=ExplicitConstructorCall:traverse(ASTVisitor, BlockScope)
21085=ExplicitConstructorCall:isSuperAccess()
21086=ExplicitConstructorCall:setFieldIndex(int)
21087=ExplicitConstructorCall:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo)
21088=ExplicitConstructorCall:setActualReceiverType(ReferenceBinding)
21089=ExplicitConstructorCall:ExplicitConstructorCall(int)
21090=Bug:buildStartTag(String, String)
21091=CompletionParserTestKeyword:test0386_Method()
21092=CompletionParserTestKeyword:test0095_Method()
21093=CompletionParserTestKeyword:test0291_Method()
21094=CompletionParserTestKeyword:test0344()
21095=CompletionParserTestKeyword:test0137()
21096=CompletionParserTestKeyword:test0042_Diet()
21097=CompletionParserTestKeyword:test0039_Diet()
21098=CompletionParserTestKeyword:test0224()
21099=CompletionParserTestKeyword:test0126()
21100=CompletionParserTestKeyword:test0355()
21101=CompletionParserTestKeyword:test0100_Diet()
21102=CompletionParserTestKeyword:test0006()
21103=CompletionParserTestKeyword:test0213()
21104=CompletionParserTestKeyword:test0259()
21105=CompletionParserTestKeyword:test0108_Diet()
21106=CompletionParserTestKeyword:test0115()
21107=CompletionParserTestKeyword:test0185_Method()
21108=CompletionParserTestKeyword:test0366()
21109=CompletionParserTestKeyword:test0320()
21110=CompletionParserTestKeyword:test0182_Diet()
21111=CompletionParserTestKeyword:test0039_Method()
21112=CompletionParserTestKeyword:test0202()
21113=CompletionParserTestKeyword:test0248()
21114=CompletionParserTestKeyword:test0214_Method()
21115=CompletionParserTestKeyword:test0017()
21116=CompletionParserTestKeyword:test0104()
21117=CompletionParserTestKeyword:test0070()
21118=CompletionParserTestKeyword:test0331()
21119=CompletionParserTestKeyword:test0385_Diet()
21120=CompletionParserTestKeyword:test0219_Method()
21121=CompletionParserTestKeyword:test0279()
21122=CompletionParserTestKeyword:test0046_Method()
21123=CompletionParserTestKeyword:test0190_Diet()
21124=CompletionParserTestKeyword:test0055_Method()
21125=CompletionParserTestKeyword:test0346()
21126=CompletionParserTestKeyword:test0135()
21127=CompletionParserTestKeyword:test0023_Diet()
21128=CompletionParserTestKeyword:test0193_Diet()
21129=CompletionParserTestKeyword:test0300()
21130=CompletionParserTestKeyword:test0304_Method()
21131=CompletionParserTestKeyword:test0275_Method()
21132=CompletionParserTestKeyword:test0028_Diet()
21133=CompletionParserTestKeyword:test0268()
21134=CompletionParserTestKeyword:test0380_Diet()
21135=CompletionParserTestKeyword:test0027_Method()
21136=CompletionParserTestKeyword:test0187_Diet()
21137=CompletionParserTestKeyword:test0058_Diet()
21138=CompletionParserTestKeyword:test0377_Diet()
21139=CompletionParserTestKeyword:test0124()
21140=CompletionParserTestKeyword:test0357()
21141=CompletionParserTestKeyword:test0303_Diet()
21142=CompletionParserTestKeyword:test0388_Diet()
21143=CompletionParserTestKeyword:test0311()
21144=CompletionParserTestKeyword:test0094_Diet()
21145=CompletionParserTestKeyword:test0341_Method()
21146=CompletionParserTestKeyword:test0004()
21147=CompletionParserTestKeyword:test0257()
21148=CompletionParserTestKeyword:test0211()
21149=CompletionParserTestKeyword:test0113()
21150=CompletionParserTestKeyword:test0368()
21151=CompletionParserTestKeyword:test0322()
21152=CompletionParserTestKeyword:test0090_Method()
21153=CompletionParserTestKeyword:test0100_Method()
21154=CompletionParserTestKeyword:test0159()
21155=CompletionParserTestKeyword:test0246()
21156=CompletionParserTestKeyword:test0200()
21157=CompletionParserTestKeyword:test0015()
21158=CompletionParserTestKeyword:test0102()
21159=CompletionParserTestKeyword:test0333()
21160=CompletionParserTestKeyword:test0284_Method()
21161=CompletionParserTestKeyword:test0277()
21162=CompletionParserTestKeyword:test0340()
21163=CompletionParserTestKeyword:test0133()
21164=CompletionParserTestKeyword:test0301_Method()
21165=CompletionParserTestKeyword:test0179()
21166=CompletionParserTestKeyword:test0266()
21167=CompletionParserTestKeyword:test0035()
21168=CompletionParserTestKeyword:test0122()
21169=CompletionParserTestKeyword:test0351()
21170=CompletionParserTestKeyword:test0168()
21171=CompletionParserTestKeyword:test0192_Method()
21172=CompletionParserTestKeyword:test0002()
21173=CompletionParserTestKeyword:test0255()
21174=CompletionParserTestKeyword:test0048()
21175=CompletionParserTestKeyword:test0294_Diet()
21176=CompletionParserTestKeyword:test0218_Diet()
21177=CompletionParserTestKeyword:test0238_Method()
21178=CompletionParserTestKeyword:test0111()
21179=CompletionParserTestKeyword:test0362()
21180=CompletionParserTestKeyword:test0185_Diet()
21181=CompletionParserTestKeyword:test0157()
21182=CompletionParserTestKeyword:test0309()
21183=CompletionParserTestKeyword:test0244()
21184=CompletionParserTestKeyword:test0013()
21185=CompletionParserTestKeyword:test0146()
21186=CompletionParserTestKeyword:test0373()
21187=CompletionParserTestKeyword:test0099_Diet()
21188=CompletionParserTestKeyword:test0098_Method()
21189=CompletionParserTestKeyword:test0284_Diet()
21190=CompletionParserTestKeyword:test0092_Method()
21191=CompletionParserTestKeyword:test0187_Method()
21192=CompletionParserTestKeyword:test0068()
21193=CompletionParserTestKeyword:test0289_Diet()
21194=CompletionParserTestKeyword:test0108_Method()
21195=CompletionParserTestKeyword:test0131()
21196=CompletionParserTestKeyword:test0177()
21197=CompletionParserTestKeyword:test0264()
21198=CompletionParserTestKeyword:test0033()
21199=CompletionParserTestKeyword:test0079()
21200=CompletionParserTestKeyword:test0240_Diet()
21201=CompletionParserTestKeyword:test0382_Diet()
21202=CompletionParserTestKeyword:test0388_Method()
21203=CompletionParserTestKeyword:test0251_Diet()
21204=CompletionParserTestKeyword:test0120()
21205=CompletionParserTestKeyword:test0353()
21206=CompletionParserTestKeyword:test0166()
21207=CompletionParserTestKeyword:test0299()
21208=CompletionParserTestKeyword:test0235_Method()
21209=CompletionParserTestKeyword:test0364()
21210=CompletionParserTestKeyword:test0155()
21211=CompletionParserTestKeyword:test0242()
21212=CompletionParserTestKeyword:test0011()
21213=CompletionParserTestKeyword:test0041_Method()
21214=CompletionParserTestKeyword:test0234_Diet()
21215=CompletionParserTestKeyword:test0232_Method()
21216=CompletionParserTestKeyword:test0289_Method()
21217=CompletionParserTestKeyword:test0144()
21218=CompletionParserTestKeyword:test0152()
21219=CompletionParserTestKeyword:test0296()
21220=CompletionParserTestKeyword:test0089()
21221=CompletionParserTestKeyword:test0147_Method()
21222=CompletionParserTestKeyword:test0040_Diet()
21223=CompletionParserTestKeyword:test0306()
21224=CompletionParserTestKeyword:test0198()
21225=CompletionParserTestKeyword:test0240_Method()
21226=CompletionParserTestKeyword:test0081_Diet()
21227=CompletionParserTestKeyword:test0141()
21228=CompletionParserTestKeyword:test0370()
21229=CompletionParserTestKeyword:test0054()
21230=CompletionParserTestKeyword:test0235_Diet()
21231=CompletionParserTestKeyword:test0317()
21232=CompletionParserTestKeyword:test0253_Method()
21233=CompletionParserTestKeyword:test0276_Diet()
21234=CompletionParserTestKeyword:test0067()
21235=CompletionParserTestKeyword:test0130()
21236=CompletionParserTestKeyword:test0239_Diet()
21237=CompletionParserTestKeyword:test0291_Diet()
21238=CompletionParserTestKeyword:test0217_Diet()
21239=CompletionParserTestKeyword:test0176()
21240=CompletionParserTestKeyword:test0328()
21241=CompletionParserTestKeyword:test0183_Method()
21242=CompletionParserTestKeyword:test0263()
21243=CompletionParserTestKeyword:test0032()
21244=CompletionParserTestKeyword:test0078()
21245=CompletionParserTestKeyword:test0220_Method()
21246=CompletionParserTestKeyword:test0165()
21247=CompletionParserTestKeyword:test0339()
21248=CompletionParserTestKeyword:test0150()
21249=CompletionParserTestKeyword:test0196()
21250=CompletionParserTestKeyword:test0233_Method()
21251=CompletionParserTestKeyword:test0301_Diet()
21252=CompletionParserTestKeyword:test0287_Diet()
21253=CompletionParserTestKeyword:test0087()
21254=CompletionParserTestKeyword:test0361()
21255=CompletionParserTestKeyword:test0192_Diet()
21256=CompletionParserTestKeyword:test0025_Diet()
21257=CompletionParserTestKeyword:test0342_Diet()
21258=CompletionParserTestKeyword:test0028_Method()
21259=CompletionParserTestKeyword:test0308()
21260=CompletionParserTestKeyword:test0372()
21261=CompletionParserTestKeyword:test0056_Diet()
21262=CompletionParserTestKeyword:test0375_Diet()
21263=CompletionParserTestKeyword:test0386_Diet()
21264=CompletionParserTestKeyword:test0052()
21265=CompletionParserTestKeyword:test0252_Method()
21266=CompletionParserTestKeyword:test0283()
21267=CompletionParserTestKeyword:test0097_Method()
21268=CompletionParserTestKeyword:test0092_Diet()
21269=CompletionParserTestKeyword:test0319()
21270=CompletionParserTestKeyword:test0107_Diet()
21271=CompletionParserTestKeyword:test0174()
21272=CompletionParserTestKeyword:test0065()
21273=CompletionParserTestKeyword:test0272()
21274=CompletionParserTestKeyword:test0163()
21275=CompletionParserTestKeyword:test0076()
21276=CompletionParserTestKeyword:test0208()
21277=CompletionParserTestKeyword:test0030()
21278=CompletionParserTestKeyword:test0261()
21279=CompletionParserTestKeyword:test0107_Method()
21280=CompletionParserTestKeyword:test0097_Diet()
21281=CompletionParserTestKeyword:test0194()
21282=CompletionParserTestKeyword:test0236_Method()
21283=CompletionParserTestKeyword:test0085()
21284=CompletionParserTestKeyword:test0377_Method()
21285=CompletionParserTestKeyword:test0025_Method()
21286=CompletionParserTestKeyword:test0348()
21287=CompletionParserTestKeyword:test0045_Diet()
21288=CompletionParserTestKeyword:test0292_Method()
21289=CompletionParserTestKeyword:test0228()
21290=CompletionParserTestKeyword:test0313()
21291=CompletionParserTestKeyword:test0050()
21292=CompletionParserTestKeyword:test0387_Method()
21293=CompletionParserTestKeyword:test0281()
21294=CompletionParserTestKeyword:test0359()
21295=CompletionParserTestKeyword:test0172()
21296=CompletionParserTestKeyword:test0045_Method()
21297=CompletionParserTestKeyword:test0081_Method()
21298=CompletionParserTestKeyword:test0063()
21299=CompletionParserTestKeyword:test0324()
21300=CompletionParserTestKeyword:test0270()
21301=CompletionParserTestKeyword:test0119()
21302=CompletionParserTestKeyword:test0221_Diet()
21303=CompletionParserTestKeyword:test0161()
21304=CompletionParserTestKeyword:test0206()
21305=CompletionParserTestKeyword:test0249_Method()
21306=CompletionParserTestKeyword:test0232_Diet()
21307=CompletionParserTestKeyword:test0378_Diet()
21308=CompletionParserTestKeyword:test0095_Diet()
21309=CompletionParserTestKeyword:test0058_Method()
21310=CompletionParserTestKeyword:test0074()
21311=CompletionParserTestKeyword:test0335()
21312=CompletionParserTestKeyword:test0094_Method()
21313=CompletionParserTestKeyword:test0190_Method()
21314=CompletionParserTestKeyword:test0285_Method()
21315=CompletionParserTestKeyword:test0022_Method()
21316=CompletionParserTestKeyword:test0239_Method()
21317=CompletionParserTestKeyword:test0083()
21318=CompletionParserTestKeyword:test0139()
21319=CompletionParserTestKeyword:test0226()
21320=CompletionParserTestKeyword:test0091_Method()
21321=CompletionParserTestKeyword:test0384_Diet()
21322=CompletionParserTestKeyword:test0216_Method()
21323=CompletionParserTestKeyword:test0038_Method()
21324=CompletionParserTestKeyword:test0315()
21325=CompletionParserTestKeyword:test0128()
21326=CompletionParserTestKeyword:test0090_Diet()
21327=CompletionParserTestKeyword:test0170()
21328=CompletionParserTestKeyword:test0302_Method()
21329=CompletionParserTestKeyword:test0237_Diet()
21330=CompletionParserTestKeyword:test0008()
21331=CompletionParserTestKeyword:test0183_Diet()
21332=CompletionParserTestKeyword:test0381_Method()
21333=CompletionParserTestKeyword:test0061()
21334=CompletionParserTestKeyword:test0326()
21335=CompletionParserTestKeyword:test0117()
21336=CompletionParserTestKeyword:test0019()
21337=CompletionParserTestKeyword:test0188_Diet()
21338=CompletionParserTestKeyword:test0204()
21339=CompletionParserTestKeyword:test0384_Method()
21340=CompletionParserTestKeyword:test0072()
21341=CompletionParserTestKeyword:test0337()
21342=CompletionParserTestKeyword:test0106()
21343=CompletionParserTestKeyword:test0212()
21344=CompletionParserTestKeyword:test0258()
21345=CompletionParserTestKeyword:test0005()
21346=CompletionParserTestKeyword:test0193_Method()
21347=CompletionParserTestKeyword:test0321()
21348=CompletionParserTestKeyword:test0367()
21349=CompletionParserTestKeyword:test0114()
21350=CompletionParserTestKeyword:test0288_Method()
21351=CompletionParserTestKeyword:test0201()
21352=CompletionParserTestKeyword:test0247()
21353=CompletionParserTestKeyword:test0222_Diet()
21354=CompletionParserTestKeyword:test0233_Diet()
21355=CompletionParserTestKeyword:test0016()
21356=CompletionParserTestKeyword:test0149()
21357=CompletionParserTestKeyword:test0332()
21358=CompletionParserTestKeyword:test0026_Method()
21359=CompletionParserTestKeyword:test0103()
21360=CompletionParserTestKeyword:test0222_Method()
21361=CompletionParserTestKeyword:test0029()
21362=CompletionParserTestKeyword:test0250_Method()
21363=CompletionParserTestKeyword:test0138()
21364=CompletionParserTestKeyword:test0343()
21365=CompletionParserTestKeyword:test0186_Diet()
21366=CompletionParserTestKeyword:test0180()
21367=CompletionParserTestKeyword:test0225()
21368=CompletionParserTestKeyword:test0381_Diet()
21369=CompletionParserTestKeyword:test0042_Method()
21370=CompletionParserTestKeyword:test0127()
21371=CompletionParserTestKeyword:test0354()
21372=CompletionParserTestKeyword:test0256()
21373=CompletionParserTestKeyword:test0285_Diet()
21374=CompletionParserTestKeyword:test0003()
21375=CompletionParserTestKeyword:test0210()
21376=CompletionParserTestKeyword:test0249_Diet()
21377=CompletionParserTestKeyword:test0049()
21378=CompletionParserTestKeyword:test0369()
21379=CompletionParserTestKeyword:test0112()
21380=CompletionParserTestKeyword:test0323()
21381=CompletionParserTestKeyword:test0158()
21382=CompletionParserTestKeyword:test0245()
21383=CompletionParserTestKeyword:test0014()
21384=CompletionParserTestKeyword:test0101()
21385=CompletionParserTestKeyword:test0334()
21386=CompletionParserTestKeyword:test0234_Method()
21387=CompletionParserTestKeyword:test0021_Method()
21388=CompletionParserTestKeyword:test0186_Method()
21389=CompletionParserTestKeyword:test0382_Method()
21390=CompletionParserTestKeyword:test0293_Diet()
21391=CompletionParserTestKeyword:test0274_Diet()
21392=CompletionParserTestKeyword:test0238_Diet()
21393=CompletionParserTestKeyword:test0345()
21394=CompletionParserTestKeyword:test0136()
21395=CompletionParserTestKeyword:test0219_Diet()
21396=CompletionParserTestKeyword:test0269()
21397=CompletionParserTestKeyword:test0223()
21398=CompletionParserTestKeyword:test0059_Method()
21399=CompletionParserTestKeyword:test0189_Method()
21400=CompletionParserTestKeyword:test0310()
21401=CompletionParserTestKeyword:test0356()
21402=CompletionParserTestKeyword:test0290_Method()
21403=CompletionParserTestKeyword:test0125()
21404=CompletionParserTestKeyword:test0252_Diet()
21405=CompletionParserTestKeyword:test0380_Method()
21406=CompletionParserTestKeyword:test0254()
21407=CompletionParserTestKeyword:test0001()
21408=CompletionParserTestKeyword:test0047()
21409=CompletionParserTestKeyword:test0184_Method()
21410=CompletionParserTestKeyword:test0363()
21411=CompletionParserTestKeyword:test0156()
21412=CompletionParserTestKeyword:test0038_Diet()
21413=CompletionParserTestKeyword:test0043_Diet()
21414=CompletionParserTestKeyword:test0243()
21415=CompletionParserTestKeyword:test0012()
21416=CompletionParserTestKeyword:test0145()
21417=CompletionParserTestKeyword:test0374()
21418=CompletionParserTestKeyword:test0278()
21419=CompletionParserTestKeyword:test0109_Diet()
21420=CompletionParserTestKeyword:test0342_Method()
21421=CompletionParserTestKeyword:test0290_Diet()
21422=CompletionParserTestKeyword:test0023_Method()
21423=CompletionParserTestKeyword:test0181_Diet()
21424=CompletionParserTestKeyword:test0134()
21425=CompletionParserTestKeyword:test0267()
21426=CompletionParserTestKeyword:test0303_Method()
21427=CompletionParserTestKeyword:test0350()
21428=CompletionParserTestKeyword:test0036()
21429=CompletionParserTestKeyword:test0304_Diet()
21430=CompletionParserTestKeyword:test0123()
21431=CompletionParserTestKeyword:test0385_Method()
21432=CompletionParserTestKeyword:test0169()
21433=CompletionParserTestKeyword:test0276_Method()
21434=CompletionParserTestKeyword:test0181_Method()
21435=CompletionParserTestKeyword:test0298()
21436=CompletionParserTestKeyword:test0021_Diet()
21437=CompletionParserTestKeyword:test0022_Diet()
21438=CompletionParserTestKeyword:test0191_Diet()
21439=CompletionParserTestKeyword:test0365()
21440=CompletionParserTestKeyword:test0154()
21441=CompletionParserTestKeyword:test0241()
21442=CompletionParserTestKeyword:test0010()
21443=CompletionParserTestKeyword:test0286_Method()
21444=CompletionParserTestKeyword:test0330()
21445=CompletionParserTestKeyword:test0143()
21446=CompletionParserTestKeyword:test0098_Diet()
21447=CompletionParserTestKeyword:test0230()
21448=CompletionParserTestKeyword:test0069()
21449=CompletionParserTestKeyword:test0147_Diet()
21450=CompletionParserTestKeyword:test0375_Method()
21451=CompletionParserTestKeyword:test0132()
21452=CompletionParserTestKeyword:test0057_Method()
21453=CompletionParserTestKeyword:test0178()
21454=CompletionParserTestKeyword:test0082_Method()
21455=CompletionParserTestKeyword:test0027_Diet()
21456=CompletionParserTestKeyword:test0265()
21457=CompletionParserTestKeyword:test0034()
21458=CompletionParserTestKeyword:test0376_Diet()
21459=CompletionParserTestKeyword:test0387_Diet()
21460=CompletionParserTestKeyword:test0378_Method()
21461=CompletionParserTestKeyword:test0352()
21462=CompletionParserTestKeyword:test0121()
21463=CompletionParserTestKeyword:test0082_Diet()
21464=CompletionParserTestKeyword:test0167()
21465=CompletionParserTestKeyword:test0093_Diet()
21466=CompletionParserTestKeyword:test0066()
21467=CompletionParserTestKeyword:test0020()
21468=CompletionParserTestKeyword:test0273()
21469=CompletionParserTestKeyword:test0329()
21470=CompletionParserTestKeyword:test0175()
21471=CompletionParserTestKeyword:test0220_Diet()
21472=CompletionParserTestKeyword:test0044_Method()
21473=CompletionParserTestKeyword:test0376_Method()
21474=CompletionParserTestKeyword:test0209()
21475=CompletionParserTestKeyword:test0231_Diet()
21476=CompletionParserTestKeyword:test0077()
21477=CompletionParserTestKeyword:test0217_Method()
21478=CompletionParserTestKeyword:test0031()
21479=CompletionParserTestKeyword:test0164()
21480=CompletionParserTestKeyword:test0262()
21481=CompletionParserTestKeyword:test0080_Method()
21482=CompletionParserTestKeyword:test0297()
21483=CompletionParserTestKeyword:test0153()
21484=CompletionParserTestKeyword:test0199()
21485=CompletionParserTestKeyword:test0191_Method()
21486=CompletionParserTestKeyword:test0305()
21487=CompletionParserTestKeyword:test0037_Diet()
21488=CompletionParserTestKeyword:test0055_Diet()
21489=CompletionParserTestKeyword:test0044_Diet()
21490=CompletionParserTestKeyword:suite()
21491=CompletionParserTestKeyword:test0059_Diet()
21492=CompletionParserTestKeyword:test0188_Method()
21493=CompletionParserTestKeyword:test0250_Diet()
21494=CompletionParserTestKeyword:test0142()
21495=CompletionParserTestKeyword:test0316()
21496=CompletionParserTestKeyword:test0037_Method()
21497=CompletionParserTestKeyword:test0294_Method()
21498=CompletionParserTestKeyword:test0173()
21499=CompletionParserTestKeyword:test0288_Diet()
21500=CompletionParserTestKeyword:test0064()
21501=CompletionParserTestKeyword:test0026_Diet()
21502=CompletionParserTestKeyword:test0040_Method()
21503=CompletionParserTestKeyword:test0271()
21504=CompletionParserTestKeyword:test0189_Diet()
21505=CompletionParserTestKeyword:test0110_Method()
21506=CompletionParserTestKeyword:test0162()
21507=CompletionParserTestKeyword:test0207()
21508=CompletionParserTestKeyword:test0148_Diet()
21509=CompletionParserTestKeyword:test0293_Method()
21510=CompletionParserTestKeyword:test0075()
21511=CompletionParserTestKeyword:test0260()
21512=CompletionParserTestKeyword:test0056_Method()
21513=CompletionParserTestKeyword:test0151()
21514=CompletionParserTestKeyword:test0088()
21515=CompletionParserTestKeyword:test0360()
21516=CompletionParserTestKeyword:test0182_Method()
21517=CompletionParserTestKeyword:test0093_Method()
21518=CompletionParserTestKeyword:test0216_Diet()
21519=CompletionParserTestKeyword:test0295()
21520=CompletionParserTestKeyword:test0307()
21521=CompletionParserTestKeyword:test0197()
21522=CompletionParserTestKeyword:test0184_Diet()
21523=CompletionParserTestKeyword:test0148_Method()
21524=CompletionParserTestKeyword:test0024_Method()
21525=CompletionParserTestKeyword:test0140()
21526=CompletionParserTestKeyword:test0371()
21527=CompletionParserTestKeyword:test0053()
21528=CompletionParserTestKeyword:test0318()
21529=CompletionParserTestKeyword:test0237_Method()
21530=CompletionParserTestKeyword:test0110_Diet()
21531=CompletionParserTestKeyword:test0009()
21532=CompletionParserTestKeyword:test0221_Method()
21533=CompletionParserTestKeyword:test0171()
21534=CompletionParserTestKeyword:test0325()
21535=CompletionParserTestKeyword:test0062()
21536=CompletionParserTestKeyword:test0218_Method()
21537=CompletionParserTestKeyword:test0043_Method()
21538=CompletionParserTestKeyword:test0041_Diet()
21539=CompletionParserTestKeyword:test0118()
21540=CompletionParserTestKeyword:test0160()
21541=CompletionParserTestKeyword:test0096_Method()
21542=CompletionParserTestKeyword:test0205()
21543=CompletionParserTestKeyword:test0336()
21544=CompletionParserTestKeyword:test0073()
21545=CompletionParserTestKeyword:test0287_Method()
21546=CompletionParserTestKeyword:test0195()
21547=CompletionParserTestKeyword:test0236_Diet()
21548=CompletionParserTestKeyword:test0347()
21549=CompletionParserTestKeyword:test0086()
21550=CompletionParserTestKeyword:test0274_Method()
21551=CompletionParserTestKeyword:test0214_Diet()
21552=CompletionParserTestKeyword:test0080_Diet()
21553=CompletionParserTestKeyword:test0231_Method()
21554=CompletionParserTestKeyword:test0379_Method()
21555=CompletionParserTestKeyword:test0099_Method()
21556=CompletionParserTestKeyword:test0229()
21557=CompletionParserTestKeyword:test0358()
21558=CompletionParserTestKeyword:test0051()
21559=CompletionParserTestKeyword:test0312()
21560=CompletionParserTestKeyword:test0091_Diet()
21561=CompletionParserTestKeyword:test0282()
21562=CompletionParserTestKeyword:test0286_Diet()
21563=CompletionParserTestKeyword:test0007()
21564=CompletionParserTestKeyword:test0379_Diet()
21565=CompletionParserTestKeyword:test0060()
21566=CompletionParserTestKeyword:test0116()
21567=CompletionParserTestKeyword:test0251_Method()
21568=CompletionParserTestKeyword:test0024_Diet()
21569=CompletionParserTestKeyword:test0327()
21570=CompletionParserTestKeyword:test0341_Diet()
21571=CompletionParserTestKeyword:test0018()
21572=CompletionParserTestKeyword:test0203()
21573=CompletionParserTestKeyword:test0071()
21574=CompletionParserTestKeyword:test0105()
21575=CompletionParserTestKeyword:CompletionParserTestKeyword(String)
21576=CompletionParserTestKeyword:test0253_Diet()
21577=CompletionParserTestKeyword:test0338()
21578=CompletionParserTestKeyword:test0096_Diet()
21579=CompletionParserTestKeyword:test0292_Diet()
21580=CompletionParserTestKeyword:test0109_Method()
21581=CompletionParserTestKeyword:test0275_Diet()
21582=CompletionParserTestKeyword:test0084()
21583=CompletionParserTestKeyword:test0349()
21584=CompletionParserTestKeyword:test0046_Diet()
21585=CompletionParserTestKeyword:test0057_Diet()
21586=CompletionParserTestKeyword:test0227()
21587=CompletionParserTestKeyword:test0314()
21588=CompletionParserTestKeyword:test0302_Diet()
21589=CompletionParserTestKeyword:test0280()
21590=CompletionParserTestKeyword:test0129()
21591=A:actionPerformed(ActionEvent)
21592=ExceptionTestCase:runTest()
21593=ExceptionTestCase:ExceptionTestCase(String, Class)
21594=B:foo()
21595=SelectionOnMessageSend:resolveType(BlockScope)
21596=SelectionOnMessageSend:printExpression(int, StringBuffer)
21597=SelectionOnMessageSend:findNonDefaultAbstractMethod(MethodBinding)
21598=Test:main(String)
21599=X16b:foo(int, String)
21600=X:foo()
21601=X24:foo()
21602=X:x()
21603=Test:foo(int)
21604=Test:main(String[])
21605=Example:bar(int)
21606=BoundSet:lowerBounds(InferenceVariable, boolean)
21607=BoundSet:ThreeSets:flattenInto(TypeBound[], int)
21608=BoundSet:computeConnectedComponents(InferenceVariable[])
21609=BoundSet:reduceOneConstraint(InferenceContext18, ConstraintFormula)
21610=BoundSet:addConnected(Set<InferenceVariable>, InferenceVariable, Map<InferenceVariable, Set<InferenceVariable>>, Set<InferenceVariable>)
21611=BoundSet:dependsOnResolutionOf(InferenceVariable, InferenceVariable)
21612=BoundSet:incorporate(InferenceContext18)
21613=BoundSet:ThreeSets:mergeTypeParameters(ParameterizedTypeBinding, ParameterizedTypeBinding)
21614=BoundSet:hasOnlyTrivialExceptionBounds(InferenceVariable, TypeBinding[])
21615=BoundSet:flatten()
21616=BoundSet:ThreeSets:useNullHints(long, TypeBinding[], LookupEnvironment)
21617=BoundSet:ThreeSets:findSingleWrapperType()
21618=BoundSet:isInstantiated(InferenceVariable)
21619=BoundSet:hasCaptureBound(Set<InferenceVariable>)
21620=BoundSet:combineSuperAndSub(TypeBound, TypeBound)
21621=BoundSet:condition18_5_2_bullet_3_3_1(InferenceVariable, TypeBinding)
21622=BoundSet:copy()
21623=BoundSet:addBounds(BoundSet, LookupEnvironment)
21624=BoundSet:combineSameSameWithProperType(TypeBound, TypeBound)
21625=BoundSet:ThreeSets:setInstantiation(TypeBinding, InferenceVariable, LookupEnvironment)
21626=BoundSet:getEquivalentOuterVariable(InferenceVariable, InferenceVariable[])
21627=BoundSet:ThreeSets:addBound(TypeBound)
21628=BoundSet:combineEqualSupers(TypeBound, TypeBound)
21629=BoundSet:incorporate(InferenceContext18, TypeBound[], TypeBound[])
21630=BoundSet:getInstantiation(InferenceVariable, LookupEnvironment)
21631=BoundSet:superOnlyRaw(TypeBinding, TypeBinding, LookupEnvironment)
21632=BoundSet:toString()
21633=BoundSet:addBounds(TypeBound[], LookupEnvironment)
21634=BoundSet:ThreeSets:upperBounds(boolean, InferenceVariable)
21635=BoundSet:ThreeSets:hasDependency(InferenceVariable)
21636=BoundSet:combineSameSame(TypeBound, TypeBound)
21637=BoundSet:combineSameSubSuper(TypeBound, TypeBound)
21638=BoundSet:upperBounds(InferenceVariable, boolean)
21639=BoundSet:ThreeSets:copy()
21640=BoundSet:numUninstantiatedVariables(InferenceVariable[])
21641=BoundSet:condition18_5_2_bullet_3_3_2(InferenceVariable, TypeBinding, InferenceContext18)
21642=BoundSet:superTypesWithCommonGenericType(TypeBinding, TypeBinding)
21643=BoundSet:typeArgumentEqualityConstraints(TypeBinding, TypeBinding, boolean)
21644=BoundSet:addBound(TypeBound, LookupEnvironment)
21645=BoundSet:deriveTypeArgumentConstraints(TypeBound, TypeBound)
21646=BoundSet:findWrapperTypeBound(InferenceVariable)
21647=BoundSet:ThreeSets:size()
21648=BoundSet:ThreeSets:hasDependency(Set<TypeBound>, InferenceVariable)
21649=BoundSet:ThreeSets:ThreeSets()
21650=BoundSet:ThreeSets:combineAndUseNullHints(TypeBinding, long, LookupEnvironment)
21651=BoundSet:addBoundsFromTypeParameters(InferenceContext18, TypeVariableBinding[], InferenceVariable[])
21652=BoundSet:ThreeSets:lowerBounds(boolean, InferenceVariable)
21653=BoundSet:addTypeBoundsFromWildcardBound(InferenceContext18, InferenceSubstitution, int, TypeBinding, TypeBinding, TypeBinding)
21654=BoundSet:BoundSet()
21655=A:A()
21656=A:A(int)
21657=A:foo()
21658=A:foo()
21659=TypeVector:TypeVector(IType[])
21660=TypeVector:TypeVector()
21661=TypeVector:copy()
21662=TypeVector:TypeVector(IType)
21663=TypeVector:elements()
21664=TypeVector:remove(IType)
21665=TypeVector:toString()
21666=TypeVector:addAll(IType[])
21667=TypeVector:constructElementSetIfNecessary()
21668=TypeVector:contains(IType)
21669=TypeVector:removeAll()
21670=TypeVector:elementAt(int)
21671=TypeVector:add(IType)
21672=MethodVerifier15:isTypeSubstituable(TypeBinding, TypeBinding)
21673=MethodVerifier15:areTypesEqual(TypeBinding, TypeBinding)
21674=MethodVerifier15:hasBoundedParameters(ParameterizedTypeBinding)
21675=MethodVerifier15:doesMethodOverride(MethodBinding, MethodBinding)
21676=MethodVerifier15:isReturnTypeSubstituable(MethodBinding, MethodBinding)
21677=MethodVerifier15:MethodVerifier15(LookupEnvironment)
21678=MethodVerifier15:checkAgainstInheritedMethods(MethodBinding, MethodBinding[], int)
21679=X:bar(int, String)
21680=X:X()
21681=InternalNamingConventions:excludeNames(char[], char[], char[], char[][])
21682=InternalNamingConventions:computeBaseTypeNames(char, char[][])
21683=InternalNamingConventions:getBaseName(char[], char[][], char[][], boolean, boolean)
21684=InternalNamingConventions:generateNonConstantName(char[][], int, boolean)
21685=InternalNamingConventions:computeBaseTypeNames(char[], boolean, char[][])
21686=InternalNamingConventions:getBaseName(int, IJavaProject, char[], boolean)
21687=InternalNamingConventions:suggestVariableNames(int, int, char[], IJavaProject, int, char[], char[][], boolean, INamingRequestor)
21688=InternalNamingConventions:getNameScanner(CompilerOptions)
21689=InternalNamingConventions:computeNonBaseTypeNames(char[], boolean, boolean)
21690=InternalNamingConventions:removeVariablePrefixAndSuffix(int, IJavaProject, char[])
21691=InternalNamingConventions:acceptName(char[], char[], char[], boolean, boolean, int, INamingRequestor)
21692=InternalNamingConventions:generateConstantName(char[][], int, boolean)
21693=InternalNamingConventions:removeVariablePrefixAndSuffix(char[], char[][], char[][], boolean)
21694=InternalNamingConventions:removePrefix(char[], char[][])
21695=TypeParameterLocator:matchContainer()
21696=TypeParameterLocator:resolveLevel(ASTNode)
21697=TypeParameterLocator:match(TypeReference, MatchingNodeSet)
21698=TypeParameterLocator:toString()
21699=TypeParameterLocator:match(TypeParameter, MatchingNodeSet)
21700=TypeParameterLocator:resolveLevel(Binding)
21701=TypeParameterLocator:referenceType()
21702=TypeParameterLocator:TypeParameterLocator(TypeParameterPattern)
21703=TypeParameterLocator:matchTypeParameter(TypeVariableBinding, boolean)
21704=LambdaExpressionsTest:testreduced432605()
21705=LambdaExpressionsTest:test039()
21706=LambdaExpressionsTest:test430035e()
21707=LambdaExpressionsTest:test449063d()
21708=LambdaExpressionsTest:test028()
21709=LambdaExpressionsTest:test426411f()
21710=LambdaExpressionsTest:test406744o()
21711=LambdaExpressionsTest:suite()
21712=LambdaExpressionsTest:test429112a()
21713=LambdaExpressionsTest:test017()
21714=LambdaExpressionsTest:test006()
21715=LambdaExpressionsTest:test432605()
21716=LambdaExpressionsTest:LambdaExpressionsTest(String)
21717=LambdaExpressionsTest:test037()
21718=LambdaExpressionsTest:test430035c()
21719=LambdaExpressionsTest:test430310c()
21720=LambdaExpressionsTest:test427483()
21721=LambdaExpressionsTest:test449063f()
21722=LambdaExpressionsTest:test026()
21723=LambdaExpressionsTest:test432682()
21724=LambdaExpressionsTest:test406744m()
21725=LambdaExpressionsTest:test015()
21726=LambdaExpressionsTest:testReferenceExpressionInference3a()
21727=LambdaExpressionsTest:test004()
21728=LambdaExpressionsTest:test428003a()
21729=LambdaExpressionsTest:test423684()
21730=LambdaExpressionsTest:test050()
21731=LambdaExpressionsTest:test406744d()
21732=LambdaExpressionsTest:test430310a()
21733=LambdaExpressionsTest:test447119d()
21734=LambdaExpressionsTest:test477263b()
21735=LambdaExpressionsTest:test406744s()
21736=LambdaExpressionsTest:test459305()
21737=LambdaExpressionsTest:test476859()
21738=LambdaExpressionsTest:test406744b()
21739=LambdaExpressionsTest:test432531()
21740=LambdaExpressionsTest:test428261()
21741=LambdaExpressionsTest:test428261a()
21742=LambdaExpressionsTest:testReferenceExpressionInference2()
21743=LambdaExpressionsTest:test406744q()
21744=LambdaExpressionsTest:test428857()
21745=LambdaExpressionsTest:test447119b()
21746=LambdaExpressionsTest:test429112c()
21747=LambdaExpressionsTest:test019()
21748=LambdaExpressionsTest:test430015()
21749=LambdaExpressionsTest:test456395()
21750=LambdaExpressionsTest:test445949()
21751=LambdaExpressionsTest:test426086()
21752=LambdaExpressionsTest:test432520()
21753=LambdaExpressionsTest:test008()
21754=LambdaExpressionsTest:test406744h()
21755=LambdaExpressionsTest:test054()
21756=LambdaExpressionsTest:test428552()
21757=LambdaExpressionsTest:test428857a()
21758=LambdaExpressionsTest:test043()
21759=LambdaExpressionsTest:test489631()
21760=LambdaExpressionsTest:test431514()
21761=LambdaExpressionsTest:test436542()
21762=LambdaExpressionsTest:test032()
21763=LambdaExpressionsTest:test437781()
21764=LambdaExpressionsTest:test406744w()
21765=LambdaExpressionsTest:testLambdaInference1()
21766=LambdaExpressionsTest:test021()
21767=LambdaExpressionsTest:test432619a()
21768=LambdaExpressionsTest:testClass()
21769=LambdaExpressionsTest:test424589()
21770=LambdaExpressionsTest:test052()
21771=LambdaExpressionsTest:test406744f()
21772=LambdaExpressionsTest:test444785()
21773=LambdaExpressionsTest:test427962()
21774=LambdaExpressionsTest:test041()
21775=LambdaExpressionsTest:test440152a()
21776=LambdaExpressionsTest:test030()
21777=LambdaExpressionsTest:test406744u()
21778=LambdaExpressionsTest:test430241()
21779=LambdaExpressionsTest:test447119()
21780=LambdaExpressionsTest:test476859a()
21781=LambdaExpressionsTest:test425712()
21782=LambdaExpressionsTest:test478533a()
21783=LambdaExpressionsTest:test406744l()
21784=LambdaExpressionsTest:test058()
21785=LambdaExpressionsTest:test012()
21786=LambdaExpressionsTest:test430035a()
21787=LambdaExpressionsTest:testBug419048_2()
21788=LambdaExpressionsTest:test047()
21789=LambdaExpressionsTest:test001()
21790=LambdaExpressionsTest:testGenericArrayCreation()
21791=LambdaExpressionsTest:test444772()
21792=LambdaExpressionsTest:test426411b()
21793=LambdaExpressionsTest:test477263()
21794=LambdaExpressionsTest:test036()
21795=LambdaExpressionsTest:test438534()
21796=LambdaExpressionsTest:test427744()
21797=LambdaExpressionsTest:test428112()
21798=LambdaExpressionsTest:test025()
21799=LambdaExpressionsTest:test430766()
21800=LambdaExpressionsTest:test430043()
21801=LambdaExpressionsTest:test428003()
21802=LambdaExpressionsTest:test406744j()
21803=LambdaExpressionsTest:test010()
21804=LambdaExpressionsTest:test056()
21805=LambdaExpressionsTest:test429969()
21806=LambdaExpressionsTest:test449063b()
21807=LambdaExpressionsTest:test045()
21808=LambdaExpressionsTest:test432625()
21809=LambdaExpressionsTest:test426411d()
21810=LambdaExpressionsTest:test431514a()
21811=LambdaExpressionsTest:test034()
21812=LambdaExpressionsTest:test440152()
21813=LambdaExpressionsTest:test425512()
21814=LambdaExpressionsTest:test023()
21815=LambdaExpressionsTest:test424628()
21816=LambdaExpressionsTest:test422515a()
21817=LambdaExpressionsTest:test406744p()
21818=LambdaExpressionsTest:test447119a()
21819=LambdaExpressionsTest:test429112b()
21820=LambdaExpressionsTest:test016()
21821=LambdaExpressionsTest:test421536()
21822=LambdaExpressionsTest:testReferenceExpressionInference3b()
21823=LambdaExpressionsTest:test430035f()
21824=LambdaExpressionsTest:test005()
21825=LambdaExpressionsTest:test426086a()
21826=LambdaExpressionsTest:test430766a()
21827=LambdaExpressionsTest:testBug485529()
21828=LambdaExpressionsTest:test430040()
21829=LambdaExpressionsTest:test432110()
21830=LambdaExpressionsTest:test449063c()
21831=LambdaExpressionsTest:test029()
21832=LambdaExpressionsTest:test406744n()
21833=LambdaExpressionsTest:test014()
21834=LambdaExpressionsTest:test461004()
21835=LambdaExpressionsTest:test425152()
21836=LambdaExpressionsTest:test449063()
21837=LambdaExpressionsTest:test003()
21838=LambdaExpressionsTest:test427627()
21839=LambdaExpressionsTest:test049()
21840=LambdaExpressionsTest:test429763a()
21841=LambdaExpressionsTest:test432619()
21842=LambdaExpressionsTest:test038()
21843=LambdaExpressionsTest:test430035d()
21844=LambdaExpressionsTest:test449063e()
21845=LambdaExpressionsTest:test426411()
21846=LambdaExpressionsTest:test027()
21847=LambdaExpressionsTest:test477263a()
21848=LambdaExpressionsTest:test447119e()
21849=LambdaExpressionsTest:test406744t()
21850=LambdaExpressionsTest:test421712()
21851=LambdaExpressionsTest:test009()
21852=LambdaExpressionsTest:test051()
21853=LambdaExpressionsTest:test406744c()
21854=LambdaExpressionsTest:test430310b()
21855=LambdaExpressionsTest:test448802()
21856=LambdaExpressionsTest:test489631a()
21857=LambdaExpressionsTest:test447119c()
21858=LambdaExpressionsTest:test018()
21859=LambdaExpressionsTest:test406744r()
21860=LambdaExpressionsTest:test428857c()
21861=LambdaExpressionsTest:test467825a()
21862=LambdaExpressionsTest:testBug479284()
21863=LambdaExpressionsTest:test007()
21864=LambdaExpressionsTest:testBug424742()
21865=LambdaExpressionsTest:test426074()
21866=LambdaExpressionsTest:test430310()
21867=LambdaExpressionsTest:test406744a()
21868=LambdaExpressionsTest:test429763()
21869=LambdaExpressionsTest:testReferenceExpressionInference1()
21870=LambdaExpressionsTest:test424226()
21871=LambdaExpressionsTest:test031()
21872=LambdaExpressionsTest:test406744x()
21873=LambdaExpressionsTest:test443889()
21874=LambdaExpressionsTest:test020()
21875=LambdaExpressionsTest:test439515a()
21876=LambdaExpressionsTest:test055()
21877=LambdaExpressionsTest:test406744g()
21878=LambdaExpressionsTest:test428857b()
21879=LambdaExpressionsTest:test044()
21880=LambdaExpressionsTest:test421607()
21881=LambdaExpressionsTest:test430035()
21882=LambdaExpressionsTest:test406744v()
21883=LambdaExpressionsTest:test421536a()
21884=LambdaExpressionsTest:testLambdaInference2()
21885=LambdaExpressionsTest:test429112()
21886=LambdaExpressionsTest:test406744e()
21887=LambdaExpressionsTest:test434297()
21888=LambdaExpressionsTest:test053()
21889=LambdaExpressionsTest:testBug452587()
21890=LambdaExpressionsTest:test042()
21891=LambdaExpressionsTest:test444773()
21892=LambdaExpressionsTest:test426411c()
21893=LambdaExpressionsTest:testBug499258()
21894=LambdaExpressionsTest:test445949a()
21895=LambdaExpressionsTest:test035()
21896=LambdaExpressionsTest:test429948()
21897=LambdaExpressionsTest:test478533()
21898=LambdaExpressionsTest:test024()
21899=LambdaExpressionsTest:test406744k()
21900=LambdaExpressionsTest:testBug491139()
21901=LambdaExpressionsTest:test013()
21902=LambdaExpressionsTest:test428642()
21903=LambdaExpressionsTest:test430035b()
21904=LambdaExpressionsTest:testBug419048_3()
21905=LambdaExpressionsTest:test439515()
21906=LambdaExpressionsTest:testBug487586()
21907=LambdaExpressionsTest:test441907()
21908=LambdaExpressionsTest:test048()
21909=LambdaExpressionsTest:test002()
21910=LambdaExpressionsTest:test467825()
21911=LambdaExpressionsTest:test426411e()
21912=LambdaExpressionsTest:test033()
21913=LambdaExpressionsTest:test441929()
21914=LambdaExpressionsTest:test422800()
21915=LambdaExpressionsTest:test022()
21916=LambdaExpressionsTest:test422515()
21917=LambdaExpressionsTest:test011()
21918=LambdaExpressionsTest:test057()
21919=LambdaExpressionsTest:test406744i()
21920=LambdaExpressionsTest:test429759()
21921=LambdaExpressionsTest:testBug419048_1()
21922=LambdaExpressionsTest:test449063a()
21923=LambdaExpressionsTest:test444803()
21924=LambdaExpressionsTest:test046()
21925=LambdaExpressionsTest:test421927()
21926=LambdaExpressionsTest:test431190()
21927=Bug:buildStartTag(String, String)
21928=SelectionOnFieldReference:SelectionOnFieldReference(char[], long)
21929=SelectionOnFieldReference:printExpression(int, StringBuffer)
21930=SelectionOnFieldReference:resolveType(BlockScope)
21931=FormaterBug:main(String[])
21932=A:foo()
21933=X02:test()
21934=ResolveMethodDeclaration:foo(String)
21935=ResolveMethodDeclaration:foo(int)
21936=ClasspathUtil:doesClasspathContainEntry(IJavaProject, IClasspathEntry[], IPath, IProgressMonitor)
21937=ClasspathUtil:ClasspathUtil()
21938=ClasspathUtil:updateProjectClasspath(IJavaProject, IFolder, IProgressMonitor)
21939=ClasspathUtil:removeFromProjectClasspath(IJavaProject, IFolder, IProgressMonitor)
21940=ClasspathUtil:findProjectSourcePath(IJavaProject, IFolder)
21941=AbstractCompilationEnv:EnvCallback:run(AbstractCompilationEnv)
21942=AbstractCompilationEnv:getASTFrom(IFile)
21943=AbstractCompilationEnv:getFiler()
21944=AbstractCompilationEnv:getAnnotationTypes()
21945=AbstractCompilationEnv:getCurrentProcessorFactory()
21946=AbstractCompilationEnv:getProblems()
21947=AbstractCompilationEnv:addGeneratedSourceFile(IFile, boolean)
21948=AbstractCompilationEnv:addListener(AnnotationProcessorListener)
21949=AbstractCompilationEnv:getAllGeneratedFiles()
21950=AbstractCompilationEnv:removeListener(AnnotationProcessorListener)
21951=AbstractCompilationEnv:newReconcileEnv(ReconcileContext, EnvCallback)
21952=AbstractCompilationEnv:isClosed()
21953=AbstractCompilationEnv:createProblem(IFile, int, int, Severity, String, int, String[])
21954=AbstractCompilationEnv:getProcessorListeners()
21955=AbstractCompilationEnv:getBindingFromKey(String, ICompilationUnit)
21956=AbstractCompilationEnv:getOptions()
21957=AbstractCompilationEnv:currentProcessorSupportsRTTG()
21958=AbstractCompilationEnv:hasGeneratedSourceFiles()
21959=AbstractCompilationEnv:completedProcessing()
21960=AbstractCompilationEnv:checkValid()
21961=AbstractCompilationEnv:AbstractCompilationEnv(CompilationUnit, IFile, IJavaProject, Phase)
21962=AbstractCompilationEnv:validateTypeName(String)
21963=AbstractCompilationEnv:addGeneratedNonSourceFile(IFile)
21964=AbstractCompilationEnv:newBuildEnv(BuildContext[], BuildContext[], IJavaProject, EnvCallback)
21965=AbstractCompilationEnv:getModifiedGeneratedFiles()
21966=AbstractCompilationEnv:getAST()
21967=AbstractCompilationEnv:close()
21968=AbstractCompilationEnv:doesFactorySupportReconcile(AnnotationProcessorFactory)
21969=AbstractCompilationEnv:addMessage(IFile, int, int, Severity, String, int, String[])
21970=AbstractCompilationEnv:setCurrentProcessorFactory(AnnotationProcessorFactory, boolean)
21971=AbstractCompilationEnv:getMessager()
21972=ResolveClass4:foo()
21973=IAnnotationComponent:getComponentNameIndex()
21974=IAnnotationComponent:getComponentName()
21975=IAnnotationComponent:getComponentValue()
21976=X:bar(int, String)
21977=X:X()
21978=B:B()
21979=Example:foo(int, int, int, int, int, int)
21980=X:foo()
21981=Negative4:ifooOfString()
21982=Negative4:zorkRaw()
21983=Negative4:zorkOfString()
21984=Negative4:ibarOfT1T2()
21985=Negative4:ibarRaw()
21986=A:foo(Object, A)
21987=B:B(int, A.Inner)
21988=JavaWorkspaceScope:encloses(String)
21989=JavaWorkspaceScope:encloses(IJavaElement)
21990=JavaWorkspaceScope:getAccessRuleSet(String, String)
21991=JavaWorkspaceScope:equals(Object)
21992=JavaWorkspaceScope:packageFragmentRoot(String, int, String)
21993=JavaWorkspaceScope:enclosingProjectsAndJars()
21994=JavaWorkspaceScope:processDelta(IJavaElementDelta, int)
21995=JavaWorkspaceScope:hashCode()
21996=JavaWorkspaceScope:toString()
21997=JavaWorkspaceScope:JavaWorkspaceScope()
21998=BindingKeyResolver:SyntheticLocalVariableBinding:hashCode()
21999=BindingKeyResolver:consumeAnyCapture(int, int)
22000=BindingKeyResolver:BindingKeyResolver(String, Compiler, LookupEnvironment)
22001=BindingKeyResolver:malformedKey()
22002=BindingKeyResolver:consumeFullyQualifiedName(char[])
22003=BindingKeyResolver:consumeAnnotation()
22004=BindingKeyResolver:consumeTypeVariable(char[], char[])
22005=BindingKeyResolver:getTypeBindingArguments()
22006=BindingKeyResolver:getArrayBinding(int, TypeBinding)
22007=BindingKeyResolver:consumeArrayDimension(char[])
22008=BindingKeyResolver:getCompilerBinding()
22009=BindingKeyResolver:consumeParameterizedGenericMethod()
22010=BindingKeyResolver:consumeWildCard(int)
22011=BindingKeyResolver:getAnnotationBinding()
22012=BindingKeyResolver:compoundName()
22013=BindingKeyResolver:consumeSecondaryType(char[])
22014=BindingKeyResolver:getCompilationUnitDeclaration()
22015=BindingKeyResolver:consumeException()
22016=BindingKeyResolver:consumeKey()
22017=BindingKeyResolver:consumeBaseType(char[])
22018=BindingKeyResolver:consumeMemberType(char[])
22019=BindingKeyResolver:consumePackage(char[])
22020=BindingKeyResolver:BindingKeyResolver(BindingKeyParser, Compiler, LookupEnvironment, CompilationUnitDeclaration, HashtableOfObject)
22021=BindingKeyResolver:consumeField(char[])
22022=BindingKeyResolver:newParser()
22023=BindingKeyResolver:consumeLocalType(char[])
22024=BindingKeyResolver:consumeParser(BindingKeyParser)
22025=BindingKeyResolver:getBinaryBinding()
22026=BindingKeyResolver:consumeWildcardRank(int)
22027=BindingKeyResolver:getBaseTypeBinding(char[])
22028=BindingKeyResolver:consumeMethod(char[], char[])
22029=BindingKeyResolver:SyntheticLocalVariableBinding:equals(Object)
22030=BindingKeyResolver:consumeScope(int)
22031=BindingKeyResolver:consumeParameterizedType(char[], boolean)
22032=BindingKeyResolver:getType(char[])
22033=BindingKeyResolver:getTypeBinding(char[])
22034=BindingKeyResolver:consumeRawType()
22035=BindingKeyResolver:consumeTypeWithCapture()
22036=BindingKeyResolver:SyntheticLocalVariableBinding:SyntheticLocalVariableBinding(char[], TypeBinding, MethodBinding, int)
22037=BindingKeyResolver:toString()
22038=BindingKeyResolver:consumeLocalVar(char[], int, int)
22039=BindingKeyResolver:SyntheticLocalVariableBinding:getEnclosingMethod()
22040=BindingKeyResolver:consumeCapture18ID(int, int)
22041=BindingKeyResolver:SyntheticLocalVariableBinding:computeUniqueKey()
22042=BindingKeyResolver:consumeCapture(int)
22043=BindingKeyResolver:consumeTopLevelType()
22044=Test:foo(int)
22045=A:foo(int)
22046=ClassFileInfo:readBinaryChildren(ClassFile, HashMap, IBinaryType)
22047=ClassFileInfo:generateInnerClassHandles(IType, IBinaryType, ArrayList)
22048=ClassFileInfo:generateAnnotationsInfos(JavaElement, char[], IBinaryAnnotation[], long, HashMap)
22049=ClassFileInfo:generateStandardAnnotation(JavaElement, char[][], IMemberValuePair[], HashMap)
22050=ClassFileInfo:generateTypeParameterInfos(BinaryMember, char[], HashMap, ArrayList)
22051=ClassFileInfo:generateFieldInfos(IType, IBinaryType, HashMap, ArrayList)
22052=ClassFileInfo:generateAnnotationsInfos(JavaElement, IBinaryAnnotation[], long, HashMap)
22053=ClassFileInfo:getRetentionPolicy(long)
22054=ClassFileInfo:hasReadBinaryChildren()
22055=ClassFileInfo:generateMethodInfos(IType, IBinaryType, HashMap, ArrayList, ArrayList)
22056=ClassFileInfo:generateAnnotationInfo(JavaElement, char[], HashMap, IBinaryAnnotation, String)
22057=ClassFileInfo:generateAnnotationInfo(JavaElement, HashMap, IBinaryAnnotation, String)
22058=ClassFileInfo:generateStandardAnnotationsInfos(JavaElement, char[], long, HashMap)
22059=ClassFileInfo:removeBinaryChildren()
22060=ClassFileInfo:getTargetElementTypes(long)
22061=AMap:createAMap(String, String)
22062=B:B(M, N)
22063=AMethod:getMap(String, String)
22064=A:A(M, N)
22065=B:getMap(M, N)
22066=A:getMap(M, N)
22067=A:A()
22068=AMap:AMap(String, String)
22069=IJavaProject:newTypeHierarchy(IRegion, IProgressMonitor)
22070=IJavaProject:newTypeHierarchy(IType, IRegion, WorkingCopyOwner, IProgressMonitor)
22071=IJavaProject:findElement(IPath)
22072=IJavaProject:findElement(String, WorkingCopyOwner)
22073=IJavaProject:findType(String, WorkingCopyOwner)
22074=IJavaProject:findType(String, String, IProgressMonitor)
22075=IJavaProject:setOutputLocation(IPath, IProgressMonitor)
22076=IJavaProject:getNonJavaResources()
22077=IJavaProject:setOptions(Map<String, String>)
22078=IJavaProject:setRawClasspath(IClasspathEntry[], IClasspathEntry[], IPath, IProgressMonitor)
22079=IJavaProject:newTypeHierarchy(IRegion, WorkingCopyOwner, IProgressMonitor)
22080=IJavaProject:getPackageFragmentRoot(String)
22081=IJavaProject:getOutputLocation()
22082=IJavaProject:getPackageFragmentRoots()
22083=IJavaProject:setOption(String, String)
22084=IJavaProject:newEvaluationContext()
22085=IJavaProject:findPackageFragmentRoots(IClasspathEntry)
22086=IJavaProject:setRawClasspath(IClasspathEntry[], IProgressMonitor)
22087=IJavaProject:hasBuildState()
22088=IJavaProject:getRawClasspath()
22089=IJavaProject:findPackageFragmentRoot(IPath)
22090=IJavaProject:getProject()
22091=IJavaProject:findType(String, String, WorkingCopyOwner, IProgressMonitor)
22092=IJavaProject:findType(String)
22093=IJavaProject:isOnClasspath(IJavaElement)
22094=IJavaProject:getOption(String, boolean)
22095=IJavaProject:readOutputLocation()
22096=IJavaProject:setRawClasspath(IClasspathEntry[], boolean, IProgressMonitor)
22097=IJavaProject:findType(String, String, WorkingCopyOwner)
22098=IJavaProject:getResolvedClasspath(boolean)
22099=IJavaProject:getReferencedClasspathEntries()
22100=IJavaProject:getPackageFragmentRoots(IClasspathEntry)
22101=IJavaProject:findType(String, String)
22102=IJavaProject:getPackageFragmentRoot(IResource)
22103=IJavaProject:getRequiredProjectNames()
22104=IJavaProject:encodeClasspathEntry(IClasspathEntry)
22105=IJavaProject:findType(String, IProgressMonitor)
22106=IJavaProject:hasClasspathCycle(IClasspathEntry[])
22107=IJavaProject:readRawClasspath()
22108=IJavaProject:isOnClasspath(IResource)
22109=IJavaProject:decodeClasspathEntry(String)
22110=IJavaProject:setRawClasspath(IClasspathEntry[], IPath, boolean, IProgressMonitor)
22111=IJavaProject:findPackageFragment(IPath)
22112=IJavaProject:getOptions(boolean)
22113=IJavaProject:setRawClasspath(IClasspathEntry[], IPath, IProgressMonitor)
22114=IJavaProject:newTypeHierarchy(IType, IRegion, IProgressMonitor)
22115=IJavaProject:getPackageFragments()
22116=IJavaProject:findType(String, WorkingCopyOwner, IProgressMonitor)
22117=IJavaProject:findElement(IPath, WorkingCopyOwner)
22118=IJavaProject:getAllPackageFragmentRoots()
22119=A:foo()
22120=A:b()
22121=X09:foo(Object, int)
22122=firstClass:myMethod()
22123=Z:Z()
22124=LocalVariable:getUnderlyingResource()
22125=LocalVariable:isStructureKnown()
22126=LocalVariable:closing(Object)
22127=LocalVariable:exists()
22128=LocalVariable:getDeclaringMember()
22129=LocalVariable:getAnnotationMemberValue(MemberValuePair, Expression, JavaElement)
22130=LocalVariable:getHandleMemento(StringBuffer, boolean)
22131=LocalVariable:LocalVariable(JavaElement, String, int, int, int, int, String, org.eclipse.jdt.internal.compiler.ast.Annotation[], int, boolean, org.eclipse.jdt.internal.compiler.ast.Annotation[][])
22132=LocalVariable:getFlags()
22133=LocalVariable:getElementName()
22134=LocalVariable:getAnnotation(String)
22135=LocalVariable:getHandleFromMemento(String, MementoTokenizer, WorkingCopyOwner)
22136=LocalVariable:getSource()
22137=LocalVariable:toStringInfo(int, StringBuffer, Object, boolean)
22138=LocalVariable:getPath()
22139=LocalVariable:getAnnotation(org.eclipse.jdt.internal.compiler.ast.Annotation, JavaElement)
22140=LocalVariable:createElementInfo()
22141=LocalVariable:LocalVariable(JavaElement, String, int, int, int, int, String, org.eclipse.jdt.internal.compiler.ast.Annotation[], int, boolean)
22142=LocalVariable:generateInfos(Object, HashMap, IProgressMonitor)
22143=LocalVariable:hashCode()
22144=LocalVariable:getKey(boolean)
22145=LocalVariable:getTypeRoot()
22146=LocalVariable:getClassFile()
22147=LocalVariable:getAnnotations(org.eclipse.jdt.internal.compiler.ast.Annotation[])
22148=LocalVariable:isParameter()
22149=LocalVariable:resource()
22150=LocalVariable:equals(Object)
22151=LocalVariable:getHandleMementoDelimiter()
22152=LocalVariable:getElementType()
22153=LocalVariable:getSourceRange()
22154=LocalVariable:getAnnotations()
22155=LocalVariable:getCorrespondingResource()
22156=LocalVariable:getNameRange()
22157=LocalVariable:getTypeSignature()
22158=LocalVariable:getHandleMemento(StringBuffer)
22159=DebugAttributeTest:test003()
22160=DebugAttributeTest:test001()
22161=DebugAttributeTest:suite()
22162=DebugAttributeTest:testClass()
22163=DebugAttributeTest:DebugAttributeTest(String)
22164=DebugAttributeTest:test004()
22165=DebugAttributeTest:test002()
22166=AssignmentTest_1_5:test12()
22167=AssignmentTest_1_5:test10()
22168=AssignmentTest_1_5:test9()
22169=AssignmentTest_1_5:test7()
22170=AssignmentTest_1_5:test5()
22171=AssignmentTest_1_5:test3()
22172=AssignmentTest_1_5:test15()
22173=AssignmentTest_1_5:test1()
22174=AssignmentTest_1_5:test13()
22175=AssignmentTest_1_5:test11()
22176=AssignmentTest_1_5:AssignmentTest_1_5(String)
22177=AssignmentTest_1_5:test8()
22178=AssignmentTest_1_5:test6()
22179=AssignmentTest_1_5:testClass()
22180=AssignmentTest_1_5:test4()
22181=AssignmentTest_1_5:test2()
22182=AssignmentTest_1_5:getCompilerOptions()
22183=AssignmentTest_1_5:suite()
22184=AssignmentTest_1_5:test14()
22185=A:doX()
22186=D:goo()
22187=TestInvalid:foo(String)
22188=TestInvalid:foo(int, float)
22189=HelloWorldAnnotationProcessorFactory:HelloWorldAnnotationProcessorFactory()
22190=HelloWorldAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
22191=HelloWorldAnnotationProcessorFactory:supportedOptions()
22192=Test:m(int)
22193=Block:Block(int)
22194=Block:resolveUsing(BlockScope)
22195=Block:printBody(int, StringBuffer)
22196=Block:isEmptyBlock()
22197=Block:traverse(ASTVisitor, BlockScope)
22198=Block:analyseCode(BlockScope, FlowContext, FlowInfo)
22199=Block:generateCode(BlockScope, CodeStream)
22200=Block:printStatement(int, StringBuffer)
22201=Block:branchChainTo(Label)
22202=Block:resolve(BlockScope)
22203=X:main(String[])
22204=X:foo()
22205=Compliance_CLDC:Compliance_CLDC(String)
22206=Compliance_CLDC:test004()
22207=Compliance_CLDC:testClass()
22208=Compliance_CLDC:test002()
22209=Compliance_CLDC:getCompilerOptions()
22210=Compliance_CLDC:suite()
22211=Compliance_CLDC:test003()
22212=Compliance_CLDC:test001()
22213=FormatterCommentsClearBlankLinesTests:codeFormatter()
22214=FormatterCommentsClearBlankLinesTests:setUp()
22215=FormatterCommentsClearBlankLinesTests:FormatterCommentsClearBlankLinesTests(String)
22216=FormatterCommentsClearBlankLinesTests:suite()
22217=FormatterCommentsClearBlankLinesTests:getOutputFolder()
22218=Test:bar()
22219=Test:foo(int)
22220=Main:main(String[])
22221=Example:bar()
22222=Example:foo(int, int)
22223=CompletionFindField3:foo()
22224=SynchronizedStatement:getExpression()
22225=SynchronizedStatement:subtreeMatch0(ASTMatcher, Object)
22226=SynchronizedStatement:getNodeType0()
22227=SynchronizedStatement:getBody()
22228=SynchronizedStatement:clone0(AST)
22229=SynchronizedStatement:treeSize()
22230=SynchronizedStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
22231=SynchronizedStatement:setExpression(Expression)
22232=SynchronizedStatement:memSize()
22233=SynchronizedStatement:setBody(Block)
22234=SynchronizedStatement:accept0(ASTVisitor)
22235=SynchronizedStatement:propertyDescriptors(int)
22236=SynchronizedStatement:internalStructuralPropertiesForType(int)
22237=SynchronizedStatement:SynchronizedStatement(AST)
22238=ISearchRequestor:acceptPackage(char[])
22239=ISearchRequestor:acceptType(char[], char[], char[][], int, AccessRestriction)
22240=ISearchRequestor:acceptConstructor(int, char[], int, char[], char[][], char[][], int, char[], int, String, AccessRestriction)
22241=X03:foo()
22242=JavaCore:newRegion()
22243=JavaCore:newSourceEntry(IPath, IPath[], IPath[], IPath)
22244=JavaCore:stop(BundleContext)
22245=JavaCore:getSharedWorkingCopies(IBufferFactory)
22246=JavaCore:initializeAfterLoad(IProgressMonitor)
22247=JavaCore:create(IResource, IJavaProject)
22248=JavaCore:getClasspathVariableNames()
22249=JavaCore:getEncoding()
22250=JavaCore:newLibraryEntry(IPath, IPath, IPath)
22251=JavaCore:compareJavaVersions(String, String)
22252=JavaCore:addJavaElementMarkerAttributes(Map, IJavaElement)
22253=JavaCore:newTypeHierarchy(IRegion, WorkingCopyOwner, IProgressMonitor)
22254=JavaCore:getResolvedClasspathEntry(IClasspathEntry)
22255=JavaCore:getClasspathVariableDeprecationMessage(String)
22256=JavaCore:setComplianceOptions(String, Map)
22257=JavaCore:configureJavaElementMarker(IMarker, IJavaElement)
22258=JavaCore:create(String, WorkingCopyOwner)
22259=JavaCore:getPlugin()
22260=JavaCore:getResolvedVariablePath(IPath)
22261=JavaCore:JavaCore()
22262=JavaCore:newClasspathAttribute(String, String)
22263=JavaCore:removeClasspathVariable(String, IProgressMonitor)
22264=JavaCore:newContainerEntry(IPath)
22265=JavaCore:newLibraryEntry(IPath, IPath, IPath, boolean)
22266=JavaCore:create(IWorkspaceRoot)
22267=JavaCore:newProjectEntry(IPath, boolean)
22268=JavaCore:addElementChangedListener(IElementChangedListener, int)
22269=JavaCore:getReferencedClasspathEntries(IClasspathEntry, IJavaProject)
22270=JavaCore:create(String)
22271=JavaCore:newContainerEntry(IPath, boolean)
22272=JavaCore:removeClasspathVariable(String)
22273=JavaCore:removeJavaLikeExtension(String)
22274=JavaCore:getClasspathContainerInitializer(String)
22275=JavaCore:createJarPackageFragmentRootFrom(IFile)
22276=JavaCore:isJavaLikeFileName(String)
22277=JavaCore:getClasspathContainer(IPath, IJavaProject)
22278=JavaCore:getClasspathVariableInitializer(String)
22279=JavaCore:newProjectEntry(IPath, IAccessRule[], boolean, IClasspathAttribute[], boolean)
22280=JavaCore:getOption(String)
22281=JavaCore:newVariableEntry(IPath, IPath, IPath, IAccessRule[], IClasspathAttribute[], boolean)
22282=JavaCore:isClasspathVariableReadOnly(String)
22283=JavaCore:newAccessRule(IPath, int)
22284=JavaCore:newSourceEntry(IPath, IPath[], IPath)
22285=JavaCore:setClasspathVariables(String[], IPath[], IProgressMonitor)
22286=JavaCore:verbose_found_container_initializer(String, IConfigurationElement)
22287=JavaCore:start(BundleContext)
22288=JavaCore:getUserLibraryNames()
22289=JavaCore:getOptionForConfigurableSeverity(int)
22290=JavaCore:removeElementChangedListener(IElementChangedListener)
22291=JavaCore:addNonJavaResources(Object[], IContainer, int, ArrayList)
22292=JavaCore:verbose_no_variable_initializer_found(String)
22293=JavaCore:addPreProcessingResourceChangedListener(IResourceChangeListener, int)
22294=JavaCore:verbose_triggering_variable_initialization(String, ClasspathVariableInitializer)
22295=JavaCore:createClassFileFrom(IFile)
22296=JavaCore:newSourceEntry(IPath)
22297=JavaCore:newSourceEntry(IPath, IPath[])
22298=JavaCore:verbose_failed_to_instanciate_variable_initializer(String, IConfigurationElement)
22299=JavaCore:newProjectEntry(IPath)
22300=JavaCore:newLibraryEntry(IPath, IPath, IPath, IAccessRule[], IClasspathAttribute[], boolean)
22301=JavaCore:newVariableEntry(IPath, IPath, IPath)
22302=JavaCore:getGeneratedResources(IRegion, boolean)
22303=JavaCore:getWorkingCopies(WorkingCopyOwner)
22304=JavaCore:getOptions()
22305=JavaCore:run(IWorkspaceRunnable, ISchedulingRule, IProgressMonitor)
22306=JavaCore:getClasspathVariable(String)
22307=JavaCore:isReferencedBy(IJavaElement, IMarker)
22308=JavaCore:getJavaLikeExtensions()
22309=JavaCore:verbose_found_variable_initializer(String, IConfigurationElement)
22310=JavaCore:removePreProcessingResourceChangedListener(IResourceChangeListener)
22311=JavaCore:isReferencedBy(IJavaElement, IMarkerDelta)
22312=JavaCore:addPreProcessingResourceChangedListener(IResourceChangeListener)
22313=JavaCore:createCompilationUnitFrom(IFile)
22314=JavaCore:setClasspathContainer(IPath, IJavaProject[], IClasspathContainer[], IProgressMonitor)
22315=JavaCore:verbose_triggering_variable_initialization_invocation_trace()
22316=JavaCore:computeClasspathContainerInitializer(String)
22317=JavaCore:newVariableEntry(IPath, IPath, IPath, boolean)
22318=JavaCore:verbose_variable_value_after_initialization(String, IPath)
22319=JavaCore:newSourceEntry(IPath, IPath[], IPath[], IPath, IClasspathAttribute[])
22320=JavaCore:create(IFolder)
22321=JavaCore:getGeneratedResource(ICompilationUnit, IContainer, State, int, ArrayList)
22322=JavaCore:getDefaultOptions()
22323=JavaCore:verbose_failed_to_instanciate_container_initializer(String, IConfigurationElement)
22324=JavaCore:create(IFile)
22325=JavaCore:setClasspathVariable(String, IPath, IProgressMonitor)
22326=JavaCore:setOptions(Hashtable<String, String>)
22327=JavaCore:newContainerEntry(IPath, IAccessRule[], IClasspathAttribute[], boolean)
22328=JavaCore:run(IWorkspaceRunnable, IProgressMonitor)
22329=JavaCore:create(IProject)
22330=JavaCore:setClasspathVariable(String, IPath)
22331=JavaCore:addElementChangedListener(IElementChangedListener)
22332=JavaCore:getJavaCore()
22333=JavaCore:create(IResource)
22334=ProblemBinding:readableName()
22335=ProblemBinding:problemId()
22336=ProblemBinding:ProblemBinding(char[], ReferenceBinding, int)
22337=ProblemBinding:bindingType()
22338=ProblemBinding:ProblemBinding(char[][], int)
22339=ProblemBinding:ProblemBinding(char[][], ReferenceBinding, int)
22340=ProblemBinding:ProblemBinding(char[], int)
22341=ThisReference:implicitThis()
22342=ThisReference:isImplicitThis()
22343=ThisReference:checkNPE(BlockScope, FlowContext, FlowInfo, int)
22344=ThisReference:resolveType(BlockScope)
22345=ThisReference:checkAccess(BlockScope, ReferenceBinding)
22346=ThisReference:nullStatus(FlowInfo, FlowContext)
22347=ThisReference:ThisReference(int, int)
22348=ThisReference:printExpression(int, StringBuffer)
22349=ThisReference:traverse(ASTVisitor, BlockScope)
22350=ThisReference:generateCompoundAssignment(BlockScope, CodeStream, Expression, int, int, boolean)
22351=ThisReference:generateAssignment(BlockScope, CodeStream, Assignment, boolean)
22352=ThisReference:generatePostIncrement(BlockScope, CodeStream, CompoundAssignment, boolean)
22353=ThisReference:isThis()
22354=ThisReference:analyseAssignment(BlockScope, FlowContext, FlowInfo, Assignment, boolean)
22355=ThisReference:generateCode(BlockScope, CodeStream, boolean)
22356=ThisReference:traverse(ASTVisitor, ClassScope)
22357=LocalVariableBinding:toString()
22358=LocalVariableBinding:recordInitializationEndPC(int)
22359=LocalVariableBinding:bindingType()
22360=LocalVariableBinding:LocalVariableBinding(char[], TypeBinding, int, boolean)
22361=LocalVariableBinding:isSecret()
22362=LocalVariableBinding:LocalVariableBinding(LocalDeclaration, TypeBinding, int, boolean)
22363=LocalVariableBinding:recordInitializationStartPC(int)
22364=SelectionNodeFound:SelectionNodeFound(Binding)
22365=SelectionNodeFound:SelectionNodeFound(Binding, boolean)
22366=SelectionNodeFound:SelectionNodeFound()
22367=DeclarationOfReferencedTypesPattern:DeclarationOfReferencedTypesPattern(IJavaElement)
22368=MethodParametersAttributeTest:test009()
22369=MethodParametersAttributeTest:test007()
22370=MethodParametersAttributeTest:test005()
22371=MethodParametersAttributeTest:runParameterNameTest(String, String)
22372=MethodParametersAttributeTest:test016()
22373=MethodParametersAttributeTest:MethodParametersAttributeTest(String)
22374=MethodParametersAttributeTest:test003()
22375=MethodParametersAttributeTest:test014()
22376=MethodParametersAttributeTest:testClass()
22377=MethodParametersAttributeTest:test013()
22378=MethodParametersAttributeTest:suite()
22379=MethodParametersAttributeTest:test011()
22380=MethodParametersAttributeTest:assertSubstring(String, String)
22381=MethodParametersAttributeTest:test008()
22382=MethodParametersAttributeTest:test006()
22383=MethodParametersAttributeTest:test004()
22384=MethodParametersAttributeTest:test015()
22385=MethodParametersAttributeTest:test002()
22386=MethodParametersAttributeTest:test001()
22387=MethodParametersAttributeTest:test012()
22388=MethodParametersAttributeTest:test010()
22389=A:bar()
22390=A:foo(float)
22391=Super:foo2()
22392=A:A()
22393=A:A(int)
22394=X06:foo(Object, boolean)
22395=Third:Third()
22396=A:foo(boolean)
22397=X03:foo()
22398=MultiOperation:initializeRenamings()
22399=MultiOperation:MultiOperation(IJavaElement[], IJavaElement[], boolean)
22400=MultiOperation:MultiOperation(IJavaElement[], boolean)
22401=MultiOperation:setRenamings(String[])
22402=MultiOperation:verifyDestination(IJavaElement, IJavaElement)
22403=MultiOperation:processElements()
22404=MultiOperation:getNewNameFor(IJavaElement)
22405=MultiOperation:verify(IJavaElement)
22406=MultiOperation:getDestinationParent(IJavaElement)
22407=MultiOperation:verifySibling(IJavaElement, IJavaElement)
22408=MultiOperation:processElement(IJavaElement)
22409=MultiOperation:isMove()
22410=MultiOperation:setInsertBefore(IJavaElement, IJavaElement)
22411=MultiOperation:verifyRenaming(IJavaElement)
22412=MultiOperation:executeOperation()
22413=MultiOperation:getMainTaskName()
22414=MultiOperation:isRename()
22415=MultiOperation:error(int, IJavaElement)
22416=Test:foo(int)
22417=DoubleCache:DoubleCache()
22418=DoubleCache:containsKey(double)
22419=DoubleCache:putIfAbsent(double, int)
22420=DoubleCache:toString()
22421=DoubleCache:clear()
22422=DoubleCache:DoubleCache(int)
22423=DoubleCache:put(double, int)
22424=X:f2()
22425=X:ctor()
22426=X:f1()
22427=X12:foo()
22428=SuperReference:isImplicitThis()
22429=SuperReference:traverse(ASTVisitor, BlockScope)
22430=SuperReference:implicitSuperConstructorCall()
22431=SuperReference:SuperReference(int, int)
22432=SuperReference:isThis()
22433=SuperReference:resolveType(BlockScope)
22434=SuperReference:isSuper()
22435=SuperReference:printExpression(int, StringBuffer)
22436=Test:main(String[])
22437=ScalingTests:suite()
22438=ScalingTests:setUp()
22439=ScalingTests:testGeneratingLotsOfFiles()
22440=ScalingTests:ScalingTests(String)
22441=X23:foo()
22442=X28:foo()
22443=AptCompilationParticipantExtensionFactory:create()
22444=X:f2()
22445=X:ctor()
22446=X:f1()
22447=AssistImportContainer:getElementInfo(IProgressMonitor)
22448=AssistImportContainer:getImport(String, boolean)
22449=AssistImportContainer:AssistImportContainer(CompilationUnit, Map)
22450=MethodInfoWithTypeAnnotations:toStringContent(StringBuffer)
22451=MethodInfoWithTypeAnnotations:getTypeAnnotations()
22452=MethodInfoWithTypeAnnotations:reset()
22453=MethodInfoWithTypeAnnotations:initialize()
22454=MethodInfoWithTypeAnnotations:MethodInfoWithTypeAnnotations(MethodInfo, AnnotationInfo[], AnnotationInfo[][], TypeAnnotationInfo[])
22455=Single:Single(Single<T>)
22456=Single:Single(T)
22457=Single:Single(U, Single<T>)
22458=Single:Single(T, U)
22459=FinallyFlowContext:FinallyFlowContext(FlowContext, ASTNode)
22460=FinallyFlowContext:recordFinalAssignment(VariableBinding, Reference)
22461=FinallyFlowContext:isSubRoutine()
22462=FinallyFlowContext:individualToString()
22463=FinallyFlowContext:removeFinalAssignmentIfAny(Reference)
22464=FinallyFlowContext:complainOnRedundantFinalAssignments(FlowInfo, BlockScope)
22465=X02c:foo()
22466=Statement:print(int, StringBuffer)
22467=Statement:internalAnalyseOneArgument18(BlockScope, FlowContext, TypeBinding, Expression, FlowInfo, int, Boolean, TypeBinding)
22468=Statement:isEmptyBlock()
22469=Statement:completesByContinue()
22470=Statement:getExpressionContext()
22471=Statement:analyseArguments(BlockScope, FlowContext, FlowInfo, MethodBinding, Expression[])
22472=Statement:analyseCode(BlockScope, FlowContext, FlowInfo)
22473=Statement:generateArguments(MethodBinding, Expression[], BlockScope, CodeStream)
22474=Statement:findConstructorBinding(BlockScope, Invocation, ReferenceBinding, TypeBinding[])
22475=Statement:generateCode(BlockScope, CodeStream)
22476=Statement:analyseOneArgument18(BlockScope, FlowContext, FlowInfo, TypeBinding, Expression, Boolean, TypeBinding)
22477=Statement:complainIfUnreachable(FlowInfo, BlockScope, int, boolean)
22478=Statement:isKnowDeadCodePattern(Expression)
22479=Statement:printStatement(int, StringBuffer)
22480=Statement:checkAgainstNullTypeAnnotation(BlockScope, TypeBinding, Expression, FlowContext, FlowInfo)
22481=Statement:resolve(BlockScope)
22482=Statement:resolveCase(BlockScope, TypeBinding, SwitchStatement)
22483=Statement:invocationTargetType()
22484=Statement:breaksOut(char[])
22485=Statement:isValidJavaStatement()
22486=Statement:doesNotCompleteNormally()
22487=Statement:internalCheckAgainstNullTypeAnnotation(BlockScope, TypeBinding, Expression, int, FlowContext, FlowInfo)
22488=Statement:expectedType()
22489=Statement:isBoxingCompatible(TypeBinding, TypeBinding, Expression, Scope)
22490=Statement:branchChainTo(BranchLabel)
22491=Statement:continuesAtOuterLabel()
22492=InstanceOfExpression:InstanceOfExpression(Expression, TypeReference)
22493=InstanceOfExpression:generateCode(BlockScope, CodeStream, boolean)
22494=InstanceOfExpression:tagAsUnnecessaryCast(Scope, TypeBinding)
22495=InstanceOfExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
22496=InstanceOfExpression:resolveType(BlockScope)
22497=InstanceOfExpression:traverse(ASTVisitor, BlockScope)
22498=InstanceOfExpression:printExpressionNoParenthesis(int, StringBuffer)
22499=OrLocator:matchLevelAndReportImportRef(ImportReference, Binding, MatchLocator)
22500=OrLocator:match(Reference, MatchingNodeSet)
22501=OrLocator:match(MemberValuePair, MatchingNodeSet)
22502=OrLocator:match(Expression, MatchingNodeSet)
22503=OrLocator:match(TypeDeclaration, MatchingNodeSet)
22504=OrLocator:match(LambdaExpression, MatchingNodeSet)
22505=OrLocator:match(MethodDeclaration, MatchingNodeSet)
22506=OrLocator:OrLocator(OrPattern)
22507=OrLocator:match(TypeReference, MatchingNodeSet)
22508=OrLocator:match(LocalDeclaration, MatchingNodeSet)
22509=OrLocator:match(ReferenceExpression, MatchingNodeSet)
22510=OrLocator:recordResolution(QualifiedTypeReference, TypeBinding)
22511=OrLocator:resolveLevel(Binding)
22512=OrLocator:match(MessageSend, MatchingNodeSet)
22513=OrLocator:newDeclarationMatch(ASTNode, IJavaElement, Binding, int, int, MatchLocator)
22514=OrLocator:matchReportReference(ASTNode, IJavaElement, IJavaElement, IJavaElement[], Binding, int, MatchLocator)
22515=OrLocator:matchContainer()
22516=OrLocator:matchReportReference(ASTNode, IJavaElement, Binding, int, MatchLocator)
22517=OrLocator:matchReportImportRef(ImportReference, Binding, IJavaElement, int, MatchLocator)
22518=OrLocator:match(TypeParameter, MatchingNodeSet)
22519=OrLocator:match(Annotation, MatchingNodeSet)
22520=OrLocator:match(ASTNode, MatchingNodeSet)
22521=OrLocator:setFlavors(int)
22522=OrLocator:match(ConstructorDeclaration, MatchingNodeSet)
22523=OrLocator:initializePolymorphicSearch(MatchLocator)
22524=OrLocator:resolveLevel(ASTNode)
22525=OrLocator:match(FieldDeclaration, MatchingNodeSet)
22526=QualifiedTypeDeclarationPattern:QualifiedTypeDeclarationPattern(char[], int, char[], char, int)
22527=QualifiedTypeDeclarationPattern:getBlankPattern()
22528=QualifiedTypeDeclarationPattern:matchesDecodedKey(SearchPattern)
22529=QualifiedTypeDeclarationPattern:decodeIndexKey(char[])
22530=QualifiedTypeDeclarationPattern:print(StringBuffer)
22531=QualifiedTypeDeclarationPattern:QualifiedTypeDeclarationPattern(int)
22532=QualifiedTypeDeclarationPattern:QualifiedTypeDeclarationPattern(char[], char[], char, int)
22533=Test:foo(java.util.Vector[], java.util.Vector[][][])
22534=Test:foo(Object[], String[][][])
22535=Test:foo(int[], char[][][])
22536=Example:foo(int, int, int, int, int, int)
22537=IDebugRequestor:reset()
22538=IDebugRequestor:deactivate()
22539=IDebugRequestor:activate()
22540=IDebugRequestor:isActive()
22541=IDebugRequestor:acceptDebugResult(CompilationResult)
22542=IRuntimeInvisibleTypeAnnotationsAttribute:getExtendedAnnotationsNumber()
22543=IRuntimeInvisibleTypeAnnotationsAttribute:getExtendedAnnotations()
22544=X:foo()
22545=ExtendedAnnotation:getComponents()
22546=ExtendedAnnotation:getParameterIndex()
22547=ExtendedAnnotation:getTypeIndex()
22548=ExtendedAnnotation:getTypeParameterBoundIndex()
22549=ExtendedAnnotation:getExceptionTableIndex()
22550=ExtendedAnnotation:getTypeParameterIndex()
22551=ExtendedAnnotation:getTargetType()
22552=ExtendedAnnotation:getComponentsNumber()
22553=ExtendedAnnotation:ExtendedAnnotation(byte[], IConstantPool, int)
22554=ExtendedAnnotation:sizeInBytes()
22555=ExtendedAnnotation:getTypeName()
22556=ExtendedAnnotation:getLocalVariableTable()
22557=ExtendedAnnotation:getAnnotationTypeIndex()
22558=ExtendedAnnotation:readTargetInfo(int, byte[], IConstantPool, int)
22559=ExtendedAnnotation:getTypePath()
22560=ExtendedAnnotation:getOffset()
22561=ExtendedAnnotation:getLocalVariableRefenceInfoLength()
22562=FloatLiteral:traverse(ASTVisitor, BlockScope)
22563=FloatLiteral:computeConstant()
22564=FloatLiteral:generateCode(BlockScope, CodeStream, boolean)
22565=FloatLiteral:FloatLiteral(char[], int, int)
22566=FloatLiteral:literalType(BlockScope)
22567=Test:main(String[])
22568=InstanceofExpressionTest:testClass()
22569=InstanceofExpressionTest:suite()
22570=InstanceofExpressionTest:test001()
22571=InstanceofExpressionTest:InstanceofExpressionTest(String)
22572=SimpleVariableTest:evaluateVariable()
22573=SimpleVariableTest:main(String[])
22574=SimpleVariableTest:getVariable()
22575=AccessRestrictionsTests:test003()
22576=AccessRestrictionsTests:getWorkingCopy(String, String)
22577=AccessRestrictionsTests:ProblemRequestor:ProblemRequestor()
22578=AccessRestrictionsTests:ProblemRequestor:acceptProblem(IProblem)
22579=AccessRestrictionsTests:test005()
22580=AccessRestrictionsTests:test007()
22581=AccessRestrictionsTests:AccessRestrictionsTests(String)
22582=AccessRestrictionsTests:test009()
22583=AccessRestrictionsTests:setUpSuite()
22584=AccessRestrictionsTests:suite()
22585=AccessRestrictionsTests:setUp()
22586=AccessRestrictionsTests:test010()
22587=AccessRestrictionsTests:test001()
22588=AccessRestrictionsTests:tearDownSuite()
22589=AccessRestrictionsTests:test002()
22590=AccessRestrictionsTests:test006()
22591=AccessRestrictionsTests:test004()
22592=AccessRestrictionsTests:test008()
22593=AccessRestrictionsTests:ProblemRequestor:ProblemRequestor(String)
22594=AccessRestrictionsTests:assertProblems(String, String)
22595=AccessRestrictionsTests:test011()
22596=NullLiteral:literalType(BlockScope)
22597=NullLiteral:generateCode(BlockScope, CodeStream, boolean)
22598=NullLiteral:traverse(ASTVisitor, BlockScope)
22599=NullLiteral:NullLiteral(int, int)
22600=NullLiteral:computeConstant()
22601=NullLiteral:source()
22602=Example:foo()
22603=AssistAnnotation:AssistAnnotation(JavaElement, String, Map)
22604=AssistAnnotation:getElementInfo(IProgressMonitor)
22605=SearchableEnvironmentRequestor:acceptPackageFragment(IPackageFragment)
22606=SearchableEnvironmentRequestor:SearchableEnvironmentRequestor(ISearchRequestor, ICompilationUnit, IJavaProject, NameLookup)
22607=SearchableEnvironmentRequestor:acceptInitializer(IInitializer)
22608=SearchableEnvironmentRequestor:acceptType(IType)
22609=SearchableEnvironmentRequestor:SearchableEnvironmentRequestor(ISearchRequestor)
22610=AntAdapterMessages:AntAdapterMessages()
22611=AntAdapterMessages:getString(String)
22612=AntAdapterMessages:getString(String, String)
22613=Test:foo()
22614=BasicBuildTests:testToDoMarker2()
22615=BasicBuildTests:testBug164707()
22616=BasicBuildTests:_testUpdateProjectPreferences()
22617=BasicBuildTests:testBug392727()
22618=BasicBuildTests:testUnusedImport()
22619=BasicBuildTests:testTags4()
22620=BasicBuildTests:testTags2()
22621=BasicBuildTests:test98667()
22622=BasicBuildTests:testBuild()
22623=BasicBuildTests:_testUpdateWkspPreferences()
22624=BasicBuildTests:testbBug386901()
22625=BasicBuildTests:testToDoMarker()
22626=BasicBuildTests:testTags()
22627=BasicBuildTests:testTags3()
22628=BasicBuildTests:suite()
22629=BasicBuildTests:BasicBuildTests(String)
22630=BasicBuildTests:testBug425420()
22631=FormaterBug:method2()
22632=FormaterBug:method6()
22633=FormaterBug:method4()
22634=FormaterBug:main(String[])
22635=FormaterBug:method1()
22636=FormaterBug:method5()
22637=FormaterBug:method3()
22638=FormaterBug:method7()
22639=AssertStatement:setMessage(Expression)
22640=AssertStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
22641=AssertStatement:subtreeMatch0(ASTMatcher, Object)
22642=AssertStatement:propertyDescriptors(int)
22643=AssertStatement:setExpression(Expression)
22644=AssertStatement:getMessage()
22645=AssertStatement:getExpression()
22646=AssertStatement:getNodeType0()
22647=AssertStatement:treeSize()
22648=AssertStatement:accept0(ASTVisitor)
22649=AssertStatement:clone0(AST)
22650=AssertStatement:AssertStatement(AST)
22651=AssertStatement:memSize()
22652=AssertStatement:internalStructuralPropertiesForType(int)
22653=A:bar()
22654=A:foo()
22655=X03_mixed:foo(String)
22656=FinallyFlowContext:recordUnboxing(Scope, Expression, int, FlowInfo)
22657=FinallyFlowContext:recordFinalAssignment(VariableBinding, Reference)
22658=FinallyFlowContext:isSubRoutine()
22659=FinallyFlowContext:individualToString()
22660=FinallyFlowContext:FinallyFlowContext(FlowContext, ASTNode, ExceptionHandlingFlowContext)
22661=FinallyFlowContext:complainOnDeferredChecks(FlowInfo, BlockScope)
22662=FinallyFlowContext:internalRecordNullityMismatch(Expression, TypeBinding, FlowInfo, int, TypeBinding, int)
22663=FinallyFlowContext:removeFinalAssignmentIfAny(Reference)
22664=FinallyFlowContext:recordNullReference(LocalVariableBinding, ASTNode, int, FlowInfo)
22665=FinallyFlowContext:recordUsingNullReference(Scope, LocalVariableBinding, ASTNode, int, FlowInfo)
22666=DefaultValuePairBinding:isDeprecated()
22667=DefaultValuePairBinding:getValue()
22668=DefaultValuePairBinding:getMethodBinding()
22669=DefaultValuePairBinding:getName()
22670=DefaultValuePairBinding:DefaultValuePairBinding(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, BindingResolver)
22671=DefaultValuePairBinding:isDefault()
22672=X08:foo(int, int)
22673=X28:foo()
22674=CompletionJavadoc:print(int, StringBuffer)
22675=CompletionJavadoc:getCompletionNode()
22676=CompletionJavadoc:internalResolve(Scope)
22677=CompletionJavadoc:missingTypeParameterTags(Binding, Scope)
22678=CompletionJavadoc:resolve(CompilationUnitScope)
22679=CompletionJavadoc:resolve(MethodScope)
22680=CompletionJavadoc:resolve(ClassScope)
22681=CompletionJavadoc:CompletionJavadoc(int, int)
22682=CompletionJavadoc:missingParamTags(Binding, MethodScope)
22683=Assert:notNull(Object, String)
22684=Assert:method(String, String, String)
22685=CompletionOnQualifiedNameReference:CompletionOnQualifiedNameReference(char[][], char[], long[], boolean)
22686=CompletionOnQualifiedNameReference:resolveType(BlockScope)
22687=CompletionOnQualifiedNameReference:printExpression(int, StringBuffer)
22688=A:foo()
22689=A:A()
22690=AQE:k()
22691=AQ:k()
22692=TypesUtil:getDeclaredType(TypeDeclaration, TypeMirror)
22693=TypesUtil:getVoidType()
22694=TypesUtil:isSubtype(TypeMirror, TypeMirror)
22695=TypesUtil:TypesUtil(BaseProcessorEnv)
22696=TypesUtil:getTypeBinding(TypeMirror)
22697=TypesUtil:getArrayType(TypeMirror)
22698=TypesUtil:getTypeVariable(TypeParameterDeclaration)
22699=TypesUtil:main(String[])
22700=TypesUtil:getPrimitiveType(PrimitiveType.Kind)
22701=TypesUtil:getDeclaredType(DeclaredType, TypeDeclaration, TypeMirror)
22702=TypesUtil:getTypeBinding(TypeDeclaration)
22703=TypesUtil:findMemberType(ITypeBinding, String)
22704=TypesUtil:getErasure(TypeMirror)
22705=TypesUtil:isAssignable(TypeMirror, TypeMirror)
22706=TypesUtil:getWildcardType(Collection<ReferenceType>, Collection<ReferenceType>)
22707=UnresolvedAnnotationBinding:UnresolvedAnnotationBinding(ReferenceBinding, ElementValuePair[], LookupEnvironment)
22708=UnresolvedAnnotationBinding:getAnnotationType()
22709=UnresolvedAnnotationBinding:resolve()
22710=UnresolvedAnnotationBinding:getElementValuePairs()
22711=IPackageFragmentRoot:move(IPath, int, int, IClasspathEntry, IProgressMonitor)
22712=IPackageFragmentRoot:getSourceAttachmentPath()
22713=IPackageFragmentRoot:delete(int, int, IProgressMonitor)
22714=IPackageFragmentRoot:getResolvedClasspathEntry()
22715=IPackageFragmentRoot:isArchive()
22716=IPackageFragmentRoot:getRawClasspathEntry()
22717=IPackageFragmentRoot:attachSource(IPath, IPath, IProgressMonitor)
22718=IPackageFragmentRoot:getSourceAttachmentRootPath()
22719=IPackageFragmentRoot:createPackageFragment(String, boolean, IProgressMonitor)
22720=IPackageFragmentRoot:getPackageFragment(String)
22721=IPackageFragmentRoot:getNonJavaResources()
22722=IPackageFragmentRoot:getKind()
22723=IPackageFragmentRoot:copy(IPath, int, int, IClasspathEntry, IProgressMonitor)
22724=IPackageFragmentRoot:isExternal()
22725=ReferenceExpressionSyntaxTest:test0009()
22726=ReferenceExpressionSyntaxTest:test0018()
22727=ReferenceExpressionSyntaxTest:test0005()
22728=ReferenceExpressionSyntaxTest:test0007()
22729=ReferenceExpressionSyntaxTest:test0002()
22730=ReferenceExpressionSyntaxTest:test0013()
22731=ReferenceExpressionSyntaxTest:test0004()
22732=ReferenceExpressionSyntaxTest:test0015()
22733=ReferenceExpressionSyntaxTest:test0020()
22734=ReferenceExpressionSyntaxTest:ReferenceExpressionSyntaxTest(String)
22735=ReferenceExpressionSyntaxTest:test0011()
22736=ReferenceExpressionSyntaxTest:suite()
22737=ReferenceExpressionSyntaxTest:testClass()
22738=ReferenceExpressionSyntaxTest:test0006()
22739=ReferenceExpressionSyntaxTest:test0017()
22740=ReferenceExpressionSyntaxTest:test0008()
22741=ReferenceExpressionSyntaxTest:test0019()
22742=ReferenceExpressionSyntaxTest:initialize(CompilerTestSetup)
22743=ReferenceExpressionSyntaxTest:test385132()
22744=ReferenceExpressionSyntaxTest:test0014()
22745=ReferenceExpressionSyntaxTest:test385374()
22746=ReferenceExpressionSyntaxTest:test0001()
22747=ReferenceExpressionSyntaxTest:test0016()
22748=ReferenceExpressionSyntaxTest:test0003()
22749=ReferenceExpressionSyntaxTest:test385374a()
22750=ReferenceExpressionSyntaxTest:test0010()
22751=ReferenceExpressionSyntaxTest:test0012()
22752=X01d:foo()
22753=AptReconcileTests:testStopGeneratingFileInReconciler()
22754=AptReconcileTests:tearDown()
22755=AptReconcileTests:testBasicReconcile()
22756=AptReconcileTests:testDiscardParentWorkingCopy()
22757=AptReconcileTests:testGeneratedFile()
22758=AptReconcileTests:suite()
22759=AptReconcileTests:setUp()
22760=AptReconcileTests:setUpWorkingCopy(String, String)
22761=AptReconcileTests:testNestedGeneratedFile()
22762=AptReconcileTests:testNoReconcile()
22763=AptReconcileTests:AptReconcileTests(String)
22764=AptReconcileTests:assertProblems(String, String)
22765=AptReconcileTests:setWorkingCopyContents(String)
22766=ResolveArrayParameterInsideParent1:test(int[])
22767=firstClass:myMethod()
22768=Test:foo(Y, A<Y>, A<Y>.B<Y>, A<Y>.C<Y>, A<Y>.B<Y>.D<Y>)
22769=JavaSearchTypeNameMatch:hashCode()
22770=JavaSearchTypeNameMatch:setModifiers(int)
22771=JavaSearchTypeNameMatch:getModifiers()
22772=JavaSearchTypeNameMatch:JavaSearchTypeNameMatch(IType, int)
22773=JavaSearchTypeNameMatch:setType(IType)
22774=JavaSearchTypeNameMatch:getAccessibility()
22775=JavaSearchTypeNameMatch:setAccessibility(int)
22776=JavaSearchTypeNameMatch:toString()
22777=JavaSearchTypeNameMatch:equals(Object)
22778=JavaSearchTypeNameMatch:getType()
22779=RuntimeTests:test1000_partial_rebuild()
22780=RuntimeTests:test1002_partial_rebuild()
22781=RuntimeTests:testClass()
22782=RuntimeTests:_test0001_memory_exhaustion()
22783=RuntimeTests:test0600_reflection()
22784=RuntimeTests:test1001_partial_rebuild()
22785=RuntimeTests:test1003_partial_rebuild()
22786=RuntimeTests:RuntimeTests(String)
22787=RuntimeTests:test0500_synchronization()
22788=RuntimeTests:suite()
22789=RuntimeTests:test0601_reflection()
22790=RuntimeTests:test1004_partial_rebuild()
22791=MyImpl:foo(String)
22792=GenClass6Proc:summarize()
22793=GenClass6Proc:init(ProcessingEnvironment)
22794=GenClass6Proc:round(Set<? extends TypeElement>, RoundEnvironment)
22795=GenClass6Proc:processType(GenClass6, Element)
22796=GenClass6Proc:process(Set<? extends TypeElement>, RoundEnvironment)
22797=Parser:foo()
22798=Pair:Pair(A, B)
22799=Pair:equals(Object, Object)
22800=Seq:zip(Seq<T>)
22801=Seq:Seq(E, Seq<E>)
22802=X:main(String[])
22803=Pair:toString()
22804=Seq:toString()
22805=Seq:Seq()
22806=Pair:equals(Object)
22807=Seq:Zipper:zip(Seq<T>)
22808=Seq:isEmpty()
22809=A:foo()
22810=X:foo()
22811=X:X(String)
22812=CompletionOnKeyword3:getPossibleKeywords()
22813=CompletionOnKeyword3:CompletionOnKeyword3(char[], long, char[][], boolean)
22814=CompletionOnKeyword3:afterTryOrCatch()
22815=CompletionOnKeyword3:printExpression(int, StringBuffer)
22816=CompletionOnKeyword3:resolveType(BlockScope)
22817=CompletionOnKeyword3:getToken()
22818=CompletionOnKeyword3:CompletionOnKeyword3(char[], long, char[])
22819=Test:method()
22820=Test:test()
22821=ExtraDependencyAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
22822=ExtraDependencyAnnotationProcessorFactory:ExtraDependencyAnnotationProcessorFactory()
22823=Test:foo()
22824=X:m(int)
22825=A:foo(int, int, int, int, int, int, int, int, int)
22826=NodeFinder:NodeFinder(ASTNode, int, int)
22827=NodeFinder:getCoveredNode()
22828=NodeFinder:NodeFinderVisitor:getCoveringNode()
22829=NodeFinder:perform(ASTNode, int, int, ITypeRoot)
22830=NodeFinder:NodeFinderVisitor:getCoveredNode()
22831=NodeFinder:perform(ASTNode, ISourceRange)
22832=NodeFinder:getCoveringNode()
22833=NodeFinder:NodeFinderVisitor:preVisit2(ASTNode)
22834=NodeFinder:perform(ASTNode, int, int)
22835=NodeFinder:NodeFinderVisitor:NodeFinderVisitor(int, int)
22836=Example:bar()
22837=Example:foo()
22838=Example:foo2()
22839=ISignatureAttribute:getSignatureIndex()
22840=ISignatureAttribute:getSignature()
22841=ElementValuePair:ElementValuePair(char[], Object, MethodBinding)
22842=ElementValuePair:ElementValuePair(char[], Expression, MethodBinding)
22843=ElementValuePair:setValue(Object)
22844=ElementValuePair:UnresolvedEnumConstant:UnresolvedEnumConstant(ReferenceBinding, LookupEnvironment, char[])
22845=ElementValuePair:getMethodBinding()
22846=ElementValuePair:UnresolvedEnumConstant:getEnumConstantName()
22847=ElementValuePair:UnresolvedEnumConstant:getResolved()
22848=ElementValuePair:setMethodBinding(MethodBinding)
22849=ElementValuePair:getValue()
22850=ElementValuePair:toString()
22851=ElementValuePair:getName()
22852=ElementValuePair:getValue(Expression)
22853=X10:foo()
22854=A:getClass()
22855=MethodScope:createMethod(AbstractMethodDeclaration)
22856=MethodScope:computeLocalVariablePositions(int, CodeStream)
22857=MethodScope:isInsideInitializer()
22858=MethodScope:checkAndSetModifiersForMethod(MethodBinding)
22859=MethodScope:MethodScope(ClassScope, ReferenceContext, boolean)
22860=MethodScope:referenceType()
22861=MethodScope:findField(TypeBinding, char[], InvocationSite, boolean)
22862=MethodScope:problemReporter()
22863=MethodScope:checkAndSetModifiersForConstructor(MethodBinding)
22864=MethodScope:isInsideConstructor()
22865=MethodScope:referenceMethod()
22866=MethodScope:basicToString(int)
22867=MethodScope:isInsideInitializerOrConstructor()
22868=MethodScope:recordInitializationStates(FlowInfo)
22869=C:foo()
22870=A:getMyObject()
22871=X09:foo()
22872=J9VirtualMachine:shutDown()
22873=J9VirtualMachine:J9VirtualMachine(Process, int, String, Process, String)
22874=E:foo()
22875=ASTConverter17Test:test0009()
22876=ASTConverter17Test:test402673a()
22877=ASTConverter17Test:setUpSuite()
22878=ASTConverter17Test:test0007()
22879=ASTConverter17Test:test0018()
22880=ASTConverter17Test:test0020()
22881=ASTConverter17Test:test403444()
22882=ASTConverter17Test:tearDown()
22883=ASTConverter17Test:test0001()
22884=ASTConverter17Test:test0012()
22885=ASTConverter17Test:test0021()
22886=ASTConverter17Test:test0010()
22887=ASTConverter17Test:test0005()
22888=ASTConverter17Test:test0016()
22889=ASTConverter17Test:suite()
22890=ASTConverter17Test:test0003()
22891=ASTConverter17Test:test0014()
22892=ASTConverter17Test:test0008()
22893=ASTConverter17Test:test0019()
22894=ASTConverter17Test:test402673b()
22895=ASTConverter17Test:test0006()
22896=ASTConverter17Test:test0017()
22897=ASTConverter17Test:ASTConverter17Test(String)
22898=ASTConverter17Test:test0011()
22899=ASTConverter17Test:test0022()
22900=ASTConverter17Test:test0004()
22901=ASTConverter17Test:test0015()
22902=ASTConverter17Test:test0002()
22903=ASTConverter17Test:test0013()
22904=X03:foo(int, int)
22905=CompletionParserTest:test012()
22906=CompletionParserTest:testDA_1()
22907=CompletionParserTest:test001()
22908=CompletionParserTest:testNB()
22909=CompletionParserTest:testOA_2()
22910=CompletionParserTest:testBC_1FJ4GSG_1()
22911=CompletionParserTest:testCA_1FGPJQZ()
22912=CompletionParserTest:testF()
22913=CompletionParserTest:testZA_3()
22914=CompletionParserTest:testX_1FGGV8C_2()
22915=CompletionParserTest:testR_1FGD31E()
22916=CompletionParserTest:testCC_1FJ64I9()
22917=CompletionParserTest:test014()
22918=CompletionParserTest:testZ_1FGPF3D_1()
22919=CompletionParserTest:testBug292087b()
22920=CompletionParserTest:test003()
22921=CompletionParserTest:testCB_1FHSKQ9_1()
22922=CompletionParserTest:testUB_1FSBZ02()
22923=CompletionParserTest:testHC_1FMPYO3_2()
22924=CompletionParserTest:testBC_1FJ4GSG_3()
22925=CompletionParserTest:testQ_1FG1YU0()
22926=CompletionParserTest:testBug338789()
22927=CompletionParserTest:testH()
22928=CompletionParserTest:_testVB_5()
22929=CompletionParserTest:testRA_3()
22930=CompletionParserTest:testUA_1FHISJJ_2()
22931=CompletionParserTest:testAA_2()
22932=CompletionParserTest:testXA_1FGGUQF_1FHSL8H_3()
22933=CompletionParserTest:testDB_1FHSLDR()
22934=CompletionParserTest:testTA_1FHISJJ_2()
22935=CompletionParserTest:testVA_1FHISJJ_2()
22936=CompletionParserTest:testMB_1FHSLMQ_2()
22937=CompletionParserTest:testJ()
22938=CompletionParserTest:testLB()
22939=CompletionParserTest:testRA_1()
22940=CompletionParserTest:test010()
22941=CompletionParserTest:testHA_2()
22942=CompletionParserTest:testJB()
22943=CompletionParserTest:testOB_2()
22944=CompletionParserTest:testMA_1()
22945=CompletionParserTest:testWB_1FI313C()
22946=CompletionParserTest:testX_1FGGV8C_4()
22947=CompletionParserTest:testY_1FGPESI()
22948=CompletionParserTest:testZB_1FJ4D46_2()
22949=CompletionParserTest:testD_2()
22950=CompletionParserTest:testBug343637()
22951=CompletionParserTest:testMA_3()
22952=CompletionParserTest:testKC_1FLG1ZC()
22953=CompletionParserTest:testK_1()
22954=CompletionParserTest:testXB_1FIYM5I_2()
22955=CompletionParserTest:testRB_1FI74S3()
22956=CompletionParserTest:testFA_1()
22957=CompletionParserTest:testV_1FGGUOO_1()
22958=CompletionParserTest:testIC_1FMGUPR()
22959=CompletionParserTest:testIA_1FGNBPR_1()
22960=CompletionParserTest:testYA_1FGRIUH()
22961=CompletionParserTest:testAA_4()
22962=CompletionParserTest:testGC_1FSHLHV_4()
22963=CompletionParserTest:testGA()
22964=CompletionParserTest:testQA_2()
22965=CompletionParserTest:testHB_1FHSLDR()
22966=CompletionParserTest:testK_3()
22967=CompletionParserTest:testXB_1FIYM5I_4()
22968=CompletionParserTest:testAC_1FJ8D9Z_3()
22969=CompletionParserTest:testL_1()
22970=CompletionParserTest:testEC_1FSBZ2Y()
22971=CompletionParserTest:testXA_1FGGUQF_1FHSL8H_2()
22972=CompletionParserTest:testS_1FGF64P_1()
22973=CompletionParserTest:testPA_1()
22974=CompletionParserTest:testNA_2()
22975=CompletionParserTest:testEA_1()
22976=CompletionParserTest:testBug346454b()
22977=CompletionParserTest:testJA_1FGQVW2_2()
22978=CompletionParserTest:testGB_1FI74S3()
22979=CompletionParserTest:test017()
22980=CompletionParserTest:testTB_1FHSLMQ()
22981=CompletionParserTest:testGC_1FSHLHV_2()
22982=CompletionParserTest:testDC_1FJJ0JR_1()
22983=CompletionParserTest:testAC_1FJ8D9Z_1()
22984=CompletionParserTest:test006()
22985=CompletionParserTest:testB()
22986=CompletionParserTest:testYB_1FJ4D46_1()
22987=CompletionParserTest:testPC_1FSU4EF()
22988=CompletionParserTest:testS_1FGF64P_3()
22989=CompletionParserTest:testE_1FG1YDS_3()
22990=CompletionParserTest:testLC_1FLG1E2()
22991=CompletionParserTest:testBA_1()
22992=CompletionParserTest:testDA_4()
22993=CompletionParserTest:testZA_1()
22994=CompletionParserTest:test008()
22995=CompletionParserTest:testNC_1FJ8D9Z()
22996=CompletionParserTest:testSB_1FILFDG()
22997=CompletionParserTest:testBC_1FJ4GSG_2()
22998=CompletionParserTest:testBB_1FHJ8H9()
22999=CompletionParserTest:testE_1FG1YDS_1()
23000=CompletionParserTest:testJC_1FLG1ZC()
23001=CompletionParserTest:testG()
23002=CompletionParserTest:CompletionParserTest(String)
23003=CompletionParserTest:_testVB_2()
23004=CompletionParserTest:testZA_2()
23005=CompletionParserTest:testVB_1()
23006=CompletionParserTest:testX_1FGGV8C_3()
23007=CompletionParserTest:test013()
23008=CompletionParserTest:testDA_2()
23009=CompletionParserTest:testEB_1FI74S3()
23010=CompletionParserTest:test002()
23011=CompletionParserTest:testOA_1()
23012=CompletionParserTest:testBug310423()
23013=CompletionParserTest:testCB_1FHSKQ9_2()
23014=CompletionParserTest:testQB_1FIK820()
23015=CompletionParserTest:testBug338789b()
23016=CompletionParserTest:testHC_1FMPYO3_1()
23017=CompletionParserTest:testTA_1FHISJJ_1()
23018=CompletionParserTest:testAB_1FHU9LU()
23019=CompletionParserTest:testI()
23020=CompletionParserTest:testOC_1FM7J7F()
23021=CompletionParserTest:_testVB_4()
23022=CompletionParserTest:testRA_2()
23023=CompletionParserTest:testX_1FGGV8C_1()
23024=CompletionParserTest:test015()
23025=CompletionParserTest:testZ_1FGPF3D_2()
23026=CompletionParserTest:testMC_1FJ8D9Z()
23027=CompletionParserTest:testBug292087a()
23028=CompletionParserTest:test004()
23029=CompletionParserTest:testWA_1()
23030=CompletionParserTest:testKB()
23031=CompletionParserTest:testTA_1FHISJJ_3()
23032=CompletionParserTest:testVA_1FHISJJ_1()
23033=CompletionParserTest:testP_1FG1YU0()
23034=CompletionParserTest:testO_1FG1YU0()
23035=CompletionParserTest:testQA_4()
23036=CompletionParserTest:testUA_1FHISJJ_1()
23037=CompletionParserTest:testAA_3()
23038=CompletionParserTest:testXA_1FGGUQF_1FHSL8H_4()
23039=CompletionParserTest:testL_3()
23040=CompletionParserTest:testW_1FGGUS4()
23041=CompletionParserTest:testVB_3()
23042=CompletionParserTest:testMB_1FHSLMQ_1()
23043=CompletionParserTest:test011()
23044=CompletionParserTest:testHA_1()
23045=CompletionParserTest:testLA_1FGLMOF()
23046=CompletionParserTest:testAA_1()
23047=CompletionParserTest:testBug346415()
23048=CompletionParserTest:testOB_1()
23049=CompletionParserTest:testMA_2()
23050=CompletionParserTest:testBA_2()
23051=CompletionParserTest:testQA_1()
23052=CompletionParserTest:testK_2()
23053=CompletionParserTest:test009()
23054=CompletionParserTest:testXB_1FIYM5I_3()
23055=CompletionParserTest:testV_1FGGUOO_2()
23056=CompletionParserTest:testIB()
23057=CompletionParserTest:testSA()
23058=CompletionParserTest:testU_1FGGUME()
23059=CompletionParserTest:testD_1()
23060=CompletionParserTest:testN()
23061=CompletionParserTest:suite()
23062=CompletionParserTest:testGC_1FSHLHV_3()
23063=CompletionParserTest:testQA_3()
23064=CompletionParserTest:testK_4()
23065=CompletionParserTest:testA()
23066=CompletionParserTest:testL_2()
23067=CompletionParserTest:testFA_2()
23068=CompletionParserTest:testEA_2()
23069=CompletionParserTest:_testXA_1FGGUQF_1FHSL8H_1()
23070=CompletionParserTest:testZB_1FJ4D46_1()
23071=CompletionParserTest:test016()
23072=CompletionParserTest:testDA_5()
23073=CompletionParserTest:testKA_1FH5SU5()
23074=CompletionParserTest:test005()
23075=CompletionParserTest:testAC_1FJ8D9Z_2()
23076=CompletionParserTest:testC()
23077=CompletionParserTest:testGC_1FSHLHV_1()
23078=CompletionParserTest:testWA_2()
23079=CompletionParserTest:testS_1FGF64P_2()
23080=CompletionParserTest:testPA_2()
23081=CompletionParserTest:testX_1FGPE8E()
23082=CompletionParserTest:testNA_3()
23083=CompletionParserTest:testIA_1FGNBPR_2()
23084=CompletionParserTest:testM_1FGGLMT()
23085=CompletionParserTest:testDA_3()
23086=CompletionParserTest:testFC_1FSBZ9B()
23087=CompletionParserTest:test007()
23088=CompletionParserTest:testBug346454()
23089=CompletionParserTest:testFB_1FI74S3()
23090=CompletionParserTest:testXB_1FIYM5I_1()
23091=CompletionParserTest:testE_1FG1YDS_2()
23092=CompletionParserTest:testNA_1()
23093=CompletionParserTest:testT_1FGF64P()
23094=CompletionParserTest:testPB()
23095=CompletionParserTest:testJA_1FGQVW2_1()
23096=Format:temp()
23097=ElementChangedEvent:getDelta()
23098=ElementChangedEvent:getType()
23099=ElementChangedEvent:ElementChangedEvent(IJavaElementDelta, int)
23100=R5:qualified_name()
23101=R5:simple_name()
23102=R5:qualified_name(g3.t.def.GS<g3.t.def.GM<?, ?, ?>>, g3.t.def.GS<g3.t.def.GM<g3.t.def.GM<?, ?, ?>, g3.t.def.GM<?, ?, ?>, g3.t.def.GM<?, ?, ?>>>, g3.t.def.GS<g3.t.def.GM<java.lang.Object, java.lang.Exception, java.lang.RuntimeException>>)
23103=R5:simple_name(GM<GS<?>, GS<?>, GS<?>>, GM<GS<?>, GS<GS<?>>, GS<GS<GS<?>>>>, GM<GS<Object>, GS<? extends Throwable>, GS<? super RuntimeException>>)
23104=SignatureWrapper:toString()
23105=SignatureWrapper:SignatureWrapper(char[])
23106=SignatureWrapper:nextWord()
23107=SignatureWrapper:computeEnd()
23108=SignatureWrapper:atEnd()
23109=X:foo2()
23110=X:bar()
23111=X:foo()
23112=X:foo4(int)
23113=X:foo3()
23114=Bug49361:main(String[])
23115=TypeMirrorImpl:getAnnotationBindings()
23116=TypeMirrorImpl:accept(TypeVisitor<R, P>, P)
23117=TypeMirrorImpl:toString()
23118=TypeMirrorImpl:hashCode()
23119=TypeMirrorImpl:binding()
23120=TypeMirrorImpl:getPackedAnnotationBindings()
23121=TypeMirrorImpl:getAnnotationMirrors()
23122=TypeMirrorImpl:equals(Object)
23123=TypeMirrorImpl:getKind()
23124=TypeMirrorImpl:getAnnotationsByType(Class<A>)
23125=TypeMirrorImpl:TypeMirrorImpl(BaseProcessingEnvImpl, Binding)
23126=TypeMirrorImpl:getAnnotation(Class<A>)
23127=A:foo()
23128=ScannerUtil:hasAnnotationInstance(char[])
23129=ScannerUtil:hasAnnotationInstance(ICompilationUnit)
23130=ScannerUtil:hasAnnotationInstance(IFile)
23131=A:foo()
23132=IErrorHandlingPolicy:proceedOnErrors()
23133=IErrorHandlingPolicy:stopOnFirstError()
23134=A:foo()
23135=AnnotationHolder:MethodHolder:setAnnotations(AnnotationBinding[])
23136=AnnotationHolder:storeAnnotations(AnnotationBinding[], AnnotationBinding[][], Object, LookupEnvironment)
23137=AnnotationHolder:MethodHolder:getParameterAnnotations(int)
23138=AnnotationHolder:AnnotationMethodHolder:getDefaultValue()
23139=AnnotationHolder:getParameterAnnotations(int)
23140=AnnotationHolder:getAnnotations()
23141=AnnotationHolder:AnnotationMethodHolder:AnnotationMethodHolder(AnnotationBinding[], AnnotationBinding[][], Object, LookupEnvironment)
23142=AnnotationHolder:MethodHolder:MethodHolder(AnnotationBinding[], AnnotationBinding[][])
23143=AnnotationHolder:setAnnotations(AnnotationBinding[])
23144=AnnotationHolder:MethodHolder:getParameterAnnotations()
23145=AnnotationHolder:getDefaultValue()
23146=AnnotationHolder:getParameterAnnotations()
23147=CompletionTests2:testBug410207a()
23148=CompletionTests2:testBug237469b()
23149=CompletionTests2:testBug96950()
23150=CompletionTests2:testBug151500c()
23151=CompletionTests2:testBug6930_19()
23152=CompletionTests2:testBug6930_08()
23153=CompletionTests2:testAccessRestriction2()
23154=CompletionTests2:testBug418011()
23155=CompletionTests2:createDirectory(File, String)
23156=CompletionTests2:testBug6930_32()
23157=CompletionTests2:testBug317264c()
23158=CompletionTests2:testAccessRestriction4()
23159=CompletionTests2:testBug6930_21()
23160=CompletionTests2:testBug29832()
23161=CompletionTests2:testBug6930_10()
23162=CompletionTests2:testBug79288()
23163=CompletionTests2:testBug392581()
23164=CompletionTests2:testBug6930_30()
23165=CompletionTests2:CompletionContainerInitializer:allowFailureContainer()
23166=CompletionTests2:testAccessRestriction6()
23167=CompletionTests2:testBug317264a()
23168=CompletionTests2:testChangeInternalJar()
23169=CompletionTests2:testBug151500a()
23170=CompletionTests2:testBug281598c()
23171=CompletionTests2:testBug6930_13()
23172=CompletionTests2:testBug6930_02()
23173=CompletionTests2:testBug276890_02()
23174=CompletionTests2:testAccessRestriction7()
23175=CompletionTests2:testBug6930_26()
23176=CompletionTests2:testBug6930_11()
23177=CompletionTests2:testBug91772()
23178=CompletionTests2:testBug340945b()
23179=CompletionTests2:testBug6930_35()
23180=CompletionTests2:testAccessRestriction9()
23181=CompletionTests2:testBug6930_24()
23182=CompletionTests2:testBug6930_17()
23183=CompletionTests2:testBug6930_06()
23184=CompletionTests2:testBug340945d()
23185=CompletionTests2:testBug397070()
23186=CompletionTests2:testBug93891()
23187=CompletionTests2:testAccessRestriction13()
23188=CompletionTests2:testBug373409()
23189=CompletionTests2:testBug410207d()
23190=CompletionTests2:assertResults(String, String)
23191=CompletionTests2:testBug6930_15()
23192=CompletionTests2:testBug33560()
23193=CompletionTests2:testBug6930_04()
23194=CompletionTests2:testBug340945()
23195=CompletionTests2:testAccessRestriction11()
23196=CompletionTests2:test442868()
23197=CompletionTests2:testBug410207b()
23198=CompletionTests2:testBug6930_28()
23199=CompletionTests2:testBug326610()
23200=CompletionTests2:testBug151500b()
23201=CompletionTests2:testBug281598()
23202=CompletionTests2:testBug281598b()
23203=CompletionTests2:setUpSuite()
23204=CompletionTests2:testBug6930_09()
23205=CompletionTests2:testAccessRestriction1()
23206=CompletionTests2:testBug237469a()
23207=CompletionTests2:testBug6930_33()
23208=CompletionTests2:CompletionContainerInitializer:CompletionContainerInitializer(String, String[], boolean[])
23209=CompletionTests2:testBug317264d()
23210=CompletionTests2:testAccessRestriction3()
23211=CompletionTests2:testBug6930_22()
23212=CompletionTests2:CompletionTests2(String)
23213=CompletionTests2:CompletionContainerInitializer:newContainer(char[][], boolean[], String[])
23214=CompletionTests2:CompletionContainerInitializer:initialize(IPath, IJavaProject)
23215=CompletionTests2:testBug6930_31()
23216=CompletionTests2:test479656()
23217=CompletionTests2:testAccessRestriction5()
23218=CompletionTests2:testBug6930_20()
23219=CompletionTests2:testBug317264b()
23220=CompletionTests2:testBug276890_01()
23221=CompletionTests2:testAccessRestriction8()
23222=CompletionTests2:testBug6930_25()
23223=CompletionTests2:testBug6930_14()
23224=CompletionTests2:testBug6930_03()
23225=CompletionTests2:testAccessRestriction14()
23226=CompletionTests2:testBug276890_03()
23227=CompletionTests2:testBug6930_34()
23228=CompletionTests2:createFile(File, String, String)
23229=CompletionTests2:testBug6930_23()
23230=CompletionTests2:testBug376977()
23231=CompletionTests2:testBug6930_12()
23232=CompletionTests2:testBug6930_01()
23233=CompletionTests2:testBug340945a()
23234=CompletionTests2:testAccessRestriction12()
23235=CompletionTests2:suite()
23236=CompletionTests2:testBug6930_29()
23237=CompletionTests2:testBug6930_18()
23238=CompletionTests2:CompletionContainerInitializer:CompletionContainerInitializer(String, String[], boolean[], String[])
23239=CompletionTests2:testBug270113_01()
23240=CompletionTests2:testBug6930_07()
23241=CompletionTests2:tearDownSuite()
23242=CompletionTests2:testBug340945c()
23243=CompletionTests2:testAccessRestriction10()
23244=CompletionTests2:testBug410207c()
23245=CompletionTests2:testBug6930_27()
23246=CompletionTests2:testBug6930_16()
23247=CompletionTests2:testBug6930_05()
23248=Test:foo()
23249=TypeBindingVisitor:visit(ArrayBinding)
23250=TypeBindingVisitor:reset()
23251=TypeBindingVisitor:visit(RawTypeBinding)
23252=TypeBindingVisitor:visit(TypeBindingVisitor, TypeBinding)
23253=TypeBindingVisitor:visit(BaseTypeBinding)
23254=TypeBindingVisitor:visit(TypeBindingVisitor, ReferenceBinding[])
23255=TypeBindingVisitor:visit(TypeBindingVisitor, TypeBinding[])
23256=TypeBindingVisitor:visit(ParameterizedTypeBinding)
23257=TypeBindingVisitor:visit(ReferenceBinding)
23258=TypeBindingVisitor:visit(IntersectionTypeBinding18)
23259=TypeBindingVisitor:visit(WildcardBinding)
23260=TypeBindingVisitor:visit(TypeVariableBinding)
23261=TypeBindingVisitor:visit(PolyTypeBinding)
23262=X03_tabs:foo(String)
23263=FilerTests:testURI()
23264=FilerTests:testCreateSourceFile()
23265=FilerTests:FilerTests(String)
23266=FilerTests:testBug269934()
23267=FilerTests:suite()
23268=FilerTests:testNullParents()
23269=FilerTests:testGetResource01()
23270=FilerTests:testCreateSourceFileWithGenReference()
23271=FilerTests:testGetCharContentLarge()
23272=FilerTests:testCreateNonSourceFile()
23273=FilerTests:testGetResource02()
23274=X08:foo(Object, int)
23275=Test:foo(Exception)
23276=A:foo(Object, A)
23277=BasePreferencePage:performApply()
23278=BasePreferencePage:enableProjectSpecificSettings(boolean)
23279=BasePreferencePage:offerLink()
23280=BasePreferencePage:createControl(Composite)
23281=BasePreferencePage:dispose()
23282=BasePreferencePage:performDefaults()
23283=BasePreferencePage:getContextHelpId()
23284=BasePreferencePage:hasProjectSpecificOptions(IProject)
23285=BasePreferencePage:setConfigurationBlock(BaseConfigurationBlock)
23286=BasePreferencePage:setElement(IAdaptable)
23287=BasePreferencePage:getConfigurationBlock()
23288=BasePreferencePage:createPreferenceContent(Composite)
23289=BasePreferencePage:performOk()
23290=EvaluationResult:hasProblems()
23291=EvaluationResult:getEvaluationType()
23292=EvaluationResult:getEvaluationID()
23293=EvaluationResult:toString()
23294=EvaluationResult:EvaluationResult(char[], int, CategorizedProblem[])
23295=EvaluationResult:getValueDisplayString()
23296=EvaluationResult:getValue()
23297=EvaluationResult:hasWarnings()
23298=EvaluationResult:EvaluationResult(char[], int, char[], char[])
23299=EvaluationResult:getProblems()
23300=EvaluationResult:hasErrors()
23301=EvaluationResult:getValueTypeName()
23302=EvaluationResult:addProblem(CategorizedProblem)
23303=EvaluationResult:hasValue()
23304=A:foo()
23305=Test:main(String[])
23306=CM47209:m47209(int)
23307=CM47209:CM47209(String)
23308=EclipseAnnotationProcessorEnvironment:getJavaProject()
23309=EclipseAnnotationProcessorEnvironment:getMessager()
23310=EclipseAnnotationProcessorEnvironment:getAST()
23311=EclipseAnnotationProcessorEnvironment:getPhase()
23312=EclipseAnnotationProcessorEnvironment:addTypeDependency(String)
23313=Test:main(String[])
23314=TypeBinding:isBaseType()
23315=TypeBinding:genericCast(TypeBinding)
23316=TypeBinding:hasTypeBit(int)
23317=TypeBinding:actualType()
23318=TypeBinding:getIntersectingTypes()
23319=TypeBinding:signableName()
23320=TypeBinding:bound()
23321=TypeBinding:isHierarchyInconsistent()
23322=TypeBinding:isBoundParameterizedType()
23323=TypeBinding:isNestedType()
23324=TypeBinding:setTypeAnnotations(AnnotationBinding[], boolean)
23325=TypeBinding:sIsMoreSpecific(TypeBinding, TypeBinding, Scope)
23326=TypeBinding:constantPoolName()
23327=TypeBinding:isAnonymousType()
23328=TypeBinding:isCompatibleWith(TypeBinding, Scope)
23329=TypeBinding:isIntersectionType18()
23330=TypeBinding:superInterfaces()
23331=TypeBinding:isStatic()
23332=TypeBinding:superclass()
23333=TypeBinding:isGenericType()
23334=TypeBinding:isClass()
23335=TypeBinding:isFunctionalInterface(Scope)
23336=TypeBinding:uncapture(Scope)
23337=TypeBinding:typeArguments()
23338=TypeBinding:isTypeVariable()
23339=TypeBinding:notEquals(TypeBinding, TypeBinding)
23340=TypeBinding:withoutToplevelNullAnnotation()
23341=TypeBinding:kind()
23342=TypeBinding:isBoxingCompatibleWith(TypeBinding, Scope)
23343=TypeBinding:isReifiable()
23344=TypeBinding:capture(Scope, int, int)
23345=TypeBinding:swapUnresolved(UnresolvedReferenceBinding, ReferenceBinding, LookupEnvironment)
23346=TypeBinding:isPotentiallyCompatibleWith(TypeBinding, Scope)
23347=TypeBinding:isCompatibleWith(TypeBinding)
23348=TypeBinding:isBoxedPrimitiveType()
23349=TypeBinding:additionalBounds()
23350=TypeBinding:enclosingMethod()
23351=TypeBinding:genericTypeSignature()
23352=TypeBinding:isParameterizedWithOwnVariables()
23353=TypeBinding:collectInferenceVariables(Set<InferenceVariable>)
23354=TypeBinding:isEnum()
23355=TypeBinding:acceptsNonNullDefault()
23356=TypeBinding:qualifiedSourceName()
23357=TypeBinding:isParameterizedType()
23358=TypeBinding:isUnboundWildcard()
23359=TypeBinding:isCapture()
23360=TypeBinding:prototype()
23361=TypeBinding:isInterface()
23362=TypeBinding:initializeForStaticImports()
23363=TypeBinding:isPrimitiveOrBoxedPrimitiveType()
23364=TypeBinding:getErasureCompatibleType(TypeBinding)
23365=TypeBinding:isFunctionalType()
23366=TypeBinding:isTypeArgumentContainedBy(TypeBinding)
23367=TypeBinding:getTypeAnnotations()
23368=TypeBinding:isFreeTypeVariable()
23369=TypeBinding:closestMatch()
23370=TypeBinding:signature()
23371=TypeBinding:isSubtypeOf(TypeBinding)
23372=TypeBinding:isMemberType()
23373=TypeBinding:isProperType(boolean)
23374=TypeBinding:isUnresolvedType()
23375=TypeBinding:isThrowable()
23376=TypeBinding:annotatedDebugName()
23377=TypeBinding:exitRecursiveFunction()
23378=TypeBinding:equalsEquals(TypeBinding, TypeBinding)
23379=TypeBinding:collectMissingTypes(List<TypeBinding>)
23380=TypeBinding:getPackage()
23381=TypeBinding:debugName()
23382=TypeBinding:updateTagBits()
23383=TypeBinding:erasure()
23384=TypeBinding:isRawType()
23385=TypeBinding:isLocalType()
23386=TypeBinding:leafComponentType()
23387=TypeBinding:hasTypeAnnotations()
23388=TypeBinding:isProvablyDistinctTypeArgument(TypeBinding, ParameterizedTypeBinding, int)
23389=TypeBinding:mentionsAny(TypeBinding[], int)
23390=TypeBinding:isIntersectionType()
23391=TypeBinding:syntheticOuterLocalVariables()
23392=TypeBinding:wellKnownType(Scope, int)
23393=TypeBinding:substituteInferenceVariable(InferenceVariable, TypeBinding)
23394=TypeBinding:collectSubstitutes(Scope, TypeBinding, InferenceContext, int)
23395=TypeBinding:depth()
23396=TypeBinding:getSingleAbstractMethod(Scope, boolean)
23397=TypeBinding:TypeBinding(TypeBinding)
23398=TypeBinding:isWildcard()
23399=TypeBinding:canBeInstantiated()
23400=TypeBinding:enclosingType()
23401=TypeBinding:unannotated()
23402=TypeBinding:isUncheckedException(boolean)
23403=TypeBinding:getMethods(char[])
23404=TypeBinding:boundKind()
23405=TypeBinding:dimensions()
23406=TypeBinding:findSuperTypeOriginatingFrom(TypeBinding)
23407=TypeBinding:hasNullTypeAnnotations()
23408=TypeBinding:isProvableDistinctSubType(TypeBinding)
23409=TypeBinding:isPolyType()
23410=TypeBinding:original()
23411=TypeBinding:isRepeatableAnnotationType()
23412=TypeBinding:isProvablyDistinct(TypeBinding)
23413=TypeBinding:isEquivalentTo(TypeBinding)
23414=TypeBinding:isNumericType()
23415=TypeBinding:nullAnnotatedReadableName(CompilerOptions, boolean)
23416=TypeBinding:sourceName()
23417=TypeBinding:containerAnnotationType()
23418=TypeBinding:typeVariables()
23419=TypeBinding:isArrayType()
23420=TypeBinding:isParameterizedTypeWithActualArguments()
23421=TypeBinding:isPrimitiveType()
23422=TypeBinding:enterRecursiveFunction()
23423=TypeBinding:needsUncheckedConversion(TypeBinding)
23424=TypeBinding:clone(TypeBinding)
23425=TypeBinding:findSuperTypeOriginatingFrom(int, boolean)
23426=TypeBinding:rank()
23427=TypeBinding:TypeBinding()
23428=TypeBinding:qualifiedPackageName()
23429=TypeBinding:canBeSeenBy(Scope)
23430=TestA:foo()
23431=X:foo()
23432=X:X(String)
23433=SelectionOnPackageReference:print(int, StringBuffer, boolean)
23434=SelectionOnPackageReference:SelectionOnPackageReference(char[][], long[])
23435=MethodVerifier:computeInheritedMethods(ReferenceBinding, ReferenceBinding[])
23436=MethodVerifier:computeSubstituteMethod(MethodBinding, MethodBinding)
23437=MethodVerifier:computeMethods()
23438=MethodVerifier:isAsVisible(MethodBinding, MethodBinding)
23439=MethodVerifier:checkInheritedReturnTypes(MethodBinding, MethodBinding)
23440=MethodVerifier:mustImplementAbstractMethods()
23441=MethodVerifier:isInterfaceMethodImplemented(MethodBinding, MethodBinding, ReferenceBinding)
23442=MethodVerifier:hasGenericParameter(MethodBinding)
23443=MethodVerifier:computeSubstituteMethod(MethodBinding, MethodBinding, LookupEnvironment)
23444=MethodVerifier:isSubstituteParameterSubsignature(MethodBinding, MethodBinding)
23445=MethodVerifier:checkForMissingHashCodeMethod()
23446=MethodVerifier:checkForRedundantSuperinterfaces(ReferenceBinding, ReferenceBinding[])
23447=MethodVerifier:collectAllDistinctSuperInterfaces(ReferenceBinding[], Set, List)
23448=MethodVerifier:areReturnTypesCompatible(MethodBinding, MethodBinding, LookupEnvironment)
23449=MethodVerifier:resolvedExceptionTypesFor(MethodBinding)
23450=MethodVerifier:isParameterSubsignature(MethodBinding, MethodBinding)
23451=MethodVerifier:couldMethodOverride(MethodBinding, MethodBinding)
23452=MethodVerifier:canSkipInheritedMethods(MethodBinding, MethodBinding)
23453=MethodVerifier:addBridgeMethodCandidate(MethodBinding)
23454=MethodVerifier:reportIncompatibleReturnTypeError(MethodBinding, MethodBinding)
23455=MethodVerifier:isSubstituteParameterSubsignature(MethodBinding, MethodBinding, LookupEnvironment)
23456=MethodVerifier:checkForBridgeMethod(MethodBinding, MethodBinding, MethodBinding[])
23457=MethodVerifier:isMethodSubsignature(MethodBinding, MethodBinding)
23458=MethodVerifier:canSkipInheritedMethods()
23459=MethodVerifier:areReturnTypesCompatible(MethodBinding, MethodBinding)
23460=MethodVerifier:MethodVerifier(LookupEnvironment)
23461=MethodVerifier:checkPackagePrivateAbstractMethod(MethodBinding)
23462=MethodVerifier:areMethodsCompatible(MethodBinding, MethodBinding, LookupEnvironment)
23463=MethodVerifier:problemReporter()
23464=MethodVerifier:checkInheritedMethods(MethodBinding[], int, boolean[], boolean[])
23465=MethodVerifier:checkMethods()
23466=MethodVerifier:checkConcreteInheritedMethod(MethodBinding, MethodBinding[])
23467=MethodVerifier:toString()
23468=MethodVerifier:isParameterSubsignature(MethodBinding, MethodBinding, LookupEnvironment)
23469=MethodVerifier:findBestInheritedAbstractOrDefaultMethod(MethodBinding[], int)
23470=MethodVerifier:checkAbstractMethod(MethodBinding)
23471=MethodVerifier:checkExceptions(MethodBinding, MethodBinding)
23472=MethodVerifier:mustImplementAbstractMethod(ReferenceBinding)
23473=MethodVerifier:doesMethodOverride(MethodBinding, MethodBinding)
23474=MethodVerifier:doesMethodOverride(MethodBinding, MethodBinding, LookupEnvironment)
23475=MethodVerifier:areMethodsCompatible(MethodBinding, MethodBinding)
23476=MethodVerifier:reportRawReferences(MethodBinding, MethodBinding)
23477=MethodVerifier:checkAgainstInheritedMethods(MethodBinding, MethodBinding[], int, MethodBinding[])
23478=MethodVerifier:canOverridingMethodDifferInErasure(MethodBinding, MethodBinding)
23479=MethodVerifier:computeInheritedMethods()
23480=MethodVerifier:verify(SourceTypeBinding)
23481=MethodVerifier:findOverriddenInheritedMethods(MethodBinding[], int)
23482=MethodVerifier:isSameClassOrSubclassOf(ReferenceBinding, ReferenceBinding)
23483=MethodVerifier:problemReporter(MethodBinding)
23484=MethodVerifier:verify()
23485=MethodVerifier:findSuperinterfaceCollisions(ReferenceBinding, ReferenceBinding[])
23486=X21:createSearchPattern()
23487=JavaModelCache:JavaModelCache()
23488=JavaModelCache:getExistingElement(IJavaElement)
23489=JavaModelCache:removeFromJarTypeCache(BinaryType)
23490=JavaModelCache:getJarTypeRatio()
23491=JavaModelCache:getRatioForProperty(String)
23492=JavaModelCache:getOpenableRatio()
23493=JavaModelCache:putInfo(IJavaElement, Object)
23494=JavaModelCache:removeInfo(JavaElement)
23495=JavaModelCache:getInfo(IJavaElement)
23496=JavaModelCache:toString()
23497=JavaModelCache:resetJarTypeCache()
23498=JavaModelCache:peekAtInfo(IJavaElement)
23499=JavaModelCache:toStringFillingRation(String)
23500=JavaModelCache:getMemoryRatio()
23501=ASTRewritingMethodDeclTest:testReceiverParam_since_8()
23502=ASTRewritingMethodDeclTest:testMethodComments4()
23503=ASTRewritingMethodDeclTest:testModifiersAST3WithAnnotations_since_3()
23504=ASTRewritingMethodDeclTest:testBUG_38447()
23505=ASTRewritingMethodDeclTest:ASTRewritingMethodDeclTest(String, int)
23506=ASTRewritingMethodDeclTest:testMethodDeclarationParamShuffel()
23507=ASTRewritingMethodDeclTest:testMethodDeclChangesBug77538()
23508=ASTRewritingMethodDeclTest:testMethodDeclaration_bug24916()
23509=ASTRewritingMethodDeclTest:testInitializer_only_2()
23510=ASTRewritingMethodDeclTest:testBug403985_since_8()
23511=ASTRewritingMethodDeclTest:testReceiver1_since_8()
23512=ASTRewritingMethodDeclTest:testListInserts()
23513=ASTRewritingMethodDeclTest:testInsertFieldAfter_only_2()
23514=ASTRewritingMethodDeclTest:_testListRemoves3()
23515=ASTRewritingMethodDeclTest:testListCombinations()
23516=ASTRewritingMethodDeclTest:testListRemoves()
23517=ASTRewritingMethodDeclTest:testVarArgsAnnotations_since_8()
23518=ASTRewritingMethodDeclTest:getThrownExceptions(MethodDeclaration)
23519=ASTRewritingMethodDeclTest:testEnumConstantDeclaration2_since_3()
23520=ASTRewritingMethodDeclTest:setModifiers(ASTRewrite, MethodDeclaration, int)
23521=ASTRewritingMethodDeclTest:testBug427622c_since_8()
23522=ASTRewritingMethodDeclTest:testListCombination()
23523=ASTRewritingMethodDeclTest:testMethodDeclarationExtraDimensions_only_2_3_4()
23524=ASTRewritingMethodDeclTest:testMethodComments1()
23525=ASTRewritingMethodDeclTest:testBug427622b_since_8()
23526=ASTRewritingMethodDeclTest:suite()
23527=ASTRewritingMethodDeclTest:testBug427622a_since_8()
23528=ASTRewritingMethodDeclTest:testMethodComments3()
23529=ASTRewritingMethodDeclTest:testReceiverParam_InnerClass_since_8()
23530=ASTRewritingMethodDeclTest:testMethodTypeParameterAdds_since_3()
23531=ASTRewritingMethodDeclTest:testMethodReturnTypeChanges_only_2()
23532=ASTRewritingMethodDeclTest:testEnumConstantDeclaration1_since_3()
23533=ASTRewritingMethodDeclTest:setExtraDimensions(ASTRewrite, MethodDeclaration, int)
23534=ASTRewritingMethodDeclTest:testMethodDeclarationParamShuffel1()
23535=ASTRewritingMethodDeclTest:_testReceiver4_since_8()
23536=ASTRewritingMethodDeclTest:testMethodBody()
23537=ASTRewritingMethodDeclTest:testEnumConstantDeclaration_bug114119_since_3()
23538=ASTRewritingMethodDeclTest:ASTRewritingMethodDeclTest(String)
23539=ASTRewritingMethodDeclTest:testModifiersAST3WithAnnotations2_since_3()
23540=ASTRewritingMethodDeclTest:testReceiver3_since_8()
23541=ASTRewritingMethodDeclTest:testAnnotations_since_3()
23542=ASTRewritingMethodDeclTest:testReceiver2_since_8()
23543=ASTRewritingMethodDeclTest:testListCombination2()
23544=ASTRewritingMethodDeclTest:testFieldDeclaration_only_2()
23545=ASTRewritingMethodDeclTest:testListRemoves2_since_3()
23546=ASTRewritingMethodDeclTest:testMethodTypeParameterRemoves_since_3()
23547=ASTRewritingMethodDeclTest:testModifiersAST3_since_3()
23548=ASTRewritingMethodDeclTest:getMethodReturnTypeProperty(AST)
23549=ASTRewritingMethodDeclTest:getReturnType(MethodDeclaration)
23550=ASTRewritingMethodDeclTest:testReceiver5_since_8()
23551=ASTRewritingMethodDeclTest:testParameterAnnotations_since_3()
23552=ASTRewritingMethodDeclTest:testMethodDeclChanges()
23553=ASTRewritingMethodDeclTest:testAnnotationTypeMember_since_4()
23554=ASTRewritingMethodDeclTest:testExtraDimwithAnnotations_since_8()
23555=ASTRewritingMethodDeclTest:testListInsert()
23556=ASTRewritingMethodDeclTest:testVarArgs_since_3()
23557=ASTRewritingMethodDeclTest:testMethodComments2()
23558=ASTRewritingMethodDeclTest:testMethodReturnTypeChanges2_since_3()
23559=ASTRewritingMethodDeclTest:createNewExceptionType(AST, String)
23560=ASTRewritingMethodDeclTest:getMethodThrownExceptionsProperty(AST)
23561=ASTRewritingMethodDeclTest:testMethodReturnTypeChanges2_only_2()
23562=ASTRewritingMethodDeclTest:testMethodReturnTypeChanges_since_3()
23563=A:foo()
23564=X:main(String[])
23565=MultiLineTestCase:MultiLineTestCase(String)
23566=MultiLineTestCase:testMultiLineCommentFor145544()
23567=MultiLineTestCase:suite()
23568=MultiLineTestCase:testSingleLineCommentTabs1()
23569=MultiLineTestCase:test49412_3()
23570=MultiLineTestCase:testSingleLineCommentSpace2()
23571=MultiLineTestCase:testNoFormat1()
23572=MultiLineTestCase:testSingleLineCommentSpace4()
23573=MultiLineTestCase:testMultiLineCommentAsterisk1()
23574=MultiLineTestCase:testSingleLineComment1()
23575=MultiLineTestCase:test75460()
23576=MultiLineTestCase:testSingleLineComment3()
23577=MultiLineTestCase:_test170580()
23578=MultiLineTestCase:testNoChange1()
23579=MultiLineTestCase:test49412()
23580=MultiLineTestCase:getCommentKind()
23581=MultiLineTestCase:testSingleLineCommentTabs2()
23582=MultiLineTestCase:test49412_2()
23583=MultiLineTestCase:testSingleLineCommentSpace1()
23584=MultiLineTestCase:testSingleLineCommentSpace3()
23585=MultiLineTestCase:testSingleLineComment2()
23586=MultiLineTestCase:testSingleLineComment4()
23587=Assignment:resolveTypeExpecting(BlockScope, TypeBinding)
23588=Assignment:localVariableBinding()
23589=Assignment:printExpression(int, StringBuffer)
23590=Assignment:checkAssignment(BlockScope, TypeBinding, TypeBinding)
23591=Assignment:print(int, StringBuffer)
23592=Assignment:resolveType(BlockScope)
23593=Assignment:Assignment(Expression, Expression, int)
23594=Assignment:generateCode(BlockScope, CodeStream, boolean)
23595=Assignment:analyseCode(BlockScope, FlowContext, FlowInfo)
23596=Assignment:getLastField(Expression)
23597=Assignment:nullStatus(FlowInfo, FlowContext)
23598=Assignment:printExpressionNoParenthesis(int, StringBuffer)
23599=Assignment:statementExpression()
23600=Assignment:printStatement(int, StringBuffer)
23601=Assignment:traverse(ASTVisitor, BlockScope)
23602=RecoveryScannerData:removeUnused()
23603=ArrayTypeImpl:kind()
23604=ArrayTypeImpl:getTypeBinding()
23605=ArrayTypeImpl:accept(TypeVisitor)
23606=ArrayTypeImpl:toString()
23607=ArrayTypeImpl:isAssignmentCompatible(EclipseMirrorType)
23608=ArrayTypeImpl:getComponentType()
23609=ArrayTypeImpl:getEnvironment()
23610=ArrayTypeImpl:hashCode()
23611=ArrayTypeImpl:ArrayTypeImpl(ITypeBinding, BaseProcessorEnv)
23612=ArrayTypeImpl:isSubTypeCompatible(EclipseMirrorType)
23613=ArrayTypeImpl:equals(Object)
23614=BatchProcessingEnvImpl:getLocale()
23615=BatchProcessingEnvImpl:getFileManager()
23616=BatchProcessingEnvImpl:BatchProcessingEnvImpl(BaseAnnotationProcessorManager, Main, String[])
23617=BatchProcessingEnvImpl:parseProcessorOptions(String[])
23618=ResolvePartiallyQualifiedType:foo()
23619=CorrectionEngine:getAllWarningTokens()
23620=CorrectionEngine:getProblemArguments(IMarker)
23621=CorrectionEngine:correct(char[])
23622=CorrectionEngine:computeCorrections(IProblem, ICompilationUnit, ICorrectionRequestor)
23623=CorrectionEngine:CorrectionEngine(Map)
23624=CorrectionEngine:computeCorrections(ICompilationUnit, int, int, int, String[], ICorrectionRequestor)
23625=CorrectionEngine:getWarningToken(int)
23626=CorrectionEngine:computeCorrections(IMarker, ICompilationUnit, int, ICorrectionRequestor)
23627=Test:bar()
23628=Test:foo(int)
23629=Navigator:getNumberSingle(NodeInfo, Pattern, Pattern, Controller)
23630=Navigator:AxisFilter:next()
23631=Navigator:AxisFilter:AxisFilter(AxisIterator, NodeTest)
23632=Navigator:getNumberAny(Instruction, NodeInfo, Pattern, Pattern, Controller, boolean)
23633=Navigator:AxisFilter:getLastPosition()
23634=Navigator:compareOrder(SiblingCountingNode, SiblingCountingNode)
23635=Navigator:getSequentialKey(SiblingCountingNode)
23636=Navigator:getNumberSimple(NodeInfo, Controller)
23637=Navigator:AxisFilter:getAnother()
23638=Navigator:getPath(NodeInfo)
23639=Navigator:alphaKey(int)
23640=Navigator:getNumberSimple(NodeInfo)
23641=Navigator:isWhite(CharSequence)
23642=Navigator:getNumberMulti(NodeInfo, Pattern, Pattern, Controller)
23643=Navigator:copy(NodeInfo, Receiver, NamePool, int, boolean)
23644=Navigator:getAttributeValue(NodeInfo, String, String)
23645=Test:main(String[])
23646=MagicLiteral:source()
23647=MagicLiteral:MagicLiteral(int, int)
23648=MagicLiteral:isValidJavaStatement()
23649=A:foo()
23650=A:A()
23651=StatementRecoveryTest_1_5:test0004()
23652=StatementRecoveryTest_1_5:test0002()
23653=StatementRecoveryTest_1_5:test0008()
23654=StatementRecoveryTest_1_5:checkParse(char[], String, String, String, String, String, String, String)
23655=StatementRecoveryTest_1_5:test0006()
23656=StatementRecoveryTest_1_5:StatementRecoveryTest_1_5(String)
23657=StatementRecoveryTest_1_5:getCompilerOptions()
23658=StatementRecoveryTest_1_5:test0001()
23659=StatementRecoveryTest_1_5:suite()
23660=StatementRecoveryTest_1_5:test0005()
23661=StatementRecoveryTest_1_5:test0003()
23662=StatementRecoveryTest_1_5:test0007()
23663=AbortCompilationUnit:AbortCompilationUnit(CompilationResult, IProblem)
23664=TrueLiteral:literalType(BlockScope)
23665=TrueLiteral:generateCode(BlockScope, CodeStream, boolean)
23666=TrueLiteral:traverse(ASTVisitor, BlockScope)
23667=TrueLiteral:computeConstant()
23668=TrueLiteral:generateOptimizedBoolean(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
23669=TrueLiteral:TrueLiteral(int, int)
23670=TrueLiteral:source()
23671=A:testMethod()
23672=BaseProcessingEnvImpl:getFactory()
23673=BaseProcessingEnvImpl:getFiler()
23674=BaseProcessingEnvImpl:getLookupEnvironment()
23675=BaseProcessingEnvImpl:getNewUnits()
23676=BaseProcessingEnvImpl:getMessager()
23677=BaseProcessingEnvImpl:setErrorRaised(boolean)
23678=BaseProcessingEnvImpl:getOptions()
23679=BaseProcessingEnvImpl:getCompiler()
23680=BaseProcessingEnvImpl:getDeletedUnits()
23681=BaseProcessingEnvImpl:BaseProcessingEnvImpl()
23682=BaseProcessingEnvImpl:getNewClassFiles()
23683=BaseProcessingEnvImpl:addNewUnit(ICompilationUnit)
23684=BaseProcessingEnvImpl:getTypeUtils()
23685=BaseProcessingEnvImpl:reset()
23686=BaseProcessingEnvImpl:errorRaised()
23687=BaseProcessingEnvImpl:addNewClassFile(ReferenceBinding)
23688=BaseProcessingEnvImpl:getElementUtils()
23689=BaseProcessingEnvImpl:getSourceVersion()
23690=MethodReferenceMatch:isSuperInvocation()
23691=MethodReferenceMatch:MethodReferenceMatch(IJavaElement, int, int, int, boolean, SearchParticipant, IResource)
23692=MethodReferenceMatch:isConstructor()
23693=MethodReferenceMatch:MethodReferenceMatch(IJavaElement, int, int, int, boolean, boolean, boolean, SearchParticipant, IResource)
23694=MethodReferenceMatch:isSynthetic()
23695=MethodReferenceMatch:MethodReferenceMatch(IJavaElement, int, int, int, boolean, boolean, boolean, boolean, SearchParticipant, IResource)
23696=Test:m()
23697=ResolveLocalClass3:foo()
23698=H:methodIAString(int)
23699=H:staticMethod()
23700=H:staticMethod(int)
23701=Negative6:method1(M16)
23702=Negative6:method2(int)
23703=Negative6:Negative6(M43)
23704=Negative6:method3(String, String)
23705=HierarchyScope:encloses(String)
23706=HierarchyScope:enclosingProjectsAndJars()
23707=HierarchyScope:encloses(IJavaElement)
23708=HierarchyScope:HierarchyScope(IJavaProject, IType, WorkingCopyOwner, boolean, boolean, boolean)
23709=HierarchyScope:enclosesType(IType, boolean)
23710=HierarchyScope:computeDependents(IJavaProject, HashSet, HashSet)
23711=HierarchyScope:buildResourceVector()
23712=HierarchyScope:processDelta(IJavaElementDelta, int)
23713=HierarchyScope:initialize(IProgressMonitor)
23714=HierarchyScope:HierarchyScope(IType, WorkingCopyOwner)
23715=HierarchyScope:add(IResource)
23716=HierarchyScope:enclosesFineGrained(IJavaElement)
23717=HierarchyScope:refresh()
23718=HierarchyScope:encloses(String, IProgressMonitor)
23719=HierarchyScope:toString()
23720=HierarchyScope:computeProjectsAndJars(IType)
23721=HierarchyScope:refresh(IProgressMonitor)
23722=HierarchyScope:encloses(IJavaElement, IProgressMonitor)
23723=HierarchyScope:initialize()
23724=TestGenericChild:TestGenericChild(int, TestPoint)
23725=JavadocTestOptions:testMissingCommentsErrorPublicOverriding()
23726=JavadocTestOptions:testMissingTagsWithInvalidTagsOption()
23727=JavadocTestOptions:testInvalidTagsDeprecatedRefMethodErrorTagsProtected()
23728=JavadocTestOptions:errorsForInvalidTagsClassOrField(int)
23729=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefMethodErrorTagsPublic()
23730=JavadocTestOptions:testInvalidTagsClassDefaults()
23731=JavadocTestOptions:resultForMissingTags(int)
23732=JavadocTestOptions:testInvalidTagsDeprecatedRefConstructorErrorTagsProtected()
23733=JavadocTestOptions:testInvalidTagsFieldErrorTagsPublic()
23734=JavadocTestOptions:testMissingTagsErrorProtectedOverriding()
23735=JavadocTestOptions:testInvalidTagsFieldErrorTagsProtected()
23736=JavadocTestOptions:testInvalidTagsFieldErrorNotags()
23737=JavadocTestOptions:testMissingCommentsDefaults()
23738=JavadocTestOptions:testInvalidTagsMethodErrorTagsPublic()
23739=JavadocTestOptions:testMissingCommentsJavadocSupportDisabled()
23740=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefClassErrorTagsPackage()
23741=JavadocTestOptions:testInvalidTagsNotVisibleRefMethodErrorTagsProtected()
23742=JavadocTestOptions:testMissingTagsErrorPackage()
23743=JavadocTestOptions:testInvalidTagsConstructorErrorNotags()
23744=JavadocTestOptions:testMissingCommentsErrorProtectedOverriding()
23745=JavadocTestOptions:testInvalidTagsMethodDefaults()
23746=JavadocTestOptions:testInvalidTagsDeprecatedRefConstructorErrorTagsPackage()
23747=JavadocTestOptions:testInvalidTagsNotVisibleRefClassErrorTagsPackage()
23748=JavadocTestOptions:resultForInvalidTagsClassOrField(int)
23749=JavadocTestOptions:testInvalidTagsNotVisibleRefFieldErrorTagsPrivate()
23750=JavadocTestOptions:testMissingCommentsErrorPrivateOverriding()
23751=JavadocTestOptions:testMissingTagsErrorPrivate()
23752=JavadocTestOptions:testInvalidTagsDeprecatedRefClassErrorTagsPublic()
23753=JavadocTestOptions:testInvalidTagsDeprecatedRefMethodErrorTagsPublic()
23754=JavadocTestOptions:testInvalidTagsNotVisibleRefConstructorErrorTagsPrivate()
23755=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefClassErrorTagsPrivate()
23756=JavadocTestOptions:testInvalidTagsNotVisibleRefMethodErrorTagsPrivate()
23757=JavadocTestOptions:testMissingTagsErrorPublicOverriding()
23758=JavadocTestOptions:testInvalidTagsMethodErrorTagsProtected()
23759=JavadocTestOptions:testInvalidTagsDeprecatedRefClassErrorTagsProtected()
23760=JavadocTestOptions:testInvalidTagsConstructorNoSupport()
23761=JavadocTestOptions:testMissingTagsErrorProtected()
23762=JavadocTestOptions:testInvalidTagsClassErrorTagsPackage()
23763=JavadocTestOptions:testInvalidTagsFieldErrorTagsPackage()
23764=JavadocTestOptions:testInvalidTagsMethodErrorTagsPrivate()
23765=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefFieldErrorTagsPublic()
23766=JavadocTestOptions:testMissingCommentsErrorPackageOverriding()
23767=JavadocTestOptions:testInvalidTagsConstructorErrorTagsPublic()
23768=JavadocTestOptions:javadocTestClass()
23769=JavadocTestOptions:testInvalidTagsFieldNoSupport()
23770=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefFieldErrorTagsPackage()
23771=JavadocTestOptions:testInvalidTagsClassErrorTagsProtected()
23772=JavadocTestOptions:testInvalidTagsNotVisibleRefFieldErrorTagsPublic()
23773=JavadocTestOptions:testInvalidTagsMethodErrorNotags()
23774=JavadocTestOptions:testInvalidTagsNotVisibleRefClassErrorTagsProtected()
23775=JavadocTestOptions:testInvalidTagsNotVisibleRefMethodErrorTagsPublic()
23776=JavadocTestOptions:testInvalidTagsClassErrorTagsPublic()
23777=JavadocTestOptions:testInvalidTagsNotVisibleRefConstructorErrorTagsProtected()
23778=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefMethodErrorTagsPrivate()
23779=JavadocTestOptions:testInvalidTagsDeprecatedRefMethodErrorTagsPackage()
23780=JavadocTestOptions:testInvalidTagsDeprecatedRefMethodErrorTagsPrivate()
23781=JavadocTestOptions:testInvalidTagsNotVisibleRefClassErrorTagsPublic()
23782=JavadocTestOptions:testInvalidTagsClassNoSupport()
23783=JavadocTestOptions:testInvalidTagsConstructorErrorTagsPrivate()
23784=JavadocTestOptions:testInvalidTagsClassErrorNotags()
23785=JavadocTestOptions:testMissingCommentsErrorPrivate()
23786=JavadocTestOptions:testInvalidTagsConstructorErrorTagsPackage()
23787=JavadocTestOptions:testInvalidTagsDeprecatedRefClassErrorTagsPackage()
23788=JavadocTestOptions:testInvalidTagsDeprecatedRefFieldErrorTagsPackage()
23789=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefConstructorErrorTagsPackage()
23790=JavadocTestOptions:testMissingCommentsErrorPackage()
23791=JavadocTestOptions:testMissingTagsJavadocSupportDisabled()
23792=JavadocTestOptions:testInvalidTagsNotVisibleRefFieldErrorTagsProtected()
23793=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefConstructorErrorTagsPrivate()
23794=JavadocTestOptions:testInvalidTagsDeprecatedRefClassErrorTagsPrivate()
23795=JavadocTestOptions:testInvalidTagsDeprecatedRefFieldErrorTagsPrivate()
23796=JavadocTestOptions:testInvalidTagsConstructorErrorTagsProtected()
23797=JavadocTestOptions:testMissingTagsErrorPublic()
23798=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefConstructorErrorTagsProtected()
23799=JavadocTestOptions:checkCompilerLog(String[], Requestor, String[], Throwable)
23800=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefMethodErrorTagsProtected()
23801=JavadocTestOptions:JavadocTestOptions(String)
23802=JavadocTestOptions:testInvalidTagsConstructorWithMissingTagsOption()
23803=JavadocTestOptions:testInvalidTagsJavadocSupportDisabled()
23804=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefClassErrorTagsProtected()
23805=JavadocTestOptions:testInvalidTagsClassWithMissingTagsOption()
23806=JavadocTestOptions:errorsForInvalidTagsMethodOrConstructor(int)
23807=JavadocTestOptions:testInvalidTagsNotVisibleRefFieldErrorTagsPackage()
23808=JavadocTestOptions:testInvalidTagsFieldDefaults()
23809=JavadocTestOptions:testInvalidTagsNotVisibleRefClassErrorTagsPrivate()
23810=JavadocTestOptions:testInvalidTagsDeprecatedRefConstructorErrorTagsPrivate()
23811=JavadocTestOptions:testMissingTagsDefaults()
23812=JavadocTestOptions:testInvalidTagsFieldWithMissingTagsOption()
23813=JavadocTestOptions:testInvalidTagsNotVisibleRefMethodErrorTagsPackage()
23814=JavadocTestOptions:testInvalidTagsNotVisibleRefConstructorErrorTagsPackage()
23815=JavadocTestOptions:testMissingCommentsErrorProtected()
23816=JavadocTestOptions:testInvalidTagsDeprecatedRefFieldErrorTagsProtected()
23817=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefFieldErrorTagsPrivate()
23818=JavadocTestOptions:testInvalidTagsDeprecatedRefFieldErrorTagsPublic()
23819=JavadocTestOptions:setUp()
23820=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefClassErrorTagsPublic()
23821=JavadocTestOptions:testMissingCommentsErrorPublic()
23822=JavadocTestOptions:runErrorsTest(String[], int, boolean)
23823=JavadocTestOptions:testInvalidTagsFieldErrorTagsPrivate()
23824=JavadocTestOptions:testInvalidTagsClassErrorTagsPrivate()
23825=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefConstructorErrorTagsPublic()
23826=JavadocTestOptions:testMissingTagsErrorPackageOverriding()
23827=JavadocTestOptions:testInvalidTagsNotVisibleRefConstructorErrorTagsPublic()
23828=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefFieldErrorTagsProtected()
23829=JavadocTestOptions:testInvalidTagsMethodErrorTagsPackage()
23830=JavadocTestOptions:testInvalidTagsDeprecatedRefConstructorErrorTagsPublic()
23831=JavadocTestOptions:resultForInvalidTagsMethodOrConstructor(int)
23832=JavadocTestOptions:testMissingTagsErrorPrivateOverriding()
23833=JavadocTestOptions:testInvalidTagsMethodWithMissingTagsOption()
23834=JavadocTestOptions:resultForMissingComments(int)
23835=JavadocTestOptions:testInvalidTagsMethodNoSupport()
23836=JavadocTestOptions:getCompilerOptions()
23837=JavadocTestOptions:suite()
23838=JavadocTestOptions:testInvalidTagsDeprecatedAndNotVisibleRefMethodErrorTagsPackage()
23839=JavadocTestOptions:testInvalidTagsConstructorDefaults()
23840=FormatterJavadocDontIndentTagsDescriptionTests:suite()
23841=FormatterJavadocDontIndentTagsDescriptionTests:FormatterJavadocDontIndentTagsDescriptionTests(String)
23842=FormatterJavadocDontIndentTagsDescriptionTests:setUp()
23843=FormatterJavadocDontIndentTagsDescriptionTests:getOutputFolder()
23844=FormatterJavadocDontIndentTagsDescriptionTests:codeFormatter()
23845=X:bar(List<? extends X<?, ?>>)
23846=X:foo()
23847=IJavaModelStatus:getElements()
23848=IJavaModelStatus:getString()
23849=IJavaModelStatus:isDoesNotExist()
23850=IJavaModelStatus:getPath()
23851=IBinaryAnnotation:getTypeName()
23852=IBinaryAnnotation:getElementValuePairs()
23853=TestGeneric:TestGeneric(K)
23854=DirectoryComparator:compare()
23855=CorrectException2:foo()
23856=Messages:load(String, ClassLoader, Field[])
23857=Messages:MessagesProperties:MessagesProperties(Field[], String)
23858=Messages:bind(String, Object)
23859=Messages:MessagesProperties:put(Object, Object)
23860=Messages:buildVariants(String)
23861=Messages:bind(String, Object, Object)
23862=Messages:initializeMessages(String, Class)
23863=Messages:bind(String, Object[])
23864=Messages:Messages()
23865=Messages:bind(String)
23866=Test:doSomeStuff()
23867=RangeUtil:RangeResult:addInterval(int, int, int)
23868=RangeUtil:RangeResult:RangeResult()
23869=RangeUtil:RangeResult:compare(int, int)
23870=RangeUtil:containsErrorInSignature(AbstractMethodDeclaration)
23871=RangeUtil:RangeResult:addInterval(int, int)
23872=RangeUtil:computeDietRange(TypeDeclaration[])
23873=RangeUtil:computeDietRange0(TypeDeclaration[], RangeResult)
23874=RangeUtil:containsIgnoredBody(AbstractMethodDeclaration)
23875=RangeUtil:RangeResult:quickSort(int[], int[], int[], int, int)
23876=RangeUtil:RangeResult:getRanges()
23877=PostfixExpression:traverse(ASTVisitor, BlockScope)
23878=PostfixExpression:printExpressionNoParenthesis(int, StringBuffer)
23879=PostfixExpression:generateCode(BlockScope, CodeStream, boolean)
23880=PostfixExpression:PostfixExpression(Expression, Expression, int, int)
23881=PostfixExpression:operatorToString()
23882=PostfixExpression:restrainUsageToNumericTypes()
23883=JobManager:notifyIdle(long)
23884=JobManager:processName()
23885=JobManager:awaitingJobsCount()
23886=JobManager:performConcurrentJob(IJob, int, IProgressMonitor)
23887=JobManager:run()
23888=JobManager:reset()
23889=JobManager:toString()
23890=JobManager:shutdown()
23891=JobManager:disable()
23892=JobManager:discardJobs(String)
23893=JobManager:moveToNextJob()
23894=JobManager:request(IJob)
23895=JobManager:currentJob()
23896=JobManager:isJobWaiting(IJob)
23897=JobManager:activateProcessing()
23898=JobManager:enable()
23899=A:methodThrows2()
23900=A:methodIAString(int)
23901=A:methodThrows1()
23902=Test:main(String[])
23903=X:foo()
23904=X:X(String)
23905=Test:c()
23906=X:caller()
23907=A:foo()
23908=X:method(Map<String, String>)
23909=X02:foo(int, int)
23910=TestBuffer:setContents(char[])
23911=TestBuffer:replace(int, int, char[])
23912=TestBuffer:append(String)
23913=TestBuffer:isReadOnly()
23914=TestBuffer:removeBufferChangedListener(IBufferChangedListener)
23915=TestBuffer:getContents()
23916=TestBuffer:isClosed()
23917=TestBuffer:getCharacters()
23918=TestBuffer:addBufferChangedListener(IBufferChangedListener)
23919=TestBuffer:TestBuffer(IOpenable)
23920=TestBuffer:close()
23921=TestBuffer:save(IProgressMonitor, boolean)
23922=TestBuffer:replace(int, int, String)
23923=TestBuffer:notifyListeners()
23924=TestBuffer:getOwner()
23925=TestBuffer:append(char[])
23926=TestBuffer:getChar(int)
23927=TestBuffer:hasUnsavedChanges()
23928=TestBuffer:getUnderlyingResource()
23929=TestBuffer:setContents(String)
23930=TestBuffer:getText(int, int)
23931=TestBuffer:getLength()
23932=DoubleCache:DoubleCache()
23933=DoubleCache:containsKey(double)
23934=DoubleCache:toString()
23935=DoubleCache:get(double)
23936=DoubleCache:clear()
23937=DoubleCache:DoubleCache(int)
23938=DoubleCache:put(double, int)
23939=X03:test()
23940=X:foo()
23941=Test:foo(int)
23942=Test:foo()
23943=X01:foo()
23944=Example:bar()
23945=Example:foo()
23946=Example:foo2()
23947=AssistOptions:AssistOptions()
23948=AssistOptions:AssistOptions(Map)
23949=TypeSystem:isAnnotatedTypeSystem()
23950=TypeSystem:getArrayType(TypeBinding, int)
23951=TypeSystem:getAnnotatedType(TypeBinding, AnnotationBinding[][])
23952=TypeSystem:getAnnotationType(ReferenceBinding, boolean)
23953=TypeSystem:cacheDerivedType(TypeBinding, TypeBinding)
23954=TypeSystem:reset()
23955=TypeSystem:HashedParameterizedTypes:put(ReferenceBinding, TypeBinding[], ReferenceBinding, ParameterizedTypeBinding)
23956=TypeSystem:getCapturedWildcard(WildcardBinding, ReferenceBinding, int, int, ASTNode, int)
23957=TypeSystem:getAnnotatedTypes(TypeBinding)
23958=TypeSystem:fixTypeVariableDeclaringElement(TypeVariableBinding, Binding)
23959=TypeSystem:getParameterizedType(ReferenceBinding, TypeBinding[], ReferenceBinding)
23960=TypeSystem:getUnannotatedType(TypeBinding)
23961=TypeSystem:TypeSystem(LookupEnvironment)
23962=TypeSystem:getWildcard(ReferenceBinding, int, TypeBinding, TypeBinding[], int)
23963=TypeSystem:getWildcard(ReferenceBinding, int, TypeBinding, TypeBinding[], int, AnnotationBinding[])
23964=TypeSystem:cacheDerivedType(TypeBinding, TypeBinding, TypeBinding)
23965=TypeSystem:getDerivedTypes(TypeBinding)
23966=TypeSystem:getIntersectionType18(ReferenceBinding[])
23967=TypeSystem:getArrayType(TypeBinding, int, AnnotationBinding[])
23968=TypeSystem:getMemberType(ReferenceBinding, ReferenceBinding)
23969=TypeSystem:updateCaches(UnresolvedReferenceBinding, ReferenceBinding)
23970=TypeSystem:getRawType(ReferenceBinding, ReferenceBinding)
23971=TypeSystem:getRawType(ReferenceBinding, ReferenceBinding, AnnotationBinding[])
23972=TypeSystem:forceRegisterAsDerived(TypeBinding)
23973=TypeSystem:getParameterizedType(ReferenceBinding, TypeBinding[], ReferenceBinding, AnnotationBinding[])
23974=TypeSystem:HashedParameterizedTypes:get(ReferenceBinding, TypeBinding[], ReferenceBinding, AnnotationBinding[])
23975=CompletionMethodDeclaration9:foo()
23976=ReferenceTypeCompletionTest:testInterfaceMemberDeclarations()
23977=ReferenceTypeCompletionTest:testSwitchBlockStatement()
23978=ReferenceTypeCompletionTest:testFieldDeclarationWithoutModifiers()
23979=ReferenceTypeCompletionTest:testConstructorBody()
23980=ReferenceTypeCompletionTest:testQualifiedTypeReferenceShrinkOne()
23981=ReferenceTypeCompletionTest:testInterfaceBody()
23982=ReferenceTypeCompletionTest:testThrows()
23983=ReferenceTypeCompletionTest:testClassInstanceCreationExpressionPrimary4()
23984=ReferenceTypeCompletionTest:testInstanceOf()
23985=ReferenceTypeCompletionTest:suite()
23986=ReferenceTypeCompletionTest:testImplements()
23987=ReferenceTypeCompletionTest:testClassInstanceCreationExpressionPrimary2()
23988=ReferenceTypeCompletionTest:testClassInstanceCreationExpression2()
23989=ReferenceTypeCompletionTest:testMethodHeaderWithoutModifiers()
23990=ReferenceTypeCompletionTest:testMethodHeaderWithModifiers()
23991=ReferenceTypeCompletionTest:testBlockStatements()
23992=ReferenceTypeCompletionTest:testClassInstanceCreationExpression4()
23993=ReferenceTypeCompletionTest:testQualifiedTypeReferenceShrinkAll()
23994=ReferenceTypeCompletionTest:testCatchClause3()
23995=ReferenceTypeCompletionTest:testQualifiedTypeReferenceShrinkAllButOne()
23996=ReferenceTypeCompletionTest:testClassInstanceCreationExpressionName3()
23997=ReferenceTypeCompletionTest:testCatchClause1()
23998=ReferenceTypeCompletionTest:testQualifiedTypeReferenceShrinkNone()
23999=ReferenceTypeCompletionTest:testFormalParameter()
24000=ReferenceTypeCompletionTest:testConstructorDeclarator()
24001=ReferenceTypeCompletionTest:testClassInstanceCreationExpressionName1()
24002=ReferenceTypeCompletionTest:testClassInstanceCreationExpressionPrimary3()
24003=ReferenceTypeCompletionTest:testMethodDeclarator()
24004=ReferenceTypeCompletionTest:testLocalVariableDeclaration()
24005=ReferenceTypeCompletionTest:testClassInstanceCreationExpressionPrimary1()
24006=ReferenceTypeCompletionTest:testDeepReference()
24007=ReferenceTypeCompletionTest:testExtendsInterface()
24008=ReferenceTypeCompletionTest:testMethodBody()
24009=ReferenceTypeCompletionTest:testClassInstanceCreationExpression3()
24010=ReferenceTypeCompletionTest:testForStatement()
24011=ReferenceTypeCompletionTest:testClassBody()
24012=ReferenceTypeCompletionTest:testExtendsClass()
24013=ReferenceTypeCompletionTest:testInterfaceTypeList()
24014=ReferenceTypeCompletionTest:testFormalParameterList()
24015=ReferenceTypeCompletionTest:test1FTZCIG()
24016=ReferenceTypeCompletionTest:testClassTypeList()
24017=ReferenceTypeCompletionTest:testClassInstanceCreationExpressionName2()
24018=ReferenceTypeCompletionTest:testBlock()
24019=ReferenceTypeCompletionTest:ReferenceTypeCompletionTest(String)
24020=ReferenceTypeCompletionTest:testClassBodyDeclarations()
24021=ReferenceTypeCompletionTest:testClassInstanceCreationExpressionName4()
24022=ReferenceTypeCompletionTest:testClassInstanceCreationExpression1()
24023=ReferenceTypeCompletionTest:testCatchClause2()
24024=ReferenceTypeCompletionTest:testFieldDeclarationWithModifiers()
24025=EmptyStatement:subtreeMatch0(ASTMatcher, Object)
24026=EmptyStatement:propertyDescriptors(int)
24027=EmptyStatement:treeSize()
24028=EmptyStatement:internalStructuralPropertiesForType(int)
24029=EmptyStatement:clone0(AST)
24030=EmptyStatement:accept0(ASTVisitor)
24031=EmptyStatement:getNodeType0()
24032=EmptyStatement:EmptyStatement(AST)
24033=A:foo()
24034=JavaBuilder:writeState(Object, DataOutputStream)
24035=JavaBuilder:getRequiredProjects(boolean)
24036=JavaBuilder:readState(IProject, DataInputStream)
24037=JavaBuilder:toString()
24038=JavaBuilder:hasJavaBuilder(IProject)
24039=JavaBuilder:clearLastState()
24040=JavaBuilder:removeTasksFor(IResource)
24041=JavaBuilder:hasStructuralDelta()
24042=JavaBuilder:createInconsistentBuildMarker(CoreException)
24043=JavaBuilder:mustPropagateStructuralChanges()
24044=JavaBuilder:removeProblemsAndTasksFor(IResource)
24045=JavaBuilder:cleanup()
24046=JavaBuilder:initializeBuilder(int, boolean)
24047=JavaBuilder:buildDeltas(SimpleLookupTable)
24048=JavaBuilder:buildStarting()
24049=JavaBuilder:hasBuildpathErrors()
24050=JavaBuilder:clean(IProgressMonitor)
24051=JavaBuilder:getLastState(IProject)
24052=JavaBuilder:build(int, Map, IProgressMonitor)
24053=JavaBuilder:buildAll()
24054=JavaBuilder:printLocations(ClasspathLocation[], ClasspathLocation[])
24055=JavaBuilder:recordNewState(State)
24056=JavaBuilder:findDeltas()
24057=JavaBuilder:isClasspathBroken(JavaProject, boolean)
24058=JavaBuilder:buildFinished()
24059=JavaBuilder:hasClasspathChanged()
24060=JavaBuilder:getProblemsFor(IResource)
24061=JavaBuilder:removeProblemsFor(IResource)
24062=JavaBuilder:isWorthBuilding()
24063=JavaBuilder:getTasksFor(IResource)
24064=JavaBuilder:filterExtraResource(IResource)
24065=IBinaryElementValuePair:getName()
24066=IBinaryElementValuePair:getValue()
24067=MessagerTests:internalTestMessager(JavaCompiler, DiagnosticListener<? super JavaFileObject>)
24068=MessagerTests:DiagnosticReport:toString()
24069=MessagerTests:DiagnosticReport:DiagnosticReport()
24070=MessagerTests:tearDown()
24071=MessagerTests:testMessagerWithSystemCompiler()
24072=MessagerTests:setUp()
24073=MessagerTests:testMessagerWithEclipseCompiler()
24074=MessagerTests:DiagnosticReport:getErrorAt(int)
24075=MessagerTests:DiagnosticReport:report(Diagnostic<? extends S>)
24076=SelectionParserTest18:suite()
24077=SelectionParserTest18:test424110a()
24078=SelectionParserTest18:test476693()
24079=SelectionParserTest18:test424110()
24080=SelectionParserTest18:SelectionParserTest18(String)
24081=SelectionParserTest18:test430572()
24082=SelectionParserTest18:test495912()
24083=X:foo(X<?>)
24084=IVerificationTypeInfo:getConstantPoolIndex()
24085=IVerificationTypeInfo:getTag()
24086=IVerificationTypeInfo:getOffset()
24087=IVerificationTypeInfo:getClassTypeName()
24088=KeyToSignature:consumeParameterizedGenericMethod()
24089=KeyToSignature:newParser()
24090=KeyToSignature:consumeLocalType(char[])
24091=KeyToSignature:KeyToSignature(BindingKeyParser)
24092=KeyToSignature:consumeTypeWithCapture()
24093=KeyToSignature:consumeException()
24094=KeyToSignature:getThrownExceptions()
24095=KeyToSignature:consumeWildCard(int)
24096=KeyToSignature:consumeField(char[])
24097=KeyToSignature:KeyToSignature(String, int)
24098=KeyToSignature:KeyToSignature(String, int, boolean)
24099=KeyToSignature:consumeSecondaryType(char[])
24100=KeyToSignature:consumeParameterizedType(char[], boolean)
24101=KeyToSignature:consumeBaseType(char[])
24102=KeyToSignature:consumeFullyQualifiedName(char[])
24103=KeyToSignature:consumePackage(char[])
24104=KeyToSignature:consumeMethod(char[], char[])
24105=KeyToSignature:consumeType()
24106=KeyToSignature:consumeCapture(int)
24107=KeyToSignature:toString()
24108=KeyToSignature:consumeCapture18ID(int, int)
24109=KeyToSignature:consumeTypeVariable(char[], char[])
24110=KeyToSignature:consumeParser(BindingKeyParser)
24111=KeyToSignature:getTypeArguments()
24112=KeyToSignature:substitute(char[], char[][], int)
24113=KeyToSignature:consumeArrayDimension(char[])
24114=KeyToSignature:consumeMemberType(char[])
24115=KeyToSignature:consumeTypeParameter(char[])
24116=A:foo()
24117=ReferenceMatch:getLocalElement()
24118=ReferenceMatch:ReferenceMatch(IJavaElement, int, int, int, boolean, SearchParticipant, IResource)
24119=ReferenceMatch:setLocalElement(IJavaElement)
24120=Wildcard:printExpression(int, StringBuffer)
24121=Wildcard:internalResolveType(Scope, ReferenceBinding, int)
24122=Wildcard:resolveTypeArgument(BlockScope, ReferenceBinding, int)
24123=Wildcard:resolveTypeArgument(ClassScope, ReferenceBinding, int)
24124=Wildcard:getTypeName()
24125=Wildcard:traverse(ASTVisitor, BlockScope)
24126=Wildcard:traverse(ASTVisitor, ClassScope)
24127=Wildcard:getParameterizedTypeName()
24128=Wildcard:Wildcard(int)
24129=JavaProject:computeExpandedClasspath(ClasspathEntry, HashSet, ObjectVector)
24130=JavaProject:flushClasspathProblemMarkers(boolean, boolean, boolean)
24131=JavaProject:findType(String, WorkingCopyOwner)
24132=JavaProject:setProject(IProject)
24133=JavaProject:newTypeHierarchy(IType, IRegion, IProgressMonitor)
24134=JavaProject:getAllPackageFragmentRoots(Map)
24135=JavaProject:resolveClasspath(IClasspathEntry[], boolean, boolean)
24136=JavaProject:getCycleMarker()
24137=JavaProject:hasUTF8BOM(byte[])
24138=JavaProject:findPackageFragment(IPath)
24139=JavaProject:getPackageFragmentRoot(String)
24140=JavaProject:hasBuildState()
24141=JavaProject:resource(PackageFragmentRoot)
24142=JavaProject:newEvaluationContext()
24143=JavaProject:setJavaCommand(IProjectDescription, ICommand)
24144=JavaProject:getJavaProjectElementInfo()
24145=JavaProject:findType(String, String, IProgressMonitor)
24146=JavaProject:getAllPackageFragmentRoots()
24147=JavaProject:readFileEntriesWithException(Map)
24148=JavaProject:findPackageFragmentRoot0(IPath)
24149=JavaProject:breakpoint(int, JavaProject)
24150=JavaProject:getPackageFragmentsInRoots(IPackageFragmentRoot[])
24151=JavaProject:computeSharedPropertyFileName(QualifiedName)
24152=JavaProject:setRawClasspath(IClasspathEntry[], IClasspathEntry[], IPath, boolean, IProgressMonitor)
24153=JavaProject:getAccessRestrictions(String)
24154=JavaProject:validateCycles(Map)
24155=JavaProject:getPluginWorkingLocation()
24156=JavaProject:newNameLookup(WorkingCopyOwner)
24157=JavaProject:verbose_reentering_classpath_resolution()
24158=JavaProject:findPackageFragmentRoots(IClasspathEntry)
24159=JavaProject:setOutputLocation(IPath, IProgressMonitor)
24160=JavaProject:getBPListeners()
24161=JavaProject:newNameLookup(ICompilationUnit[])
24162=JavaProject:findPackageFragment0(IPath)
24163=JavaProject:getRawClasspath()
24164=JavaProject:getExpandedClasspath()
24165=JavaProject:getResolvedClasspath()
24166=JavaProject:computePackageFragmentRoots(IClasspathEntry, ObjectVector, HashSet, IClasspathEntry, boolean, Map)
24167=JavaProject:getJavaCommandIndex(ICommand[])
24168=JavaProject:computePackageFragmentRoots(IClasspathEntry[], boolean, Map)
24169=JavaProject:getPackageFragmentRoots(IClasspathEntry)
24170=JavaProject:findElement(String, WorkingCopyOwner)
24171=JavaProject:getProjectCache()
24172=JavaProject:getSourceMapper()
24173=JavaProject:writeFileEntries(IClasspathEntry[], IClasspathEntry[], IPath)
24174=JavaProject:deconfigure()
24175=JavaProject:setSharedProperty(String, String)
24176=JavaProject:readOutputLocation()
24177=JavaProject:isOnClasspathEntry(IPath, boolean, boolean, IClasspathEntry)
24178=JavaProject:getHandleFromMemento(String, MementoTokenizer, WorkingCopyOwner)
24179=JavaProject:getClasspathEntryFor(IPath)
24180=JavaProject:getPackageFragments()
24181=JavaProject:removeFromBuildSpec(String)
24182=JavaProject:decodeClasspathEntry(String)
24183=JavaProject:hasJavaNature(IProject)
24184=JavaProject:getProject()
24185=JavaProject:getPackageFragmentRoot(IPath)
24186=JavaProject:setOptions(Map<String, String>)
24187=JavaProject:updatePreferences(IEclipsePreferences)
24188=JavaProject:getPackageFragmentRoot(IResource)
24189=JavaProject:hasCycleMarker()
24190=JavaProject:areClasspathsEqual(IClasspathEntry[], IClasspathEntry[], IPath, IPath)
24191=JavaProject:projectPrerequisites(IClasspathEntry[])
24192=JavaProject:findType(String, NameLookup, boolean, IProgressMonitor)
24193=JavaProject:computePackageFragmentRoots(IClasspathEntry[], ObjectVector, HashSet, IClasspathEntry, boolean, Map)
24194=JavaProject:resetCaches()
24195=JavaProject:getHandleMementoDelimiter()
24196=JavaProject:encodeClasspath(IClasspathEntry[], IClasspathEntry[], IPath, boolean, Map)
24197=JavaProject:computePackageFragmentRoots(IClasspathEntry)
24198=JavaProject:hashCode()
24199=JavaProject:findPackageFragment(String)
24200=JavaProject:getOptions(boolean)
24201=JavaProject:findType(String, WorkingCopyOwner, IProgressMonitor)
24202=JavaProject:newTypeHierarchy(IRegion, IProgressMonitor)
24203=JavaProject:newTemporaryInfo()
24204=JavaProject:getPerProjectInfo()
24205=JavaProject:loadPreferences()
24206=JavaProject:findType(String, String, WorkingCopyOwner, IProgressMonitor)
24207=JavaProject:newSearchableNameEnvironment(WorkingCopyOwner)
24208=JavaProject:equals(Object)
24209=JavaProject:getOption(String, boolean)
24210=JavaProject:setRawClasspath(IClasspathEntry[], IClasspathEntry[], IPath, IProgressMonitor)
24211=JavaProject:isOnClasspath(IJavaElement)
24212=JavaProject:encodeClasspathEntry(IClasspathEntry)
24213=JavaProject:createElementInfo()
24214=JavaProject:resetResolvedClasspath()
24215=JavaProject:resolveClasspath(IClasspathEntry[], IClasspathEntry[], boolean, boolean)
24216=JavaProject:resolveClasspath(PerProjectInfo, boolean, boolean)
24217=JavaProject:findElement(IPath, WorkingCopyOwner)
24218=JavaProject:getPath()
24219=JavaProject:newSearchableNameEnvironment(ICompilationUnit[])
24220=JavaProject:getElementType()
24221=JavaProject:findElement(IPath)
24222=JavaProject:getReferencedClasspathEntries()
24223=JavaProject:getPackageFragmentRoot(IResource, IPath)
24224=JavaProject:findType(String, IProgressMonitor)
24225=JavaProject:copyFromOldChainedEntry(ClasspathEntry, ClasspathEntry)
24226=JavaProject:setRawClasspath(IClasspathEntry[], IPath, IProgressMonitor)
24227=JavaProject:writeFileEntries(IClasspathEntry[], IPath)
24228=JavaProject:getPackageFragmentRoots()
24229=JavaProject:driveExists(IPath, Map)
24230=JavaProject:getPackageFragmentRoot0(IPath)
24231=JavaProject:findType(String, String, WorkingCopyOwner)
24232=JavaProject:setRawClasspath(IClasspathEntry[], boolean, IProgressMonitor)
24233=JavaProject:getSharedProperty(String)
24234=JavaProject:addToResult(IClasspathEntry, IClasspathEntry, ResolvedClasspath, LinkedHashSet, ExternalFoldersManager, Map, boolean, Map)
24235=JavaProject:JavaProject(IProject, JavaElement)
24236=JavaProject:defaultClasspath()
24237=JavaProject:hasClasspathCycle(IClasspathEntry[])
24238=JavaProject:isOnClasspath(IResource)
24239=JavaProject:areClasspathsEqual(IClasspathEntry[], IClasspathEntry[])
24240=JavaProject:configure()
24241=JavaProject:newTypeHierarchy(IType, IRegion, WorkingCopyOwner, IProgressMonitor)
24242=JavaProject:addToBuildSpec(String)
24243=JavaProject:rootID()
24244=JavaProject:close()
24245=JavaProject:setOption(String, String)
24246=JavaProject:setRawClasspath(IClasspathEntry[], IProgressMonitor)
24247=JavaProject:readFileEntries(Map)
24248=JavaProject:ClasspathResolutionBreakpointListener:breakpoint(int)
24249=JavaProject:areClasspathsEqual(IClasspathEntry[], IPath, IClasspathEntry[])
24250=JavaProject:getOutputLocation()
24251=JavaProject:resolveClasspath(IClasspathEntry[])
24252=JavaProject:defaultOutputLocation()
24253=JavaProject:getEclipsePreferences()
24254=JavaProject:newTypeHierarchy(IRegion, WorkingCopyOwner, IProgressMonitor)
24255=JavaProject:addCPResolutionBPListener(ClasspathResolutionBreakpointListener)
24256=JavaProject:decodeClasspath(String, Map)
24257=JavaProject:getRequiredProjectNames()
24258=JavaProject:contains(IResource)
24259=JavaProject:getUnderlyingResource()
24260=JavaProject:getElementName()
24261=JavaProject:findType(String, String, NameLookup, boolean, IProgressMonitor)
24262=JavaProject:findType(String, String)
24263=JavaProject:findPackageFragmentRoot(IPath)
24264=JavaProject:findType(String)
24265=JavaProject:removeCPResolutionBPListener(ClasspathResolutionBreakpointListener)
24266=JavaProject:JavaProject()
24267=JavaProject:validateExistence(IResource)
24268=JavaProject:createClasspathProblemMarker(IJavaModelStatus)
24269=JavaProject:getFolderPackageFragmentRoot(IPath)
24270=JavaProject:updateCycleParticipants(ArrayList, LinkedHashSet, IWorkspaceRoot, HashSet, Map)
24271=JavaProject:getNonJavaResources()
24272=JavaProject:buildStructure(OpenableElementInfo, IProgressMonitor, Map, IResource)
24273=JavaProject:setRawClasspath(IClasspathEntry[], IPath, boolean, IProgressMonitor)
24274=JavaProject:getResolvedClasspath(boolean)
24275=JavaProject:readRawClasspath()
24276=JavaProject:hasSource()
24277=JavaProject:canonicalizedPath(IPath)
24278=TM47209:m47209(int)
24279=TM47209:TM47209(String)
24280=NoTypeImpl:getAnnotationsByType(Class<A>)
24281=NoTypeImpl:getAnnotation(Class<A>)
24282=NoTypeImpl:getKind()
24283=NoTypeImpl:NoTypeImpl(TypeKind)
24284=NoTypeImpl:accept(TypeVisitor<R, P>, P)
24285=NoTypeImpl:toString()
24286=NoTypeImpl:getAnnotationMirrors()
24287=IntLiteral:IntLiteral(char[], char[], int, int)
24288=IntLiteral:convertToMinValue()
24289=IntLiteral:generateCode(BlockScope, CodeStream, boolean)
24290=IntLiteral:literalType(BlockScope)
24291=IntLiteral:computeValue(char[], int, int, int)
24292=IntLiteral:IntLiteral(char[], char[], int, int, int, Constant)
24293=IntLiteral:buildIntLiteral(char[], int, int)
24294=IntLiteral:traverse(ASTVisitor, BlockScope)
24295=IntLiteral:computeConstant()
24296=ProblemTypeAndMethodTest:test013()
24297=ProblemTypeAndMethodTest:test059()
24298=ProblemTypeAndMethodTest:test376550_7a()
24299=ProblemTypeAndMethodTest:test122()
24300=ProblemTypeAndMethodTest:test048()
24301=ProblemTypeAndMethodTest:test376550_8b()
24302=ProblemTypeAndMethodTest:test002()
24303=ProblemTypeAndMethodTest:test035()
24304=ProblemTypeAndMethodTest:test100()
24305=ProblemTypeAndMethodTest:test024()
24306=ProblemTypeAndMethodTest:test111()
24307=ProblemTypeAndMethodTest:test015()
24308=ProblemTypeAndMethodTest:test099b()
24309=ProblemTypeAndMethodTest:test004()
24310=ProblemTypeAndMethodTest:test037()
24311=ProblemTypeAndMethodTest:test090()
24312=ProblemTypeAndMethodTest:test124a()
24313=ProblemTypeAndMethodTest:test102()
24314=ProblemTypeAndMethodTest:test026()
24315=ProblemTypeAndMethodTest:test113()
24316=ProblemTypeAndMethodTest:test017()
24317=ProblemTypeAndMethodTest:test070()
24318=ProblemTypeAndMethodTest:test006()
24319=ProblemTypeAndMethodTest:test376550_13()
24320=ProblemTypeAndMethodTest:testClass()
24321=ProblemTypeAndMethodTest:test039()
24322=ProblemTypeAndMethodTest:test376550_9a()
24323=ProblemTypeAndMethodTest:test092()
24324=ProblemTypeAndMethodTest:test378674_comment9()
24325=ProblemTypeAndMethodTest:test104()
24326=ProblemTypeAndMethodTest:test028()
24327=ProblemTypeAndMethodTest:test081()
24328=ProblemTypeAndMethodTest:test115()
24329=ProblemTypeAndMethodTest:test376550_1b()
24330=ProblemTypeAndMethodTest:test019()
24331=ProblemTypeAndMethodTest:test072()
24332=ProblemTypeAndMethodTest:test008()
24333=ProblemTypeAndMethodTest:test061()
24334=ProblemTypeAndMethodTest:test376550_11()
24335=ProblemTypeAndMethodTest:test094()
24336=ProblemTypeAndMethodTest:test106()
24337=ProblemTypeAndMethodTest:test379530()
24338=ProblemTypeAndMethodTest:test378674_comment5a()
24339=ProblemTypeAndMethodTest:test083()
24340=ProblemTypeAndMethodTest:suite()
24341=ProblemTypeAndMethodTest:test051()
24342=ProblemTypeAndMethodTest:test097()
24343=ProblemTypeAndMethodTest:test107()
24344=ProblemTypeAndMethodTest:test040()
24345=ProblemTypeAndMethodTest:test376550_10a()
24346=ProblemTypeAndMethodTest:test086()
24347=ProblemTypeAndMethodTest:test118()
24348=ProblemTypeAndMethodTest:test073()
24349=ProblemTypeAndMethodTest:test376550_1a()
24350=ProblemTypeAndMethodTest:test117a()
24351=ProblemTypeAndMethodTest:testBug335845c()
24352=ProblemTypeAndMethodTest:test009()
24353=ProblemTypeAndMethodTest:test062()
24354=ProblemTypeAndMethodTest:test376550_2b()
24355=ProblemTypeAndMethodTest:test053()
24356=ProblemTypeAndMethodTest:test099()
24357=ProblemTypeAndMethodTest:test376550_3a()
24358=ProblemTypeAndMethodTest:test378674_comment21a()
24359=ProblemTypeAndMethodTest:test109()
24360=ProblemTypeAndMethodTest:test042()
24361=ProblemTypeAndMethodTest:test088()
24362=ProblemTypeAndMethodTest:test376550_4b()
24363=ProblemTypeAndMethodTest:test075()
24364=ProblemTypeAndMethodTest:testBug335845a()
24365=ProblemTypeAndMethodTest:test378674_comment3()
24366=ProblemTypeAndMethodTest:test064()
24367=ProblemTypeAndMethodTest:test055()
24368=ProblemTypeAndMethodTest:test406396()
24369=ProblemTypeAndMethodTest:test378674_comment21c()
24370=ProblemTypeAndMethodTest:test044()
24371=ProblemTypeAndMethodTest:test077()
24372=ProblemTypeAndMethodTest:test031()
24373=ProblemTypeAndMethodTest:ProblemTypeAndMethodTest(String)
24374=ProblemTypeAndMethodTest:test020()
24375=ProblemTypeAndMethodTest:test066()
24376=ProblemTypeAndMethodTest:testBug335845g()
24377=ProblemTypeAndMethodTest:test057()
24378=ProblemTypeAndMethodTest:test354502()
24379=ProblemTypeAndMethodTest:test011()
24380=ProblemTypeAndMethodTest:test120()
24381=ProblemTypeAndMethodTest:test046()
24382=ProblemTypeAndMethodTest:test079()
24383=ProblemTypeAndMethodTest:test376550_5a()
24384=ProblemTypeAndMethodTest:test116b()
24385=ProblemTypeAndMethodTest:test033()
24386=ProblemTypeAndMethodTest:test068()
24387=ProblemTypeAndMethodTest:test376550_6b()
24388=ProblemTypeAndMethodTest:test378674_comment1c()
24389=ProblemTypeAndMethodTest:testBug335845e()
24390=ProblemTypeAndMethodTest:test022()
24391=ProblemTypeAndMethodTest:test036()
24392=ProblemTypeAndMethodTest:test025()
24393=ProblemTypeAndMethodTest:test110()
24394=ProblemTypeAndMethodTest:test058()
24395=ProblemTypeAndMethodTest:test376550_7b()
24396=ProblemTypeAndMethodTest:test099a()
24397=ProblemTypeAndMethodTest:test012()
24398=ProblemTypeAndMethodTest:test123()
24399=ProblemTypeAndMethodTest:test001()
24400=ProblemTypeAndMethodTest:test047()
24401=ProblemTypeAndMethodTest:test038()
24402=ProblemTypeAndMethodTest:test376550_9b()
24403=ProblemTypeAndMethodTest:test091()
24404=ProblemTypeAndMethodTest:test124b()
24405=ProblemTypeAndMethodTest:test101()
24406=ProblemTypeAndMethodTest:test027()
24407=ProblemTypeAndMethodTest:test080()
24408=ProblemTypeAndMethodTest:test112()
24409=ProblemTypeAndMethodTest:test014()
24410=ProblemTypeAndMethodTest:test049()
24411=ProblemTypeAndMethodTest:test376550_8a()
24412=ProblemTypeAndMethodTest:test003()
24413=ProblemTypeAndMethodTest:test093()
24414=ProblemTypeAndMethodTest:test360164()
24415=ProblemTypeAndMethodTest:test103()
24416=ProblemTypeAndMethodTest:test029()
24417=ProblemTypeAndMethodTest:test082()
24418=ProblemTypeAndMethodTest:test114()
24419=ProblemTypeAndMethodTest:test016()
24420=ProblemTypeAndMethodTest:test005()
24421=ProblemTypeAndMethodTest:test095()
24422=ProblemTypeAndMethodTest:test105()
24423=ProblemTypeAndMethodTest:test084()
24424=ProblemTypeAndMethodTest:test378674_comment5b()
24425=ProblemTypeAndMethodTest:test018()
24426=ProblemTypeAndMethodTest:test071()
24427=ProblemTypeAndMethodTest:test007()
24428=ProblemTypeAndMethodTest:test060()
24429=ProblemTypeAndMethodTest:test376550_12()
24430=ProblemTypeAndMethodTest:test116a()
24431=ProblemTypeAndMethodTest:test074()
24432=ProblemTypeAndMethodTest:testBug335845b()
24433=ProblemTypeAndMethodTest:test117b()
24434=ProblemTypeAndMethodTest:test063()
24435=ProblemTypeAndMethodTest:test376550_2a()
24436=ProblemTypeAndMethodTest:test050()
24437=ProblemTypeAndMethodTest:test096()
24438=ProblemTypeAndMethodTest:test376550_11a()
24439=ProblemTypeAndMethodTest:test108()
24440=ProblemTypeAndMethodTest:test085()
24441=ProblemTypeAndMethodTest:test119()
24442=ProblemTypeAndMethodTest:test030()
24443=ProblemTypeAndMethodTest:test076()
24444=ProblemTypeAndMethodTest:test378674_comment2()
24445=ProblemTypeAndMethodTest:test065()
24446=ProblemTypeAndMethodTest:test052()
24447=ProblemTypeAndMethodTest:test376550_3b()
24448=ProblemTypeAndMethodTest:test098()
24449=ProblemTypeAndMethodTest:test376550_10b()
24450=ProblemTypeAndMethodTest:test041()
24451=ProblemTypeAndMethodTest:test087()
24452=ProblemTypeAndMethodTest:test032()
24453=ProblemTypeAndMethodTest:test078()
24454=ProblemTypeAndMethodTest:test376550_5b()
24455=ProblemTypeAndMethodTest:test393781()
24456=ProblemTypeAndMethodTest:test378674_comment0()
24457=ProblemTypeAndMethodTest:test021()
24458=ProblemTypeAndMethodTest:test067()
24459=ProblemTypeAndMethodTest:test378674_comment1b()
24460=ProblemTypeAndMethodTest:testBug335845f()
24461=ProblemTypeAndMethodTest:test378674_comment11()
24462=ProblemTypeAndMethodTest:test054()
24463=ProblemTypeAndMethodTest:test378674_comment21b()
24464=ProblemTypeAndMethodTest:test043()
24465=ProblemTypeAndMethodTest:test089()
24466=ProblemTypeAndMethodTest:test376550_4a()
24467=ProblemTypeAndMethodTest:test034()
24468=ProblemTypeAndMethodTest:test069()
24469=ProblemTypeAndMethodTest:test376550_6a()
24470=ProblemTypeAndMethodTest:testBug335845d()
24471=ProblemTypeAndMethodTest:test023()
24472=ProblemTypeAndMethodTest:runStaticWarningConformTest(String, String)
24473=ProblemTypeAndMethodTest:test378674_comment21d()
24474=ProblemTypeAndMethodTest:test010()
24475=ProblemTypeAndMethodTest:test056()
24476=ProblemTypeAndMethodTest:test121()
24477=ProblemTypeAndMethodTest:test376550_5aa()
24478=ProblemTypeAndMethodTest:test045()
24479=ProblemTypeAndMethodTest:test406396a()
24480=A:someMethod()
24481=PackageDeclaration:getInterfaces()
24482=PackageDeclaration:getEnums()
24483=PackageDeclaration:getAnnotationTypes()
24484=PackageDeclaration:getClasses()
24485=PackageDeclaration:getQualifiedName()
24486=ImportDeclarationWriter:ImportDeclarationWriter(boolean)
24487=ImportDeclarationWriter:writeImportDeclaration(ImportName)
24488=AndLocator:recordResolution(QualifiedTypeReference, TypeBinding)
24489=AndLocator:match(MethodDeclaration, MatchingNodeSet)
24490=AndLocator:matchReportReference(ASTNode, IJavaElement, Binding, int, MatchLocator)
24491=AndLocator:match(TypeReference, MatchingNodeSet)
24492=AndLocator:match(LambdaExpression, MatchingNodeSet)
24493=AndLocator:matchReportImportRef(ImportReference, Binding, IJavaElement, int, MatchLocator)
24494=AndLocator:match(MemberValuePair, MatchingNodeSet)
24495=AndLocator:match(TypeParameter, MatchingNodeSet)
24496=AndLocator:match(Annotation, MatchingNodeSet)
24497=AndLocator:match(TypeDeclaration, MatchingNodeSet)
24498=AndLocator:match(LocalDeclaration, MatchingNodeSet)
24499=AndLocator:AndLocator(AndPattern)
24500=AndLocator:match(ASTNode, MatchingNodeSet)
24501=AndLocator:matchContainer()
24502=AndLocator:match(ConstructorDeclaration, MatchingNodeSet)
24503=AndLocator:match(MessageSend, MatchingNodeSet)
24504=AndLocator:resolveLevel(ASTNode)
24505=AndLocator:resolveLevel(Binding)
24506=AndLocator:setFlavors(int)
24507=AndLocator:match(Reference, MatchingNodeSet)
24508=AndLocator:initializePolymorphicSearch(MatchLocator)
24509=AndLocator:match(ReferenceExpression, MatchingNodeSet)
24510=AndLocator:match(FieldDeclaration, MatchingNodeSet)
24511=AndLocator:match(Expression, MatchingNodeSet)
24512=AndLocator:matchReportReference(ASTNode, IJavaElement, IJavaElement, IJavaElement[], Binding, int, MatchLocator)
24513=TypeDeclaration:getFields()
24514=TypeDeclaration:getPackage()
24515=TypeDeclaration:getNestedTypes()
24516=TypeDeclaration:getFormalTypeParameters()
24517=TypeDeclaration:getSuperinterfaces()
24518=TypeDeclaration:getMethods()
24519=TypeDeclaration:getQualifiedName()
24520=A:method()
24521=MirrorUtilTestAnnotationProcessor:testEnvOptions()
24522=MirrorUtilTestAnnotationProcessor:MirrorUtilTestAnnotationProcessor(AnnotationProcessorEnvironment)
24523=MirrorUtilTestAnnotationProcessor:testHidesOverrides()
24524=MirrorUtilTestAnnotationProcessor:process()
24525=CreatePackageTests:setUp()
24526=CreatePackageTests:testInvalidPackageFragment()
24527=CreatePackageTests:suite()
24528=CreatePackageTests:testCreatePackageFragment4()
24529=CreatePackageTests:testCreatePackageFragment2()
24530=CreatePackageTests:CreatePackageTests(String)
24531=CreatePackageTests:testDuplicatePackageFragment()
24532=CreatePackageTests:tearDown()
24533=CreatePackageTests:testCreatePackageFragment1()
24534=CreatePackageTests:testCreatePackageFragment5()
24535=CreatePackageTests:testCreatePackageFragment3()
24536=A:foo()
24537=A:launch()
24538=X:foo()
24539=DefaultJavaIndexer:generateIndexForJar(String, String)
24540=ExternalJarDeltaTests:testExternalJarChanged6()
24541=ExternalJarDeltaTests:testExternalJarRemoved3()
24542=ExternalJarDeltaTests:testExternalJarChanged2()
24543=ExternalJarDeltaTests:testExternalJarRemoved1()
24544=ExternalJarDeltaTests:testExternalJarChanged4()
24545=ExternalJarDeltaTests:testExternalJar0()
24546=ExternalJarDeltaTests:testExternalJarInternalExternalJar()
24547=ExternalJarDeltaTests:testExternalJarAdded3()
24548=ExternalJarDeltaTests:testExternalJarAdded1()
24549=ExternalJarDeltaTests:testEmptyScope()
24550=ExternalJarDeltaTests:ExternalJarDeltaTests(String)
24551=ExternalJarDeltaTests:suite()
24552=ExternalJarDeltaTests:testExternalJarChanged3()
24553=ExternalJarDeltaTests:testExternalJarRemoved2()
24554=ExternalJarDeltaTests:testExternalJarChanged5()
24555=ExternalJarDeltaTests:testExternalJarAdded2()
24556=ExternalJarDeltaTests:testExternalJarChanged1()
24557=ThreadSafetyTests:testDeadlock01()
24558=ThreadSafetyTests:suite()
24559=ThreadSafetyTests:ThreadSafetyTests(String)
24560=Test:main(String[])
24561=BatchProcessor:process()
24562=BatchProcessor:BatchProcessor(AnnotationProcessorEnvironment)
24563=TestRunContext:getFailures()
24564=TestRunContext:handleTestSelected(Test)
24565=X02:foo()
24566=TokenScanner:getScanner()
24567=TokenScanner:getNextEndOffset(int, boolean)
24568=TokenScanner:readToToken(int, int)
24569=TokenScanner:setOffset(int)
24570=TokenScanner:TokenScanner(Scanner)
24571=TokenScanner:getCurrentEndOffset()
24572=TokenScanner:getCurrentStartOffset()
24573=TokenScanner:createError(int, String, Throwable)
24574=TokenScanner:getTokenEndOffset(int, int)
24575=TokenScanner:getCurrentLength()
24576=TokenScanner:readNext(int, boolean)
24577=TokenScanner:readToToken(int)
24578=TokenScanner:getTokenStartOffset(int, int)
24579=TokenScanner:getNextStartOffset(int, boolean)
24580=TokenScanner:isComment(int)
24581=TokenScanner:isModifier(int)
24582=TokenScanner:getPreviousTokenEndOffset(int, int)
24583=TokenScanner:readNext(boolean)
24584=FunctionalExpression:setCompilationResult(CompilationResult)
24585=FunctionalExpression:recordFunctionalType(Scope)
24586=FunctionalExpression:diagnosticsSourceEnd()
24587=FunctionalExpression:setExpressionContext(ExpressionContext)
24588=FunctionalExpression:VisibilityInspector:visible(TypeBinding)
24589=FunctionalExpression:VisibilityInspector:visit(ReferenceBinding)
24590=FunctionalExpression:isPolyExpression(MethodBinding)
24591=FunctionalExpression:requiresBridges()
24592=FunctionalExpression:nullStatus(FlowInfo)
24593=FunctionalExpression:getExpressionContext()
24594=FunctionalExpression:expectedType()
24595=FunctionalExpression:isBoxingCompatibleWith(TypeBinding, Scope)
24596=FunctionalExpression:getRequiredBridges()
24597=FunctionalExpression:invocationTargetType()
24598=FunctionalExpression:isPolyExpression()
24599=FunctionalExpression:VisibilityInspector:visit(ParameterizedTypeBinding)
24600=FunctionalExpression:resolveType(BlockScope)
24601=FunctionalExpression:isFunctionalType()
24602=FunctionalExpression:setExpectedType(TypeBinding)
24603=FunctionalExpression:VisibilityInspector:VisibilityInspector(FunctionalExpression, Scope, boolean)
24604=FunctionalExpression:isPertinentToApplicability(TypeBinding, MethodBinding)
24605=FunctionalExpression:VisibilityInspector:visit(RawTypeBinding)
24606=FunctionalExpression:reportSamProblem(BlockScope, MethodBinding)
24607=FunctionalExpression:FunctionalExpression()
24608=FunctionalExpression:resolveType(BlockScope, boolean)
24609=FunctionalExpression:FunctionalExpression(CompilationResult)
24610=FunctionalExpression:kosherDescriptor(Scope, MethodBinding, boolean)
24611=FunctionalExpression:argumentsTypeElided()
24612=FunctionalExpression:getMethodBinding()
24613=FunctionalExpression:VisibilityInspector:visible(TypeBinding[])
24614=FunctionalExpression:VisibilityInspector:checkVisibility(ReferenceBinding)
24615=IErrorHandlingPolicy:proceedOnErrors()
24616=IErrorHandlingPolicy:ignoreAllErrors()
24617=IErrorHandlingPolicy:stopOnFirstError()
24618=MemberValuePair:treeSize()
24619=MemberValuePair:propertyDescriptors(int)
24620=MemberValuePair:internalStructuralPropertiesForType(int)
24621=MemberValuePair:setName(SimpleName)
24622=MemberValuePair:MemberValuePair(AST)
24623=MemberValuePair:memSize()
24624=MemberValuePair:accept0(ASTVisitor)
24625=MemberValuePair:setValue(Expression)
24626=MemberValuePair:clone0(AST)
24627=MemberValuePair:resolveMemberValuePairBinding()
24628=MemberValuePair:getValue()
24629=MemberValuePair:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
24630=MemberValuePair:getNodeType0()
24631=MemberValuePair:getName()
24632=MemberValuePair:subtreeMatch0(ASTMatcher, Object)
24633=A:a()
24634=IDOMImport:getFlags()
24635=IDOMImport:setName(String)
24636=IDOMImport:isOnDemand()
24637=IDOMImport:setFlags(int)
24638=IDOMImport:getName()
24639=X30:foo()
24640=SomeClass:classifySetTwo(Set<?>, int, long, int)
24641=DefaultJavaElementComparator:DefaultJavaElementComparator()
24642=DefaultJavaElementComparator:getCategory(BodyDeclaration)
24643=DefaultJavaElementComparator:DefaultJavaElementComparator(int, int, int, int, int, int, int, int, int)
24644=DefaultJavaElementComparator:buildSignature(BodyDeclaration)
24645=DefaultJavaElementComparator:compare(Object, Object)
24646=DefaultJavaElementComparator:buildSignature(Name)
24647=DefaultJavaElementComparator:buildSignature(Type)
24648=X04:foo(String)
24649=Factory:getJavaLangClass_Primitive(PrimitiveType)
24650=Factory:createAnnotationMemberValue(Object, String, AnnotationMirrorImpl, BaseProcessorEnv, TypeMirror)
24651=Factory:createDefaultValue(Object, ASTBasedAnnotationElementDeclarationImpl, BaseProcessorEnv)
24652=Factory:createErrorClassType(ITypeBinding)
24653=Factory:createErrorAnnotationType(String)
24654=Factory:createErrorClassType(String)
24655=Factory:performNecessaryPrimitiveTypeConversion(Class<?>, Object, boolean)
24656=Factory:createAnnotationMirror(IAnnotationBinding, EclipseDeclarationImpl, BaseProcessorEnv)
24657=Factory:createAnnotationValueFromDOMValue(Object, String, int, EclipseMirrorObject, BaseProcessorEnv)
24658=Factory:getMatchingDummyValue(Class<?>)
24659=Factory:createDeclaration(IBinding, BaseProcessorEnv)
24660=Factory:convertDOMValueToMirrorValue(Object, String, EclipseMirrorObject, EclipseDeclarationImpl, BaseProcessorEnv, TypeMirror)
24661=Factory:createDeclaration(ASTNode, IFile, BaseProcessorEnv)
24662=Factory:createReferenceType(ITypeBinding, BaseProcessorEnv)
24663=Factory:createErrorAnnotationType(ITypeBinding)
24664=Factory:performNecessaryTypeConversion(TypeMirror, Object, String, EclipseMirrorObject, BaseProcessorEnv)
24665=Factory:createTypeMirror(ITypeBinding, BaseProcessorEnv)
24666=Factory:createParameterDeclaration(SingleVariableDeclaration, IFile, BaseProcessorEnv)
24667=Factory:createDefaultValue(Object, AnnotationElementDeclarationImpl, BaseProcessorEnv)
24668=Factory:createErrorArrayType(String, int)
24669=Factory:createErrorInterfaceType(ITypeBinding)
24670=Factory:createParameterDeclaration(ExecutableDeclarationImpl, int, ITypeBinding, BaseProcessorEnv)
24671=TextGenAnnotationProcessor:TextGenAnnotationProcessor(AnnotationProcessorEnvironment)
24672=TextGenAnnotationProcessor:process()
24673=Test:foo()
24674=Test:bar()
24675=TestB1:foo()
24676=TestB1:bar()
24677=BundleChain:BundleChain(ResourceBundle, ClassLoader, Locale, String)
24678=Test:foo()
24679=PackageDeclarationImplNoBinding:getAnnotationTypes()
24680=PackageDeclarationImplNoBinding:getQualifiedName()
24681=PackageDeclarationImplNoBinding:getPosition()
24682=PackageDeclarationImplNoBinding:getDocComment()
24683=PackageDeclarationImplNoBinding:getModifiers()
24684=PackageDeclarationImplNoBinding:getAnnotation(Class<A>)
24685=PackageDeclarationImplNoBinding:getEnums()
24686=PackageDeclarationImplNoBinding:getAnnotationMirrors()
24687=PackageDeclarationImplNoBinding:PackageDeclarationImplNoBinding(IPackageFragment[])
24688=PackageDeclarationImplNoBinding:accept(DeclarationVisitor)
24689=PackageDeclarationImplNoBinding:getClasses()
24690=PackageDeclarationImplNoBinding:getInterfaces()
24691=PackageDeclarationImplNoBinding:getSimpleName()
24692=ParameterizedMethodBinding:ParameterizedMethodBinding(ParameterizedTypeBinding, MethodBinding)
24693=ParameterizedMethodBinding:ParameterizedMethodBinding()
24694=ParameterizedMethodBinding:hasSubstitutedParameters()
24695=ParameterizedMethodBinding:ParameterizedMethodBinding(ReferenceBinding, MethodBinding, char[][], LookupEnvironment)
24696=ParameterizedMethodBinding:original()
24697=ParameterizedMethodBinding:instantiateGetClass(TypeBinding, MethodBinding, Scope)
24698=ParameterizedMethodBinding:hasSubstitutedReturnType()
24699=ParameterizedMethodBinding:shallowOriginal()
24700=H:foo()
24701=X:foo(Class<? extends Object>)
24702=X10:foo()
24703=VerifyTests:VerifyClassLoader:loadClassData(File)
24704=VerifyTests:loadAndRun(String)
24705=VerifyTests:VerifyClassLoader:isExcluded(String)
24706=VerifyTests:main(String[])
24707=VerifyTests:VerifyClassLoader:getResourceAsStream(String)
24708=VerifyTests:VerifyClassLoader:loadClass(String, boolean)
24709=VerifyTests:VerifyClassLoader:locate(String)
24710=VerifyTests:VerifyClassLoader:getResource(String)
24711=VerifyTests:VerifyClassLoader:VerifyClassLoader()
24712=VerifyTests:run()
24713=RecoveredElement:preserveEnclosingBlocks()
24714=RecoveredElement:previousAvailableLineEnd(int)
24715=RecoveredElement:updateOnOpeningBrace(int, int)
24716=RecoveredElement:enclosingMethod()
24717=RecoveredElement:type()
24718=RecoveredElement:sourceEnd()
24719=RecoveredElement:toString(int)
24720=RecoveredElement:enclosingInitializer()
24721=RecoveredElement:enclosingType()
24722=RecoveredElement:updateFromParserState()
24723=RecoveredElement:updateSourceEndIfNecessary(int, int)
24724=RecoveredElement:add(Block, int)
24725=RecoveredElement:tabString(int)
24726=RecoveredElement:depth()
24727=RecoveredElement:add(LocalDeclaration, int)
24728=RecoveredElement:parser()
24729=RecoveredElement:RecoveredElement(RecoveredElement, int)
24730=RecoveredElement:add(Statement, int)
24731=RecoveredElement:add(AbstractMethodDeclaration, int)
24732=RecoveredElement:add(FieldDeclaration, int)
24733=RecoveredElement:updateSourceEndIfNecessary(int)
24734=RecoveredElement:add(TypeDeclaration, int)
24735=RecoveredElement:toString()
24736=RecoveredElement:updateBodyStart(int)
24737=RecoveredElement:updateOnClosingBrace(int, int)
24738=RecoveredElement:topElement()
24739=RecoveredElement:updateParseTree()
24740=RecoveredElement:RecoveredElement(RecoveredElement, int, Parser)
24741=RecoveredElement:add(ImportReference, int)
24742=RecoveredElement:parseTree()
24743=ClasspathAccessRule:getKind()
24744=ClasspathAccessRule:toProblemId(int)
24745=ClasspathAccessRule:ClasspathAccessRule(IPath, int)
24746=ClasspathAccessRule:getPattern()
24747=ClasspathAccessRule:ClasspathAccessRule(char[], int)
24748=X16a:foo()
24749=AbstractJavaSearchGenericTests:AbstractJavaSearchGenericTests(String, int)
24750=AbstractJavaSearchGenericTests:search(String, int, int)
24751=AbstractJavaSearchGenericTests:search(IJavaElement, int)
24752=AbstractJavaSearchGenericTests:cleanResults(String)
24753=AbstractJavaSearchGenericTests:setUp()
24754=AbstractJavaSearchGenericTests:search(IJavaElement, int, IJavaSearchScope, SearchRequestor)
24755=AbstractJavaSearchGenericTests:search(String, int, int, IJavaSearchScope)
24756=AbstractJavaSearchGenericTests:search(String, int, int, IJavaSearchScope, SearchRequestor)
24757=AbstractJavaSearchGenericTests:assertSearchResults(String, String, JavaSearchResultCollector)
24758=AbstractJavaSearchGenericTests:addResultLine(StringBuffer, char[])
24759=AbstractJavaSearchGenericTests:search(IJavaElement, int, IJavaSearchScope)
24760=Y:foo(X)
24761=ExclusionPatternsTests:testNestedSourceFolder5()
24762=ExclusionPatternsTests:testRenameResourceExcludedCompilationUnit()
24763=ExclusionPatternsTests:testAddExclusionOnPrimaryWorkingCopy()
24764=ExclusionPatternsTests:testIsOnClasspath2()
24765=ExclusionPatternsTests:testRemoveExcludedAndIncludedPackages()
24766=ExclusionPatternsTests:testNestedSourceFolder3()
24767=ExclusionPatternsTests:testSearchWithExcludedCompilationUnit2()
24768=ExclusionPatternsTests:testNestedSourceFolder1()
24769=ExclusionPatternsTests:testCreateExcludedAndIncludedPackages()
24770=ExclusionPatternsTests:testRenameResourceExcludedPackage()
24771=ExclusionPatternsTests:testAddExclusionOnPackage()
24772=ExclusionPatternsTests:setUp()
24773=ExclusionPatternsTests:testIsOnClasspath4()
24774=ExclusionPatternsTests:ExclusionPatternsTests(String)
24775=ExclusionPatternsTests:testCreateExcludedPackage()
24776=ExclusionPatternsTests:testRemoveExclusionOnCompilationUnit()
24777=ExclusionPatternsTests:tearDown()
24778=ExclusionPatternsTests:testRenameExcludedCompilationUnit()
24779=ExclusionPatternsTests:testSearchPotentialMatchInOutput()
24780=ExclusionPatternsTests:testIsOnClasspath1()
24781=ExclusionPatternsTests:testNestedSourceFolder6()
24782=ExclusionPatternsTests:testAddExclusionOnFolderUnderProject()
24783=ExclusionPatternsTests:setClasspath(String[])
24784=ExclusionPatternsTests:testCreateResourceExcludedPackage()
24785=ExclusionPatternsTests:testSearchWithExcludedCompilationUnit1()
24786=ExclusionPatternsTests:testNestedSourceFolder4()
24787=ExclusionPatternsTests:testAddToExcludedFolder()
24788=ExclusionPatternsTests:testCreateExcludedPackage2()
24789=ExclusionPatternsTests:testNestedSourceFolder2()
24790=ExclusionPatternsTests:suite()
24791=ExclusionPatternsTests:testIsOnClasspath3()
24792=ExclusionPatternsTests:testCreateExcludedCompilationUnit()
24793=ExclusionPatternsTests:testAddExclusionOnCompilationUnit()
24794=ExclusionPatternsTests:testCreateResourceExcludedCompilationUnit()
24795=ExclusionPatternsTests:testRenameExcludedPackage()
24796=ExclusionPatternsTests:testRemoveExclusionOnPackage()
24797=PackageFragmentInfo:containsJavaResources()
24798=PackageFragmentInfo:setNonJavaResources(Object[])
24799=PackageFragmentInfo:PackageFragmentInfo()
24800=PackageFragmentInfo:getNonJavaResources(IResource, PackageFragmentRoot)
24801=CopyResourceTests:testProjectWithBin()
24802=CopyResourceTests:testBug154693()
24803=CopyResourceTests:CopyResourceTests(String)
24804=CopyResourceTests:testProjectWith2Src2Bin()
24805=CopyResourceTests:testProjectWith2SrcAsBin()
24806=CopyResourceTests:testBug194420()
24807=CopyResourceTests:testSimpleProject()
24808=CopyResourceTests:testFilteredResources()
24809=CopyResourceTests:test2ProjectWith1Bin()
24810=CopyResourceTests:testProjectWithSrcBin()
24811=CopyResourceTests:testProjectWith2SrcBin()
24812=CopyResourceTests:suite()
24813=IMember:getDeclaringType()
24814=IMember:getType(String, int)
24815=IMember:isBinary()
24816=IMember:getCompilationUnit()
24817=IMember:getOccurrenceCount()
24818=IMember:getJavadocRange()
24819=IMember:getTypeRoot()
24820=IMember:getCategories()
24821=IMember:getFlags()
24822=IMember:getClassFile()
24823=Test:main(String[])
24824=Example:foo()
24825=X30:foo()
24826=Parser:foo()
24827=CharArrayCache:size()
24828=CharArrayCache:CharArrayCache()
24829=CharArrayCache:CharArrayCache(int)
24830=CharArrayCache:remove(char[])
24831=CharArrayCache:rehash()
24832=CharArrayCache:hashCodeChar(char[])
24833=CharArrayCache:clear()
24834=CharArrayCache:get(char[])
24835=CharArrayCache:toString()
24836=CharArrayCache:put(char[], int)
24837=CharArrayCache:returnKeyFor(int)
24838=CharArrayCache:containsKey(char[])
24839=ConcurrentBatchCompilerTest:ConcurrentBatchCompilerTest(String)
24840=ConcurrentBatchCompilerTest:testBug372319()
24841=ConcurrentBatchCompilerTest:testName()
24842=ConcurrentBatchCompilerTest:invokeCompiler(PrintWriter, PrintWriter, Object, TestCompilationProgress)
24843=ConcurrentBatchCompilerTest:testClass()
24844=ConcurrentBatchCompilerTest:suite()
24845=Test:foo()
24846=A:l()
24847=ResolveDuplicateMethodDeclaration:foo()
24848=A:foo()
24849=A:foo()
24850=ProblemHandler:createProblem(char[], int, String[], String[], int, int, int, int)
24851=ProblemHandler:ProblemHandler(IErrorHandlingPolicy, CompilerOptions, IProblemFactory)
24852=ProblemHandler:computeSeverity(int)
24853=ProblemHandler:handle(int, String[], String[], int, int, ReferenceContext, CompilationResult)
24854=ProblemHandler:handle(int, String[], String[], int, int, int, ReferenceContext, CompilationResult)
24855=ProblemHandler:record(IProblem, CompilationResult, ReferenceContext)
24856=ProblemHandler:searchLineNumber(int[], int)
24857=Foo:m1(boolean)
24858=Util:zip(File, ZipOutputStream, int)
24859=Util:unzip(String, String)
24860=Util:indentString(String, int)
24861=Util:createJar(String[], String[], Map, String[], String)
24862=Util:waitUntilResourceDeleted(IResource)
24863=Util:zipFiles(File[], String)
24864=Util:getProblemLog(CompilationResult, boolean, boolean)
24865=Util:fileContent(String)
24866=Util:waitAtLeast(int)
24867=Util:createSourceZip(String[], String)
24868=Util:printJdtCoreStackTrace(Exception, int)
24869=Util:compilationUnits(String[])
24870=Util:getJavaClassLibs()
24871=Util:getParentChildResource(IResource)
24872=Util:fileContentToDisplayString(String, int, String, boolean)
24873=Util:createJar(String[], String, String)
24874=Util:convertToIndependantLineDelimiter(String)
24875=Util:toNativePath(String)
24876=Util:displayString(String, int, boolean)
24877=Util:getJREDirectory()
24878=Util:writeToFile(String, String)
24879=Util:createClassFolder(String[], String, String)
24880=Util:isFileDeleted(File)
24881=Util:delete(File)
24882=Util:createJar(String[], String[], String, String[], String)
24883=Util:compile(String[], Map, String)
24884=Util:getParentChildFile(File)
24885=Util:delete(String)
24886=Util:isResourceDeleted(IResource)
24887=Util:flushDirectoryContent(File)
24888=Util:compile(String[], Map, String[], String)
24889=Util:concatWithClassLibs(String, boolean)
24890=Util:getTestName()
24891=Util:concatWithClassLibs(String[], boolean)
24892=Util:isMacOS()
24893=Util:createSourceDir(String[], String)
24894=Util:createJar(String[], Map, String)
24895=Util:fileContentToDisplayString(String, int, boolean)
24896=Util:getJavaClassLibsAsString()
24897=Util:copy(String, String)
24898=Util:addJarEntries(String, String[], ArrayList)
24899=Util:waitUntilFileDeleted(File)
24900=Util:toString(String[], boolean)
24901=Util:getCompileOptions(String)
24902=Util:getMajorMinorVMVersion()
24903=Util:createFile(String, String)
24904=Util:createJar(String[], String[], String, String)
24905=Util:zip(File, String)
24906=Util:displayString(String)
24907=Util:appendProblem(StringBuffer, IProblem, char[], int)
24908=Util:createEmptyJar(String, String)
24909=Util:printFileInfo(File, int, int)
24910=Util:displayString(String, int)
24911=Util:createJar(String[], String[], String, String[], String, Map)
24912=Util:delete(IResource)
24913=Util:getFreePort()
24914=Util:getOutputDirectory()
24915=ASTBasedFieldDeclarationImpl:kind()
24916=ASTBasedFieldDeclarationImpl:getAstNode()
24917=ASTBasedFieldDeclarationImpl:ASTBasedFieldDeclarationImpl(VariableDeclarationFragment, IFile, BaseProcessorEnv)
24918=ASTBasedFieldDeclarationImpl:getConstantExpression()
24919=ASTBasedFieldDeclarationImpl:toString()
24920=ASTBasedFieldDeclarationImpl:getConstantValue()
24921=ASTBasedFieldDeclarationImpl:getFieldDeclarationAstNode()
24922=ASTBasedFieldDeclarationImpl:getType()
24923=ASTBasedFieldDeclarationImpl:accept(DeclarationVisitor)
24924=ASTBasedFieldDeclarationImpl:getSimpleName()
24925=Test:foo(int)
24926=X:bar()
24927=X:foo()
24928=X14c:foo()
24929=TestResult:run(TestCase)
24930=TestResult:addError(Test, Throwable)
24931=TestResult:cloneListeners()
24932=TestResult:TestResult()
24933=TestResult:addFailure(Test, AssertionFailedError)
24934=TestResult:stop()
24935=AbstractNullAnnotationTest:runConformTestWithLibs(String[], Map, String, String)
24936=AbstractNullAnnotationTest:runNegativeTestWithLibs(boolean, String[], Map, String)
24937=AbstractNullAnnotationTest:setUp()
24938=AbstractNullAnnotationTest:getCompilerOptions()
24939=AbstractNullAnnotationTest:runConformTestWithLibs(String[], Map, String)
24940=AbstractNullAnnotationTest:AbstractNullAnnotationTest(String)
24941=AbstractNullAnnotationTest:runNegativeTestWithLibs(boolean, String[], Map, String, boolean)
24942=AbstractNullAnnotationTest:runNegativeTestWithExtraLibs(String[], String, String[])
24943=AbstractNullAnnotationTest:runNegativeTestWithLibs(String[], String)
24944=AbstractNullAnnotationTest:runConformTestWithLibs(boolean, String[], Map, String)
24945=AbstractNullAnnotationTest:runNegativeTestWithLibs(boolean, String[], String)
24946=AbstractNullAnnotationTest:runConformTest(String[], Map, String)
24947=AbstractNullAnnotationTest:runNegativeTestWithLibs(String[], Map, String, boolean)
24948=AbstractNullAnnotationTest:runNegativeTestWithLibs(String[], Map, String)
24949=X:foo()
24950=X16:setConstantPoolName(char[])
24951=A:foo(int[])
24952=AssistPackageDeclaration:getAnnotation(String)
24953=AssistPackageDeclaration:getElementInfo(IProgressMonitor)
24954=AssistPackageDeclaration:AssistPackageDeclaration(CompilationUnit, String, Map)
24955=CreateTypeOperation:getASTNodeName()
24956=CreateTypeOperation:verify()
24957=CreateTypeOperation:getMainTaskName()
24958=CreateTypeOperation:generateElementAST(ASTRewrite, ICompilationUnit)
24959=CreateTypeOperation:generateResultHandle()
24960=CreateTypeOperation:CreateTypeOperation(IJavaElement, String, boolean)
24961=CreateTypeOperation:getType()
24962=CreateTypeOperation:rename(ASTNode, SimpleName)
24963=CreateTypeOperation:verifyNameCollision()
24964=BaseTestRunner:useReloadingTestSuiteLoader()
24965=BaseTestRunner:processArguments(String[])
24966=BaseTestRunner:addError(Test, Throwable)
24967=BaseTestRunner:endTest(Test)
24968=BaseTestRunner:readPreferences()
24969=BaseTestRunner:loadSuiteClass(String)
24970=BaseTestRunner:showStackRaw()
24971=BaseTestRunner:getFilteredTrace(String)
24972=BaseTestRunner:getPreferencesFile()
24973=BaseTestRunner:testStarted(String)
24974=BaseTestRunner:getFilteredTrace(Throwable)
24975=BaseTestRunner:clearStatus()
24976=BaseTestRunner:testFailed(int, Test, Throwable)
24977=BaseTestRunner:setLoading(boolean)
24978=BaseTestRunner:getLoader()
24979=BaseTestRunner:getPreference(String, int)
24980=BaseTestRunner:savePreferences()
24981=BaseTestRunner:setPreferences(Properties)
24982=BaseTestRunner:addFailure(Test, AssertionFailedError)
24983=BaseTestRunner:setPreference(String, String)
24984=BaseTestRunner:elapsedTimeAsString(long)
24985=BaseTestRunner:runFailed(String)
24986=BaseTestRunner:getTest(String)
24987=BaseTestRunner:truncate(String)
24988=BaseTestRunner:extractClassName(String)
24989=BaseTestRunner:getPreferences()
24990=BaseTestRunner:inVAJava()
24991=BaseTestRunner:getPreference(String)
24992=BaseTestRunner:filterLine(String)
24993=BaseTestRunner:startTest(Test)
24994=BaseTestRunner:testEnded(String)
24995=X02:foo(int, int)
24996=Test:foo()
24997=Parser:foo()
24998=X05:foo(String)
24999=SourcePackage:SourcePackage(int, int, char[], char[])
25000=SourcePackage:toString()
25001=A:goo(C)
25002=FloatConstant:typeID()
25003=FloatConstant:byteValue()
25004=FloatConstant:intValue()
25005=FloatConstant:stringValue()
25006=FloatConstant:fromValue(float)
25007=FloatConstant:charValue()
25008=FloatConstant:FloatConstant(float)
25009=FloatConstant:floatValue()
25010=FloatConstant:equals(Object)
25011=FloatConstant:doubleValue()
25012=FloatConstant:toString()
25013=FloatConstant:hashCode()
25014=FloatConstant:longValue()
25015=FloatConstant:shortValue()
25016=ArrayType:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
25017=ArrayType:internalGetType(ChildPropertyDescriptor)
25018=ArrayType:treeSize()
25019=ArrayType:internalStructuralPropertiesForType(int)
25020=ArrayType:propertyDescriptors(int)
25021=ArrayType:setComponentType(Type)
25022=ArrayType:subtreeMatch0(ASTMatcher, Object)
25023=ArrayType:ArrayType(AST, int)
25024=ArrayType:accept0(ASTVisitor)
25025=ArrayType:internalSetType(Type, ChildPropertyDescriptor)
25026=ArrayType:ArrayType(AST)
25027=ArrayType:memSize()
25028=ArrayType:getNodeType0()
25029=ArrayType:getDimensions()
25030=ArrayType:dimensions()
25031=ArrayType:clone0(AST)
25032=ArrayType:setElementType(Type)
25033=ArrayType:getComponentType()
25034=ArrayType:getElementType()
25035=ArrayType:internalGetChildListProperty(ChildListPropertyDescriptor)
25036=DefaultInterface:defaultMethod()
25037=LambdaTest:foo()
25038=FunctionalInterface:abstractMethod()
25039=DefaultInterface:anotherDefault()
25040=DefaultInterface:staticMethod()
25041=A:A()
25042=firstClass:myMethod()
25043=BlockScope:getEmulationPath(LocalVariableBinding)
25044=BlockScope:removeTrackingVar(FakedTrackingVariable)
25045=BlockScope:BlockScope(BlockScope)
25046=BlockScope:checkAppropriate(MethodBinding, MethodBinding, InvocationSite)
25047=BlockScope:addLocalType(TypeDeclaration)
25048=BlockScope:referenceType()
25049=BlockScope:problemReporter()
25050=BlockScope:basicToString(int)
25051=BlockScope:emulateOuterAccess(LocalVariableBinding)
25052=BlockScope:addAnonymousType(TypeDeclaration, ReferenceBinding)
25053=BlockScope:getEmulationPath(ReferenceBinding, boolean, boolean)
25054=BlockScope:maxShiftedOffset()
25055=BlockScope:needBlankFinalFieldInitializationCheck(FieldBinding)
25056=BlockScope:findVariable(char[])
25057=BlockScope:findLocalType(char[])
25058=BlockScope:toString(int)
25059=BlockScope:startIndex()
25060=BlockScope:computeLocalVariablePositions(int, int, CodeStream)
25061=BlockScope:findLocalVariableDeclarations(int)
25062=BlockScope:isDuplicateLocalVariable(char[])
25063=BlockScope:reportResourceLeak(FakedTrackingVariable, ASTNode, int)
25064=BlockScope:pruneWrapperTrackingVar(FakedTrackingVariable)
25065=BlockScope:registerTrackingVariable(FakedTrackingVariable)
25066=BlockScope:getBinding(char[][], InvocationSite)
25067=BlockScope:BlockScope(int, Scope)
25068=BlockScope:getBinding(char[][], int, InvocationSite, boolean)
25069=BlockScope:checkUnclosedCloseables(FlowInfo, FlowContext, ASTNode, BlockScope)
25070=BlockScope:propagateInnerEmulation(ReferenceBinding, boolean)
25071=BlockScope:addSubscope(Scope)
25072=BlockScope:checkAndSetModifiersForVariable(LocalVariableBinding)
25073=BlockScope:hasDefaultNullnessFor(int)
25074=BlockScope:toString()
25075=BlockScope:allowBlankFinalFieldAssignment(FieldBinding)
25076=BlockScope:BlockScope(BlockScope, int)
25077=BlockScope:checkAppropriateMethodAgainstSupers(char[], MethodBinding, TypeBinding[], InvocationSite)
25078=BlockScope:BlockScope(BlockScope, boolean)
25079=BlockScope:addLocalVariable(LocalVariableBinding)
25080=BlockScope:scopeIndex()
25081=BlockScope:correlateTrackingVarsIfElse(FlowInfo, FlowInfo)
25082=X:bar(int)
25083=X01:X01(String)
25084=X01:X01(String, String)
25085=A:getMyObject()
25086=NormalAnnotation:internalStructuralPropertiesForType(int)
25087=NormalAnnotation:clone0(AST)
25088=NormalAnnotation:internalGetChildListProperty(ChildListPropertyDescriptor)
25089=NormalAnnotation:getNodeType0()
25090=NormalAnnotation:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
25091=NormalAnnotation:internalTypeNameProperty()
25092=NormalAnnotation:accept0(ASTVisitor)
25093=NormalAnnotation:propertyDescriptors(int)
25094=NormalAnnotation:subtreeMatch0(ASTMatcher, Object)
25095=NormalAnnotation:NormalAnnotation(AST)
25096=NormalAnnotation:treeSize()
25097=NormalAnnotation:values()
25098=NormalAnnotation:memSize()
25099=FlowContext:extendTimeToLiveForNullCheckedField(int)
25100=FlowContext:recordBreakFrom(FlowInfo)
25101=FlowContext:internalRecordNullityMismatch(Expression, TypeBinding, FlowInfo, int, TypeBinding, int)
25102=FlowContext:recordExitAgainstResource(BlockScope, FlowInfo, FakedTrackingVariable, ASTNode)
25103=FlowContext:recordNullCheckedFieldReference(Reference, int)
25104=FlowContext:isSubRoutine()
25105=FlowContext:isNullcheckedFieldAccess(Reference)
25106=FlowContext:continueLabel()
25107=FlowContext:removeFinalAssignmentIfAny(Reference)
25108=FlowContext:markFinallyNullStatus(LocalVariableBinding, int)
25109=FlowContext:recordReturnFrom(UnconditionalFlowInfo)
25110=FlowContext:individualToString()
25111=FlowContext:getTargetContextForDefaultBreak()
25112=FlowContext:breakLabel()
25113=FlowContext:getTargetContextForBreakLabel(char[])
25114=FlowContext:recordProvidedExpectedTypes(TypeBinding, TypeBinding, int)
25115=FlowContext:recordContinueFrom(FlowContext, FlowInfo)
25116=FlowContext:getInitializationContext()
25117=FlowContext:getInitsForFinalBlankInitializationCheck(TypeBinding, FlowInfo)
25118=FlowContext:checkExceptionHandlers(TypeBinding, ASTNode, FlowInfo, BlockScope)
25119=FlowContext:getTargetContextForContinueLabel(char[])
25120=FlowContext:recordAbruptExit()
25121=FlowContext:getLocalParent()
25122=FlowContext:toString()
25123=FlowContext:recordBreakTo(FlowContext)
25124=FlowContext:isContinuable()
25125=FlowContext:checkUnboxing(Scope, Expression, FlowInfo)
25126=FlowContext:checkExceptionHandlers(TypeBinding[], ASTNode, FlowInfo, BlockScope)
25127=FlowContext:checkExceptionHandlers(TypeBinding, ASTNode, FlowInfo, BlockScope, boolean)
25128=FlowContext:FlowContext(FlowContext, ASTNode)
25129=FlowContext:initsOnReturn()
25130=FlowContext:isBreakable()
25131=FlowContext:recordUsingNullReference(Scope, LocalVariableBinding, ASTNode, int, FlowInfo)
25132=FlowContext:mergeFinallyNullInfo(FlowInfo)
25133=FlowContext:getTargetContextForDefaultContinue()
25134=FlowContext:recordFinalAssignment(VariableBinding, Reference)
25135=FlowContext:labelName()
25136=FlowContext:expireNullCheckedFieldInfo()
25137=FlowContext:isNonReturningContext()
25138=FlowContext:recordNullReference(LocalVariableBinding, ASTNode, int, FlowInfo)
25139=FlowContext:recordSettingFinal(VariableBinding, Reference, FlowInfo)
25140=FlowContext:recordUnboxing(Scope, Expression, int, FlowInfo)
25141=FlowContext:subroutine()
25142=FlowContext:initsOnBreak()
25143=FlowContext:recordNullityMismatch(BlockScope, Expression, TypeBinding, TypeBinding, FlowInfo, int, NullAnnotationMatching)
25144=ClasspathVariableInitializer:ClasspathVariableInitializer()
25145=ClasspathVariableInitializer:initialize(String)
25146=SourceConstructorWithChildrenInfo:SourceConstructorWithChildrenInfo(IJavaElement[])
25147=SourceConstructorWithChildrenInfo:getChildren()
25148=AbstractDOMBuilder:enterCompilationUnit()
25149=AbstractDOMBuilder:createCompilationUnit(char[], char[])
25150=AbstractDOMBuilder:acceptLineSeparatorPositions(int[])
25151=AbstractDOMBuilder:createCompilationUnit(ICompilationUnit)
25152=AbstractDOMBuilder:initializeBuild(char[], boolean, boolean)
25153=AbstractDOMBuilder:exitCompilationUnit(int)
25154=AbstractDOMBuilder:AbstractDOMBuilder()
25155=AbstractDOMBuilder:addChild(IDOMNode)
25156=AbstractDOMBuilder:exitType(int, int)
25157=AbstractDOMBuilder:getLineStart(int)
25158=X02:foo(int, int)
25159=Initializer:readableName()
25160=Initializer:Initializer(JavaElement, int)
25161=Initializer:getHandleMemento(StringBuffer)
25162=Initializer:equals(Object)
25163=Initializer:toStringInfo(int, StringBuffer, Object, boolean)
25164=Initializer:hashCode()
25165=Initializer:getNameRange()
25166=Initializer:rename(String, boolean, IProgressMonitor)
25167=Initializer:getElementType()
25168=Initializer:getPrimaryElement(boolean)
25169=Initializer:getHandleMementoDelimiter()
25170=I:foo()
25171=Bug415274Proc:process(Set<? extends TypeElement>, RoundEnvironment)
25172=Test:foo(X<T>)
25173=RecoveredLocalVariable:sourceEnd()
25174=RecoveredLocalVariable:RecoveredLocalVariable(LocalDeclaration, RecoveredElement, int)
25175=RecoveredLocalVariable:updateOnOpeningBrace(int, int)
25176=RecoveredLocalVariable:updateParseTree()
25177=RecoveredLocalVariable:updatedStatement(int, Set)
25178=RecoveredLocalVariable:add(Statement, int)
25179=RecoveredLocalVariable:updateSourceEndIfNecessary(int, int)
25180=RecoveredLocalVariable:parseTree()
25181=RecoveredLocalVariable:toString(int)
25182=RecoveredLocalVariable:attach(RecoveredAnnotation[], int, int, int)
25183=RecoveredLocalVariable:updateOnClosingBrace(int, int)
25184=DoStatement:getNodeType0()
25185=DoStatement:memSize()
25186=DoStatement:clone0(AST)
25187=DoStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
25188=DoStatement:internalStructuralPropertiesForType(int)
25189=DoStatement:setBody(Statement)
25190=DoStatement:treeSize()
25191=DoStatement:accept0(ASTVisitor)
25192=DoStatement:propertyDescriptors(int)
25193=DoStatement:getExpression()
25194=DoStatement:setExpression(Expression)
25195=DoStatement:getBody()
25196=DoStatement:subtreeMatch0(ASTMatcher, Object)
25197=DoStatement:DoStatement(AST)
25198=A:Example(boolean)
25199=W:m()
25200=IProblemFactory:createProblem(char[], int, String[], int, String[], int, int, int, int, int)
25201=IProblemFactory:getLocalizedMessage(int, int, String[])
25202=IProblemFactory:getLocale()
25203=IProblemFactory:getLocalizedMessage(int, String[])
25204=IProblemFactory:createProblem(char[], int, String[], String[], int, int, int, int, int)
25205=A:foo(int, int, int, int, int, int)
25206=A:bar(List)
25207=AnnotationComponent:sizeInBytes()
25208=AnnotationComponent:AnnotationComponent(byte[], IConstantPool, int)
25209=AnnotationComponent:getComponentName()
25210=AnnotationComponent:getComponentValue()
25211=AnnotationComponent:getComponentNameIndex()
25212=TestCompilationParticipant:TestCompilationParticipant()
25213=TestCompilationParticipant:reconcile(ReconcileContext)
25214=TestCompilationParticipant:isActive(IJavaProject)
25215=X10:foo(int, int)
25216=AnnotationValueImpl:hashCode()
25217=AnnotationValueImpl:toString()
25218=AnnotationValueImpl:equals(Object)
25219=AnnotationValueImpl:AnnotationValueImpl(BaseProcessingEnvImpl, Object, TypeBinding)
25220=AnnotationValueImpl:getValue()
25221=AnnotationValueImpl:accept(AnnotationValueVisitor<R, P>, P)
25222=AnnotationValueImpl:convertToMirrorType(Object, TypeBinding, int)
25223=NullAnnotationModelTests:testMissingAnnotation4()
25224=NullAnnotationModelTests:NullAnnotationModelTests(String)
25225=NullAnnotationModelTests:testBug405843a()
25226=NullAnnotationModelTests:setUp()
25227=NullAnnotationModelTests:testBug460491WithOldBinary()
25228=NullAnnotationModelTests:testJarPath(String)
25229=NullAnnotationModelTests:testBug458361a()
25230=NullAnnotationModelTests:suite()
25231=NullAnnotationModelTests:_testMissingAnnotation2()
25232=NullAnnotationModelTests:testBug372012()
25233=NullAnnotationModelTests:testBug458361b()
25234=NullAnnotationModelTests:testAnnotationAST1()
25235=NullAnnotationModelTests:testConvertedSourceType1()
25236=NullAnnotationModelTests:testBug460491WithOldBinary_b()
25237=NullAnnotationModelTests:testBug495635()
25238=NullAnnotationModelTests:testBinaryType1()
25239=NullAnnotationModelTests:_testMissingAnnotation3()
25240=NullAnnotationModelTests:testBug405843()
25241=NullAnnotationModelTests:_testMissingAnnotation1()
25242=NullAnnotationModelTests:_testMissingAnnotation5()
25243=NullAnnotationModelTests:testNonNullDefaultInInner()
25244=NullAnnotationModelTests:testBug487781()
25245=X18:Y18:foo()
25246=ITypeBinding:isEnum()
25247=ITypeBinding:isCapture()
25248=ITypeBinding:getComponentType()
25249=ITypeBinding:isLocal()
25250=ITypeBinding:getDeclaringMember()
25251=ITypeBinding:getSuperclass()
25252=ITypeBinding:isTypeVariable()
25253=ITypeBinding:getDeclaredModifiers()
25254=ITypeBinding:getRank()
25255=ITypeBinding:isAnnotation()
25256=ITypeBinding:getFunctionalInterfaceMethod()
25257=ITypeBinding:getTypeBounds()
25258=ITypeBinding:isArray()
25259=ITypeBinding:getTypeParameters()
25260=ITypeBinding:isAssignmentCompatible(ITypeBinding)
25261=ITypeBinding:getTypeArguments()
25262=ITypeBinding:isPrimitive()
25263=ITypeBinding:getDeclaredFields()
25264=ITypeBinding:getModifiers()
25265=ITypeBinding:isCastCompatible(ITypeBinding)
25266=ITypeBinding:isNullType()
25267=ITypeBinding:getWildcard()
25268=ITypeBinding:isRawType()
25269=ITypeBinding:getQualifiedName()
25270=ITypeBinding:isFromSource()
25271=ITypeBinding:getDeclaringMethod()
25272=ITypeBinding:getGenericTypeOfWildcardType()
25273=ITypeBinding:getTypeDeclaration()
25274=ITypeBinding:isTopLevel()
25275=ITypeBinding:isUpperbound()
25276=ITypeBinding:isClass()
25277=ITypeBinding:getBound()
25278=ITypeBinding:getTypeAnnotations()
25279=ITypeBinding:isAnonymous()
25280=ITypeBinding:getDeclaringClass()
25281=ITypeBinding:getElementType()
25282=ITypeBinding:isInterface()
25283=ITypeBinding:getInterfaces()
25284=ITypeBinding:getDeclaredMethods()
25285=ITypeBinding:getErasure()
25286=ITypeBinding:getBinaryName()
25287=ITypeBinding:getDeclaredTypes()
25288=ITypeBinding:isSubTypeCompatible(ITypeBinding)
25289=ITypeBinding:createArrayType(int)
25290=ITypeBinding:getName()
25291=ITypeBinding:isNested()
25292=ITypeBinding:getDimensions()
25293=ITypeBinding:isGenericType()
25294=ITypeBinding:isMember()
25295=ITypeBinding:isWildcardType()
25296=ITypeBinding:isParameterizedType()
25297=ITypeBinding:isIntersectionType()
25298=ITypeBinding:getPackage()
25299=InheritedAnnoProc:process(Set<? extends TypeElement>, RoundEnvironment)
25300=InheritedAnnoProc:init(ProcessingEnvironment)
25301=InheritedAnnoProc:clearProcessedElements()
25302=InheritedAnnoProc:getProcessedElements()
25303=TestD:main(String[])
25304=ClassFileStruct:verifyMethodNameAndSignature(char[], char[])
25305=ClassFileStruct:doubleAt(int)
25306=ClassFileStruct:ClassFileStruct(byte, int, boolean)
25307=ClassFileStruct:ClassFileStruct(byte, int)
25308=ClassFileStruct:u2At(int)
25309=ClassFileStruct:printTypeModifiers(int)
25310=ClassFileStruct:i2At(int)
25311=ClassFileStruct:i1At(int)
25312=ClassFileStruct:u4At(int)
25313=ClassFileStruct:u1At(int)
25314=ClassFileStruct:reset()
25315=ClassFileStruct:i4At(int)
25316=ClassFileStruct:floatAt(int)
25317=ClassFileStruct:utf8At(int, int)
25318=ClassFileStruct:i8At(int)
25319=ClassFileStruct:utf8At(int, int, boolean)
25320=Test:main(String[])
25321=Test:m()
25322=Test:foo()
25323=ArrayInitializer:memSize()
25324=ArrayInitializer:propertyDescriptors(int)
25325=ArrayInitializer:expressions()
25326=ArrayInitializer:subtreeMatch0(ASTMatcher, Object)
25327=ArrayInitializer:treeSize()
25328=ArrayInitializer:clone0(AST)
25329=ArrayInitializer:internalStructuralPropertiesForType(int)
25330=ArrayInitializer:getNodeType0()
25331=ArrayInitializer:internalGetChildListProperty(ChildListPropertyDescriptor)
25332=ArrayInitializer:accept0(ASTVisitor)
25333=ArrayInitializer:ArrayInitializer(AST)
25334=SelectionOnParameterizedQualifiedTypeReference:resolveType(BlockScope, boolean, int)
25335=SelectionOnParameterizedQualifiedTypeReference:resolveType(ClassScope, int)
25336=SelectionOnParameterizedQualifiedTypeReference:SelectionOnParameterizedQualifiedTypeReference(char[][], char[], TypeReference[][], TypeReference[], long[])
25337=SelectionOnParameterizedQualifiedTypeReference:printExpression(int, StringBuffer)
25338=BindingResolver:resolvePackage(PackageDeclaration)
25339=BindingResolver:resolveConstructor(EnumConstantDeclaration)
25340=BindingResolver:resolveVariable(VariableDeclaration)
25341=BindingResolver:resolveWellKnownType(String)
25342=BindingResolver:isResolvedTypeInferredFromExpectedType(ClassInstanceCreation)
25343=BindingResolver:resolveType(EnumDeclaration)
25344=BindingResolver:resolveReference(MethodRef)
25345=BindingResolver:resolveExpressionType(Expression)
25346=BindingResolver:resolveField(SuperFieldAccess)
25347=BindingResolver:getWorkingCopyOwner()
25348=BindingResolver:resolveMethod(MethodInvocation)
25349=BindingResolver:getVariableBinding(org.eclipse.jdt.internal.compiler.lookup.VariableBinding)
25350=BindingResolver:resolveConstantExpressionValue(Expression)
25351=BindingResolver:getPackageBinding(org.eclipse.jdt.internal.compiler.lookup.PackageBinding)
25352=BindingResolver:resolveUnboxing(Expression)
25353=BindingResolver:resolveMethod(LambdaExpression)
25354=BindingResolver:getTypeBinding(RecoveredTypeBinding, int)
25355=BindingResolver:resolveName(Name)
25356=BindingResolver:store(ASTNode, org.eclipse.jdt.internal.compiler.ast.ASTNode)
25357=BindingResolver:resolveBoxing(Expression)
25358=BindingResolver:updateKey(ASTNode, ASTNode)
25359=BindingResolver:getTypeBinding(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
25360=BindingResolver:resolveMemberValuePair(MemberValuePair)
25361=BindingResolver:getTypeBinding(Type)
25362=BindingResolver:resolveImport(ImportDeclaration)
25363=BindingResolver:findDeclaringNode(IBinding)
25364=BindingResolver:getAnnotationInstance(org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding)
25365=BindingResolver:resolveMethod(MethodDeclaration)
25366=BindingResolver:getCorrespondingNode(ASTNode)
25367=BindingResolver:getMethodBinding(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
25368=BindingResolver:resolveConstructor(SuperConstructorInvocation)
25369=BindingResolver:resolveType(AnnotationTypeDeclaration)
25370=BindingResolver:resolveType(Type)
25371=BindingResolver:resolveConstructor(ConstructorInvocation)
25372=BindingResolver:isResolvedTypeInferredFromExpectedType(MethodInvocation)
25373=BindingResolver:resolveMember(AnnotationTypeMemberDeclaration)
25374=BindingResolver:resolveConstructor(ClassInstanceCreation)
25375=BindingResolver:lookupEnvironment()
25376=BindingResolver:findDeclaringNode(String)
25377=BindingResolver:recordScope(ASTNode, BlockScope)
25378=BindingResolver:resolveAnnotation(Annotation)
25379=BindingResolver:resolveField(FieldAccess)
25380=BindingResolver:scope()
25381=BindingResolver:getTypeBinding(VariableDeclaration)
25382=BindingResolver:resolveType(TypeDeclaration)
25383=BindingResolver:resolveArrayType(ITypeBinding, int)
25384=BindingResolver:BindingResolver()
25385=BindingResolver:resolveReference(MemberRef)
25386=BindingResolver:resolveVariable(EnumConstantDeclaration)
25387=BindingResolver:getMemberValuePairBinding(ElementValuePair)
25388=BindingResolver:resolveTypeParameter(TypeParameter)
25389=BindingResolver:resolveMethod(SuperMethodInvocation)
25390=BindingResolver:isResolvedTypeInferredFromExpectedType(SuperMethodInvocation)
25391=BindingResolver:findDeclaringNode(IAnnotationBinding)
25392=BindingResolver:resolveMethod(MethodReference)
25393=BindingResolver:resolveType(AnonymousClassDeclaration)
25394=A:foo()
25395=FormatterCommentsBugsTest:testBug217108f()
25396=FormatterCommentsBugsTest:testBug254998c()
25397=FormatterCommentsBugsTest:testBug198963_Spaces04()
25398=FormatterCommentsBugsTest:testBug232285d()
25399=FormatterCommentsBugsTest:testBug234583h()
25400=FormatterCommentsBugsTest:testBug260381_wksp2_01c()
25401=FormatterCommentsBugsTest:testBug239130_196124()
25402=FormatterCommentsBugsTest:testBug304705b()
25403=FormatterCommentsBugsTest:testBug313651_03()
25404=FormatterCommentsBugsTest:testBug232768_Javadoc03()
25405=FormatterCommentsBugsTest:testBug232768_Line02()
25406=FormatterCommentsBugsTest:testBug305518_wksp2_02()
25407=FormatterCommentsBugsTest:testBug239130_96696_javadoc_default()
25408=FormatterCommentsBugsTest:testBug232466a()
25409=FormatterCommentsBugsTest:testBug260381_wksp1_01()
25410=FormatterCommentsBugsTest:testBug273619a()
25411=FormatterCommentsBugsTest:testBug475294b()
25412=FormatterCommentsBugsTest:testBug260381d()
25413=FormatterCommentsBugsTest:testBug232768_Block03()
25414=FormatterCommentsBugsTest:testBug198963_Tabs01()
25415=FormatterCommentsBugsTest:testBug217108d()
25416=FormatterCommentsBugsTest:_testBug204091()
25417=FormatterCommentsBugsTest:testBug198963_Spaces02()
25418=FormatterCommentsBugsTest:testBug232285f()
25419=FormatterCommentsBugsTest:testBug484957()
25420=FormatterCommentsBugsTest:testBug234583_Bug237592()
25421=FormatterCommentsBugsTest:testBug251133b()
25422=FormatterCommentsBugsTest:testBug300379b()
25423=FormatterCommentsBugsTest:testBug300379()
25424=FormatterCommentsBugsTest:testBug270209_Javadoc02()
25425=FormatterCommentsBugsTest:testBug239130_196124_default()
25426=FormatterCommentsBugsTest:testBug309835_wksp1_02()
25427=FormatterCommentsBugsTest:testBug232768_Javadoc05()
25428=FormatterCommentsBugsTest:testBug260011_11()
25429=FormatterCommentsBugsTest:testBug256799_Block01()
25430=FormatterCommentsBugsTest:testBug232768_Line04()
25431=FormatterCommentsBugsTest:testBug260381b()
25432=FormatterCommentsBugsTest:testBug232768_Block05()
25433=FormatterCommentsBugsTest:testBug260276b()
25434=FormatterCommentsBugsTest:testBug217108b()
25435=FormatterCommentsBugsTest:testBug313651_02b()
25436=FormatterCommentsBugsTest:testBug239130_96696_block_default()
25437=FormatterCommentsBugsTest:suite()
25438=FormatterCommentsBugsTest:testBug237453b()
25439=FormatterCommentsBugsTest:testBug232285h()
25440=FormatterCommentsBugsTest:testBug234583d()
25441=FormatterCommentsBugsTest:testBug479292b()
25442=FormatterCommentsBugsTest:testBug313651_03c()
25443=FormatterCommentsBugsTest:testBug236230b()
25444=FormatterCommentsBugsTest:testBug260274b()
25445=FormatterCommentsBugsTest:testBug305371c()
25446=FormatterCommentsBugsTest:testBug309835c()
25447=FormatterCommentsBugsTest:testBug198963_Mixed05()
25448=FormatterCommentsBugsTest:testBug260011_02()
25449=FormatterCommentsBugsTest:testBug239719()
25450=FormatterCommentsBugsTest:testBug232768_Line06()
25451=FormatterCommentsBugsTest:testBug260381h()
25452=FormatterCommentsBugsTest:testBug267551()
25453=FormatterCommentsBugsTest:testBug236406_CDB1()
25454=FormatterCommentsBugsTest:testBug232788_Tabs02()
25455=FormatterCommentsBugsTest:testBug230944a()
25456=FormatterCommentsBugsTest:testBug237453d()
25457=FormatterCommentsBugsTest:testBug232285j()
25458=FormatterCommentsBugsTest:testBug237942c()
25459=FormatterCommentsBugsTest:testBug234583f()
25460=FormatterCommentsBugsTest:testBug260274d()
25461=FormatterCommentsBugsTest:testBug198963_Mixed03()
25462=FormatterCommentsBugsTest:testBug260011_04()
25463=FormatterCommentsBugsTest:testBug313651_01()
25464=FormatterCommentsBugsTest:testBug232768b()
25465=FormatterCommentsBugsTest:testBug232768_Line08()
25466=FormatterCommentsBugsTest:testBug280255()
25467=FormatterCommentsBugsTest:testBug232768_Block01()
25468=FormatterCommentsBugsTest:testBug239130_96696_block_clearBlankLines()
25469=FormatterCommentsBugsTest:testBug260381f()
25470=FormatterCommentsBugsTest:testBug295825()
25471=FormatterCommentsBugsTest:testBug260381_wksp2_08()
25472=FormatterCommentsBugsTest:testBug238920c()
25473=FormatterCommentsBugsTest:testBug260798b()
25474=FormatterCommentsBugsTest:testBug260011_05()
25475=FormatterCommentsBugsTest:testBug474011()
25476=FormatterCommentsBugsTest:testBug232788_Mixed01()
25477=FormatterCommentsBugsTest:testBug231297d()
25478=FormatterCommentsBugsTest:testBug236406_ST2()
25479=FormatterCommentsBugsTest:testBug270209_Block03()
25480=FormatterCommentsBugsTest:testBug475294()
25481=FormatterCommentsBugsTest:testBug260381k()
25482=FormatterCommentsBugsTest:testBug260274f()
25483=FormatterCommentsBugsTest:testBug251133h()
25484=FormatterCommentsBugsTest:testBug198963_Mixed01()
25485=FormatterCommentsBugsTest:testBug232788_Tabs03()
25486=FormatterCommentsBugsTest:testBug479469()
25487=FormatterCommentsBugsTest:testBug280616()
25488=FormatterCommentsBugsTest:testBug313651_01c()
25489=FormatterCommentsBugsTest:testBug237453e()
25490=FormatterCommentsBugsTest:testBug260381_wksp2_06()
25491=FormatterCommentsBugsTest:testBug233259a()
25492=FormatterCommentsBugsTest:testBug236230e()
25493=FormatterCommentsBugsTest:testBug231297()
25494=FormatterCommentsBugsTest:testBug280255b()
25495=FormatterCommentsBugsTest:testBug256799_Line01()
25496=FormatterCommentsBugsTest:testBug313651_wksp3_01()
25497=FormatterCommentsBugsTest:testBug260011_07()
25498=FormatterCommentsBugsTest:testBug196308c()
25499=FormatterCommentsBugsTest:testBug232788_Spaces02()
25500=FormatterCommentsBugsTest:testBug238090()
25501=FormatterCommentsBugsTest:testBug260381i()
25502=FormatterCommentsBugsTest:testBug239130_default()
25503=FormatterCommentsBugsTest:testBug234583b()
25504=FormatterCommentsBugsTest:testBug260274h()
25505=FormatterCommentsBugsTest:testBug267658b()
25506=FormatterCommentsBugsTest:testBug237453g()
25507=FormatterCommentsBugsTest:testBug236230c()
25508=FormatterCommentsBugsTest:testBug260381_wksp2_04()
25509=FormatterCommentsBugsTest:testBug233259c()
25510=FormatterCommentsBugsTest:testBug315732()
25511=FormatterCommentsBugsTest:testBug305371b()
25512=FormatterCommentsBugsTest:testBug260011_09()
25513=FormatterCommentsBugsTest:testBug238210_X02()
25514=FormatterCommentsBugsTest:testBug236406_EX2()
25515=FormatterCommentsBugsTest:testBug287833b()
25516=FormatterCommentsBugsTest:testBug233228d()
25517=FormatterCommentsBugsTest:testBug237051()
25518=FormatterCommentsBugsTest:testBug239130_clearBlankLines_preserveLineBreaks()
25519=FormatterCommentsBugsTest:testBug239130_96696_javadoc_clearBlankLines()
25520=FormatterCommentsBugsTest:testBug251133d()
25521=FormatterCommentsBugsTest:testBug267658()
25522=FormatterCommentsBugsTest:testBug237453i()
25523=FormatterCommentsBugsTest:testBug305830d()
25524=FormatterCommentsBugsTest:testBug260381_wksp2_02()
25525=FormatterCommentsBugsTest:testBug198963_Tabs05()
25526=FormatterCommentsBugsTest:testBug237051c()
25527=FormatterCommentsBugsTest:testBug231297b()
25528=FormatterCommentsBugsTest:testBug254998()
25529=FormatterCommentsBugsTest:testBug270209_Block01()
25530=FormatterCommentsBugsTest:testBug198963_Spaces06()
25531=FormatterCommentsBugsTest:testBug233228b()
25532=FormatterCommentsBugsTest:testBug232768_Line01()
25533=FormatterCommentsBugsTest:testBug93459()
25534=FormatterCommentsBugsTest:testBug260798()
25535=FormatterCommentsBugsTest:testBug471918()
25536=FormatterCommentsBugsTest:testBug232285b()
25537=FormatterCommentsBugsTest:testBug251133f()
25538=FormatterCommentsBugsTest:testBug251133()
25539=FormatterCommentsBugsTest:testBug198963_Tabs03()
25540=FormatterCommentsBugsTest:testBug305830b()
25541=FormatterCommentsBugsTest:testBug305830()
25542=FormatterCommentsBugsTest:testBug305371()
25543=FormatterCommentsBugsTest:testBug270209_Javadoc03()
25544=FormatterCommentsBugsTest:testBug239130_96696_javadoc_clearBlankLines_preserveLineBreaks()
25545=FormatterCommentsBugsTest:testBug313651_02()
25546=FormatterCommentsBugsTest:testBug232768_Javadoc02()
25547=FormatterCommentsBugsTest:testBug309835_wksp2_01()
25548=FormatterCommentsBugsTest:testBug305518_wksp2_01()
25549=FormatterCommentsBugsTest:testBug232466b()
25550=FormatterCommentsBugsTest:testBug232768_Line03()
25551=FormatterCommentsBugsTest:testBug273619b()
25552=FormatterCommentsBugsTest:testBug479474()
25553=FormatterCommentsBugsTest:testBug260381c()
25554=FormatterCommentsBugsTest:testBug198963_Tabs02()
25555=FormatterCommentsBugsTest:testBug232768_Block04()
25556=FormatterCommentsBugsTest:testBug236230()
25557=FormatterCommentsBugsTest:testBug198963_Spaces05()
25558=FormatterCommentsBugsTest:testBug217108g()
25559=FormatterCommentsBugsTest:testBug232285e()
25560=FormatterCommentsBugsTest:testBug233228a()
25561=FormatterCommentsBugsTest:testBug234583g()
25562=FormatterCommentsBugsTest:testBug233011()
25563=FormatterCommentsBugsTest:testBug239130_clearBlankLines()
25564=FormatterCommentsBugsTest:testBug270209_Javadoc01()
25565=FormatterCommentsBugsTest:testBug232768_Javadoc04()
25566=FormatterCommentsBugsTest:testBug239130_preserveLineBreaks()
25567=FormatterCommentsBugsTest:testBug260011_10()
25568=FormatterCommentsBugsTest:testBug305518_wksp2_03()
25569=FormatterCommentsBugsTest:testBug232488()
25570=FormatterCommentsBugsTest:testBug232768_Line05()
25571=FormatterCommentsBugsTest:testBug232768_Block06()
25572=FormatterCommentsBugsTest:testBug260276c()
25573=FormatterCommentsBugsTest:testBug260381a()
25574=FormatterCommentsBugsTest:testBug279359()
25575=FormatterCommentsBugsTest:testBug217108e()
25576=FormatterCommentsBugsTest:testBug254998b()
25577=FormatterCommentsBugsTest:testBug198963_Spaces03()
25578=FormatterCommentsBugsTest:testBug232285g()
25579=FormatterCommentsBugsTest:testBug234583i()
25580=FormatterCommentsBugsTest:testBug234336()
25581=FormatterCommentsBugsTest:testBug251133a()
25582=FormatterCommentsBugsTest:testBug239719b()
25583=FormatterCommentsBugsTest:testBug260011_01()
25584=FormatterCommentsBugsTest:testBug232768_Javadoc06()
25585=FormatterCommentsBugsTest:testBug309835_wksp1_01()
25586=FormatterCommentsBugsTest:testBug256799_Block02()
25587=FormatterCommentsBugsTest:testBug232768_Line07()
25588=FormatterCommentsBugsTest:testBug234583_Bug239447()
25589=FormatterCommentsBugsTest:testBug260381g()
25590=FormatterCommentsBugsTest:testBug480029()
25591=FormatterCommentsBugsTest:testBug260381_wksp2_03b()
25592=FormatterCommentsBugsTest:testBug348338()
25593=FormatterCommentsBugsTest:getOutputFolder()
25594=FormatterCommentsBugsTest:testBug198963_Mixed06()
25595=FormatterCommentsBugsTest:testBug217108c()
25596=FormatterCommentsBugsTest:testBug304705()
25597=FormatterCommentsBugsTest:testBug238853()
25598=FormatterCommentsBugsTest:testBug198963_Spaces01()
25599=FormatterCommentsBugsTest:testBug232285i()
25600=FormatterCommentsBugsTest:testBug237942d()
25601=FormatterCommentsBugsTest:testBug313651_03b()
25602=FormatterCommentsBugsTest:testBug234583c()
25603=FormatterCommentsBugsTest:testBug305371d()
25604=FormatterCommentsBugsTest:testBug305518()
25605=FormatterCommentsBugsTest:testBug309835b()
25606=FormatterCommentsBugsTest:testBug121728()
25607=FormatterCommentsBugsTest:testBug237453a()
25608=FormatterCommentsBugsTest:testBug232788_Mixed03()
25609=FormatterCommentsBugsTest:testBug260011_03()
25610=FormatterCommentsBugsTest:testBug232768a()
25611=FormatterCommentsBugsTest:testBug260381_wksp2_09()
25612=FormatterCommentsBugsTest:testBug313651_01b()
25613=FormatterCommentsBugsTest:testBug260381e()
25614=FormatterCommentsBugsTest:testBug236406_CDB2()
25615=FormatterCommentsBugsTest:testBug232768_Block02()
25616=FormatterCommentsBugsTest:testBug238920b()
25617=FormatterCommentsBugsTest:testBug217108a()
25618=FormatterCommentsBugsTest:testBug232788_Tabs01()
25619=FormatterCommentsBugsTest:testBug313651_02c()
25620=FormatterCommentsBugsTest:testBug311864()
25621=FormatterCommentsBugsTest:testBug237453c()
25622=FormatterCommentsBugsTest:testBug260276()
25623=FormatterCommentsBugsTest:testBug237942b()
25624=FormatterCommentsBugsTest:testBug309835d()
25625=FormatterCommentsBugsTest:testBug234583e()
25626=FormatterCommentsBugsTest:testBug260274c()
25627=FormatterCommentsBugsTest:testBug260381_wksp2_01b()
25628=FormatterCommentsBugsTest:testBug198963_Mixed04()
25629=FormatterCommentsBugsTest:testBug241687()
25630=FormatterCommentsBugsTest:testBug260011()
25631=FormatterCommentsBugsTest:testBug239130_96696_block_clearBlankLines_preserveLineBreaks()
25632=FormatterCommentsBugsTest:testBug237942a()
25633=FormatterCommentsBugsTest:testBug230944b()
25634=FormatterCommentsBugsTest:testBug237453f()
25635=FormatterCommentsBugsTest:testBug231263()
25636=FormatterCommentsBugsTest:testBug238920()
25637=FormatterCommentsBugsTest:testBug196308()
25638=FormatterCommentsBugsTest:testBug236230f()
25639=FormatterCommentsBugsTest:testBug260381_wksp2_07()
25640=FormatterCommentsBugsTest:testBug233259b()
25641=FormatterCommentsBugsTest:testBug233224()
25642=FormatterCommentsBugsTest:testBug260798c()
25643=FormatterCommentsBugsTest:testBug237051d()
25644=FormatterCommentsBugsTest:testBug232788_Mixed02()
25645=FormatterCommentsBugsTest:testBug260011_06()
25646=FormatterCommentsBugsTest:testBug228652()
25647=FormatterCommentsBugsTest:testBug236406_ST1()
25648=FormatterCommentsBugsTest:testBug232788_Spaces03()
25649=FormatterCommentsBugsTest:testBug270209_Block02()
25650=FormatterCommentsBugsTest:testBug260274()
25651=FormatterCommentsBugsTest:testBug479292()
25652=FormatterCommentsBugsTest:testBug260274e()
25653=FormatterCommentsBugsTest:testBug198963_Mixed02()
25654=FormatterCommentsBugsTest:testBug251133g()
25655=FormatterCommentsBugsTest:testBug237453h()
25656=FormatterCommentsBugsTest:testBug241345()
25657=FormatterCommentsBugsTest:testBug260381_wksp2_05()
25658=FormatterCommentsBugsTest:testBug236230d()
25659=FormatterCommentsBugsTest:testBug480030()
25660=FormatterCommentsBugsTest:testBug233259d()
25661=FormatterCommentsBugsTest:testBug256799_Line02()
25662=FormatterCommentsBugsTest:testBug313651_wksp3_02()
25663=FormatterCommentsBugsTest:testBug470986()
25664=FormatterCommentsBugsTest:testBug260011_08()
25665=FormatterCommentsBugsTest:testBug260011_09b()
25666=FormatterCommentsBugsTest:testBug232788_Spaces01()
25667=FormatterCommentsBugsTest:testBug238210_X01()
25668=FormatterCommentsBugsTest:testBug260381j()
25669=FormatterCommentsBugsTest:testBug196308b()
25670=FormatterCommentsBugsTest:testBug309835()
25671=FormatterCommentsBugsTest:testBug234583a()
25672=FormatterCommentsBugsTest:testBug260274g()
25673=FormatterCommentsBugsTest:FormatterCommentsBugsTest(String)
25674=FormatterCommentsBugsTest:testBug305281()
25675=FormatterCommentsBugsTest:testBug260381_wksp2_03()
25676=FormatterCommentsBugsTest:testBug198963_Tabs06()
25677=FormatterCommentsBugsTest:testBug260381()
25678=FormatterCommentsBugsTest:testBug239941()
25679=FormatterCommentsBugsTest:testBug240686()
25680=FormatterCommentsBugsTest:testBug231297a()
25681=FormatterCommentsBugsTest:testBug238210_X03()
25682=FormatterCommentsBugsTest:testBug471062()
25683=FormatterCommentsBugsTest:testBug287833a()
25684=FormatterCommentsBugsTest:testBug260274i()
25685=FormatterCommentsBugsTest:testBug233228e()
25686=FormatterCommentsBugsTest:testBug251133c()
25687=FormatterCommentsBugsTest:testBug231263a()
25688=FormatterCommentsBugsTest:testBug238210()
25689=FormatterCommentsBugsTest:testBug232285a()
25690=FormatterCommentsBugsTest:testBug280061()
25691=FormatterCommentsBugsTest:testBug217108h()
25692=FormatterCommentsBugsTest:testBug305830c()
25693=FormatterCommentsBugsTest:testBug260381_wksp2_01()
25694=FormatterCommentsBugsTest:testBug198963_Tabs04()
25695=FormatterCommentsBugsTest:testBug315577()
25696=FormatterCommentsBugsTest:testBug237051b()
25697=FormatterCommentsBugsTest:testBug232768_Javadoc01()
25698=FormatterCommentsBugsTest:testBug231297c()
25699=FormatterCommentsBugsTest:testBug233228c()
25700=FormatterCommentsBugsTest:testBug287833c()
25701=FormatterCommentsBugsTest:testBug236406_EX1()
25702=FormatterCommentsBugsTest:testBug232285c()
25703=FormatterCommentsBugsTest:testBug251133e()
25704=OR_OR_Expression:resolveType(BlockScope)
25705=OR_OR_Expression:OR_OR_Expression(Expression, Expression, int)
25706=OR_OR_Expression:isCompactableOperation()
25707=OR_OR_Expression:generateOptimizedBoolean(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
25708=OR_OR_Expression:generateCode(BlockScope, CodeStream, boolean)
25709=OR_OR_Expression:traverse(ASTVisitor, BlockScope)
25710=OR_OR_Expression:analyseCode(BlockScope, FlowContext, FlowInfo)
25711=A:foo()
25712=Test:test()
25713=IAnnotation:getTypeIndex()
25714=IAnnotation:getTypeName()
25715=IAnnotation:getComponentsNumber()
25716=IAnnotation:getComponents()
25717=PackageDeclaration:equals(Object)
25718=PackageDeclaration:getElementType()
25719=PackageDeclaration:getPrimaryElement(boolean)
25720=PackageDeclaration:getElementName()
25721=PackageDeclaration:toStringInfo(int, StringBuffer, Object, boolean)
25722=PackageDeclaration:getNameRange()
25723=PackageDeclaration:getHandleMementoDelimiter()
25724=PackageDeclaration:PackageDeclaration(CompilationUnit, String)
25725=ClassFileStruct:i2At(byte[], int, int)
25726=ClassFileStruct:floatAt(byte[], int, int)
25727=ClassFileStruct:i1At(byte[], int, int)
25728=ClassFileStruct:u2At(byte[], int, int)
25729=ClassFileStruct:utf8At(byte[], int, int, int)
25730=ClassFileStruct:doubleAt(byte[], int, int)
25731=ClassFileStruct:equals(char[], char[])
25732=ClassFileStruct:u4At(byte[], int, int)
25733=ClassFileStruct:i4At(byte[], int, int)
25734=ClassFileStruct:i8At(byte[], int, int)
25735=ClassFileStruct:u1At(byte[], int, int)
25736=StandAloneASTParserTest:runConversion(int, String, boolean, boolean, boolean, String)
25737=StandAloneASTParserTest:test6()
25738=StandAloneASTParserTest:testBug480545()
25739=StandAloneASTParserTest:testBug415066_002()
25740=StandAloneASTParserTest:test3()
25741=StandAloneASTParserTest:test1()
25742=StandAloneASTParserTest:StandAloneASTParserTest(String)
25743=StandAloneASTParserTest:testBug461250()
25744=StandAloneASTParserTest:test7()
25745=StandAloneASTParserTest:testBug465048()
25746=StandAloneASTParserTest:testBug415066_001()
25747=StandAloneASTParserTest:test5()
25748=StandAloneASTParserTest:test4()
25749=StandAloneASTParserTest:test2()
25750=StandAloneASTParserTest:testBug493336_001()
25751=MarkerInfo:getSeverity()
25752=MarkerInfo:MarkerInfo(int, int, Severity, String, int)
25753=MarkerInfo:isError()
25754=MarkerInfo:copyIntoMarker(IMarker)
25755=Test:main(String[])
25756=X01d:foo()
25757=AnnotationProcessorTests:testBug463062()
25758=AnnotationProcessorTests:testBug317216()
25759=AnnotationProcessorTests:testBug443769()
25760=AnnotationProcessorTests:testBug415274()
25761=AnnotationProcessorTests:testBug340635()
25762=AnnotationProcessorTests:DiagnosticReport:DiagnosticReport()
25763=AnnotationProcessorTests:testBug471995()
25764=AnnotationProcessorTests:DiagnosticReport:clear()
25765=AnnotationProcessorTests:testBug493837()
25766=AnnotationProcessorTests:DiagnosticReport:getErrorAt(int)
25767=AnnotationProcessorTests:DiagnosticReport:toString()
25768=AnnotationProcessorTests:DiagnosticReport:report(Diagnostic<? extends S>)
25769=AnnotationProcessorTests:testBug456986()
25770=AnnotationProcessorTests:setUp()
25771=BooleanLiteral:booleanValue()
25772=BooleanLiteral:internalStructuralPropertiesForType(int)
25773=BooleanLiteral:getNodeType0()
25774=BooleanLiteral:treeSize()
25775=BooleanLiteral:internalGetSetBooleanProperty(SimplePropertyDescriptor, boolean, boolean)
25776=BooleanLiteral:clone0(AST)
25777=BooleanLiteral:accept0(ASTVisitor)
25778=BooleanLiteral:setBooleanValue(boolean)
25779=BooleanLiteral:memSize()
25780=BooleanLiteral:subtreeMatch0(ASTMatcher, Object)
25781=BooleanLiteral:propertyDescriptors(int)
25782=BooleanLiteral:BooleanLiteral(AST)
25783=X14a:foo()
25784=APITests:testMessagerAPI()
25785=APITests:suite()
25786=APITests:tearDown()
25787=APITests:APITests(String)
25788=APITests:LogListener:logging(IStatus, String)
25789=APITests:setUp()
25790=APITests:LogListener:clear()
25791=APITests:testAptUtil()
25792=APITests:LogListener:getList()
25793=APITests:checkMessagerAnnotationLogEntry(String, int, int)
25794=NonFatalErrorTest:testImportUnresolved()
25795=NonFatalErrorTest:test003()
25796=NonFatalErrorTest:test005()
25797=NonFatalErrorTest:test001()
25798=NonFatalErrorTest:testClass()
25799=NonFatalErrorTest:testPackageConflict()
25800=NonFatalErrorTest:testImportStaticProblems()
25801=NonFatalErrorTest:test006()
25802=NonFatalErrorTest:test002()
25803=NonFatalErrorTest:testImportUnresolved_fatal()
25804=NonFatalErrorTest:test004()
25805=NonFatalErrorTest:NonFatalErrorTest(String)
25806=NonFatalErrorTest:test007()
25807=NonFatalErrorTest:testImportVariousProblems()
25808=NonFatalErrorTest:suite()
25809=ErrorType:getEnvironment()
25810=ErrorType:ErrorType(String)
25811=ErrorType:ErrorClass:ErrorClass(String)
25812=ErrorType:kind()
25813=ErrorType:ErrorArrayType:ErrorArrayType(String, int)
25814=ErrorType:getContainingType()
25815=ErrorType:ErrorArrayType:getComponentType()
25816=ErrorType:getSuperinterfaces()
25817=ErrorType:toString()
25818=ErrorType:getActualTypeArguments()
25819=ErrorType:isSubTypeCompatible(EclipseMirrorType)
25820=ErrorType:ErrorArrayType:getDeclaration()
25821=ErrorType:ErrorArrayType:accept(TypeVisitor)
25822=ErrorType:ErrorAnnotation:getDeclaration()
25823=ErrorType:ErrorAnnotation:accept(TypeVisitor)
25824=ErrorType:ErrorInterface:accept(TypeVisitor)
25825=ErrorType:ErrorClass:getSuperclass()
25826=ErrorType:ErrorInterface:getDeclaration()
25827=ErrorType:ErrorAnnotation:ErrorAnnotation(String)
25828=ErrorType:ErrorInterface:ErrorInterface(String)
25829=ErrorType:getTypeBinding()
25830=ErrorType:accept(TypeVisitor)
25831=ErrorType:ErrorClass:accept(TypeVisitor)
25832=ErrorType:ErrorClass:getDeclaration()
25833=ErrorType:isAssignmentCompatible(EclipseMirrorType)
25834=ErrorType:ErrorArrayType:toString()
25835=PrimitiveType:internalGetSetObjectProperty(SimplePropertyDescriptor, boolean, Object)
25836=PrimitiveType:setPrimitiveTypeCode(PrimitiveType.Code)
25837=PrimitiveType:clone0(AST)
25838=PrimitiveType:getNodeType0()
25839=PrimitiveType:internalGetChildListProperty(ChildListPropertyDescriptor)
25840=PrimitiveType:memSize()
25841=PrimitiveType:toCode(String)
25842=PrimitiveType:Code:toString()
25843=PrimitiveType:treeSize()
25844=PrimitiveType:subtreeMatch0(ASTMatcher, Object)
25845=PrimitiveType:PrimitiveType(AST)
25846=PrimitiveType:Code:Code(String)
25847=PrimitiveType:internalAnnotationsProperty()
25848=PrimitiveType:internalStructuralPropertiesForType(int)
25849=PrimitiveType:propertyDescriptors(int)
25850=PrimitiveType:getPrimitiveTypeCode()
25851=PrimitiveType:accept0(ASTVisitor)
25852=Foo:bar()
25853=CompletionContextTests:test0108()
25854=CompletionContextTests:test0063()
25855=CompletionContextTests:test0172()
25856=CompletionContextTests:test0052()
25857=CompletionContextTests:test0098()
25858=CompletionContextTests:test0119()
25859=CompletionContextTests:setUpSuite()
25860=CompletionContextTests:test0085()
25861=CompletionContextTests:test0150()
25862=CompletionContextTests:test0074()
25863=CompletionContextTests:test0161()
25864=CompletionContextTests:test0065()
25865=CompletionContextTests:test0174()
25866=CompletionContextTests:test0054()
25867=CompletionContextTests:test0089()
25868=CompletionContextTests:test0041()
25869=CompletionContextTests:test0087()
25870=CompletionContextTests:test0152()
25871=CompletionContextTests:test0030()
25872=CompletionContextTests:test0076()
25873=CompletionContextTests:test0163()
25874=CompletionContextTests:test0104()
25875=CompletionContextTests:test0094()
25876=CompletionContextTests:test0115()
25877=CompletionContextTests:test0081()
25878=CompletionContextTests:test0128()
25879=CompletionContextTests:test0017()
25880=CompletionContextTests:test0070()
25881=CompletionContextTests:test0139()
25882=CompletionContextTests:test0006()
25883=CompletionContextTests:test0061()
25884=CompletionContextTests:test0106()
25885=CompletionContextTests:test0170()
25886=CompletionContextTests:test0096()
25887=CompletionContextTests:test0050()
25888=CompletionContextTests:test0117()
25889=CompletionContextTests:test0083()
25890=CompletionContextTests:test0019()
25891=CompletionContextTests:test0072()
25892=CompletionContextTests:test0008()
25893=CompletionContextTests:test0100()
25894=CompletionContextTests:test0146()
25895=CompletionContextTests:test0037()
25896=CompletionContextTests:test0090()
25897=CompletionContextTests:test0157()
25898=CompletionContextTests:test0111()
25899=CompletionContextTests:test0026()
25900=CompletionContextTests:test0124()
25901=CompletionContextTests:test0013()
25902=CompletionContextTests:test0059()
25903=CompletionContextTests:test0135()
25904=CompletionContextTests:test0002()
25905=CompletionContextTests:test0048()
25906=CompletionContextTests:test0102()
25907=CompletionContextTests:test0148()
25908=CompletionContextTests:test0039()
25909=CompletionContextTests:test0092()
25910=CompletionContextTests:test0113()
25911=CompletionContextTests:test0159()
25912=CompletionContextTests:test0028()
25913=CompletionContextTests:test0126()
25914=CompletionContextTests:test0015()
25915=CompletionContextTests:test0137()
25916=CompletionContextTests:test0004()
25917=CompletionContextTests:test0044()
25918=CompletionContextTests:test0153()
25919=CompletionContextTests:test0079()
25920=CompletionContextTests:test0033()
25921=CompletionContextTests:test0164()
25922=CompletionContextTests:test0068()
25923=CompletionContextTests:test0020()
25924=CompletionContextTests:test0066()
25925=CompletionContextTests:test0166()
25926=CompletionContextTests:test0131()
25927=CompletionContextTests:test0055()
25928=CompletionContextTests:test0177()
25929=CompletionContextTests:test0142()
25930=CompletionContextTests:test0144()
25931=CompletionContextTests:test0035()
25932=CompletionContextTests:test0155()
25933=CompletionContextTests:test0120()
25934=CompletionContextTests:test0024()
25935=CompletionContextTests:test0022()
25936=CompletionContextTests:test0122()
25937=CompletionContextTests:suite()
25938=CompletionContextTests:test0168()
25939=CompletionContextTests:test0057()
25940=CompletionContextTests:test0011()
25941=CompletionContextTests:test0133()
25942=CompletionContextTests:test0046()
25943=CompletionContextTests:test0086()
25944=CompletionContextTests:test0040()
25945=CompletionContextTests:test0075()
25946=CompletionContextTests:test0160()
25947=CompletionContextTests:test0109()
25948=CompletionContextTests:test0062()
25949=CompletionContextTests:test0173()
25950=CompletionContextTests:test0097()
25951=CompletionContextTests:test0051()
25952=CompletionContextTests:test0042()
25953=CompletionContextTests:test0088()
25954=CompletionContextTests:test0151()
25955=CompletionContextTests:test0031()
25956=CompletionContextTests:test0077()
25957=CompletionContextTests:test0162()
25958=CompletionContextTests:test0064()
25959=CompletionContextTests:test0175()
25960=CompletionContextTests:test0053()
25961=CompletionContextTests:test0099()
25962=CompletionContextTests:test0140()
25963=CompletionContextTests:test0082()
25964=CompletionContextTests:test0127()
25965=CompletionContextTests:test0018()
25966=CompletionContextTests:test0071()
25967=CompletionContextTests:test0138()
25968=CompletionContextTests:test0007()
25969=CompletionContextTests:test0105()
25970=CompletionContextTests:test0093()
25971=CompletionContextTests:test0116()
25972=CompletionContextTests:test0029()
25973=CompletionContextTests:test0084()
25974=CompletionContextTests:test0129()
25975=CompletionContextTests:test0073()
25976=CompletionContextTests:test0009()
25977=CompletionContextTests:test0060()
25978=CompletionContextTests:test0107()
25979=CompletionContextTests:test0171()
25980=CompletionContextTests:test0095()
25981=CompletionContextTests:test0118()
25982=CompletionContextTests:test0123()
25983=CompletionContextTests:test0169()
25984=CompletionContextTests:test0014()
25985=CompletionContextTests:test0134()
25986=CompletionContextTests:test0003()
25987=CompletionContextTests:test0049()
25988=CompletionContextTests:test0101()
25989=CompletionContextTests:test0147()
25990=CompletionContextTests:test0036()
25991=CompletionContextTests:test0158()
25992=CompletionContextTests:test0112()
25993=CompletionContextTests:test0025()
25994=CompletionContextTests:test0080()
25995=CompletionContextTests:test0125()
25996=CompletionContextTests:test0016()
25997=CompletionContextTests:test0136()
25998=CompletionContextTests:test0005()
25999=CompletionContextTests:test0103()
26000=CompletionContextTests:test0149()
26001=CompletionContextTests:test0038()
26002=CompletionContextTests:test0091()
26003=CompletionContextTests:test0114()
26004=CompletionContextTests:test0027()
26005=CompletionContextTests:test0021()
26006=CompletionContextTests:test0176()
26007=CompletionContextTests:test0130()
26008=CompletionContextTests:test0056()
26009=CompletionContextTests:test0010()
26010=CompletionContextTests:test0141()
26011=CompletionContextTests:test0045()
26012=CompletionContextTests:test0043()
26013=CompletionContextTests:test0154()
26014=CompletionContextTests:test0078()
26015=CompletionContextTests:test0032()
26016=CompletionContextTests:test0165()
26017=CompletionContextTests:test0067()
26018=CompletionContextTests:test0167()
26019=CompletionContextTests:test0132()
26020=CompletionContextTests:test0012()
26021=CompletionContextTests:test0058()
26022=CompletionContextTests:CompletionContextTests(String)
26023=CompletionContextTests:test0143()
26024=CompletionContextTests:test0001()
26025=CompletionContextTests:test0047()
26026=CompletionContextTests:test0145()
26027=CompletionContextTests:test0110()
26028=CompletionContextTests:test0034()
26029=CompletionContextTests:test0156()
26030=CompletionContextTests:test0121()
26031=CompletionContextTests:test0023()
26032=CompletionContextTests:test0069()
26033=Test:g()
26034=Test:foo()
26035=X14b:foo()
26036=A:foo()
26037=A:run()
26038=A:k()
26039=X31:foo()
26040=DoubleLiteral:literalType(BlockScope)
26041=DoubleLiteral:traverse(ASTVisitor, BlockScope)
26042=DoubleLiteral:computeConstant()
26043=DoubleLiteral:DoubleLiteral(char[], int, int)
26044=DoubleLiteral:generateCode(BlockScope, CodeStream, boolean)
26045=Archive:flush()
26046=Archive:initialize()
26047=Archive:getTypes(String)
26048=Archive:contains(String)
26049=Archive:allPackages()
26050=Archive:toString()
26051=Archive:Archive(File)
26052=Archive:getArchiveFileObject(String, Charset)
26053=Archive:Archive()
26054=Archive:close()
26055=CompletionNodeFound:CompletionNodeFound(ASTNode, Scope)
26056=CompletionNodeFound:CompletionNodeFound(ASTNode, Binding, Scope, boolean)
26057=CompletionNodeFound:CompletionNodeFound(ASTNode, Scope, boolean)
26058=CompletionNodeFound:CompletionNodeFound(ASTNode, Binding, Scope)
26059=CompletionNodeFound:CompletionNodeFound()
26060=TT47209:TT47209(String)
26061=TT47209:m47209(int)
26062=ModelTester8Proc:process(Set<? extends TypeElement>, RoundEnvironment)
26063=ModelTester8Proc:round(Set<? extends TypeElement>, RoundEnvironment)
26064=ModelTester8Proc:init(ProcessingEnvironment)
26065=ModelTester8Proc:testMethodParameters(RoundEnvironment, Element, String, String)
26066=ModelTester8Proc:getSupportedSourceVersion()
26067=Test:main(String[])
26068=Messages:Messages()
26069=F:foo()
26070=firstClass:myMethod()
26071=RegressionTests:testBugzilla206591B()
26072=RegressionTests:testBugzilla104032()
26073=RegressionTests:RegressionTests(String)
26074=RegressionTests:testBugzilla206591A()
26075=RegressionTests:testBugzilla423254()
26076=RegressionTests:testBugzilla106541()
26077=RegressionTests:suite()
26078=RegressionTests:setUp()
26079=RegressionTests:testBugzilla120255()
26080=X:foo()
26081=BundleChain:BundleChain(ResourceBundle, ClassLoader, Locale, String)
26082=ForwardingStandardJavaFileManager:getJavaFileObjects(String)
26083=ForwardingStandardJavaFileManager:setLocation(Location, Iterable<? extends File>)
26084=ForwardingStandardJavaFileManager:getJavaFileObjectsFromStrings(Iterable<String>)
26085=ForwardingStandardJavaFileManager:ForwardingStandardJavaFileManager(T)
26086=ForwardingStandardJavaFileManager:getLocation(Location)
26087=ForwardingStandardJavaFileManager:getJavaFileObjectsFromFiles(Iterable<? extends File>)
26088=ForwardingStandardJavaFileManager:getJavaFileObjects(File)
26089=CodeStream:iaload()
26090=CodeStream:athrow()
26091=CodeStream:pop()
26092=CodeStream:generateSyntheticEnclosingInstanceValues(BlockScope, ReferenceBinding, Expression, ASTNode)
26093=CodeStream:ldc(float)
26094=CodeStream:aaload()
26095=CodeStream:iand()
26096=CodeStream:generateOuterAccess(Object[], ASTNode, Binding, Scope)
26097=CodeStream:putstatic(FieldBinding)
26098=CodeStream:load(LocalVariableBinding)
26099=CodeStream:load(TypeBinding, int)
26100=CodeStream:dup2_x2()
26101=CodeStream:ifle(Label)
26102=CodeStream:lconst_1()
26103=CodeStream:dup_x1()
26104=CodeStream:lookupswitch(CaseLabel, int[], int[], CaseLabel[])
26105=CodeStream:fstore_1()
26106=CodeStream:dup2()
26107=CodeStream:astore_1()
26108=CodeStream:writeSignedWord(int, int)
26109=CodeStream:reset(AbstractMethodDeclaration, ClassFile)
26110=CodeStream:fsub()
26111=CodeStream:iload_0()
26112=CodeStream:generateInlinedValue(int)
26113=CodeStream:initializeMaxLocals(MethodBinding)
26114=CodeStream:goto_w(Label)
26115=CodeStream:fconst_0()
26116=CodeStream:ishr()
26117=CodeStream:newJavaLangError()
26118=CodeStream:lload_0()
26119=CodeStream:invokevirtual(MethodBinding)
26120=CodeStream:fstore_3()
26121=CodeStream:ifeq(Label)
26122=CodeStream:faload()
26123=CodeStream:registerExceptionHandler(ExceptionLabel)
26124=CodeStream:generateInlinedValue(char)
26125=CodeStream:incrStackSize(int)
26126=CodeStream:daload()
26127=CodeStream:getfield(FieldBinding)
26128=CodeStream:lxor()
26129=CodeStream:storeObject(int)
26130=CodeStream:lstore_0()
26131=CodeStream:fastore()
26132=CodeStream:generateSyntheticBodyForConstructorAccess(SyntheticAccessMethodBinding)
26133=CodeStream:lload_2()
26134=CodeStream:aload_2()
26135=CodeStream:generateSyntheticBodyForFieldWriteAccess(SyntheticAccessMethodBinding)
26136=CodeStream:if_icmplt(Label)
26137=CodeStream:newArray(Scope, ArrayBinding)
26138=CodeStream:invokespecial(MethodBinding)
26139=CodeStream:i2c()
26140=CodeStream:dconst_1()
26141=CodeStream:ddiv()
26142=CodeStream:loadInt(int)
26143=CodeStream:fadd()
26144=CodeStream:lstore_2()
26145=CodeStream:fdiv()
26146=CodeStream:checkcast(TypeBinding)
26147=CodeStream:generateSyntheticBodyForMethodAccess(SyntheticAccessMethodBinding)
26148=CodeStream:if_icmpge(Label)
26149=CodeStream:f2i()
26150=CodeStream:multianewarray(TypeBinding, int)
26151=CodeStream:writeSignedShort(int)
26152=CodeStream:generateInlinedValue(boolean)
26153=CodeStream:record(LocalVariableBinding)
26154=CodeStream:lneg()
26155=CodeStream:dup()
26156=CodeStream:iinc(int, int)
26157=CodeStream:generateInlinedValue(byte)
26158=CodeStream:astore_3()
26159=CodeStream:lsub()
26160=CodeStream:iconst_0()
26161=CodeStream:dload_0()
26162=CodeStream:resetForProblemClinit(ClassFile)
26163=CodeStream:caload()
26164=CodeStream:jsr(Label)
26165=CodeStream:generateSyntheticOuterArgumentValues(BlockScope, ReferenceBinding, ASTNode)
26166=CodeStream:storeInt(int)
26167=CodeStream:d2i()
26168=CodeStream:newStringContatenation()
26169=CodeStream:imul()
26170=CodeStream:dstore_2()
26171=CodeStream:dconst_0()
26172=CodeStream:lload(int)
26173=CodeStream:istore_2()
26174=CodeStream:generateInlinedValue(long)
26175=CodeStream:dcmpg()
26176=CodeStream:dadd()
26177=CodeStream:resizeByteArray()
26178=CodeStream:dstore(int)
26179=CodeStream:generateClassLiteralAccessForType(TypeBinding, FieldBinding)
26180=CodeStream:iconst_2()
26181=CodeStream:generateCodeAttributeForProblemMethod(String)
26182=CodeStream:return_()
26183=CodeStream:addDefinitelyAssignedVariables(Scope, int)
26184=CodeStream:fmul()
26185=CodeStream:dstore_0()
26186=CodeStream:invokeStringConcatenationStringConstructor()
26187=CodeStream:iushr()
26188=CodeStream:aload_0()
26189=CodeStream:lastore()
26190=CodeStream:ifge(Label)
26191=CodeStream:iastore()
26192=CodeStream:fload_2()
26193=CodeStream:fload(int)
26194=CodeStream:iconst_4()
26195=CodeStream:invokeJavaLangAssertionErrorConstructor(int)
26196=CodeStream:updateLastRecordedEndPC(int)
26197=CodeStream:fcmpg()
26198=CodeStream:iload_2()
26199=CodeStream:lmul()
26200=CodeStream:writeSignedShort(int, int)
26201=CodeStream:sastore()
26202=CodeStream:fconst_2()
26203=CodeStream:istore(int)
26204=CodeStream:ldc(String)
26205=CodeStream:lushr()
26206=CodeStream:generateStringConcatenationAppend(BlockScope, Expression, Expression)
26207=CodeStream:isDefinitelyAssigned(Scope, int, LocalVariableBinding)
26208=CodeStream:nop()
26209=CodeStream:fload_0()
26210=CodeStream:fstore(int)
26211=CodeStream:l2d()
26212=CodeStream:dload_2()
26213=CodeStream:loadObject(int)
26214=CodeStream:lcmp()
26215=CodeStream:invokeinterface(MethodBinding)
26216=CodeStream:drem()
26217=CodeStream:ldc(int)
26218=CodeStream:ixor()
26219=CodeStream:if_icmpeq(Label)
26220=CodeStream:isub()
26221=CodeStream:if_acmpeq(Label)
26222=CodeStream:invokeClassForName()
26223=CodeStream:bastore()
26224=CodeStream:lor()
26225=CodeStream:i2l()
26226=CodeStream:land()
26227=CodeStream:fneg()
26228=CodeStream:invokeStringValueOf(int)
26229=CodeStream:swap(int, int, int, int)
26230=CodeStream:pop2()
26231=CodeStream:invokestatic(MethodBinding)
26232=CodeStream:l2f()
26233=CodeStream:dup2_x1()
26234=CodeStream:addVisibleLocalVariable(LocalVariableBinding)
26235=CodeStream:if_icmple(Label)
26236=CodeStream:f2l()
26237=CodeStream:newNoClassDefFoundError()
26238=CodeStream:tableswitch(CaseLabel, int, int, int[], int[], CaseLabel[])
26239=CodeStream:lreturn()
26240=CodeStream:fstore_0()
26241=CodeStream:iload(int)
26242=CodeStream:astore(int)
26243=CodeStream:idiv()
26244=CodeStream:dastore()
26245=CodeStream:astore_0()
26246=CodeStream:invokeStringConcatenationAppendForType(int)
26247=CodeStream:invokeStringConcatenationDefaultConstructor()
26248=CodeStream:i2f()
26249=CodeStream:lstore(int)
26250=CodeStream:removeNotDefinitelyAssignedVariables(Scope, int)
26251=CodeStream:lstore_3()
26252=CodeStream:dmul()
26253=CodeStream:frem()
26254=CodeStream:dup_x2()
26255=CodeStream:lload_1()
26256=CodeStream:aastore()
26257=CodeStream:iadd()
26258=CodeStream:ior()
26259=CodeStream:invokeJavaLangErrorConstructor()
26260=CodeStream:bipush(byte)
26261=CodeStream:fstore_2()
26262=CodeStream:ireturn()
26263=CodeStream:getContents()
26264=CodeStream:ineg()
26265=CodeStream:iload_1()
26266=CodeStream:fconst_1()
26267=CodeStream:freturn()
26268=CodeStream:ifnull(Label)
26269=CodeStream:lload_3()
26270=CodeStream:aload_3()
26271=CodeStream:CodeStream(ClassFile, long)
26272=CodeStream:iflt(Label)
26273=CodeStream:arrayAtPut(int, boolean)
26274=CodeStream:i2b()
26275=CodeStream:ldc(TypeBinding)
26276=CodeStream:recordPositionsFrom(int, int)
26277=CodeStream:generateImplicitConversion(int)
26278=CodeStream:dstore_3()
26279=CodeStream:ifgt(Label)
26280=CodeStream:aconst_null()
26281=CodeStream:lconst_0()
26282=CodeStream:i2s()
26283=CodeStream:dload(int)
26284=CodeStream:astore_2()
26285=CodeStream:ifne(Label)
26286=CodeStream:lshr()
26287=CodeStream:i2d()
26288=CodeStream:iconst_m1()
26289=CodeStream:jsr_w(Label)
26290=CodeStream:sort(int[], int, int, int[])
26291=CodeStream:updateLocalVariablesAttribute(int)
26292=CodeStream:invokeJavaUtilIteratorHasNext()
26293=CodeStream:d2l()
26294=CodeStream:aload(int)
26295=CodeStream:lstore_1()
26296=CodeStream:istore_0()
26297=CodeStream:ishl()
26298=CodeStream:dstore_1()
26299=CodeStream:store(LocalVariableBinding, boolean)
26300=CodeStream:f2d()
26301=CodeStream:fcmpl()
26302=CodeStream:saload()
26303=CodeStream:areturn()
26304=CodeStream:generateWideRevertedConditionalBranch(byte, Label)
26305=CodeStream:instance_of(TypeBinding)
26306=CodeStream:incrementTemp(LocalVariableBinding, int)
26307=CodeStream:newarray(int)
26308=CodeStream:newJavaLangAssertionError()
26309=CodeStream:invokeStringIntern()
26310=CodeStream:istore_1()
26311=CodeStream:lrem()
26312=CodeStream:monitorexit()
26313=CodeStream:getTYPE(int)
26314=CodeStream:goto_(Label)
26315=CodeStream:invokeJavaLangAssertionErrorDefaultConstructor()
26316=CodeStream:dload_1()
26317=CodeStream:putfield(FieldBinding)
26318=CodeStream:dneg()
26319=CodeStream:removeExceptionHandler(ExceptionLabel)
26320=CodeStream:dreturn()
26321=CodeStream:ldc2_w(long)
26322=CodeStream:if_acmpne(Label)
26323=CodeStream:toString()
26324=CodeStream:store(TypeBinding, int)
26325=CodeStream:aload_1()
26326=CodeStream:indexOfSameLineEntrySincePC(int, int)
26327=CodeStream:swap()
26328=CodeStream:sendOperator(int, int)
26329=CodeStream:fload_3()
26330=CodeStream:istore_3()
26331=CodeStream:if_icmpne(Label)
26332=CodeStream:l2i()
26333=CodeStream:arraylength()
26334=CodeStream:iconst_1()
26335=CodeStream:generateConstant(Constant, int)
26336=CodeStream:invokeNoClassDefFoundErrorStringConstructor()
26337=CodeStream:getstatic(FieldBinding)
26338=CodeStream:if_icmpgt(Label)
26339=CodeStream:insertionIndex(int[], int, int)
26340=CodeStream:castore()
26341=CodeStream:generateInlinedValue(double)
26342=CodeStream:addLabel(Label)
26343=CodeStream:ldc2_w(double)
26344=CodeStream:newWrapperFor(int)
26345=CodeStream:baload()
26346=CodeStream:laload()
26347=CodeStream:invokeJavaLangClassGetComponentType()
26348=CodeStream:invokeObjectGetClass()
26349=CodeStream:irem()
26350=CodeStream:dcmpl()
26351=CodeStream:fload_1()
26352=CodeStream:generateInlinedValue(short)
26353=CodeStream:writeUnsignedShort(int)
26354=CodeStream:ldiv()
26355=CodeStream:invokeStringConcatenationToString()
26356=CodeStream:generateSyntheticBodyForFieldReadAccess(SyntheticAccessMethodBinding)
26357=CodeStream:iconst_3()
26358=CodeStream:lshl()
26359=CodeStream:dsub()
26360=CodeStream:sipush(int)
26361=CodeStream:invokeJavaLangClassDesiredAssertionStatus()
26362=CodeStream:iload_3()
26363=CodeStream:new_(TypeBinding)
26364=CodeStream:generateInlinedValue(float)
26365=CodeStream:d2f()
26366=CodeStream:anewarray(TypeBinding)
26367=CodeStream:invokeThrowableGetMessage()
26368=CodeStream:arrayAt(int)
26369=CodeStream:ret(int)
26370=CodeStream:exitUserScope(BlockScope)
26371=CodeStream:invokeJavaUtilIteratorNext()
26372=CodeStream:ifnonnull(Label)
26373=CodeStream:init(ClassFile)
26374=CodeStream:iconst_5()
26375=CodeStream:decrStackSize(int)
26376=CodeStream:dload_3()
26377=CodeStream:ladd()
26378=CodeStream:monitorenter()
26379=CodeStream:writeSignedWord(int)
26380=CodeSnippetThisReference:genericTypeArguments()
26381=CodeSnippetThisReference:isSuperAccess()
26382=CodeSnippetThisReference:generateCode(BlockScope, CodeStream, boolean)
26383=CodeSnippetThisReference:checkAccess(BlockScope, ReferenceBinding)
26384=CodeSnippetThisReference:printExpression(int, StringBuffer)
26385=CodeSnippetThisReference:setDepth(int)
26386=CodeSnippetThisReference:setFieldIndex(int)
26387=CodeSnippetThisReference:isTypeAccess()
26388=CodeSnippetThisReference:resolveType(BlockScope)
26389=CodeSnippetThisReference:CodeSnippetThisReference(int, int, EvaluationContext, boolean)
26390=CodeSnippetThisReference:freshInferenceContext(Scope)
26391=CodeSnippetThisReference:setActualReceiverType(ReferenceBinding)
26392=Test1:test(MyMap<String, Test1>, String)
26393=A:foo()
26394=A:A(String)
26395=BootstrapMethodAttributeTest:testClass()
26396=BootstrapMethodAttributeTest:BootstrapMethodAttributeTest(String)
26397=BootstrapMethodAttributeTest:test001()
26398=BootstrapMethodAttributeTest:suite()
26399=A:f()
26400=ITrackedNodePosition:getLength()
26401=ITrackedNodePosition:getStartPosition()
26402=AssistMyStyleImpl:Factory:newAssistMyStyle()
26403=AssistMyStyle:Factory:newAssistMyStyle()
26404=AssistMyStyle:someMethod()
26405=AssistMyStyleImpl:anotherMethodWithLongNameToForceCodeformaterToBreakTheLine()
26406=GeneralConcept:anotherMethodWithLongNameToForceCodeformaterToBreakTheLine()
26407=AssistMyStyleImpl:someMethod()
26408=ParserTest:test015()
26409=ParserTest:test004()
26410=ParserTest:test026()
26411=ParserTest:test013()
26412=ParserTest:test002()
26413=ParserTest:test024()
26414=ParserTest:test022()
26415=ParserTest:test020()
26416=ParserTest:test019()
26417=ParserTest:test008()
26418=ParserTest:_test011()
26419=ParserTest:test017()
26420=ParserTest:test006()
26421=ParserTest:test028()
26422=ParserTest:test027()
26423=ParserTest:test014()
26424=ParserTest:test003()
26425=ParserTest:test025()
26426=ParserTest:test012()
26427=ParserTest:test001()
26428=ParserTest:test023()
26429=ParserTest:test010()
26430=ParserTest:test021()
26431=ParserTest:ParserTest(String)
26432=ParserTest:test009()
26433=ParserTest:testBug485477()
26434=ParserTest:test018()
26435=ParserTest:test007()
26436=ParserTest:test016()
26437=ParserTest:test005()
26438=RunAllJava8Tests:getConverterTestClasses()
26439=RunAllJava8Tests:getCompilerClasses()
26440=RunAllJava8Tests:tearDown()
26441=RunAllJava8Tests:RunAllJava8Tests(String)
26442=RunAllJava8Tests:getAllTestClasses()
26443=RunAllJava8Tests:suite()
26444=RunAllJava8Tests:addTestsToSuite(TestSuite, Class[])
26445=D:foo()
26446=R3:simple_name(Generic<Object>.MemberGeneric<Object>, Generic<Exception>.MemberGeneric<Exception>, Generic<? extends Throwable>.MemberGeneric<? extends Throwable>, Generic<? super RuntimeException>.MemberGeneric<? super RuntimeException>)
26447=R3:qualified_name()
26448=TargetInterface:isConnected()
26449=TargetInterface:getResult()
26450=TargetInterface:sendClasses(boolean, ClassFile[])
26451=TargetInterface:connect(String, int, int)
26452=TargetInterface:disconnect()
26453=Test:Test(String)
26454=ASTPositionsTest:setUpSuite()
26455=ASTPositionsTest:suite()
26456=ASTPositionsTest:test004()
26457=ASTPositionsTest:test002()
26458=ASTPositionsTest:sanityCheck(String, CompilationUnit)
26459=ASTPositionsTest:test001()
26460=ASTPositionsTest:ASTPositionsTest(String)
26461=ASTPositionsTest:tearDown()
26462=ASTPositionsTest:test005()
26463=ASTPositionsTest:test003()
26464=ClassFileStruct:doubleAt(int)
26465=ClassFileStruct:u2At(int)
26466=ClassFileStruct:ClassFileStruct(byte[], int[], int)
26467=ClassFileStruct:u4At(int)
26468=ClassFileStruct:u1At(int)
26469=ClassFileStruct:reset()
26470=ClassFileStruct:i4At(int)
26471=ClassFileStruct:floatAt(int)
26472=ClassFileStruct:utf8At(int, int)
26473=ClassFileStruct:i8At(int)
26474=WorkQueue:addAll(SourceFile[])
26475=WorkQueue:toString()
26476=WorkQueue:isWaiting(SourceFile)
26477=WorkQueue:add(SourceFile)
26478=WorkQueue:finished(SourceFile)
26479=WorkQueue:isCompiled(SourceFile)
26480=WorkQueue:clear()
26481=WorkQueue:WorkQueue()
26482=SimpleNameVector:remove(char[])
26483=SimpleNameVector:addAll(char[][])
26484=SimpleNameVector:add(char[])
26485=SimpleNameVector:elementAt(int)
26486=SimpleNameVector:copyInto(Object[])
26487=SimpleNameVector:removeAll()
26488=SimpleNameVector:contains(char[])
26489=SimpleNameVector:SimpleNameVector()
26490=SimpleNameVector:size()
26491=SimpleNameVector:toString()
26492=A:foo()
26493=X:foo(Z)
26494=A:getDocument()
26495=EnumDeclaration:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
26496=EnumDeclaration:superInterfaceTypes()
26497=EnumDeclaration:internalModifiers2Property()
26498=EnumDeclaration:internalStructuralPropertiesForType(int)
26499=EnumDeclaration:internalNameProperty()
26500=EnumDeclaration:enumConstants()
26501=EnumDeclaration:treeSize()
26502=EnumDeclaration:accept0(ASTVisitor)
26503=EnumDeclaration:clone0(AST)
26504=EnumDeclaration:memSize()
26505=EnumDeclaration:internalResolveBinding()
26506=EnumDeclaration:internalJavadocProperty()
26507=EnumDeclaration:getNodeType0()
26508=EnumDeclaration:EnumDeclaration(AST)
26509=EnumDeclaration:subtreeMatch0(ASTMatcher, Object)
26510=EnumDeclaration:internalModifiersProperty()
26511=EnumDeclaration:internalGetChildListProperty(ChildListPropertyDescriptor)
26512=EnumDeclaration:internalBodyDeclarationsProperty()
26513=EnumDeclaration:propertyDescriptors(int)
26514=GenericsCompletionParserTest:test0202_Diet()
26515=GenericsCompletionParserTest:test0183()
26516=GenericsCompletionParserTest:test0056_Diet()
26517=GenericsCompletionParserTest:test0030_Method()
26518=GenericsCompletionParserTest:test0074()
26519=GenericsCompletionParserTest:test0035_Method()
26520=GenericsCompletionParserTest:test0114_Diet()
26521=GenericsCompletionParserTest:test0125_Method()
26522=GenericsCompletionParserTest:test0103_Diet()
26523=GenericsCompletionParserTest:test0085()
26524=GenericsCompletionParserTest:test0203_Method()
26525=GenericsCompletionParserTest:test0045_Diet()
26526=GenericsCompletionParserTest:test0161()
26527=GenericsCompletionParserTest:test0215_Method()
26528=GenericsCompletionParserTest:testBug351426()
26529=GenericsCompletionParserTest:GenericsCompletionParserTest(String)
26530=GenericsCompletionParserTest:test0098()
26531=GenericsCompletionParserTest:test0150()
26532=GenericsCompletionParserTest:test0196()
26533=GenericsCompletionParserTest:test0063()
26534=GenericsCompletionParserTest:test0037_Diet()
26535=GenericsCompletionParserTest:test0185()
26536=GenericsCompletionParserTest:test0051_Method()
26537=GenericsCompletionParserTest:test0210_Method()
26538=GenericsCompletionParserTest:test0166_Diet()
26539=GenericsCompletionParserTest:test0076()
26540=GenericsCompletionParserTest:test0109_Method()
26541=GenericsCompletionParserTest:test0118_Method()
26542=GenericsCompletionParserTest:test0174_Method()
26543=GenericsCompletionParserTest:test0047_Method()
26544=GenericsCompletionParserTest:test0137_Method()
26545=GenericsCompletionParserTest:test0087()
26546=GenericsCompletionParserTest:test0136_Diet()
26547=GenericsCompletionParserTest:test0120_Method()
26548=GenericsCompletionParserTest:test0125_Diet()
26549=GenericsCompletionParserTest:test0163()
26550=GenericsCompletionParserTest:test0190_Method()
26551=GenericsCompletionParserTest:test0193_Method()
26552=GenericsCompletionParserTest:test0174_Diet()
26553=GenericsCompletionParserTest:test0165_Method()
26554=GenericsCompletionParserTest:test0152()
26555=GenericsCompletionParserTest:test0198()
26556=GenericsCompletionParserTest:test0133_Diet()
26557=GenericsCompletionParserTest:test0144_Diet()
26558=GenericsCompletionParserTest:test0065()
26559=GenericsCompletionParserTest:test0111_Diet()
26560=GenericsCompletionParserTest:test0119_Diet()
26561=GenericsCompletionParserTest:test0122_Diet()
26562=GenericsCompletionParserTest:test0053_Diet()
26563=GenericsCompletionParserTest:test0078()
26564=GenericsCompletionParserTest:test0188_Diet()
26565=GenericsCompletionParserTest:test0141_Diet()
26566=GenericsCompletionParserTest:test0089()
26567=GenericsCompletionParserTest:test0054_Method()
26568=GenericsCompletionParserTest:test0210_Diet()
26569=GenericsCompletionParserTest:test0132_Method()
26570=GenericsCompletionParserTest:test0010()
26571=GenericsCompletionParserTest:test0048_Diet()
26572=GenericsCompletionParserTest:suite()
26573=GenericsCompletionParserTest:test0101_Method()
26574=GenericsCompletionParserTest:test0106_Diet()
26575=GenericsCompletionParserTest:test0217_Method()
26576=GenericsCompletionParserTest:test0056_Method()
26577=GenericsCompletionParserTest:test0117_Diet()
26578=GenericsCompletionParserTest:test0104_Method()
26579=GenericsCompletionParserTest:test0154()
26580=GenericsCompletionParserTest:test0021()
26581=GenericsCompletionParserTest:test0067()
26582=GenericsCompletionParserTest:test0206_Method()
26583=GenericsCompletionParserTest:test0128_Diet()
26584=GenericsCompletionParserTest:test0031_Diet()
26585=GenericsCompletionParserTest:test0178()
26586=GenericsCompletionParserTest:test0189_Method()
26587=GenericsCompletionParserTest:test0049_Method()
26588=GenericsCompletionParserTest:test0216_Diet()
26589=GenericsCompletionParserTest:test0160_Method()
26590=GenericsCompletionParserTest:test0012()
26591=GenericsCompletionParserTest:test0042_Diet()
26592=GenericsCompletionParserTest:test0156()
26593=GenericsCompletionParserTest:test0122_Method()
26594=GenericsCompletionParserTest:test0033_Method()
26595=GenericsCompletionParserTest:test0069()
26596=GenericsCompletionParserTest:test0023()
26597=GenericsCompletionParserTest:test0054_Diet()
26598=GenericsCompletionParserTest:test0176_Method()
26599=GenericsCompletionParserTest:test0115_Method()
26600=GenericsCompletionParserTest:test0213_Method()
26601=GenericsCompletionParserTest:test0058_Diet()
26602=GenericsCompletionParserTest:test0204_Diet()
26603=GenericsCompletionParserTest:test0105_Diet()
26604=GenericsCompletionParserTest:test0116_Diet()
26605=GenericsCompletionParserTest:test0107_Method()
26606=GenericsCompletionParserTest:test0001()
26607=GenericsCompletionParserTest:test0169()
26608=GenericsCompletionParserTest:test0058_Method()
26609=GenericsCompletionParserTest:test0172_Diet()
26610=GenericsCompletionParserTest:test0190_Diet()
26611=GenericsCompletionParserTest:test0014()
26612=GenericsCompletionParserTest:test0194_Diet()
26613=GenericsCompletionParserTest:test0215_Diet()
26614=GenericsCompletionParserTest:test0131_Diet()
26615=GenericsCompletionParserTest:test0142_Diet()
26616=GenericsCompletionParserTest:test0158()
26617=GenericsCompletionParserTest:test0025()
26618=GenericsCompletionParserTest:test0045_Method()
26619=GenericsCompletionParserTest:test0128_Method()
26620=GenericsCompletionParserTest:test0147()
26621=GenericsCompletionParserTest:test0032_Method()
26622=GenericsCompletionParserTest:test0038_Method()
26623=GenericsCompletionParserTest:test0032_Diet()
26624=GenericsCompletionParserTest:test0127_Method()
26625=GenericsCompletionParserTest:testBug351426b()
26626=GenericsCompletionParserTest:test0108_Method()
26627=GenericsCompletionParserTest:test0138_Diet()
26628=GenericsCompletionParserTest:test0003()
26629=GenericsCompletionParserTest:test0102_Method()
26630=GenericsCompletionParserTest:test0127_Diet()
26631=GenericsCompletionParserTest:test0184_Method()
26632=GenericsCompletionParserTest:test0080()
26633=GenericsCompletionParserTest:test0016()
26634=GenericsCompletionParserTest:test0043_Diet()
26635=GenericsCompletionParserTest:test0108_Diet()
26636=GenericsCompletionParserTest:test0171_Method()
26637=GenericsCompletionParserTest:test0212()
26638=GenericsCompletionParserTest:test0091()
26639=GenericsCompletionParserTest:test0100_Diet()
26640=GenericsCompletionParserTest:test0111_Method()
26641=GenericsCompletionParserTest:test0027()
26642=GenericsCompletionParserTest:test0051_Diet()
26643=GenericsCompletionParserTest:test0167_Method()
26644=GenericsCompletionParserTest:test0149()
26645=GenericsCompletionParserTest:test0201()
26646=GenericsCompletionParserTest:test0124_Method()
26647=GenericsCompletionParserTest:test0207_Diet()
26648=GenericsCompletionParserTest:test0005()
26649=GenericsCompletionParserTest:test0082()
26650=GenericsCompletionParserTest:test0218_Diet()
26651=GenericsCompletionParserTest:test0018()
26652=GenericsCompletionParserTest:test0175_Diet()
26653=GenericsCompletionParserTest:test0040_Diet()
26654=GenericsCompletionParserTest:test0093()
26655=GenericsCompletionParserTest:test0134_Method()
26656=GenericsCompletionParserTest:test0029()
26657=GenericsCompletionParserTest:test0120_Diet()
26658=GenericsCompletionParserTest:test0180()
26659=GenericsCompletionParserTest:test0060()
26660=GenericsCompletionParserTest:test0042_Method()
26661=GenericsCompletionParserTest:test0095()
26662=GenericsCompletionParserTest:test0039_Diet()
26663=GenericsCompletionParserTest:test0034_Diet()
26664=GenericsCompletionParserTest:test0071()
26665=GenericsCompletionParserTest:test0131_Method()
26666=GenericsCompletionParserTest:test0007()
26667=GenericsCompletionParserTest:test0144_Method()
26668=GenericsCompletionParserTest:test0055_Method()
26669=GenericsCompletionParserTest:test0073()
26670=GenericsCompletionParserTest:test0213_Diet()
26671=GenericsCompletionParserTest:test0192_Diet()
26672=GenericsCompletionParserTest:test0052_Method()
26673=GenericsCompletionParserTest:test0084()
26674=GenericsCompletionParserTest:test0141_Method()
26675=GenericsCompletionParserTest:test0182()
26676=GenericsCompletionParserTest:test0205()
26677=GenericsCompletionParserTest:test0052_Diet()
26678=GenericsCompletionParserTest:test0100_Method()
26679=GenericsCompletionParserTest:test0097()
26680=GenericsCompletionParserTest:test0133_Method()
26681=GenericsCompletionParserTest:test0206_Diet()
26682=GenericsCompletionParserTest:test0189_Diet()
26683=GenericsCompletionParserTest:test0107_Diet()
26684=GenericsCompletionParserTest:test0166_Method()
26685=GenericsCompletionParserTest:test0062()
26686=GenericsCompletionParserTest:test0110_Diet()
26687=GenericsCompletionParserTest:test0118_Diet()
26688=GenericsCompletionParserTest:test0009()
26689=GenericsCompletionParserTest:test0043_Method()
26690=GenericsCompletionParserTest:test0075()
26691=GenericsCompletionParserTest:test0041_Diet()
26692=GenericsCompletionParserTest:test0049_Diet()
26693=GenericsCompletionParserTest:test0145_Method()
26694=GenericsCompletionParserTest:test0194_Method()
26695=GenericsCompletionParserTest:test0086()
26696=GenericsCompletionParserTest:test0117_Method()
26697=GenericsCompletionParserTest:test0162()
26698=GenericsCompletionParserTest:test0220_Diet()
26699=GenericsCompletionParserTest:test0140_Method()
26700=GenericsCompletionParserTest:test0030_Diet()
26701=GenericsCompletionParserTest:test0121_Method()
26702=GenericsCompletionParserTest:test0207_Method()
26703=GenericsCompletionParserTest:test0038_Diet()
26704=GenericsCompletionParserTest:test0151()
26705=GenericsCompletionParserTest:test0197()
26706=GenericsCompletionParserTest:test0064()
26707=GenericsCompletionParserTest:test0048_Method()
26708=GenericsCompletionParserTest:test0186()
26709=GenericsCompletionParserTest:test0077()
26710=GenericsCompletionParserTest:test0050_Method()
26711=GenericsCompletionParserTest:test0159_Method()
26712=GenericsCompletionParserTest:test0105_Method()
26713=GenericsCompletionParserTest:test0088()
26714=GenericsCompletionParserTest:test0187_Method()
26715=GenericsCompletionParserTest:test0164()
26716=GenericsCompletionParserTest:test0204_Method()
26717=GenericsCompletionParserTest:test0209_Diet()
26718=GenericsCompletionParserTest:test0057_Diet()
26719=GenericsCompletionParserTest:test0184_Diet()
26720=GenericsCompletionParserTest:test0142_Method()
26721=GenericsCompletionParserTest:test0153()
26722=GenericsCompletionParserTest:test0199()
26723=GenericsCompletionParserTest:test0214_Method()
26724=GenericsCompletionParserTest:test0020()
26725=GenericsCompletionParserTest:test0066()
26726=GenericsCompletionParserTest:test0209_Method()
26727=GenericsCompletionParserTest:test0036_Method()
26728=GenericsCompletionParserTest:test0145_Diet()
26729=GenericsCompletionParserTest:test0114_Method()
26730=GenericsCompletionParserTest:_testXXX2()
26731=GenericsCompletionParserTest:test0079()
26732=GenericsCompletionParserTest:test0177()
26733=GenericsCompletionParserTest:test0113_Diet()
26734=GenericsCompletionParserTest:test0102_Diet()
26735=GenericsCompletionParserTest:test0039_Method()
26736=GenericsCompletionParserTest:test0124_Diet()
26737=GenericsCompletionParserTest:test0036_Diet()
26738=GenericsCompletionParserTest:test0167_Diet()
26739=GenericsCompletionParserTest:test0112_Method()
26740=GenericsCompletionParserTest:test0011()
26741=GenericsCompletionParserTest:test0123_Diet()
26742=GenericsCompletionParserTest:test0155()
26743=GenericsCompletionParserTest:test0191_Method()
26744=GenericsCompletionParserTest:test0068()
26745=GenericsCompletionParserTest:test0173_Method()
26746=GenericsCompletionParserTest:test0022()
26747=GenericsCompletionParserTest:test0134_Diet()
26748=GenericsCompletionParserTest:test0129_Diet()
26749=GenericsCompletionParserTest:test0195_Diet()
26750=GenericsCompletionParserTest:test0138_Method()
26751=GenericsCompletionParserTest:test0135_Method()
26752=GenericsCompletionParserTest:test0046_Method()
26753=GenericsCompletionParserTest:test0173_Diet()
26754=GenericsCompletionParserTest:test0047_Diet()
26755=GenericsCompletionParserTest:test0140_Diet()
26756=GenericsCompletionParserTest:test0179()
26757=GenericsCompletionParserTest:test0208_Diet()
26758=GenericsCompletionParserTest:test0013()
26759=GenericsCompletionParserTest:test0050_Diet()
26760=GenericsCompletionParserTest:test0059()
26761=GenericsCompletionParserTest:test0187_Diet()
26762=GenericsCompletionParserTest:test0157()
26763=GenericsCompletionParserTest:test0112_Diet()
26764=GenericsCompletionParserTest:test0109_Diet()
26765=GenericsCompletionParserTest:test0101_Diet()
26766=GenericsCompletionParserTest:test0024()
26767=GenericsCompletionParserTest:test0143_Method()
26768=GenericsCompletionParserTest:test0099_Diet()
26769=GenericsCompletionParserTest:test0037_Method()
26770=GenericsCompletionParserTest:test0123_Method()
26771=GenericsCompletionParserTest:test0146()
26772=GenericsCompletionParserTest:test0176_Diet()
26773=GenericsCompletionParserTest:test0053_Method()
26774=GenericsCompletionParserTest:test0219_Diet()
26775=GenericsCompletionParserTest:test0110_Method()
26776=GenericsCompletionParserTest:test0160_Diet()
26777=GenericsCompletionParserTest:test0139_Diet()
26778=GenericsCompletionParserTest:test0002()
26779=GenericsCompletionParserTest:test0135_Diet()
26780=GenericsCompletionParserTest:test0040_Method()
26781=GenericsCompletionParserTest:test0035_Diet()
26782=GenericsCompletionParserTest:test0168_Diet()
26783=GenericsCompletionParserTest:test0136_Method()
26784=GenericsCompletionParserTest:test0015()
26785=GenericsCompletionParserTest:test0130_Diet()
26786=GenericsCompletionParserTest:test0211()
26787=GenericsCompletionParserTest:test0090()
26788=GenericsCompletionParserTest:test0026()
26789=GenericsCompletionParserTest:test0200()
26790=GenericsCompletionParserTest:test0148()
26791=GenericsCompletionParserTest:test0191_Diet()
26792=GenericsCompletionParserTest:test0168_Method()
26793=GenericsCompletionParserTest:test0046_Diet()
26794=GenericsCompletionParserTest:test0041_Method()
26795=GenericsCompletionParserTest:testBug351426c()
26796=GenericsCompletionParserTest:test0130_Method()
26797=GenericsCompletionParserTest:test0004()
26798=GenericsCompletionParserTest:test0057_Method()
26799=GenericsCompletionParserTest:test0055_Diet()
26800=GenericsCompletionParserTest:test0106_Method()
26801=GenericsCompletionParserTest:test0081()
26802=GenericsCompletionParserTest:test0195_Method()
26803=GenericsCompletionParserTest:test0017()
26804=GenericsCompletionParserTest:test0203_Diet()
26805=GenericsCompletionParserTest:test0044_Method()
26806=GenericsCompletionParserTest:test0143_Diet()
26807=GenericsCompletionParserTest:test0092()
26808=GenericsCompletionParserTest:test0028()
26809=GenericsCompletionParserTest:test0031_Method()
26810=GenericsCompletionParserTest:test0034_Method()
26811=GenericsCompletionParserTest:test0044_Diet()
26812=GenericsCompletionParserTest:test0126_Method()
26813=GenericsCompletionParserTest:test0172_Method()
26814=GenericsCompletionParserTest:test0171_Diet()
26815=GenericsCompletionParserTest:test0193_Diet()
26816=GenericsCompletionParserTest:test0214_Diet()
26817=GenericsCompletionParserTest:test0139_Method()
26818=GenericsCompletionParserTest:test0070()
26819=GenericsCompletionParserTest:test0175_Method()
26820=GenericsCompletionParserTest:test0006()
26821=GenericsCompletionParserTest:getCompilerOptions()
26822=GenericsCompletionParserTest:test0083()
26823=GenericsCompletionParserTest:test0103_Method()
26824=GenericsCompletionParserTest:test0165_Diet()
26825=GenericsCompletionParserTest:test0192_Method()
26826=GenericsCompletionParserTest:test0188_Method()
26827=GenericsCompletionParserTest:test0099_Method()
26828=GenericsCompletionParserTest:test0033_Diet()
26829=GenericsCompletionParserTest:test0019()
26830=GenericsCompletionParserTest:test0113_Method()
26831=GenericsCompletionParserTest:test0132_Diet()
26832=GenericsCompletionParserTest:test0208_Method()
26833=GenericsCompletionParserTest:test0202_Method()
26834=GenericsCompletionParserTest:test0119_Method()
26835=GenericsCompletionParserTest:test0094()
26836=GenericsCompletionParserTest:test0181()
26837=GenericsCompletionParserTest:test0121_Diet()
26838=GenericsCompletionParserTest:test0061()
26839=GenericsCompletionParserTest:test0129_Method()
26840=GenericsCompletionParserTest:test0159_Diet()
26841=GenericsCompletionParserTest:test0096()
26842=GenericsCompletionParserTest:test0170()
26843=GenericsCompletionParserTest:test0115_Diet()
26844=GenericsCompletionParserTest:test0072()
26845=GenericsCompletionParserTest:test0104_Diet()
26846=GenericsCompletionParserTest:test0116_Method()
26847=GenericsCompletionParserTest:test0137_Diet()
26848=GenericsCompletionParserTest:test0008()
26849=GenericsCompletionParserTest:test0126_Diet()
26850=firstClass:myMethod()
26851=BatchInitializationMonitor:isCanceled()
26852=BatchInitializationMonitor:subTask(String)
26853=BatchInitializationMonitor:internalWorked(double)
26854=BatchInitializationMonitor:worked(int)
26855=BatchInitializationMonitor:getWorked()
26856=BatchInitializationMonitor:done()
26857=BatchInitializationMonitor:beginTask(String, int)
26858=BatchInitializationMonitor:setCanceled(boolean)
26859=BatchInitializationMonitor:getMonitor()
26860=BatchInitializationMonitor:setTaskName(String)
26861=X17c:getResolvedClasspath(boolean)
26862=Test:main(String[])
26863=A:launch()
26864=BadFormattingSample:foo()
26865=X05:foo()
26866=OverflowingLRUCache:OverflowingLRUCache(int)
26867=OverflowingLRUCache:put(Object, Object)
26868=OverflowingLRUCache:setSpaceLimit(int)
26869=OverflowingLRUCache:clone()
26870=OverflowingLRUCache:privateRemoveEntry(LRUCacheEntry, boolean)
26871=OverflowingLRUCache:OverflowingLRUCache(int, int)
26872=OverflowingLRUCache:getOverflow()
26873=OverflowingLRUCache:toString()
26874=OverflowingLRUCache:newInstance(int, int)
26875=OverflowingLRUCache:updateTimestamp(LRUCacheEntry)
26876=OverflowingLRUCache:makeSpace(int)
26877=OverflowingLRUCache:close(LRUCacheEntry)
26878=OverflowingLRUCache:shrink()
26879=OverflowingLRUCache:setLoadFactor(double)
26880=OverflowingLRUCache:elements()
26881=OverflowingLRUCache:printStats()
26882=OverflowingLRUCache:privateRemoveEntry(LRUCacheEntry, boolean, boolean)
26883=OverflowingLRUCache:getEntryTable()
26884=OverflowingLRUCache:remove(Object)
26885=OverflowingLRUCache:getLoadFactor()
26886=OverflowingLRUCache:fillingRatio()
26887=LineNumberAttribute:getLineNumberTableLength()
26888=LineNumberAttribute:getLineNumberTable()
26889=LineNumberAttribute:LineNumberAttribute(byte[], IConstantPool, int)
26890=ContainerAnnotation:resolveType(BlockScope)
26891=ContainerAnnotation:addContainee(Annotation)
26892=ContainerAnnotation:ContainerAnnotation(Annotation, ReferenceBinding, BlockScope)
26893=TypeDeclarationPattern:createIndexKey(int, char[], char[], char[][], boolean)
26894=TypeDeclarationPattern:getBlankPattern()
26895=TypeDeclarationPattern:getIndexCategories()
26896=TypeDeclarationPattern:queryIn(Index)
26897=TypeDeclarationPattern:matchesDecodedKey(SearchPattern)
26898=TypeDeclarationPattern:PackageNameSet:add(char[])
26899=TypeDeclarationPattern:PackageNameSet:rehash()
26900=TypeDeclarationPattern:decodeModifiers()
26901=TypeDeclarationPattern:TypeDeclarationPattern(char[], char[][], char[], char, int)
26902=TypeDeclarationPattern:print(StringBuffer)
26903=TypeDeclarationPattern:PackageNameSet:PackageNameSet(int)
26904=TypeDeclarationPattern:decodeIndexKey(char[])
26905=TypeDeclarationPattern:TypeDeclarationPattern(int)
26906=Test:main(String[])
26907=DefaultCodeFormatterConstants:setWrappingStyle(String, int)
26908=DefaultCodeFormatterConstants:getIndentStyle(String)
26909=DefaultCodeFormatterConstants:getJavaConventionsSettings()
26910=DefaultCodeFormatterConstants:getForceWrapping(String)
26911=DefaultCodeFormatterConstants:getEclipseDefaultSettings()
26912=DefaultCodeFormatterConstants:getWrappingStyle(String)
26913=DefaultCodeFormatterConstants:setForceWrapping(String, boolean)
26914=DefaultCodeFormatterConstants:setIndentStyle(String, int)
26915=DefaultCodeFormatterConstants:getEclipse21Settings()
26916=DefaultCodeFormatterConstants:createAlignmentValue(boolean, int, int)
26917=MethodNameMatchRequestor:acceptMethodNameMatch(MethodNameMatch)
26918=X01b:foo()
26919=A:B:test()
26920=A:foo()
26921=X09:foo(int, int)
26922=ArrayAllocationExpression:getAllAnnotationContexts(int, int, List)
26923=ArrayAllocationExpression:printExpression(int, StringBuffer)
26924=ArrayAllocationExpression:resolveType(BlockScope)
26925=ArrayAllocationExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
26926=ArrayAllocationExpression:generateCode(BlockScope, CodeStream, boolean)
26927=ArrayAllocationExpression:getAnnotationsOnDimensions()
26928=ArrayAllocationExpression:traverse(ASTVisitor, BlockScope)
26929=Example:foo()
26930=X02:setCharset(String, Object)
26931=Test:countTestCases()
26932=Test:run(TestResult)
26933=CompletionOnJavadocTypeParamReference:getCompletionFlags()
26934=CompletionOnJavadocTypeParamReference:reportError(BlockScope)
26935=CompletionOnJavadocTypeParamReference:CompletionOnJavadocTypeParamReference(char[], long, int, int)
26936=CompletionOnJavadocTypeParamReference:addCompletionFlags(int)
26937=CompletionOnJavadocTypeParamReference:printExpression(int, StringBuffer)
26938=CompletionOnJavadocTypeParamReference:CompletionOnJavadocTypeParamReference(JavadocSingleTypeReference)
26939=Openable:openBuffer(IProgressMonitor, Object)
26940=Openable:getCorrespondingResource()
26941=Openable:resource(PackageFragmentRoot)
26942=Openable:canBufferBeRemovedFromCache(IBuffer)
26943=Openable:closeBuffer()
26944=Openable:Openable(JavaElement)
26945=Openable:isOpen()
26946=Openable:bufferChanged(BufferChangedEvent)
26947=Openable:closing(Object)
26948=Openable:getBufferManager()
26949=Openable:openAncestors(HashMap, IProgressMonitor)
26950=Openable:open(IProgressMonitor)
26951=Openable:canBeRemovedFromCache()
26952=Openable:validateExistence(IResource)
26953=Openable:findRecommendedLineSeparator()
26954=Openable:exists()
26955=Openable:resourceExists(IResource)
26956=Openable:isConsistent()
26957=Openable:getOpenable()
26958=Openable:hasUnsavedChanges()
26959=Openable:makeConsistent(IProgressMonitor)
26960=Openable:isSourceElement()
26961=Openable:getResource()
26962=Openable:createElementInfo()
26963=Openable:generateInfos(Object, HashMap, IProgressMonitor)
26964=Openable:save(IProgressMonitor, boolean)
26965=Openable:isStructureKnown()
26966=Openable:getUnderlyingResource()
26967=Openable:resource()
26968=Openable:hasBuffer()
26969=Openable:codeSelect(org.eclipse.jdt.internal.compiler.env.ICompilationUnit, int, int, WorkingCopyOwner)
26970=Openable:buildStructure(OpenableElementInfo, IProgressMonitor, Map, IResource)
26971=Openable:getBufferFactory()
26972=Openable:codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit, org.eclipse.jdt.internal.compiler.env.ICompilationUnit, int, CompletionRequestor, WorkingCopyOwner, ITypeRoot, IProgressMonitor)
26973=Openable:getPackageFragmentRoot()
26974=Openable:getBuffer()
26975=A:foo(String, Object)
26976=X06:foo()
26977=Wildcard:printExpression(int, StringBuffer)
26978=Wildcard:resolveType(ClassScope, int)
26979=Wildcard:resolveType(BlockScope, boolean, int)
26980=Wildcard:internalResolveType(Scope, ReferenceBinding, int)
26981=Wildcard:resolveTypeArgument(BlockScope, ReferenceBinding, int)
26982=Wildcard:resolveTypeArgument(ClassScope, ReferenceBinding, int)
26983=Wildcard:getTypeName()
26984=Wildcard:isWildcard()
26985=Wildcard:traverse(ASTVisitor, BlockScope)
26986=Wildcard:traverse(ASTVisitor, ClassScope)
26987=Wildcard:getParameterizedTypeName()
26988=Wildcard:Wildcard(int)
26989=TestFileSystem:getStore(URI)
26990=A:A()
26991=A:coo2()
26992=A:A(int)
26993=ILocalVariableReferenceInfo:getLength()
26994=ILocalVariableReferenceInfo:getStartPC()
26995=ILocalVariableReferenceInfo:getIndex()
26996=CommentsPreparator:getCodeToFormat(int, int, StringBuilder, int[])
26997=CommentsPreparator:endVisit(Javadoc)
26998=CommentsPreparator:cleanupHTMLElement(int, int, boolean)
26999=CommentsPreparator:getCommentCodeFormatter()
27000=CommentsPreparator:handleWhitespaceAround(int)
27001=CommentsPreparator:tokenEndingAt(int)
27002=CommentsPreparator:preVisit2(ASTNode)
27003=CommentsPreparator:handleSeparateLineTag(int, int)
27004=CommentsPreparator:disableFormattingExclusively(int, int)
27005=CommentsPreparator:findCommentLineIndent(int)
27006=CommentsPreparator:handleNoFormatTag(int, int, boolean)
27007=CommentsPreparator:visit(TagElement)
27008=CommentsPreparator:finishUp()
27009=CommentsPreparator:visit(QualifiedName)
27010=CommentsPreparator:visit(BlockComment)
27011=CommentsPreparator:findStringLiteralsInLine(int)
27012=CommentsPreparator:translateFormattedTokens(int, List<Token>, int[], HashMap<Token, Token>)
27013=CommentsPreparator:splitToken(Token, int, int)
27014=CommentsPreparator:handleHtml(TagElement)
27015=CommentsPreparator:handleBlockComment(int)
27016=CommentsPreparator:handleLineComment(int)
27017=CommentsPreparator:handleStringLiterals(String, int)
27018=CommentsPreparator:disableFormatting(int, int)
27019=CommentsPreparator:visit(LineComment)
27020=CommentsPreparator:formatCode(int, int)
27021=CommentsPreparator:visit(MemberRef)
27022=CommentsPreparator:handleNLSTags(Token, int)
27023=CommentsPreparator:preserveWhitespace(Token, int)
27024=CommentsPreparator:getHtmlEntityChar(String)
27025=CommentsPreparator:tokenStartingAt(int)
27026=CommentsPreparator:handleReference(ASTNode)
27027=CommentsPreparator:handleBreakAfterTag(int, int)
27028=CommentsPreparator:visit(Javadoc)
27029=CommentsPreparator:endVisit(TagElement)
27030=CommentsPreparator:handleFormatOnOffTags(Token)
27031=CommentsPreparator:handleBreakBeforeTag(int, int, boolean)
27032=CommentsPreparator:visit(MethodRef)
27033=CommentsPreparator:tokenizeMultilineComment(Token)
27034=CommentsPreparator:addSubstituteWraps()
27035=CommentsPreparator:noSubstituteWrapping(int, int)
27036=CommentsPreparator:handleCompilerTags(Token, int)
27037=CommentsPreparator:CommentsPreparator(TokenManager, DefaultCodeFormatterOptions, String)
27038=CommentsPreparator:commentToLines(Token, int)
27039=CommentsPreparator:tokenizeLineComment(Token)
27040=CommentsPreparator:handleFormatCodeTag(int, int, boolean)
27041=IJavaModel:copy(IJavaElement[], IJavaElement[], IJavaElement[], String[], boolean, IProgressMonitor)
27042=IJavaModel:getJavaProjects()
27043=IJavaModel:rename(IJavaElement[], IJavaElement[], String[], boolean, IProgressMonitor)
27044=IJavaModel:delete(IJavaElement[], boolean, IProgressMonitor)
27045=IJavaModel:refreshExternalArchives(IJavaElement[], IProgressMonitor)
27046=IJavaModel:move(IJavaElement[], IJavaElement[], IJavaElement[], String[], boolean, IProgressMonitor)
27047=IJavaModel:getWorkspace()
27048=IJavaModel:getJavaProject(String)
27049=IJavaModel:getNonJavaResources()
27050=IJavaModel:contains(IResource)
27051=X06:foo(Object, boolean)
27052=Test:mth1(String, String, String, String)
27053=SingleTypeRequestor:getType()
27054=SingleTypeRequestor:reset()
27055=SingleTypeRequestor:acceptPackageFragment(IPackageFragment)
27056=SingleTypeRequestor:acceptInitializer(IInitializer)
27057=SingleTypeRequestor:acceptField(IField)
27058=SingleTypeRequestor:isCanceled()
27059=SingleTypeRequestor:acceptType(IType)
27060=SingleTypeRequestor:acceptMemberType(IType)
27061=SingleTypeRequestor:acceptMethod(IMethod)
27062=Test:main(String[])
27063=ExplicitConstructorInvocationSelectionTest:testSuper()
27064=ExplicitConstructorInvocationSelectionTest:testNameThis()
27065=ExplicitConstructorInvocationSelectionTest:testThis()
27066=ExplicitConstructorInvocationSelectionTest:testNameSuper()
27067=ExplicitConstructorInvocationSelectionTest:testPrimarySuper()
27068=ExplicitConstructorInvocationSelectionTest:ExplicitConstructorInvocationSelectionTest(String)
27069=ClassFormatException:printStackTrace(PrintStream)
27070=ClassFormatException:printStackTrace()
27071=ClassFormatException:printStackTrace(PrintWriter)
27072=ClassFormatException:getException()
27073=ClassFormatException:getBufferPosition()
27074=ClassFormatException:ClassFormatException(int, int)
27075=ClassFormatException:ClassFormatException(int)
27076=ClassFormatException:getErrorCode()
27077=ClassFormatException:ClassFormatException(RuntimeException, char[])
27078=HashtableOfLong:put(long, Object)
27079=HashtableOfLong:HashtableOfLong()
27080=HashtableOfLong:rehash()
27081=HashtableOfLong:size()
27082=HashtableOfLong:get(long)
27083=HashtableOfLong:toString()
27084=HashtableOfLong:containsKey(long)
27085=HashtableOfLong:HashtableOfLong(int)
27086=IfStatement:traverse(ASTVisitor, BlockScope)
27087=IfStatement:completesByContinue()
27088=IfStatement:IfStatement(Expression, Statement, Statement, int, int)
27089=IfStatement:doesNotCompleteNormally()
27090=IfStatement:generateCode(BlockScope, CodeStream)
27091=IfStatement:resolve(BlockScope)
27092=IfStatement:printStatement(int, StringBuffer)
27093=IfStatement:IfStatement(Expression, Statement, int, int)
27094=IfStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
27095=X15:CharOperation:equals(char[], char[], boolean)
27096=X15:computeRelevanceForCaseMatching(char[], char[])
27097=X15:CharOperation:prefixEquals(char[], char[], boolean)
27098=firstClass:myMethod()
27099=SearchParticipantTests:testScheduleDocumentIndexing2()
27100=SearchParticipantTests:TestSearchDocument:getCharContents()
27101=SearchParticipantTests:TestSearchParticipant:getDocument(String)
27102=SearchParticipantTests:TestResultCollector:getSource(IResource, IJavaElement, ICompilationUnit)
27103=SearchParticipantTests:TestSearchDocument:TestSearchDocument(String, SearchParticipant)
27104=SearchParticipantTests:testSearch()
27105=SearchParticipantTests:testIndexDocument03()
27106=SearchParticipantTests:testSearchAfterRemoveAndRestart()
27107=SearchParticipantTests:tearDownSuite()
27108=SearchParticipantTests:testIndexDocument01()
27109=SearchParticipantTests:setUp()
27110=SearchParticipantTests:getIndexLocation()
27111=SearchParticipantTests:TestSearchDocument:getByteContents()
27112=SearchParticipantTests:suite()
27113=SearchParticipantTests:TestSearchParticipant:locateMatches(SearchDocument[], SearchPattern, IJavaSearchScope, SearchRequestor, IProgressMonitor)
27114=SearchParticipantTests:testSearchAfterRestart()
27115=SearchParticipantTests:TestSearchDocument:getEncoding()
27116=SearchParticipantTests:testIndexDocument02()
27117=SearchParticipantTests:tearDown()
27118=SearchParticipantTests:TestSearchParticipant:selectIndexes(SearchPattern, IJavaSearchScope)
27119=SearchParticipantTests:TestResultCollector:getPathString(IResource, IJavaElement)
27120=SearchParticipantTests:setUpSuite()
27121=SearchParticipantTests:SearchParticipantTests(String)
27122=SearchParticipantTests:TestSearchParticipant:indexDocument(SearchDocument, IPath)
27123=SearchParticipantTests:testScheduleDocumentIndexing1()
27124=X17c:getResolvedClasspath(boolean)
27125=InfixExpression:subtreeMatch0(ASTMatcher, Object)
27126=InfixExpression:internalStructuralPropertiesForType(int)
27127=InfixExpression:internalGetSetObjectProperty(SimplePropertyDescriptor, boolean, Object)
27128=InfixExpression:setRightOperand(Expression)
27129=InfixExpression:setLeftOperand(Expression)
27130=InfixExpression:getOperator()
27131=InfixExpression:getNodeType0()
27132=InfixExpression:accept0(ASTVisitor)
27133=InfixExpression:getRightOperand()
27134=InfixExpression:setOperator(InfixExpression.Operator)
27135=InfixExpression:getLeftOperand()
27136=InfixExpression:extendedOperands()
27137=InfixExpression:Operator:toString()
27138=InfixExpression:clone0(AST)
27139=InfixExpression:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
27140=InfixExpression:Operator:toOperator(String)
27141=InfixExpression:propertyDescriptors(int)
27142=InfixExpression:Operator:Operator(String)
27143=InfixExpression:hasExtendedOperands()
27144=InfixExpression:internalGetChildListProperty(ChildListPropertyDescriptor)
27145=InfixExpression:treeSize()
27146=InfixExpression:memSize()
27147=InfixExpression:InfixExpression(AST)
27148=X02:test()
27149=Bug463062Proc:process(Set<? extends TypeElement>, RoundEnvironment)
27150=ModelTests:testFieldType()
27151=ModelTests:canRunJava8()
27152=ModelTests:suite()
27153=ModelTests:keepBinaryOnly(IJavaProject, String, String)
27154=ModelTests:testMethodType()
27155=ModelTests:ModelTests(String)
27156=ModelTests:testInfoProblems()
27157=ModelTests:testMethodParameters()
27158=InferenceContext:InferenceContext(MethodBinding)
27159=InferenceContext:recordSubstitute(TypeVariableBinding, TypeBinding, int)
27160=InferenceContext:getSubstitutes(TypeVariableBinding, int)
27161=InferenceContext:hasUnresolvedTypeArgument()
27162=InferenceContext:toString()
27163=X08:bar()
27164=CodeSnippetToCuMapper:buildCUSource(String)
27165=CodeSnippetToCuMapper:getEvaluationType(int)
27166=CodeSnippetToCuMapper:getImport(int)
27167=CodeSnippetToCuMapper:getCompletionRequestor(CompletionRequestor)
27168=CodeSnippetToCuMapper:getSelectionRequestor(ISelectionRequestor)
27169=CodeSnippetToCuMapper:CodeSnippetToCuMapper(char[], char[], char[][], char[], char[], char[][], char[][], int[], char[], String, long)
27170=CodeSnippetToCuMapper:getCUSource(String)
27171=A:useFile(File)
27172=Test:foo()
27173=A:getFile()
27174=AlwaysMoreIndentation:getX()
27175=AlwaysMoreIndentation:setX(int)
27176=ExternalFolderChange:ExternalFolderChange(JavaProject, IClasspathEntry[])
27177=ExternalFolderChange:updateExternalFoldersIfNecessary(boolean, IProgressMonitor)
27178=ExternalFolderChange:toString()
27179=A:foo()
27180=Test:___run(java.lang.String[])
27181=CastExpression:checkUnsafeCast(Scope, TypeBinding, TypeBinding, TypeBinding, boolean)
27182=CastExpression:tagAsNeedCheckCast()
27183=CastExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
27184=CastExpression:reportIllegalCast(Scope, TypeBinding, TypeBinding)
27185=CastExpression:checkNeedForArgumentCasts(BlockScope, int, int, Expression, int, boolean, Expression, int, boolean)
27186=CastExpression:innermostCastedExpression()
27187=CastExpression:checkAlternateBinding(BlockScope, Expression, TypeBinding, MethodBinding, Expression[], TypeBinding[], TypeBinding[], InvocationSite)
27188=CastExpression:traverse(ASTVisitor, BlockScope)
27189=CastExpression:setExpectedType(TypeBinding)
27190=CastExpression:CastExpression(Expression, Expression)
27191=CastExpression:printExpression(int, StringBuffer)
27192=CastExpression:generateCode(BlockScope, CodeStream, boolean)
27193=CastExpression:checkNeedForArgumentCasts(BlockScope, Expression, TypeBinding, MethodBinding, Expression[], TypeBinding[], InvocationSite)
27194=CastExpression:tagAsUnnecessaryCast(Scope, TypeBinding)
27195=CastExpression:checkNeedForArgumentCast(BlockScope, int, int, Expression, int)
27196=CastExpression:resolveType(BlockScope)
27197=CastExpression:usedForGenericMethodReturnTypeInference()
27198=CastExpression:checkNeedForEnclosingInstanceCast(BlockScope, Expression, TypeBinding, TypeBinding)
27199=SimpleDeclarationVisitor:visitPackageDeclaration(PackageDeclaration)
27200=SimpleDeclarationVisitor:visitMethodDeclaration(MethodDeclaration)
27201=SimpleDeclarationVisitor:visitFieldDeclaration(FieldDeclaration)
27202=SimpleDeclarationVisitor:visitDeclaration(Declaration)
27203=SimpleDeclarationVisitor:visitMemberDeclaration(MemberDeclaration)
27204=SimpleDeclarationVisitor:visitAnnotationTypeElementDeclaration(AnnotationTypeElementDeclaration)
27205=SimpleDeclarationVisitor:visitParameterDeclaration(ParameterDeclaration)
27206=SimpleDeclarationVisitor:visitEnumConstantDeclaration(EnumConstantDeclaration)
27207=SimpleDeclarationVisitor:visitInterfaceDeclaration(InterfaceDeclaration)
27208=SimpleDeclarationVisitor:visitConstructorDeclaration(ConstructorDeclaration)
27209=SimpleDeclarationVisitor:visitClassDeclaration(ClassDeclaration)
27210=SimpleDeclarationVisitor:visitAnnotationTypeDeclaration(AnnotationTypeDeclaration)
27211=SimpleDeclarationVisitor:visitExecutableDeclaration(ExecutableDeclaration)
27212=SimpleDeclarationVisitor:visitEnumDeclaration(EnumDeclaration)
27213=SimpleDeclarationVisitor:visitTypeDeclaration(TypeDeclaration)
27214=SimpleDeclarationVisitor:SimpleDeclarationVisitor()
27215=SimpleDeclarationVisitor:visitTypeParameterDeclaration(TypeParameterDeclaration)
27216=IAnnotatable:getAnnotations()
27217=IAnnotatable:getAnnotation(String)
27218=InitializationFlowContext:checkInitializerExceptions(BlockScope, FlowContext, FlowInfo)
27219=InitializationFlowContext:InitializationFlowContext(FlowContext, ASTNode, BlockScope)
27220=InitializationFlowContext:recordHandlingException(ReferenceBinding, UnconditionalFlowInfo, TypeBinding, ASTNode, boolean)
27221=InitializationFlowContext:individualToString()
27222=ASTConverterRecoveryTest:test0001()
27223=ASTConverterRecoveryTest:test0012()
27224=ASTConverterRecoveryTest:test0021()
27225=ASTConverterRecoveryTest:test0010()
27226=ASTConverterRecoveryTest:test0008()
27227=ASTConverterRecoveryTest:suite()
27228=ASTConverterRecoveryTest:test0019()
27229=ASTConverterRecoveryTest:test0006()
27230=ASTConverterRecoveryTest:test0017()
27231=ASTConverterRecoveryTest:test0004()
27232=ASTConverterRecoveryTest:test0015()
27233=ASTConverterRecoveryTest:test0002()
27234=ASTConverterRecoveryTest:test0013()
27235=ASTConverterRecoveryTest:ASTConverterRecoveryTest(String)
27236=ASTConverterRecoveryTest:test0011()
27237=ASTConverterRecoveryTest:test0020()
27238=ASTConverterRecoveryTest:setUpSuite()
27239=ASTConverterRecoveryTest:test0009()
27240=ASTConverterRecoveryTest:_test0014()
27241=ASTConverterRecoveryTest:test0007()
27242=ASTConverterRecoveryTest:test0018()
27243=ASTConverterRecoveryTest:test0005()
27244=ASTConverterRecoveryTest:test0016()
27245=ASTConverterRecoveryTest:test0003()
27246=X01:foo2()
27247=X01:foo(int, int)
27248=X:foo()
27249=X:X(Object)
27250=X:bar3(int)
27251=X:bar()
27252=X:foo()
27253=X:X()
27254=X:bar2()
27255=A:test()
27256=CharLiteral:CharLiteral(char[], int, int)
27257=CharLiteral:computeConstant()
27258=CharLiteral:traverse(ASTVisitor, BlockScope)
27259=CharLiteral:generateCode(BlockScope, CodeStream, boolean)
27260=CharLiteral:literalType(BlockScope)
27261=CharLiteral:computeValue()
27262=ReadAnnotationTypeProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
27263=ReadAnnotationTypeProcessorFactory:ReadAnnotationTypeProcessorFactory()
27264=CorrectLocalVariableType2:foo()
27265=MemberValuePair:print(int, StringBuffer)
27266=MemberValuePair:MemberValuePair(char[], int, int, Expression)
27267=MemberValuePair:traverse(ASTVisitor, BlockScope)
27268=MemberValuePair:resolveTypeExpecting(BlockScope, TypeBinding)
27269=MemberValuePair:traverse(ASTVisitor, ClassScope)
27270=FloatUtil:valueOfHexFloatLiteral(char[])
27271=FloatUtil:convertHexFloatingPointLiteralToBits(char[])
27272=FloatUtil:valueOfHexDoubleLiteral(char[])
27273=Java8FilerTests:testFilerWithEclipseCompiler()
27274=Java8FilerTests:testFilerWithSystemCompiler()
27275=Java8FilerTests:tearDown()
27276=Java8FilerTests:setUp()
27277=Java8FilerTests:internalTest(JavaCompiler, boolean)
27278=Java8FilerTests:canRunJava8()
27279=EvaluationContext:deleteVariable(GlobalVariable)
27280=EvaluationContext:evaluate(char[], char[][], char[][], int[], char[], boolean, boolean, INameEnvironment, Map<String, String>, IRequestor, IProblemFactory)
27281=EvaluationContext:evaluateImports(INameEnvironment, IRequestor, IProblemFactory)
27282=EvaluationContext:getCodeSnippetBytes()
27283=EvaluationContext:setImports(char[][])
27284=EvaluationContext:getCodeSnippetSource()
27285=EvaluationContext:evaluateVariables(INameEnvironment, Map<String, String>, IRequestor, IProblemFactory)
27286=EvaluationContext:getImports()
27287=EvaluationContext:setPackageName(char[])
27288=EvaluationContext:complete(char[], int, SearchableEnvironment, CompletionRequestor, Map<String, String>, IJavaProject, WorkingCopyOwner, IProgressMonitor)
27289=EvaluationContext:evaluate(char[], INameEnvironment, Map<String, String>, IRequestor, IProblemFactory)
27290=EvaluationContext:getVarClassName()
27291=EvaluationContext:deployCodeSnippetClassIfNeeded(IRequestor)
27292=EvaluationContext:allVariables()
27293=EvaluationContext:newVariable(char[], char[], char[])
27294=EvaluationContext:EvaluationContext()
27295=EvaluationContext:evaluateVariable(GlobalVariable, INameEnvironment, Map<String, String>, IRequestor, IProblemFactory)
27296=EvaluationContext:setLineSeparator(String)
27297=EvaluationContext:getPackageName()
27298=EvaluationContext:select(char[], int, int, SearchableEnvironment, ISelectionRequestor, Map<String, String>, WorkingCopyOwner)
27299=EvaluationContext:getRootCodeSnippetBinary()
27300=ElementCache:ElementCache(int)
27301=ElementCache:newInstance(int, int)
27302=ElementCache:ensureSpaceLimit(Object, IJavaElement)
27303=ElementCache:close(LRUCacheEntry)
27304=ElementCache:ElementCache(int, int)
27305=ElementCache:resetSpaceLimit(int, IJavaElement)
27306=X17:getPerProjectInfo(String, boolean)
27307=X17:foo(String)
27308=IJavaElementRequestor:acceptPackageFragment(IPackageFragment)
27309=IJavaElementRequestor:acceptInitializer(IInitializer)
27310=IJavaElementRequestor:acceptType(IType)
27311=IJavaElementRequestor:acceptMemberType(IType)
27312=IJavaElementRequestor:isCanceled()
27313=IJavaElementRequestor:acceptMethod(IMethod)
27314=IJavaElementRequestor:acceptField(IField)
27315=Test:main(String[])
27316=ThisReference:implicitThis()
27317=ThisReference:isImplicitThis()
27318=ThisReference:resolveType(BlockScope)
27319=ThisReference:ThisReference(int, int)
27320=ThisReference:printExpression(int, StringBuffer)
27321=ThisReference:traverse(ASTVisitor, BlockScope)
27322=ThisReference:generateCompoundAssignment(BlockScope, CodeStream, Expression, int, int, boolean)
27323=ThisReference:checkAccess(MethodScope)
27324=ThisReference:generateAssignment(BlockScope, CodeStream, Assignment, boolean)
27325=ThisReference:generatePostIncrement(BlockScope, CodeStream, CompoundAssignment, boolean)
27326=ThisReference:isThis()
27327=ThisReference:analyseAssignment(BlockScope, FlowContext, FlowInfo, Assignment, boolean)
27328=ThisReference:generateCode(BlockScope, CodeStream, boolean)
27329=CodeSnippetCompiler:initializeParser()
27330=CodeSnippetCompiler:CodeSnippetCompiler(INameEnvironment, IErrorHandlingPolicy, CompilerOptions, ICompilerRequestor, IProblemFactory, EvaluationContext, int, int)
27331=SnippetCompletionContextTests:suite()
27332=SnippetCompletionContextTests:test0001()
27333=SnippetCompletionContextTests:test0003()
27334=SnippetCompletionContextTests:SnippetCompletionContextTests(String)
27335=SnippetCompletionContextTests:test0002()
27336=SnippetCompletionContextTests:test0004()
27337=SnippetCompletionContextTests:setUpSuite()
27338=A:foo()
27339=UnresolvedReferenceBinding:UnresolvedReferenceBinding(char[][], PackageBinding)
27340=UnresolvedReferenceBinding:debugName()
27341=UnresolvedReferenceBinding:addWrapper(TypeBinding)
27342=UnresolvedReferenceBinding:setResolvedType(ReferenceBinding, LookupEnvironment)
27343=UnresolvedReferenceBinding:toString()
27344=UnresolvedReferenceBinding:resolve(LookupEnvironment, boolean)
27345=IDOMFactory:createInitializer()
27346=IDOMFactory:createImport(String)
27347=IDOMFactory:createType(String)
27348=IDOMFactory:createCompilationUnit(char[], String)
27349=IDOMFactory:createPackage(String)
27350=IDOMFactory:createCompilationUnit()
27351=IDOMFactory:createPackage()
27352=IDOMFactory:createInterface()
27353=IDOMFactory:createType()
27354=IDOMFactory:createField(String)
27355=IDOMFactory:createMethod()
27356=IDOMFactory:createInitializer(String)
27357=IDOMFactory:createMethod(String)
27358=IDOMFactory:createCompilationUnit(String, String)
27359=IDOMFactory:createImport()
27360=IDOMFactory:createField()
27361=IDOMFactory:createClass()
27362=RecoveredVariableBinding:getModifiers()
27363=RecoveredVariableBinding:isEffectivelyFinal()
27364=RecoveredVariableBinding:getJavaElement()
27365=RecoveredVariableBinding:getVariableDeclaration()
27366=RecoveredVariableBinding:getVariableId()
27367=RecoveredVariableBinding:isParameter()
27368=RecoveredVariableBinding:getConstantValue()
27369=RecoveredVariableBinding:getAnnotations()
27370=RecoveredVariableBinding:isRecovered()
27371=RecoveredVariableBinding:RecoveredVariableBinding(BindingResolver, VariableDeclaration)
27372=RecoveredVariableBinding:getKind()
27373=RecoveredVariableBinding:getKey()
27374=RecoveredVariableBinding:isDeprecated()
27375=RecoveredVariableBinding:isEqualTo(IBinding)
27376=RecoveredVariableBinding:isSynthetic()
27377=RecoveredVariableBinding:isEnumConstant()
27378=RecoveredVariableBinding:isField()
27379=RecoveredVariableBinding:getDeclaringClass()
27380=RecoveredVariableBinding:getName()
27381=RecoveredVariableBinding:getDeclaringMethod()
27382=RecoveredVariableBinding:getType()
27383=Test:foo(int)
27384=MethodDeclaration:getReturnType()
27385=ImportComparator:ImportComparator(ImportGroupComparator, Comparator<ImportName>, Comparator<ImportName>)
27386=ImportComparator:createQualifiedNameComparator()
27387=ImportComparator:compare(ImportName, ImportName)
27388=SourceModifier:copy()
27389=SourceModifier:SourceModifier(int, String, int, int)
27390=SourceModifier:getModifications(String)
27391=TestFailure:thrownException()
27392=TestFailure:isFailure()
27393=TestFailure:failedTest()
27394=TestFailure:trace()
27395=TestFailure:toString()
27396=TestFailure:exceptionMessage()
27397=TestFailure:TestFailure(Test, Throwable)
27398=ASTRewritingJavadocTest:testRemoveJavadoc()
27399=ASTRewritingJavadocTest:testSeeTag2()
27400=ASTRewritingJavadocTest:suite()
27401=ASTRewritingJavadocTest:testRemoveJavadoc2()
27402=ASTRewritingJavadocTest:testParamName()
27403=ASTRewritingJavadocTest:testChangeTagElement()
27404=ASTRewritingJavadocTest:testAddJavadoc_only_2_3_4()
27405=ASTRewritingJavadocTest:testTagRemove2()
27406=ASTRewritingJavadocTest:testTagInsert1()
27407=ASTRewritingJavadocTest:testSeeTagParamInsert1()
27408=ASTRewritingJavadocTest:testTagRemoveInsert()
27409=ASTRewritingJavadocTest:ASTRewritingJavadocTest(String, int)
27410=ASTRewritingJavadocTest:testTagInsert3()
27411=ASTRewritingJavadocTest:ASTRewritingJavadocTest(String)
27412=ASTRewritingJavadocTest:testSeeTag3()
27413=ASTRewritingJavadocTest:testAddJavadoc2()
27414=ASTRewritingJavadocTest:testTagRemove1()
27415=ASTRewritingJavadocTest:testTagRemove3()
27416=ASTRewritingJavadocTest:testMoveTags()
27417=ASTRewritingJavadocTest:testSeeTag1()
27418=ASTRewritingJavadocTest:testSeeTagParamInsert2()
27419=ASTRewritingJavadocTest:testTagInsert4()
27420=ASTRewritingJavadocTest:testTagRemove4_since_3()
27421=ASTRewritingJavadocTest:testTagInsert2()
27422=A:foo()
27423=A:b()
27424=A:B:test()
27425=X:main(String[])
27426=X:foo()
27427=EclipseMirrorType:getTypeBinding()
27428=EclipseMirrorType:isAssignmentCompatible(EclipseMirrorType)
27429=EclipseMirrorType:isSubTypeCompatible(EclipseMirrorType)
27430=A:foo()
27431=A:toString()
27432=X:main(String[])
27433=A:A(E)
27434=A:B:toString()
27435=A:B:B(T)
27436=INamingRequestor:acceptNameWithPrefixAndSuffix(char[], boolean, boolean, int)
27437=INamingRequestor:acceptNameWithoutPrefixAndSuffix(char[], int)
27438=INamingRequestor:acceptNameWithPrefix(char[], boolean, int)
27439=INamingRequestor:acceptNameWithSuffix(char[], boolean, int)
27440=IBinaryType:getTagBits()
27441=IBinaryType:getMissingTypeNames()
27442=IBinaryType:getSourceName()
27443=IBinaryType:sourceFileName()
27444=IBinaryType:getTypeAnnotations()
27445=IBinaryType:isAnonymous()
27446=IBinaryType:getName()
27447=IBinaryType:getAnnotations()
27448=IBinaryType:getGenericSignature()
27449=IBinaryType:getEnclosingTypeName()
27450=IBinaryType:getMemberTypes()
27451=IBinaryType:getExternalAnnotationStatus()
27452=IBinaryType:getEnclosingMethod()
27453=IBinaryType:getFields()
27454=IBinaryType:getMethods()
27455=IBinaryType:isMember()
27456=IBinaryType:isLocal()
27457=IBinaryType:getSuperclassName()
27458=IBinaryType:getInterfaceNames()
27459=IBinaryType:enrichWithExternalAnnotationsFor(ITypeAnnotationWalker, Object, LookupEnvironment)
27460=BecomeWorkingCopyOperation:BecomeWorkingCopyOperation(CompilationUnit, IProblemRequestor)
27461=BecomeWorkingCopyOperation:isReadOnly()
27462=BecomeWorkingCopyOperation:executeOperation()
27463=BecomeWorkingCopyOperation:getWorkingCopy()
27464=X:foo()
27465=X03b:foo()
27466=A:bar()
27467=A:foo()
27468=TypeBinding:isBaseType()
27469=TypeBinding:genericCast(TypeBinding)
27470=TypeBinding:isHierarchyInconsistent()
27471=TypeBinding:isBoundParameterizedType()
27472=TypeBinding:isNestedType()
27473=TypeBinding:constantPoolName()
27474=TypeBinding:isGenericType()
27475=TypeBinding:isClass()
27476=TypeBinding:isTypeVariable()
27477=TypeBinding:isProvablyDistinctFrom(TypeBinding)
27478=TypeBinding:swapUnresolved(UnresolvedReferenceBinding, ReferenceBinding, LookupEnvironment)
27479=TypeBinding:isCompatibleWith(TypeBinding)
27480=TypeBinding:genericTypeSignature()
27481=TypeBinding:qualifiedSourceName()
27482=TypeBinding:isParameterizedType()
27483=TypeBinding:isInterface()
27484=TypeBinding:bindingType()
27485=TypeBinding:signature()
27486=TypeBinding:isMemberType()
27487=TypeBinding:getPackage()
27488=TypeBinding:debugName()
27489=TypeBinding:erasure()
27490=TypeBinding:isRawType()
27491=TypeBinding:isLocalType()
27492=TypeBinding:leafComponentType()
27493=TypeBinding:wellKnownType(Scope, int)
27494=TypeBinding:isWildcard()
27495=TypeBinding:canBeInstantiated()
27496=TypeBinding:dimensions()
27497=TypeBinding:isEquivalentTo(TypeBinding)
27498=TypeBinding:isNumericType()
27499=TypeBinding:sourceName()
27500=TypeBinding:typeVariables()
27501=TypeBinding:isArrayType()
27502=TypeBinding:collectSubstitutes(TypeBinding, Map)
27503=TypeBinding:qualifiedPackageName()
27504=X01:foo()
27505=Example:foo()
27506=ClassFileBytesDisassembler:getDescription()
27507=ClassFileBytesDisassembler:disassemble(byte[], String)
27508=ClassFileBytesDisassembler:disassemble(byte[], String, int)
27509=FieldReferenceMatch:isWriteAccess()
27510=FieldReferenceMatch:isReadAccess()
27511=FieldReferenceMatch:FieldReferenceMatch(IJavaElement, int, int, int, boolean, boolean, boolean, SearchParticipant, IResource)
27512=HelloWorldAnnotationProcessor:getTypeName(Declaration)
27513=HelloWorldAnnotationProcessor:getCode(String)
27514=HelloWorldAnnotationProcessor:process()
27515=HelloWorldAnnotationProcessor:HelloWorldAnnotationProcessor(AnnotationProcessorEnvironment)
27516=WrapPreparator:visit(ConditionalExpression)
27517=WrapPreparator:FieldAccessAdapter:getExpression()
27518=WrapPreparator:handleFieldAccess(Expression)
27519=WrapPreparator:FieldAccessAdapter:FieldAccessAdapter(Expression)
27520=WrapPreparator:visit(IfStatement)
27521=WrapPreparator:visit(FieldAccess)
27522=WrapPreparator:samePrecedence(InfixExpression, InfixExpression)
27523=WrapPreparator:handleWrap(int, ASTNode)
27524=WrapPreparator:finishUp(ASTNode, IRegion[])
27525=WrapPreparator:visit(EnumConstantDeclaration)
27526=WrapPreparator:visit(VariableDeclarationFragment)
27527=WrapPreparator:visit(SuperMethodReference)
27528=WrapPreparator:preserveExistingLineBreaks()
27529=WrapPreparator:setTokenWrapPolicy(int, WrapPolicy, boolean)
27530=WrapPreparator:visit(ArrayInitializer)
27531=WrapPreparator:visit(ClassInstanceCreation)
27532=WrapPreparator:visit(EnumDeclaration)
27533=WrapPreparator:visit(InfixExpression)
27534=WrapPreparator:forceContinuousWrapping(ASTNode, int)
27535=WrapPreparator:visit(ParameterizedType)
27536=WrapPreparator:getLineBreaksToPreserve(Token, Token, boolean)
27537=WrapPreparator:findTokensToWrap(InfixExpression, int)
27538=WrapPreparator:visit(MethodDeclaration)
27539=WrapPreparator:handleVariableDeclarations(List<VariableDeclarationFragment>)
27540=WrapPreparator:doHandleWrap(int, ASTNode)
27541=WrapPreparator:visit(SuperMethodInvocation)
27542=WrapPreparator:visit(UnionType)
27543=WrapPreparator:visit(AnonymousClassDeclaration)
27544=WrapPreparator:FieldAccessAdapter:isFieldAccess(ASTNode)
27545=WrapPreparator:prepareElementsList(List<? extends ASTNode>, int, int)
27546=WrapPreparator:visit(TypeMethodReference)
27547=WrapPreparator:visit(TypeDeclaration)
27548=WrapPreparator:visit(ForStatement)
27549=WrapPreparator:FieldAccessAdapter:getIdentifierIndex(TokenManager)
27550=WrapPreparator:visit(CreationReference)
27551=WrapPreparator:handleArguments(List<? extends ASTNode>, int)
27552=WrapPreparator:visit(SuperConstructorInvocation)
27553=WrapPreparator:visit(ExpressionMethodReference)
27554=WrapPreparator:handleWrap(int, float)
27555=WrapPreparator:preVisit2(ASTNode)
27556=WrapPreparator:visit(AnnotationTypeDeclaration)
27557=WrapPreparator:visit(ThisExpression)
27558=WrapPreparator:getWrapPolicy(int, float, boolean, ASTNode)
27559=WrapPreparator:WrapPreparator(TokenManager, DefaultCodeFormatterOptions, int)
27560=WrapPreparator:handleWrap(int)
27561=WrapPreparator:visit(CompilationUnit)
27562=WrapPreparator:visit(Assignment)
27563=WrapPreparator:wrapComments()
27564=WrapPreparator:visit(TryStatement)
27565=WrapPreparator:visit(ConstructorInvocation)
27566=WrapPreparator:handleTypeArguments(List<Type>)
27567=WrapPreparator:visit(LambdaExpression)
27568=WrapPreparator:fixEnumConstantIndents(ASTNode)
27569=WrapPreparator:visit(SuperFieldAccess)
27570=WrapPreparator:postVisit(ASTNode)
27571=WrapPreparator:visit(VariableDeclarationStatement)
27572=WrapPreparator:visit(NormalAnnotation)
27573=WrapPreparator:applyBreaksOutsideRegions(IRegion[])
27574=WrapPreparator:visit(QualifiedName)
27575=WrapPreparator:visit(FieldDeclaration)
27576=WrapPreparator:visit(MethodInvocation)
27577=IClassFileAttribute:getAttributeLength()
27578=IClassFileAttribute:getAttributeName()
27579=IClassFileAttribute:getAttributeNameIndex()
27580=HierarchyResolver:reset()
27581=HierarchyResolver:reportHierarchy(IType, TypeDeclaration, ReferenceBinding)
27582=HierarchyResolver:remember(IGenericType, ReferenceBinding)
27583=HierarchyResolver:fixSupertypeBindings()
27584=HierarchyResolver:findSuperClass(IGenericType, ReferenceBinding)
27585=HierarchyResolver:worked(IProgressMonitor, int)
27586=HierarchyResolver:remember(IType, ReferenceBinding)
27587=HierarchyResolver:rememberAllTypes(CompilationUnitDeclaration, org.eclipse.jdt.core.ICompilationUnit, boolean)
27588=HierarchyResolver:rememberWithMemberTypes(TypeDeclaration, IType)
27589=HierarchyResolver:subOrSuperOfFocus(ReferenceBinding)
27590=HierarchyResolver:subTypeOfType(ReferenceBinding, ReferenceBinding)
27591=HierarchyResolver:accept(IBinaryType, PackageBinding, AccessRestriction)
27592=HierarchyResolver:resolve(IGenericType)
27593=HierarchyResolver:resolve(Openable[], HashSet, IProgressMonitor)
27594=HierarchyResolver:HierarchyResolver(INameEnvironment, Map, HierarchyBuilder, IProblemFactory)
27595=HierarchyResolver:setFocusType(char[][])
27596=HierarchyResolver:setEnvironment(LookupEnvironment, HierarchyBuilder)
27597=HierarchyResolver:HierarchyResolver(LookupEnvironment, HierarchyBuilder)
27598=HierarchyResolver:accept(ICompilationUnit, AccessRestriction)
27599=HierarchyResolver:findSuperInterfaces(IGenericType, ReferenceBinding)
27600=HierarchyResolver:accept(ISourceType[], PackageBinding, AccessRestriction)
27601=FieldNameAndTypeCache:clear()
27602=FieldNameAndTypeCache:containsKey(FieldBinding)
27603=FieldNameAndTypeCache:FieldNameAndTypeCache()
27604=FieldNameAndTypeCache:hashCode(FieldBinding)
27605=FieldNameAndTypeCache:put(FieldBinding, int)
27606=FieldNameAndTypeCache:FieldNameAndTypeCache(int)
27607=FieldNameAndTypeCache:toString()
27608=FieldNameAndTypeCache:equalsForNameAndType(FieldBinding, FieldBinding)
27609=FieldNameAndTypeCache:size()
27610=FieldNameAndTypeCache:rehash()
27611=FieldNameAndTypeCache:get(FieldBinding)
27612=JavaSearchPattern:getBlankPattern()
27613=JavaSearchPattern:storeTypeSignaturesAndArguments(IType)
27614=JavaSearchPattern:JavaSearchPattern(int, int)
27615=JavaSearchPattern:setTypeArguments(char[][][])
27616=JavaSearchPattern:hasTypeParameters()
27617=JavaSearchPattern:isEquivalentMatch()
27618=JavaSearchPattern:getTypeArguments()
27619=JavaSearchPattern:extractMethodArguments(IMethod)
27620=JavaSearchPattern:isCamelCase()
27621=JavaSearchPattern:matchDifferentTypeSuffixes(int, int)
27622=JavaSearchPattern:toString()
27623=JavaSearchPattern:isErasureMatch()
27624=JavaSearchPattern:getFineGrainFlagString(int)
27625=JavaSearchPattern:print(StringBuffer)
27626=JavaSearchPattern:hasTypeArguments()
27627=JavaSearchPattern:hasSignatures()
27628=JavaSearchPattern:isCaseSensitive()
27629=JavaSearchPattern:getMatchMode()
27630=X:getStrings()
27631=CompilationUnitScope:CompilationUnitScope(CompilationUnitDeclaration, LookupEnvironment)
27632=CompilationUnitScope:faultInTypes()
27633=CompilationUnitScope:toString()
27634=CompilationUnitScope:buildFieldsAndMethods()
27635=CompilationUnitScope:getDefaultImports()
27636=CompilationUnitScope:resolveSingleTypeImport(ImportBinding)
27637=CompilationUnitScope:checkAndSetImports()
27638=CompilationUnitScope:recordReference(char[][], char[])
27639=CompilationUnitScope:buildTypeBindings()
27640=CompilationUnitScope:problemReporter()
27641=CompilationUnitScope:recordSuperTypeReference(TypeBinding)
27642=CompilationUnitScope:getImport(char[][], boolean)
27643=CompilationUnitScope:findOnDemandImport(char[][])
27644=CompilationUnitScope:recordTypeReferences(TypeBinding[])
27645=CompilationUnitScope:computeConstantPoolName(LocalTypeBinding)
27646=CompilationUnitScope:faultInImports()
27647=CompilationUnitScope:verifyMethods(MethodVerifier)
27648=CompilationUnitScope:recordSimpleReference(char[])
27649=CompilationUnitScope:typeToRecord(TypeBinding)
27650=CompilationUnitScope:connectTypeHierarchy()
27651=CompilationUnitScope:storeDependencyInfo()
27652=CompilationUnitScope:findSingleTypeImport(char[][])
27653=CompilationUnitScope:recordQualifiedReference(char[][])
27654=CompilationUnitScope:recordReference(ReferenceBinding, char[])
27655=CompilationUnitScope:recordTypeReference(TypeBinding)
27656=PackageDeclarationLocator:toString()
27657=PackageDeclarationLocator:matchContainer()
27658=PackageDeclarationLocator:PackageDeclarationLocator(PackageDeclarationPattern)
27659=CompletionFindException2:foo()
27660=IRuntimeVisibleAnnotationsAttribute:getAnnotationsNumber()
27661=IRuntimeVisibleAnnotationsAttribute:getAnnotations()
27662=Test:main(String[])
27663=IGenericType:isClass()
27664=IGenericType:isBinaryType()
27665=IGenericType:getModifiers()
27666=IGenericType:isInterface()
27667=NegativeCodeSnippetTest:testProblemInPreviousStatement()
27668=NegativeCodeSnippetTest:testNonLastExpressionStatement()
27669=NegativeCodeSnippetTest:testExtraClosingCurlyBracket()
27670=NegativeCodeSnippetTest:testProblemInExpression2()
27671=NegativeCodeSnippetTest:testInvalidUseOfThisInSnippet()
27672=NegativeCodeSnippetTest:testExtraSemiColonInExpression()
27673=NegativeCodeSnippetTest:testUnreachableExpression()
27674=NegativeCodeSnippetTest:NegativeCodeSnippetTest(String)
27675=NegativeCodeSnippetTest:testProblemInReturnStatement()
27676=NegativeCodeSnippetTest:suite()
27677=NegativeCodeSnippetTest:testRemoveVariable()
27678=NegativeCodeSnippetTest:testChangePackage()
27679=NegativeCodeSnippetTest:testInvalidUseOfThisInSnippet2()
27680=NegativeCodeSnippetTest:testUnusedImport()
27681=NegativeCodeSnippetTest:testProblemInInnerClass()
27682=NegativeCodeSnippetTest:testProblemInExpression()
27683=NegativeCodeSnippetTest:testRemoveImport()
27684=NegativeCodeSnippetTest:testMissingClosingRoundBracket()
27685=NegativeCodeSnippetTest:testMissingDoubleQuote()
27686=NegativeCodeSnippetTest:testInvalidField()
27687=NegativeCodeSnippetTest:testClass()
27688=NegativeCodeSnippetTest:testExtraOpenRoundBracket()
27689=NegativeCodeSnippetTest:testInvalidImport()
27690=NegativeCodeSnippetTest:testWarning()
27691=NegativeCodeSnippetTest:testExpressionInInnerClass()
27692=ICompilerRequestor:acceptResult(CompilationResult)
27693=TestB1:foo()
27694=TestB1:bar()
27695=VariableDeclarationStatement:setModifiers(int)
27696=VariableDeclarationStatement:modifiers()
27697=VariableDeclarationStatement:fragments()
27698=VariableDeclarationStatement:treeSize()
27699=VariableDeclarationStatement:accept0(ASTVisitor)
27700=VariableDeclarationStatement:getModifiers()
27701=VariableDeclarationStatement:getNodeType0()
27702=VariableDeclarationStatement:getType()
27703=VariableDeclarationStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
27704=VariableDeclarationStatement:propertyDescriptors(int)
27705=VariableDeclarationStatement:internalStructuralPropertiesForType(int)
27706=VariableDeclarationStatement:setType(Type)
27707=VariableDeclarationStatement:internalSetModifiers(int)
27708=VariableDeclarationStatement:internalGetChildListProperty(ChildListPropertyDescriptor)
27709=VariableDeclarationStatement:memSize()
27710=VariableDeclarationStatement:clone0(AST)
27711=VariableDeclarationStatement:subtreeMatch0(ASTMatcher, Object)
27712=VariableDeclarationStatement:VariableDeclarationStatement(AST)
27713=VariableDeclarationStatement:internalGetSetIntProperty(SimplePropertyDescriptor, boolean, int)
27714=ResolvedSourceField:unresolved()
27715=ResolvedSourceField:isResolved()
27716=ResolvedSourceField:toStringInfo(int, StringBuffer, Object, boolean)
27717=ResolvedSourceField:getKey()
27718=ResolvedSourceField:ResolvedSourceField(JavaElement, String, String)
27719=ASTRewritingExpressionsTest:testPostfixExpression()
27720=ASTRewritingExpressionsTest:testCharacterLiteral()
27721=ASTRewritingExpressionsTest:testArrayCreation2_since_8()
27722=ASTRewritingExpressionsTest:testSuperMethodInvocation2_since_3()
27723=ASTRewritingExpressionsTest:ASTRewritingExpressionsTest(String, int)
27724=ASTRewritingExpressionsTest:ASTRewritingExpressionsTest(String)
27725=ASTRewritingExpressionsTest:suite()
27726=ASTRewritingExpressionsTest:testSuperConstructorInvocation2_since_3()
27727=ASTRewritingExpressionsTest:testMethodInvocation()
27728=ASTRewritingExpressionsTest:testMethodInvocation2_since_3()
27729=ASTRewritingExpressionsTest:testTypeLiteral()
27730=ASTRewritingExpressionsTest:testSuperConstructorInvocation()
27731=ASTRewritingExpressionsTest:testParenthesizedExpression()
27732=ASTRewritingExpressionsTest:testMethodInvocation1()
27733=ASTRewritingExpressionsTest:testClassInstanceCreation_only_2()
27734=ASTRewritingExpressionsTest:testNumberLiteral()
27735=ASTRewritingExpressionsTest:testSuperFieldInvocation()
27736=ASTRewritingExpressionsTest:testCastExpression()
27737=ASTRewritingExpressionsTest:testArrayCreation()
27738=ASTRewritingExpressionsTest:testIntersectionCastExpression_since_8()
27739=ASTRewritingExpressionsTest:testSuperConstructorInvocation4_since_3()
27740=ASTRewritingExpressionsTest:testAssignment()
27741=ASTRewritingExpressionsTest:testBooleanLiteral()
27742=ASTRewritingExpressionsTest:testCastExpression_bug28824()
27743=ASTRewritingExpressionsTest:testInfixExpression()
27744=ASTRewritingExpressionsTest:testArrayAccess()
27745=ASTRewritingExpressionsTest:_testMethodParamsRenameReorder()
27746=ASTRewritingExpressionsTest:testSimpleName()
27747=ASTRewritingExpressionsTest:testThisExpression()
27748=ASTRewritingExpressionsTest:testConditionalExpression()
27749=ASTRewritingExpressionsTest:testStringLiteral()
27750=ASTRewritingExpressionsTest:testCatchClause()
27751=ASTRewritingExpressionsTest:testArrayInitializer()
27752=ASTRewritingExpressionsTest:testArrayInitializer2()
27753=ASTRewritingExpressionsTest:testInfixExpression2()
27754=ASTRewritingExpressionsTest:allTests()
27755=ASTRewritingExpressionsTest:testClassInstanceCreation2_since_3()
27756=ASTRewritingExpressionsTest:testSuperMethodInvocation()
27757=ASTRewritingExpressionsTest:testFieldAccess()
27758=ASTRewritingExpressionsTest:testBug404251()
27759=ASTRewritingExpressionsTest:testPrefixExpression()
27760=ASTRewritingExpressionsTest:testInstanceofExpression()
27761=AmbiguousSyntaxDemo:main(String[])
27762=FileFinder:find(File, String)
27763=FileFinder:find0(File, String, ArrayList)
27764=X10:foo(int, int)
27765=BinaryFileOutputStream:close()
27766=BinaryFileOutputStream:closeInputStream(InputStream)
27767=BinaryFileOutputStream:BinaryFileOutputStream(IFile, BuildEnv)
27768=BinaryFileOutputStream:saveToDisk(InputStream, boolean)
27769=RecoveryScanner:RecoveryScanner(Scanner, RecoveryScannerData)
27770=RecoveryScanner:getCurrentTokenSource()
27771=RecoveryScanner:isPrecededByRemovedToken()
27772=RecoveryScanner:reverse(int[])
27773=RecoveryScanner:setData(RecoveryScannerData)
27774=RecoveryScanner:insertTokens(int[], int, int)
27775=RecoveryScanner:removeTokens(int, int)
27776=RecoveryScanner:getCurrentTokenSourceString()
27777=RecoveryScanner:isFakeToken()
27778=RecoveryScanner:insertToken(int, int, int)
27779=RecoveryScanner:replaceTokens(int[], int, int)
27780=RecoveryScanner:isReplacedToken()
27781=RecoveryScanner:insertTokenAhead(int, int)
27782=RecoveryScanner:getCurrentIdentifierSource()
27783=RecoveryScanner:RecoveryScanner(boolean, boolean, long, long, char[][], char[][], boolean, RecoveryScannerData)
27784=RecoveryScanner:setPendingTokens(int[])
27785=RecoveryScanner:getData()
27786=RecoveryScanner:replaceTokens(int, int, int)
27787=RecoveryScanner:isInsertedToken()
27788=RecoveryScanner:getNextToken0()
27789=X:foo()
27790=IntersectionType:subtreeMatch0(ASTMatcher, Object)
27791=IntersectionType:clone0(AST)
27792=IntersectionType:memSize()
27793=IntersectionType:IntersectionType(AST)
27794=IntersectionType:accept0(ASTVisitor)
27795=IntersectionType:types()
27796=IntersectionType:getNodeType0()
27797=IntersectionType:internalGetChildListProperty(ChildListPropertyDescriptor)
27798=IntersectionType:internalStructuralPropertiesForType(int)
27799=IntersectionType:propertyDescriptors(int)
27800=IntersectionType:treeSize()
27801=Test:main(String[])
27802=NumberLiteral:clone0(AST)
27803=NumberLiteral:propertyDescriptors(int)
27804=NumberLiteral:memSize()
27805=NumberLiteral:getToken()
27806=NumberLiteral:internalSetToken(String)
27807=NumberLiteral:internalStructuralPropertiesForType(int)
27808=NumberLiteral:getNodeType0()
27809=NumberLiteral:treeSize()
27810=NumberLiteral:accept0(ASTVisitor)
27811=NumberLiteral:setToken(String)
27812=NumberLiteral:internalGetSetObjectProperty(SimplePropertyDescriptor, boolean, Object)
27813=NumberLiteral:NumberLiteral(AST)
27814=NumberLiteral:subtreeMatch0(ASTMatcher, Object)
27815=CompilationUnitElementInfo:setSourceLength(int)
27816=CompilationUnitElementInfo:getSourceRange()
27817=CompilationUnitElementInfo:getSourceLength()
27818=MethodPattern:MethodPattern(int)
27819=MethodPattern:print(StringBuffer)
27820=MethodPattern:MethodPattern(char[], char[], char[], String, char[], char[], String, char[][], char[][], String[], char[][], int, int)
27821=MethodPattern:getIndexCategories()
27822=MethodPattern:getBlankPattern()
27823=MethodPattern:decodeIndexKey(char[])
27824=MethodPattern:MethodPattern(char[], char[], char[], char[], char[], char[][], char[][], IType, int, int)
27825=MethodPattern:hasMethodArguments()
27826=MethodPattern:isPolymorphicSearch()
27827=MethodPattern:matchesDecodedKey(SearchPattern)
27828=MethodPattern:mustResolve()
27829=MethodPattern:MethodPattern(char[], char[], char[], char[], char[], String, char[][], char[][], String[], IMethod, int, int)
27830=MethodPattern:hasMethodParameters()
27831=MethodPattern:queryIn(Index)
27832=MethodPattern:createIndexKey(char[], int)
27833=X13:foo(String)
27834=AnonymousClassDeclaration:AnonymousClassDeclaration(AST)
27835=AnonymousClassDeclaration:internalStructuralPropertiesForType(int)
27836=AnonymousClassDeclaration:getNodeType0()
27837=AnonymousClassDeclaration:bodyDeclarations()
27838=AnonymousClassDeclaration:subtreeMatch0(ASTMatcher, Object)
27839=AnonymousClassDeclaration:treeSize()
27840=AnonymousClassDeclaration:resolveBinding()
27841=AnonymousClassDeclaration:clone0(AST)
27842=AnonymousClassDeclaration:propertyDescriptors(int)
27843=AnonymousClassDeclaration:memSize()
27844=AnonymousClassDeclaration:accept0(ASTVisitor)
27845=AnonymousClassDeclaration:internalGetChildListProperty(ChildListPropertyDescriptor)
27846=A:getMyObject()
27847=BatchAnnotationProcessorManager:discoverNextProcessor()
27848=BatchAnnotationProcessorManager:reportProcessorException(Processor, Exception)
27849=BatchAnnotationProcessorManager:configure(Object, String[])
27850=BatchAnnotationProcessorManager:BatchAnnotationProcessorManager()
27851=BatchAnnotationProcessorManager:getProcessorLocation(Processor)
27852=BatchAnnotationProcessorManager:setProcessors(Object[])
27853=BatchAnnotationProcessorManager:parseCommandLine(String[])
27854=ClassFileMatchLocator:checkStandardAnnotations(long, TypeReferencePattern)
27855=ClassFileMatchLocator:matchAnnotations(SearchPattern, MatchLocator, ClassFile, IBinaryType)
27856=ClassFileMatchLocator:locateMatches(MatchLocator, ClassFile, IBinaryType)
27857=ClassFileMatchLocator:checkParameters(char[], char[][], char[][], boolean, boolean)
27858=ClassFileMatchLocator:matchBinary(SearchPattern, Object, IBinaryType)
27859=ClassFileMatchLocator:matchMethod(MethodPattern, Object, IBinaryType)
27860=ClassFileMatchLocator:matchConstructor(ConstructorPattern, Object, IBinaryType)
27861=ClassFileMatchLocator:matchField(FieldPattern, Object, IBinaryType)
27862=ClassFileMatchLocator:checkAnnotationTypeReference(char[], TypeReferencePattern)
27863=ClassFileMatchLocator:matchSuperTypeReference(SuperTypeReferencePattern, Object, IBinaryType)
27864=ClassFileMatchLocator:checkAnnotation(IBinaryAnnotation, TypeReferencePattern)
27865=ClassFileMatchLocator:checkDeclaringType(IBinaryType, char[], char[], boolean, boolean)
27866=ClassFileMatchLocator:checkTypeName(char[], char[], char[], boolean, boolean)
27867=ClassFileMatchLocator:checkAnnotations(TypeReferencePattern, IBinaryAnnotation[], long)
27868=ClassFileMatchLocator:convertClassFileFormat(char[])
27869=ClassFileMatchLocator:matchTypeDeclaration(TypeDeclarationPattern, Object, IBinaryType)
27870=ParameterizedMethodBinding:ParameterizedMethodBinding(ParameterizedTypeBinding, MethodBinding, boolean)
27871=ParameterizedMethodBinding:ParameterizedMethodBinding()
27872=ParameterizedMethodBinding:hasSubstitutedParameters()
27873=ParameterizedMethodBinding:original()
27874=ParameterizedMethodBinding:instantiateGetClass(TypeBinding, MethodBinding, Scope)
27875=ParameterizedMethodBinding:hasSubstitutedReturnType()
27876=ImportsDelta:ImportsDelta(Collection<ImportName>, Collection<ImportName>)
27877=ImportsDelta:toString()
27878=LineCommentOffsetsTest:testBug114418_since_3()
27879=LineCommentOffsetsTest:suite()
27880=LineCommentOffsetsTest:testRemove_since_3()
27881=LineCommentOffsetsTest:testEmptyLineComments()
27882=LineCommentOffsetsTest:testLineCommentEndOffsets()
27883=LineCommentOffsetsTest:testCommentInType_since_3()
27884=LineCommentOffsetsTest:testBug128422b_since_3()
27885=LineCommentOffsetsTest:testBug95839_since_3()
27886=LineCommentOffsetsTest:testBug103340_since_3()
27887=LineCommentOffsetsTest:testCommentInLists_since_3()
27888=LineCommentOffsetsTest:LineCommentOffsetsTest(String, int)
27889=LineCommentOffsetsTest:LineCommentOffsetsTest(String)
27890=LineCommentOffsetsTest:testBug128818_since_3()
27891=LineCommentOffsetsTest:testLineCommentEndOffsetsMixedLineDelimiter()
27892=LineCommentOffsetsTest:testBug128422_since_3()
27893=LineCommentOffsetsTest:newStatement(AST)
27894=LineCommentOffsetsTest:testCommentAtEnd_since_3()
27895=GenericsProc:examineACTypeParams()
27896=GenericsProc:examineACNames()
27897=GenericsProc:examineATypeParams()
27898=GenericsProc:process(Set<? extends TypeElement>, RoundEnvironment)
27899=GenericsProc:collectElements()
27900=GenericsProc:examineFTypeParams()
27901=GenericsProc:init(ProcessingEnvironment)
27902=ClassLiteralAccess:analyseCode(BlockScope, FlowContext, FlowInfo)
27903=ClassLiteralAccess:generateCode(BlockScope, CodeStream, boolean)
27904=ClassLiteralAccess:resolveType(BlockScope)
27905=ClassLiteralAccess:printExpression(int, StringBuffer)
27906=ClassLiteralAccess:ClassLiteralAccess(int, TypeReference)
27907=ClassLiteralAccess:traverse(ASTVisitor, BlockScope)
27908=TypeHierarchyNotificationTests:testRemoveType()
27909=TypeHierarchyNotificationTests:testRemoveExternalProject()
27910=TypeHierarchyNotificationTests:testCloseProject()
27911=TypeHierarchyNotificationTests:testAddProject()
27912=TypeHierarchyNotificationTests:testAddExtendsSourceType3()
27913=TypeHierarchyNotificationTests:testAddExternalPackage()
27914=TypeHierarchyNotificationTests:testBug316654_b()
27915=TypeHierarchyNotificationTests:testRemoveCompilationUnit()
27916=TypeHierarchyNotificationTests:testRemoveExternalPackage()
27917=TypeHierarchyNotificationTests:testEditExternalSourceType()
27918=TypeHierarchyNotificationTests:testRemoveExternalCompilationUnit()
27919=TypeHierarchyNotificationTests:assertOneChange(ITypeHierarchy)
27920=TypeHierarchyNotificationTests:testEditSourceTypes()
27921=TypeHierarchyNotificationTests:testAddExternalCompilationUnit()
27922=TypeHierarchyNotificationTests:testAddExternalProject()
27923=TypeHierarchyNotificationTests:typeHierarchyChanged(ITypeHierarchy)
27924=TypeHierarchyNotificationTests:changeVisibility(ICompilationUnit, String, String)
27925=TypeHierarchyNotificationTests:testEditExtendsSourceType()
27926=TypeHierarchyNotificationTests:testAddCompilationUnit3()
27927=TypeHierarchyNotificationTests:testRemoveExternalPackageFragmentRoot()
27928=TypeHierarchyNotificationTests:testGetWorkingCopy()
27929=TypeHierarchyNotificationTests:testAddExtendsSourceType1()
27930=TypeHierarchyNotificationTests:suite()
27931=TypeHierarchyNotificationTests:testAddCompilationUnit1()
27932=TypeHierarchyNotificationTests:testBug316654_a()
27933=TypeHierarchyNotificationTests:testAddListenerTwice()
27934=TypeHierarchyNotificationTests:testAddPackage()
27935=TypeHierarchyNotificationTests:setUp()
27936=TypeHierarchyNotificationTests:testRenameExternalCompilationUnit()
27937=TypeHierarchyNotificationTests:testEditBuffer()
27938=TypeHierarchyNotificationTests:testChangeFocusModifier()
27939=TypeHierarchyNotificationTests:testAddAnonymousInRegion()
27940=TypeHierarchyNotificationTests:testOwner()
27941=TypeHierarchyNotificationTests:testAddDependentProject()
27942=TypeHierarchyNotificationTests:addSuper(ICompilationUnit, String, String)
27943=TypeHierarchyNotificationTests:testAddRemoveClassFile()
27944=TypeHierarchyNotificationTests:testBug316654_c()
27945=TypeHierarchyNotificationTests:testRemovePackageFragmentRoots()
27946=TypeHierarchyNotificationTests:testEditSuperType()
27947=TypeHierarchyNotificationTests:testRemovePackage()
27948=TypeHierarchyNotificationTests:testRemoveListener()
27949=TypeHierarchyNotificationTests:testAddCompilationUnit4()
27950=TypeHierarchyNotificationTests:changeSuper(ICompilationUnit, String, String)
27951=TypeHierarchyNotificationTests:testAddPackageFragmentRoot()
27952=TypeHierarchyNotificationTests:testAddCompilationUnitInRegion()
27953=TypeHierarchyNotificationTests:testBug316654()
27954=TypeHierarchyNotificationTests:testAddCompilationUnit2()
27955=TypeHierarchyNotificationTests:reset()
27956=TypeHierarchyNotificationTests:testEditImportSourceType()
27957=TypeHierarchyNotificationTests:testEditFieldSourceType()
27958=TypeHierarchyNotificationTests:TypeHierarchyNotificationTests(String)
27959=TypeHierarchyNotificationTests:testAddExtendsSourceType2()
27960=TypeHierarchyNotificationTests:testRenameCompilationUnit()
27961=TypeHierarchyNotificationTests:testRemoveProject()
27962=TypeHierarchyNotificationTests:tearDown()
27963=A:foo()
27964=SwitchStatement:printStatement(int, StringBuffer)
27965=SwitchStatement:branchChainTo(Label)
27966=SwitchStatement:resolve(BlockScope)
27967=SwitchStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
27968=SwitchStatement:generateCode(BlockScope, CodeStream)
27969=SwitchStatement:traverse(ASTVisitor, BlockScope)
27970=FieldAligner:PositionCounter:token(Token, int)
27971=FieldAligner:isNewGroup(BodyDeclaration, BodyDeclaration)
27972=FieldAligner:handleAlign(List<FieldDeclaration>)
27973=FieldAligner:alignComments()
27974=FieldAligner:PositionCounter:findMaxPosition(int, int)
27975=FieldAligner:alignFields(ArrayList<FieldDeclaration>)
27976=FieldAligner:FieldAligner(TokenManager, DefaultCodeFormatterOptions)
27977=FieldAligner:PositionCounter:PositionCounter()
27978=IParent:hasChildren()
27979=IParent:getChildren()
27980=A:f()
27981=SearchPattern:createPackagePattern(String, int, int)
27982=SearchPattern:getIndexCategories()
27983=SearchPattern:camelCaseMatch(String, String, boolean)
27984=SearchPattern:camelCaseMatch(String, int, int, String, int, int, boolean)
27985=SearchPattern:acceptMatch(String, String, char, SearchPattern, IndexQueryRequestor, SearchParticipant, IJavaSearchScope)
27986=SearchPattern:getBlankPattern()
27987=SearchPattern:createPattern(IJavaElement, int)
27988=SearchPattern:queryIn(Index)
27989=SearchPattern:createTypePattern(String, int, int, char)
27990=SearchPattern:findIndexMatches(Index, IndexQueryRequestor, SearchParticipant, IJavaSearchScope, IProgressMonitor)
27991=SearchPattern:getMatchingRegions(String, String, int)
27992=SearchPattern:getMatchRule()
27993=SearchPattern:createOrPattern(SearchPattern, SearchPattern)
27994=SearchPattern:createMethodOrConstructorPattern(String, int, int, boolean)
27995=SearchPattern:toString()
27996=SearchPattern:validateCamelCasePattern(String)
27997=SearchPattern:currentPattern()
27998=SearchPattern:matchesDecodedKey(SearchPattern)
27999=SearchPattern:getIndexKey()
28000=SearchPattern:acceptMatch(String, String, char, SearchPattern, IndexQueryRequestor, SearchParticipant, IJavaSearchScope, IProgressMonitor)
28001=SearchPattern:validateMatchRule(String, int)
28002=SearchPattern:createAndPattern(SearchPattern, SearchPattern)
28003=SearchPattern:createPattern(String, int, int, int)
28004=SearchPattern:SearchPattern(int)
28005=SearchPattern:decodeIndexKey(char[])
28006=SearchPattern:createFieldPattern(String, int, int)
28007=SearchPattern:camelCaseMatch(String, String)
28008=SearchPattern:isPolymorphicSearch()
28009=SearchPattern:createPattern(IJavaElement, int, int)
28010=SearchPattern:matchesName(char[], char[])
28011=SearchPattern:camelCaseMatch(String, int, int, String, int, int)
28012=SearchPattern:createTypePattern(char[], char[], char[][], String, IType, int, int)
28013=SearchPattern:enclosingTypeNames(IType)
28014=SingleMemberAnnotation:SingleMemberAnnotation()
28015=SingleMemberAnnotation:printExpression(int, StringBuffer)
28016=SingleMemberAnnotation:traverse(ASTVisitor, ClassScope)
28017=SingleMemberAnnotation:traverse(ASTVisitor, BlockScope)
28018=SingleMemberAnnotation:SingleMemberAnnotation(TypeReference, int)
28019=SingleMemberAnnotation:memberValuePairs()
28020=SingleMemberAnnotation:computeElementValuePairs()
28021=SelectionJavadocModelTests:test08()
28022=SelectionJavadocModelTests:test19()
28023=SelectionJavadocModelTests:testBug171802()
28024=SelectionJavadocModelTests:assertSelectionIsEmpty(ICompilationUnit, String)
28025=SelectionJavadocModelTests:testBug171019b()
28026=SelectionJavadocModelTests:test06()
28027=SelectionJavadocModelTests:assertElementEquals(String, String)
28028=SelectionJavadocModelTests:test17()
28029=SelectionJavadocModelTests:testBug191322j1()
28030=SelectionJavadocModelTests:testBug171019d()
28031=SelectionJavadocModelTests:testBug400767()
28032=SelectionJavadocModelTests:test04()
28033=SelectionJavadocModelTests:test15()
28034=SelectionJavadocModelTests:test26()
28035=SelectionJavadocModelTests:testBug171019f()
28036=SelectionJavadocModelTests:testBug191322j3()
28037=SelectionJavadocModelTests:test02()
28038=SelectionJavadocModelTests:test13()
28039=SelectionJavadocModelTests:test24()
28040=SelectionJavadocModelTests:testBug86380()
28041=SelectionJavadocModelTests:testBug165701()
28042=SelectionJavadocModelTests:testBug191322g()
28043=SelectionJavadocModelTests:test11()
28044=SelectionJavadocModelTests:test22()
28045=SelectionJavadocModelTests:testBug90266_Char()
28046=SelectionJavadocModelTests:SelectionJavadocModelTests(String)
28047=SelectionJavadocModelTests:testBug191322i()
28048=SelectionJavadocModelTests:test20()
28049=SelectionJavadocModelTests:suite()
28050=SelectionJavadocModelTests:testBug191322c()
28051=SelectionJavadocModelTests:tearDownSuite()
28052=SelectionJavadocModelTests:testBug191322e()
28053=SelectionJavadocModelTests:test09()
28054=SelectionJavadocModelTests:testBug90266_String()
28055=SelectionJavadocModelTests:test07()
28056=SelectionJavadocModelTests:test18()
28057=SelectionJavadocModelTests:testBug191322a()
28058=SelectionJavadocModelTests:testBug171019c()
28059=SelectionJavadocModelTests:test05()
28060=SelectionJavadocModelTests:test16()
28061=SelectionJavadocModelTests:testBug171019e()
28062=SelectionJavadocModelTests:test03()
28063=SelectionJavadocModelTests:test14()
28064=SelectionJavadocModelTests:test25()
28065=SelectionJavadocModelTests:testBug191322j2()
28066=SelectionJavadocModelTests:testBug165794()
28067=SelectionJavadocModelTests:test01()
28068=SelectionJavadocModelTests:testBug191322f()
28069=SelectionJavadocModelTests:test12()
28070=SelectionJavadocModelTests:test23()
28071=SelectionJavadocModelTests:setUnit(String, String)
28072=SelectionJavadocModelTests:testBug191322h()
28073=SelectionJavadocModelTests:test10()
28074=SelectionJavadocModelTests:test21()
28075=SelectionJavadocModelTests:assertSelectionIsEmpty(ICompilationUnit, String, int)
28076=SelectionJavadocModelTests:testBug171019()
28077=SelectionJavadocModelTests:testBug191322b()
28078=SelectionJavadocModelTests:setUpSuite()
28079=SelectionJavadocModelTests:testBug191322d()
28080=A:testMethod()
28081=ClasspathEntry:decodePatterns(NamedNodeMap, String)
28082=ClasspathEntry:validateLibraryContents(IPath, IJavaProject, String)
28083=ClasspathEntry:equalAttributes(IClasspathAttribute[], IClasspathAttribute[])
28084=ClasspathEntry:removeAttribute(String, NamedNodeMap)
28085=ClasspathEntry:getPath()
28086=ClasspathEntry:resolvedChainedLibraries()
28087=ClasspathEntry:getOutputLocation()
28088=ClasspathEntry:isOptional()
28089=ClasspathEntry:getSourceAttachmentEncoding()
28090=ClasspathEntry:validateClasspathEntry(IJavaProject, IClasspathEntry, boolean, boolean)
28091=ClasspathEntry:encodeAccessRules(XMLWriter, boolean, boolean)
28092=ClasspathEntry:ignoreOptionalProblems()
28093=ClasspathEntry:validateLibraryEntry(IPath, IJavaProject, String, IPath, String, boolean)
28094=ClasspathEntry:validateClasspath(IJavaProject, IClasspathEntry[], IPath)
28095=ClasspathEntry:getAccessRules(IPath[], IPath[])
28096=ClasspathEntry:hasDotDot(IPath)
28097=ClasspathEntry:combineWith(ClasspathEntry)
28098=ClasspathEntry:fullInclusionPatternChars()
28099=ClasspathEntry:decodeUnknownNode(Node, XMLWriter, boolean)
28100=ClasspathEntry:encodeExtraAttributes(XMLWriter, boolean, boolean)
28101=ClasspathEntry:fullExclusionPatternChars()
28102=ClasspathEntry:getContentKind()
28103=ClasspathEntry:resolvedChainedLibraries(IPath)
28104=ClasspathEntry:getExtraAttributes()
28105=ClasspathEntry:elementDecode(Element, IJavaProject, Map)
28106=ClasspathEntry:validateClasspathEntry(IJavaProject, IClasspathEntry, IClasspathContainer, boolean, boolean)
28107=ClasspathEntry:getExternalAnnotationPath(IClasspathEntry, IProject, boolean)
28108=ClasspathEntry:getAccessRuleSet()
28109=ClasspathEntry:resolvedDotDot(IPath)
28110=ClasspathEntry:validateExternalAnnotationPath(IJavaProject, IPath)
28111=ClasspathEntry:toString()
28112=ClasspathEntry:decodeExtraAttributes(NodeList)
28113=ClasspathEntry:getSourceAttachmentRootPath()
28114=ClasspathEntry:encodePatterns(IPath[], String, Map)
28115=ClasspathEntry:ClasspathEntry(int, int, IPath, IPath[], IPath[], IPath, IPath, IPath, boolean, IAccessRule[], boolean, IClasspathAttribute[])
28116=ClasspathEntry:getExclusionPatterns()
28117=ClasspathEntry:hashCode()
28118=ClasspathEntry:getReferencingEntry()
28119=ClasspathEntry:encodeAccessRule(AccessRule, XMLWriter, boolean, boolean)
28120=ClasspathEntry:getChildAttributes(String, NodeList, boolean[])
28121=ClasspathEntry:resolvedChainedLibraries(IPath, HashSet, ArrayList)
28122=ClasspathEntry:ClasspathEntry(int, int, IPath, IPath[], IPath[], IPath, IPath, IPath, IClasspathEntry, boolean, IAccessRule[], boolean, IClasspathAttribute[])
28123=ClasspathEntry:removeNode(String, NamedNodeMap)
28124=ClasspathEntry:rootID()
28125=ClasspathEntry:getSourceAttachmentPath()
28126=ClasspathEntry:decodeAccessRules(NodeList)
28127=ClasspathEntry:getEntryKind()
28128=ClasspathEntry:elementEncode(XMLWriter, IPath, boolean, boolean, Map, boolean)
28129=ClasspathEntry:getAccessRules()
28130=ClasspathEntry:combineAccessRules()
28131=ClasspathEntry:kindFromString(String)
28132=ClasspathEntry:invalidExternalAnnotationPath(IProject)
28133=ClasspathEntry:equals(Object)
28134=ClasspathEntry:combine(IAccessRule[], IAccessRule[], boolean)
28135=ClasspathEntry:getRawExternalAnnotationPath(IClasspathEntry)
28136=ClasspathEntry:getResolvedEntry()
28137=ClasspathEntry:equalPatterns(IPath[], IPath[])
28138=ClasspathEntry:AssertionFailedException:AssertionFailedException(String)
28139=ClasspathEntry:getInclusionPatterns()
28140=ClasspathEntry:encodeUnknownChildren(XMLWriter, boolean, boolean, ArrayList)
28141=ClasspathEntry:getLibraryIndexLocation()
28142=ClasspathEntry:isExported()
28143=ClasspathEntry:kindToString(int)
28144=ClasspathEntry:resolveDotDot(IPath, IPath)
28145=ClasspathEntry:decodeUnknownNode(Node, StringBuffer, IJavaProject)
28146=ClasspathEntry:getCalledFileNames(IPath)
28147=BreakStatement:traverse(ASTVisitor, BlockScope)
28148=BreakStatement:BreakStatement(char[], int, int)
28149=BreakStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
28150=BreakStatement:printStatement(int, StringBuffer)
28151=ASTRewritingLambdaExpressionTest:testLambdaExpressions_since_8()
28152=ASTRewritingLambdaExpressionTest:ASTRewritingLambdaExpressionTest(String)
28153=ASTRewritingLambdaExpressionTest:ASTRewritingLambdaExpressionTest(String, int)
28154=ASTRewritingLambdaExpressionTest:suite()
28155=ASTRewritingLambdaExpressionTest:testLambdaExpressions_Parentheses_since_8()
28156=A:test1()
28157=Test:foo()
28158=PackageFragmentRoot:hashCode()
28159=PackageFragmentRoot:move(IPath, int, int, IClasspathEntry, IProgressMonitor)
28160=PackageFragmentRoot:getSourceAttachmentPath()
28161=PackageFragmentRoot:isExternal()
28162=PackageFragmentRoot:getNonJavaResources()
28163=PackageFragmentRoot:getElementType()
28164=PackageFragmentRoot:resource(PackageFragmentRoot)
28165=PackageFragmentRoot:determineKind(IResource)
28166=PackageFragmentRoot:copy(IPath, int, int, IClasspathEntry, IProgressMonitor)
28167=PackageFragmentRoot:computeChildren(OpenableElementInfo, IResource)
28168=PackageFragmentRoot:getSourceAttachmentRootPath()
28169=PackageFragmentRoot:PackageFragmentRoot(IResource, JavaProject)
28170=PackageFragmentRoot:validateOnClasspath()
28171=PackageFragmentRoot:delete(int, int, IProgressMonitor)
28172=PackageFragmentRoot:getHandleFromMemento(String, MementoTokenizer, WorkingCopyOwner)
28173=PackageFragmentRoot:fullInclusionPatternChars()
28174=PackageFragmentRoot:setSourceMapper(SourceMapper)
28175=PackageFragmentRoot:createElementInfo()
28176=PackageFragmentRoot:resource()
28177=PackageFragmentRoot:getPackageFragment(String[])
28178=PackageFragmentRoot:findSourceAttachmentRecommendation()
28179=PackageFragmentRoot:internalPath()
28180=PackageFragmentRoot:getHandleMemento(StringBuffer)
28181=PackageFragmentRoot:toStringInfo(int, StringBuffer, Object, boolean)
28182=PackageFragmentRoot:validateExistence(IResource)
28183=PackageFragmentRoot:getPackageFragment(String)
28184=PackageFragmentRoot:verifyAttachSource(IPath)
28185=PackageFragmentRoot:buildStructure(OpenableElementInfo, IProgressMonitor, Map, IResource)
28186=PackageFragmentRoot:getHandleMementoDelimiter()
28187=PackageFragmentRoot:getKind()
28188=PackageFragmentRoot:getUnderlyingResource()
28189=PackageFragmentRoot:getResolvedClasspathEntry()
28190=PackageFragmentRoot:createPackageFragment(String, boolean, IProgressMonitor)
28191=PackageFragmentRoot:ignoreOptionalProblems()
28192=PackageFragmentRoot:hasChildren()
28193=PackageFragmentRoot:attachSource(IPath, IPath, IProgressMonitor)
28194=PackageFragmentRoot:isArchive()
28195=PackageFragmentRoot:getPath()
28196=PackageFragmentRoot:equals(Object)
28197=PackageFragmentRoot:computeFolderChildren(IContainer, boolean, String[], ArrayList, char[][], char[][])
28198=PackageFragmentRoot:fullExclusionPatternChars()
28199=PackageFragmentRoot:getPackageName(IFolder)
28200=PackageFragmentRoot:getSourceMapper()
28201=PackageFragmentRoot:internalKind()
28202=PackageFragmentRoot:getElementName()
28203=PackageFragmentRoot:getRawClasspathEntry()
28204=PackageFragmentRoot:createSourceMapper(IPath, IPath)
28205=IPackageDeclaration:getElementName()
28206=X:foo(E)
28207=FieldReference:generateCode(BlockScope, CodeStream, boolean)
28208=FieldReference:traverse(ASTVisitor, BlockScope)
28209=FieldReference:analyseCode(BlockScope, FlowContext, FlowInfo, boolean)
28210=FieldReference:generateAssignment(BlockScope, CodeStream, Assignment, boolean)
28211=FieldReference:computeConversion(Scope, TypeBinding, TypeBinding)
28212=FieldReference:getConstantFor(FieldBinding, Reference, boolean, Scope)
28213=FieldReference:setFieldIndex(int)
28214=FieldReference:genericTypeArguments()
28215=FieldReference:resolveType(BlockScope)
28216=FieldReference:setActualReceiverType(ReferenceBinding)
28217=FieldReference:isSuperAccess()
28218=FieldReference:FieldReference(char[], long)
28219=FieldReference:analyseCode(BlockScope, FlowContext, FlowInfo)
28220=FieldReference:generateCompoundAssignment(BlockScope, CodeStream, Expression, int, int, boolean)
28221=FieldReference:generatePostIncrement(BlockScope, CodeStream, CompoundAssignment, boolean)
28222=FieldReference:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo, boolean)
28223=FieldReference:printExpression(int, StringBuffer)
28224=FieldReference:setDepth(int)
28225=FieldReference:fieldBinding()
28226=FieldReference:isTypeAccess()
28227=FieldReference:analyseAssignment(BlockScope, FlowContext, FlowInfo, Assignment, boolean)
28228=IQualifiedTypeResolutionListener:recordResolution(QualifiedTypeReference, TypeBinding)
28229=X08:foo()
28230=ProblemMethodBinding:problemId()
28231=ProblemMethodBinding:ProblemMethodBinding(MethodBinding, char[], TypeBinding[], int)
28232=ProblemMethodBinding:ProblemMethodBinding(char[], TypeBinding[], ReferenceBinding, int)
28233=ProblemMethodBinding:ProblemMethodBinding(char[], TypeBinding[], int)
28234=ASTRewritingStatementsTest:testDoStatement2_since_4()
28235=ASTRewritingStatementsTest:testTryStatement2_since_4()
28236=ASTRewritingStatementsTest:testRemove1()
28237=ASTRewritingStatementsTest:suite()
28238=ASTRewritingStatementsTest:testBug417923g_since_8()
28239=ASTRewritingStatementsTest:testSwitchStatement10()
28240=ASTRewritingStatementsTest:testRemoveStatement10()
28241=ASTRewritingStatementsTest:ASTRewritingStatementsTest(String, int)
28242=ASTRewritingStatementsTest:testThrowStatement_only_2()
28243=ASTRewritingStatementsTest:testBug417923k_since_8()
28244=ASTRewritingStatementsTest:testSwitchStatement12()
28245=ASTRewritingStatementsTest:testBug400568_a_since_8()
28246=ASTRewritingStatementsTest:testContinueStatement()
28247=ASTRewritingStatementsTest:testRemoveStatement01()
28248=ASTRewritingStatementsTest:testIfStatement5()
28249=ASTRewritingStatementsTest:testRemoveStatement12()
28250=ASTRewritingStatementsTest:testBug417923c_since_8()
28251=ASTRewritingStatementsTest:testBug417923d_since_8()
28252=ASTRewritingStatementsTest:testForStatement2()
28253=ASTRewritingStatementsTest:testConstructorInvocation()
28254=ASTRewritingStatementsTest:testAssertStatement()
28255=ASTRewritingStatementsTest:testTryStatementWithResources5_since_4()
28256=ASTRewritingStatementsTest:testLabeledStatement()
28257=ASTRewritingStatementsTest:testIfStatement3()
28258=ASTRewritingStatementsTest:testIfStatementReplaceElse4()
28259=ASTRewritingStatementsTest:testRemoveStatement03()
28260=ASTRewritingStatementsTest:testRemove3()
28261=ASTRewritingStatementsTest:testBug413592a_since_8()
28262=ASTRewritingStatementsTest:testReplace1()
28263=ASTRewritingStatementsTest:testExpressionStatement()
28264=ASTRewritingStatementsTest:testRemoveStatement05()
28265=ASTRewritingStatementsTest:testSwitchStatement8()
28266=ASTRewritingStatementsTest:testTryStatement3_since_4()
28267=ASTRewritingStatementsTest:testIfStatementReplaceElse3()
28268=ASTRewritingStatementsTest:internalSetExtraDimensions(VariableDeclarationFragment, int)
28269=ASTRewritingStatementsTest:testTryStatementWithMultiCatch1_since_4()
28270=ASTRewritingStatementsTest:testBreakStatement()
28271=ASTRewritingStatementsTest:testRemoveStatement07()
28272=ASTRewritingStatementsTest:testReturnStatement()
28273=ASTRewritingStatementsTest:testIfStatementReplaceElse1()
28274=ASTRewritingStatementsTest:testIfStatement_bug48988()
28275=ASTRewritingStatementsTest:testInsert2()
28276=ASTRewritingStatementsTest:testRemoveStatement09()
28277=ASTRewritingStatementsTest:testTryStatement()
28278=ASTRewritingStatementsTest:testDoStatement()
28279=ASTRewritingStatementsTest:testWhileStatement1()
28280=ASTRewritingStatementsTest:testSwitchStatement6()
28281=ASTRewritingStatementsTest:testRemove2()
28282=ASTRewritingStatementsTest:testBug417923i_since_8()
28283=ASTRewritingStatementsTest:testTryStatement4_since_4()
28284=ASTRewritingStatementsTest:ASTRewritingStatementsTest(String)
28285=ASTRewritingStatementsTest:testForStatement1()
28286=ASTRewritingStatementsTest:testTryStatementWithResources3_since_4()
28287=ASTRewritingStatementsTest:testSwitchStatement11()
28288=ASTRewritingStatementsTest:testSwitchStatement2()
28289=ASTRewritingStatementsTest:testTryStatementWithMultiCatch2_since_4()
28290=ASTRewritingStatementsTest:testVariableDeclarationStatement1_only_2()
28291=ASTRewritingStatementsTest:testIfStatement6()
28292=ASTRewritingStatementsTest:testBug417923e_since_8()
28293=ASTRewritingStatementsTest:testInsertCode()
28294=ASTRewritingStatementsTest:testConstructorInvocation2_since_3()
28295=ASTRewritingStatementsTest:testBug417923b_since_8()
28296=ASTRewritingStatementsTest:testReplace2()
28297=ASTRewritingStatementsTest:testVariableDeclarationStatement2_only_3()
28298=ASTRewritingStatementsTest:testTryStatementWithResources7_since_4()
28299=ASTRewritingStatementsTest:testIfStatement4()
28300=ASTRewritingStatementsTest:testRemoveStatement11()
28301=ASTRewritingStatementsTest:testBug417923a_since_8()
28302=ASTRewritingStatementsTest:testBug417923m_since_8()
28303=ASTRewritingStatementsTest:testTypeDeclarationStatement_only_2()
28304=ASTRewritingStatementsTest:testInsertComment()
28305=ASTRewritingStatementsTest:testBug413592b_since_8()
28306=ASTRewritingStatementsTest:testRemoveStatement02()
28307=ASTRewritingStatementsTest:testTryStatementWithResources6_since_4()
28308=ASTRewritingStatementsTest:testIfStatement2()
28309=ASTRewritingStatementsTest:testIfStatementReplaceElse5()
28310=ASTRewritingStatementsTest:testDoStatement1()
28311=ASTRewritingStatementsTest:testIfStatement1()
28312=ASTRewritingStatementsTest:testIfStatementReplaceElse2()
28313=ASTRewritingStatementsTest:testBug417923j_since_8()
28314=ASTRewritingStatementsTest:testTryStatementWithResources2_since_4()
28315=ASTRewritingStatementsTest:testBugASTFormatter_since_8()
28316=ASTRewritingStatementsTest:testReturnStatement2()
28317=ASTRewritingStatementsTest:testBug417923l_since_8()
28318=ASTRewritingStatementsTest:testRemoveStatement04()
28319=ASTRewritingStatementsTest:testSwitchStatement7()
28320=ASTRewritingStatementsTest:testBug417923f_since_8()
28321=ASTRewritingStatementsTest:testTryStatementWithResources4_since_4()
28322=ASTRewritingStatementsTest:testTryStatementWithResources_since_4()
28323=ASTRewritingStatementsTest:testWhileStatement()
28324=ASTRewritingStatementsTest:testRemoveStatement06()
28325=ASTRewritingStatementsTest:testSwitchStatement9()
28326=ASTRewritingStatementsTest:testSwitchStatement13()
28327=ASTRewritingStatementsTest:testInsert1()
28328=ASTRewritingStatementsTest:testSwitchStatement()
28329=ASTRewritingStatementsTest:testRemoveStatement08()
28330=ASTRewritingStatementsTest:testSwitchStatement3()
28331=ASTRewritingStatementsTest:testSynchronizedStatement()
28332=ASTRewritingStatementsTest:testIfStatement()
28333=ASTRewritingStatementsTest:testBug400568_since_8()
28334=ASTRewritingStatementsTest:testForStatement()
28335=ASTRewritingStatementsTest:testInsert3()
28336=ASTRewritingStatementsTest:testSwitchStatement5()
28337=ASTRewritingStatementsTest:testBug417923h_since_8()
28338=FactoryTests:testCreateLibInOutput()
28339=FactoryTests:testCreateFromFileWithoutExtension()
28340=FactoryTests:testCreateCompilationUnitsNotOnClasspath()
28341=FactoryTests:testCreateBinaryToolObject()
28342=FactoryTests:testCreateJarToolObject()
28343=FactoryTests:FactoryTests(String)
28344=FactoryTests:testCreateFromEmptyJavaFile()
28345=FactoryTests:testCreateCompilationUnits()
28346=FactoryTests:suite()
28347=FactoryTests:testCreateFolderToolObjects()
28348=FactoryTests:testCreateFromInvalidMemento()
28349=LongLiteralMinValue:LongLiteralMinValue(char[], char[], int, int)
28350=LongLiteralMinValue:computeConstant()
28351=ICodeCompletionRequestor:acceptPackage(char[], char[], int, int)
28352=ICodeCompletionRequestor:acceptLocalVariable(char[], char[], char[], int, int, int)
28353=ICodeCompletionRequestor:acceptModifier(char[], int, int)
28354=ICodeCompletionRequestor:acceptKeyword(char[], int, int)
28355=ICodeCompletionRequestor:acceptField(char[], char[], char[], char[], char[], char[], int, int, int)
28356=ICodeCompletionRequestor:acceptMethod(char[], char[], char[], char[][], char[][], char[], char[], char[], int, int, int)
28357=ICodeCompletionRequestor:acceptInterface(char[], char[], char[], int, int, int)
28358=ICodeCompletionRequestor:acceptType(char[], char[], char[], int, int)
28359=ICodeCompletionRequestor:acceptLabel(char[], int, int)
28360=ICodeCompletionRequestor:acceptClass(char[], char[], char[], int, int, int)
28361=ICodeCompletionRequestor:acceptError(IMarker)
28362=ILRUCacheable:getCacheFootprint()
28363=Test:foo(Exception)
28364=SourceFileAttribute:getSourceFileIndex()
28365=SourceFileAttribute:getSourceFileName()
28366=SourceFileAttribute:SourceFileAttribute(byte[], IConstantPool, int)
28367=CodeSnippetScope:findFieldForCodeSnippet(TypeBinding, char[], InvocationSite)
28368=CodeSnippetScope:findMethodForArray(ArrayBinding, char[], TypeBinding[], InvocationSite)
28369=CodeSnippetScope:getImplicitMethod(ReferenceBinding, char[], TypeBinding[], InvocationSite)
28370=CodeSnippetScope:getFieldForCodeSnippet(TypeBinding, char[], InvocationSite)
28371=CodeSnippetScope:getBinding(char[][], int, InvocationSite, ReferenceBinding)
28372=CodeSnippetScope:CodeSnippetScope(BlockScope, int)
28373=CodeSnippetScope:canBeSeenByForCodeSnippet(ReferenceBinding, ReferenceBinding)
28374=CodeSnippetScope:CodeSnippetScope(BlockScope)
28375=CodeSnippetScope:getConstructor(ReferenceBinding, TypeBinding[], InvocationSite)
28376=CodeSnippetScope:canBeSeenByForCodeSnippet(FieldBinding, TypeBinding, InvocationSite, Scope)
28377=CodeSnippetScope:findExactMethod(ReferenceBinding, char[], TypeBinding[], InvocationSite)
28378=CodeSnippetScope:findMethod(ReferenceBinding, char[], TypeBinding[], InvocationSite, boolean)
28379=CodeSnippetScope:CodeSnippetScope(int, Scope)
28380=CodeSnippetScope:canBeSeenByForCodeSnippet(MethodBinding, TypeBinding, InvocationSite, Scope)
28381=IndexingParser:newImportReference(char[][], long[], boolean, int)
28382=IndexingParser:newQualifiedNameReference(char[][], long[], int, int)
28383=IndexingParser:newSingleNameReference(char[], long)
28384=IndexingParser:IndexingParser(ISourceElementRequestor, IProblemFactory, CompilerOptions, boolean, boolean, boolean)
28385=RuntimeInvisibleTypeAnnotationsAttribute:RuntimeInvisibleTypeAnnotationsAttribute(byte[], IConstantPool, int)
28386=RuntimeInvisibleTypeAnnotationsAttribute:getExtendedAnnotations()
28387=RuntimeInvisibleTypeAnnotationsAttribute:getExtendedAnnotationsNumber()
28388=DOMImport:setFlags(int)
28389=DOMImport:isOnDemand()
28390=DOMImport:newDOMNode()
28391=DOMImport:DOMImport(char[], int[], String, boolean, int)
28392=DOMImport:getContents()
28393=DOMImport:getNodeType()
28394=DOMImport:getFlags()
28395=DOMImport:getJavaElement(IJavaElement)
28396=DOMImport:appendFragmentedContents(CharArrayBuffer)
28397=DOMImport:setName(String)
28398=DOMImport:DOMImport(char[], int[], String, int[], boolean, int)
28399=DOMImport:DOMImport()
28400=DOMImport:getDetailedNode()
28401=DOMImport:toString()
28402=X:bar(String[][])
28403=AnnotationMirror:getAnnotationType()
28404=AnnotationMirror:getPosition()
28405=AnnotationMirror:getElementValues()
28406=X:foo(X<? super E>)
28407=Z:foo()
28408=Z:Z(T)
28409=OneTest:suite()
28410=OneTest:test1()
28411=A:foo(java.lang.String, long)
28412=X:m(E)
28413=A:main(String[])
28414=MyInterface:foo(S)
28415=IBinaryTypeAnnotation:getTargetType()
28416=IBinaryTypeAnnotation:getAnnotation()
28417=IBinaryTypeAnnotation:getBoundIndex()
28418=IBinaryTypeAnnotation:getTypePath()
28419=IBinaryTypeAnnotation:getMethodFormalParameterIndex()
28420=IBinaryTypeAnnotation:getSupertypeIndex()
28421=IBinaryTypeAnnotation:getThrowsTypeIndex()
28422=IBinaryTypeAnnotation:getTypeParameterIndex()
28423=ArrayTest:test009()
28424=ArrayTest:test007()
28425=ArrayTest:test018()
28426=ArrayTest:test005()
28427=ArrayTest:test016()
28428=ArrayTest:test003()
28429=ArrayTest:test014()
28430=ArrayTest:test001()
28431=ArrayTest:test012()
28432=ArrayTest:test010()
28433=ArrayTest:ArrayTest(String)
28434=ArrayTest:testClass()
28435=ArrayTest:test008()
28436=ArrayTest:test019()
28437=ArrayTest:test006()
28438=ArrayTest:test017()
28439=ArrayTest:suite()
28440=ArrayTest:test004()
28441=ArrayTest:test015()
28442=ArrayTest:test002()
28443=ArrayTest:test013()
28444=ArrayTest:test011()
28445=Test:foo()
28446=LocalVMLauncher:getVMPath()
28447=LocalVMLauncher:getVMArguments()
28448=LocalVMLauncher:getClassPath()
28449=LocalVMLauncher:setBootClassPath(java.lang.String[])
28450=LocalVMLauncher:setVMPath(String)
28451=LocalVMLauncher:getDebugPort()
28452=LocalVMLauncher:setProgramArguments(String[])
28453=LocalVMLauncher:getEvalTargetPath()
28454=LocalVMLauncher:getRunningVirtualMachines()
28455=LocalVMLauncher:setEvalPort(int)
28456=LocalVMLauncher:setVMArguments(String[])
28457=LocalVMLauncher:setDebugPort(int)
28458=LocalVMLauncher:getTargetAddress()
28459=LocalVMLauncher:execCommandLine()
28460=LocalVMLauncher:launch()
28461=LocalVMLauncher:getProgramArguments()
28462=LocalVMLauncher:buildClassPath()
28463=LocalVMLauncher:setClassPath(String[])
28464=LocalVMLauncher:getProgramClass()
28465=LocalVMLauncher:getLauncher()
28466=LocalVMLauncher:setProgramClass(String)
28467=LocalVMLauncher:getEvalPort()
28468=LocalVMLauncher:getBootClassPath()
28469=LocalVMLauncher:getCommandLine()
28470=LocalVMLauncher:setEvalTargetPath(String)
28471=LocalVMLauncher:initTargetPath()
28472=Test:foo()
28473=Example:bar()
28474=Example:foo()
28475=Example:foo2()
28476=FullSourceWorkspaceTests:initLogDir()
28477=FullSourceWorkspaceTests:storeDimension(PrintStream[], String[], Statistics, int)
28478=FullSourceWorkspaceTests:tagAsSummary(String, boolean)
28479=FullSourceWorkspaceTests:setUp()
28480=FullSourceWorkspaceTests:simulateExit()
28481=FullSourceWorkspaceTests:createJavaProject(String, String[], String, String)
28482=FullSourceWorkspaceTests:suiteTypeShortName(Class)
28483=FullSourceWorkspaceTests:collectAllFiles(File, ArrayList, FileFilter)
28484=FullSourceWorkspaceTests:getPackageFragment(IJavaProject, String, String)
28485=FullSourceWorkspaceTests:getAllFiles(File, FileFilter)
28486=FullSourceWorkspaceTests:FullSourceWorkspaceTests(String)
28487=FullSourceWorkspaceTests:stopMeasuring()
28488=FullSourceWorkspaceTests:compliance()
28489=FullSourceWorkspaceTests:getCompilationUnit(String, String, String)
28490=FullSourceWorkspaceTests:getProject(String)
28491=FullSourceWorkspaceTests:tagAsGlobalSummary(String, Dimension)
28492=FullSourceWorkspaceTests:warningOptions(int)
28493=FullSourceWorkspaceTests:getExternalResourcePath(String)
28494=FullSourceWorkspaceTests:getClassFile(IJavaProject, String, String, String)
28495=FullSourceWorkspaceTests:logPerfResult(PrintStream[], int)
28496=FullSourceWorkspaceTests:runGc()
28497=FullSourceWorkspaceTests:startMeasuring()
28498=FullSourceWorkspaceTests:splitListInSmallArrays(List, int)
28499=FullSourceWorkspaceTests:simulateExitRestart()
28500=FullSourceWorkspaceTests:tagAsSummary(String, Dimension[])
28501=FullSourceWorkspaceTests:simulateRestart()
28502=FullSourceWorkspaceTests:tagAsGlobalSummary(String, boolean)
28503=FullSourceWorkspaceTests:FullSourceProjectsFilter:accept(File)
28504=FullSourceWorkspaceTests:commitMeasurements()
28505=FullSourceWorkspaceTests:getExternalPath()
28506=FullSourceWorkspaceTests:createPrintStream(Class, PrintStream[], int, String)
28507=FullSourceWorkspaceTests:tearDown()
28508=FullSourceWorkspaceTests:clearOptions(Map)
28509=FullSourceWorkspaceTests:buildSuite(Class)
28510=FullSourceWorkspaceTests:getPluginBinariesDirectoryPath()
28511=FullSourceWorkspaceTests:getProjectCompilationUnits(IJavaProject)
28512=FullSourceWorkspaceTests:getExternalJarFile(IJavaProject, String)
28513=FullSourceWorkspaceTests:tagAsGlobalSummary(String, Dimension, boolean)
28514=FullSourceWorkspaceTests:tagAsGlobalSummary(String, Dimension[])
28515=FullSourceWorkspaceTests:tagAsSummary(String, Dimension[], boolean)
28516=FullSourceWorkspaceTests:getPackageFragmentRoot(IJavaProject, String)
28517=FullSourceWorkspaceTests:tagAsSummary(String, Dimension)
28518=FullSourceWorkspaceTests:setUpFullSourceWorkspace()
28519=FullSourceWorkspaceTests:tagAsSummary(String, Dimension, boolean)
28520=StackMapFrame:getNumberOfLocals()
28521=StackMapFrame:sizeInBytes()
28522=StackMapFrame:getOffsetDelta()
28523=StackMapFrame:StackMapFrame(byte[], IConstantPool, int)
28524=StackMapFrame:getFrameType()
28525=StackMapFrame:getLocals()
28526=StackMapFrame:getStackItems()
28527=StackMapFrame:getNumberOfStackItems()
28528=Test:foo(Object, T, Object)
28529=ClassNameTests:testSearchTypeNameInJars()
28530=ClassNameTests:testBug302455()
28531=ClassNameTests:testClassNameWithDollar()
28532=ClassNameTests:testFindTypeWithDot()
28533=ClassNameTests:setUp()
28534=ClassNameTests:assertTypeUnknown(String, String)
28535=ClassNameTests:testFindSecondaryType_NotFound03()
28536=ClassNameTests:tearDown()
28537=ClassNameTests:ClassNameTests(String)
28538=ClassNameTests:testFindSecondaryType_Exist04()
28539=ClassNameTests:testBug152841()
28540=ClassNameTests:testFindSecondaryType_NotFound01()
28541=ClassNameTests:testFindSecondaryType_Exist06()
28542=ClassNameTests:testFindSecondaryType_Unknown02()
28543=ClassNameTests:testBug351498()
28544=ClassNameTests:testFindSecondaryType_NotFound04()
28545=ClassNameTests:testFindSecondaryType_Exist01()
28546=ClassNameTests:assertTypeFound(String, String)
28547=ClassNameTests:suite()
28548=ClassNameTests:assertTypeUnknown(String)
28549=ClassNameTests:assertTypeNotFound(String, String)
28550=ClassNameTests:assertTypeFound(String, String, String)
28551=ClassNameTests:testFindSecondaryType_NotFound02()
28552=ClassNameTests:testFindSecondaryType_Exist03()
28553=ClassNameTests:testBug306477()
28554=ClassNameTests:testFindSecondaryType_Exist05()
28555=ClassNameTests:testFindSecondaryType_Unknown03()
28556=ClassNameTests:testFindSecondaryType_Unknown01()
28557=ClassNameTests:testFindSecondaryType_NotFound05()
28558=ClassNameTests:testFindSecondaryType_Exist02()
28559=ClassNameTests:assertTypeNotFound(String)
28560=ClassNameTests:testFindSecondaryType_Bug72179()
28561=NoOpAnnotationProcessorFactory:NoOpAnnotationProcessorFactory()
28562=NoOpAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
28563=ResolveLocalClass2:foo()
28564=CompilationParticipant:cleanStarting(IJavaProject)
28565=CompilationParticipant:processAnnotations(BuildContext[])
28566=CompilationParticipant:buildFinished(IJavaProject)
28567=CompilationParticipant:isActive(IJavaProject)
28568=CompilationParticipant:buildStarting(BuildContext[], boolean)
28569=CompilationParticipant:reconcile(ReconcileContext)
28570=CompilationParticipant:aboutToBuild(IJavaProject)
28571=CompilationParticipant:isAnnotationProcessor()
28572=FT47209:FT47209(String)
28573=FT47209:m47209(int)
28574=MacVMLauncher:buildBootClassPath()
28575=MacVMLauncher:getCommandLine()
28576=AssistParser:createSingleAssistTypeReference(char[], long)
28577=AssistParser:goForHeaders()
28578=AssistParser:createSnapShotParser()
28579=AssistParser:initialize()
28580=AssistParser:copyState(Parser)
28581=AssistParser:recoveryExitFromVariable()
28582=AssistParser:consumeEnhancedForStatementHeaderInit(boolean)
28583=AssistParser:AssistParser(ProblemReporter)
28584=AssistParser:recoveryTokenCheck()
28585=AssistParser:reset()
28586=AssistParser:topKnownElementInfo(int, int)
28587=AssistParser:popElement(int)
28588=AssistParser:consumeNestedLambda()
28589=AssistParser:wrapWithExplicitConstructorCallIfNeeded(ASTNode)
28590=AssistParser:consumeEnumConstantNoClassBody()
28591=AssistParser:topKnownElementKind(int)
28592=AssistParser:parseBlockStatements(Initializer, TypeDeclaration, CompilationUnitDeclaration)
28593=AssistParser:consumeMethodBody()
28594=AssistParser:consumeMethodInvocationName()
28595=AssistParser:createQualifiedAssistNameReference(char[][], char[], long[])
28596=AssistParser:goForBlockStatementsOrCatchHeader()
28597=AssistParser:replaceAssistStatement(RecoveredElement, ASTNode, int, int, Statement)
28598=AssistParser:isInsideFieldInitialization()
28599=AssistParser:shouldStackAssistNode()
28600=AssistParser:assistNodeParent()
28601=AssistParser:consumeClassHeader()
28602=AssistParser:goForBlockStatementsopt()
28603=AssistParser:isAssistParser()
28604=AssistParser:isIndirectlyInsideLambdaBlock()
28605=AssistParser:pushOnElementStack(int)
28606=AssistParser:isInsideType()
28607=AssistParser:consumeSingleTypeImportDeclarationName()
28608=AssistParser:setAssistIdentifier(char[])
28609=AssistParser:popUntilElement(int)
28610=AssistParser:consumeClassBodyDeclaration()
28611=AssistParser:consumeClassBodyopt()
28612=AssistParser:parseBlockStatements(ConstructorDeclaration, CompilationUnitDeclaration)
28613=AssistParser:getUnspecifiedReferenceOptimized()
28614=AssistParser:createAssistPackageReference(char[][], long[])
28615=AssistParser:commit()
28616=AssistParser:consumeNestedMethod()
28617=AssistParser:lastIndexOfElement(int)
28618=AssistParser:isInsideArrayInitializer()
28619=AssistParser:consumeBlockStatements()
28620=AssistParser:prepareForBlockStatements()
28621=AssistParser:consumeEnterAnonymousClassBody(boolean)
28622=AssistParser:consumeSingleStaticImportDeclarationName()
28623=AssistParser:isIndirectlyInsideMethod()
28624=AssistParser:topKnownElementInfo(int)
28625=AssistParser:pushOnElementStack(int, int)
28626=AssistParser:triggerRecoveryUponLambdaClosure(Statement, boolean)
28627=AssistParser:consumeMethodInvocationPrimary()
28628=AssistParser:consumeEnumConstantHeaderName()
28629=AssistParser:indexOfAssistIdentifier(boolean)
28630=AssistParser:isIndirectlyInsideFieldInitialization()
28631=AssistParser:consumeStaticOnly()
28632=AssistParser:identifierSubSet(int)
28633=AssistParser:isIndirectlyInsideLambdaExpression()
28634=AssistParser:fallBackToSpringForward(Statement)
28635=AssistParser:consumeForceNoDiet()
28636=AssistParser:requireExtendedRecovery()
28637=AssistParser:buildInitialRecoveryState()
28638=AssistParser:createAssistImportReference(char[][], long[], int)
28639=AssistParser:consumeMethodInvocationSuperWithTypeArguments()
28640=AssistParser:assistIdentifier()
28641=AssistParser:bodyEnd(AbstractMethodDeclaration)
28642=AssistParser:getTypeReference(int)
28643=AssistParser:consumeInterfaceHeader()
28644=AssistParser:isIndirectlyInsideType()
28645=AssistParser:consumeConstructorBody()
28646=AssistParser:consumeEnumHeader()
28647=AssistParser:consumeTypeImportOnDemandDeclarationName()
28648=AssistParser:topKnownElementKind(int, int)
28649=AssistParser:consumePackageDeclarationNameWithModifiers()
28650=AssistParser:resumeAfterRecovery()
28651=AssistParser:initialize(boolean)
28652=AssistParser:flushAssistState()
28653=AssistParser:consumeOpenBlock()
28654=AssistParser:isInsideMethod()
28655=AssistParser:prepareForHeaders()
28656=AssistParser:consumeStaticInitializer()
28657=AssistParser:consumeMethodInvocationSuper()
28658=AssistParser:consumeMethodHeader()
28659=AssistParser:consumeEnumConstantWithClassBody()
28660=AssistParser:consumeMethodInvocationNameWithTypeArguments()
28661=AssistParser:bodyEnd(Initializer)
28662=AssistParser:consumeEnumConstantHeader()
28663=AssistParser:getNextToken()
28664=AssistParser:parseBlockStatements(MethodDeclaration, CompilationUnitDeclaration)
28665=AssistParser:initializeScanner()
28666=AssistParser:topKnownElementObjectInfo(int, int)
28667=AssistParser:consumeToken(int)
28668=AssistParser:topKnownElementObjectInfo(int)
28669=AssistParser:consumeMethodDeclaration(boolean, boolean)
28670=AssistParser:consumeStaticImportOnDemandDeclarationName()
28671=AssistParser:goForCompilationUnit()
28672=AssistParser:getAssistTypeReferenceForGenericType(int, int, int)
28673=AssistParser:consumeConstructorHeader()
28674=AssistParser:consumeRestoreDiet()
28675=AssistParser:consumeMethodInvocationPrimaryWithTypeArguments()
28676=AssistParser:indexOfAssistIdentifier()
28677=AssistParser:createSingleAssistNameReference(char[], long)
28678=AssistParser:createParameterizedSingleAssistTypeReference(TypeReference[], char[], long)
28679=AssistParser:createParameterizedQualifiedAssistTypeReference(char[][], TypeReference[][], char[], TypeReference[], long[])
28680=AssistParser:parseBlockStatements(AbstractMethodDeclaration, CompilationUnitDeclaration)
28681=AssistParser:isInsideAttributeValue()
28682=AssistParser:becomeSimpleParser()
28683=AssistParser:consumeFieldDeclaration()
28684=AssistParser:consumeExplicitConstructorInvocation(int, int)
28685=AssistParser:restoreAssistParser(Object)
28686=AssistParser:consumeEnterMemberValue()
28687=AssistParser:enclosingNode()
28688=AssistParser:createQualifiedAssistTypeReference(char[][], char[], long[])
28689=AssistParser:consumeOpenFakeBlock()
28690=AssistParser:consumeAnnotationTypeDeclarationHeader()
28691=AssistParser:assistNodeNeedsStacking()
28692=AssistParser:consumeExitMemberValue()
28693=AssistParser:pushOnElementStack(int, int, Object)
28694=AssistParser:flushElementStack()
28695=AssistParser:consumeBlockStatement()
28696=AssistParser:consumePackageDeclarationName()
28697=Example:foo()
28698=Example:foo()
28699=Test:main(String[])
28700=ASTConverterBugsTestJLS4:suite()
28701=ASTConverterBugsTestJLS4:ASTConverterBugsTestJLS4(String)
28702=Test:foo()
28703=StringLiteral:extendWith(StringLiteral)
28704=StringLiteral:source()
28705=StringLiteral:computeConstant()
28706=StringLiteral:extendsWith(StringLiteral)
28707=StringLiteral:printExpression(int, StringBuffer)
28708=StringLiteral:StringLiteral(char[], int, int, int)
28709=StringLiteral:generateCode(BlockScope, CodeStream, boolean)
28710=StringLiteral:extendWith(CharLiteral)
28711=StringLiteral:literalType(BlockScope)
28712=StringLiteral:traverse(ASTVisitor, BlockScope)
28713=StringLiteral:StringLiteral(int, int)
28714=CompoundNameVector:contains(char[][])
28715=CompoundNameVector:CompoundNameVector()
28716=CompoundNameVector:addAll(char[][][])
28717=CompoundNameVector:toString()
28718=CompoundNameVector:removeAll()
28719=CompoundNameVector:elementAt(int)
28720=CompoundNameVector:remove(char[][])
28721=CompoundNameVector:add(char[][])
28722=Y:foo()
28723=Reconcile3:test1(MyFunction<A, @Nullable B>)
28724=Reconcile3:test2(MyFunction<A, @NonNull B>, MyFunction<@Nullable String, @NonNull A>)
28725=X03_tabs:foo(String)
28726=X:getStrings()
28727=AnnotationBinding:getAnnotations()
28728=AnnotationBinding:isEqualTo(IBinding)
28729=AnnotationBinding:getRecipientKey()
28730=AnnotationBinding:getAnnotationType()
28731=AnnotationBinding:getJavaElement()
28732=AnnotationBinding:isSynthetic()
28733=AnnotationBinding:toString()
28734=AnnotationBinding:getKey()
28735=AnnotationBinding:getKind()
28736=AnnotationBinding:getDeclaredMemberValuePairs()
28737=AnnotationBinding:AnnotationBinding(org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding, BindingResolver)
28738=AnnotationBinding:getName()
28739=AnnotationBinding:isDeprecated()
28740=AnnotationBinding:isRecovered()
28741=AnnotationBinding:getModifiers()
28742=AnnotationBinding:getAllMemberValuePairs()
28743=Test:main(String[])
28744=ConstantPoolEntry:reset()
28745=ConstantPoolEntry:getFloatValue()
28746=ConstantPoolEntry:getStringIndex()
28747=ConstantPoolEntry:setIntegerValue(int)
28748=ConstantPoolEntry:setNameAndTypeNameIndex(int)
28749=ConstantPoolEntry:getNameAndTypeInfoDescriptorIndex()
28750=ConstantPoolEntry:getFieldDescriptor()
28751=ConstantPoolEntry:getMethodDescriptor()
28752=ConstantPoolEntry:getNameAndTypeIndex()
28753=ConstantPoolEntry:setNameAndTypeDescriptorIndex(int)
28754=ConstantPoolEntry:setClassInfoName(char[])
28755=ConstantPoolEntry:setClassIndex(int)
28756=ConstantPoolEntry:setClassInfoNameIndex(int)
28757=ConstantPoolEntry:getDoubleValue()
28758=ConstantPoolEntry:getMethodName()
28759=ConstantPoolEntry:getIntegerValue()
28760=ConstantPoolEntry:getUtf8Value()
28761=ConstantPoolEntry:setMethodName(char[])
28762=ConstantPoolEntry:getNameAndTypeDescriptorIndex()
28763=ConstantPoolEntry:getNameAndTypeNameIndex()
28764=ConstantPoolEntry:setClassName(char[])
28765=ConstantPoolEntry:getClassInfoNameIndex()
28766=ConstantPoolEntry:setDoubleValue(double)
28767=ConstantPoolEntry:setLongValue(long)
28768=ConstantPoolEntry:getUtf8Length()
28769=ConstantPoolEntry:getNameAndTypeInfoNameIndex()
28770=ConstantPoolEntry:setMethodDescriptor(char[])
28771=ConstantPoolEntry:setNameAndTypeIndex(int)
28772=ConstantPoolEntry:getLongValue()
28773=ConstantPoolEntry:setKind(int)
28774=ConstantPoolEntry:setFloatValue(float)
28775=ConstantPoolEntry:setFieldName(char[])
28776=ConstantPoolEntry:setUtf8Length(int)
28777=ConstantPoolEntry:getClassName()
28778=ConstantPoolEntry:getKind()
28779=ConstantPoolEntry:ConstantPoolEntry()
28780=ConstantPoolEntry:setStringValue(char[])
28781=ConstantPoolEntry:getFieldName()
28782=ConstantPoolEntry:setStringIndex(int)
28783=ConstantPoolEntry:setFieldDescriptor(char[])
28784=ConstantPoolEntry:getClassInfoName()
28785=ConstantPoolEntry:getClassIndex()
28786=ConstantPoolEntry:getStringValue()
28787=ConstantPoolEntry:setUtf8Value(char[])
28788=NoOpPrintWriter:NoOpPrintWriter()
28789=X:x()
28790=MF47209:m47209(int)
28791=MF47209:MF47209(String)
28792=A:foo()
28793=JavaCoreOptionsTests:test1()
28794=JavaCoreOptionsTests:JavaCoreOptionsTests(String)
28795=JavaCoreOptionsTests:test3()
28796=JavaCoreOptionsTests:test5()
28797=JavaCoreOptionsTests:suite()
28798=JavaCoreOptionsTests:test2()
28799=JavaCoreOptionsTests:test4()
28800=StringAsserts:assertEqualString(String, String)
28801=StringAsserts:getDiffPos(String, String)
28802=StringAsserts:assertEqualStringIgnoreDelim(String, String)
28803=StringAsserts:StringAsserts()
28804=StringAsserts:assertEqualStringsIgnoreOrder(String[], String[])
28805=SourceConstructorInfo:isAnnotationMethod()
28806=SourceConstructorInfo:getReturnTypeName()
28807=SourceConstructorInfo:setReturnType(char[])
28808=SourceConstructorInfo:isConstructor()
28809=IStackMapAttribute:getStackMapFrame()
28810=IStackMapAttribute:getNumberOfEntries()
28811=C1:k()
28812=I:k()
28813=D:h()
28814=ClassFilePool:newInstance()
28815=ClassFilePool:release(ClassFile)
28816=ClassFilePool:ClassFilePool()
28817=ClassFilePool:acquire(SourceTypeBinding)
28818=ClassFilePool:reset()
28819=TypeParameter:getSourceRange()
28820=TypeParameter:getTypeRoot()
28821=TypeParameter:getBounds()
28822=TypeParameter:getBoundsSignatures()
28823=TypeParameter:getElementName()
28824=TypeParameter:getDeclaringMember()
28825=TypeParameter:toStringName(StringBuffer)
28826=TypeParameter:equals(Object)
28827=TypeParameter:getHandleMementoDelimiter()
28828=TypeParameter:getNameRange()
28829=TypeParameter:getElementType()
28830=TypeParameter:getClassFile()
28831=TypeParameter:getKey(boolean)
28832=TypeParameter:TypeParameter(JavaElement, String)
28833=EclipseTest:main(String[])
28834=Y:foo(X.Inner)
28835=SerializableLambdaTest:SerializableLambdaTest(String)
28836=SerializableLambdaTest:test002_simpleNonSerializable()
28837=SerializableLambdaTest:testbug497879()
28838=SerializableLambdaTest:test449467()
28839=SerializableLambdaTest:printIt(String)
28840=SerializableLambdaTest:testClass()
28841=SerializableLambdaTest:testbug479119a()
28842=SerializableLambdaTest:test006_capturingVariableLambdaWithParameterInPackage()
28843=SerializableLambdaTest:test024_lambdasInOtherPlaces_MethodParameter()
28844=SerializableLambdaTest:test004_lambdaWithParameterInPackage()
28845=SerializableLambdaTest:test449467_2()
28846=SerializableLambdaTest:xtest007_capturingFieldLambdaWithParameterInPackage()
28847=SerializableLambdaTest:testbug479119_comment20()
28848=SerializableLambdaTest:suite()
28849=SerializableLambdaTest:checkExpected(String, String)
28850=SerializableLambdaTest:test439889()
28851=SerializableLambdaTest:test020_lambdaNames()
28852=SerializableLambdaTest:testbug497879a()
28853=SerializableLambdaTest:testBindingThis_442418()
28854=SerializableLambdaTest:test016_bug424211()
28855=SerializableLambdaTest:test021_lambdaNamesVariants()
28856=SerializableLambdaTest:testbug479119()
28857=SerializableLambdaTest:test014_intersectionCastAndNotSerializable()
28858=SerializableLambdaTest:testbug485333()
28859=SerializableLambdaTest:test001_simple()
28860=SerializableLambdaTest:test013_intersectionCast()
28861=SerializableLambdaTest:test008_capturingTwoVariableLambdaWithParameterInPackage()
28862=SerializableLambdaTest:test005_capturingVariableLambdaWithParameterInPackage()
28863=SerializableLambdaTest:formatReferenceKind(int)
28864=SerializableLambdaTest:test428552()
28865=SerializableLambdaTest:test026_lambdasInOtherPlaces_Clinit()
28866=SerializableLambdaTest:test015_serializableViaIntersectionCast()
28867=SerializableLambdaTest:test429112()
28868=SerializableLambdaTest:test012_intersectionCast()
28869=SerializableLambdaTest:test019_bug424211()
28870=SerializableLambdaTest:test018_bug424211()
28871=SerializableLambdaTest:testbug479119b()
28872=SerializableLambdaTest:printLambdaMethods(String)
28873=SerializableLambdaTest:testbug494487()
28874=SerializableLambdaTest:printBootstrapMethodsAttribute(String)
28875=SerializableLambdaTest:test439889_2()
28876=SerializableLambdaTest:xtest011_CapturingInstance()
28877=SerializableLambdaTest:test025_lambdasWithGenericInferencing()
28878=SerializableLambdaTest:test009_capturingTwoSlotVariablesLambdaWithParameterInPackage()
28879=SerializableLambdaTest:test003_twoSerializedLambdas()
28880=SerializableLambdaTest:format(IConstantPool, int)
28881=SerializableLambdaTest:getCompilerOptions()
28882=SerializableLambdaTest:test010_VarargsLambdaExpression()
28883=SerializableLambdaTest:test023_lambdasInOtherPlaces_Field()
28884=SerializableLambdaTest:test428642()
28885=SerializableLambdaTest:test017_bug424211()
28886=SerializableLambdaTest:testbug497879b()
28887=SerializableLambdaTest:testNestedLambdas_442416()
28888=SerializableLambdaTest:test428642_2()
28889=SerializableLambdaTest:test022_nestedLambdas()
28890=FalseLiteral:FalseLiteral(int, int)
28891=FalseLiteral:literalType(BlockScope)
28892=FalseLiteral:generateCode(BlockScope, CodeStream, boolean)
28893=FalseLiteral:traverse(ASTVisitor, BlockScope)
28894=FalseLiteral:generateOptimizedBoolean(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
28895=FalseLiteral:computeConstant()
28896=FalseLiteral:source()
28897=SourceRefElement:getOccurrenceCount()
28898=SourceRefElement:delete(boolean, IProgressMonitor)
28899=SourceRefElement:SourceRefElement(JavaElement)
28900=SourceRefElement:getHandleFromMemento(String, MementoTokenizer, WorkingCopyOwner)
28901=SourceRefElement:getHandleMemento(StringBuffer)
28902=SourceRefElement:closing(Object)
28903=SourceRefElement:move(IJavaElement, IJavaElement, String, boolean, IProgressMonitor)
28904=SourceRefElement:getOpenableParent()
28905=SourceRefElement:copy(IJavaElement, IJavaElement, String, boolean, IProgressMonitor)
28906=SourceRefElement:isStructureKnown()
28907=SourceRefElement:hasChildren()
28908=SourceRefElement:getAnnotation(String)
28909=SourceRefElement:createElementInfo()
28910=SourceRefElement:getSourceRange()
28911=SourceRefElement:toStringName(StringBuffer)
28912=SourceRefElement:equals(Object)
28913=SourceRefElement:getSource()
28914=SourceRefElement:resource()
28915=SourceRefElement:getHandleUpdatingCountFromMemento(MementoTokenizer, WorkingCopyOwner)
28916=SourceRefElement:getAnnotations()
28917=SourceRefElement:generateInfos(Object, HashMap, IProgressMonitor)
28918=SourceRefElement:getCompilationUnit()
28919=SourceRefElement:getCorrespondingResource()
28920=SourceRefElement:getUnderlyingResource()
28921=SourceRefElement:getPath()
28922=SourceRefElement:rename(String, boolean, IProgressMonitor)
28923=SourceRefElement:findNode(CompilationUnit)
28924=Y:bar()
28925=NullLiteral:literalType(BlockScope)
28926=NullLiteral:reusableJSRTarget()
28927=NullLiteral:nullStatus(FlowInfo, FlowContext)
28928=NullLiteral:generateCode(BlockScope, CodeStream, boolean)
28929=NullLiteral:traverse(ASTVisitor, BlockScope)
28930=NullLiteral:NullLiteral(int, int)
28931=NullLiteral:computeConstant()
28932=NullLiteral:source()
28933=Convertible:convert()
28934=ASTNodeFinder:findField(IField)
28935=ASTNodeFinder:findMethod(IMethod)
28936=ASTNodeFinder:findType(IType)
28937=ASTNodeFinder:ASTNodeFinder(CompilationUnitDeclaration)
28938=ASTNodeFinder:findInitializer(IInitializer)
28939=Example:bar(int)
28940=Example:bar()
28941=Example:foo()
28942=CommentTestCase:testFormat(String, Map)
28943=CommentTestCase:testFormat(String, int, int, int)
28944=CommentTestCase:setUserOption(Map)
28945=CommentTestCase:tearDown()
28946=CommentTestCase:setUserOption(String, String)
28947=CommentTestCase:getCommentKind()
28948=CommentTestCase:testFormat(String, int, int, int, int)
28949=CommentTestCase:testFormat(String)
28950=CommentTestCase:testFormat(String, int, int)
28951=CommentTestCase:getUserOptions()
28952=CommentTestCase:buildTestSuite(Class)
28953=CommentTestCase:buildTestSuite(Class, String)
28954=CommentTestCase:CommentTestCase(String)
28955=CommentTestCase:testFormat(String, int, int, int, Map)
28956=ArrayCreation:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
28957=ArrayCreation:internalGetChildListProperty(ChildListPropertyDescriptor)
28958=ArrayCreation:setType(ArrayType)
28959=ArrayCreation:accept0(ASTVisitor)
28960=ArrayCreation:getNodeType0()
28961=ArrayCreation:dimensions()
28962=ArrayCreation:clone0(AST)
28963=ArrayCreation:subtreeMatch0(ASTMatcher, Object)
28964=ArrayCreation:getType()
28965=ArrayCreation:propertyDescriptors(int)
28966=ArrayCreation:memSize()
28967=ArrayCreation:getInitializer()
28968=ArrayCreation:setInitializer(ArrayInitializer)
28969=ArrayCreation:internalStructuralPropertiesForType(int)
28970=ArrayCreation:treeSize()
28971=ArrayCreation:ArrayCreation(AST)
28972=SAMPLE_UTF8:main(String[])
28973=BindingKeyParser:parseCapture18()
28974=BindingKeyParser:Scanner:Scanner(char[])
28975=BindingKeyParser:parseInnerType()
28976=BindingKeyParser:parse()
28977=BindingKeyParser:consumeWildCard(int)
28978=BindingKeyParser:Scanner:skipCapture18Delim()
28979=BindingKeyParser:consumeParameterizedGenericMethod()
28980=BindingKeyParser:parseFullyQualifiedName()
28981=BindingKeyParser:parseAnnotation()
28982=BindingKeyParser:consumeMemberType(char[])
28983=BindingKeyParser:Scanner:skipRankStart()
28984=BindingKeyParser:malformedKey()
28985=BindingKeyParser:Scanner:isAtTypeWithCaptureStart()
28986=BindingKeyParser:Scanner:skipMethodSignature()
28987=BindingKeyParser:Scanner:skipThrownStart()
28988=BindingKeyParser:consumeNonGenericType()
28989=BindingKeyParser:consumeFullyQualifiedName(char[])
28990=BindingKeyParser:consumeTopLevelType()
28991=BindingKeyParser:Scanner:isAtThrownStart()
28992=BindingKeyParser:Scanner:toString()
28993=BindingKeyParser:Scanner:isAtCapture18Start()
28994=BindingKeyParser:Scanner:isAtTypeArgumentStart()
28995=BindingKeyParser:Scanner:isAtAnnotationStart()
28996=BindingKeyParser:consumeTypeVariable(char[], char[])
28997=BindingKeyParser:Scanner:nextToken()
28998=BindingKeyParser:hasTypeName()
28999=BindingKeyParser:parseCapture()
29000=BindingKeyParser:parseGenericType()
29001=BindingKeyParser:consumeException()
29002=BindingKeyParser:consumeTypeParameter(char[])
29003=BindingKeyParser:consumeLocalVar(char[], int, int)
29004=BindingKeyParser:parseField()
29005=BindingKeyParser:consumeParser(BindingKeyParser)
29006=BindingKeyParser:BindingKeyParser(String)
29007=BindingKeyParser:consumeKey()
29008=BindingKeyParser:consumeRawType()
29009=BindingKeyParser:Scanner:isAtLocalVariableStart()
29010=BindingKeyParser:parseCaptureWildcard()
29011=BindingKeyParser:Scanner:skipRankEnd()
29012=BindingKeyParser:consumeSecondaryType(char[])
29013=BindingKeyParser:consumeTypeWithCapture()
29014=BindingKeyParser:Scanner:isAtRawTypeEnd()
29015=BindingKeyParser:Scanner:isAtParametersStart()
29016=BindingKeyParser:parse(boolean)
29017=BindingKeyParser:newParser()
29018=BindingKeyParser:consumeParameterizedType(char[], boolean)
29019=BindingKeyParser:BindingKeyParser(BindingKeyParser)
29020=BindingKeyParser:Scanner:isAtFieldOrMethodStart()
29021=BindingKeyParser:Scanner:isAtParametersEnd()
29022=BindingKeyParser:consumeBaseType(char[])
29023=BindingKeyParser:consumeField(char[])
29024=BindingKeyParser:Scanner:isAtCaptureStart()
29025=BindingKeyParser:Scanner:isAtTypeParameterStart()
29026=BindingKeyParser:getKey()
29027=BindingKeyParser:parseTypeWithCapture()
29028=BindingKeyParser:parseParameterizedMethod()
29029=BindingKeyParser:Scanner:isAtMemberTypeStart()
29030=BindingKeyParser:consumeModifiers(char[])
29031=BindingKeyParser:consumeCapture18ID(int, int)
29032=BindingKeyParser:consumeAnnotation()
29033=BindingKeyParser:consumeType()
29034=BindingKeyParser:parseWildcard()
29035=BindingKeyParser:consumeLocalType(char[])
29036=BindingKeyParser:parseParameterizedType(char[], boolean)
29037=BindingKeyParser:Scanner:getTokenSource()
29038=BindingKeyParser:consumeArrayDimension(char[])
29039=BindingKeyParser:Scanner:skipParametersEnd()
29040=BindingKeyParser:Scanner:isAtTypeVariableStart()
29041=BindingKeyParser:Scanner:isAtSecondaryTypeStart()
29042=BindingKeyParser:consumeMethod(char[], char[])
29043=BindingKeyParser:consumeWildcardRank(int)
29044=BindingKeyParser:parseWildcardRank()
29045=BindingKeyParser:parseLocalVariable()
29046=BindingKeyParser:Scanner:skipTypeEnd()
29047=BindingKeyParser:parseRawType()
29048=BindingKeyParser:consumeScope(int)
29049=BindingKeyParser:Scanner:isAtWildcardStart()
29050=BindingKeyParser:parseThrownExceptions()
29051=BindingKeyParser:parseTypeArgument()
29052=BindingKeyParser:parseWildcardBound()
29053=BindingKeyParser:parseReturnType()
29054=BindingKeyParser:parseMethod()
29055=BindingKeyParser:consumeCapture(int)
29056=BindingKeyParser:parseTypeVariable()
29057=BindingKeyParser:parseSecondaryType()
29058=BindingKeyParser:Scanner:skipParametersStart()
29059=BindingKeyParser:Scanner:skipRank()
29060=BindingKeyParser:consumePackage(char[])
29061=A:foo()
29062=DeltaProcessingState:removeProjectReferenceChanges()
29063=DeltaProcessingState:addElementChangedListener(IElementChangedListener, int)
29064=DeltaProcessingState:findJavaProject(String)
29065=DeltaProcessingState:addPreResourceChangedListener(IResourceChangeListener, int)
29066=DeltaProcessingState:addClasspathValidation(JavaProject)
29067=DeltaProcessingState:saveExternalLibTimeStamps()
29068=DeltaProcessingState:removeElementChangedListener(IElementChangedListener)
29069=DeltaProcessingState:removeClasspathValidations()
29070=DeltaProcessingState:getRootInfos(boolean)
29071=DeltaProcessingState:addExternalFolderChange(JavaProject, IClasspathEntry[])
29072=DeltaProcessingState:removeExternalFolderChanges()
29073=DeltaProcessingState:updateRoots(IPath, IResourceDelta, DeltaProcessor)
29074=DeltaProcessingState:doNotUse()
29075=DeltaProcessingState:resourceChanged(IResourceChangeEvent)
29076=DeltaProcessingState:initializeRootsWithPreviousSession()
29077=DeltaProcessingState:initializeRoots(boolean)
29078=DeltaProcessingState:addProjectReferenceChange(JavaProject, IClasspathEntry[])
29079=DeltaProcessingState:getClasspathChange(IProject)
29080=DeltaProcessingState:removeExternalElementsToRefresh()
29081=DeltaProcessingState:addForRefresh(IJavaElement)
29082=DeltaProcessingState:getTimeStampsFile()
29083=DeltaProcessingState:getOldJavaProjecNames()
29084=DeltaProcessingState:getExternalLibTimeStamps()
29085=DeltaProcessingState:removeAllClasspathChanges()
29086=DeltaProcessingState:resetOldJavaProjectNames()
29087=DeltaProcessingState:getDeltaProcessor()
29088=DeltaProcessingState:addClasspathChange(IProject, IClasspathEntry[], IPath, IClasspathEntry[])
29089=DeltaProcessingState:removePreResourceChangedListener(IResourceChangeListener)
29090=Test:foo(T)
29091=Messager:printError(SourcePosition, String)
29092=Messager:printError(String)
29093=Messager:printWarning(String)
29094=Messager:printNotice(String)
29095=Messager:printWarning(SourcePosition, String)
29096=Messager:printNotice(SourcePosition, String)
29097=ParameterizedQualifiedTypeReference:internalResolveLeafType(Scope, boolean)
29098=ParameterizedQualifiedTypeReference:traverse(ASTVisitor, BlockScope)
29099=ParameterizedQualifiedTypeReference:getParameterizedTypeName()
29100=ParameterizedQualifiedTypeReference:internalResolveType(Scope, boolean, int)
29101=ParameterizedQualifiedTypeReference:isParameterizedTypeReference()
29102=ParameterizedQualifiedTypeReference:getTypeArguments()
29103=ParameterizedQualifiedTypeReference:checkBounds(ReferenceBinding, Scope, int)
29104=ParameterizedQualifiedTypeReference:printExpression(int, StringBuffer)
29105=ParameterizedQualifiedTypeReference:createArrayType(Scope)
29106=ParameterizedQualifiedTypeReference:getTypeBinding(Scope)
29107=ParameterizedQualifiedTypeReference:resolveType(ClassScope, int)
29108=ParameterizedQualifiedTypeReference:ParameterizedQualifiedTypeReference(char[][], TypeReference[][], int, long[])
29109=ParameterizedQualifiedTypeReference:hasNullTypeAnnotation(AnnotationPosition)
29110=ParameterizedQualifiedTypeReference:traverse(ASTVisitor, ClassScope)
29111=ParameterizedQualifiedTypeReference:resolveType(BlockScope, boolean, int)
29112=ParameterizedQualifiedTypeReference:checkBounds(Scope)
29113=ParameterizedQualifiedTypeReference:ParameterizedQualifiedTypeReference(char[][], TypeReference[][], int, Annotation[][], long[])
29114=ParameterizedQualifiedTypeReference:augmentTypeWithAdditionalDimensions(int, Annotation[][], boolean)
29115=TokenTraverser:isSpaceBefore()
29116=TokenTraverser:isSpaceAfter()
29117=TokenTraverser:token(Token, int)
29118=TokenTraverser:initTraverse(List<Token>, int)
29119=TokenTraverser:getLineBreaksBefore()
29120=TokenTraverser:structureChanged()
29121=TokenTraverser:getPrevious()
29122=TokenTraverser:traverse(List<Token>, int)
29123=TokenTraverser:getNext()
29124=TokenTraverser:getLineBreaksAfter()
29125=TokenTraverser:getCurrent()
29126=FloatCache:put(float, int)
29127=FloatCache:toString()
29128=FloatCache:clear()
29129=FloatCache:FloatCache(int)
29130=FloatCache:containsKey(float)
29131=FloatCache:FloatCache()
29132=FloatCache:putIfAbsent(float, int)
29133=Test:main(String[])
29134=Test:test(String)
29135=BooleanConstant:typeID()
29136=BooleanConstant:stringValue()
29137=BooleanConstant:booleanValue()
29138=BooleanConstant:equals(Object)
29139=BooleanConstant:hashCode()
29140=BooleanConstant:toString()
29141=BooleanConstant:BooleanConstant(boolean)
29142=BooleanConstant:fromValue(boolean)
29143=FieldInfo:FieldInfo(byte, int, int)
29144=FieldInfo:getAnnotations()
29145=FieldInfo:decodeTypeAnnotations(int, boolean)
29146=FieldInfo:getGenericSignature()
29147=FieldInfo:hasConstant()
29148=FieldInfo:getName()
29149=FieldInfo:toString()
29150=FieldInfo:getWrappedConstantValue()
29151=FieldInfo:getModifiers()
29152=FieldInfo:readModifierRelatedAttributes()
29153=FieldInfo:getTypeName()
29154=FieldInfo:isSynthetic()
29155=FieldInfo:compareTo(Object)
29156=FieldInfo:initialize()
29157=FieldInfo:getConstant()
29158=FieldInfo:toStringContent(StringBuffer)
29159=FieldInfo:decodeAnnotations(int, boolean)
29160=FieldInfo:createField(byte, int, int)
29161=FieldInfo:hashCode()
29162=FieldInfo:getTypeAnnotations()
29163=FieldInfo:throwFormatException()
29164=FieldInfo:equals(Object)
29165=FieldInfo:sizeInBytes()
29166=FieldInfo:readConstantAttribute()
29167=FieldInfo:getTagBits()
29168=AbstractSelectionTest:checkMethodParse(char[], int, int, String, String, String, String, String[], String)
29169=AbstractSelectionTest:checkDietParse(char[], int, int, String, String, String, String, String)
29170=AbstractSelectionTest:checkMethodParse(char[], int, int, String, String, String, String, String)
29171=AbstractSelectionTest:runTestCheckMethodParse(String, String, String, String, String, String, String, String)
29172=AbstractSelectionTest:AbstractSelectionTest(String)
29173=AbstractSelectionTest:findMethod(TypeDeclaration, int)
29174=CharOperation:concat(char, char[], char)
29175=CharOperation:replace(char[], char, char)
29176=CharOperation:equals(char[][], char[][])
29177=CharOperation:splitOn(char, char[])
29178=CharOperation:subarray(char[][], int, int)
29179=CharOperation:trim(char[])
29180=CharOperation:isWhitespace(char)
29181=CharOperation:replace(char[], char[], char[])
29182=CharOperation:concatWith(char[][], char[], char)
29183=CharOperation:splitAndTrimOn(char, char[])
29184=CharOperation:charArrayToStringArray(char[][])
29185=CharOperation:replaceOnCopy(char[], char, char)
29186=CharOperation:concat(char[], char, char[], char, char[])
29187=CharOperation:toLowerCase(char[])
29188=CharOperation:concat(char[], char[], char[])
29189=CharOperation:lastIndexOf(char, char[], int)
29190=CharOperation:deepCopy(char[][])
29191=CharOperation:concat(char[], char[])
29192=CharOperation:compareWith(char[], char[])
29193=CharOperation:charToString(char[])
29194=CharOperation:splitOn(char, char[], int, int)
29195=CharOperation:lastIndexOf(char, char[])
29196=CharOperation:prefixEquals(char[], char[])
29197=CharOperation:hashCode(char[])
29198=CharOperation:concatWith(char[], char[][], char)
29199=CharOperation:concatWith(char[][], char)
29200=CharOperation:match(char[], int, int, char[], int, int, boolean)
29201=CharOperation:contains(char, char[])
29202=CharOperation:occurencesOf(char, char[])
29203=CharOperation:append(char[], char)
29204=CharOperation:concat(char[], char[], char)
29205=CharOperation:equals(char[], char[], int, int)
29206=CharOperation:toString(char[][])
29207=CharOperation:arrayConcat(char[][], char[][])
29208=CharOperation:indexOf(char, char[], int)
29209=CharOperation:endsWith(char[], char[])
29210=CharOperation:lastIndexOf(char, char[], int, int)
29211=CharOperation:equals(char[], char[], boolean)
29212=CharOperation:equals(char[], char[])
29213=CharOperation:fragmentEquals(char[], char[], int, boolean)
29214=CharOperation:arrayConcat(char[][], char[])
29215=CharOperation:append(char[], int, char[], int, int)
29216=CharOperation:equals(char[][], char[][], boolean)
29217=CharOperation:contains(char, char[][])
29218=CharOperation:prefixEquals(char[], char[], boolean)
29219=CharOperation:lastSegment(char[], char)
29220=CharOperation:match(char[], char[], boolean)
29221=CharOperation:occurencesOf(char, char[], int)
29222=CharOperation:toStrings(char[][])
29223=CharOperation:subarray(char[], int, int)
29224=CharOperation:pathMatch(char[], char[], boolean, char)
29225=CharOperation:indexOf(char, char[])
29226=IExceptionTableEntry:getStartPC()
29227=IExceptionTableEntry:getEndPC()
29228=IExceptionTableEntry:getHandlerPC()
29229=IExceptionTableEntry:getCatchTypeIndex()
29230=IExceptionTableEntry:getCatchType()
29231=AnnotationProcessorFactoryLoader:FactoryPathDeltaVisitor:addAffected(Set<IJavaProject>)
29232=AnnotationProcessorFactoryLoader:getParentClassLoader()
29233=AnnotationProcessorFactoryLoader:uncacheProject(IJavaProject)
29234=AnnotationProcessorFactoryLoader:processChanges(Set<IJavaProject>, Map<IJavaProject, LoadFailureHandler>)
29235=AnnotationProcessorFactoryLoader:resetAll()
29236=AnnotationProcessorFactoryLoader:_createIterativeClassLoader(Map<FactoryContainer, FactoryPath.Attributes>)
29237=AnnotationProcessorFactoryLoader:resetBatchProcessors(IJavaProject)
29238=AnnotationProcessorFactoryLoader:getLoader()
29239=AnnotationProcessorFactoryLoader:FactoryPathDeltaVisitor:getAffectedProjects()
29240=AnnotationProcessorFactoryLoader:tryToCloseClassLoader(ClassLoader)
29241=AnnotationProcessorFactoryLoader:loadJava5FactoryClasses(FactoryContainer, ClassLoader, IJavaProject, LoadFailureHandler)
29242=AnnotationProcessorFactoryLoader:loadInstance(String, ClassLoader, IJavaProject, LoadFailureHandler)
29243=AnnotationProcessorFactoryLoader:addToResourcesMap(String, IJavaProject)
29244=AnnotationProcessorFactoryLoader:registerListener()
29245=AnnotationProcessorFactoryLoader:ResourceListener:resourceChanged(IResourceChangeEvent)
29246=AnnotationProcessorFactoryLoader:removeProjectFromResourceMap(IJavaProject)
29247=AnnotationProcessorFactoryLoader:loadJava6FactoryClasses(FactoryContainer, ClassLoader, IJavaProject, LoadFailureHandler)
29248=AnnotationProcessorFactoryLoader:FactoryPathDeltaVisitor:visit(IResourceDelta)
29249=AnnotationProcessorFactoryLoader:getJava5FactoriesAndAttributesForProject(IJavaProject)
29250=AnnotationProcessorFactoryLoader:loadFactories(Map<FactoryContainer, FactoryPath.Attributes>, IJavaProject, LoadFailureHandler)
29251=AnnotationProcessorFactoryLoader:getJava6FactoriesAndAttributesForProject(IJavaProject)
29252=AnnotationProcessorFactoryLoader:getJava5FactoriesForProject(IJavaProject)
29253=AnnotationProcessorFactoryLoader:verifyFactoryPath(IJavaProject)
29254=AnnotationProcessorFactoryLoader:removeAptBuildProblemMarkers(IJavaProject)
29255=AnnotationProcessorFactoryLoader:createClassLoader(List<File>, ClassLoader)
29256=AnnotationProcessorFactoryLoader:_createBatchClassLoader(Map<FactoryContainer, FactoryPath.Attributes>, IJavaProject)
29257=JavadocTestForField:test023()
29258=JavadocTestForField:test047()
29259=JavadocTestForField:test012()
29260=JavadocTestForField:test001()
29261=JavadocTestForField:test003()
29262=JavadocTestForField:test049()
29263=JavadocTestForField:test030()
29264=JavadocTestForField:test043()
29265=JavadocTestForField:test032()
29266=JavadocTestForField:test021()
29267=JavadocTestForField:test010()
29268=JavadocTestForField:test045()
29269=JavadocTestForField:test051()
29270=JavadocTestForField:test040()
29271=JavadocTestForField:suite()
29272=JavadocTestForField:test451418()
29273=JavadocTestForField:test005()
29274=JavadocTestForField:test007()
29275=JavadocTestForField:test046()
29276=JavadocTestForField:getCompilerOptions()
29277=JavadocTestForField:test011()
29278=JavadocTestForField:test024()
29279=JavadocTestForField:test013()
29280=JavadocTestForField:test002()
29281=JavadocTestForField:test048()
29282=JavadocTestForField:test053()
29283=JavadocTestForField:test042()
29284=JavadocTestForField:test031()
29285=JavadocTestForField:JavadocTestForField(String)
29286=JavadocTestForField:test020()
29287=JavadocTestForField:test044()
29288=JavadocTestForField:test033()
29289=JavadocTestForField:test022()
29290=JavadocTestForField:test008()
29291=JavadocTestForField:test050()
29292=JavadocTestForField:test052()
29293=JavadocTestForField:test041()
29294=JavadocTestForField:test004()
29295=JavadocTestForField:test006()
29296=JavadocTestForField:javadocTestClass()
29297=Test:___run(java.lang.String[])
29298=Test:foo()
29299=SelectionOnParameterizedSingleTypeReference:SelectionOnParameterizedSingleTypeReference(char[], TypeReference[], long)
29300=SelectionOnParameterizedSingleTypeReference:resolveType(BlockScope, boolean, int)
29301=SelectionOnParameterizedSingleTypeReference:resolveType(ClassScope, int)
29302=SelectionOnParameterizedSingleTypeReference:printExpression(int, StringBuffer)
29303=SelectionOnImportReference:print(int, StringBuffer, boolean)
29304=SelectionOnImportReference:SelectionOnImportReference(char[][], long[], int)
29305=DOMMember:shareContents(DOMNode)
29306=DOMMember:offset(int)
29307=DOMMember:DOMMember(char[], int[], String, int[], int[], int, int[])
29308=DOMMember:appendMemberHeaderFragment(CharArrayBuffer)
29309=DOMMember:hasBody()
29310=DOMMember:appendMemberDeclarationContents(CharArrayBuffer)
29311=DOMMember:appendSimpleContents(CharArrayBuffer)
29312=DOMMember:setHasBody(boolean)
29313=DOMMember:getFlags()
29314=DOMMember:DOMMember()
29315=DOMMember:generateFlags()
29316=DOMMember:appendString(String[], String)
29317=DOMMember:hasComment()
29318=DOMMember:getModifiersText()
29319=DOMMember:setStartPosition(int)
29320=DOMMember:appendMemberBodyContents(CharArrayBuffer)
29321=DOMMember:appendFragmentedContents(CharArrayBuffer)
29322=DOMMember:setComment(String)
29323=DOMMember:setHasComment(boolean)
29324=DOMMember:getMemberDeclarationStartPosition()
29325=DOMMember:setFlags(int)
29326=DOMMember:getComment()
29327=CaptureBinding18:readableName()
29328=CaptureBinding18:clone(TypeBinding)
29329=CaptureBinding18:genericTypeSignature()
29330=CaptureBinding18:isProperType(boolean)
29331=CaptureBinding18:CaptureBinding18(CaptureBinding18)
29332=CaptureBinding18:getMethods(char[])
29333=CaptureBinding18:isEquivalentTo(TypeBinding)
29334=CaptureBinding18:uncapture(Scope)
29335=CaptureBinding18:initializeBounds(Scope, ParameterizedTypeBinding)
29336=CaptureBinding18:computeUniqueKey(boolean)
29337=CaptureBinding18:findSuperTypeOriginatingFrom(TypeBinding)
29338=CaptureBinding18:CaptureBinding18(ReferenceBinding, char[], char[], int, int, int, LookupEnvironment)
29339=CaptureBinding18:setUpperBounds(TypeBinding[], ReferenceBinding)
29340=CaptureBinding18:isCompatibleWith(TypeBinding, Scope)
29341=CaptureBinding18:substituteInferenceVariable(InferenceVariable, TypeBinding)
29342=CaptureBinding18:erasure()
29343=CaptureBinding18:shortReadableName()
29344=A:bar()
29345=A:foo(String, Object)
29346=X30:foo()
29347=X02:foo()
29348=firstClass:myMethod()
29349=A:foo()
29350=I:f2()
29351=I:f()
29352=I:f1z()
29353=I:fz()
29354=I:f11()
29355=I:f1()
29356=EnclosingMethodAttributeTest:test004()
29357=EnclosingMethodAttributeTest:test002()
29358=EnclosingMethodAttributeTest:testClass()
29359=EnclosingMethodAttributeTest:suite()
29360=EnclosingMethodAttributeTest:EnclosingMethodAttributeTest(String)
29361=EnclosingMethodAttributeTest:test003()
29362=EnclosingMethodAttributeTest:test001()
29363=ClasspathInitializerTests:testVariableInitializer11()
29364=ClasspathInitializerTests:testVariableInitializerBug186113b()
29365=ClasspathInitializerTests:testContainerInitializer08()
29366=ClasspathInitializerTests:testContainerInitializer19()
29367=ClasspathInitializerTests:testVariableInitializerBug172207()
29368=ClasspathInitializerTests:testContainerInitializer21()
29369=ClasspathInitializerTests:testVariableInitializer04()
29370=ClasspathInitializerTests:testUserLibraryInitializer1()
29371=ClasspathInitializerTests:testVariableInitializer02()
29372=ClasspathInitializerTests:testContainerInitializer02()
29373=ClasspathInitializerTests:NullContainerInitializer:allowFailureContainer()
29374=ClasspathInitializerTests:testContainerInitializer13()
29375=ClasspathInitializerTests:testVariableInitializerBug200449b()
29376=ClasspathInitializerTests:testContainerInitializer24()
29377=ClasspathInitializerTests:testVariableInitializer08()
29378=ClasspathInitializerTests:testContainerInitializer11()
29379=ClasspathInitializerTests:testContainerInitializer22()
29380=ClasspathInitializerTests:testVariableInitializer06()
29381=ClasspathInitializerTests:testVariableInitializerBug200449()
29382=ClasspathInitializerTests:testContainerInitializer06()
29383=ClasspathInitializerTests:testVariableInitializerReadOnly()
29384=ClasspathInitializerTests:testContainerInitializer17()
29385=ClasspathInitializerTests:testContainerInitializer04()
29386=ClasspathInitializerTests:tearDown()
29387=ClasspathInitializerTests:testContainerInitializer15()
29388=ClasspathInitializerTests:testContainerInitializer26()
29389=ClasspathInitializerTests:testVariableInitializer01()
29390=ClasspathInitializerTests:testVariableInitializerBug186113a()
29391=ClasspathInitializerTests:testContainerInitializer09()
29392=ClasspathInitializerTests:testBug346002()
29393=ClasspathInitializerTests:testVariableInitializer10()
29394=ClasspathInitializerTests:testContainerInitializer07()
29395=ClasspathInitializerTests:suite()
29396=ClasspathInitializerTests:testContainerInitializer18()
29397=ClasspathInitializerTests:testVariableInitializer05()
29398=ClasspathInitializerTests:testVariableInitializerUnboundAndDeprecated()
29399=ClasspathInitializerTests:testContainerInitializer20()
29400=ClasspathInitializerTests:testVariableInitializerDeprecatedAndReadOnly()
29401=ClasspathInitializerTests:DefaultVariableInitializer:initialize(String)
29402=ClasspathInitializerTests:testVariableInitializer03()
29403=ClasspathInitializerTests:testVariableInitializer09()
29404=ClasspathInitializerTests:testContainerInitializer25()
29405=ClasspathInitializerTests:testVariableInitializerDeprecated()
29406=ClasspathInitializerTests:testContainerInitializer01()
29407=ClasspathInitializerTests:testContainerInitializer12()
29408=ClasspathInitializerTests:ClasspathInitializerTests(String)
29409=ClasspathInitializerTests:testContainerInitializer23()
29410=ClasspathInitializerTests:testVariableInitializer07()
29411=ClasspathInitializerTests:testContainerInitializer10()
29412=ClasspathInitializerTests:DefaultVariableInitializer:DefaultVariableInitializer(String[])
29413=ClasspathInitializerTests:testContainerInitializer05()
29414=ClasspathInitializerTests:testContainerInitializer16()
29415=ClasspathInitializerTests:testContainerInitializer03()
29416=ClasspathInitializerTests:NullContainerInitializer:initialize(IPath, IJavaProject)
29417=ClasspathInitializerTests:testContainerInitializer14()
29418=Test:main(String[])
29419=AnnotationValueProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
29420=AnnotationValueProcessorFactory:AnnotationValueProcessorFactory()
29421=SyntheticArgumentBinding:SyntheticArgumentBinding(ReferenceBinding)
29422=SyntheticArgumentBinding:SyntheticArgumentBinding(LocalVariableBinding)
29423=Test:main(String[])
29424=JavadocTextCompletionModelTest:test005()
29425=JavadocTextCompletionModelTest:test080()
29426=JavadocTextCompletionModelTest:suite()
29427=JavadocTextCompletionModelTest:test027()
29428=JavadocTextCompletionModelTest:test038()
29429=JavadocTextCompletionModelTest:test071()
29430=JavadocTextCompletionModelTest:test007()
29431=JavadocTextCompletionModelTest:test082()
29432=JavadocTextCompletionModelTest:test001()
29433=JavadocTextCompletionModelTest:test047()
29434=JavadocTextCompletionModelTest:test058()
29435=JavadocTextCompletionModelTest:test023()
29436=JavadocTextCompletionModelTest:test034()
29437=JavadocTextCompletionModelTest:test049()
29438=JavadocTextCompletionModelTest:test003()
29439=JavadocTextCompletionModelTest:test025()
29440=JavadocTextCompletionModelTest:test036()
29441=JavadocTextCompletionModelTest:test031()
29442=JavadocTextCompletionModelTest:test042()
29443=JavadocTextCompletionModelTest:test077()
29444=JavadocTextCompletionModelTest:test053()
29445=JavadocTextCompletionModelTest:test022()
29446=JavadocTextCompletionModelTest:test033()
29447=JavadocTextCompletionModelTest:test079()
29448=JavadocTextCompletionModelTest:test044()
29449=JavadocTextCompletionModelTest:test020()
29450=JavadocTextCompletionModelTest:test055()
29451=JavadocTextCompletionModelTest:test073()
29452=JavadocTextCompletionModelTest:test009()
29453=JavadocTextCompletionModelTest:test084()
29454=JavadocTextCompletionModelTest:test075()
29455=JavadocTextCompletionModelTest:test040()
29456=JavadocTextCompletionModelTest:test086()
29457=JavadocTextCompletionModelTest:test051()
29458=JavadocTextCompletionModelTest:test028()
29459=JavadocTextCompletionModelTest:test004()
29460=JavadocTextCompletionModelTest:JavadocTextCompletionModelTest(String)
29461=JavadocTextCompletionModelTest:test070()
29462=JavadocTextCompletionModelTest:test006()
29463=JavadocTextCompletionModelTest:test081()
29464=JavadocTextCompletionModelTest:test024()
29465=JavadocTextCompletionModelTest:test035()
29466=JavadocTextCompletionModelTest:test046()
29467=JavadocTextCompletionModelTest:test011()
29468=JavadocTextCompletionModelTest:test057()
29469=JavadocTextCompletionModelTest:test026()
29470=JavadocTextCompletionModelTest:test037()
29471=JavadocTextCompletionModelTest:test002()
29472=JavadocTextCompletionModelTest:test048()
29473=JavadocTextCompletionModelTest:test059()
29474=JavadocTextCompletionModelTest:test043()
29475=JavadocTextCompletionModelTest:test054()
29476=JavadocTextCompletionModelTest:test030()
29477=JavadocTextCompletionModelTest:test041()
29478=JavadocTextCompletionModelTest:test076()
29479=JavadocTextCompletionModelTest:test045()
29480=JavadocTextCompletionModelTest:test010()
29481=JavadocTextCompletionModelTest:test056()
29482=JavadocTextCompletionModelTest:test021()
29483=JavadocTextCompletionModelTest:test032()
29484=JavadocTextCompletionModelTest:test078()
29485=JavadocTextCompletionModelTest:test050()
29486=JavadocTextCompletionModelTest:test072()
29487=JavadocTextCompletionModelTest:test008()
29488=JavadocTextCompletionModelTest:test083()
29489=JavadocTextCompletionModelTest:test052()
29490=JavadocTextCompletionModelTest:setUp()
29491=JavadocTextCompletionModelTest:test074()
29492=JavadocTextCompletionModelTest:test085()
29493=A:foo(String)
29494=A:foo()
29495=ITypeParameter:getTypeRoot()
29496=ITypeParameter:getBounds()
29497=ITypeParameter:getBoundsSignatures()
29498=ITypeParameter:getDeclaringMember()
29499=ToolFactory:createScanner(boolean, boolean, boolean, boolean)
29500=ToolFactory:createScanner(boolean, boolean, boolean, String, String)
29501=ToolFactory:createDefaultClassFileReader(String, int)
29502=ToolFactory:createCodeFormatter(Map, int)
29503=ToolFactory:createDefaultClassFileBytesDisassembler()
29504=ToolFactory:createDefaultClassFileReader(InputStream, int)
29505=ToolFactory:createDefaultClassFileReader(IClassFile, int)
29506=ToolFactory:createDefaultClassFileReader(String, String, int)
29507=ToolFactory:createDefaultCodeFormatter(Map)
29508=ToolFactory:createCodeFormatter(Map)
29509=ToolFactory:createScanner(boolean, boolean, boolean, String)
29510=ToolFactory:createCodeFormatter()
29511=ToolFactory:createDefaultClassFileDisassembler()
29512=TestWarn2:foo()
29513=A:main(String[])
29514=ColorAnnotationProcessor:ColorAnnotationProcessor(AnnotationProcessorEnvironment)
29515=ColorAnnotationProcessor:wasSuccessful()
29516=ColorAnnotationProcessor:process()
29517=FileManagerTests:testBug460085()
29518=FileManagerTests:testBug466878_getResource_defaultPackage()
29519=FileManagerTests:setUp()
29520=FileManagerTests:testInferBinaryName()
29521=FileManagerTests:testFileManager()
29522=INameEnvironment:findType(char[], char[][])
29523=INameEnvironment:findType(char[][])
29524=INameEnvironment:cleanup()
29525=INameEnvironment:isPackage(char[][], char[])
29526=X01:foo()
29527=Annotation:isSingleMemberAnnotation()
29528=Annotation:internalTypeNamePropertyFactory(Class)
29529=Annotation:Annotation(AST)
29530=Annotation:resolveAnnotationBinding()
29531=Annotation:isAnnotation()
29532=Annotation:isMarkerAnnotation()
29533=Annotation:isModifier()
29534=Annotation:isNormalAnnotation()
29535=Annotation:memSize()
29536=Annotation:getTypeName()
29537=Annotation:setTypeName(Name)
29538=Annotation:getTypeNameProperty()
29539=Annotation:internalTypeNameProperty()
29540=ReadAnnotationProcessor:process()
29541=ReadAnnotationProcessor:assertAnnotation(String[], Collection<AnnotationMirror>)
29542=ReadAnnotationProcessor:ReadAnnotationProcessor(AnnotationProcessorEnvironment)
29543=ASTBasedMirrorDeclarationProcessorFactory:ASTBasedMirrorDeclarationProcessorFactory()
29544=ASTBasedMirrorDeclarationProcessorFactory:ASTBasedMirrorDeclarationProcessor:examineClass(ClassDeclaration)
29545=ASTBasedMirrorDeclarationProcessorFactory:ASTBasedMirrorDeclarationProcessor:ASTBasedMirrorDeclarationProcessor(AnnotationProcessorEnvironment)
29546=ASTBasedMirrorDeclarationProcessorFactory:ASTBasedMirrorDeclarationProcessor:process()
29547=ASTBasedMirrorDeclarationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
29548=InvocationSite:EmptyWithAstNode:isSuperAccess()
29549=InvocationSite:EmptyWithAstNode:setFieldIndex(int)
29550=InvocationSite:isTypeAccess()
29551=InvocationSite:setFieldIndex(int)
29552=InvocationSite:EmptyWithAstNode:getExpressionContext()
29553=InvocationSite:EmptyWithAstNode:receiverIsImplicitThis()
29554=InvocationSite:freshInferenceContext(Scope)
29555=InvocationSite:setActualReceiverType(ReferenceBinding)
29556=InvocationSite:genericTypeArguments()
29557=InvocationSite:EmptyWithAstNode:EmptyWithAstNode(ASTNode)
29558=InvocationSite:EmptyWithAstNode:freshInferenceContext(Scope)
29559=InvocationSite:EmptyWithAstNode:setDepth(int)
29560=InvocationSite:EmptyWithAstNode:genericTypeArguments()
29561=InvocationSite:EmptyWithAstNode:acceptPotentiallyCompatibleMethods(MethodBinding[])
29562=InvocationSite:isQualifiedSuper()
29563=InvocationSite:EmptyWithAstNode:isTypeAccess()
29564=InvocationSite:invocationTargetType()
29565=InvocationSite:acceptPotentiallyCompatibleMethods(MethodBinding[])
29566=InvocationSite:EmptyWithAstNode:invocationTargetType()
29567=InvocationSite:isSuperAccess()
29568=InvocationSite:checkingPotentialCompatibility()
29569=InvocationSite:sourceStart()
29570=InvocationSite:setDepth(int)
29571=InvocationSite:EmptyWithAstNode:isQualifiedSuper()
29572=InvocationSite:getExpressionContext()
29573=InvocationSite:EmptyWithAstNode:sourceEnd()
29574=InvocationSite:EmptyWithAstNode:setActualReceiverType(ReferenceBinding)
29575=InvocationSite:receiverIsImplicitThis()
29576=InvocationSite:sourceEnd()
29577=InvocationSite:EmptyWithAstNode:checkingPotentialCompatibility()
29578=InvocationSite:EmptyWithAstNode:sourceStart()
29579=Test:main(String[])
29580=AC:methodGetMapT1ListT2(Iterator<T2>)
29581=AC:methodGetMapStringNumber()
29582=AC:methodIAString(int)
29583=AC:methodGetListT1()
29584=AC:methodT3Void(T3)
29585=AC:methodGetQExtendsT1()
29586=AC:methodGetT1(T2)
29587=RunDOMTests:RunDOMTests(String)
29588=RunDOMTests:suite()
29589=SimplePropertyDescriptor:getValueType()
29590=SimplePropertyDescriptor:isMandatory()
29591=SimplePropertyDescriptor:SimplePropertyDescriptor(Class, String, Class, boolean)
29592=J:foo()
29593=X16b:foo(int, String)
29594=Test:main(String[])
29595=ArchiveFileObject:openOutputStream()
29596=ArchiveFileObject:openReader(boolean)
29597=ArchiveFileObject:openWriter()
29598=ArchiveFileObject:getAccessLevel()
29599=ArchiveFileObject:finalize()
29600=ArchiveFileObject:hashCode()
29601=ArchiveFileObject:delete()
29602=ArchiveFileObject:ArchiveFileObject(File, String, Charset)
29603=ArchiveFileObject:toUri()
29604=ArchiveFileObject:openInputStream()
29605=ArchiveFileObject:getName()
29606=ArchiveFileObject:getLastModified()
29607=ArchiveFileObject:equals(Object)
29608=ArchiveFileObject:getCharContent(boolean)
29609=ArchiveFileObject:toString()
29610=ArchiveFileObject:getNestingKind()
29611=ArchiveFileObject:isNameCompatible(String, Kind)
29612=ArchiveFileObject:getKind()
29613=Example:foo()
29614=IndentationSwitchCaseBug:IBreakIndentation()
29615=Compliance_1_4:_test043()
29616=Compliance_1_4:test048()
29617=Compliance_1_4:test100()
29618=Compliance_1_4:test013()
29619=Compliance_1_4:test059()
29620=Compliance_1_4:Compliance_1_4(String)
29621=Compliance_1_4:test024()
29622=Compliance_1_4:test035()
29623=Compliance_1_4:test102()
29624=Compliance_1_4:test015()
29625=Compliance_1_4:test026()
29626=Compliance_1_4:test090()
29627=Compliance_1_4:test037()
29628=Compliance_1_4:test104()
29629=Compliance_1_4:test017()
29630=Compliance_1_4:test070()
29631=Compliance_1_4:test081()
29632=Compliance_1_4:test028()
29633=Compliance_1_4:test092()
29634=Compliance_1_4:test039()
29635=Compliance_1_4:test061()
29636=Compliance_1_4:test106()
29637=Compliance_1_4:test019()
29638=Compliance_1_4:test072()
29639=Compliance_1_4:suite()
29640=Compliance_1_4:test094()
29641=Compliance_1_4:test040()
29642=Compliance_1_4:test086()
29643=Compliance_1_4:test051()
29644=Compliance_1_4:test097()
29645=Compliance_1_4:test062()
29646=Compliance_1_4:test107()
29647=Compliance_1_4:test073()
29648=Compliance_1_4:test042()
29649=Compliance_1_4:test088()
29650=Compliance_1_4:test053()
29651=Compliance_1_4:getCompilerOptions()
29652=Compliance_1_4:test099()
29653=Compliance_1_4:testClass()
29654=Compliance_1_4:test064()
29655=Compliance_1_4:test075()
29656=Compliance_1_4:test044()
29657=Compliance_1_4:test055()
29658=Compliance_1_4:test066()
29659=Compliance_1_4:test020()
29660=Compliance_1_4:test031()
29661=Compliance_1_4:test077()
29662=Compliance_1_4:test046()
29663=Compliance_1_4:test011()
29664=Compliance_1_4:test057()
29665=Compliance_1_4:test022()
29666=Compliance_1_4:test068()
29667=Compliance_1_4:test033()
29668=Compliance_1_4:test079()
29669=Compliance_1_4:test025()
29670=Compliance_1_4:test036()
29671=Compliance_1_4:test047()
29672=Compliance_1_4:test012()
29673=Compliance_1_4:test058()
29674=Compliance_1_4:test027()
29675=Compliance_1_4:test091()
29676=Compliance_1_4:test038()
29677=Compliance_1_4:test049()
29678=Compliance_1_4:test101()
29679=Compliance_1_4:test020a()
29680=Compliance_1_4:test014()
29681=Compliance_1_4:test029()
29682=Compliance_1_4:test082()
29683=Compliance_1_4:test093()
29684=Compliance_1_4:test103()
29685=Compliance_1_4:test016()
29686=Compliance_1_4:test080()
29687=Compliance_1_4:test084()
29688=Compliance_1_4:setUp()
29689=Compliance_1_4:test095()
29690=Compliance_1_4:test060()
29691=Compliance_1_4:test105()
29692=Compliance_1_4:test071()
29693=Compliance_1_4:test018()
29694=Compliance_1_4:test063()
29695=Compliance_1_4:test074()
29696=Compliance_1_4:test085()
29697=Compliance_1_4:test050()
29698=Compliance_1_4:test096()
29699=Compliance_1_4:test065()
29700=Compliance_1_4:test030()
29701=Compliance_1_4:test076()
29702=Compliance_1_4:test041()
29703=Compliance_1_4:test087()
29704=Compliance_1_4:test052()
29705=Compliance_1_4:test098()
29706=Compliance_1_4:test021()
29707=Compliance_1_4:test067()
29708=Compliance_1_4:test032()
29709=Compliance_1_4:test078()
29710=Compliance_1_4:test089()
29711=Compliance_1_4:test054()
29712=Compliance_1_4:test069()
29713=Compliance_1_4:test023()
29714=Compliance_1_4:test034()
29715=Compliance_1_4:test045()
29716=Compliance_1_4:test010()
29717=Compliance_1_4:test056()
29718=IFactoryPath:disablePlugin(String)
29719=IFactoryPath:removeExternalJar(File)
29720=IFactoryPath:enablePlugin(String)
29721=IFactoryPath:removeVarJar(IPath)
29722=IFactoryPath:addWkspJar(IPath)
29723=IFactoryPath:addExternalJar(File)
29724=IFactoryPath:addVarJar(IPath)
29725=IFactoryPath:removeWkspJar(IPath)
29726=UpdatedMethodBinding:constantPoolDeclaringClass()
29727=UpdatedMethodBinding:UpdatedMethodBinding(TypeBinding, int, char[], TypeBinding, TypeBinding[], ReferenceBinding[], ReferenceBinding)
29728=Test:foo()
29729=ASTRewritingModifyingReplaceTest:test0005()
29730=ASTRewritingModifyingReplaceTest:test0003()
29731=ASTRewritingModifyingReplaceTest:test0014b()
29732=ASTRewritingModifyingReplaceTest:test0001()
29733=ASTRewritingModifyingReplaceTest:test0012()
29734=ASTRewritingModifyingReplaceTest:test0010()
29735=ASTRewritingModifyingReplaceTest:ASTRewritingModifyingReplaceTest(String)
29736=ASTRewritingModifyingReplaceTest:test0008()
29737=ASTRewritingModifyingReplaceTest:test0006()
29738=ASTRewritingModifyingReplaceTest:test0004()
29739=ASTRewritingModifyingReplaceTest:suite()
29740=ASTRewritingModifyingReplaceTest:test0002()
29741=ASTRewritingModifyingReplaceTest:allTests()
29742=ASTRewritingModifyingReplaceTest:test0013()
29743=ASTRewritingModifyingReplaceTest:test0014a()
29744=ASTRewritingModifyingReplaceTest:test0011()
29745=ASTRewritingModifyingReplaceTest:test0009()
29746=ASTRewritingModifyingReplaceTest:test0007()
29747=MethodVerifier15:detectInheritedNameClash(MethodBinding, MethodBinding)
29748=MethodVerifier15:checkAgainstInheritedMethods(MethodBinding, MethodBinding[], int, MethodBinding[])
29749=MethodVerifier15:canSkipInheritedMethods()
29750=MethodVerifier15:isMethodSubsignature(MethodBinding, MethodBinding)
29751=MethodVerifier15:isSkippableOrOverridden(MethodBinding, MethodBinding, boolean[], boolean[], boolean[], int)
29752=MethodVerifier15:checkMethods()
29753=MethodVerifier15:findSuperinterfaceCollisions(ReferenceBinding, ReferenceBinding[])
29754=MethodVerifier15:verify()
29755=MethodVerifier15:canSkipInheritedMethods(MethodBinding, MethodBinding)
29756=MethodVerifier15:reportRawReferences(MethodBinding, MethodBinding)
29757=MethodVerifier15:isInterfaceMethodImplemented(MethodBinding, MethodBinding, ReferenceBinding)
29758=MethodVerifier15:doTypeVariablesClash(MethodBinding, MethodBinding)
29759=MethodVerifier15:checkInheritedMethods(MethodBinding[], int, boolean[], boolean[])
29760=MethodVerifier15:checkInheritedDefaultMethods(MethodBinding[], boolean[], int)
29761=MethodVerifier15:checkConcreteInheritedMethod(MethodBinding, MethodBinding[])
29762=MethodVerifier15:detectNameClash(MethodBinding, MethodBinding, boolean)
29763=MethodVerifier15:checkNullSpecInheritance(MethodBinding, AbstractMethodDeclaration, boolean, boolean, boolean, MethodBinding, MethodBinding[], Scope, InheritedNonNullnessInfo[])
29764=MethodVerifier15:isAcceptableReturnTypeOverride(MethodBinding, MethodBinding)
29765=MethodVerifier15:reportRawReferences()
29766=MethodVerifier15:checkInheritedReturnTypes(MethodBinding, MethodBinding)
29767=MethodVerifier15:canOverridingMethodDifferInErasure(MethodBinding, MethodBinding)
29768=MethodVerifier15:checkInheritedMethods(MethodBinding, MethodBinding)
29769=MethodVerifier15:checkForNameClash(MethodBinding, MethodBinding)
29770=MethodVerifier15:reportIncompatibleReturnTypeError(MethodBinding, MethodBinding)
29771=MethodVerifier15:isUnsafeReturnTypeOverride(MethodBinding, MethodBinding)
29772=MethodVerifier15:checkForBridgeMethod(MethodBinding, MethodBinding, MethodBinding[])
29773=MethodVerifier15:findReplacedMethod(MethodBinding, MethodBinding)
29774=MethodVerifier15:MethodVerifier15(LookupEnvironment)
29775=MethodVerifier15:checkTypeVariableMethods(TypeParameter)
29776=AbstractMethodDeclaration:parseStatements(Parser, CompilationUnitDeclaration)
29777=AbstractMethodDeclaration:analyseCode(ClassScope, InitializationFlowContext, FlowInfo)
29778=AbstractMethodDeclaration:checkArgumentsSize()
29779=AbstractMethodDeclaration:hasErrors()
29780=AbstractMethodDeclaration:bindThrownExceptions()
29781=AbstractMethodDeclaration:isDefaultConstructor()
29782=AbstractMethodDeclaration:traverse(ASTVisitor, ClassScope)
29783=AbstractMethodDeclaration:isStatic()
29784=AbstractMethodDeclaration:isClinit()
29785=AbstractMethodDeclaration:isNative()
29786=AbstractMethodDeclaration:printReturnType(int, StringBuffer)
29787=AbstractMethodDeclaration:generateCode(ClassFile)
29788=AbstractMethodDeclaration:isMethod()
29789=AbstractMethodDeclaration:typeParameters()
29790=AbstractMethodDeclaration:resolveStatements()
29791=AbstractMethodDeclaration:resolveJavadoc()
29792=AbstractMethodDeclaration:bindArguments()
29793=AbstractMethodDeclaration:resolve(ClassScope)
29794=AbstractMethodDeclaration:compilationResult()
29795=AbstractMethodDeclaration:print(int, StringBuffer)
29796=AbstractMethodDeclaration:printBody(int, StringBuffer)
29797=AbstractMethodDeclaration:AbstractMethodDeclaration(CompilationResult)
29798=AbstractMethodDeclaration:tagAsHavingErrors()
29799=AbstractMethodDeclaration:abort(int, IProblem)
29800=AbstractMethodDeclaration:isAbstract()
29801=AbstractMethodDeclaration:generateCode(ClassScope, ClassFile)
29802=AbstractMethodDeclaration:isInitializationMethod()
29803=AbstractMethodDeclaration:isConstructor()
29804=X08:foo(Object, int)
29805=NameEnvironment:cleanup()
29806=NameEnvironment:createOutputFolder(IContainer)
29807=NameEnvironment:findType(char[][])
29808=NameEnvironment:setNames(String[], SourceFile[])
29809=NameEnvironment:isPackage(char[][], char[])
29810=NameEnvironment:findClass(String, char[])
29811=NameEnvironment:isPackage(String)
29812=NameEnvironment:NameEnvironment(IJavaProject)
29813=NameEnvironment:findType(char[], char[][])
29814=NameEnvironment:NameEnvironment(IWorkspaceRoot, JavaProject, SimpleLookupTable, BuildNotifier)
29815=NameEnvironment:computeClasspathLocations(IWorkspaceRoot, JavaProject, SimpleLookupTable)
29816=NameEnvironment:createParentFolder(IContainer)
29817=ImportBinding:readableName()
29818=ImportBinding:ImportBinding(char[][], boolean, Binding, ImportReference)
29819=ImportBinding:bindingType()
29820=ImportBinding:toString()
29821=Y:foo()
29822=IdeAnnotationProcessorManager:reportProcessorException(Processor, Exception)
29823=IdeAnnotationProcessorManager:configureFromPlatform(Compiler, Object, Object)
29824=IdeAnnotationProcessorManager:findCompilationUnit(IFile)
29825=IdeAnnotationProcessorManager:discoverNextProcessor()
29826=IdeAnnotationProcessorManager:processAnnotations(CompilationUnitDeclaration[], ReferenceBinding[], boolean)
29827=Test:getList(int, long)
29828=A:foo(java.lang.String, long)
29829=AbortIncrementalBuildException:AbortIncrementalBuildException(String)
29830=CharConstant:stringValue()
29831=CharConstant:typeID()
29832=CharConstant:longValue()
29833=CharConstant:byteValue()
29834=CharConstant:hashCode()
29835=CharConstant:equals(Object)
29836=CharConstant:fromValue(char)
29837=CharConstant:shortValue()
29838=CharConstant:doubleValue()
29839=CharConstant:intValue()
29840=CharConstant:CharConstant(char)
29841=CharConstant:floatValue()
29842=CharConstant:toString()
29843=CharConstant:charValue()
29844=Test:main(String[])
29845=JavadocImplicitTypeReference:getTypeName()
29846=JavadocImplicitTypeReference:traverse(ASTVisitor, ClassScope)
29847=JavadocImplicitTypeReference:isThis()
29848=JavadocImplicitTypeReference:internalResolveType(Scope, int)
29849=JavadocImplicitTypeReference:JavadocImplicitTypeReference(char[], int)
29850=JavadocImplicitTypeReference:reportInvalidType(Scope)
29851=JavadocImplicitTypeReference:printExpression(int, StringBuffer)
29852=JavadocImplicitTypeReference:traverse(ASTVisitor, BlockScope)
29853=JavadocImplicitTypeReference:getTypeBinding(Scope)
29854=JavadocImplicitTypeReference:getLastToken()
29855=JavadocImplicitTypeReference:augmentTypeWithAdditionalDimensions(int, Annotation[][], boolean)
29856=JavadocImplicitTypeReference:reportDeprecatedType(TypeBinding, Scope)
29857=Test:main(String[])
29858=CodeSnippetQualifiedNameReference:checkFieldAccess(BlockScope)
29859=CodeSnippetQualifiedNameReference:generateCode(BlockScope, CodeStream, boolean)
29860=CodeSnippetQualifiedNameReference:manageSyntheticAccessIfNecessary(BlockScope, FieldBinding, int, FlowInfo)
29861=CodeSnippetQualifiedNameReference:generateReceiver(CodeStream)
29862=CodeSnippetQualifiedNameReference:reportError(BlockScope)
29863=CodeSnippetQualifiedNameReference:generateCompoundAssignment(BlockScope, CodeStream, Expression, int, int, boolean)
29864=CodeSnippetQualifiedNameReference:getOtherFieldBindings(BlockScope)
29865=CodeSnippetQualifiedNameReference:generateReadSequence(BlockScope, CodeStream)
29866=CodeSnippetQualifiedNameReference:generatePostIncrement(BlockScope, CodeStream, CompoundAssignment, boolean)
29867=CodeSnippetQualifiedNameReference:CodeSnippetQualifiedNameReference(char[][], long[], int, int, EvaluationContext)
29868=CodeSnippetQualifiedNameReference:generateAssignment(BlockScope, CodeStream, Assignment, boolean)
29869=DependencyTests:testSecondaryTypeDeleting()
29870=DependencyTests:testCaseInvariantType()
29871=DependencyTests:testTypeDeleting()
29872=DependencyTests:testMethodVisibility()
29873=DependencyTests:testAbstractMethod()
29874=DependencyTests:testExactMethodDeleting()
29875=DependencyTests:testExternalJarChanged()
29876=DependencyTests:testExactMethodVisibility()
29877=DependencyTests:DependencyTests(String)
29878=DependencyTests:testFieldVisibility()
29879=DependencyTests:testTypeVisibility2()
29880=DependencyTests:test0100()
29881=DependencyTests:testTypeVariable()
29882=DependencyTests:testInterfaceDeleting()
29883=DependencyTests:testMemberTypeDeleting()
29884=DependencyTests:testMethodDeleting()
29885=DependencyTests:testFieldDeleting()
29886=DependencyTests:testMissingClassFile()
29887=DependencyTests:testMemberTypeVisibility()
29888=DependencyTests:testTypeVisibility()
29889=DependencyTests:suite()
29890=FF47209:m47209(int)
29891=FF47209:FF47209(String)
29892=Binding:shortReadableName()
29893=Binding:problemId()
29894=Binding:isValidBinding()
29895=Binding:readableName()
29896=Binding:bindingType()
29897=CompletionTests18:testBug481215c()
29898=CompletionTests18:test435219c()
29899=CompletionTests18:CompletionTests18(String)
29900=CompletionTests18:test012()
29901=CompletionTests18:test001()
29902=CompletionTests18:test018a()
29903=CompletionTests18:test431402()
29904=CompletionTests18:test435219e()
29905=CompletionTests18:testBug459189_003()
29906=CompletionTests18:test010()
29907=CompletionTests18:test427532b()
29908=CompletionTests18:test427532()
29909=CompletionTests18:test428735()
29910=CompletionTests18:suite()
29911=CompletionTests18:testExpressionBody2()
29912=CompletionTests18:testBug481215a()
29913=CompletionTests18:test443932()
29914=CompletionTests18:test435682a()
29915=CompletionTests18:test435219a()
29916=CompletionTests18:test430441()
29917=CompletionTests18:test489962()
29918=CompletionTests18:test435219k()
29919=CompletionTests18:test428735c()
29920=CompletionTests18:test008()
29921=CompletionTests18:test402081a()
29922=CompletionTests18:testBug405125a()
29923=CompletionTests18:test017()
29924=CompletionTests18:test428735a()
29925=CompletionTests18:test484479()
29926=CompletionTests18:test006()
29927=CompletionTests18:testBrokenMethodCall()
29928=CompletionTests18:test015()
29929=CompletionTests18:test430667()
29930=CompletionTests18:test435219g()
29931=CompletionTests18:testBug459189_001()
29932=CompletionTests18:test004()
29933=CompletionTests18:testBug460410()
29934=CompletionTests18:test430656()
29935=CompletionTests18:test430667a()
29936=CompletionTests18:test433178a()
29937=CompletionTests18:test013()
29938=CompletionTests18:test435219i()
29939=CompletionTests18:test002()
29940=CompletionTests18:test473008b()
29941=CompletionTests18:test402081c()
29942=CompletionTests18:testBug481564()
29943=CompletionTests18:test011()
29944=CompletionTests18:test435281()
29945=CompletionTests18:test435219b()
29946=CompletionTests18:test426851()
29947=CompletionTests18:test447774()
29948=CompletionTests18:test444300()
29949=CompletionTests18:testBug481215b()
29950=CompletionTests18:test435219d()
29951=CompletionTests18:testBug459189_004()
29952=CompletionTests18:test430667b()
29953=CompletionTests18:test435219()
29954=CompletionTests18:testBug481215d()
29955=CompletionTests18:test435219f()
29956=CompletionTests18:testBug459189_002()
29957=CompletionTests18:test427532a()
29958=CompletionTests18:test402081()
29959=CompletionTests18:test435682()
29960=CompletionTests18:testExpressionBody()
29961=CompletionTests18:test428735e()
29962=CompletionTests18:test433178()
29963=CompletionTests18:test449358()
29964=CompletionTests18:test427464()
29965=CompletionTests18:test425084()
29966=CompletionTests18:test473008a()
29967=CompletionTests18:testUnspecifiedReference()
29968=CompletionTests18:testBug405125b()
29969=CompletionTests18:test422901()
29970=CompletionTests18:test428735d()
29971=CompletionTests18:test422901a()
29972=CompletionTests18:test435219l()
29973=CompletionTests18:test009()
29974=CompletionTests18:test431811()
29975=CompletionTests18:setUpSuite()
29976=CompletionTests18:test018()
29977=CompletionTests18:test428735b()
29978=CompletionTests18:test007()
29979=CompletionTests18:test402081d()
29980=CompletionTests18:test449358a()
29981=CompletionTests18:test016()
29982=CompletionTests18:test435219h()
29983=CompletionTests18:test005()
29984=CompletionTests18:test473008c()
29985=CompletionTests18:test402081b()
29986=CompletionTests18:test014()
29987=CompletionTests18:test435219j()
29988=CompletionTests18:test003()
29989=CompletionTests18:test432527()
29990=CastExpression:accept0(ASTVisitor)
29991=CastExpression:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
29992=CastExpression:CastExpression(AST)
29993=CastExpression:getExpression()
29994=CastExpression:propertyDescriptors(int)
29995=CastExpression:clone0(AST)
29996=CastExpression:setExpression(Expression)
29997=CastExpression:internalStructuralPropertiesForType(int)
29998=CastExpression:subtreeMatch0(ASTMatcher, Object)
29999=CastExpression:getType()
30000=CastExpression:treeSize()
30001=CastExpression:memSize()
30002=CastExpression:getNodeType0()
30003=CastExpression:setType(Type)
30004=InclusionPatternsTests:testRenameIncludedCompilationUnit()
30005=InclusionPatternsTests:testIncludeCUOnly01_new()
30006=InclusionPatternsTests:testRenameResourceIncludedCompilationUnit()
30007=InclusionPatternsTests:testIsOnClasspath3()
30008=InclusionPatternsTests:testCreateIncludedPackage()
30009=InclusionPatternsTests:testRemoveInclusionOnPackage()
30010=InclusionPatternsTests:testIsOnClasspath1()
30011=InclusionPatternsTests:testSearchWithIncludedCompilationUnit1()
30012=InclusionPatternsTests:testNestedSourceFolder3()
30013=InclusionPatternsTests:testCreateResourceIncludedCompilationUnit2()
30014=InclusionPatternsTests:testNestedSourceFolder5()
30015=InclusionPatternsTests:testIncludeCUOnly01()
30016=InclusionPatternsTests:testSearchWithIncludedPackage1()
30017=InclusionPatternsTests:testDefaultPackageProjectIsSource()
30018=InclusionPatternsTests:testSearchPotentialMatchInOutput()
30019=InclusionPatternsTests:testMoveFolderContainingPackage1()
30020=InclusionPatternsTests:testNestedSourceFolder2()
30021=InclusionPatternsTests:testRenameIncludedPackage1()
30022=InclusionPatternsTests:testIncludeCUOnly02_new()
30023=InclusionPatternsTests:tearDown()
30024=InclusionPatternsTests:InclusionPatternsTests(String)
30025=InclusionPatternsTests:testAddInclusionOnCompilationUnit()
30026=InclusionPatternsTests:testCreateIncludedCompilationUnit()
30027=InclusionPatternsTests:testIsOnClasspath4()
30028=InclusionPatternsTests:setUp()
30029=InclusionPatternsTests:testNestedSourceFolder4()
30030=InclusionPatternsTests:testIsOnClasspath2()
30031=InclusionPatternsTests:testCreateResourceIncludedPackage()
30032=InclusionPatternsTests:testSearchWithIncludedCompilationUnit2()
30033=InclusionPatternsTests:testCreateResourceIncludedPackage2()
30034=InclusionPatternsTests:setClasspath(String[])
30035=InclusionPatternsTests:testNestedSourceFolder6()
30036=InclusionPatternsTests:testSearchWithIncludedPackage2()
30037=InclusionPatternsTests:testMoveFolderContainingPackage2()
30038=InclusionPatternsTests:suite()
30039=InclusionPatternsTests:testRemoveInclusionOnCompilationUnit()
30040=InclusionPatternsTests:testNestedSourceFolder1()
30041=InclusionPatternsTests:testRenameIncludedPackage2()
30042=InclusionPatternsTests:testAddToIncludedFolder()
30043=InclusionPatternsTests:testRenameResourceIncludedPackage()
30044=InclusionPatternsTests:testAddInclusionOnPackage()
30045=InclusionPatternsTests:testAddInclusionOnFolderUnderProject()
30046=InclusionPatternsTests:testCreateResourceIncludedCompilationUnit()
30047=InclusionPatternsTests:testTrailingSlash()
30048=InclusionPatternsTests:testIncludeCUOnly02()
30049=TestD2:bar()
30050=TestD2:foo()
30051=ConstructorDeclarationImpl:kind()
30052=ConstructorDeclarationImpl:toString()
30053=ConstructorDeclarationImpl:ConstructorDeclarationImpl(IMethodBinding, BaseProcessorEnv)
30054=ConstructorDeclarationImpl:accept(DeclarationVisitor)
30055=IClasspathEntry:getContentKind()
30056=IClasspathEntry:getReferencingEntry()
30057=IClasspathEntry:getEntryKind()
30058=IClasspathEntry:getOutputLocation()
30059=IClasspathEntry:getSourceAttachmentPath()
30060=IClasspathEntry:getPath()
30061=IClasspathEntry:getResolvedEntry()
30062=IClasspathEntry:getExtraAttributes()
30063=IClasspathEntry:getExclusionPatterns()
30064=IClasspathEntry:isExported()
30065=IClasspathEntry:getSourceAttachmentRootPath()
30066=IClasspathEntry:getAccessRules()
30067=IClasspathEntry:getInclusionPatterns()
30068=IClasspathEntry:combineAccessRules()
30069=Test:foo()
30070=Test:bar()
30071=ElementValuePairInfo:getName()
30072=ElementValuePairInfo:hashCode()
30073=ElementValuePairInfo:equals(Object)
30074=ElementValuePairInfo:toString()
30075=ElementValuePairInfo:getValue()
30076=ElementValuePairInfo:ElementValuePairInfo(char[], Object)
30077=SourceRangeVerifier:checkChild(ASTNode, ASTNode, ASTNode)
30078=SourceRangeVerifier:process(ASTNode)
30079=SourceRangeVerifier:preVisit2(ASTNode)
30080=MethodRefParameter:subtreeMatch0(ASTMatcher, Object)
30081=MethodRefParameter:internalStructuralPropertiesForType(int)
30082=MethodRefParameter:accept0(ASTVisitor)
30083=MethodRefParameter:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
30084=MethodRefParameter:setName(SimpleName)
30085=MethodRefParameter:propertyDescriptors(int)
30086=MethodRefParameter:getNodeType0()
30087=MethodRefParameter:memSize()
30088=MethodRefParameter:setVarargs(boolean)
30089=MethodRefParameter:MethodRefParameter(AST)
30090=MethodRefParameter:internalGetSetBooleanProperty(SimplePropertyDescriptor, boolean, boolean)
30091=MethodRefParameter:setType(Type)
30092=MethodRefParameter:getType()
30093=MethodRefParameter:treeSize()
30094=MethodRefParameter:isVarargs()
30095=MethodRefParameter:getName()
30096=MethodRefParameter:clone0(AST)
30097=X16b:foo(int, String)
30098=A:foo()
30099=O:I:y()
30100=Declaration:getModifiers()
30101=Declaration:getSimpleName()
30102=Declaration:getDocComment()
30103=Declaration:equals(Object)
30104=Declaration:accept(DeclarationVisitor)
30105=Declaration:getPosition()
30106=Declaration:getAnnotation(Class<A>)
30107=Declaration:getAnnotationMirrors()
30108=SourceTypeElementInfo:isBinaryType()
30109=SourceTypeElementInfo:getFileName()
30110=SourceTypeElementInfo:setSuperInterfaceNames(char[][])
30111=SourceTypeElementInfo:getMemberTypeHandles()
30112=SourceTypeElementInfo:isAnonymousMember()
30113=SourceTypeElementInfo:addCategories(IJavaElement, char[][])
30114=SourceTypeElementInfo:getTypeParameterNames()
30115=SourceTypeElementInfo:getMethods()
30116=SourceTypeElementInfo:toString()
30117=SourceTypeElementInfo:getFields()
30118=SourceTypeElementInfo:getInterfaceNames()
30119=SourceTypeElementInfo:getTypeParameterBounds()
30120=SourceTypeElementInfo:getInitializers()
30121=SourceTypeElementInfo:setHandle(IType)
30122=SourceTypeElementInfo:isAnonymous()
30123=SourceTypeElementInfo:setSuperclassName(char[])
30124=SourceTypeElementInfo:getMethodHandles()
30125=SourceTypeElementInfo:getHandle()
30126=SourceTypeElementInfo:getSuperclassName()
30127=SourceTypeElementInfo:getMemberTypes()
30128=SourceTypeElementInfo:getCategories()
30129=SourceTypeElementInfo:getFieldHandles()
30130=SourceTypeElementInfo:getEnclosingType()
30131=SourceTypeElementInfo:getChildren()
30132=SourceTypeElementInfo:getName()
30133=TestB:getFilters()
30134=X01:foo(int, int)
30135=F:foo()
30136=IAnnotationBinding:getAllMemberValuePairs()
30137=IAnnotationBinding:getDeclaredMemberValuePairs()
30138=IAnnotationBinding:getName()
30139=IAnnotationBinding:getAnnotationType()
30140=ByteConstant:stringValue()
30141=ByteConstant:charValue()
30142=ByteConstant:longValue()
30143=ByteConstant:floatValue()
30144=ByteConstant:ByteConstant(byte)
30145=ByteConstant:intValue()
30146=ByteConstant:shortValue()
30147=ByteConstant:doubleValue()
30148=ByteConstant:toString()
30149=ByteConstant:byteValue()
30150=ByteConstant:typeID()
30151=BuildNotifier:subTask(String)
30152=BuildNotifier:problemsMessage()
30153=BuildNotifier:done()
30154=BuildNotifier:checkCancel()
30155=BuildNotifier:updateProgressDelta(float)
30156=BuildNotifier:BuildNotifier(IProgressMonitor, IProject)
30157=BuildNotifier:aboutToCompile(SourceFile)
30158=BuildNotifier:resetProblemCounters()
30159=BuildNotifier:checkCancelWithinCompiler()
30160=BuildNotifier:setCancelling(boolean)
30161=BuildNotifier:setProgressPerCompilationUnit(float)
30162=BuildNotifier:updateProgress(float)
30163=BuildNotifier:begin()
30164=BuildNotifier:updateProblemCounts(CategorizedProblem[])
30165=BuildNotifier:compiled(SourceFile)
30166=BuildNotifier:updateProblemCounts(IMarker[], CategorizedProblem[])
30167=A:actionPerformed(ActionEvent)
30168=EclipseFileManager:getJavaFileObjectsFromStrings(Iterable<String>)
30169=EclipseFileManager:getPathsFrom(String)
30170=EclipseFileManager:setLocation(Location, Iterable<? extends File>)
30171=EclipseFileManager:handleOption(String, Iterator<String>)
30172=EclipseFileManager:getJavaFileObjects(File)
30173=EclipseFileManager:normalized(String)
30174=EclipseFileManager:bind(String, String)
30175=EclipseFileManager:getJavaFileObjects(String)
30176=EclipseFileManager:setLocale(Locale)
30177=EclipseFileManager:getFileForOutput(Location, String, String, FileObject)
30178=EclipseFileManager:getArchive(File)
30179=EclipseFileManager:getLocation(Location)
30180=EclipseFileManager:flush()
30181=EclipseFileManager:prependFiles(Iterable<? extends File>, Iterable<? extends File>)
30182=EclipseFileManager:bind(String, String[])
30183=EclipseFileManager:concatFiles(Iterable<? extends File>, Iterable<? extends File>)
30184=EclipseFileManager:getEndorsedDirsFrom(String)
30185=EclipseFileManager:getJavaFileForOutput(Location, String, Kind, FileObject)
30186=EclipseFileManager:isSameFile(FileObject, FileObject)
30187=EclipseFileManager:getKind(File)
30188=EclipseFileManager:getExtension(String)
30189=EclipseFileManager:close()
30190=EclipseFileManager:normalizedFileName(String, String)
30191=EclipseFileManager:collectAllMatchingFiles(File, String, Set<Kind>, boolean, ArrayList<JavaFileObject>)
30192=EclipseFileManager:addNewEntry(ArrayList, String, ArrayList, String, String, boolean, boolean)
30193=EclipseFileManager:getKind(String)
30194=EclipseFileManager:getDefaultClasspath()
30195=EclipseFileManager:getDefaultBootclasspath()
30196=EclipseFileManager:getJavaFileObjectsFromFiles(Iterable<? extends File>)
30197=EclipseFileManager:getExtdirsFrom(String)
30198=EclipseFileManager:isSupportedOption(String)
30199=EclipseFileManager:EclipseFileManager(Locale, Charset)
30200=EclipseFileManager:processPathEntries(int, ArrayList, String, String, boolean, boolean)
30201=EclipseFileManager:getFileForInput(Location, String, String)
30202=EclipseFileManager:getJavaFileForInput(Location, String, Kind)
30203=EclipseFileManager:getClassLoader(Location)
30204=EclipseFileManager:list(Location, String, Set<Kind>, boolean)
30205=EclipseFileManager:isArchive(File)
30206=EclipseFileManager:getOutputDir(String)
30207=EclipseFileManager:inferBinaryName(Location, JavaFileObject)
30208=EclipseFileManager:getExtension(File)
30209=EclipseFileManager:hasLocation(Location)
30210=X:foo()
30211=A:bar()
30212=X03:foo()
30213=X03:destroy()
30214=X:newExceptionHandler1(Exception, String, String, Object)
30215=MethodInfo:isSynthetic()
30216=MethodInfo:getMethodDescriptor()
30217=MethodInfo:getArgumentNames()
30218=MethodInfo:reset()
30219=MethodInfo:sizeInBytes()
30220=MethodInfo:readDeprecatedAndSyntheticAttributes()
30221=MethodInfo:compareTo(Object)
30222=MethodInfo:getGenericSignature()
30223=MethodInfo:isClinit()
30224=MethodInfo:MethodInfo(byte, int, int)
30225=MethodInfo:initialize()
30226=MethodInfo:getSelector()
30227=MethodInfo:readExceptionAttributes()
30228=MethodInfo:getExceptionTypeNames()
30229=MethodInfo:isConstructor()
30230=MethodInfo:toString()
30231=MethodInfo:getModifiers()
30232=Messages:Messages()
30233=ClasspathChange:ClasspathChange(JavaProject, IClasspathEntry[], IPath, IClasspathEntry[])
30234=ClasspathChange:classpathContains(IClasspathEntry[], IClasspathEntry)
30235=ClasspathChange:equals(Object)
30236=ClasspathChange:toString()
30237=ClasspathChange:generateDelta(JavaElementDelta, boolean)
30238=ClasspathChange:getSourceAttachmentDeltaFlag(IPath, IPath)
30239=ClasspathChange:determineAffectedPackageFragments(IPath)
30240=ClasspathChange:requestIndexing()
30241=ClasspathChange:addClasspathDeltas(JavaElementDelta, IPackageFragmentRoot[], int)
30242=ClasspathChange:hashCode()
30243=ClasspathChange:collectAllSubfolders(IFolder, ArrayList)
30244=SelectionOnLambdaExpression:SelectionOnLambdaExpression(LambdaExpression)
30245=SelectionOnLambdaExpression:resolveType(BlockScope, boolean)
30246=ArrayType:getComponentType()
30247=A:foo()
30248=X03b:foo()
30249=FieldBinding:setAnnotations(AnnotationBinding[])
30250=FieldBinding:fillInDefaultNonNullness(FieldDeclaration, Scope)
30251=FieldBinding:canBeSeenBy(TypeBinding, InvocationSite, Scope)
30252=FieldBinding:constant()
30253=FieldBinding:FieldBinding(FieldBinding, ReferenceBinding)
30254=FieldBinding:FieldBinding(char[], TypeBinding, int, ReferenceBinding, Constant)
30255=FieldBinding:computeUniqueKey(boolean)
30256=FieldBinding:isViewedAsDeprecated()
30257=FieldBinding:isOrEnclosedByPrivateType()
30258=FieldBinding:isTransient()
30259=FieldBinding:isUsedOnlyInCompound()
30260=FieldBinding:isProtected()
30261=FieldBinding:genericSignature()
30262=FieldBinding:kind()
30263=FieldBinding:isPrivate()
30264=FieldBinding:canBeSeenBy(PackageBinding)
30265=FieldBinding:FieldBinding()
30266=FieldBinding:constant(Scope)
30267=FieldBinding:isSynthetic()
30268=FieldBinding:sourceField()
30269=FieldBinding:FieldBinding(FieldDeclaration, TypeBinding, int, ReferenceBinding)
30270=FieldBinding:isVolatile()
30271=FieldBinding:getAnnotationTagBits()
30272=FieldBinding:isUsed()
30273=FieldBinding:isPublic()
30274=FieldBinding:original()
30275=FieldBinding:isDefault()
30276=FieldBinding:isStatic()
30277=FieldBinding:getAnnotations()
30278=FieldBinding:isDeprecated()
30279=FieldBinding:getAccessFlags()
30280=A:foo()
30281=NamingConventionTests:testGetBaseName003()
30282=NamingConventionTests:NamingConventionTests(String)
30283=NamingConventionTests:testRemovePrefixAndSuffixForFieldName002()
30284=NamingConventionTests:testSuggestFieldName044()
30285=NamingConventionTests:testSuggestSetterName001()
30286=NamingConventionTests:testSuggestConstantFieldName002()
30287=NamingConventionTests:testSuggestGetterName011()
30288=NamingConventionTests:testSuggestLocalName002()
30289=NamingConventionTests:testSuggestFieldName033()
30290=NamingConventionTests:testSuggestFieldName022()
30291=NamingConventionTests:testSuggestFieldName011()
30292=NamingConventionTests:testRemovePrefixAndSuffixForFieldName004()
30293=NamingConventionTests:testSuggestFieldName046()
30294=NamingConventionTests:testSuggestSetterName003()
30295=NamingConventionTests:testSuggestFieldName035()
30296=NamingConventionTests:testSuggestFieldName024()
30297=NamingConventionTests:testSuggestFieldName013()
30298=NamingConventionTests:testSuggestFieldName002()
30299=NamingConventionTests:testSuggestFieldName048()
30300=NamingConventionTests:testSuggestFieldName037()
30301=NamingConventionTests:testSuggestGetterName004()
30302=NamingConventionTests:testSuggestFieldName026()
30303=NamingConventionTests:testGetBaseName001()
30304=NamingConventionTests:testSuggestFieldName015()
30305=NamingConventionTests:testSuggestFieldName004()
30306=NamingConventionTests:testSuggestGetterName013()
30307=NamingConventionTests:testSuggestFieldName039()
30308=NamingConventionTests:testSuggestGetterName002()
30309=NamingConventionTests:testSuggestFieldName028()
30310=NamingConventionTests:testSuggestGetterName007()
30311=NamingConventionTests:testSuggestFieldName029()
30312=NamingConventionTests:testSuggestFieldName018()
30313=NamingConventionTests:setUp()
30314=NamingConventionTests:testSuggestFieldName007()
30315=NamingConventionTests:testSuggestGetterName005()
30316=NamingConventionTests:testSuggestFieldName009()
30317=NamingConventionTests:testSuggestFieldName040()
30318=NamingConventionTests:testSuggestGetterName009()
30319=NamingConventionTests:testSuggestFieldName042()
30320=NamingConventionTests:testSuggestFieldName031()
30321=NamingConventionTests:testSuggestFieldName020()
30322=NamingConventionTests:testSuggestGetterName010()
30323=NamingConventionTests:testSuggestFieldName032()
30324=NamingConventionTests:testSuggestFieldName021()
30325=NamingConventionTests:testGetBaseName004()
30326=NamingConventionTests:testSuggestFieldName010()
30327=NamingConventionTests:testRemovePrefixAndSuffixForFieldName001()
30328=NamingConventionTests:testSuggestSetterName002()
30329=NamingConventionTests:testSuggestFieldName045()
30330=NamingConventionTests:testSuggestConstantFieldName001()
30331=NamingConventionTests:testSuggestLocalName001()
30332=NamingConventionTests:testSuggestFieldName034()
30333=NamingConventionTests:testSuggestFieldName023()
30334=NamingConventionTests:testSuggestFieldName012()
30335=NamingConventionTests:testRemovePrefixAndSuffixForFieldName003()
30336=NamingConventionTests:testSuggestFieldName001()
30337=NamingConventionTests:testSuggestFieldName047()
30338=NamingConventionTests:tearDown()
30339=NamingConventionTests:suite()
30340=NamingConventionTests:testSuggestFieldName036()
30341=NamingConventionTests:testSuggestGetterName003()
30342=NamingConventionTests:testSuggestFieldName025()
30343=NamingConventionTests:testSuggestFieldName014()
30344=NamingConventionTests:testSuggestFieldName003()
30345=NamingConventionTests:testRemovePrefixAndSuffixForLocalName001()
30346=NamingConventionTests:testSuggestGetterName012()
30347=NamingConventionTests:testSuggestFieldName038()
30348=NamingConventionTests:testSuggestGetterName001()
30349=NamingConventionTests:testSuggestFieldName027()
30350=NamingConventionTests:testGetBaseName002()
30351=NamingConventionTests:testSuggestFieldName016()
30352=NamingConventionTests:testSuggestFieldName005()
30353=NamingConventionTests:testSuggestFieldName017()
30354=NamingConventionTests:testSuggestFieldName006()
30355=NamingConventionTests:testSuggestParamWithUnderscore()
30356=NamingConventionTests:testSuggestGetterName008()
30357=NamingConventionTests:testSuggestFieldName019()
30358=NamingConventionTests:testSuggestFieldName008()
30359=NamingConventionTests:testSuggestGetterName006()
30360=NamingConventionTests:testSuggestFieldName041()
30361=NamingConventionTests:testSuggestFieldName030()
30362=NamingConventionTests:testSuggestFieldName043()
30363=CopyMoveResourcesTests:testCopyWorkingCopy()
30364=CopyMoveResourcesTests:testCopyCU11()
30365=CopyMoveResourcesTests:testMovePackageFragment()
30366=CopyMoveResourcesTests:testMoveCU11()
30367=CopyMoveResourcesTests:testCopyCU02()
30368=CopyMoveResourcesTests:testMoveCU13()
30369=CopyMoveResourcesTests:setUp()
30370=CopyMoveResourcesTests:testMoveCU02()
30371=CopyMoveResourcesTests:testCopyCU04()
30372=CopyMoveResourcesTests:movePositive(IJavaElement[], IJavaElement[], IJavaElement[], String[], boolean, IProgressMonitor)
30373=CopyMoveResourcesTests:testMoveCU03()
30374=CopyMoveResourcesTests:testCopyCU05()
30375=CopyMoveResourcesTests:testCopyWorkingCopyDestination()
30376=CopyMoveResourcesTests:testCopyWorkingCopyWithInvalidDestination()
30377=CopyMoveResourcesTests:tearDown()
30378=CopyMoveResourcesTests:testMoveCU05()
30379=CopyMoveResourcesTests:testCopyCU07()
30380=CopyMoveResourcesTests:testCopyWorkingCopyRename()
30381=CopyMoveResourcesTests:testCopyWorkingCopyRenameForce()
30382=CopyMoveResourcesTests:testMoveCU07()
30383=CopyMoveResourcesTests:testCopyCU09()
30384=CopyMoveResourcesTests:testCopyWorkingCopyForce()
30385=CopyMoveResourcesTests:testMoveCU09()
30386=CopyMoveResourcesTests:testCopyCU10()
30387=CopyMoveResourcesTests:testCopyCU12()
30388=CopyMoveResourcesTests:testCopyWorkingCopyWithCollision()
30389=CopyMoveResourcesTests:testCopyPackageFragment()
30390=CopyMoveResourcesTests:testMoveCU10()
30391=CopyMoveResourcesTests:testCopyCU01()
30392=CopyMoveResourcesTests:testMoveWorkingCopy()
30393=CopyMoveResourcesTests:CopyMoveResourcesTests(String)
30394=CopyMoveResourcesTests:testMoveReadOnlyPackageFragment()
30395=CopyMoveResourcesTests:testMoveCU12()
30396=CopyMoveResourcesTests:suite()
30397=CopyMoveResourcesTests:testCopyCU03()
30398=CopyMoveResourcesTests:testMoveCU01()
30399=CopyMoveResourcesTests:testMoveCU04()
30400=CopyMoveResourcesTests:testCopyCU06()
30401=CopyMoveResourcesTests:testMoveCU06()
30402=CopyMoveResourcesTests:testCopyCU08()
30403=CopyMoveResourcesTests:testCopyReadOnlyPackageFragment()
30404=CopyMoveResourcesTests:testMoveCU08()
30405=CopyMoveResourcesTests:copyPositive(IJavaElement, IJavaElement, IJavaElement, String, boolean)
30406=CopyMoveResourcesTests:testMoveWorkingCopy2()
30407=TypeReferenceAsSingleNameReference:hasNoReference()
30408=TypeReferenceAsSingleNameReference:hasReference()
30409=X:run(String)
30410=Types:getPrimitiveType(PrimitiveType.Kind)
30411=Types:isAssignable(TypeMirror, TypeMirror)
30412=Types:getDeclaredType(TypeDeclaration, TypeMirror)
30413=Types:getTypeVariable(TypeParameterDeclaration)
30414=Types:getDeclaredType(DeclaredType, TypeDeclaration, TypeMirror)
30415=Types:isSubtype(TypeMirror, TypeMirror)
30416=Types:getWildcardType(Collection<ReferenceType>, Collection<ReferenceType>)
30417=Types:getArrayType(TypeMirror)
30418=Types:getErasure(TypeMirror)
30419=Types:getVoidType()
30420=SourceMapper:mapSource(IType, char[], IBinaryType)
30421=SourceMapper:findMatchingGenericEnd(char[], int)
30422=SourceMapper:exitInitializer(int)
30423=SourceMapper:computeRootPath(IContainer, HashSet, boolean, Set, int)
30424=SourceMapper:getNameRange(IJavaElement)
30425=SourceMapper:getSourceForRootPath(String, String)
30426=SourceMapper:exitMethod(int, Expression)
30427=SourceMapper:findSource(IType, String)
30428=SourceMapper:findSource(IType, IBinaryType)
30429=SourceMapper:findSource(String)
30430=SourceMapper:getImports(BinaryType)
30431=SourceMapper:exitAbstractMethod(int)
30432=SourceMapper:getSourceRange(IJavaElement)
30433=SourceMapper:getMethodParameterNames(IMethod)
30434=SourceMapper:enterType(TypeInfo)
30435=SourceMapper:enterInitializer(int, int)
30436=SourceMapper:LocalVariableElementKey:hashCode()
30437=SourceMapper:enterAbstractMethod(MethodInfo)
30438=SourceMapper:enterCompilationUnit()
30439=SourceMapper:enterConstructor(MethodInfo)
30440=SourceMapper:exitCompilationUnit(int)
30441=SourceMapper:enterMethod(MethodInfo)
30442=SourceMapper:readSource(ZipEntry, ZipFile, String)
30443=SourceMapper:SourceMapper(IPath, String, Map, String)
30444=SourceMapper:exitField(int, int, int)
30445=SourceMapper:acceptLineSeparatorPositions(int[])
30446=SourceMapper:getFlags(IJavaElement)
30447=SourceMapper:acceptImport(int, int, int, int, char[][], boolean, int)
30448=SourceMapper:LocalVariableElementKey:equals(Object)
30449=SourceMapper:getType(String)
30450=SourceMapper:close()
30451=SourceMapper:SourceMapper(IPath, String, Map)
30452=SourceMapper:acceptProblem(CategorizedProblem)
30453=SourceMapper:setSourceRange(IJavaElement, SourceRange, SourceRange)
30454=SourceMapper:hasToRetrieveSourceRangesForLocalClass(char[])
30455=SourceMapper:getUnqualifiedMethodHandle(IMethod, boolean)
30456=SourceMapper:getUnqualifiedTypeSignature(String, int, int, StringBuffer, boolean)
30457=SourceMapper:setMethodParameterNames(IMethod, char[][])
30458=SourceMapper:convertTypeNamesToSigs(char[][])
30459=SourceMapper:computeAllRootPaths(IType)
30460=SourceMapper:LocalVariableElementKey:toString()
30461=SourceMapper:SourceMapper()
30462=SourceMapper:addCategories(IJavaElement, char[][])
30463=SourceMapper:enterField(FieldInfo)
30464=SourceMapper:LocalVariableElementKey:LocalVariableElementKey(IJavaElement, String)
30465=SourceMapper:acceptPackage(ImportReference)
30466=SourceMapper:exitType(int)
30467=SourceMapper:mapSource(IType, char[], IBinaryType, IJavaElement)
30468=SourceMapper:exitConstructor(int)
30469=Example:foo()
30470=A:foo()
30471=CompoundNameVector:contains(char[][])
30472=CompoundNameVector:CompoundNameVector()
30473=CompoundNameVector:addAll(char[][][])
30474=CompoundNameVector:toString()
30475=CompoundNameVector:removeAll()
30476=CompoundNameVector:elementAt(int)
30477=CompoundNameVector:remove(char[][])
30478=CompoundNameVector:add(char[][])
30479=MarkedASTFlattener:process(CompilationUnit, AbstractASTTests.MarkerInfo)
30480=MarkedASTFlattener:DefaultMarkedNodeLabelProvider:getText(ASTNode)
30481=MarkedASTFlattener:DefaultMarkedNodeLabelProvider:appendBindingFlags(IBinding, StringBuffer)
30482=MarkedASTFlattener:getResult()
30483=MarkedASTFlattener:postVisit(ASTNode)
30484=MarkedASTFlattener:DefaultMarkedNodeLabelProvider:appendBindingKey(IBinding, StringBuffer)
30485=MarkedASTFlattener:MarkedASTFlattener(boolean, boolean, MarkedNodeLabelProvider)
30486=MarkedASTFlattener:DefaultMarkedNodeLabelProvider:appendBindingKind(IBinding, StringBuffer)
30487=MarkedASTFlattener:MarkedNodeLabelProvider:getText(ASTNode)
30488=MarkedASTFlattener:DefaultMarkedNodeLabelProvider:appendFlags(ASTNode, StringBuffer)
30489=MarkedASTFlattener:DefaultMarkedNodeLabelProvider:appendBinding(ASTNode, StringBuffer)
30490=MarkedASTFlattener:DefaultMarkedNodeLabelProvider:resolveBinding(ASTNode)
30491=MarkedASTFlattener:preVisit(ASTNode)
30492=MarkedASTFlattener:DefaultMarkedNodeLabelProvider:appendNodeType(ASTNode, StringBuffer)
30493=MarkedASTFlattener:DefaultMarkedNodeLabelProvider:DefaultMarkedNodeLabelProvider(int)
30494=MarkedASTFlattener:DefaultMarkedNodeLabelProvider:appendNodePosition(ASTNode, StringBuffer)
30495=MarkedASTFlattener:DefaultMarkedNodeLabelProvider:appendNodeExtendedPosition(ASTNode, StringBuffer)
30496=A:theMethod()
30497=Signature:getTypeErasure(char[])
30498=Signature:checkName(char[], char[], int, int)
30499=Signature:appendArrayTypeSignature(char[], int, boolean, StringBuffer)
30500=Signature:getParameterCount(char[])
30501=Signature:getSimpleNames(char[])
30502=Signature:createArraySignature(String, int)
30503=Signature:getIntersectionTypeBounds(char[])
30504=Signature:getQualifier(char[])
30505=Signature:encodeArrayDimension(char[], int, int, StringBuffer)
30506=Signature:createIntersectionTypeSignature(char[][])
30507=Signature:toString(String, String, String[], boolean, boolean)
30508=Signature:createMethodSignature(String[], String)
30509=Signature:appendClassTypeSignature(char[], int, boolean, StringBuffer)
30510=Signature:appendTypeArgumentSignature(char[], int, boolean, StringBuffer)
30511=Signature:encodeTypeSignature(char[], int, boolean, int, StringBuffer)
30512=Signature:removeCapture(String)
30513=Signature:getTypeArguments(String)
30514=Signature:appendTypeSignature(char[], int, boolean, StringBuffer, boolean)
30515=Signature:getTypeParameters(String)
30516=Signature:createCharArrayTypeSignature(char[], boolean)
30517=Signature:getThrownExceptionTypes(char[])
30518=Signature:toCharArray(char[], char[], char[][], boolean, boolean, boolean)
30519=Signature:createIntersectionTypeSignature(String[])
30520=Signature:getTypeVariable(String)
30521=Signature:consumeWhitespace(char[], int, int)
30522=Signature:getElementType(char[])
30523=Signature:createTypeSignature(char[], boolean)
30524=Signature:getSimpleName(char[])
30525=Signature:toString(String)
30526=Signature:getQualifier(String)
30527=Signature:getArrayCount(String)
30528=Signature:getParameterCount(String)
30529=Signature:getTypeSignatureKind(String)
30530=Signature:appendArrayTypeSignature(char[], int, boolean, StringBuffer, boolean)
30531=Signature:toQualifiedName(String[])
30532=Signature:getReturnType(char[])
30533=Signature:getTypeParameterBounds(String)
30534=Signature:createMethodSignature(char[][], char[])
30535=Signature:checkNextChar(char[], char, int, int, boolean)
30536=Signature:createTypeParameterSignature(String, String[])
30537=Signature:appendTypeArgumentSignatures(char[], int, boolean, StringBuffer)
30538=Signature:createArraySignature(char[], int)
30539=Signature:encodeQualifiedName(char[], int, int, StringBuffer)
30540=Signature:getSignatureSimpleName(char[])
30541=Signature:appendCaptureTypeSignature(char[], int, boolean, StringBuffer)
30542=Signature:removeCapture(char[])
30543=Signature:checkArrayDimension(char[], int, int)
30544=Signature:getParameterTypes(char[])
30545=Signature:getTypeArguments(char[])
30546=Signature:getThrownExceptionTypes(String)
30547=Signature:getSimpleNames(String)
30548=Signature:appendIntersectionTypeSignature(char[], int, boolean, StringBuffer)
30549=Signature:appendTypeSignature(char[], int, boolean, StringBuffer)
30550=Signature:toQualifiedName(char[][])
30551=Signature:getSignatureQualifier(String)
30552=Signature:getIntersectionTypeBounds(String)
30553=Signature:toCharArray(char[])
30554=Signature:getTypeSignatureKind(char[])
30555=Signature:getParameterTypes(String)
30556=Signature:getArrayCount(char[])
30557=Signature:getSignatureSimpleName(String)
30558=Signature:appendArgumentSimpleNames(char[], int, int, StringBuffer)
30559=Signature:getSignatureQualifier(char[])
30560=Signature:createTypeParameterSignature(char[], char[][])
30561=Signature:appendSimpleName(char[], int, int, StringBuffer)
30562=Signature:getTypeParameterBounds(char[])
30563=Signature:getTypeErasure(String)
30564=Signature:getTypeVariable(char[])
30565=Signature:getTypeParameters(char[])
30566=Signature:toString(String, String, String[], boolean, boolean, boolean)
30567=Signature:getReturnType(String)
30568=Signature:getSimpleName(String)
30569=Signature:getElementType(String)
30570=Signature:createTypeSignature(String, boolean)
30571=Signature:Signature()
30572=Signature:toCharArray(char[], char[], char[][], boolean, boolean)
30573=CaseLabel:place()
30574=CaseLabel:isCaseLabel()
30575=CaseLabel:branchWide()
30576=CaseLabel:branch()
30577=CaseLabel:CaseLabel(CodeStream)
30578=CaseLabel:placeInstruction()
30579=CaseLabel:isStandardLabel()
30580=JavaModelTests:JavaModelTests(String)
30581=JavaModelTests:testContains5()
30582=JavaModelTests:testContains3()
30583=JavaModelTests:testGetSchedulingRule2()
30584=JavaModelTests:testContains1()
30585=JavaModelTests:suite()
30586=JavaModelTests:testFindLineSeparator04()
30587=JavaModelTests:testPreProcessingResourceChangedListener04()
30588=JavaModelTests:testFindLineSeparator02()
30589=JavaModelTests:testCreateNonJavaProject()
30590=JavaModelTests:testGetSchedulingRule4()
30591=JavaModelTests:testGetJavaProjects1()
30592=JavaModelTests:testPreProcessingResourceChangedListener02()
30593=JavaModelTests:testCreatePkgHandleInDifferentProject()
30594=JavaModelTests:testContains6()
30595=JavaModelTests:testGetJavaProject()
30596=JavaModelTests:testInitializeAfterLoad()
30597=JavaModelTests:testContains4()
30598=JavaModelTests:testAddFileToNonJavaProject()
30599=JavaModelTests:testGetNonJavaResources()
30600=JavaModelTests:testGetSchedulingRule1()
30601=JavaModelTests:testContains2()
30602=JavaModelTests:testFindLineSeparator03()
30603=JavaModelTests:indexOf(String, IJavaProject[])
30604=JavaModelTests:testFindLineSeparator01()
30605=JavaModelTests:testGetJavaProjects2()
30606=JavaModelTests:testPreProcessingResourceChangedListener03()
30607=JavaModelTests:testGetSchedulingRule3()
30608=JavaModelTests:testInitializeAfterLoad2()
30609=JavaModelTests:testPreProcessingResourceChangedListener01()
30610=ExtraFlags:getExtraFlags(ClassFileReader)
30611=ExtraFlags:getExtraFlags(TypeDeclaration)
30612=ExtraFlags:getExtraFlags(IType)
30613=LookupEnvironment:isPackage(char[][], char[])
30614=LookupEnvironment:createBinaryTypeFrom(IBinaryType, PackageBinding)
30615=LookupEnvironment:completeTypeBindings()
30616=LookupEnvironment:getCachedType(char[][])
30617=LookupEnvironment:createRawType(ReferenceBinding, ReferenceBinding)
30618=LookupEnvironment:getType(char[][])
30619=LookupEnvironment:askForType(char[][])
30620=LookupEnvironment:getPackage0(char[])
30621=LookupEnvironment:getTypeArgumentsFromSignature(SignatureWrapper, TypeVariableBinding[], ReferenceBinding, ReferenceBinding)
30622=LookupEnvironment:completeTypeBindings(CompilationUnitDeclaration, boolean)
30623=LookupEnvironment:getTopLevelPackage(char[])
30624=LookupEnvironment:createWildcard(ReferenceBinding, int, TypeBinding, int)
30625=LookupEnvironment:reset()
30626=LookupEnvironment:cacheBinaryType(IBinaryType)
30627=LookupEnvironment:getTypeFromConstantPoolName(char[], int, int, boolean)
30628=LookupEnvironment:updateCaches(UnresolvedReferenceBinding, ReferenceBinding)
30629=LookupEnvironment:completeTypeBindings(CompilationUnitDeclaration)
30630=LookupEnvironment:createPackage(char[][])
30631=LookupEnvironment:getTypeFromVariantTypeSignature(SignatureWrapper, TypeVariableBinding[], ReferenceBinding, ReferenceBinding, int)
30632=LookupEnvironment:cacheBinaryType(IBinaryType, boolean)
30633=LookupEnvironment:methodVerifier()
30634=LookupEnvironment:computePackageFrom(char[][])
30635=LookupEnvironment:askForType(PackageBinding, char[])
30636=LookupEnvironment:createArrayType(TypeBinding, int)
30637=LookupEnvironment:getTypeFromTypeSignature(SignatureWrapper, TypeVariableBinding[], ReferenceBinding)
30638=LookupEnvironment:createParameterizedType(ReferenceBinding, TypeBinding[], ReferenceBinding)
30639=LookupEnvironment:buildTypeBindings(CompilationUnitDeclaration)
30640=LookupEnvironment:createBinaryTypeFrom(IBinaryType, PackageBinding, boolean)
30641=LookupEnvironment:LookupEnvironment(ITypeRequestor, CompilerOptions, ProblemReporter, INameEnvironment)
30642=LookupEnvironment:getTypeFromSignature(char[], int, int, boolean, TypeBinding)
30643=AbstractComparableTest:buildComparableTestSuite(Class)
30644=AbstractComparableTest:getCompilerOptions()
30645=AbstractComparableTest:AbstractComparableTest(String)
30646=X01:foo()
30647=FormatterBugsTests:testBug027079b()
30648=FormatterBugsTests:testBug471883()
30649=FormatterBugsTests:testBug489797c()
30650=FormatterBugsTests:testBug293300_wksp2_01()
30651=FormatterBugsTests:testBug286601_wksp_03b()
30652=FormatterBugsTests:testBug285565d()
30653=FormatterBugsTests:testBug330313_wksp1_19_njl()
30654=FormatterBugsTests:testBug469438()
30655=FormatterBugsTests:testBug290905e()
30656=FormatterBugsTests:testBug293300_wksp2_05c()
30657=FormatterBugsTests:testBug472815()
30658=FormatterBugsTests:testBug059891_wksp1_02()
30659=FormatterBugsTests:testBug330313_wksp1_04()
30660=FormatterBugsTests:testBug199265c3()
30661=FormatterBugsTests:testBug302552_LW3()
30662=FormatterBugsTests:testBug264112_w24_S2()
30663=FormatterBugsTests:testBug479959()
30664=FormatterBugsTests:testBug284789()
30665=FormatterBugsTests:testBug293300_wksp2_05d_spaces()
30666=FormatterBugsTests:testBug330313_wksp1_06_njl()
30667=FormatterBugsTests:testBug252556a()
30668=FormatterBugsTests:testBug304529b()
30669=FormatterBugsTests:testBug313524_01()
30670=FormatterBugsTests:testBug027079d()
30671=FormatterBugsTests:testBug293300_wkps1_04()
30672=FormatterBugsTests:testBug311578a()
30673=FormatterBugsTests:testBug293300_wksp2_03()
30674=FormatterBugsTests:testBug489797a()
30675=FormatterBugsTests:testBug198074_dup201022()
30676=FormatterBugsTests:testBug475793()
30677=FormatterBugsTests:testBug290905c()
30678=FormatterBugsTests:testBug264112_wksp1_01()
30679=FormatterBugsTests:testBug293300_wksp2_14()
30680=FormatterBugsTests:testBug294500a()
30681=FormatterBugsTests:setUpBracesPreferences(String)
30682=FormatterBugsTests:testBug330313_wksp1_44_njl()
30683=FormatterBugsTests:testBug286601b()
30684=FormatterBugsTests:testBug286668b_40w()
30685=FormatterBugsTests:testBug302552_LW5()
30686=FormatterBugsTests:testBug199265c1()
30687=FormatterBugsTests:testBug297546()
30688=FormatterBugsTests:testBug497245a()
30689=FormatterBugsTests:testBug295175f()
30690=FormatterBugsTests:testBug330313_wksp1_13()
30691=FormatterBugsTests:testBug500135()
30692=FormatterBugsTests:testBug285565b()
30693=FormatterBugsTests:testBug059891_wksp1_11()
30694=FormatterBugsTests:testBug281655()
30695=FormatterBugsTests:testBug311578c()
30696=FormatterBugsTests:testBug199265d2()
30697=FormatterBugsTests:testBug252556()
30698=FormatterBugsTests:testBug313524_03()
30699=FormatterBugsTests:testBug304529d()
30700=FormatterBugsTests:testBug330313_wksp1_14_njl()
30701=FormatterBugsTests:testBug330313_wksp1_23_njl()
30702=FormatterBugsTests:testBug330313_wksp1_36_njl()
30703=FormatterBugsTests:testBug500096b()
30704=FormatterBugsTests:_testBug293300_wksp2_15a()
30705=FormatterBugsTests:testBug293300_wksp2_05()
30706=FormatterBugsTests:testBug330313_wksp1_30_njl()
30707=FormatterBugsTests:testBug460008()
30708=FormatterBugsTests:testBug302123()
30709=FormatterBugsTests:testBug480086()
30710=FormatterBugsTests:testBug293300_wksp1_01()
30711=FormatterBugsTests:testBug330313_regression_187a()
30712=FormatterBugsTests:testBug311617b()
30713=FormatterBugsTests:testBug286601d()
30714=FormatterBugsTests:testBug027079f4()
30715=FormatterBugsTests:testBug309706()
30716=FormatterBugsTests:testBug059891_wksp1_06()
30717=FormatterBugsTests:testBug330313_wksp1_35_njl()
30718=FormatterBugsTests:testBug293240()
30719=FormatterBugsTests:testBug295175d()
30720=FormatterBugsTests:testBug330313_wksp1_28_njl()
30721=FormatterBugsTests:testBug264112_wksp2_01()
30722=FormatterBugsTests:testBug500092()
30723=FormatterBugsTests:testBug472009()
30724=FormatterBugsTests:testBug330313_wksp1_22_njl()
30725=FormatterBugsTests:testBug472205()
30726=FormatterBugsTests:testBug282030b()
30727=FormatterBugsTests:testBug317039_njl()
30728=FormatterBugsTests:testBug311582b()
30729=FormatterBugsTests:testBug027079d2()
30730=FormatterBugsTests:testBug286668c()
30731=FormatterBugsTests:testBug059891_164093_02()
30732=FormatterBugsTests:testBug293300_wksp2_08b()
30733=FormatterBugsTests:testBug286668b_60w()
30734=FormatterBugsTests:testBug293300_wksp2_05b_spaces()
30735=FormatterBugsTests:testBug481221b()
30736=FormatterBugsTests:testBug330313_wksp1_27_njl()
30737=FormatterBugsTests:testBug199265b()
30738=FormatterBugsTests:testBug027079f2()
30739=FormatterBugsTests:testBug059891_wksp1_04()
30740=FormatterBugsTests:testBug330313_wksp1_31_njl()
30741=FormatterBugsTests:testBug302552_LW1()
30742=FormatterBugsTests:testBug198074_c1()
30743=FormatterBugsTests:testBug295175b()
30744=FormatterBugsTests:testBug059891_02b()
30745=FormatterBugsTests:testBug313524_wksp1_11()
30746=FormatterBugsTests:testBug282030d()
30747=FormatterBugsTests:testBug293300_wksp3_01()
30748=FormatterBugsTests:testBug293300_wksp_07()
30749=FormatterBugsTests:testBug313524_01b()
30750=FormatterBugsTests:testBug284789_02a()
30751=FormatterBugsTests:testBug059891_wksp1_09()
30752=FormatterBugsTests:testBug286668c_40w()
30753=FormatterBugsTests:testBug488898()
30754=FormatterBugsTests:testBug027079a1()
30755=FormatterBugsTests:testBug302123b()
30756=FormatterBugsTests:testBug330313_wksp3_X01_njl()
30757=FormatterBugsTests:testBug330313_wksp1_39_njl()
30758=FormatterBugsTests:testBug483922b()
30759=FormatterBugsTests:testBug293300_wksp2_09()
30760=FormatterBugsTests:testBug198074()
30761=FormatterBugsTests:testBug462945()
30762=FormatterBugsTests:testBug286668()
30763=FormatterBugsTests:testBug293300_wksp_06()
30764=FormatterBugsTests:testBug313524_wksp1_03()
30765=FormatterBugsTests:testBug471364()
30766=FormatterBugsTests:testBug311578_320754a()
30767=FormatterBugsTests:testBug320754_01a()
30768=FormatterBugsTests:testBug313524_wksp1_01()
30769=FormatterBugsTests:testBug330313_wksp1_05_njl()
30770=FormatterBugsTests:testBug328240()
30771=FormatterBugsTests:testBug330313_wksp1_21_njl()
30772=FormatterBugsTests:testBug320754_02d()
30773=FormatterBugsTests:testBug330313_b286601_08()
30774=FormatterBugsTests:testBug330313c()
30775=FormatterBugsTests:testBug294618b()
30776=FormatterBugsTests:testBug472962()
30777=FormatterBugsTests:testBug281655e()
30778=FormatterBugsTests:testBug282030f()
30779=FormatterBugsTests:testBug320754_03()
30780=FormatterBugsTests:testBug330313_wksp1_07_njl_bnl()
30781=FormatterBugsTests:testBug330313_wksp1_34_njl()
30782=FormatterBugsTests:testBug328362()
30783=FormatterBugsTests:testBug284789_02c()
30784=FormatterBugsTests:testBug477005()
30785=FormatterBugsTests:testBug286601_massive_02()
30786=FormatterBugsTests:testBug059891_wksp1_07()
30787=FormatterBugsTests:testBug302123d()
30788=FormatterBugsTests:testBug475865()
30789=FormatterBugsTests:testBug313524_164093_02()
30790=FormatterBugsTests:testBug295238()
30791=FormatterBugsTests:testBug320754_01c()
30792=FormatterBugsTests:testBug330313_wksp1_07_njl()
30793=FormatterBugsTests:testBug313524_wksp1_05()
30794=FormatterBugsTests:testBug293300_wksp2_12b()
30795=FormatterBugsTests:testBug330313a()
30796=FormatterBugsTests:testBug474918c()
30797=FormatterBugsTests:testBug330313_b286601_06()
30798=FormatterBugsTests:testBug208541()
30799=FormatterBugsTests:testBug284789_01b()
30800=FormatterBugsTests:testBug198074_c3b()
30801=FormatterBugsTests:testBug330313_wksp1_37_njl()
30802=FormatterBugsTests:testBug480735()
30803=FormatterBugsTests:testBug281655c()
30804=FormatterBugsTests:testBug027079d4()
30805=FormatterBugsTests:testBug282030h1()
30806=FormatterBugsTests:testBug284789_02e()
30807=FormatterBugsTests:testBug330313_wksp1_03_njl()
30808=FormatterBugsTests:testBug293300_wkps1_02()
30809=FormatterBugsTests:testBug330313_wksp1_50_njl()
30810=FormatterBugsTests:testBug475791()
30811=FormatterBugsTests:suite()
30812=FormatterBugsTests:testBug330313_wksp1_33()
30813=FormatterBugsTests:testBug264112_w25_S1()
30814=FormatterBugsTests:testBug464312()
30815=FormatterBugsTests:testBug470506()
30816=FormatterBugsTests:testBug311578d()
30817=FormatterBugsTests:testBug290905a()
30818=FormatterBugsTests:testBug313524_wksp1_07()
30819=FormatterBugsTests:testBug330313_wksp1_51_njl()
30820=FormatterBugsTests:testBug252556d()
30821=FormatterBugsTests:testBug199265_wksp2a()
30822=FormatterBugsTests:testBug332877()
30823=FormatterBugsTests:testBug330313_b286601_04()
30824=FormatterBugsTests:testBug458208c()
30825=FormatterBugsTests:testBug284789_01d()
30826=FormatterBugsTests:testBug330313_wksp1_07_bnl()
30827=FormatterBugsTests:testBug027079a3()
30828=FormatterBugsTests:testBug295238b2()
30829=FormatterBugsTests:testBug477430()
30830=FormatterBugsTests:testBug330313_wksp1_52_njl()
30831=FormatterBugsTests:testBug330313_wksp1_01_njl()
30832=FormatterBugsTests:testBug059891_146175()
30833=FormatterBugsTests:testBug252556f()
30834=FormatterBugsTests:testBug293300_wksp2_05e()
30835=FormatterBugsTests:testBug313524_wksp1_09()
30836=FormatterBugsTests:testBug330313_wksp1_04_njl()
30837=FormatterBugsTests:testBug304529()
30838=FormatterBugsTests:testBug313524_03b()
30839=FormatterBugsTests:testBug293300_wksp2_05_spaces()
30840=FormatterBugsTests:testBug059891_02()
30841=FormatterBugsTests:testBug320754_02b()
30842=FormatterBugsTests:testBug437639()
30843=FormatterBugsTests:testBug282030g2()
30844=FormatterBugsTests:testBug199265_wksp1b()
30845=FormatterBugsTests:testBug298844a()
30846=FormatterBugsTests:testBug330313_wksp1_02_njl()
30847=FormatterBugsTests:testBug293300_wksp2_11()
30848=FormatterBugsTests:testBug284789_01f()
30849=FormatterBugsTests:testBug059891_wksp1_01()
30850=FormatterBugsTests:testBug330313_wksp1_33_njl()
30851=FormatterBugsTests:testBug302552_LW2()
30852=FormatterBugsTests:testBug330313_wksp1_46_njl()
30853=FormatterBugsTests:testBug264112_w24_S1()
30854=FormatterBugsTests:testBug330313_wksp1_20_njl()
30855=FormatterBugsTests:testBug293300_wkps1_05_JoinLinesComments_BracesNextLine()
30856=FormatterBugsTests:testBug497245b()
30857=FormatterBugsTests:testBug059891_wksp1_12()
30858=FormatterBugsTests:testBug285565c()
30859=FormatterBugsTests:testBug330313_wksp1_14()
30860=FormatterBugsTests:testBug203588()
30861=FormatterBugsTests:testBug304529e()
30862=FormatterBugsTests:testBug027079c()
30863=FormatterBugsTests:testBug293300_wkps1_05()
30864=FormatterBugsTests:testBug286668_40w()
30865=FormatterBugsTests:testBug293300_wksp2_02()
30866=FormatterBugsTests:testBug489797b()
30867=FormatterBugsTests:testBug285565e()
30868=FormatterBugsTests:testBug290905d()
30869=FormatterBugsTests:testBug199265a()
30870=FormatterBugsTests:testBug293300_wksp2_13()
30871=FormatterBugsTests:testBug293300_wksp2_05b()
30872=FormatterBugsTests:testBug294500b()
30873=FormatterBugsTests:testBug302552_LW4()
30874=FormatterBugsTests:testBug199265c2()
30875=FormatterBugsTests:testBug295175e()
30876=FormatterBugsTests:testBug435241()
30877=FormatterBugsTests:testBug285565a()
30878=FormatterBugsTests:testBug330313_wksp1_12()
30879=FormatterBugsTests:testBug059891_wksp1_10()
30880=FormatterBugsTests:testBug330313_wksp1_12_njl()
30881=FormatterBugsTests:testBug199265d3()
30882=FormatterBugsTests:testBug311578b()
30883=FormatterBugsTests:testBug475791b()
30884=FormatterBugsTests:testBug059891_203588()
30885=FormatterBugsTests:testBug313524_02()
30886=FormatterBugsTests:testBug304529c()
30887=FormatterBugsTests:testBug252556b()
30888=FormatterBugsTests:testBug293300_wksp2_05c_spaces()
30889=FormatterBugsTests:testBug027079e()
30890=FormatterBugsTests:testBug293300_wkps1_03()
30891=FormatterBugsTests:testBug330313_wksp1_41_njl()
30892=FormatterBugsTests:testBug293300_wksp2_04()
30893=FormatterBugsTests:testBug465669()
30894=FormatterBugsTests:testBug470977()
30895=FormatterBugsTests:testBug330313_wksp1_08_njl()
30896=FormatterBugsTests:testBug330313_wksp1_38_njl()
30897=FormatterBugsTests:testBug494831()
30898=FormatterBugsTests:testBug330313_wksp1_09_njl()
30899=FormatterBugsTests:testBug471202()
30900=FormatterBugsTests:testBug290905b()
30901=FormatterBugsTests:testBug264112_wksp1_02()
30902=FormatterBugsTests:testBug356851()
30903=FormatterBugsTests:testBug298243()
30904=FormatterBugsTests:testBug059891_wksp1_05()
30905=FormatterBugsTests:testBug293300_wksp2_05e_spaces()
30906=FormatterBugsTests:testBug295175c()
30907=FormatterBugsTests:testBug286668_60w()
30908=FormatterBugsTests:testBug264112_wksp2_02()
30909=FormatterBugsTests:testBug313524_wksp1_10()
30910=FormatterBugsTests:testBug198074_c1b()
30911=FormatterBugsTests:testBug330313_wksp1_16_njl()
30912=FormatterBugsTests:FormatterBugsTests(String)
30913=FormatterBugsTests:testBug282030a()
30914=FormatterBugsTests:testBug297225()
30915=FormatterBugsTests:testBug311582a()
30916=FormatterBugsTests:testBug330313_wksp1_07()
30917=FormatterBugsTests:testBug286668b()
30918=FormatterBugsTests:testBug294631()
30919=FormatterBugsTests:testBug293300_wksp2_08c()
30920=FormatterBugsTests:testBug472815b()
30921=FormatterBugsTests:testBug330313_wksp1_29_njl()
30922=FormatterBugsTests:testBug330313_regression_187b()
30923=FormatterBugsTests:testBug330313_wksp2_01()
30924=FormatterBugsTests:testBug481221a()
30925=FormatterBugsTests:testBug286668c_60w()
30926=FormatterBugsTests:testBug472413()
30927=FormatterBugsTests:testBug330313_wksp1_17_njl()
30928=FormatterBugsTests:testBug313524_203588()
30929=FormatterBugsTests:testBug281655a()
30930=FormatterBugsTests:testBug286601c()
30931=FormatterBugsTests:testBug059891_01b()
30932=FormatterBugsTests:testBug059891_wksp1_03()
30933=FormatterBugsTests:testBug471090()
30934=FormatterBugsTests:testBug302552_LW0()
30935=FormatterBugsTests:testBug295175a()
30936=FormatterBugsTests:testBug293496()
30937=FormatterBugsTests:testBug330313_wksp1_16()
30938=FormatterBugsTests:testBug330313_wksp1_32_njl()
30939=FormatterBugsTests:testBug313524_wksp1_12()
30940=FormatterBugsTests:testBug286601()
30941=FormatterBugsTests:testBug500093()
30942=FormatterBugsTests:testBug471780()
30943=FormatterBugsTests:testBug282030c()
30944=FormatterBugsTests:testBug264112_w26_S2()
30945=FormatterBugsTests:testBug330313_wksp1_24_njl()
30946=FormatterBugsTests:testBug480074()
30947=FormatterBugsTests:testBug027079a()
30948=FormatterBugsTests:testBug500096a()
30949=FormatterBugsTests:testBug293300_wksp2_08()
30950=FormatterBugsTests:testBug330313_wksp1_25_njl()
30951=FormatterBugsTests:testBug332818()
30952=FormatterBugsTests:testBug059891_164093_01()
30953=FormatterBugsTests:testBug290905f()
30954=FormatterBugsTests:testBug027079f3()
30955=FormatterBugsTests:testBug330313_wksp1_13_njl()
30956=FormatterBugsTests:testBug313524_wksp1_02()
30957=FormatterBugsTests:testBug475746()
30958=FormatterBugsTests:testBug330313_wksp1_26_njl()
30959=FormatterBugsTests:testBug320754_02c()
30960=FormatterBugsTests:testBug471145()
30961=FormatterBugsTests:testBug474918b()
30962=FormatterBugsTests:testBug294618a()
30963=FormatterBugsTests:testBug330313_wksp1_40_njl()
30964=FormatterBugsTests:testBug309706b()
30965=FormatterBugsTests:testBug330313d()
30966=FormatterBugsTests:testBug474629()
30967=FormatterBugsTests:testBug298844b()
30968=FormatterBugsTests:testBug282030e()
30969=FormatterBugsTests:testBug281655d()
30970=FormatterBugsTests:testBug492735()
30971=FormatterBugsTests:testBug284789_02b()
30972=FormatterBugsTests:testBug487375()
30973=FormatterBugsTests:testBug059891_03b()
30974=FormatterBugsTests:testBug286601_massive_01()
30975=FormatterBugsTests:testBug330313_wksp1_45_njl()
30976=FormatterBugsTests:testBug198074_c3()
30977=FormatterBugsTests:testBug198074b()
30978=FormatterBugsTests:testBug500443()
30979=FormatterBugsTests:testBug330313_wksp1_18_njl()
30980=FormatterBugsTests:testBug027079a2()
30981=FormatterBugsTests:testBug302123c()
30982=FormatterBugsTests:testBug483922a()
30983=FormatterBugsTests:testBug320754_01b()
30984=FormatterBugsTests:testBug264112_w26_S1()
30985=FormatterBugsTests:testBug311578_320754b()
30986=FormatterBugsTests:testBug479898()
30987=FormatterBugsTests:testBug252556_wksp3a()
30988=FormatterBugsTests:testBug407629()
30989=FormatterBugsTests:testBug311617()
30990=FormatterBugsTests:testBug330313_b286601_07()
30991=FormatterBugsTests:testBug330313b()
30992=FormatterBugsTests:testBug027079c2()
30993=FormatterBugsTests:testBug284789_01a()
30994=FormatterBugsTests:testBug458208b()
30995=FormatterBugsTests:testBug320754_00()
30996=FormatterBugsTests:testBug281655b()
30997=FormatterBugsTests:testBug027079d3()
30998=FormatterBugsTests:testBug284789_02d()
30999=FormatterBugsTests:testBug286601_massive_03()
31000=FormatterBugsTests:testBug059891_wksp1_08()
31001=FormatterBugsTests:testBug313524_164093_01()
31002=FormatterBugsTests:testBug330313_wksp1_15_njl()
31003=FormatterBugsTests:testBug330313_wksp1_42_njl()
31004=FormatterBugsTests:testBug330313()
31005=FormatterBugsTests:testBug313524_wksp1_04()
31006=FormatterBugsTests:testBug252556c()
31007=FormatterBugsTests:testBug330313_wksp1_43_njl()
31008=FormatterBugsTests:testBug027079f()
31009=FormatterBugsTests:testBug330313_wksp1_10_njl()
31010=FormatterBugsTests:testBug199265_wksp3a()
31011=FormatterBugsTests:testBug293300_wksp2_12a()
31012=FormatterBugsTests:testBug059891_03()
31013=FormatterBugsTests:testBug330313_b286601_05()
31014=FormatterBugsTests:testBug458208d()
31015=FormatterBugsTests:testBug284789_01c()
31016=FormatterBugsTests:testBug330313_wksp1_53_njl_bnl()
31017=FormatterBugsTests:testBug474916()
31018=FormatterBugsTests:testBug485163()
31019=FormatterBugsTests:testBug199265d1()
31020=FormatterBugsTests:testBug282030h2()
31021=FormatterBugsTests:testBug295238b1()
31022=FormatterBugsTests:testBug198074_dup213700()
31023=FormatterBugsTests:testBug283467()
31024=FormatterBugsTests:testBug284789_02f()
31025=FormatterBugsTests:testBug282030()
31026=FormatterBugsTests:testBug458208()
31027=FormatterBugsTests:testBug311578e()
31028=FormatterBugsTests:testBug330313_wksp1_11_njl()
31029=FormatterBugsTests:testBug313524_146175()
31030=FormatterBugsTests:testBug313524_wksp1_06()
31031=FormatterBugsTests:testBug252556e()
31032=FormatterBugsTests:testBug282988()
31033=FormatterBugsTests:testBug198074_comments()
31034=FormatterBugsTests:testBug467618()
31035=FormatterBugsTests:setUpSuite()
31036=FormatterBugsTests:testBug059891_01()
31037=FormatterBugsTests:testBug320754_02a()
31038=FormatterBugsTests:testBug313524_02b()
31039=FormatterBugsTests:testBug282030g1()
31040=FormatterBugsTests:testBug330313_wksp1_47_njl()
31041=FormatterBugsTests:testBug199265_wksp1a()
31042=FormatterBugsTests:testBug281655f()
31043=FormatterBugsTests:testBug293300_wksp2_10()
31044=FormatterBugsTests:testBug474918()
31045=FormatterBugsTests:testBug284789_01e()
31046=FormatterBugsTests:testBug027079a4()
31047=FormatterBugsTests:testBug330313_wksp1_48_njl()
31048=FormatterBugsTests:testBug485276()
31049=FormatterBugsTests:testBug293300_wksp2_15b()
31050=FormatterBugsTests:testBug295238b3()
31051=FormatterBugsTests:testBug264112_w25_S2()
31052=FormatterBugsTests:testBug330313_wksp1_49_njl()
31053=FormatterBugsTests:testBug293300_wksp2_05d()
31054=FormatterBugsTests:testBug313524_wksp1_08()
31055=FormatterBugsTests:testBug330313_wksp1_45b_njl()
31056=ExpressionMethodReference:setExpression(Expression)
31057=ExpressionMethodReference:internalGetChildListProperty(ChildListPropertyDescriptor)
31058=ExpressionMethodReference:getNodeType0()
31059=ExpressionMethodReference:treeSize()
31060=ExpressionMethodReference:getExpression()
31061=ExpressionMethodReference:setName(SimpleName)
31062=ExpressionMethodReference:internalTypeArgumentsProperty()
31063=ExpressionMethodReference:propertyDescriptors(int)
31064=ExpressionMethodReference:clone0(AST)
31065=ExpressionMethodReference:accept0(ASTVisitor)
31066=ExpressionMethodReference:memSize()
31067=ExpressionMethodReference:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
31068=ExpressionMethodReference:typeArguments()
31069=ExpressionMethodReference:internalStructuralPropertiesForType(int)
31070=ExpressionMethodReference:subtreeMatch0(ASTMatcher, Object)
31071=ExpressionMethodReference:ExpressionMethodReference(AST)
31072=ExpressionMethodReference:getName()
31073=MirrorTestAnnotationProcessor:testTypeDecl(TypeDeclaration)
31074=MirrorTestAnnotationProcessor:testPackageImpl()
31075=MirrorTestAnnotationProcessor:process()
31076=MirrorTestAnnotationProcessor:MirrorTestAnnotationProcessor(AnnotationProcessorEnvironment)
31077=MirrorTestAnnotationProcessor:testDeclarationsUtil(TypeDeclaration)
31078=ICompilationUnit:getContents()
31079=ICompilationUnit:getPackageName()
31080=ICompilationUnit:getMainTypeName()
31081=ICompilationUnit:ignoreOptionalProblems()
31082=SimpleType:propertyDescriptors(int)
31083=SimpleType:setName(Name)
31084=SimpleType:memSize()
31085=SimpleType:internalAnnotationsProperty()
31086=SimpleType:getNodeType0()
31087=SimpleType:accept0(ASTVisitor)
31088=SimpleType:clone0(AST)
31089=SimpleType:internalGetChildListProperty(ChildListPropertyDescriptor)
31090=SimpleType:getName()
31091=SimpleType:internalStructuralPropertiesForType(int)
31092=SimpleType:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
31093=SimpleType:subtreeMatch0(ASTMatcher, Object)
31094=SimpleType:SimpleType(AST)
31095=SimpleType:treeSize()
31096=B:m(AA)
31097=X06:foo()
31098=Test:foo()
31099=Test:doSomeStuff()
31100=G:staticMethod()
31101=G:method2_String()
31102=G:method_T1(String)
31103=Example:bar()
31104=Example:foo(int, int)
31105=X07:test()
31106=JavaCorePreferenceModifyListener:preApply(IEclipsePreferences)
31107=JavaCorePreferenceModifyListener:cleanJavaCore(Preferences)
31108=JavaCorePreferenceModifyListener:isJavaProjectAccessible(String)
31109=AbstractIndexer:AbstractIndexer(SearchDocument)
31110=AbstractIndexer:indexResolvedDocument()
31111=AbstractIndexer:addEnumDeclaration(int, char[], char[], char[][], char[], char[][], boolean)
31112=AbstractIndexer:addMethodReference(char[], int)
31113=AbstractIndexer:addConstructorReference(char[], int)
31114=AbstractIndexer:addIndexEntry(char[], char[])
31115=AbstractIndexer:addClassDeclaration(int, char[], char[], char[][], char[], char[][], char[][], boolean)
31116=AbstractIndexer:addFieldDeclaration(char[], char[])
31117=AbstractIndexer:addAnnotationTypeDeclaration(int, char[], char[], char[][], boolean)
31118=AbstractIndexer:addTypeReference(char[])
31119=AbstractIndexer:erasure(char[])
31120=AbstractIndexer:addNameReference(char[])
31121=AbstractIndexer:addDefaultConstructorDeclaration(char[], char[], int, int)
31122=AbstractIndexer:addInterfaceDeclaration(int, char[], char[], char[][], char[][], char[][], boolean)
31123=AbstractIndexer:addMethodDeclaration(char[], char[], char[], int, char[], char[][], char[][], char[], int, char[], int, char[][], int)
31124=AbstractIndexer:addFieldReference(char[])
31125=AbstractIndexer:addTypeDeclaration(int, char[], char[], char[][], boolean)
31126=AbstractIndexer:addMethodDeclaration(char[], char[][], char[], char[][])
31127=AbstractIndexer:addAnnotationTypeReference(char[])
31128=AbstractIndexer:indexDocument()
31129=AbstractIndexer:addConstructorDeclaration(char[], int, char[], char[][], char[][], int, char[], int, char[][], int)
31130=X04:foo(int, int)
31131=X04:foo2()
31132=A:foo()
31133=AnnotationValueProcessor:AnnotationValueProcessor(AnnotationProcessorEnvironment)
31134=AnnotationValueProcessor:assertAnnotation(Map<String, String>, AnnotationMirror)
31135=AnnotationValueProcessor:process()
31136=Foo:foo()
31137=B:foo()
31138=X:bar()
31139=InterfaceType:getDeclaration()
31140=WorkingCopyOwnerTests:testHierarchy()
31141=WorkingCopyOwnerTests:testParseCompilationUnit1()
31142=WorkingCopyOwnerTests:testDiscardWorkingCopy1()
31143=WorkingCopyOwnerTests:testDeltaDiscardPrimaryWorkingCopy1()
31144=WorkingCopyOwnerTests:tearDown()
31145=WorkingCopyOwnerTests:testDeltaDiscardPrimaryWorkingCopy3()
31146=WorkingCopyOwnerTests:testDiscardWorkingCopy3()
31147=WorkingCopyOwnerTests:testGetPrimary2()
31148=WorkingCopyOwnerTests:assertProblems(String, String, String, WorkingCopyOwner)
31149=WorkingCopyOwnerTests:testBecomeWorkingCopy2()
31150=WorkingCopyOwnerTests:testDiscardWorkingCopy5()
31151=WorkingCopyOwnerTests:testNewWorkingCopy01()
31152=WorkingCopyOwnerTests:testGetPrimaryElement4()
31153=WorkingCopyOwnerTests:testSearch3()
31154=WorkingCopyOwnerTests:testCommitPrimaryWorkingCopy()
31155=WorkingCopyOwnerTests:tearDownSuite()
31156=WorkingCopyOwnerTests:testBecomeWorkingCopy4()
31157=WorkingCopyOwnerTests:testNewWorkingCopy03()
31158=WorkingCopyOwnerTests:testGetPrimaryElement2()
31159=WorkingCopyOwnerTests:testSearch1()
31160=WorkingCopyOwnerTests:testNewWorkingCopy06()
31161=WorkingCopyOwnerTests:testFindType2()
31162=WorkingCopyOwnerTests:testGetWorkingCopy1()
31163=WorkingCopyOwnerTests:testNewWorkingCopy08()
31164=WorkingCopyOwnerTests:testDeltaCreateNonPrimaryWorkingCopy()
31165=WorkingCopyOwnerTests:testDeltaBecomeWorkingCopy2()
31166=WorkingCopyOwnerTests:testGetPrimary1()
31167=WorkingCopyOwnerTests:testGetOwner1()
31168=WorkingCopyOwnerTests:testDeltaCommitPrimaryWorkingCopy1()
31169=WorkingCopyOwnerTests:testGetWorkingCopies()
31170=WorkingCopyOwnerTests:testDeltaDiscardPrimaryWorkingCopy2()
31171=WorkingCopyOwnerTests:testDeltaCommitPrimaryWorkingCopy2()
31172=WorkingCopyOwnerTests:testParseCompilationUnit2()
31173=WorkingCopyOwnerTests:testDiscardWorkingCopy2()
31174=WorkingCopyOwnerTests:testBecomeWorkingCopy1()
31175=WorkingCopyOwnerTests:testDeltaDiscardPrimaryWorkingCopy4()
31176=WorkingCopyOwnerTests:setUpSuite()
31177=WorkingCopyOwnerTests:testBecomeWorkingCopy3()
31178=WorkingCopyOwnerTests:testDiscardWorkingCopy4()
31179=WorkingCopyOwnerTests:testMoveWorkingCopy()
31180=WorkingCopyOwnerTests:testNewWorkingCopy02()
31181=WorkingCopyOwnerTests:testGetPrimaryElement3()
31182=WorkingCopyOwnerTests:testSearch4()
31183=WorkingCopyOwnerTests:testGetCorrespondingResource()
31184=WorkingCopyOwnerTests:testNewWorkingCopy04()
31185=WorkingCopyOwnerTests:testGetPrimaryElement1()
31186=WorkingCopyOwnerTests:testSearch2()
31187=WorkingCopyOwnerTests:assertTypeBindingsEqual(String, String, ITypeBinding[])
31188=WorkingCopyOwnerTests:testFindType1()
31189=WorkingCopyOwnerTests:testNewWorkingCopy05()
31190=WorkingCopyOwnerTests:WorkingCopyOwnerTests(String)
31191=WorkingCopyOwnerTests:testGetOwner2()
31192=WorkingCopyOwnerTests:testGetWorkingCopy2()
31193=WorkingCopyOwnerTests:testNewWorkingCopy07()
31194=WorkingCopyOwnerTests:suite()
31195=WorkingCopyOwnerTests:testDeltaBecomeWorkingCopy1()
31196=WorkingCopyOwnerTests:TestWorkingCopyOwner:toString()
31197=WorkingCopyOwnerTests:testNewWorkingCopy09()
31198=WorkingCopyOwnerTests:testDeltaDiscardNonPrimaryWorkingCopy()
31199=WorkingCopyOwnerTests:testParseCompilationUnit3()
31200=Test:main(String[])
31201=CompletionOnJavadocSingleTypeReference:addCompletionFlags(int)
31202=CompletionOnJavadocSingleTypeReference:CompletionOnJavadocSingleTypeReference(char[], long, int, int)
31203=CompletionOnJavadocSingleTypeReference:CompletionOnJavadocSingleTypeReference(JavadocSingleTypeReference)
31204=CompletionOnJavadocSingleTypeReference:getCompletionFlags()
31205=CompletionOnJavadocSingleTypeReference:completeFormalReference()
31206=CompletionOnJavadocSingleTypeReference:completeInText()
31207=CompletionOnJavadocSingleTypeReference:completeBaseTypes()
31208=CompletionOnJavadocSingleTypeReference:printExpression(int, StringBuffer)
31209=CompletionOnJavadocSingleTypeReference:completeAnException()
31210=firstClass:myMethod()
31211=X:foo(String)
31212=X:X()
31213=X:main(String[])
31214=CodeFormatter:format(String, int, int[], String)
31215=CodeFormatter:CodeFormatter(Map)
31216=QualifiedAllocationExpression:QualifiedAllocationExpression()
31217=QualifiedAllocationExpression:manageEnclosingInstanceAccessIfNecessary(BlockScope, FlowInfo)
31218=QualifiedAllocationExpression:QualifiedAllocationExpression(TypeDeclaration)
31219=QualifiedAllocationExpression:enclosingInstance()
31220=QualifiedAllocationExpression:printExpression(int, StringBuffer)
31221=QualifiedAllocationExpression:isSuperAccess()
31222=QualifiedAllocationExpression:resolveTypeForQualifiedAllocationExpression(BlockScope)
31223=QualifiedAllocationExpression:resolveType(BlockScope)
31224=QualifiedAllocationExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
31225=QualifiedAllocationExpression:traverse(ASTVisitor, BlockScope)
31226=QualifiedAllocationExpression:generateCode(BlockScope, CodeStream, boolean)
31227=Test:foo(int)
31228=Example:foo()
31229=TestCollector:collectTests()
31230=TypeAnnotationsConverterTest:test0010()
31231=TypeAnnotationsConverterTest:test0008()
31232=TypeAnnotationsConverterTest:suite()
31233=TypeAnnotationsConverterTest:test0004()
31234=TypeAnnotationsConverterTest:test0006()
31235=TypeAnnotationsConverterTest:test0011()
31236=TypeAnnotationsConverterTest:test0002()
31237=TypeAnnotationsConverterTest:TypeAnnotationsConverterTest(String)
31238=TypeAnnotationsConverterTest:setUpSuite()
31239=TypeAnnotationsConverterTest:test0009()
31240=TypeAnnotationsConverterTest:test0005()
31241=TypeAnnotationsConverterTest:test0007()
31242=TypeAnnotationsConverterTest:tearDown()
31243=TypeAnnotationsConverterTest:test0001()
31244=TypeAnnotationsConverterTest:test0012()
31245=TypeAnnotationsConverterTest:test0003()
31246=ClasspathJar:normalizedPath()
31247=ClasspathJar:reset()
31248=ClasspathJar:hasAnnotationFileFor(String)
31249=ClasspathJar:findClass(char[], String, String, boolean)
31250=ClasspathJar:isPackage(String)
31251=ClasspathJar:findTypeNames(String)
31252=ClasspathJar:initialize()
31253=ClasspathJar:toString()
31254=ClasspathJar:getMode()
31255=ClasspathJar:fetchLinkedJars(FileSystem.ClasspathSectionProblemReporter)
31256=ClasspathJar:findClass(char[], String, String)
31257=ClasspathJar:ClasspathJar(File, boolean, AccessRuleSet, String)
31258=ClasspathJar:getPath()
31259=LocalSelectionTransfer:getInstance()
31260=LocalSelectionTransfer:nativeToJava(TransferData)
31261=LocalSelectionTransfer:getTypeNames()
31262=LocalSelectionTransfer:getSelection()
31263=LocalSelectionTransfer:setSelection(ISelection)
31264=LocalSelectionTransfer:getTypeIds()
31265=LocalSelectionTransfer:isInvalidNativeType(Object)
31266=LocalSelectionTransfer:LocalSelectionTransfer()
31267=LocalSelectionTransfer:setTime(int)
31268=LocalSelectionTransfer:javaToNative(Object, TransferData)
31269=LocalSelectionTransfer:getTime()
31270=JavaDocTestCase:test60453_2()
31271=JavaDocTestCase:testSingleLineCommentTabs2()
31272=JavaDocTestCase:testTagWordbreaks1()
31273=JavaDocTestCase:testMultilineInlineTag2()
31274=JavaDocTestCase:testMultiLineCommentCodeSnippet3()
31275=JavaDocTestCase:suite()
31276=JavaDocTestCase:testMultiLineCommentCodeSnippet5()
31277=JavaDocTestCase:testMultiLineCommentBlankLineBeforeJavadoctags7()
31278=JavaDocTestCase:test197169()
31279=JavaDocTestCase:test60453()
31280=JavaDocTestCase:testMultiLineCommentBlankLineAfterPre1()
31281=JavaDocTestCase:testMultiLineCommentIndentSpaces1()
31282=JavaDocTestCase:testMultiLineComment()
31283=JavaDocTestCase:testLineBreaksBetweenEmptyJavaDocTags2()
31284=JavaDocTestCase:testMultiLineCommentCodeSnippet1()
31285=JavaDocTestCase:testMultiLineCommentLineBreakBeforeImmutableRegions1()
31286=JavaDocTestCase:getCommentKind()
31287=JavaDocTestCase:testMultiLineCommentIndentSpaces3()
31288=JavaDocTestCase:testSingleLineCommentSpace3()
31289=JavaDocTestCase:test109636_4()
31290=JavaDocTestCase:testNoFormat1()
31291=JavaDocTestCase:testNoExtraNewlineWithPre2()
31292=JavaDocTestCase:testSingleLineCommentSpace1()
31293=JavaDocTestCase:test109605()
31294=JavaDocTestCase:test109636_2()
31295=JavaDocTestCase:testMultilineTagWordbreaks1()
31296=JavaDocTestCase:test198153()
31297=JavaDocTestCase:testMultiLineCommentBlankLineBeforeJavadoctags4()
31298=JavaDocTestCase:testInlineTag2()
31299=JavaDocTestCase:testMultiLineCommentBlankLineBeforeJavadoctags2()
31300=JavaDocTestCase:testSingleLineComment3()
31301=JavaDocTestCase:testMultiLineComment2()
31302=JavaDocTestCase:testMultiLineCommentCodeSnippet4()
31303=JavaDocTestCase:testMultiLineCommentBlankLineBeforeJavadoctags8()
31304=JavaDocTestCase:testSingleLineComment1()
31305=JavaDocTestCase:testMultiLineCommentIndentTabs1()
31306=JavaDocTestCase:testMultiLineCommentCodeSnippet6()
31307=JavaDocTestCase:testNoChange1()
31308=JavaDocTestCase:testMultiLineCommentBlankLineBeforeJavadoctags6()
31309=JavaDocTestCase:JavaDocTestCase(String)
31310=JavaDocTestCase:testMultilineInlineTag1()
31311=JavaDocTestCase:test75460()
31312=JavaDocTestCase:testMultiLineCommentLineBreakBeforeImmutableRegions3()
31313=JavaDocTestCase:testMultiLineCommentCodeSnippet2()
31314=JavaDocTestCase:testNoFormat2()
31315=JavaDocTestCase:testMultiLineCommentIndentSpaces2()
31316=JavaDocTestCase:test109636()
31317=JavaDocTestCase:testSingleLineCommentTabs1()
31318=JavaDocTestCase:testSingleLineCommentSpace4()
31319=JavaDocTestCase:test109636_3()
31320=JavaDocTestCase:testMultiLineCommentLineBreakBeforeImmutableRegions2()
31321=JavaDocTestCase:testMultiLineCommentIndentSpaces4()
31322=JavaDocTestCase:testLineBreaksBetweenEmptyJavaDocTags1()
31323=JavaDocTestCase:testMultiLineCommentBlankLineBeforeJavadoctags1()
31324=JavaDocTestCase:testSingleLineCommentSpace2()
31325=JavaDocTestCase:testMultilineTagWordbreaks2()
31326=JavaDocTestCase:testMultiLineCommentCodeSnippetHtmlEntities1()
31327=JavaDocTestCase:testNoExtraNewlineWithPre1()
31328=JavaDocTestCase:testSingleLineComment4()
31329=JavaDocTestCase:test152850()
31330=JavaDocTestCase:testMultiLineCommentBreak1()
31331=JavaDocTestCase:testBug228652()
31332=JavaDocTestCase:testMultiLineCommentBlankLineBeforeJavadoctags5()
31333=JavaDocTestCase:testInlineTag1()
31334=JavaDocTestCase:testSingleLineComment2()
31335=JavaDocTestCase:testTagWordbreaks2()
31336=JavaDocTestCase:testMultiLineCommentBlankLineBeforeJavadoctags3()
31337=FlowContext:recordBreakFrom(FlowInfo)
31338=FlowContext:isSubRoutine()
31339=FlowContext:continueLabel()
31340=FlowContext:removeFinalAssignmentIfAny(Reference)
31341=FlowContext:recordContinueFrom(FlowInfo)
31342=FlowContext:recordReturnFrom(FlowInfo)
31343=FlowContext:individualToString()
31344=FlowContext:getTargetContextForDefaultBreak()
31345=FlowContext:breakLabel()
31346=FlowContext:getTargetContextForBreakLabel(char[])
31347=FlowContext:checkExceptionHandlers(TypeBinding, ASTNode, FlowInfo, BlockScope)
31348=FlowContext:getTargetContextForContinueLabel(char[])
31349=FlowContext:toString()
31350=FlowContext:isContinuable()
31351=FlowContext:checkExceptionHandlers(TypeBinding[], ASTNode, FlowInfo, BlockScope)
31352=FlowContext:FlowContext(FlowContext, ASTNode)
31353=FlowContext:initsOnReturn()
31354=FlowContext:isBreakable()
31355=FlowContext:getTargetContextForDefaultContinue()
31356=FlowContext:recordFinalAssignment(VariableBinding, Reference)
31357=FlowContext:labelName()
31358=FlowContext:isNonReturningContext()
31359=FlowContext:recordSettingFinal(VariableBinding, Reference, FlowInfo)
31360=FlowContext:initsOnBreak()
31361=FlowContext:subRoutine()
31362=A:mdd(int)
31363=X08:test()
31364=RunConverterTests:RunConverterTests(String)
31365=RunConverterTests:tearDown()
31366=RunConverterTests:suite()
31367=RunConverterTests:getAllTestClasses()
31368=SourceType:equals(Object)
31369=SourceType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, ICompletionRequestor, WorkingCopyOwner)
31370=SourceType:createType(String, IJavaElement, boolean, IProgressMonitor)
31371=SourceType:isEnum()
31372=SourceType:newSupertypeHierarchy(ICompilationUnit[], IProgressMonitor)
31373=SourceType:getOccurrenceCountSignature()
31374=SourceType:newTypeHierarchy(IJavaProject, WorkingCopyOwner, IProgressMonitor)
31375=SourceType:getFullyQualifiedName(char)
31376=SourceType:isClass()
31377=SourceType:getFullyQualifiedParameterizedName()
31378=SourceType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, CompletionRequestor, WorkingCopyOwner, IProgressMonitor)
31379=SourceType:getPrimaryElement(boolean)
31380=SourceType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, CompletionRequestor, WorkingCopyOwner)
31381=SourceType:newTypeHierarchy(IProgressMonitor)
31382=SourceType:SourceType(JavaElement, String)
31383=SourceType:getInitializers()
31384=SourceType:getTypeParameter(String)
31385=SourceType:loadTypeHierachy(InputStream, IProgressMonitor)
31386=SourceType:isInterface()
31387=SourceType:closing(Object)
31388=SourceType:getMethod(String, String[])
31389=SourceType:getFullyQualifiedName()
31390=SourceType:isAnnotation()
31391=SourceType:getTypeParameters()
31392=SourceType:getTypeQualifiedName()
31393=SourceType:loadTypeHierachy(InputStream, WorkingCopyOwner, IProgressMonitor)
31394=SourceType:getSuperclassName()
31395=SourceType:getSuperclassTypeSignature()
31396=SourceType:getElementType()
31397=SourceType:toStringInfo(int, StringBuffer, Object, boolean)
31398=SourceType:getKey()
31399=SourceType:isMember()
31400=SourceType:createMethod(String, IJavaElement, boolean, IProgressMonitor)
31401=SourceType:getHandleFromMemento(String, MementoTokenizer, WorkingCopyOwner)
31402=SourceType:getSuperInterfaceTypeSignatures()
31403=SourceType:newSupertypeHierarchy(WorkingCopyOwner, IProgressMonitor)
31404=SourceType:newTypeHierarchy(ICompilationUnit[], IProgressMonitor)
31405=SourceType:createInitializer(String, IJavaElement, IProgressMonitor)
31406=SourceType:newSupertypeHierarchy(IProgressMonitor)
31407=SourceType:getSuperInterfaceNames()
31408=SourceType:getInitializer(int)
31409=SourceType:newSupertypeHierarchy(IWorkingCopy[], IProgressMonitor)
31410=SourceType:getDeclaringType()
31411=SourceType:newTypeHierarchy(IJavaProject, IProgressMonitor)
31412=SourceType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, CompletionRequestor)
31413=SourceType:getMethods()
31414=SourceType:getAnnotations()
31415=SourceType:getTypes()
31416=SourceType:getTypeQualifiedName(char)
31417=SourceType:getTypeParameterSignatures()
31418=SourceType:newTypeHierarchy(WorkingCopyOwner, IProgressMonitor)
31419=SourceType:resolved(Binding)
31420=SourceType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, CompletionRequestor, IProgressMonitor)
31421=SourceType:getFields()
31422=SourceType:findMethods(IMethod)
31423=SourceType:isResolved()
31424=SourceType:isAnonymous()
31425=SourceType:isLocal()
31426=SourceType:getPackageFragment()
31427=SourceType:getType(String)
31428=SourceType:getChildrenForCategory(String)
31429=SourceType:newTypeHierarchy(IWorkingCopy[], IProgressMonitor)
31430=SourceType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, ICompletionRequestor)
31431=SourceType:isLambda()
31432=SourceType:getField(String)
31433=SourceType:createField(String, IJavaElement, boolean, IProgressMonitor)
31434=E:EInner:inner(int)
31435=E:foo1(int)
31436=E:foo1()
31437=A:foo()
31438=BreakStatement:accept0(ASTVisitor)
31439=BreakStatement:setLabel(SimpleName)
31440=BreakStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
31441=BreakStatement:getLabel()
31442=BreakStatement:internalStructuralPropertiesForType(int)
31443=BreakStatement:BreakStatement(AST)
31444=BreakStatement:subtreeMatch0(ASTMatcher, Object)
31445=BreakStatement:treeSize()
31446=BreakStatement:clone0(AST)
31447=BreakStatement:propertyDescriptors(int)
31448=BreakStatement:getNodeType0()
31449=BreakStatement:memSize()
31450=Test:foo(Object)
31451=Test:foo(String[])
31452=Test:bar()
31453=VerificationTypeInfo:hashCode()
31454=VerificationTypeInfo:toString()
31455=VerificationTypeInfo:readableName()
31456=VerificationTypeInfo:VerificationTypeInfo(int, int, char[])
31457=VerificationTypeInfo:duplicate()
31458=VerificationTypeInfo:replaceWithElementType()
31459=VerificationTypeInfo:setBinding(TypeBinding)
31460=VerificationTypeInfo:VerificationTypeInfo(int, TypeBinding)
31461=VerificationTypeInfo:equals(Object)
31462=VerificationTypeInfo:VerificationTypeInfo(int, char[])
31463=VerificationTypeInfo:constantPoolName()
31464=VerificationTypeInfo:id()
31465=VerificationTypeInfo:VerificationTypeInfo()
31466=VerificationTypeInfo:VerificationTypeInfo(TypeBinding)
31467=ManifestAnalyzerTest:ManifestAnalyzerTest(String)
31468=ManifestAnalyzerTest:testWithSecondJarOnTwoLine3()
31469=ManifestAnalyzerTest:testWithSecondJarOnTwoLine()
31470=ManifestAnalyzerTest:analyzeManifestContents(String)
31471=ManifestAnalyzerTest:testWithOneJarUsingUTF8Name()
31472=ManifestAnalyzerTest:testWithSecondJarOnTwoLineEndedWithEOF2()
31473=ManifestAnalyzerTest:testWithSecondJarOnNextLine()
31474=ManifestAnalyzerTest:testWithSecondJarOnTwoLineEndedWithEOF()
31475=ManifestAnalyzerTest:testWithSecondJarOnTwoLineEndedWithWhiteSpaceEOF()
31476=ManifestAnalyzerTest:testWithSecondJarOnNextLine5()
31477=ManifestAnalyzerTest:testWithSecondJarOnTwoLine2()
31478=ManifestAnalyzerTest:testWithSecondJarOnTwoLine4()
31479=ManifestAnalyzerTest:testWithSecondJarOnTwoLineEndedWithWhiteSpaceNewLineEOF()
31480=ManifestAnalyzerTest:testWithSecondJarOnTwoLineEndedWithNewLineEOF()
31481=ManifestAnalyzerTest:testWithOneJar()
31482=ManifestAnalyzerTest:testWithOneJarWithWiteSpace()
31483=Test:foo(int)
31484=X18:Y18:foo()
31485=AttachedJavadocTests:test007()
31486=AttachedJavadocTests:testBug334652()
31487=AttachedJavadocTests:test018()
31488=AttachedJavadocTests:test005()
31489=AttachedJavadocTests:test016()
31490=AttachedJavadocTests:tearDownSuite()
31491=AttachedJavadocTests:testBug329671()
31492=AttachedJavadocTests:test003()
31493=AttachedJavadocTests:testBug499196()
31494=AttachedJavadocTests:test025()
31495=AttachedJavadocTests:testBug354766()
31496=AttachedJavadocTests:test014()
31497=AttachedJavadocTests:testBug320167()
31498=AttachedJavadocTests:test001()
31499=AttachedJavadocTests:test023()
31500=AttachedJavadocTests:test012()
31501=AttachedJavadocTests:testBug334652_2()
31502=AttachedJavadocTests:test022()
31503=AttachedJavadocTests:testBug426058()
31504=AttachedJavadocTests:test011()
31505=AttachedJavadocTests:testBug304394a()
31506=AttachedJavadocTests:setUpSuite()
31507=AttachedJavadocTests:testBug334652_4()
31508=AttachedJavadocTests:test020()
31509=AttachedJavadocTests:setJavadocLocationAttribute(String)
31510=AttachedJavadocTests:testBug418092()
31511=AttachedJavadocTests:test009()
31512=AttachedJavadocTests:testBug304394()
31513=AttachedJavadocTests:AttachedJavadocTests(String)
31514=AttachedJavadocTests:test019()
31515=AttachedJavadocTests:test006()
31516=AttachedJavadocTests:testBug398272()
31517=AttachedJavadocTests:testBug394967()
31518=AttachedJavadocTests:test017()
31519=AttachedJavadocTests:test004()
31520=AttachedJavadocTests:testBug403154()
31521=AttachedJavadocTests:test015()
31522=AttachedJavadocTests:test002()
31523=AttachedJavadocTests:test024()
31524=AttachedJavadocTests:testBug354766_2()
31525=AttachedJavadocTests:test013()
31526=AttachedJavadocTests:testBug394382()
31527=AttachedJavadocTests:suite()
31528=AttachedJavadocTests:test021()
31529=AttachedJavadocTests:test010()
31530=AttachedJavadocTests:testBug334652_3()
31531=AttachedJavadocTests:test008()
31532=IPackageBinding:isUnnamed()
31533=IPackageBinding:getName()
31534=IPackageBinding:getNameComponents()
31535=TestSelector:ParallelSwapper:swap(Vector, int, int)
31536=TestSelector:KeySelectListener:keyTyped(KeyEvent)
31537=TestSelector:TestCellRenderer:displayString(String)
31538=TestSelector:DoubleClickListener:mouseClicked(MouseEvent)
31539=TestSelector:getSelectedItem()
31540=TestSelector:createTestList(TestCollector)
31541=TestSelector:isEmpty()
31542=TestSelector:TestCellRenderer:TestCellRenderer()
31543=TestSelector:checkEnableOK(ListSelectionEvent)
31544=TestSelector:TestCellRenderer:getListCellRendererComponent(JList, Object, int, boolean, boolean)
31545=TestSelector:defineLayout()
31546=TestSelector:ParallelSwapper:ParallelSwapper(Vector)
31547=TestSelector:keySelectTestClass(char)
31548=TestSelector:centerWindow(Component)
31549=TestSelector:TestSelector(Frame, TestCollector)
31550=TestSelector:TestCellRenderer:typeIndex(String)
31551=TestSelector:okSelected()
31552=TestSelector:TestCellRenderer:matchesKey(String, char)
31553=TestSelector:addListeners()
31554=A:getMyObject()
31555=IClassFile:getBytes()
31556=IClassFile:isInterface()
31557=IClassFile:isClass()
31558=IClassFile:becomeWorkingCopy(IProblemRequestor, WorkingCopyOwner, IProgressMonitor)
31559=IClassFile:getType()
31560=IClassFile:getWorkingCopy(IProgressMonitor, IBufferFactory)
31561=ImportGroupComparator:ImportGroupComparator(List<String>)
31562=ImportGroupComparator:ImportGroup:getPrefix()
31563=ImportGroupComparator:indexImportOrder(List<String>)
31564=ImportGroupComparator:mapImportGroups(Map<String, Integer>)
31565=ImportGroupComparator:ImportGroup:getName()
31566=ImportGroupComparator:isWholeSegmentPrefix(String, String)
31567=ImportGroupComparator:ImportGroup:getIndex()
31568=ImportGroupComparator:determineSortPosition(ImportName)
31569=ImportGroupComparator:ImportGroup:toString()
31570=ImportGroupComparator:IndexedImportGroups:IndexedImportGroups(NavigableMap<String, ImportGroup>, NavigableMap<String, ImportGroup>)
31571=ImportGroupComparator:ImportGroup:ImportGroup(String, int, ImportGroup)
31572=ImportGroupComparator:includeMatchAllImportGroups(List<String>)
31573=ImportGroupComparator:compare(ImportName, ImportName)
31574=A:getDocument()
31575=A:m()
31576=B:m()
31577=C:m()
31578=RunCompletionModelTests:suite()
31579=RunCompletionModelTests:RunCompletionModelTests(String)
31580=RunCompletionModelTests:getTestClasses()
31581=NoReferenceG:foo(p3.X)
31582=AllocationExpression:isPolyExpression()
31583=AllocationExpression:getInferenceContext(ParameterizedMethodBinding)
31584=AllocationExpression:setDepth(int)
31585=AllocationExpression:manageEnclosingInstanceAccessIfNecessary(BlockScope, FlowInfo)
31586=AllocationExpression:isSuperAccess()
31587=AllocationExpression:getExpressionContext()
31588=AllocationExpression:setFieldIndex(int)
31589=AllocationExpression:cleanUpInferenceContexts()
31590=AllocationExpression:statementExpression()
31591=AllocationExpression:registerResult(TypeBinding, MethodBinding)
31592=AllocationExpression:setExpressionContext(ExpressionContext)
31593=AllocationExpression:checkIllegalNullAnnotation(BlockScope, TypeBinding)
31594=AllocationExpression:printExpression(int, StringBuffer)
31595=AllocationExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
31596=AllocationExpression:generateCode(BlockScope, CodeStream, boolean)
31597=AllocationExpression:checkCapturedLocalInitializationIfNecessary(ReferenceBinding, BlockScope, FlowInfo)
31598=AllocationExpression:traverse(ASTVisitor, BlockScope)
31599=AllocationExpression:invocationTargetType()
31600=AllocationExpression:arguments()
31601=AllocationExpression:inferConstructorOfElidedParameterizedType(Scope)
31602=AllocationExpression:freshInferenceContext(Scope)
31603=AllocationExpression:enclosingInstance()
31604=AllocationExpression:binding()
31605=AllocationExpression:registerInferenceContext(ParameterizedGenericMethodBinding, InferenceContext18)
31606=AllocationExpression:resolveType(BlockScope)
31607=AllocationExpression:inferElidedTypes(Scope)
31608=AllocationExpression:checkTypeArgumentRedundancy(ParameterizedTypeBinding, BlockScope)
31609=AllocationExpression:isPolyExpression(MethodBinding)
31610=AllocationExpression:setActualReceiverType(ReferenceBinding)
31611=AllocationExpression:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo)
31612=AllocationExpression:isTypeAccess()
31613=AllocationExpression:inferDiamondConstructor(Scope, InvocationSite, TypeBinding, TypeBinding[], boolean[])
31614=AllocationExpression:isBoxingCompatibleWith(TypeBinding, Scope)
31615=AllocationExpression:isCompatibleWith(TypeBinding, Scope)
31616=AllocationExpression:setExpectedType(TypeBinding)
31617=AllocationExpression:genericTypeArguments()
31618=Test:foo()
31619=ASTNodeFinderTest:suite()
31620=ASTNodeFinderTest:tearDown()
31621=ASTNodeFinderTest:test0002()
31622=ASTNodeFinderTest:ASTNodeFinderTest(String)
31623=ASTNodeFinderTest:test0004()
31624=ASTNodeFinderTest:test0006()
31625=ASTNodeFinderTest:test0009()
31626=ASTNodeFinderTest:test0001()
31627=ASTNodeFinderTest:test0003()
31628=ASTNodeFinderTest:test0005()
31629=ASTNodeFinderTest:test0007()
31630=ASTNodeFinderTest:test0008()
31631=ASTNodeFinderTest:setUpSuite()
31632=X02:foo(int, int)
31633=A:testMethod()
31634=A:foo(int, int, int, int, int, int)
31635=A:bar(List)
31636=A:foo()
31637=CheckDebugAttributes:setFile(String)
31638=CheckDebugAttributes:setProperty(String)
31639=CheckDebugAttributes:checkClassFile(IClassFileReader)
31640=CheckDebugAttributes:execute()
31641=ASTRewriteAnalyzer:isChanged(ASTNode, StructuralPropertyDescriptor)
31642=ASTRewriteAnalyzer:visit(FieldDeclaration)
31643=ASTRewriteAnalyzer:doCopySourcePreVisit(CopySourceInfo[], Stack)
31644=ASTRewriteAnalyzer:visit(ThisExpression)
31645=ASTRewriteAnalyzer:getCopySourceEdit(CopySourceInfo)
31646=ASTRewriteAnalyzer:getPosAfterLeftBrace(int)
31647=ASTRewriteAnalyzer:visit(ArrayAccess)
31648=ASTRewriteAnalyzer:voidVisit(ASTNode, StructuralPropertyDescriptor)
31649=ASTRewriteAnalyzer:doTextRemove(int, int, TextEditGroup)
31650=ASTRewriteAnalyzer:visit(MarkerAnnotation)
31651=ASTRewriteAnalyzer:ListRewriter:rewriteList(ASTNode, StructuralPropertyDescriptor, int, String, String, String)
31652=ASTRewriteAnalyzer:visit(Assignment)
31653=ASTRewriteAnalyzer:rewriteAnnotationsOnDimension(ArrayType, ArrayType, int, int, boolean, TextEditGroup)
31654=ASTRewriteAnalyzer:rewriteModifiers2(ASTNode, ChildListPropertyDescriptor, int)
31655=ASTRewriteAnalyzer:visit(PackageDeclaration)
31656=ASTRewriteAnalyzer:visit(SimpleType)
31657=ASTRewriteAnalyzer:visit(MethodDeclaration)
31658=ASTRewriteAnalyzer:visit(DoStatement)
31659=ASTRewriteAnalyzer:doTextCopy(TextEdit, int, int, String, TextEditGroup)
31660=ASTRewriteAnalyzer:getElementType(ArrayType)
31661=ASTRewriteAnalyzer:ListRewriter:getInitialIndent()
31662=ASTRewriteAnalyzer:ListRewriter:getEndOfNode(ASTNode)
31663=ASTRewriteAnalyzer:rewriteArrayTypeDimensions(ArrayType, int)
31664=ASTRewriteAnalyzer:rewriteExtraDimensions(int, int, int, TextEditGroup)
31665=ASTRewriteAnalyzer:visit(EmptyStatement)
31666=ASTRewriteAnalyzer:SwitchListRewriter:getNodeIndent(int)
31667=ASTRewriteAnalyzer:rewriteNodeList(ASTNode, StructuralPropertyDescriptor, int, String, String)
31668=ASTRewriteAnalyzer:visit(VariableDeclarationStatement)
31669=ASTRewriteAnalyzer:visit(PrefixExpression)
31670=ASTRewriteAnalyzer:getNewValue(ASTNode, StructuralPropertyDescriptor)
31671=ASTRewriteAnalyzer:rewriteNodeList(ASTNode, StructuralPropertyDescriptor, int, String, String, String)
31672=ASTRewriteAnalyzer:visit(AssertStatement)
31673=ASTRewriteAnalyzer:ListRewriter:getOriginalNode(int)
31674=ASTRewriteAnalyzer:rewriteParagraphList(ASTNode, StructuralPropertyDescriptor, int, int, int, int)
31675=ASTRewriteAnalyzer:ParagraphListRewriter:ParagraphListRewriter(int, int)
31676=ASTRewriteAnalyzer:rewriteExtraDimensions(ASTNode, StructuralPropertyDescriptor, int)
31677=ASTRewriteAnalyzer:ParagraphListRewriter:countEmptyLines(ASTNode)
31678=ASTRewriteAnalyzer:ListRewriter:mustRemoveSeparator(int, int)
31679=ASTRewriteAnalyzer:visit(NormalAnnotation)
31680=ASTRewriteAnalyzer:visit(Dimension)
31681=ASTRewriteAnalyzer:ensureSpaceAfterReplace(ASTNode, ChildPropertyDescriptor)
31682=ASTRewriteAnalyzer:SwitchListRewriter:updateIndent(int, int, int, TextEditGroup)
31683=ASTRewriteAnalyzer:visit(InfixExpression)
31684=ASTRewriteAnalyzer:getDimensions(ArrayType)
31685=ASTRewriteAnalyzer:visit(ArrayType)
31686=ASTRewriteAnalyzer:visit(BreakStatement)
31687=ASTRewriteAnalyzer:visit(NameQualifiedType)
31688=ASTRewriteAnalyzer:visit(EnumDeclaration)
31689=ASTRewriteAnalyzer:visit(SuperFieldAccess)
31690=ASTRewriteAnalyzer:doTextRemoveAndVisit(int, int, ASTNode, TextEditGroup)
31691=ASTRewriteAnalyzer:getOriginalValue(ASTNode, StructuralPropertyDescriptor)
31692=ASTRewriteAnalyzer:getEditGroup(RewriteEvent)
31693=ASTRewriteAnalyzer:getEditGroup(ASTNode, StructuralPropertyDescriptor)
31694=ASTRewriteAnalyzer:visit(CastExpression)
31695=ASTRewriteAnalyzer:visit(IntersectionType)
31696=ASTRewriteAnalyzer:ListRewriter:rewriteList(ASTNode, StructuralPropertyDescriptor, int, String, String)
31697=ASTRewriteAnalyzer:visit(TryStatement)
31698=ASTRewriteAnalyzer:visit(SimpleName)
31699=ASTRewriteAnalyzer:visit(IfStatement)
31700=ASTRewriteAnalyzer:createIndentString(int)
31701=ASTRewriteAnalyzer:visit(AnnotationTypeMemberDeclaration)
31702=ASTRewriteAnalyzer:visit(FieldAccess)
31703=ASTRewriteAnalyzer:visit(ParameterizedType)
31704=ASTRewriteAnalyzer:visit(EnumConstantDeclaration)
31705=ASTRewriteAnalyzer:visit(TypeDeclarationStatement)
31706=ASTRewriteAnalyzer:visit(CatchClause)
31707=ASTRewriteAnalyzer:isCollapsed(ASTNode)
31708=ASTRewriteAnalyzer:ModifierRewriter:getSeparatorString(int)
31709=ASTRewriteAnalyzer:visit(PrimitiveType)
31710=ASTRewriteAnalyzer:visitReferenceTypeArguments(ASTNode, StructuralPropertyDescriptor, int)
31711=ASTRewriteAnalyzer:needsNewLineForLineComment(ASTNode, String, int)
31712=ASTRewriteAnalyzer:doTextInsert(int, String, TextEditGroup)
31713=ASTRewriteAnalyzer:rewriteModifiers(ASTNode, StructuralPropertyDescriptor, int)
31714=ASTRewriteAnalyzer:ListRewriter:getSeparatorString(int)
31715=ASTRewriteAnalyzer:doTextReplace(int, int, String, TextEditGroup)
31716=ASTRewriteAnalyzer:hasChildrenChanges(ASTNode)
31717=ASTRewriteAnalyzer:doVisit(ASTNode, StructuralPropertyDescriptor, int)
31718=ASTRewriteAnalyzer:findTagNameEnd(TagElement)
31719=ASTRewriteAnalyzer:visit(QualifiedType)
31720=ASTRewriteAnalyzer:ParagraphListRewriter:getNode(int)
31721=ASTRewriteAnalyzer:getExtendedOffset(ASTNode)
31722=ASTRewriteAnalyzer:visit(WhileStatement)
31723=ASTRewriteAnalyzer:ModifierRewriter:ModifierRewriter(Prefix)
31724=ASTRewriteAnalyzer:rewriteReturnType(MethodDeclaration, boolean, boolean)
31725=ASTRewriteAnalyzer:visit(SuperConstructorInvocation)
31726=ASTRewriteAnalyzer:ParagraphListRewriter:getSeparatorString(int, int)
31727=ASTRewriteAnalyzer:visit(MethodRefParameter)
31728=ASTRewriteAnalyzer:getLineCommentEndOffsets()
31729=ASTRewriteAnalyzer:ListRewriter:updateIndent(int, int, int, TextEditGroup)
31730=ASTRewriteAnalyzer:visit(BooleanLiteral)
31731=ASTRewriteAnalyzer:visit(ClassInstanceCreation)
31732=ASTRewriteAnalyzer:visit(InstanceofExpression)
31733=ASTRewriteAnalyzer:visit(ExpressionStatement)
31734=ASTRewriteAnalyzer:postVisit(ASTNode)
31735=ASTRewriteAnalyzer:visit(ThrowStatement)
31736=ASTRewriteAnalyzer:ParagraphListRewriter:getInitialIndent()
31737=ASTRewriteAnalyzer:rewriteVarargsAnnotations(ASTNode, ChildListPropertyDescriptor, int)
31738=ASTRewriteAnalyzer:ListRewriter:getStartOfNextNode(int, int)
31739=ASTRewriteAnalyzer:ListRewriter:getNodeIndent(int)
31740=ASTRewriteAnalyzer:doTextInsert(int, ASTNode, int, boolean, TextEditGroup)
31741=ASTRewriteAnalyzer:getExtendedRange(ASTNode)
31742=ASTRewriteAnalyzer:visit(TagElement)
31743=ASTRewriteAnalyzer:visit(AnnotationTypeDeclaration)
31744=ASTRewriteAnalyzer:visit(ExpressionMethodReference)
31745=ASTRewriteAnalyzer:visit(CreationReference)
31746=ASTRewriteAnalyzer:visit(SwitchStatement)
31747=ASTRewriteAnalyzer:isAllOfKind(RewriteEvent[], int)
31748=ASTRewriteAnalyzer:visit(PostfixExpression)
31749=ASTRewriteAnalyzer:ListRewriter:rewriteList(ASTNode, StructuralPropertyDescriptor, int, String)
31750=ASTRewriteAnalyzer:visit(MemberRef)
31751=ASTRewriteAnalyzer:visit(Initializer)
31752=ASTRewriteAnalyzer:visit(LambdaExpression)
31753=ASTRewriteAnalyzer:ListRewriter:lineCommentSwallowsActualCode(int)
31754=ASTRewriteAnalyzer:doCopySourcePostVisit(ASTNode, Stack)
31755=ASTRewriteAnalyzer:visit(MemberValuePair)
31756=ASTRewriteAnalyzer:getIndentAtOffset(int)
31757=ASTRewriteAnalyzer:preVisit(ASTNode)
31758=ASTRewriteAnalyzer:visit(UnionType)
31759=ASTRewriteAnalyzer:visit(SwitchCase)
31760=ASTRewriteAnalyzer:rewriteMethodBody(MethodDeclaration, int)
31761=ASTRewriteAnalyzer:visit(TypeLiteral)
31762=ASTRewriteAnalyzer:getEvent(ASTNode, StructuralPropertyDescriptor)
31763=ASTRewriteAnalyzer:ParagraphListRewriter:getSeparatorString(int)
31764=ASTRewriteAnalyzer:rewriteJavadoc(ASTNode, StructuralPropertyDescriptor)
31765=ASTRewriteAnalyzer:visit(MethodInvocation)
31766=ASTRewriteAnalyzer:visit(Block)
31767=ASTRewriteAnalyzer:retrieveRightBracketEndPosition(int, int, boolean)
31768=ASTRewriteAnalyzer:visit(Modifier)
31769=ASTRewriteAnalyzer:visit(SuperMethodInvocation)
31770=ASTRewriteAnalyzer:visit(TypeParameter)
31771=ASTRewriteAnalyzer:visit(ImportDeclaration)
31772=ASTRewriteAnalyzer:visit(NumberLiteral)
31773=ASTRewriteAnalyzer:ListRewriter:insertAfterSeparator(ASTNode)
31774=ASTRewriteAnalyzer:ListRewriter:rewriteList(ASTNode, StructuralPropertyDescriptor, String, String, int)
31775=ASTRewriteAnalyzer:doVisit(ASTNode)
31776=ASTRewriteAnalyzer:visit(SuperMethodReference)
31777=ASTRewriteAnalyzer:visit(SingleVariableDeclaration)
31778=ASTRewriteAnalyzer:replaceOperation(int, String, TextEditGroup)
31779=ASTRewriteAnalyzer:ParagraphListRewriter:mustRemoveSeparator(int, int)
31780=ASTRewriteAnalyzer:getPosAfterTry(int)
31781=ASTRewriteAnalyzer:visit(QualifiedName)
31782=ASTRewriteAnalyzer:visit(SingleMemberAnnotation)
31783=ASTRewriteAnalyzer:getLineDelimiter()
31784=ASTRewriteAnalyzer:visit(SynchronizedStatement)
31785=ASTRewriteAnalyzer:voidVisitList(List)
31786=ASTRewriteAnalyzer:visit(Javadoc)
31787=ASTRewriteAnalyzer:visit(WildcardType)
31788=ASTRewriteAnalyzer:addEditGroup(TextEditGroup, TextEdit)
31789=ASTRewriteAnalyzer:doVisitUnchangedChildren(ASTNode)
31790=ASTRewriteAnalyzer:visit(AnonymousClassDeclaration)
31791=ASTRewriteAnalyzer:addEdit(TextEdit)
31792=ASTRewriteAnalyzer:insertAnnotationsOnDimension(ArrayType, int, int, TextEditGroup, boolean)
31793=ASTRewriteAnalyzer:getIndentOfLine(int)
31794=ASTRewriteAnalyzer:visit(LabeledStatement)
31795=ASTRewriteAnalyzer:isInsertBoundToPrevious(ASTNode)
31796=ASTRewriteAnalyzer:visit(VariableDeclarationFragment)
31797=ASTRewriteAnalyzer:getLineInformation()
31798=ASTRewriteAnalyzer:rewriteOptionalQualifier(ASTNode, StructuralPropertyDescriptor, int)
31799=ASTRewriteAnalyzer:handleException(Throwable)
31800=ASTRewriteAnalyzer:getCurrentLineStart(String, int)
31801=ASTRewriteAnalyzer:rewriteMethodReceiver(MethodDeclaration, int)
31802=ASTRewriteAnalyzer:getPreviousNode(ASTNode)
31803=ASTRewriteAnalyzer:rewriteOperation(ASTNode, StructuralPropertyDescriptor, int)
31804=ASTRewriteAnalyzer:getExtendedEnd(ASTNode)
31805=ASTRewriteAnalyzer:visit(MethodRef)
31806=ASTRewriteAnalyzer:visit(ParenthesizedExpression)
31807=ASTRewriteAnalyzer:getIndent(int)
31808=ASTRewriteAnalyzer:visit(TypeDeclaration)
31809=ASTRewriteAnalyzer:visit(StringLiteral)
31810=ASTRewriteAnalyzer:rewriteRequiredNode(ASTNode, StructuralPropertyDescriptor)
31811=ASTRewriteAnalyzer:rewriteExtraDimensionsInfo(ASTNode, int, ChildListPropertyDescriptor)
31812=ASTRewriteAnalyzer:ParagraphListRewriter:getNewLines(int)
31813=ASTRewriteAnalyzer:changeNotSupported(ASTNode)
31814=ASTRewriteAnalyzer:rewriteTypeAnnotations(ASTNode, ChildListPropertyDescriptor, int)
31815=ASTRewriteAnalyzer:visit(CharacterLiteral)
31816=ASTRewriteAnalyzer:visit(EnhancedForStatement)
31817=ASTRewriteAnalyzer:rewriteNode(ASTNode, StructuralPropertyDescriptor, int, Prefix)
31818=ASTRewriteAnalyzer:rewriteOptionalTypeParameters(ASTNode, StructuralPropertyDescriptor, int, String, boolean, boolean)
31819=ASTRewriteAnalyzer:visit(TypeMethodReference)
31820=ASTRewriteAnalyzer:ASTRewriteAnalyzer(char[], LineInformation, String, TextEdit, RewriteEventStore, NodeInfoStore, List, Map, TargetSourceRangeComputer, RecoveryScannerData)
31821=ASTRewriteAnalyzer:visit(ForStatement)
31822=ASTRewriteAnalyzer:SwitchListRewriter:SwitchListRewriter(int)
31823=ASTRewriteAnalyzer:visit(ConstructorInvocation)
31824=ASTRewriteAnalyzer:ListRewriter:getNewNode(int)
31825=ASTRewriteAnalyzer:getScanner()
31826=ASTRewriteAnalyzer:visit(NullLiteral)
31827=ASTRewriteAnalyzer:visit(ReturnStatement)
31828=ASTRewriteAnalyzer:getContent()
31829=ASTRewriteAnalyzer:visit(ArrayInitializer)
31830=ASTRewriteAnalyzer:visit(ConditionalExpression)
31831=ASTRewriteAnalyzer:doVisitList(List, int)
31832=ASTRewriteAnalyzer:visit(ArrayCreation)
31833=ASTRewriteAnalyzer:voidVisit(ASTNode)
31834=ASTRewriteAnalyzer:ensureSpaceBeforeReplace(ASTNode)
31835=ASTRewriteAnalyzer:getChangeKind(ASTNode, StructuralPropertyDescriptor)
31836=ASTRewriteAnalyzer:SwitchListRewriter:getSeparatorString(int)
31837=ASTRewriteAnalyzer:getPreviousTokenEndOffset(ASTNode, int)
31838=ASTRewriteAnalyzer:visit(ContinueStatement)
31839=ASTRewriteAnalyzer:rewriteBodyNode(ASTNode, StructuralPropertyDescriptor, int, int, int, BlockContext)
31840=ASTRewriteAnalyzer:visit(VariableDeclarationExpression)
31841=ASTRewriteAnalyzer:visit(TextElement)
31842=ASTRewriteAnalyzer:visit(CompilationUnit)
31843=RecoveredInitializer:add(Statement, int)
31844=RecoveredInitializer:updatedFieldDeclaration()
31845=RecoveredInitializer:add(Block, int)
31846=RecoveredInitializer:updateSourceEndIfNecessary(int, int)
31847=RecoveredInitializer:RecoveredInitializer(FieldDeclaration, RecoveredElement, int, Parser)
31848=RecoveredInitializer:add(LocalDeclaration, int)
31849=RecoveredInitializer:updateOnClosingBrace(int, int)
31850=RecoveredInitializer:add(TypeDeclaration, int)
31851=RecoveredInitializer:RecoveredInitializer(FieldDeclaration, RecoveredElement, int)
31852=RecoveredInitializer:toString(int)
31853=RecoveredInitializer:add(FieldDeclaration, int)
31854=RecoveredInitializer:updateOnOpeningBrace(int, int)
31855=Argument:bind(MethodScope, TypeBinding, boolean)
31856=Argument:resolveForCatch(BlockScope)
31857=Argument:print(int, StringBuffer)
31858=Argument:printStatement(int, StringBuffer)
31859=Argument:Argument(char[], long, TypeReference, int, boolean)
31860=Argument:traverse(ASTVisitor, BlockScope)
31861=Test:fooC_ok()
31862=Test:fooB_ko()
31863=Test:foo_ko()
31864=Test:fooA_ko()
31865=Test:foo_ok()
31866=Test:fooA_ok()
31867=Test:fooC_ko()
31868=Test:fooB_ok()
31869=X:bar(int, String)
31870=X:X()
31871=ConstructorDeclaration:resolveJavadoc()
31872=ConstructorDeclaration:generateCode(ClassScope, ClassFile)
31873=ConstructorDeclaration:typeParameters()
31874=ConstructorDeclaration:resolveStatements()
31875=ConstructorDeclaration:analyseCode(ClassScope, InitializationFlowContext, FlowInfo)
31876=ConstructorDeclaration:isConstructor()
31877=ConstructorDeclaration:printBody(int, StringBuffer)
31878=ConstructorDeclaration:isRecursive(ArrayList)
31879=ConstructorDeclaration:internalGenerateCode(ClassScope, ClassFile)
31880=ConstructorDeclaration:isInitializationMethod()
31881=ConstructorDeclaration:generateSyntheticFieldInitializationsIfNecessary(MethodScope, CodeStream, ReferenceBinding)
31882=ConstructorDeclaration:parseStatements(Parser, CompilationUnitDeclaration)
31883=ConstructorDeclaration:isDefaultConstructor()
31884=ConstructorDeclaration:ConstructorDeclaration(CompilationResult)
31885=ConstructorDeclaration:traverse(ASTVisitor, ClassScope)
31886=CompletionOnBranchStatementLabel:resolve(BlockScope)
31887=CompletionOnBranchStatementLabel:analyseCode(BlockScope, FlowContext, FlowInfo)
31888=CompletionOnBranchStatementLabel:CompletionOnBranchStatementLabel(int, char[], int, int, char[][])
31889=CompletionOnBranchStatementLabel:printStatement(int, StringBuffer)
31890=MM47209:MM47209(String)
31891=MM47209:m47209(int)
31892=Test:foo(int)
31893=A:method()
31894=PackageAndContainingTypeImportComparator:compare(ImportName, ImportName)
31895=A:foo()
31896=CodeSnippetReturnStatement:needValue()
31897=CodeSnippetReturnStatement:resolve(BlockScope)
31898=CodeSnippetReturnStatement:setDepth(int)
31899=CodeSnippetReturnStatement:generateStoreSaveValueIfNecessary(CodeStream)
31900=CodeSnippetReturnStatement:genericTypeArguments()
31901=CodeSnippetReturnStatement:generateReturnBytecode(CodeStream)
31902=CodeSnippetReturnStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
31903=CodeSnippetReturnStatement:prepareSaveValueLocation(TryStatement)
31904=CodeSnippetReturnStatement:setFieldIndex(int)
31905=CodeSnippetReturnStatement:freshInferenceContext(Scope)
31906=CodeSnippetReturnStatement:setActualReceiverType(ReferenceBinding)
31907=CodeSnippetReturnStatement:CodeSnippetReturnStatement(Expression, int, int)
31908=CodeSnippetReturnStatement:isTypeAccess()
31909=CodeSnippetReturnStatement:isSuperAccess()
31910=ScannerHelper:isWhitespace(char)
31911=ScannerHelper:getHexadecimalValue(char)
31912=ScannerHelper:isJavaIdentifierStart(long, int)
31913=ScannerHelper:isJavaIdentifierPart(char)
31914=ScannerHelper:digit(char, int)
31915=ScannerHelper:getNumericValue(char)
31916=ScannerHelper:toUpperCase(char)
31917=ScannerHelper:initializeTables(String)
31918=ScannerHelper:initializeTable18()
31919=ScannerHelper:isLetterOrDigit(char)
31920=ScannerHelper:isJavaIdentifierPart(long, char, char)
31921=ScannerHelper:isJavaIdentifierStart(char)
31922=ScannerHelper:toCodePoint(char, char)
31923=ScannerHelper:isJavaIdentifierPart(long, char)
31924=ScannerHelper:isBitSet(long[], int)
31925=ScannerHelper:initializeTable()
31926=ScannerHelper:toLowerCase(char)
31927=ScannerHelper:isJavaIdentifierPart(long, int)
31928=ScannerHelper:isDigit(char)
31929=ScannerHelper:isJavaIdentifierStart(long, char, char)
31930=ScannerHelper:isJavaIdentifierStart(long, char)
31931=ScannerHelper:initializeTable17()
31932=ScannerHelper:isLowerCase(char)
31933=ScannerHelper:isUpperCase(char)
31934=ScannerHelper:isLetter(char)
31935=X:x(int)
31936=IrritantSet:initialize(int)
31937=IrritantSet:initialize(IrritantSet)
31938=IrritantSet:IrritantSet(int)
31939=IrritantSet:set(int)
31940=IrritantSet:hasSameIrritants(IrritantSet)
31941=IrritantSet:clearAll()
31942=IrritantSet:IrritantSet(IrritantSet)
31943=IrritantSet:isAnySet(IrritantSet)
31944=IrritantSet:set(IrritantSet)
31945=IrritantSet:areAllSet()
31946=IrritantSet:setAll()
31947=IrritantSet:clear(int)
31948=IrritantSet:isSet(int)
31949=Example:bar()
31950=Example:foo()
31951=Example:foo2()
31952=firstClass:myMethod()
31953=X01:test()
31954=X:main(String[])
31955=SecondGenAnnotationProcessor:SecondGenAnnotationProcessor(AnnotationProcessorEnvironment)
31956=SecondGenAnnotationProcessor:process()
31957=A:A(String)
31958=B:B(missing.Type, missing.Type)
31959=Message6Proc:process(Set<? extends TypeElement>, RoundEnvironment)
31960=Message6Proc:round(Set<? extends TypeElement>, RoundEnvironment)
31961=Message6Proc:init(ProcessingEnvironment)
31962=InternalASTRewrite:getListEvent(ASTNode, StructuralPropertyDescriptor)
31963=InternalASTRewrite:getNodeEvent(ASTNode, StructuralPropertyDescriptor)
31964=InternalASTRewrite:preAddChildEvent(ASTNode, ASTNode, StructuralPropertyDescriptor)
31965=InternalASTRewrite:postValueChangeEvent(ASTNode, SimplePropertyDescriptor)
31966=InternalASTRewrite:preRemoveChildEvent(ASTNode, ASTNode, StructuralPropertyDescriptor)
31967=InternalASTRewrite:preValueChangeEvent(ASTNode, SimplePropertyDescriptor)
31968=InternalASTRewrite:postAddChildEvent(ASTNode, ASTNode, StructuralPropertyDescriptor)
31969=InternalASTRewrite:markAsMoveOrCopyTarget(ASTNode, ASTNode)
31970=InternalASTRewrite:toString()
31971=InternalASTRewrite:postCloneNodeEvent(ASTNode, ASTNode)
31972=InternalASTRewrite:preCloneNodeEvent(ASTNode)
31973=InternalASTRewrite:getRootNode()
31974=InternalASTRewrite:rewriteAST(IDocument, Map)
31975=InternalASTRewrite:InternalASTRewrite(CompilationUnit)
31976=InternalASTRewrite:preReplaceChildEvent(ASTNode, ASTNode, ASTNode, StructuralPropertyDescriptor)
31977=ClassFormatException:printStackTrace(PrintStream)
31978=ClassFormatException:printStackTrace()
31979=ClassFormatException:printStackTrace(PrintWriter)
31980=ClassFormatException:getException()
31981=ClassFormatException:getBufferPosition()
31982=ClassFormatException:ClassFormatException(int, int)
31983=ClassFormatException:ClassFormatException(int)
31984=ClassFormatException:getErrorCode()
31985=ClassFormatException:ClassFormatException(RuntimeException, char[])
31986=TypeReferenceMatch:setOtherElements(IJavaElement[])
31987=TypeReferenceMatch:getOtherElements()
31988=TypeReferenceMatch:TypeReferenceMatch(IJavaElement, int, int, int, boolean, SearchParticipant, IResource)
31989=X03:foo()
31990=SyntheticMethodBinding:SyntheticMethodBinding(MethodBinding, boolean, ReferenceBinding)
31991=SyntheticMethodBinding:SyntheticMethodBinding(int, ArrayBinding, char[], SourceTypeBinding)
31992=SyntheticMethodBinding:SyntheticMethodBinding(LambdaExpression, char[], SourceTypeBinding)
31993=SyntheticMethodBinding:SyntheticMethodBinding(SourceTypeBinding, char[])
31994=SyntheticMethodBinding:markNonNull(LookupEnvironment)
31995=SyntheticMethodBinding:SyntheticMethodBinding(FieldBinding, ReferenceBinding, TypeBinding, char[])
31996=SyntheticMethodBinding:SyntheticMethodBinding(MethodBinding, MethodBinding, char[], TypeBinding[], SourceTypeBinding)
31997=SyntheticMethodBinding:SyntheticMethodBinding(MethodBinding, SourceTypeBinding)
31998=SyntheticMethodBinding:SyntheticMethodBinding(MethodBinding, MethodBinding, SourceTypeBinding)
31999=SyntheticMethodBinding:sourceLambda()
32000=SyntheticMethodBinding:SyntheticMethodBinding(ReferenceExpression, SourceTypeBinding)
32001=SyntheticMethodBinding:markNonNull(MethodBinding, int, LookupEnvironment)
32002=SyntheticMethodBinding:SyntheticMethodBinding(FieldBinding, boolean, boolean, ReferenceBinding)
32003=SyntheticMethodBinding:SyntheticMethodBinding(SourceTypeBinding, int, int)
32004=SyntheticMethodBinding:initializeConstructorAccessor(MethodBinding)
32005=SyntheticMethodBinding:initializeMethodAccessor(MethodBinding, boolean, ReferenceBinding)
32006=SyntheticMethodBinding:SyntheticMethodBinding(SourceTypeBinding)
32007=SyntheticMethodBinding:isConstructorRelated()
32008=SpacePreparator:visit(SuperConstructorInvocation)
32009=SpacePreparator:visit(ImportDeclaration)
32010=SpacePreparator:visit(ForStatement)
32011=SpacePreparator:handleEmptyParens(ASTNode, boolean)
32012=SpacePreparator:visit(NormalAnnotation)
32013=SpacePreparator:visit(CastExpression)
32014=SpacePreparator:preVisit2(ASTNode)
32015=SpacePreparator:visit(AssertStatement)
32016=SpacePreparator:visit(Dimension)
32017=SpacePreparator:visit(VariableDeclarationFragment)
32018=SpacePreparator:visit(MarkerAnnotation)
32019=SpacePreparator:visit(TypeMethodReference)
32020=SpacePreparator:visit(Block)
32021=SpacePreparator:visit(AnnotationTypeDeclaration)
32022=SpacePreparator:finishUp()
32023=SpacePreparator:visit(VariableDeclarationStatement)
32024=SpacePreparator:visit(TypeDeclaration)
32025=SpacePreparator:visit(ExpressionMethodReference)
32026=SpacePreparator:visit(TypeParameter)
32027=SpacePreparator:visit(ArrayType)
32028=SpacePreparator:visit(ThrowStatement)
32029=SpacePreparator:visit(AnnotationTypeMemberDeclaration)
32030=SpacePreparator:visit(SwitchStatement)
32031=SpacePreparator:visit(Assignment)
32032=SpacePreparator:visit(PrefixExpression)
32033=SpacePreparator:visit(SwitchCase)
32034=SpacePreparator:visit(EnumConstantDeclaration)
32035=SpacePreparator:visit(WildcardType)
32036=SpacePreparator:handleTypeParameters(List<TypeParameter>)
32037=SpacePreparator:handleAnnotation(Annotation, boolean)
32038=SpacePreparator:handleInvocation(ASTNode, ASTNode)
32039=SpacePreparator:handleTokenBefore(ASTNode, int, boolean, boolean)
32040=SpacePreparator:visit(TryStatement)
32041=SpacePreparator:visit(AnonymousClassDeclaration)
32042=SpacePreparator:visit(WhileStatement)
32043=SpacePreparator:visit(LabeledStatement)
32044=SpacePreparator:visit(PostfixExpression)
32045=SpacePreparator:handleTypeArguments(List<Type>)
32046=SpacePreparator:visit(ArrayAccess)
32047=SpacePreparator:visit(InstanceofExpression)
32048=SpacePreparator:visit(SynchronizedStatement)
32049=SpacePreparator:visit(ArrayInitializer)
32050=SpacePreparator:visit(UnionType)
32051=SpacePreparator:visit(CreationReference)
32052=SpacePreparator:visit(MethodInvocation)
32053=SpacePreparator:handleToken(Token, boolean, boolean)
32054=SpacePreparator:visit(VariableDeclarationExpression)
32055=SpacePreparator:handleCommas(List<? extends ASTNode>, boolean, boolean)
32056=SpacePreparator:handleOperator(String, ASTNode, boolean, boolean)
32057=SpacePreparator:handleInvocation(ASTNode, ASTNode, ASTNode)
32058=SpacePreparator:visit(LambdaExpression)
32059=SpacePreparator:visit(IfStatement)
32060=SpacePreparator:visit(EnhancedForStatement)
32061=SpacePreparator:handleEmptyBrackets(ASTNode, boolean)
32062=SpacePreparator:visit(InfixExpression)
32063=SpacePreparator:visit(ConstructorInvocation)
32064=SpacePreparator:SpacePreparator(TokenManager, DefaultCodeFormatterOptions)
32065=SpacePreparator:visit(DoStatement)
32066=SpacePreparator:visit(ConditionalExpression)
32067=SpacePreparator:visit(ArrayCreation)
32068=SpacePreparator:visit(SingleMemberAnnotation)
32069=SpacePreparator:visit(MemberValuePair)
32070=SpacePreparator:handleToken(ASTNode, int, boolean, boolean)
32071=SpacePreparator:visit(SuperMethodReference)
32072=SpacePreparator:visit(EnumDeclaration)
32073=SpacePreparator:visit(SuperMethodInvocation)
32074=SpacePreparator:visit(CatchClause)
32075=SpacePreparator:visit(ParenthesizedExpression)
32076=SpacePreparator:visit(ClassInstanceCreation)
32077=SpacePreparator:handleSemicolon(ASTNode)
32078=SpacePreparator:visit(ReturnStatement)
32079=SpacePreparator:visit(FieldDeclaration)
32080=SpacePreparator:visit(MethodDeclaration)
32081=SpacePreparator:visit(PackageDeclaration)
32082=SpacePreparator:visit(IntersectionType)
32083=SpacePreparator:handleSemicolon(List<ASTNode>)
32084=SpacePreparator:handleTokenAfter(ASTNode, int, boolean, boolean)
32085=SpacePreparator:endVisit(SingleVariableDeclaration)
32086=SpacePreparator:visit(ParameterizedType)
32087=A:Inner:Inner(int)
32088=XXX:foo()
32089=BatchMessagerImpl:BatchMessagerImpl(BaseProcessingEnvImpl, Main)
32090=BatchMessagerImpl:printMessage(Kind, CharSequence, Element, AnnotationMirror, AnnotationValue)
32091=BatchMessagerImpl:printMessage(Kind, CharSequence)
32092=BatchMessagerImpl:printMessage(Kind, CharSequence, Element, AnnotationMirror)
32093=BatchMessagerImpl:printMessage(Kind, CharSequence, Element)
32094=TypesImpl:isSubsignature(ExecutableType, ExecutableType)
32095=TypesImpl:capture(TypeMirror)
32096=TypesImpl:unboxedType(TypeMirror)
32097=TypesImpl:asElement(TypeMirror)
32098=TypesImpl:directSupertypes(TypeMirror)
32099=TypesImpl:getNoType(TypeKind)
32100=TypesImpl:getDeclaredType(DeclaredType, TypeElement, TypeMirror)
32101=TypesImpl:contains(TypeMirror, TypeMirror)
32102=TypesImpl:getNullType()
32103=TypesImpl:TypesImpl(BaseProcessingEnvImpl)
32104=TypesImpl:isSubtype(TypeMirror, TypeMirror)
32105=TypesImpl:isAssignable(TypeMirror, TypeMirror)
32106=TypesImpl:getDeclaredType(TypeElement, TypeMirror)
32107=TypesImpl:isSameType(TypeMirror, TypeMirror)
32108=TypesImpl:getWildcardType(TypeMirror, TypeMirror)
32109=TypesImpl:asMemberOf(DeclaredType, Element)
32110=TypesImpl:getArrayType(TypeMirror)
32111=TypesImpl:getPrimitiveType(TypeKind)
32112=TypesImpl:erasure(TypeMirror)
32113=TypesImpl:boxedClass(PrimitiveType)
32114=Iface:foo(int)
32115=InterfaceTest:main(String[])
32116=Options:processOptionsFileManager(String)
32117=Options:processOptions(String)
32118=CopyPackageFragmentRootOperation:copyResource(IPackageFragmentRoot, IClasspathEntry, IWorkspaceRoot)
32119=CopyPackageFragmentRootOperation:CopyPackageFragmentRootOperation(IPackageFragmentRoot, IPath, int, int, IClasspathEntry)
32120=CopyPackageFragmentRootOperation:verify()
32121=CopyPackageFragmentRootOperation:copy(IClasspathEntry)
32122=CopyPackageFragmentRootOperation:addEntryToClasspath(IClasspathEntry, IWorkspaceRoot)
32123=CopyPackageFragmentRootOperation:executeOperation()
32124=A:foo()
32125=A:getDocument()
32126=CreateCompilationUnitTests:testInvalidName()
32127=CreateCompilationUnitTests:testSimpleCreation()
32128=CreateCompilationUnitTests:testEmptyCU()
32129=CreateCompilationUnitTests:CreateCompilationUnitTests(String)
32130=CreateCompilationUnitTests:testDefaultCU()
32131=CreateCompilationUnitTests:testForce()
32132=CreateCompilationUnitTests:testNullContents()
32133=CreateCompilationUnitTests:tearDown()
32134=CreateCompilationUnitTests:testSchedulingRule()
32135=CreateCompilationUnitTests:testCUAndImportContainer()
32136=CreateCompilationUnitTests:setUp()
32137=CreateCompilationUnitTests:suite()
32138=TestValid3:foo(String)
32139=TestValid3:foo()
32140=Test:foo(int)
32141=D:g()
32142=Test:main(String[])
32143=Test:main(String[])
32144=RecoveredMethod:updateBodyStart(int)
32145=RecoveredMethod:updateFromParserState()
32146=RecoveredMethod:add(Statement, int)
32147=RecoveredMethod:updateOnClosingBrace(int, int)
32148=RecoveredMethod:resetPendingModifiers()
32149=RecoveredMethod:updateParseTree()
32150=RecoveredMethod:add(Block, int, boolean)
32151=RecoveredMethod:updateSourceEndIfNecessary(int, int)
32152=RecoveredMethod:add(TypeDeclaration, int)
32153=RecoveredMethod:add(LocalDeclaration, int)
32154=RecoveredMethod:updatedMethodDeclaration(int, Set<TypeDeclaration>)
32155=RecoveredMethod:addModifier(int, int)
32156=RecoveredMethod:add(Block, int)
32157=RecoveredMethod:attach(TypeParameter[], int)
32158=RecoveredMethod:attach(RecoveredAnnotation[], int, int, int)
32159=RecoveredMethod:sourceEnd()
32160=RecoveredMethod:bodyStartsAtHeaderEnd()
32161=RecoveredMethod:toString(int)
32162=RecoveredMethod:RecoveredMethod(AbstractMethodDeclaration, RecoveredElement, int, Parser)
32163=RecoveredMethod:updateOnOpeningBrace(int, int)
32164=RecoveredMethod:add(FieldDeclaration, int)
32165=RecoveredMethod:parseTree()
32166=RecoveredMethod:addAnnotationName(int, int, int, int)
32167=X03:foo(int, int)
32168=NameReference:setActualReceiverType(ReferenceBinding)
32169=NameReference:fieldBinding()
32170=NameReference:getName()
32171=NameReference:setDepth(int)
32172=NameReference:checkEffectiveFinality(LocalVariableBinding, Scope)
32173=NameReference:isTypeAccess()
32174=NameReference:freshInferenceContext(Scope)
32175=NameReference:setFieldIndex(int)
32176=NameReference:NameReference()
32177=NameReference:unboundReferenceErrorName()
32178=NameReference:lastFieldBinding()
32179=NameReference:isSuperAccess()
32180=NameReference:isTypeReference()
32181=PolymorphicSignatureTest:test0002()
32182=PolymorphicSignatureTest:test0001()
32183=PolymorphicSignatureTest:suite()
32184=PolymorphicSignatureTest:testClass()
32185=PolymorphicSignatureTest:PolymorphicSignatureTest(String)
32186=A:foo()
32187=AssistInitializer:AssistInitializer(JavaElement, int, Map, Map)
32188=AssistInitializer:getType(String, int)
32189=AssistInitializer:getElementInfo(IProgressMonitor)
32190=TextElement:internalStructuralPropertiesForType(int)
32191=TextElement:clone0(AST)
32192=TextElement:memSize()
32193=TextElement:subtreeMatch0(ASTMatcher, Object)
32194=TextElement:setText(String)
32195=TextElement:getText()
32196=TextElement:getNodeType0()
32197=TextElement:internalGetSetObjectProperty(SimplePropertyDescriptor, boolean, Object)
32198=TextElement:treeSize()
32199=TextElement:TextElement(AST)
32200=TextElement:propertyDescriptors(int)
32201=TextElement:accept0(ASTVisitor)
32202=HierarchyBuilder:worked(IProgressMonitor, int)
32203=HierarchyBuilder:createInfoFromClassFile(Openable, IResource)
32204=HierarchyBuilder:connect(IGenericType, IType, IType, IType[])
32205=HierarchyBuilder:buildSupertypes()
32206=HierarchyBuilder:getType()
32207=HierarchyBuilder:getHandle(IGenericType, ReferenceBinding)
32208=HierarchyBuilder:createCompilationUnitFromPath(Openable, IFile)
32209=HierarchyBuilder:build(boolean)
32210=HierarchyBuilder:HierarchyBuilder(TypeHierarchy)
32211=HierarchyBuilder:lookupBinaryHandle(IBinaryType)
32212=HierarchyBuilder:createInfoFromClassFileInJar(Openable)
32213=TestFinalRoundProc:createFile()
32214=TestFinalRoundProc:process(Set<? extends TypeElement>, RoundEnvironment)
32215=TestFinalRoundProc:resetNumRounds()
32216=TestFinalRoundProc:getNumRounds()
32217=Test:foo()
32218=ResolveLocalConstructor:foo()
32219=ExecutableDeclaration:getParameters()
32220=ExecutableDeclaration:getFormalTypeParameters()
32221=ExecutableDeclaration:isVarArgs()
32222=ExecutableDeclaration:getThrownTypes()
32223=CompletionRequestor:completionFailure(IProblem)
32224=CompletionRequestor:getFavoriteReferences()
32225=CompletionRequestor:accept(CompletionProposal)
32226=CompletionRequestor:setAllowsRequiredProposals(int, int, boolean)
32227=CompletionRequestor:CompletionRequestor()
32228=CompletionRequestor:CompletionRequestor(boolean)
32229=CompletionRequestor:endReporting()
32230=CompletionRequestor:setRequireExtendedContext(boolean)
32231=CompletionRequestor:isIgnored(int)
32232=CompletionRequestor:beginReporting()
32233=CompletionRequestor:isAllowingRequiredProposals(int, int)
32234=CompletionRequestor:isExtendedContextRequired()
32235=CompletionRequestor:setFavoriteReferences(String[])
32236=CompletionRequestor:acceptContext(CompletionContext)
32237=CompletionRequestor:setIgnored(int, boolean)
32238=Round1GenAnnotationProcessor:process()
32239=Round1GenAnnotationProcessor:Round1GenAnnotationProcessor(AnnotationProcessorEnvironment)
32240=X03b:foo()
32241=TestD1:foo()
32242=TestD1:bar()
32243=AllocationExpression:setDepth(int)
32244=AllocationExpression:manageEnclosingInstanceAccessIfNecessary(BlockScope, FlowInfo)
32245=AllocationExpression:isSuperAccess()
32246=AllocationExpression:setFieldIndex(int)
32247=AllocationExpression:printExpression(int, StringBuffer)
32248=AllocationExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
32249=AllocationExpression:generateCode(BlockScope, CodeStream, boolean)
32250=AllocationExpression:checkCapturedLocalInitializationIfNecessary(ReferenceBinding, BlockScope, FlowInfo)
32251=AllocationExpression:traverse(ASTVisitor, BlockScope)
32252=AllocationExpression:enclosingInstance()
32253=AllocationExpression:resolveType(BlockScope)
32254=AllocationExpression:setActualReceiverType(ReferenceBinding)
32255=AllocationExpression:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo)
32256=AllocationExpression:isTypeAccess()
32257=AllocationExpression:genericTypeArguments()
32258=Test:foo()
32259=UnionType:accept0(ASTVisitor)
32260=UnionType:types()
32261=UnionType:propertyDescriptors(int)
32262=UnionType:subtreeMatch0(ASTMatcher, Object)
32263=UnionType:internalGetChildListProperty(ChildListPropertyDescriptor)
32264=UnionType:UnionType(AST)
32265=UnionType:clone0(AST)
32266=UnionType:internalStructuralPropertiesForType(int)
32267=UnionType:memSize()
32268=UnionType:treeSize()
32269=UnionType:getNodeType0()
32270=ASTVisitorTest:testArrayInitializer()
32271=ASTVisitorTest:TestVisitor:visit(BooleanLiteral)
32272=ASTVisitorTest:TestVisitor:visit(EnhancedForStatement)
32273=ASTVisitorTest:testImportDeclaration()
32274=ASTVisitorTest:TestVisitor:visit(ImportDeclaration)
32275=ASTVisitorTest:TestVisitor:endVisit(TypeMethodReference)
32276=ASTVisitorTest:TestVisitor:endVisit(SuperConstructorInvocation)
32277=ASTVisitorTest:TestVisitor:visit(ArrayType)
32278=ASTVisitorTest:testPackageDeclaration()
32279=ASTVisitorTest:testTagElement()
32280=ASTVisitorTest:testFieldAccess()
32281=ASTVisitorTest:TestVisitor:endVisit(ParameterizedType)
32282=ASTVisitorTest:TestVisitor:visit(CatchClause)
32283=ASTVisitorTest:TestVisitor:endVisit(CompilationUnit)
32284=ASTVisitorTest:testReturnStatement()
32285=ASTVisitorTest:TestVisitor:visit(InstanceofExpression)
32286=ASTVisitorTest:TestVisitor:endVisit(LineComment)
32287=ASTVisitorTest:TestVisitor:visit(SwitchCase)
32288=ASTVisitorTest:testTraverseAndModify()
32289=ASTVisitorTest:TestVisitor:endVisit(TypeDeclarationStatement)
32290=ASTVisitorTest:TestVisitor:endVisit(MethodRef)
32291=ASTVisitorTest:testWhileStatement()
32292=ASTVisitorTest:setUp()
32293=ASTVisitorTest:TestVisitor:visit(TypeDeclarationStatement)
32294=ASTVisitorTest:TestVisitor:setVisitingChildren(boolean)
32295=ASTVisitorTest:testExpressionMethodReference()
32296=ASTVisitorTest:TestVisitor:endVisit(Modifier)
32297=ASTVisitorTest:testMethodRefParameter()
32298=ASTVisitorTest:TestVisitor:endVisit(TypeLiteral)
32299=ASTVisitorTest:TestVisitor:visit(MethodInvocation)
32300=ASTVisitorTest:testExpressionStatement()
32301=ASTVisitorTest:TestVisitor:endVisit(LabeledStatement)
32302=ASTVisitorTest:TestVisitor:visit(Dimension)
32303=ASTVisitorTest:testEnumDeclaration()
32304=ASTVisitorTest:TestVisitor:endVisit(ExpressionMethodReference)
32305=ASTVisitorTest:testVariableDeclarationExpression()
32306=ASTVisitorTest:TestVisitor:endVisit(PrimitiveType)
32307=ASTVisitorTest:TestVisitor:visit(NameQualifiedType)
32308=ASTVisitorTest:testBlock()
32309=ASTVisitorTest:testAnonymousClassDeclaration()
32310=ASTVisitorTest:testQualifiedName()
32311=ASTVisitorTest:testSuperFieldAccess()
32312=ASTVisitorTest:testStringLiteral()
32313=ASTVisitorTest:testAssertStatement()
32314=ASTVisitorTest:testSwitchCase()
32315=ASTVisitorTest:TestVisitor:visit(ForStatement)
32316=ASTVisitorTest:TestVisitor:endVisit(TryStatement)
32317=ASTVisitorTest:TestVisitor:endVisit(TextElement)
32318=ASTVisitorTest:TestVisitor:TestVisitor(boolean)
32319=ASTVisitorTest:TestVisitor:endVisit(Assignment)
32320=ASTVisitorTest:testWildcardType()
32321=ASTVisitorTest:ASTVisitorTest(String, int)
32322=ASTVisitorTest:testThrowStatement()
32323=ASTVisitorTest:TestVisitor:visit(AnnotationTypeDeclaration)
32324=ASTVisitorTest:testJavadoc()
32325=ASTVisitorTest:TestVisitor:endVisit(SimpleName)
32326=ASTVisitorTest:testQualifiedType()
32327=ASTVisitorTest:testAnnotationTypeMemberDeclaration()
32328=ASTVisitorTest:TestVisitor:endVisit(AnnotationTypeDeclaration)
32329=ASTVisitorTest:TestVisitor:endVisit(AnnotationTypeMemberDeclaration)
32330=ASTVisitorTest:TestVisitor:visit(NormalAnnotation)
32331=ASTVisitorTest:testModifier()
32332=ASTVisitorTest:TestVisitor:endVisit(UnionType)
32333=ASTVisitorTest:testTraverseAndModify_4()
32334=ASTVisitorTest:TestVisitor:visit(CharacterLiteral)
32335=ASTVisitorTest:TestVisitor:visit(InfixExpression)
32336=ASTVisitorTest:TestVisitor:visit(Initializer)
32337=ASTVisitorTest:testMethodDeclaration()
32338=ASTVisitorTest:testMethodRef()
32339=ASTVisitorTest:TestVisitor:visit(StringLiteral)
32340=ASTVisitorTest:TestVisitor:endVisit(MethodDeclaration)
32341=ASTVisitorTest:TestVisitor:visit(SuperMethodReference)
32342=ASTVisitorTest:testMethodInvocation()
32343=ASTVisitorTest:testSingleVariableDeclaration()
32344=ASTVisitorTest:testSuperMethodInvocation()
32345=ASTVisitorTest:TestVisitor:isVisitingChildren()
32346=ASTVisitorTest:TestVisitor:endVisit(ReturnStatement)
32347=ASTVisitorTest:testParameterizedType()
32348=ASTVisitorTest:TestVisitor:visit(MemberValuePair)
32349=ASTVisitorTest:testSynchronizedStatement()
32350=ASTVisitorTest:TestVisitor:endVisit(ForStatement)
32351=ASTVisitorTest:testInitializer()
32352=ASTVisitorTest:testVariableDeclarationStatement()
32353=ASTVisitorTest:testAnnotationTypeDeclaration()
32354=ASTVisitorTest:testIfStatement()
32355=ASTVisitorTest:TestVisitor:visit(SuperConstructorInvocation)
32356=ASTVisitorTest:testClassInstanceCreation()
32357=ASTVisitorTest:TestVisitor:visit(CompilationUnit)
32358=ASTVisitorTest:ASTVisitorTest(String)
32359=ASTVisitorTest:TestVisitor:visit(EnumDeclaration)
32360=ASTVisitorTest:testLabeledStatement()
32361=ASTVisitorTest:testInfixExpression()
32362=ASTVisitorTest:getName()
32363=ASTVisitorTest:TestVisitor:endVisit(BlockComment)
32364=ASTVisitorTest:testCharacterLiteral()
32365=ASTVisitorTest:testTypeLiteral()
32366=ASTVisitorTest:testPrefixExpression()
32367=ASTVisitorTest:TestVisitor:endVisit(CreationReference)
32368=ASTVisitorTest:TestVisitor:endVisit(Dimension)
32369=ASTVisitorTest:testAssignment()
32370=ASTVisitorTest:TestVisitor:endVisit(ParenthesizedExpression)
32371=ASTVisitorTest:TestVisitor:visit(ParameterizedType)
32372=ASTVisitorTest:TestVisitor:endVisit(MarkerAnnotation)
32373=ASTVisitorTest:TestVisitor:endVisit(TagElement)
32374=ASTVisitorTest:TestVisitor:endVisit(SynchronizedStatement)
32375=ASTVisitorTest:testSwitchStatement()
32376=ASTVisitorTest:testTryStatement()
32377=ASTVisitorTest:TestVisitor:visit(EmptyStatement)
32378=ASTVisitorTest:testPrePost()
32379=ASTVisitorTest:TestVisitor:visit(NullLiteral)
32380=ASTVisitorTest:TestVisitor:endVisit(ClassInstanceCreation)
32381=ASTVisitorTest:TestVisitor:endVisit(FieldAccess)
32382=ASTVisitorTest:TestVisitor:visit(ConstructorInvocation)
32383=ASTVisitorTest:testEnumConstantDeclaration()
32384=ASTVisitorTest:testTraverseAndModify_2()
32385=ASTVisitorTest:TestVisitor:endVisit(IfStatement)
32386=ASTVisitorTest:TestVisitor:visit(Javadoc)
32387=ASTVisitorTest:TestVisitor:endVisit(TypeDeclaration)
32388=ASTVisitorTest:TestVisitor:endVisit(SuperMethodInvocation)
32389=ASTVisitorTest:TestVisitor:visit(TypeMethodReference)
32390=ASTVisitorTest:TestVisitor:visit(TextElement)
32391=ASTVisitorTest:TestVisitor:visit(CreationReference)
32392=ASTVisitorTest:TestVisitor:visit(ArrayAccess)
32393=ASTVisitorTest:TestVisitor:visit(SimpleType)
32394=ASTVisitorTest:TestVisitor:endVisit(PrefixExpression)
32395=ASTVisitorTest:TestVisitor:TestVisitor()
32396=ASTVisitorTest:TestVisitor:endVisit(ExpressionStatement)
32397=ASTVisitorTest:TestVisitor:visit(ConditionalExpression)
32398=ASTVisitorTest:tearDown()
32399=ASTVisitorTest:TestVisitor:visit(VariableDeclarationExpression)
32400=ASTVisitorTest:TestVisitor:visit(ParenthesizedExpression)
32401=ASTVisitorTest:TestVisitor:endVisit(WildcardType)
32402=ASTVisitorTest:TestVisitor:endVisit(ArrayCreation)
32403=ASTVisitorTest:TestVisitor:visit(NumberLiteral)
32404=ASTVisitorTest:TestVisitor:visit(TypeParameter)
32405=ASTVisitorTest:TestVisitor:endVisit(TypeParameter)
32406=ASTVisitorTest:TestVisitor:visit(ArrayCreation)
32407=ASTVisitorTest:TestVisitor:endVisit(SwitchStatement)
32408=ASTVisitorTest:TestVisitor:visit(PrefixExpression)
32409=ASTVisitorTest:TestVisitor:endVisit(EmptyStatement)
32410=ASTVisitorTest:TestVisitor:endVisit(BreakStatement)
32411=ASTVisitorTest:TestVisitor:visit(TypeDeclaration)
32412=ASTVisitorTest:TestVisitor:endVisit(NumberLiteral)
32413=ASTVisitorTest:testSuperMethodReference()
32414=ASTVisitorTest:TestVisitor:visit(AnnotationTypeMemberDeclaration)
32415=ASTVisitorTest:testSuperConstructorInvocation()
32416=ASTVisitorTest:TestVisitor:visit(MethodRef)
32417=ASTVisitorTest:TestVisitor:visit(VariableDeclarationFragment)
32418=ASTVisitorTest:TestVisitor:endVisit(ThisExpression)
32419=ASTVisitorTest:testArrayAccess()
32420=ASTVisitorTest:testConstructorInvocation()
32421=ASTVisitorTest:testThisExpression()
32422=ASTVisitorTest:TestVisitor:visit(SuperFieldAccess)
32423=ASTVisitorTest:TestVisitor:visit(SimpleName)
32424=ASTVisitorTest:TestVisitor:endVisit(Javadoc)
32425=ASTVisitorTest:TestVisitor:visit(Block)
32426=ASTVisitorTest:TestVisitor:endVisit(VariableDeclarationExpression)
32427=ASTVisitorTest:testNameQualifiedType()
32428=ASTVisitorTest:TestVisitor:endVisit(ImportDeclaration)
32429=ASTVisitorTest:TestVisitor:endVisit(SuperMethodReference)
32430=ASTVisitorTest:testSimpleName()
32431=ASTVisitorTest:testPostfixExpression()
32432=ASTVisitorTest:TestVisitor:visit(QualifiedType)
32433=ASTVisitorTest:testEmptyStatement()
32434=ASTVisitorTest:TestVisitor:visit(LineComment)
32435=ASTVisitorTest:TestVisitor:visit(ThrowStatement)
32436=ASTVisitorTest:TestVisitor:visit(VariableDeclarationStatement)
32437=ASTVisitorTest:TestVisitor:endVisit(ConstructorInvocation)
32438=ASTVisitorTest:TestVisitor:endVisit(CatchClause)
32439=ASTVisitorTest:TestVisitor:endVisit(QualifiedType)
32440=ASTVisitorTest:TestVisitor:visit(Assignment)
32441=ASTVisitorTest:TestVisitor:endVisit(SuperFieldAccess)
32442=ASTVisitorTest:TestVisitor:endVisit(ThrowStatement)
32443=ASTVisitorTest:TestVisitor:visit(QualifiedName)
32444=ASTVisitorTest:TestVisitor:visit(ReturnStatement)
32445=ASTVisitorTest:testBooleanLiteral()
32446=ASTVisitorTest:testBreakStatement()
32447=ASTVisitorTest:TestVisitor:visit(FieldDeclaration)
32448=ASTVisitorTest:TestVisitor:endVisit(MemberValuePair)
32449=ASTVisitorTest:TestVisitor:endVisit(EnhancedForStatement)
32450=ASTVisitorTest:testContinueStatement()
32451=ASTVisitorTest:TestVisitor:visit(MarkerAnnotation)
32452=ASTVisitorTest:testSimpleType()
32453=ASTVisitorTest:testVariableDeclarationFragment()
32454=ASTVisitorTest:TestVisitor:visit(ExpressionMethodReference)
32455=ASTVisitorTest:testUnionType()
32456=ASTVisitorTest:TestVisitor:endVisit(NullLiteral)
32457=ASTVisitorTest:TestVisitor:visit(SingleMemberAnnotation)
32458=ASTVisitorTest:testTypeMethodReference()
32459=ASTVisitorTest:TestVisitor:endVisit(NameQualifiedType)
32460=ASTVisitorTest:TestVisitor:endVisit(CastExpression)
32461=ASTVisitorTest:TestVisitor:visit(MethodDeclaration)
32462=ASTVisitorTest:testEnhancedForStatement()
32463=ASTVisitorTest:TestVisitor:visit(PackageDeclaration)
32464=ASTVisitorTest:TestVisitor:endVisit(MethodRefParameter)
32465=ASTVisitorTest:TestVisitor:visit(AssertStatement)
32466=ASTVisitorTest:TestVisitor:visit(IfStatement)
32467=ASTVisitorTest:TestVisitor:visit(FieldAccess)
32468=ASTVisitorTest:TestVisitor:endVisit(VariableDeclarationFragment)
32469=ASTVisitorTest:TestVisitor:endVisit(ArrayAccess)
32470=ASTVisitorTest:TestVisitor:visit(BreakStatement)
32471=ASTVisitorTest:testMemberValuePair()
32472=ASTVisitorTest:TestVisitor:endVisit(InstanceofExpression)
32473=ASTVisitorTest:TestVisitor:visit(MemberRef)
32474=ASTVisitorTest:TestVisitor:visit(ThisExpression)
32475=ASTVisitorTest:TestVisitor:visit(ExpressionStatement)
32476=ASTVisitorTest:TestVisitor:visit(DoStatement)
32477=ASTVisitorTest:TestVisitor:visit(SynchronizedStatement)
32478=ASTVisitorTest:testBlockComment()
32479=ASTVisitorTest:TestVisitor:endVisit(DoStatement)
32480=ASTVisitorTest:TestVisitor:visit(TagElement)
32481=ASTVisitorTest:TestVisitor:visit(UnionType)
32482=ASTVisitorTest:TestVisitor:endVisit(AssertStatement)
32483=ASTVisitorTest:TestVisitor:endVisit(WhileStatement)
32484=ASTVisitorTest:testDoStatement()
32485=ASTVisitorTest:testExtraDimension()
32486=ASTVisitorTest:testCompilationUnit()
32487=ASTVisitorTest:testArrayType()
32488=ASTVisitorTest:TestVisitor:endVisit(MemberRef)
32489=ASTVisitorTest:testTraverseAndModify_3()
32490=ASTVisitorTest:TestVisitor:visit(Modifier)
32491=ASTVisitorTest:TestVisitor:visit(WhileStatement)
32492=ASTVisitorTest:testArrayCreation()
32493=ASTVisitorTest:testNumberLiteral()
32494=ASTVisitorTest:testCatchClause()
32495=ASTVisitorTest:TestVisitor:endVisit(Initializer)
32496=ASTVisitorTest:TestVisitor:endVisit(PackageDeclaration)
32497=ASTVisitorTest:TestVisitor:endVisit(NormalAnnotation)
32498=ASTVisitorTest:TestVisitor:endVisit(ConditionalExpression)
32499=ASTVisitorTest:testConditionalExpression()
32500=ASTVisitorTest:TestVisitor:endVisit(SwitchCase)
32501=ASTVisitorTest:TestVisitor:endVisit(ArrayInitializer)
32502=ASTVisitorTest:TestVisitor:visit(EnumConstantDeclaration)
32503=ASTVisitorTest:testPrimitiveType()
32504=ASTVisitorTest:TestVisitor:endVisit(SimpleType)
32505=ASTVisitorTest:TestVisitor:visit(SwitchStatement)
32506=ASTVisitorTest:TestVisitor:endVisit(EnumConstantDeclaration)
32507=ASTVisitorTest:TestVisitor:endVisit(Block)
32508=ASTVisitorTest:TestVisitor:visit(CastExpression)
32509=ASTVisitorTest:TestVisitor:endVisit(StringLiteral)
32510=ASTVisitorTest:testTypeDeclarationStatement()
32511=ASTVisitorTest:TestVisitor:visit(PostfixExpression)
32512=ASTVisitorTest:TestVisitor:visit(SuperMethodInvocation)
32513=ASTVisitorTest:TestVisitor:visit(SingleVariableDeclaration)
32514=ASTVisitorTest:suite()
32515=ASTVisitorTest:testParenthesizedExpression()
32516=ASTVisitorTest:testForStatement()
32517=ASTVisitorTest:TestVisitor:preVisit(ASTNode)
32518=ASTVisitorTest:TestVisitor:endVisit(PostfixExpression)
32519=ASTVisitorTest:TestVisitor:visit(ClassInstanceCreation)
32520=ASTVisitorTest:TestVisitor:visit(ArrayInitializer)
32521=ASTVisitorTest:TestVisitor:visit(TryStatement)
32522=ASTVisitorTest:TestVisitor:visit(PrimitiveType)
32523=ASTVisitorTest:TestVisitor:endVisit(MethodInvocation)
32524=ASTVisitorTest:TestVisitor:visit(WildcardType)
32525=ASTVisitorTest:TestVisitor:visit(LabeledStatement)
32526=ASTVisitorTest:testInstanceofExpression()
32527=ASTVisitorTest:TestVisitor:visit(MethodRefParameter)
32528=ASTVisitorTest:TestVisitor:visit(TypeLiteral)
32529=ASTVisitorTest:testNormalAnnotation()
32530=ASTVisitorTest:TestVisitor:endVisit(SingleVariableDeclaration)
32531=ASTVisitorTest:testCreationReference()
32532=ASTVisitorTest:testLineComment()
32533=ASTVisitorTest:testTextElement()
32534=ASTVisitorTest:TestVisitor:endVisit(FieldDeclaration)
32535=ASTVisitorTest:TestVisitor:endVisit(VariableDeclarationStatement)
32536=ASTVisitorTest:testMarkerAnnotation()
32537=ASTVisitorTest:testTypeDeclaration()
32538=ASTVisitorTest:TestVisitor:endVisit(BooleanLiteral)
32539=ASTVisitorTest:testCastExpression()
32540=ASTVisitorTest:TestVisitor:visit(BlockComment)
32541=ASTVisitorTest:TestVisitor:endVisit(EnumDeclaration)
32542=ASTVisitorTest:TestVisitor:endVisit(SingleMemberAnnotation)
32543=ASTVisitorTest:testMemberRef()
32544=ASTVisitorTest:TestVisitor:endVisit(QualifiedName)
32545=ASTVisitorTest:TestVisitor:postVisit(ASTNode)
32546=ASTVisitorTest:testFieldDeclaration()
32547=ASTVisitorTest:TestVisitor:visit(AnonymousClassDeclaration)
32548=ASTVisitorTest:TestVisitor:endVisit(InfixExpression)
32549=ASTVisitorTest:TestVisitor:visit(ContinueStatement)
32550=ASTVisitorTest:testNullLiteral()
32551=ASTVisitorTest:TestVisitor:endVisit(CharacterLiteral)
32552=ASTVisitorTest:TestVisitor:endVisit(ArrayType)
32553=ASTVisitorTest:TestVisitor:endVisit(AnonymousClassDeclaration)
32554=ASTVisitorTest:TestVisitor:endVisit(ContinueStatement)
32555=ASTVisitorTest:testSingleMemberAnnotation()
32556=A:B:test()
32557=X:x()
32558=AptTestsPlugin:AptTestsPlugin()
32559=AptTestsPlugin:stop(BundleContext)
32560=AptTestsPlugin:getDefault()
32561=AptTestsPlugin:start(BundleContext)
32562=Example:foo()
32563=SnippetCompletionTests:assertResults(String, String)
32564=SnippetCompletionTests:testCodeSnippetAssistForClassFile()
32565=SnippetCompletionTests:testCodeSnippetAssistInsideNumber()
32566=SnippetCompletionTests:testCodeSnippetAssistForClassFileInInnerClass()
32567=SnippetCompletionTests:setUpSuite()
32568=SnippetCompletionTests:testCodeSnippetAssistForCompilationUnit()
32569=SnippetCompletionTests:SnippetCompletionTests(String)
32570=SnippetCompletionTests:testCodeSnippetAssistForCompilationUnitWithoutSource()
32571=SnippetCompletionTests:testCodeSnippetAssistForClassFileInInterface2()
32572=SnippetCompletionTests:testCodeSnippetAssistForClassFileWithDollar()
32573=SnippetCompletionTests:testCodeSnippetAssistForClassFileInInterface()
32574=SnippetCompletionTests:suite()
32575=SnippetCompletionTests:testCodeSnippetAssistForClassFileWithSource()
32576=SnippetCompletionTests:tearDownSuite()
32577=StatusLine:StatusLine(int)
32578=StatusLine:clear()
32579=StatusLine:showError(String)
32580=StatusLine:showInfo(String)
32581=FieldInfo:FieldInfo(byte, int, int)
32582=FieldInfo:getGenericSignature()
32583=FieldInfo:hasConstant()
32584=FieldInfo:getName()
32585=FieldInfo:reset()
32586=FieldInfo:readDeprecatedAndSyntheticAttributes()
32587=FieldInfo:toString()
32588=FieldInfo:getWrappedConstantValue()
32589=FieldInfo:getModifiers()
32590=FieldInfo:getTypeName()
32591=FieldInfo:isSynthetic()
32592=FieldInfo:compareTo(Object)
32593=FieldInfo:initialize()
32594=FieldInfo:getConstant()
32595=FieldInfo:throwFormatException()
32596=FieldInfo:sizeInBytes()
32597=FieldInfo:readConstantAttribute()
32598=ClasspathResolutionBreakpointListener:breakpoint(int)
32599=ClasspathResolutionBreakpointListener:ClasspathResolutionBreakpointListener(BPThread[])
32600=JavaModelException:toString()
32601=JavaModelException:printStackTrace(PrintWriter)
32602=JavaModelException:JavaModelException(CoreException)
32603=JavaModelException:JavaModelException(IJavaModelStatus)
32604=JavaModelException:getJavaModelStatus()
32605=JavaModelException:printStackTrace(PrintStream)
32606=JavaModelException:isDoesNotExist()
32607=JavaModelException:JavaModelException(Throwable, int)
32608=JavaModelException:getException()
32609=Foo:foo(Point.Float)
32610=A:foo()
32611=A:foo()
32612=PR_1GGNOTF:method()
32613=PR_1GGNOTF:method2()
32614=ArrayBinding:problemId()
32615=ArrayBinding:isEquivalentTo(TypeBinding)
32616=ArrayBinding:elementsType()
32617=ArrayBinding:leafComponentType()
32618=ArrayBinding:getPackage()
32619=ArrayBinding:swapUnresolved(UnresolvedReferenceBinding, ReferenceBinding, LookupEnvironment)
32620=ArrayBinding:debugName()
32621=ArrayBinding:hashCode()
32622=ArrayBinding:shortReadableName()
32623=ArrayBinding:sourceName()
32624=ArrayBinding:collectSubstitutes(TypeBinding, Map)
32625=ArrayBinding:dimensions()
32626=ArrayBinding:qualifiedSourceName()
32627=ArrayBinding:erasure()
32628=ArrayBinding:genericTypeSignature()
32629=ArrayBinding:isCompatibleWith(TypeBinding)
32630=ArrayBinding:ArrayBinding(TypeBinding, int, LookupEnvironment)
32631=ArrayBinding:readableName()
32632=ArrayBinding:constantPoolName()
32633=ArrayBinding:toString()
32634=ArrayBinding:environment()
32635=NullAnnotationTest:testBug382069_j()
32636=NullAnnotationTest:test_redundant_annotation_02()
32637=NullAnnotationTest:test_nonnull_field_9()
32638=NullAnnotationTest:setUp()
32639=NullAnnotationTest:mismatch_NonNull_Nullable(String)
32640=NullAnnotationTest:testBug418843()
32641=NullAnnotationTest:testBug388281_02()
32642=NullAnnotationTest:test_default_nullness_016()
32643=NullAnnotationTest:test_nonnull_return_006()
32644=NullAnnotationTest:test_nonnull_field_16()
32645=NullAnnotationTest:test_nullable_field_11()
32646=NullAnnotationTest:test_nonnull_parameter_008()
32647=NullAnnotationTest:test_default_nullness_005()
32648=NullAnnotationTest:nullTypeSafety()
32649=NullAnnotationTest:test_redundant_annotation_04()
32650=NullAnnotationTest:test_nullable_field_10d()
32651=NullAnnotationTest:test_annotation_import_001()
32652=NullAnnotationTest:test_parameter_specification_inheritance_007a()
32653=NullAnnotationTest:testBug415850_a()
32654=NullAnnotationTest:test_nonnull_return_008()
32655=NullAnnotationTest:test_parameter_specification_inheritance_011()
32656=NullAnnotationTest:test_contradictory_annotations_03()
32657=NullAnnotationTest:test_default_nullness_014()
32658=NullAnnotationTest:testBug430084()
32659=NullAnnotationTest:test407414b4()
32660=NullAnnotationTest:test_nonnull_argument_001()
32661=NullAnnotationTest:test_nullable_field_10f()
32662=NullAnnotationTest:testBug461878()
32663=NullAnnotationTest:test_nonnull_parameter_006()
32664=NullAnnotationTest:test_default_nullness_003()
32665=NullAnnotationTest:test_default_nullness_003c()
32666=NullAnnotationTest:test_nonnull_field_5()
32667=NullAnnotationTest:test_nullable_field_10b()
32668=NullAnnotationTest:test_illegal_annotation_007()
32669=NullAnnotationTest:test_nonnull_var_in_constrol_structure_2()
32670=NullAnnotationTest:testBug403086_2()
32671=NullAnnotationTest:test_nonnull_parameter_015()
32672=NullAnnotationTest:test_parameter_specification_inheritance_013()
32673=NullAnnotationTest:test_default_nullness_012()
32674=NullAnnotationTest:testBug403674()
32675=NullAnnotationTest:test407414b2()
32676=NullAnnotationTest:test_nullable_field_15()
32677=NullAnnotationTest:testBug418235()
32678=NullAnnotationTest:targetTypeUseIfAvailable()
32679=NullAnnotationTest:testBug407414c()
32680=NullAnnotationTest:test_nullable_field_1()
32681=NullAnnotationTest:test_nonnull_parameter_004()
32682=NullAnnotationTest:test_parameter_specification_inheritance_002()
32683=NullAnnotationTest:test_nonnull_field_2d()
32684=NullAnnotationTest:test_nonnull_field_12()
32685=NullAnnotationTest:testBug415413()
32686=NullAnnotationTest:testBug443347c()
32687=NullAnnotationTest:test_default_nullness_003a()
32688=NullAnnotationTest:nonNullArrayOf(String)
32689=NullAnnotationTest:test_nonnull_field_7()
32690=NullAnnotationTest:test_illegal_annotation_005()
32691=NullAnnotationTest:test_missing_default_annotation_02()
32692=NullAnnotationTest:testBug372011()
32693=NullAnnotationTest:testBug_415269()
32694=NullAnnotationTest:test_nonnull_parameter_013()
32695=NullAnnotationTest:test_nonnull_return_009a()
32696=NullAnnotationTest:test_parameter_specification_inheritance_015()
32697=NullAnnotationTest:test_default_nullness_010()
32698=NullAnnotationTest:test_nonnull_return_004()
32699=NullAnnotationTest:test_nonnull_parameter_002()
32700=NullAnnotationTest:test_nullable_field_13()
32701=NullAnnotationTest:testBug407414e()
32702=NullAnnotationTest:test_parameter_specification_inheritance_004()
32703=NullAnnotationTest:_test_nonnull_return_009b()
32704=NullAnnotationTest:testBug452780()
32705=NullAnnotationTest:test_nonnull_field_14()
32706=NullAnnotationTest:test_null_with_apt()
32707=NullAnnotationTest:test_nullable_paramter_002()
32708=NullAnnotationTest:test_conditional_expression_1()
32709=NullAnnotationTest:test_nonnull_field_1()
32710=NullAnnotationTest:testBug388281_09()
32711=NullAnnotationTest:test428104()
32712=NullAnnotationTest:testBug388630_2()
32713=NullAnnotationTest:test_nonnull_return_011()
32714=NullAnnotationTest:test_nonnull_parameter_011()
32715=NullAnnotationTest:test_parameter_specification_inheritance_017()
32716=NullAnnotationTest:test_nullable_field_5()
32717=NullAnnotationTest:test_parameter_specification_inheritance_006()
32718=NullAnnotationTest:test_nullable_field_3m()
32719=NullAnnotationTest:test_nullable_field_11a()
32720=NullAnnotationTest:testBug418235b()
32721=NullAnnotationTest:test_options_02()
32722=NullAnnotationTest:testBug388281_07()
32723=NullAnnotationTest:test_nonnull_field_3()
32724=NullAnnotationTest:redundantCheck_method_cannot_return_null(String, String)
32725=NullAnnotationTest:test_nonnull_field_2a()
32726=NullAnnotationTest:test_nonnull_return_013()
32727=NullAnnotationTest:test407414a()
32728=NullAnnotationTest:testBug415413a()
32729=NullAnnotationTest:testBug417295_7()
32730=NullAnnotationTest:test_parameter_specification_inheritance_008()
32731=NullAnnotationTest:test_nullable_field_3()
32732=NullAnnotationTest:testBug403086_1()
32733=NullAnnotationTest:_test_nonnull_return_012()
32734=NullAnnotationTest:testBug424624()
32735=NullAnnotationTest:test_nonnull_local_002()
32736=NullAnnotationTest:testBug388281_05()
32737=NullAnnotationTest:testBug403674a()
32738=NullAnnotationTest:test_contradictory_annotations_02()
32739=NullAnnotationTest:testBug434374c()
32740=NullAnnotationTest:testBug385626_1()
32741=NullAnnotationTest:test_message_send_in_control_structure_01()
32742=NullAnnotationTest:testBug420313()
32743=NullAnnotationTest:testBug489486negative()
32744=NullAnnotationTest:testBug422796b()
32745=NullAnnotationTest:test_nullness_default_018b()
32746=NullAnnotationTest:testBug374129()
32747=NullAnnotationTest:testBug413460()
32748=NullAnnotationTest:testBug417295_5()
32749=NullAnnotationTest:testBug422796()
32750=NullAnnotationTest:test_nullable_field_9()
32751=NullAnnotationTest:test_annotation_import_006()
32752=NullAnnotationTest:test_nonnull_field_14b()
32753=NullAnnotationTest:testBug388281_03()
32754=NullAnnotationTest:testBug434374a()
32755=NullAnnotationTest:testBug445147()
32756=NullAnnotationTest:test_default_nullness_008()
32757=NullAnnotationTest:test_enum_field_02()
32758=NullAnnotationTest:testMultipleAnnotations()
32759=NullAnnotationTest:test_message_send_in_control_structure_03()
32760=NullAnnotationTest:testBug459967_Enum_valueOf()
32761=NullAnnotationTest:testBug445708()
32762=NullAnnotationTest:testBug489486conform()
32763=NullAnnotationTest:test_redundant_annotation_02g()
32764=NullAnnotationTest:test_message_send_in_control_structure_02a()
32765=NullAnnotationTest:testBug424624b()
32766=NullAnnotationTest:testBug482075()
32767=NullAnnotationTest:test_nullable_field_7()
32768=NullAnnotationTest:testBug388281_01()
32769=NullAnnotationTest:test_default_nullness_017()
32770=NullAnnotationTest:test_nonnull_return_007()
32771=NullAnnotationTest:test_nonnull_field_15()
32772=NullAnnotationTest:test_nonnull_parameter_009()
32773=NullAnnotationTest:test_default_nullness_006()
32774=NullAnnotationTest:test_redundant_annotation_01()
32775=NullAnnotationTest:testBug445708b()
32776=NullAnnotationTest:test_nesting_1()
32777=NullAnnotationTest:test_annotation_import_002()
32778=NullAnnotationTest:testBug415850_b()
32779=NullAnnotationTest:test_nonnull_return_009()
32780=NullAnnotationTest:test_parameter_specification_inheritance_010()
32781=NullAnnotationTest:testBug412076()
32782=NullAnnotationTest:test_default_nullness_015()
32783=NullAnnotationTest:test407414b3()
32784=NullAnnotationTest:test_nonnull_field_17()
32785=NullAnnotationTest:potNPE_nullable(String)
32786=NullAnnotationTest:test_nonnull_argument_002()
32787=NullAnnotationTest:testBug388281_10()
32788=NullAnnotationTest:test_nonnull_parameter_007()
32789=NullAnnotationTest:test_default_nullness_004()
32790=NullAnnotationTest:potNPE_nullable_maybenull(String)
32791=NullAnnotationTest:test424702()
32792=NullAnnotationTest:testBug382069_k()
32793=NullAnnotationTest:_test_nonnull_field_13()
32794=NullAnnotationTest:test_nullable_field_10e()
32795=NullAnnotationTest:test_illegal_annotation_008()
32796=NullAnnotationTest:test444024()
32797=NullAnnotationTest:redundant_check_nonnull(String, String)
32798=NullAnnotationTest:test_nonnull_parameter_016()
32799=NullAnnotationTest:test_parameter_specification_inheritance_012()
32800=NullAnnotationTest:test_default_nullness_013()
32801=NullAnnotationTest:test_nonnull_return_003()
32802=NullAnnotationTest:test_nullable_field_14()
32803=NullAnnotationTest:testBug407414d()
32804=NullAnnotationTest:test_nonnull_parameter_005()
32805=NullAnnotationTest:test_nonnull_field_2c()
32806=NullAnnotationTest:test_parameter_specification_inheritance_001()
32807=NullAnnotationTest:test_default_nullness_002()
32808=NullAnnotationTest:testBug434374()
32809=NullAnnotationTest:test_nonnull_field_11()
32810=NullAnnotationTest:testBug443347b()
32811=NullAnnotationTest:test_default_nullness_003b()
32812=NullAnnotationTest:testBug415413c()
32813=NullAnnotationTest:test_nonnull_field_6()
32814=NullAnnotationTest:test_nullable_field_10c()
32815=NullAnnotationTest:test_illegal_annotation_006()
32816=NullAnnotationTest:test_missing_default_annotation_01()
32817=NullAnnotationTest:test_nonnull_var_in_constrol_structure_3()
32818=NullAnnotationTest:testBug416267()
32819=NullAnnotationTest:test_nonnull_return_014()
32820=NullAnnotationTest:test_parameter_specification_inheritance_014()
32821=NullAnnotationTest:test_nonnull_parameter_014()
32822=NullAnnotationTest:test_default_nullness_011()
32823=NullAnnotationTest:test_nonnull_return_005()
32824=NullAnnotationTest:test_nullable_field_12()
32825=NullAnnotationTest:testBug418236()
32826=NullAnnotationTest:testBug407414f()
32827=NullAnnotationTest:test_parameter_specification_inheritance_003()
32828=NullAnnotationTest:test_nonnull_parameter_003()
32829=NullAnnotationTest:test_nonnull_field_2e()
32830=NullAnnotationTest:test_nullable_return_002()
32831=NullAnnotationTest:testBug459967_Enum_values_binary()
32832=NullAnnotationTest:test_nullness_default_018()
32833=NullAnnotationTest:test_nonnull_field_8()
32834=NullAnnotationTest:test_nullable_field_10a()
32835=NullAnnotationTest:test_constructor_with_nested_class()
32836=NullAnnotationTest:test_illegal_annotation_004()
32837=NullAnnotationTest:testBug455723()
32838=NullAnnotationTest:test_null_with_apt_comment4()
32839=NullAnnotationTest:test_nonnull_var_in_constrol_structure_1()
32840=NullAnnotationTest:suite()
32841=NullAnnotationTest:test_nonnull_parameter_012()
32842=NullAnnotationTest:test_parameter_specification_inheritance_016()
32843=NullAnnotationTest:test_illegal_annotation_003()
32844=NullAnnotationTest:test_nonnull_parameter_001()
32845=NullAnnotationTest:test_parameter_specification_inheritance_005()
32846=NullAnnotationTest:testBug424624a()
32847=NullAnnotationTest:test_nullable_field_4()
32848=NullAnnotationTest:testBug237236()
32849=NullAnnotationTest:cancenNonNullByDefault()
32850=NullAnnotationTest:testBug467610()
32851=NullAnnotationTest:testBug455723b()
32852=NullAnnotationTest:test_nonnull_field_2()
32853=NullAnnotationTest:redundant_check_canonlynull(String, String)
32854=NullAnnotationTest:test_nonnull_return_010()
32855=NullAnnotationTest:NullAnnotationTest(String)
32856=NullAnnotationTest:testBug388630_1()
32857=NullAnnotationTest:testBug462790()
32858=NullAnnotationTest:test_nullable_return_001()
32859=NullAnnotationTest:test_illegal_annotation_003b()
32860=NullAnnotationTest:test_nonnull_parameter_010()
32861=NullAnnotationTest:test_parameter_specification_inheritance_018()
32862=NullAnnotationTest:test_illegal_annotation_001()
32863=NullAnnotationTest:testBug415413b()
32864=NullAnnotationTest:test_nonnull_return_001()
32865=NullAnnotationTest:test_suppress_001()
32866=NullAnnotationTest:_test_default_nullness_007()
32867=NullAnnotationTest:test_parameter_specification_inheritance_007()
32868=NullAnnotationTest:test_nullable_field_2()
32869=NullAnnotationTest:testBug443347()
32870=NullAnnotationTest:test_options_03()
32871=NullAnnotationTest:testBug457210()
32872=NullAnnotationTest:checkAlwaysFalse_nonnull(String, String)
32873=NullAnnotationTest:test_nullable_paramter_001()
32874=NullAnnotationTest:test_nonnull_field_4()
32875=NullAnnotationTest:testBug477719()
32876=NullAnnotationTest:testBug455557()
32877=NullAnnotationTest:test_nonnull_field_2b()
32878=NullAnnotationTest:testBug388281_08()
32879=NullAnnotationTest:testBug459967_Enum_values()
32880=NullAnnotationTest:test407414b()
32881=NullAnnotationTest:variableMayBeNull(String)
32882=NullAnnotationTest:test_parameter_specification_inheritance_009()
32883=NullAnnotationTest:checkAlwaysFalse_method_cannot_return_null(String, String)
32884=NullAnnotationTest:test_nullable_field_8()
32885=NullAnnotationTest:testClass()
32886=NullAnnotationTest:test_options_01()
32887=NullAnnotationTest:test_nonnull_local_001()
32888=NullAnnotationTest:testBug388281_06()
32889=NullAnnotationTest:test_contradictory_annotations_01()
32890=NullAnnotationTest:testBug434374b()
32891=NullAnnotationTest:test_nullable_field_14a()
32892=NullAnnotationTest:test_default_nullness_009()
32893=NullAnnotationTest:test_assignment_expression_1()
32894=NullAnnotationTest:test_enum_field_01()
32895=NullAnnotationTest:test_nullable_field_6()
32896=NullAnnotationTest:test_annotation_import_005()
32897=NullAnnotationTest:testBug388281_04()
32898=NullAnnotationTest:_test_illegal_annotation_002()
32899=NullAnnotationTest:test_message_send_in_control_structure_02()
32900=NullAnnotationTest:testBug385626_2()
32901=NullAnnotationTest:testBug435805()
32902=NullAnnotationTest:testTypeAnnotationProblemNotIn17()
32903=NullAnnotationTest:testBug459967_Enum_valueOf_binary()
32904=NullAnnotationTest:testBug422796a()
32905=NullAnnotationTest:testBug432348()
32906=TryWithResourcesStatementTest:test038()
32907=TryWithResourcesStatementTest:test375248d()
32908=TryWithResourcesStatementTest:test027()
32909=TryWithResourcesStatementTest:test394780()
32910=TryWithResourcesStatementTest:test375326b()
32911=TryWithResourcesStatementTest:test014()
32912=TryWithResourcesStatementTest:test003()
32913=TryWithResourcesStatementTest:test049()
32914=TryWithResourcesStatementTest:test003a()
32915=TryWithResourcesStatementTest:test029()
32916=TryWithResourcesStatementTest:test016()
32917=TryWithResourcesStatementTest:test005()
32918=TryWithResourcesStatementTest:test375326()
32919=TryWithResourcesStatementTest:test034()
32920=TryWithResourcesStatementTest:TryWithResourcesStatementTest(String)
32921=TryWithResourcesStatementTest:test023()
32922=TryWithResourcesStatementTest:test010()
32923=TryWithResourcesStatementTest:test375326f()
32924=TryWithResourcesStatementTest:test045()
32925=TryWithResourcesStatementTest:test055a()
32926=TryWithResourcesStatementTest:test036()
32927=TryWithResourcesStatementTest:test025()
32928=TryWithResourcesStatementTest:test012()
32929=TryWithResourcesStatementTest:test375326d()
32930=TryWithResourcesStatementTest:test058()
32931=TryWithResourcesStatementTest:test001()
32932=TryWithResourcesStatementTest:test047()
32933=TryWithResourcesStatementTest:test041()
32934=TryWithResourcesStatementTest:test030()
32935=TryWithResourcesStatementTest:test380112d()
32936=TryWithResourcesStatementTest:test375248()
32937=TryWithResourcesStatementTest:test052()
32938=TryWithResourcesStatementTest:test054a()
32939=TryWithResourcesStatementTest:test032()
32940=TryWithResourcesStatementTest:test021()
32941=TryWithResourcesStatementTest:test380112b()
32942=TryWithResourcesStatementTest:test054()
32943=TryWithResourcesStatementTest:test030a()
32944=TryWithResourcesStatementTest:test043()
32945=TryWithResourcesStatementTest:test008()
32946=TryWithResourcesStatementTest:test375248b()
32947=TryWithResourcesStatementTest:test050()
32948=TryWithResourcesStatementTest:test375326a()
32949=TryWithResourcesStatementTest:test015()
32950=TryWithResourcesStatementTest:test004()
32951=TryWithResourcesStatementTest:test037()
32952=TryWithResourcesStatementTest:test026()
32953=TryWithResourcesStatementTest:test017()
32954=TryWithResourcesStatementTest:test006()
32955=TryWithResourcesStatementTest:test039()
32956=TryWithResourcesStatementTest:test028()
32957=TryWithResourcesStatementTest:test375326e()
32958=TryWithResourcesStatementTest:test011()
32959=TryWithResourcesStatementTest:test057()
32960=TryWithResourcesStatementTest:test046()
32961=TryWithResourcesStatementTest:test033()
32962=TryWithResourcesStatementTest:test022()
32963=TryWithResourcesStatementTest:test375326c()
32964=TryWithResourcesStatementTest:test013()
32965=TryWithResourcesStatementTest:test059()
32966=TryWithResourcesStatementTest:test002()
32967=TryWithResourcesStatementTest:test048()
32968=TryWithResourcesStatementTest:test035()
32969=TryWithResourcesStatementTest:test024()
32970=TryWithResourcesStatementTest:test380112c()
32971=TryWithResourcesStatementTest:test053()
32972=TryWithResourcesStatementTest:test042()
32973=TryWithResourcesStatementTest:test040()
32974=TryWithResourcesStatementTest:test380112a()
32975=TryWithResourcesStatementTest:test375326g()
32976=TryWithResourcesStatementTest:test055()
32977=TryWithResourcesStatementTest:test044()
32978=TryWithResourcesStatementTest:suite()
32979=TryWithResourcesStatementTest:test031()
32980=TryWithResourcesStatementTest:test053a()
32981=TryWithResourcesStatementTest:test020()
32982=TryWithResourcesStatementTest:test060()
32983=TryWithResourcesStatementTest:test375248a()
32984=TryWithResourcesStatementTest:test004a()
32985=TryWithResourcesStatementTest:test018()
32986=TryWithResourcesStatementTest:test007()
32987=TryWithResourcesStatementTest:test380112e()
32988=TryWithResourcesStatementTest:test051()
32989=TryWithResourcesStatementTest:testClass()
32990=TryWithResourcesStatementTest:test375248c()
32991=TryWithResourcesStatementTest:test009()
32992=ResolveExplicitSuperConstructorCall:ResolveExplicitSuperConstructorCall(int)
32993=X:foo()
32994=X:open(String)
32995=ReadManager:run()
32996=ReadManager:shutdown()
32997=ReadManager:getContents(ICompilationUnit)
32998=ReadManager:ReadManager(ICompilationUnit[], int)
32999=AnnotationSelectionTest:test0007()
33000=AnnotationSelectionTest:test0009()
33001=AnnotationSelectionTest:test0014()
33002=AnnotationSelectionTest:test0003()
33003=AnnotationSelectionTest:test0001()
33004=AnnotationSelectionTest:test0016()
33005=AnnotationSelectionTest:test0010()
33006=AnnotationSelectionTest:test0012()
33007=AnnotationSelectionTest:_test0005()
33008=AnnotationSelectionTest:test0017()
33009=AnnotationSelectionTest:test0006()
33010=AnnotationSelectionTest:AnnotationSelectionTest(String)
33011=AnnotationSelectionTest:test0008()
33012=AnnotationSelectionTest:test0013()
33013=AnnotationSelectionTest:test0002()
33014=AnnotationSelectionTest:test0015()
33015=AnnotationSelectionTest:test0004()
33016=AnnotationSelectionTest:test0011()
33017=ArrayTypeReference:traverse(ASTVisitor, ClassScope)
33018=ArrayTypeReference:dimensions()
33019=ArrayTypeReference:getTypeBinding(Scope)
33020=ArrayTypeReference:printExpression(int, StringBuffer)
33021=ArrayTypeReference:ArrayTypeReference(char[], int, long)
33022=ArrayTypeReference:traverse(ASTVisitor, BlockScope)
33023=ArrayTypeReference:getParameterizedTypeName()
33024=X17a:foo()
33025=EnumCompletionParserTest:test0014()
33026=EnumCompletionParserTest:test0003()
33027=EnumCompletionParserTest:test0012()
33028=EnumCompletionParserTest:test0001()
33029=EnumCompletionParserTest:test0007()
33030=EnumCompletionParserTest:test0005()
33031=EnumCompletionParserTest:suite()
33032=EnumCompletionParserTest:EnumCompletionParserTest(String)
33033=EnumCompletionParserTest:test0010()
33034=EnumCompletionParserTest:test0004()
33035=EnumCompletionParserTest:test0013()
33036=EnumCompletionParserTest:test0002()
33037=EnumCompletionParserTest:test0008()
33038=EnumCompletionParserTest:getCompilerOptions()
33039=EnumCompletionParserTest:test0006()
33040=EnumCompletionParserTest:test0009()
33041=EnumCompletionParserTest:test0011()
33042=A:foo(int)
33043=AmbiguousSyntaxDemo:main(String[])
33044=ILineStartFinder:getLineStart(int)
33045=ExceptionLabel:placeStart()
33046=ExceptionLabel:place()
33047=ExceptionLabel:ExceptionLabel(CodeStream, TypeBinding)
33048=ExceptionLabel:getCount()
33049=ExceptionLabel:ExceptionLabel(CodeStream, TypeBinding, TypeReference, Annotation[])
33050=ExceptionLabel:placeEnd()
33051=ExceptionLabel:toString()
33052=ExceptionHandler:perform(InvocationTargetException, Shell, String, String)
33053=ExceptionHandler:handle(InvocationTargetException, String, String)
33054=ExceptionHandler:perform(CoreException, Shell, String, String)
33055=ExceptionHandler:handle(CoreException, Shell, String, String)
33056=ExceptionHandler:log(Throwable, String)
33057=ExceptionHandler:handle(InvocationTargetException, Shell, String, String)
33058=ExceptionHandler:handle(CoreException, String, String)
33059=ExceptionHandler:displayMessageDialog(Throwable, String, Shell, String, String)
33060=X03:foo()
33061=X21:createSearchPattern()
33062=BuildContext:recordDependencies(String[])
33063=BuildContext:recordNewProblems(CategorizedProblem[])
33064=BuildContext:getFile()
33065=BuildContext:getContents()
33066=BuildContext:recordDeletedGeneratedFiles(IFile[])
33067=BuildContext:hasAnnotations()
33068=BuildContext:recordAddedGeneratedFiles(IFile[])
33069=Example:bar()
33070=Example:foo()
33071=Example:foo2()
33072=FieldReference:generateCode(BlockScope, CodeStream, boolean)
33073=FieldReference:traverse(ASTVisitor, BlockScope)
33074=FieldReference:analyseCode(BlockScope, FlowContext, FlowInfo, boolean)
33075=FieldReference:checkNPE(BlockScope, FlowContext, FlowInfo, int)
33076=FieldReference:generateAssignment(BlockScope, CodeStream, Assignment, boolean)
33077=FieldReference:computeConversion(Scope, TypeBinding, TypeBinding)
33078=FieldReference:setFieldIndex(int)
33079=FieldReference:optimizedBooleanConstant()
33080=FieldReference:genericTypeArguments()
33081=FieldReference:getThisFieldTokens(int)
33082=FieldReference:resolveType(BlockScope)
33083=FieldReference:nullAnnotatedVariableBinding(boolean)
33084=FieldReference:isEquivalent(Reference)
33085=FieldReference:setActualReceiverType(ReferenceBinding)
33086=FieldReference:postConversionType(Scope)
33087=FieldReference:lastFieldBinding()
33088=FieldReference:isSuperAccess()
33089=FieldReference:FieldReference(char[], long)
33090=FieldReference:isQualifiedSuper()
33091=FieldReference:analyseCode(BlockScope, FlowContext, FlowInfo)
33092=FieldReference:generateCompoundAssignment(BlockScope, CodeStream, Expression, int, int, boolean)
33093=FieldReference:generatePostIncrement(BlockScope, CodeStream, CompoundAssignment, boolean)
33094=FieldReference:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo, boolean)
33095=FieldReference:printExpression(int, StringBuffer)
33096=FieldReference:setDepth(int)
33097=FieldReference:freshInferenceContext(Scope)
33098=FieldReference:fieldBinding()
33099=FieldReference:isTypeAccess()
33100=FieldReference:analyseAssignment(BlockScope, FlowContext, FlowInfo, Assignment, boolean)
33101=ChangeClasspathOperation:ChangeClasspathOperation(IJavaElement[], boolean)
33102=ChangeClasspathOperation:canModifyRoots()
33103=ChangeClasspathOperation:classpathChanged(ClasspathChange, boolean)
33104=ChangeClasspathOperation:isReadOnly()
33105=ChangeClasspathOperation:getSchedulingRule()
33106=Example:bar()
33107=Example:foo()
33108=Example:foo2()
33109=ReferenceExpression:getExactMethod()
33110=ReferenceExpression:traverse(ASTVisitor, BlockScope)
33111=ReferenceExpression:genericTypeArguments()
33112=ReferenceExpression:isConstructorReference()
33113=ReferenceExpression:isMethodReference()
33114=ReferenceExpression:cachedResolvedCopy(TypeBinding)
33115=ReferenceExpression:isPotentiallyCompatibleWith(TypeBinding, Scope)
33116=ReferenceExpression:resolveType(BlockScope)
33117=ReferenceExpression:shouldGenerateSecretReceiverVariable()
33118=ReferenceExpression:isArrayConstructorReference()
33119=ReferenceExpression:setFieldIndex(int)
33120=ReferenceExpression:printExpression(int, StringBuffer)
33121=ReferenceExpression:acceptPotentiallyCompatibleMethods(MethodBinding[])
33122=ReferenceExpression:setActualReceiverType(ReferenceBinding)
33123=ReferenceExpression:isPertinentToApplicability(TypeBinding, MethodBinding)
33124=ReferenceExpression:registerInferenceContext(ParameterizedGenericMethodBinding, InferenceContext18)
33125=ReferenceExpression:sIsMoreSpecific(TypeBinding, TypeBinding, Scope)
33126=ReferenceExpression:copy()
33127=ReferenceExpression:checkNullAnnotations(BlockScope)
33128=ReferenceExpression:isTypeAccess()
33129=ReferenceExpression:setDepth(int)
33130=ReferenceExpression:resolveExpressionExpecting(TypeBinding, Scope, InferenceContext18)
33131=ReferenceExpression:freshInferenceContext(Scope)
33132=ReferenceExpression:isExactMethodReference()
33133=ReferenceExpression:createPseudoExpressions(TypeBinding[])
33134=ReferenceExpression:getMethodBinding()
33135=ReferenceExpression:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo)
33136=ReferenceExpression:isCompatibleWith(TypeBinding, Scope)
33137=ReferenceExpression:getCompileTimeDeclaration(Scope, boolean, TypeBinding[])
33138=ReferenceExpression:initialize(CompilationResult, Expression, TypeReference[], char[], int)
33139=ReferenceExpression:shouldGenerateImplicitLambda(BlockScope)
33140=ReferenceExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
33141=ReferenceExpression:checkingPotentialCompatibility()
33142=ReferenceExpression:descriptorParametersAsArgumentExpressions()
33143=ReferenceExpression:isSuperAccess()
33144=ReferenceExpression:generateImplicitLambda(BlockScope, CodeStream, boolean)
33145=ReferenceExpression:ReferenceExpression()
33146=ReferenceExpression:generateCode(BlockScope, CodeStream, boolean)
33147=ReferenceExpression:getInferenceContext(ParameterizedMethodBinding)
33148=FullSourceWorkspaceCompletionTests:testPerfCompleteEmptyNameWithoutMethods()
33149=FullSourceWorkspaceCompletionTests:complete(String, String, String, String, String, int, int)
33150=FullSourceWorkspaceCompletionTests:FullSourceWorkspaceCompletionTests(String)
33151=FullSourceWorkspaceCompletionTests:suite()
33152=FullSourceWorkspaceCompletionTests:testPerfCompleteMemberAccess()
33153=FullSourceWorkspaceCompletionTests:testPerfCompleteNameWithoutMethods()
33154=FullSourceWorkspaceCompletionTests:testClass()
33155=FullSourceWorkspaceCompletionTests:testPerfCompleteName()
33156=FullSourceWorkspaceCompletionTests:testPerfCompleteEmptyNameWithoutTypes()
33157=FullSourceWorkspaceCompletionTests:setUp()
33158=FullSourceWorkspaceCompletionTests:tearDown()
33159=FullSourceWorkspaceCompletionTests:testPerfCompleteNameWithoutTypes()
33160=FullSourceWorkspaceCompletionTests:complete(String, String, String, String, String, int[], int, int)
33161=FullSourceWorkspaceCompletionTests:testPerfCompleteTypeReference()
33162=FullSourceWorkspaceCompletionTests:testPerfCompleteEmptyName()
33163=FullSourceWorkspaceCompletionTests:testPerfCompleteMethodDeclaration()
33164=FullSourceWorkspaceCompletionTests:TestCompletionRequestor:accept(CompletionProposal)
33165=LocalVirtualMachine:isRunning()
33166=LocalVirtualMachine:LocalVirtualMachine(Process, int, String)
33167=LocalVirtualMachine:cleanupTargetPath()
33168=LocalVirtualMachine:getDebugPortNumber()
33169=LocalVirtualMachine:getInputStream()
33170=LocalVirtualMachine:shutDown()
33171=LocalVirtualMachine:getOutputStream()
33172=LocalVirtualMachine:getErrorStream()
33173=LocalVirtualMachine:LocalVirtualMachine()
33174=CompletionContext:getTokenKind()
33175=CompletionContext:getVisibleElements(String)
33176=CompletionContext:getExpectedTypesKeys()
33177=CompletionContext:isInJavadocFormalReference()
33178=CompletionContext:isExtended()
33179=CompletionContext:isInJavadocText()
33180=CompletionContext:getTokenStart()
33181=CompletionContext:getTokenEnd()
33182=CompletionContext:getToken()
33183=CompletionContext:getTokenLocation()
33184=CompletionContext:getExpectedTypesSignatures()
33185=CompletionContext:isInJavadoc()
33186=CompletionContext:getOffset()
33187=CompletionContext:getEnclosingElement()
33188=ExecutionTests:ExecutionTests(String)
33189=ExecutionTests:testSuccess()
33190=ExecutionTests:suite()
33191=ExecutionTests:testFailure()
33192=TestB2:bar()
33193=TestB2:foo()
33194=CompilationUnitDeclaration:print(int, StringBuffer)
33195=CompilationUnitDeclaration:hasErrors()
33196=CompilationUnitDeclaration:CompilationUnitDeclaration(ProblemReporter, CompilationResult, int)
33197=CompilationUnitDeclaration:resolve()
33198=CompilationUnitDeclaration:record(LocalTypeBinding)
33199=CompilationUnitDeclaration:compilationResult()
33200=CompilationUnitDeclaration:abort(int, IProblem)
33201=CompilationUnitDeclaration:cleanUp()
33202=CompilationUnitDeclaration:tagAsHavingErrors()
33203=CompilationUnitDeclaration:analyseCode()
33204=CompilationUnitDeclaration:generateCode()
33205=CompilationUnitDeclaration:traverse(ASTVisitor, CompilationUnitScope)
33206=CompilationUnitDeclaration:getMainTypeName()
33207=CompilationUnitDeclaration:getFileName()
33208=CompilationUnitDeclaration:declarationOfType(char[][])
33209=CompilationUnitDeclaration:cleanUp(TypeDeclaration)
33210=CompilationUnitDeclaration:propagateInnerEmulationForAllLocalTypes()
33211=CompilationUnitDeclaration:checkUnusedImports()
33212=CompilationUnitDeclaration:isEmpty()
33213=A:temp()
33214=X03:foo(int, int)
33215=Z210070:foo(X210070)
33216=HashtableOfObjectToInt:rehash()
33217=HashtableOfObjectToInt:HashtableOfObjectToInt(int)
33218=HashtableOfObjectToInt:keysToArray(Object[])
33219=HashtableOfObjectToInt:size()
33220=HashtableOfObjectToInt:removeKey(Object)
33221=HashtableOfObjectToInt:containsKey(Object)
33222=HashtableOfObjectToInt:put(Object, int)
33223=HashtableOfObjectToInt:toString()
33224=HashtableOfObjectToInt:HashtableOfObjectToInt()
33225=HashtableOfObjectToInt:clone()
33226=HashtableOfObjectToInt:get(Object)
33227=RunJavaSearchTests:RunJavaSearchTests(String)
33228=RunJavaSearchTests:suite()
33229=RunJavaSearchTests:getTestClasses()
33230=X19:foo()
33231=DocumentAdapter:DocumentAdapter(IBuffer)
33232=DocumentAdapter:replace(int, int, String)
33233=DocumentAdapter:set(String)
33234=EncodingTests:convertToIndependantLineDelimiter(File)
33235=EncodingTests:EncodingTests(String)
33236=EncodingTests:test016()
33237=EncodingTests:test005()
33238=EncodingTests:test014()
33239=EncodingTests:test003()
33240=EncodingTests:test034()
33241=EncodingTests:test023()
33242=EncodingTests:test012()
33243=EncodingTests:test001()
33244=EncodingTests:test032()
33245=EncodingTests:test021()
33246=EncodingTests:testBug361356b()
33247=EncodingTests:testBug303511()
33248=EncodingTests:test030()
33249=EncodingTests:tearDownSuite()
33250=EncodingTests:testBug66898b()
33251=EncodingTests:tearDown()
33252=EncodingTests:setUpSuite()
33253=EncodingTests:testBug303511c()
33254=EncodingTests:compareContents(ICompilationUnit, String, boolean)
33255=EncodingTests:verifyUtf8BOM(IFile)
33256=EncodingTests:testBug66898()
33257=EncodingTests:test006()
33258=EncodingTests:test015()
33259=EncodingTests:test004()
33260=EncodingTests:testBug361356()
33261=EncodingTests:testBug303511a()
33262=EncodingTests:test013()
33263=EncodingTests:test002()
33264=EncodingTests:compareContents(ICompilationUnit, String)
33265=EncodingTests:test011()
33266=EncodingTests:testBug110576()
33267=EncodingTests:test033()
33268=EncodingTests:test022()
33269=EncodingTests:testBug361356a()
33270=EncodingTests:testBug70598()
33271=EncodingTests:test031()
33272=EncodingTests:testCreateCompilationUnitAndImportContainer()
33273=EncodingTests:testBug303511b()
33274=EncodingTests:suite()
33275=EncodingTests:setUp()
33276=EncodingTests:testBug255501()
33277=DeclarationVisitors:getSourceOrderDeclarationScanner(DeclarationVisitor, DeclarationVisitor)
33278=DeclarationVisitors:getDeclarationScanner(DeclarationVisitor, DeclarationVisitor)
33279=DeclarationVisitors:DeclarationVisitors()
33280=X11:X11()
33281=X11:X11(boolean, boolean, boolean, int, Object, Object, boolean)
33282=ASTNodesCollectorVisitor:endVisit(FieldDeclaration)
33283=ASTNodesCollectorVisitor:endVisit(ClassInstanceCreation)
33284=ASTNodesCollectorVisitor:endVisit(AnnotationTypeDeclaration)
33285=ASTNodesCollectorVisitor:endVisit(AnonymousClassDeclaration)
33286=ASTNodesCollectorVisitor:endVisit(VariableDeclarationStatement)
33287=ASTNodesCollectorVisitor:endVisit(AnnotationTypeMemberDeclaration)
33288=ASTNodesCollectorVisitor:endVisit(VariableDeclarationExpression)
33289=ASTNodesCollectorVisitor:endVisit(SuperFieldAccess)
33290=ASTNodesCollectorVisitor:getDetachedAstNodes()
33291=ASTNodesCollectorVisitor:add(ASTNode)
33292=ASTNodesCollectorVisitor:endVisit(ImportDeclaration)
33293=ASTNodesCollectorVisitor:endVisit(MemberRef)
33294=ASTNodesCollectorVisitor:endVisit(TypeDeclaration)
33295=ASTNodesCollectorVisitor:endVisit(QualifiedName)
33296=ASTNodesCollectorVisitor:detachedListElement(List)
33297=ASTNodesCollectorVisitor:endVisit(SimpleName)
33298=ASTNodesCollectorVisitor:endVisit(PackageDeclaration)
33299=ASTNodesCollectorVisitor:endVisit(SingleVariableDeclaration)
33300=ASTNodesCollectorVisitor:endVisit(ThisExpression)
33301=ASTNodesCollectorVisitor:endVisit(CompilationUnit)
33302=ASTNodesCollectorVisitor:endVisit(MethodInvocation)
33303=ASTNodesCollectorVisitor:endVisit(MethodDeclaration)
33304=ASTNodesCollectorVisitor:endVisit(SimpleType)
33305=ASTNodesCollectorVisitor:endVisit(EnumDeclaration)
33306=ASTNodesCollectorVisitor:endVisit(EnumConstantDeclaration)
33307=ASTNodesCollectorVisitor:endVisit(MethodRef)
33308=ASTNodesCollectorVisitor:endVisit(FieldAccess)
33309=ASTNodesCollectorVisitor:endVisit(VariableDeclarationFragment)
33310=ASTNodesCollectorVisitor:ASTNodesCollectorVisitor()
33311=ASTNodesCollectorVisitor:endVisit(SuperMethodInvocation)
33312=X02:foo()
33313=VariablePattern:VariablePattern(int, char[], int, int)
33314=VariablePattern:mustResolve()
33315=SourceIndexer:indexResolvedDocument()
33316=SourceIndexer:accept(IBinaryType, PackageBinding, AccessRestriction)
33317=SourceIndexer:purgeMethodStatements(TypeDeclaration)
33318=SourceIndexer:reduceParseTree(CompilationUnitDeclaration)
33319=SourceIndexer:accept(ICompilationUnit, AccessRestriction)
33320=SourceIndexer:accept(ISourceType[], PackageBinding, AccessRestriction)
33321=SourceIndexer:SourceIndexer(SearchDocument)
33322=SourceIndexer:resolveDocument()
33323=SourceIndexer:indexDocument()
33324=Main:main(String[])
33325=A81556:bar(XX81556)
33326=BuildEnv:CallbackRequestor:acceptBinding(String, IBinding)
33327=BuildEnv:beginFileProcessing(BuildContext)
33328=BuildEnv:createASTs(BuildContext[])
33329=BuildEnv:getTypeDeclarationsFromAdditionFiles(List<AbstractTypeDeclaration>)
33330=BuildEnv:completedBatchProcessing()
33331=BuildEnv:getFilesWithAnnotation()
33332=BuildEnv:BuildEnv(BuildContext[], BuildContext[], IJavaProject)
33333=BuildEnv:getCurrentDietAST()
33334=BuildEnv:beginBatchProcessing()
33335=BuildEnv:getTypeDeclaration(String)
33336=BuildEnv:close()
33337=BuildEnv:getProblems()
33338=BuildEnv:getAST()
33339=BuildEnv:completedFileProcessing()
33340=BuildEnv:getAllAnnotationTypes(Map<BuildContext, Set<AnnotationTypeDeclaration>>)
33341=BuildEnv:getASTFrom(IFile)
33342=BuildEnv:addTypeDependency(String)
33343=BuildEnv:completedProcessing()
33344=BuildEnv:getASTNodesWithAnnotations()
33345=BuildEnv:searchLocallyForBinding(IBinding)
33346=BuildEnv:getFileForNode(ASTNode)
33347=BuildEnv:getTypeDependencies()
33348=BuildEnv:getFileReader(IFile)
33349=BuildEnv:getFiler()
33350=BuildEnv:getAnnotationTypes()
33351=BuildEnv:hasGeneratedClassFiles()
33352=BuildEnv:getPackage(String)
33353=BuildEnv:CallbackRequestor:CallbackRequestor(ICompilationUnit[])
33354=BuildEnv:getInputStream(IFile)
33355=BuildEnv:addMessage(IFile, int, int, Severity, String, int, String[])
33356=BuildEnv:getFilesWithoutAnnotation()
33357=BuildEnv:searchLocallyForIFile(IBinding)
33358=BuildEnv:hasRaisedErrors()
33359=BuildEnv:addMarker(int, int, Severity, String, int, String[])
33360=BuildEnv:addProblem(IFile, int, int, Severity, String, int, String[])
33361=BuildEnv:postMarkers()
33362=BuildEnv:searchLocallyForTypeDeclarations()
33363=A:foo()
33364=AbstractMethodDeclaration:parseStatements(Parser, CompilationUnitDeclaration)
33365=AbstractMethodDeclaration:createArgumentBindings()
33366=AbstractMethodDeclaration:resolveReceiver()
33367=AbstractMethodDeclaration:checkArgumentsSize()
33368=AbstractMethodDeclaration:hasErrors()
33369=AbstractMethodDeclaration:bindThrownExceptions()
33370=AbstractMethodDeclaration:isDefaultConstructor()
33371=AbstractMethodDeclaration:isAnnotationMethod()
33372=AbstractMethodDeclaration:analyseArguments(LookupEnvironment, FlowInfo, Argument[], MethodBinding)
33373=AbstractMethodDeclaration:tagAsHavingIgnoredMandatoryErrors(int)
33374=AbstractMethodDeclaration:traverse(ASTVisitor, ClassScope)
33375=AbstractMethodDeclaration:isDefaultMethod()
33376=AbstractMethodDeclaration:isStatic()
33377=AbstractMethodDeclaration:isClinit()
33378=AbstractMethodDeclaration:isNative()
33379=AbstractMethodDeclaration:printReturnType(int, StringBuffer)
33380=AbstractMethodDeclaration:generateCode(ClassFile)
33381=AbstractMethodDeclaration:isMethod()
33382=AbstractMethodDeclaration:validateNullAnnotations(boolean)
33383=AbstractMethodDeclaration:typeParameters()
33384=AbstractMethodDeclaration:resolveStatements()
33385=AbstractMethodDeclaration:abort(int, CategorizedProblem)
33386=AbstractMethodDeclaration:getAllAnnotationContexts(int, List)
33387=AbstractMethodDeclaration:resolveJavadoc()
33388=AbstractMethodDeclaration:createArgumentBindings(Argument[], MethodBinding, MethodScope)
33389=AbstractMethodDeclaration:bindArguments()
33390=AbstractMethodDeclaration:resolve(ClassScope)
33391=AbstractMethodDeclaration:compilationResult()
33392=AbstractMethodDeclaration:print(int, StringBuffer)
33393=AbstractMethodDeclaration:printBody(int, StringBuffer)
33394=AbstractMethodDeclaration:getCompilationUnitDeclaration()
33395=AbstractMethodDeclaration:AbstractMethodDeclaration(CompilationResult)
33396=AbstractMethodDeclaration:tagAsHavingErrors()
33397=AbstractMethodDeclaration:isAbstract()
33398=AbstractMethodDeclaration:generateCode(ClassScope, ClassFile)
33399=AbstractMethodDeclaration:isInitializationMethod()
33400=AbstractMethodDeclaration:isConstructor()
33401=F:staticMethod()
33402=CreateCompilationUnitOperation:getCompilationUnit()
33403=CreateCompilationUnitOperation:getSchedulingRule()
33404=CreateCompilationUnitOperation:executeOperation()
33405=CreateCompilationUnitOperation:CreateCompilationUnitOperation(IPackageFragment, String, String, boolean)
33406=CreateCompilationUnitOperation:verify()
33407=InitializerWithChildrenInfo:getChildren()
33408=InitializerWithChildrenInfo:InitializerWithChildrenInfo(IJavaElement[])
33409=TestNormal:TestNormal(Point)
33410=TypeBindingTests308:testBug427337()
33411=TypeBindingTests308:testAnnotatedBinaryType4()
33412=TypeBindingTests308:test020()
33413=TypeBindingTests308:testBug426515()
33414=TypeBindingTests308:test425216()
33415=TypeBindingTests308:testHybridAnnotations()
33416=TypeBindingTests308:testAnnotatedBinaryType6()
33417=TypeBindingTests308:testBinaryWithoutGenericSignature()
33418=TypeBindingTests308:testAnnotationRecovery()
33419=TypeBindingTests308:suite()
33420=TypeBindingTests308:testBug460491_comment30()
33421=TypeBindingTests308:setUpSuite()
33422=TypeBindingTests308:verifyAnnotationsOnBinding(ITypeBinding, String[])
33423=TypeBindingTests308:TypeBindingTests308(String)
33424=TypeBindingTests308:testBug431810()
33425=TypeBindingTests308:test009()
33426=TypeBindingTests308:testAnnotatedBinaryType2()
33427=TypeBindingTests308:test018()
33428=TypeBindingTests308:test007()
33429=TypeBindingTests308:test425216a()
33430=TypeBindingTests308:test016()
33431=TypeBindingTests308:test005()
33432=TypeBindingTests308:testAnnotatedTypeIdentity3()
33433=TypeBindingTests308:test027()
33434=TypeBindingTests308:test014()
33435=TypeBindingTests308:test003()
33436=TypeBindingTests308:test025()
33437=TypeBindingTests308:testGenericMethod()
33438=TypeBindingTests308:test012()
33439=TypeBindingTests308:testBug487716a()
33440=TypeBindingTests308:test001()
33441=TypeBindingTests308:test425599()
33442=TypeBindingTests308:test023()
33443=TypeBindingTests308:test010()
33444=TypeBindingTests308:testBug431810a()
33445=TypeBindingTests308:test021()
33446=TypeBindingTests308:testAnnotatedBinaryType5()
33447=TypeBindingTests308:testAnnotatedBinaryType()
33448=TypeBindingTests308:testAnnotatedTypeIdentity()
33449=TypeBindingTests308:testHybridAnnotations2()
33450=TypeBindingTests308:verifyAnnotationOnType(Type, String[])
33451=TypeBindingTests308:test425216b()
33452=TypeBindingTests308:testBinaryAnnotationType()
33453=TypeBindingTests308:test019()
33454=TypeBindingTests308:testMemberType2()
33455=TypeBindingTests308:test008()
33456=TypeBindingTests308:test017()
33457=TypeBindingTests308:testAnnotatedBinaryType3()
33458=TypeBindingTests308:testIntersectionCastType()
33459=TypeBindingTests308:test006()
33460=TypeBindingTests308:testBinaryWithoutGenericSignature_b()
33461=TypeBindingTests308:test028()
33462=TypeBindingTests308:test015()
33463=TypeBindingTests308:test004()
33464=TypeBindingTests308:testAnnotatedTypeIdentity2()
33465=TypeBindingTests308:testBug427320()
33466=TypeBindingTests308:test026()
33467=TypeBindingTests308:test013()
33468=TypeBindingTests308:test002()
33469=TypeBindingTests308:testMemberTypeSource()
33470=TypeBindingTests308:test024()
33471=TypeBindingTests308:test011()
33472=TypeBindingTests308:testMemberType()
33473=TypeBindingTests308:test000()
33474=TypeBindingTests308:testBug487716()
33475=TypeBindingTests308:test022()
33476=TypeBindingTests308:verifyAnnotationsOnBinding(IVariableBinding, String[])
33477=TypeBindingTests308:testBinarySuperInterfaces()
33478=MemberDeclarationVisitor:visit(Argument, BlockScope)
33479=MemberDeclarationVisitor:visit(SingleMemberAnnotation, BlockScope)
33480=MemberDeclarationVisitor:matchNode(ASTNode)
33481=MemberDeclarationVisitor:visit(TypeDeclaration, BlockScope)
33482=MemberDeclarationVisitor:visit(SingleTypeReference, BlockScope)
33483=MemberDeclarationVisitor:getLocalElement(int)
33484=MemberDeclarationVisitor:visit(NormalAnnotation, BlockScope)
33485=MemberDeclarationVisitor:endVisit(LocalDeclaration, BlockScope)
33486=MemberDeclarationVisitor:visit(QualifiedNameReference, BlockScope)
33487=MemberDeclarationVisitor:endVisit(Argument, BlockScope)
33488=MemberDeclarationVisitor:endVisit(MarkerAnnotation, BlockScope)
33489=MemberDeclarationVisitor:MemberDeclarationVisitor(IJavaElement, ASTNode[], MatchingNodeSet, MatchLocator, boolean)
33490=MemberDeclarationVisitor:getInTypeOccurrenceCountForBinaryAnonymousType(TypeDeclaration, char[], IJavaElement, int)
33491=MemberDeclarationVisitor:endVisit(NormalAnnotation, BlockScope)
33492=MemberDeclarationVisitor:storeHandle(int)
33493=MemberDeclarationVisitor:visit(LocalDeclaration, BlockScope)
33494=MemberDeclarationVisitor:visit(SingleNameReference, BlockScope)
33495=MemberDeclarationVisitor:visit(MarkerAnnotation, BlockScope)
33496=MemberDeclarationVisitor:endVisit(SingleMemberAnnotation, BlockScope)
33497=MemberDeclarationVisitor:visit(LambdaExpression, BlockScope)
33498=MemberDeclarationVisitor:visit(QualifiedTypeReference, BlockScope)
33499=MemberDeclarationVisitor:getOtherElements(int)
33500=X04:test()
33501=SourcePosition:line()
33502=SourcePosition:file()
33503=SourcePosition:column()
33504=X:foo()
33505=X07:bar()
33506=EclipseCompiler:isSupportedOption(String)
33507=EclipseCompiler:getTask(Writer, JavaFileManager, DiagnosticListener<? super JavaFileObject>, Iterable<String>, Iterable<String>, Iterable<? extends JavaFileObject>)
33508=EclipseCompiler:getSourceVersions()
33509=EclipseCompiler:getStandardFileManager(DiagnosticListener<? super JavaFileObject>, Locale, Charset)
33510=EclipseCompiler:EclipseCompiler()
33511=EclipseCompiler:run(InputStream, OutputStream, OutputStream, String)
33512=CodeSnippetTest:getNoResultRequestor()
33513=CodeSnippetTest:testReturnTypeObject()
33514=CodeSnippetTest:testRunMethodInAnonymous6()
33515=CodeSnippetTest:testReturnDisplayStringVoid()
33516=CodeSnippetTest:testReturnTypeDouble()
33517=CodeSnippetTest:testReturnTypeShortObject()
33518=CodeSnippetTest:testRunMethodInAnonymous8()
33519=CodeSnippetTest:testReturnTypeVoid()
33520=CodeSnippetTest:testReturnDisplayStringInteger()
33521=CodeSnippetTest:testBug345334()
33522=CodeSnippetTest:testEvaluateExistingPackageAndNonExistingTypeImports()
33523=CodeSnippetTest:testReturnTypesIntArray()
33524=CodeSnippetTest:testRunMethodInAnonymous2()
33525=CodeSnippetTest:testRunMethodInAnonymous()
33526=CodeSnippetTest:testReturnDisplayStringObject()
33527=CodeSnippetTest:testReturnTypeStringArray()
33528=CodeSnippetTest:testEvaluateValidPackageImport()
33529=CodeSnippetTest:testRunMethodInAnonymous4()
33530=CodeSnippetTest:testEvaluateNonExistingTypeImport()
33531=CodeSnippetTest:testReturnTypeFloatArray()
33532=CodeSnippetTest:testInnerClassAnonymous()
33533=CodeSnippetTest:testEvaluateNonExistingPackageAndExistingTypeImports()
33534=CodeSnippetTest:testEvaluateValidPackageAndTypeImports()
33535=CodeSnippetTest:getCompilerOptions()
33536=CodeSnippetTest:testCheckedException()
33537=CodeSnippetTest:testReturnTypeCharacterObject()
33538=CodeSnippetTest:testFreeReturnInteger()
33539=CodeSnippetTest:testReturnTypeBoolean()
33540=CodeSnippetTest:testReturnDisplayStringCharacter()
33541=CodeSnippetTest:testFreeReturnClassDeclaration()
33542=CodeSnippetTest:testReturnTypeEmptyCodeSnippet()
33543=CodeSnippetTest:testReturnTypeString()
33544=CodeSnippetTest:testPackage()
33545=CodeSnippetTest:testImportTypeAndPackage()
33546=CodeSnippetTest:testDiamond()
33547=CodeSnippetTest:testFinallyError()
33548=CodeSnippetTest:testReturnTypeFloat()
33549=CodeSnippetTest:testReturnTypeFloatObject()
33550=CodeSnippetTest:testFor89632()
33551=CodeSnippetTest:testReturnTypeObjectArray()
33552=CodeSnippetTest:testInnerClassNamed()
33553=CodeSnippetTest:testReturnDisplayStringLong()
33554=CodeSnippetTest:testRunMethodInAnonymous7()
33555=CodeSnippetTest:testReturnDisplayStringEmptyCodeSnippet()
33556=CodeSnippetTest:testReturnDisplayStringFloat()
33557=CodeSnippetTest:testReturnDisplayStringString()
33558=CodeSnippetTest:testReturnTypeLong()
33559=CodeSnippetTest:testClass()
33560=CodeSnippetTest:CodeSnippetTest(String)
33561=CodeSnippetTest:testFinallyTwoBlock()
33562=CodeSnippetTest:testImportPackage()
33563=CodeSnippetTest:testReturnTypeInt()
33564=CodeSnippetTest:testRunMethodInAnonymous3()
33565=CodeSnippetTest:testReturnTypeIntegerObject()
33566=CodeSnippetTest:testReturnTypeChar()
33567=CodeSnippetTest:testEvaluateNonExistingPackageImport()
33568=CodeSnippetTest:testReturnTypeShort()
33569=CodeSnippetTest:testReturnTypeNoExplicitReturnedValue()
33570=CodeSnippetTest:testFinallyOneBlock()
33571=CodeSnippetTest:testReturnDisplayStringNoExplicitReturnedValue()
33572=CodeSnippetTest:testReturnTypeBooleanArray()
33573=CodeSnippetTest:testRunMethodInAnonymous5()
33574=CodeSnippetTest:testReturnTypeCharArray()
33575=CodeSnippetTest:testFreeReturnLocalVar()
33576=CodeSnippetTest:testReturnDisplayStringBoolean()
33577=CodeSnippetTest:testImportType()
33578=CodeSnippetTest:testEvaluateEmptyImport()
33579=CodeSnippetTest:testReturnDisplayStringShort()
33580=CodeSnippetTest:testReturnDisplayStringDouble()
33581=CodeSnippetTest:testEmptyStatement()
33582=CodeSnippetTest:testFreeReturnExpression()
33583=CodeSnippetTest:testEvaluateValidTypeImport()
33584=CodeSnippetTest:testReturnTypeDoubleArray()
33585=CodeSnippetTest:testReturnTypeShortArray()
33586=CodeSnippetTest:testReturnTypeLongArray()
33587=CodeSnippetTest:testFreeReturnAnonymous()
33588=CodeSnippetTest:testReturnTypeDoubleObject()
33589=CodeSnippetTest:testReturnTypeBooleanObject()
33590=CodeSnippetTest:testFreeReturnStatement()
33591=CodeSnippetTest:testReturnTypeLongObject()
33592=CodeSnippetTest:suite()
33593=Test:m(String, String, String, String)
33594=A:foo()
33595=Main:computeDefaultConfigurationLocation()
33596=Main:decode(String)
33597=Main:processCommandLine(String[])
33598=Main:getSplashLocation(URL[])
33599=Main:log(Object)
33600=Main:getArrayFromList(String)
33601=Main:closeLogFile()
33602=Main:addDevEntries(String, List)
33603=Main:resolve(String)
33604=Main:getConfigurationLocation()
33605=Main:load(URL, String)
33606=Main:compareVersion(Object[], Object[])
33607=Main:loadProperties(String)
33608=Main:buildURL(String, boolean)
33609=Main:loadConfiguration(String)
33610=Main:processConfiguration()
33611=Main:computeDefaultUserAreaLocation(String)
33612=Main:run(String[])
33613=Main:addBaseJars(String, ArrayList)
33614=Main:basicRun(String[])
33615=Main:mergeProperties(Properties, Properties)
33616=Main:adjustTrailingSlash(String, boolean)
33617=Main:main(String[])
33618=Main:openLogFile()
33619=Main:hexToByte(byte)
33620=Main:logForStream(OutputStream)
33621=Main:buildLocation(String, URL, String)
33622=Main:addEntry(URL, List)
33623=Main:computeLogFileLocation()
33624=Main:main(String)
33625=Main:setupVMProperties()
33626=Main:processDevArg(String)
33627=Main:setMultiValueProperty(String, String[])
33628=Main:getBootPath(String)
33629=Main:runCommand(String, String, String)
33630=Main:takeDownSplash()
33631=Main:handleSplash(URL[])
33632=Main:getVersionElements(String)
33633=Main:getInstallLocation()
33634=Main:setExitData()
33635=Main:getDevPath(URL)
33636=Main:searchForSplash(String[])
33637=Main:write(Object)
33638=Main:searchFor(String, String)
33639=TestValid:foo1()
33640=TestValid:foo2()
33641=X:x()
33642=SourceElementRequestorAdapter:acceptAnnotationTypeReference(char[][], int, int)
33643=SourceElementRequestorAdapter:acceptLineSeparatorPositions(int[])
33644=SourceElementRequestorAdapter:enterField(FieldInfo)
33645=SourceElementRequestorAdapter:acceptMethodReference(char[], int, int)
33646=SourceElementRequestorAdapter:acceptUnknownReference(char[][], int, int)
33647=SourceElementRequestorAdapter:enterConstructor(MethodInfo)
33648=SourceElementRequestorAdapter:enterInitializer(int, int)
33649=SourceElementRequestorAdapter:acceptProblem(CategorizedProblem)
33650=SourceElementRequestorAdapter:acceptImport(int, int, int, int, char[][], boolean, int)
33651=SourceElementRequestorAdapter:exitConstructor(int)
33652=SourceElementRequestorAdapter:acceptFieldReference(char[], int)
33653=SourceElementRequestorAdapter:acceptUnknownReference(char[], int)
33654=SourceElementRequestorAdapter:exitMethod(int, Expression)
33655=SourceElementRequestorAdapter:acceptConstructorReference(char[], int, int)
33656=SourceElementRequestorAdapter:enterType(TypeInfo)
33657=SourceElementRequestorAdapter:acceptTypeReference(char[], int)
33658=SourceElementRequestorAdapter:exitField(int, int, int)
33659=SourceElementRequestorAdapter:exitInitializer(int)
33660=SourceElementRequestorAdapter:acceptTypeReference(char[][], int, int)
33661=SourceElementRequestorAdapter:acceptPackage(ImportReference)
33662=SourceElementRequestorAdapter:acceptAnnotationTypeReference(char[], int)
33663=SourceElementRequestorAdapter:enterMethod(MethodInfo)
33664=SourceElementRequestorAdapter:exitCompilationUnit(int)
33665=SourceElementRequestorAdapter:exitType(int)
33666=SourceElementRequestorAdapter:enterCompilationUnit()
33667=Example:foo()
33668=ResolveMethodDeclarationInAnonymous3:foo()
33669=ResolveMethodDeclarationInAnonymous3:ResolveMethodDeclarationInAnonymous3(Object)
33670=X01f:foo()
33671=BufferManager:createNullBuffer(IOpenable)
33672=BufferManager:getBuffer(IOpenable)
33673=BufferManager:createBuffer(IOpenable)
33674=BufferManager:getOpenBuffers()
33675=BufferManager:getDefaultBufferFactory()
33676=BufferManager:addBuffer(IBuffer)
33677=BufferManager:removeBuffer(IBuffer)
33678=BufferManager:getDefaultBufferManager()
33679=ResolveMethodWithIncorrectParameter:bar()
33680=ResolveMethodWithIncorrectParameter:foo(int)
33681=MultiTypeDeclarationPattern:matchesDecodedKey(SearchPattern)
33682=MultiTypeDeclarationPattern:MultiTypeDeclarationPattern(char[][], char[][], char, int)
33683=MultiTypeDeclarationPattern:getIndexCategories()
33684=MultiTypeDeclarationPattern:MultiTypeDeclarationPattern(int)
33685=MultiTypeDeclarationPattern:getBlankPattern()
33686=MultiTypeDeclarationPattern:queryIn(Index)
33687=MultiTypeDeclarationPattern:print(StringBuffer)
33688=Test:main(String[])
33689=SwitchFlowContext:recordBreakFrom(FlowInfo)
33690=SwitchFlowContext:SwitchFlowContext(FlowContext, ASTNode, BranchLabel, boolean)
33691=SwitchFlowContext:individualToString()
33692=SwitchFlowContext:breakLabel()
33693=SwitchFlowContext:isBreakable()
33694=X:foo()
33695=X:foo()
33696=X13:X13(Object, Object)
33697=X13:foo()
33698=CharLiteral:CharLiteral(char[], int, int)
33699=CharLiteral:computeConstant()
33700=CharLiteral:traverse(ASTVisitor, BlockScope)
33701=CharLiteral:generateCode(BlockScope, CodeStream, boolean)
33702=CharLiteral:literalType(BlockScope)
33703=CharLiteral:computeValue()
33704=PerformanceTests:createInterestingFilesWithJ6(int, IJavaProject)
33705=PerformanceTests:createBoringFiles(int, IJavaProject)
33706=PerformanceTests:PerformanceTests(String)
33707=PerformanceTests:createGeneratingFiles(int, IJavaProject)
33708=PerformanceTests:setUp()
33709=PerformanceTests:_testGeneratingLotsOfFiles()
33710=PerformanceTests:_testInterestingFilesWithJ6()
33711=PerformanceTests:createFiles(int, String, String, IJavaProject)
33712=PerformanceTests:testBoringFiles()
33713=PerformanceTests:suite()
33714=ReloadingTestSuiteLoader:reload(Class)
33715=ReloadingTestSuiteLoader:load(String)
33716=ReloadingTestSuiteLoader:createLoader()
33717=BaseTypeBinding:toString()
33718=BaseTypeBinding:BaseTypeBinding(int, char[], char[])
33719=BaseTypeBinding:isCompatibleWith(TypeBinding)
33720=BaseTypeBinding:shortReadableName()
33721=BaseTypeBinding:isWidening(int, int)
33722=BaseTypeBinding:sourceName()
33723=BaseTypeBinding:qualifiedSourceName()
33724=BaseTypeBinding:getPackage()
33725=BaseTypeBinding:constantPoolName()
33726=BaseTypeBinding:readableName()
33727=BaseTypeBinding:isNarrowing(int, int)
33728=ExceptionTestCaseTest:ExceptionTestCaseTest(String)
33729=Test:foo(String)
33730=C:C2:C2(int)
33731=C:C(int)
33732=XMLComparer:collectAnnotations(Element, Map<String, Element>)
33733=XMLComparer:compareDeclarationContents(DeclarationContents, DeclarationContents)
33734=XMLComparer:collectTypes(Node, Map<String, Element>)
33735=XMLComparer:collectDeclarationContents(Element, DeclarationContents)
33736=XMLComparer:compareAttributes(Node, Node)
33737=XMLComparer:findNamedChildElement(Node, String)
33738=XMLComparer:_compare()
33739=XMLComparer:compareDeclarations(Element, Element)
33740=XMLComparer:compareAnnotationsNodes(Element, Element)
33741=XMLComparer:compareInterfacesNodes(Element, Element)
33742=XMLComparer:compareTypeMirrors(Element, Element)
33743=XMLComparer:test()
33744=XMLComparer:printDifferences()
33745=XMLComparer:optionalMatch(Map<String, Element>, Map<String, Element>)
33746=XMLComparer:XMLComparer(Document, Document, OutputStream, StringBuilder, boolean)
33747=XMLComparer:compare(Document, Document, OutputStream, StringBuilder, boolean)
33748=XMLComparer:compareSuperclassNodes(Element, Element)
33749=XMLComparer:findRootNode(Document)
33750=XMLComparer:printProblem(String)
33751=XMLComparer:compareAnnotationNodes(Element, Element)
33752=XMLComparer:compareAnnotationValuesNodes(Element, Element)
33753=ResolvedBinaryMethod:ResolvedBinaryMethod(JavaElement, String, String[], String)
33754=ResolvedBinaryMethod:unresolved()
33755=ResolvedBinaryMethod:isResolved()
33756=ResolvedBinaryMethod:getKey(boolean)
33757=ResolvedBinaryMethod:toStringInfo(int, StringBuffer, Object, boolean)
33758=ResolvedBinaryMethod:getKey()
33759=TryStatement:traverse(ASTVisitor, BlockScope)
33760=TryStatement:generateCode(BlockScope, CodeStream)
33761=TryStatement:resolve(BlockScope)
33762=TryStatement:generateSubRoutineInvocation(BlockScope, CodeStream)
33763=TryStatement:isSubRoutineEscaping()
33764=TryStatement:printStatement(int, StringBuffer)
33765=TryStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
33766=ImageBuilderInternalException:getThrowable()
33767=ImageBuilderInternalException:ImageBuilderInternalException(CoreException)
33768=ImageBuilderInternalException:printStackTrace()
33769=IServiceFactory:newInstance()
33770=A:foo()
33771=Y07:foo()
33772=X07:foo()
33773=A:goo()
33774=A:foo(int, int)
33775=A:foo()
33776=A:B:bar()
33777=ResolveLocalConstructorDeclaration:foo()
33778=IRuntimeInvisibleParameterAnnotationsAttribute:getParametersNumber()
33779=IRuntimeInvisibleParameterAnnotationsAttribute:getParameterAnnotations()
33780=B:computeDocumentNames(String[], int[], Object)
33781=A:foo(java.lang.String, long)
33782=SourceMethod:getDeclarationSourceEnd()
33783=SourceMethod:toString()
33784=SourceMethod:getTypeParameterBounds()
33785=SourceMethod:displayModifiers()
33786=SourceMethod:SourceMethod(int, int, char[], char[], int, int, char[][], char[][], char[][], char[])
33787=SourceMethod:getReturnTypeName()
33788=SourceMethod:isConstructor()
33789=SourceMethod:getArgumentNames()
33790=SourceMethod:getArgumentTypeNames()
33791=SourceMethod:getExceptionTypeNames()
33792=SourceMethod:toString(int)
33793=SourceMethod:getNameSourceStart()
33794=SourceMethod:getNameSourceEnd()
33795=SourceMethod:getSelector()
33796=SourceMethod:getModifiers()
33797=SourceMethod:tabString(int)
33798=SourceMethod:getTypeParameterNames()
33799=SourceMethod:setDeclarationSourceEnd(int)
33800=SourceMethod:setExplicitConstructorCall(String)
33801=SourceMethod:getDeclarationSourceStart()
33802=SourceMethod:getActualName()
33803=Clinit:isInitializationMethod()
33804=Clinit:traverse(ASTVisitor, ClassScope)
33805=Clinit:analyseCode(ClassScope, InitializationFlowContext, FlowInfo)
33806=Clinit:print(int, StringBuffer)
33807=Clinit:resolve(ClassScope)
33808=Clinit:Clinit(CompilationResult)
33809=Clinit:setAssertionSupport(FieldBinding, boolean)
33810=Clinit:generateCode(ClassScope, ClassFile)
33811=Clinit:parseStatements(Parser, CompilationUnitDeclaration)
33812=Clinit:generateCode(ClassScope, ClassFile, int)
33813=Clinit:isStatic()
33814=Clinit:isClinit()
33815=RunJDTCoreTests:RunJDTCoreTests(String)
33816=RunJDTCoreTests:suite()
33817=X:MethodName(int[][])
33818=X:foo(X<? extends E>)
33819=X:iterator()
33820=List:select(Predicate<T>)
33821=Predicate:is(T)
33822=X:add(T)
33823=X:select(Predicate<T>)
33824=Example:foo()
33825=ReturnStatement:generateCode(BlockScope, CodeStream)
33826=ReturnStatement:needValue()
33827=ReturnStatement:prepareSaveValueLocation(TryStatement)
33828=ReturnStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
33829=ReturnStatement:printStatement(int, StringBuffer)
33830=ReturnStatement:ReturnStatement(Expression, int, int)
33831=ReturnStatement:traverse(ASTVisitor, BlockScope)
33832=ReturnStatement:generateReturnBytecode(CodeStream)
33833=ReturnStatement:generateStoreSaveValueIfNecessary(CodeStream)
33834=ReturnStatement:resolve(BlockScope)
33835=InvalidInputException:InvalidInputException(String)
33836=InvalidInputException:InvalidInputException()
33837=A:updateAnnotation()
33838=AbstractJavaModelTests:addLibrary(IJavaProject, String, String, String[], String[], String)
33839=AbstractJavaModelTests:getCompilationUnit(String, String, String, String)
33840=AbstractJavaModelTests:assertElementsEqual(String, String, IJavaElement[], boolean)
33841=AbstractJavaModelTests:addLibrary(IJavaProject, String, String, String[], String, Map)
33842=AbstractJavaModelTests:assertMarkers(String, String, IJavaProject)
33843=AbstractJavaModelTests:createFile(String, InputStream)
33844=AbstractJavaModelTests:addLibraryEntry(IJavaProject, IPath, boolean)
33845=AbstractJavaModelTests:getExternalJCLSourcePathString()
33846=AbstractJavaModelTests:stopDeltas(DeltaListener)
33847=AbstractJavaModelTests:search(IJavaElement, int, IJavaSearchScope, SearchRequestor)
33848=AbstractJavaModelTests:getExternalJCLPathString(String, boolean)
33849=AbstractJavaModelTests:getFile(String)
33850=AbstractJavaModelTests:getExternalJCLSourcePath()
33851=AbstractJavaModelTests:startLogListening()
33852=AbstractJavaModelTests:selectParameterizedType(ICompilationUnit, String, int)
33853=AbstractJavaModelTests:assertSearchResults(String, String, Object)
33854=AbstractJavaModelTests:setUpSuite()
33855=AbstractJavaModelTests:getValueKind(Object)
33856=AbstractJavaModelTests:createLibrary(IJavaProject, String, String, String[], String[], String, Map)
33857=AbstractJavaModelTests:assertASTNodeEquals(String, String, ASTNode)
33858=AbstractJavaModelTests:search(String, int, int, IJavaSearchScope, SearchRequestor)
33859=AbstractJavaModelTests:deleteProject(String)
33860=AbstractJavaModelTests:addJavaNature(String)
33861=AbstractJavaModelTests:selectMethod(ICompilationUnit, String)
33862=AbstractJavaModelTests:printResourceTree(Object, StringBuffer, int)
33863=AbstractJavaModelTests:selectJavaElement(ICompilationUnit, String, int, int)
33864=AbstractJavaModelTests:getWorkingCopy(String, String, WorkingCopyOwner)
33865=AbstractJavaModelTests:getPackageFragment(String, String, String)
33866=AbstractJavaModelTests:getCompilationUnitFor(IJavaElement)
33867=AbstractJavaModelTests:getExternalJCLSourcePathString(String)
33868=AbstractJavaModelTests:AbstractJavaModelTests(String, int)
33869=AbstractJavaModelTests:deleteProjects(String[])
33870=AbstractJavaModelTests:deleteFolder(IPath)
33871=AbstractJavaModelTests:BasicProblemRequestor:acceptProblem(IProblem)
33872=AbstractJavaModelTests:DeltaListener:toString()
33873=AbstractJavaModelTests:createJar(String[], String, Map)
33874=AbstractJavaModelTests:assertMemberValuePairEquals(String, IMemberValuePair)
33875=AbstractJavaModelTests:assertDeletion(IJavaElement)
33876=AbstractJavaModelTests:selectParameterizedMethod(ICompilationUnit, String)
33877=AbstractJavaModelTests:AbstractJavaModelTests(String)
33878=AbstractJavaModelTests:getClassFile(String, String, String, String)
33879=AbstractJavaModelTests:addLibraryEntry(IJavaProject, IPath, IPath, IPath, IPath[], IPath[], IClasspathAttribute[], boolean)
33880=AbstractJavaModelTests:assertAnnotationsEqual(String, IAnnotation[])
33881=AbstractJavaModelTests:BasicProblemRequestor:isActive()
33882=AbstractJavaModelTests:DeltaListener:sortDeltas(IJavaElementDelta[])
33883=AbstractJavaModelTests:getSourceWorkspacePath()
33884=AbstractJavaModelTests:removeClasspathEntry(IJavaProject, IPath)
33885=AbstractJavaModelTests:assertElementExists(String, String, IJavaElement)
33886=AbstractJavaModelTests:newExternalWorkingCopy(String, String)
33887=AbstractJavaModelTests:copyDirectory(File, File)
33888=AbstractJavaModelTests:appendAnnotationMember(StringBuffer, IMemberValuePair)
33889=AbstractJavaModelTests:copy(File, File)
33890=AbstractJavaModelTests:deleteResource(IResource)
33891=AbstractJavaModelTests:BasicProblemRequestor:beginReporting()
33892=AbstractJavaModelTests:assertCreation(IJavaElement[])
33893=AbstractJavaModelTests:ProblemRequestor:isActive()
33894=AbstractJavaModelTests:setUpProjectCompliance(IJavaProject, String, boolean)
33895=AbstractJavaModelTests:DeltaListener:flush()
33896=AbstractJavaModelTests:assertHierarchyEquals(String, ITypeHierarchy)
33897=AbstractJavaModelTests:convertToIndependantLineDelimiter(File)
33898=AbstractJavaModelTests:getJavaProject(String)
33899=AbstractJavaModelTests:getWorkingCopy(String, boolean)
33900=AbstractJavaModelTests:getExternalJCLPath(String)
33901=AbstractJavaModelTests:getWorkingCopy(String, String)
33902=AbstractJavaModelTests:assertPackageFragmentRootsEqual(IPackageFragmentRoot[], String)
33903=AbstractJavaModelTests:assertDeltas(String, String)
33904=AbstractJavaModelTests:assertResourceEquals(String, String, IResource)
33905=AbstractJavaModelTests:getWorkspaceRoot()
33906=AbstractJavaModelTests:assertDeltas(String, String, DeltaListener)
33907=AbstractJavaModelTests:addLibraryEntry(String, boolean)
33908=AbstractJavaModelTests:addLibraryEntry(IJavaProject, IPath, IPath, IPath, IPath[], IPath[], boolean)
33909=AbstractJavaModelTests:clearDeltas()
33910=AbstractJavaModelTests:createJavaProject(String, String[], String[], String[], String)
33911=AbstractJavaModelTests:addExternalLibrary(IJavaProject, String, String[], String[], String)
33912=AbstractJavaModelTests:startLogListening(ILog)
33913=AbstractJavaModelTests:getPackageFragmentRoot(String, String)
33914=AbstractJavaModelTests:assertResourceTreeEquals(String, String, Object[])
33915=AbstractJavaModelTests:createJavaProject(String, String[], String[], String, String)
33916=AbstractJavaModelTests:assertStringsEqual(String, String, String[])
33917=AbstractJavaModelTests:createJavaProject(String, String[], String[], String[], String, String)
33918=AbstractJavaModelTests:selectType(ICompilationUnit, String)
33919=AbstractJavaModelTests:assertTypesEqual(String, String, IType[])
33920=AbstractJavaModelTests:getJCL15PlusLibraryIfNeeded(String)
33921=AbstractJavaModelTests:getLocalVariable(ISourceReference, String, String)
33922=AbstractJavaModelTests:getProject(String)
33923=AbstractJavaModelTests:ProblemRequestor:endReporting()
33924=AbstractJavaModelTests:addLibrary(IJavaProject, String, String, String[], String)
33925=AbstractJavaModelTests:assertResourceNamesEqual(String, String, Object[])
33926=AbstractJavaModelTests:assertProblems(String, String, ProblemRequestor)
33927=AbstractJavaModelTests:createJavaProject(String)
33928=AbstractJavaModelTests:DeltaListener:DeltaListener()
33929=AbstractJavaModelTests:assertSearchResults(String, Object)
33930=AbstractJavaModelTests:assertProblems(String, String, IProblem[], char[])
33931=AbstractJavaModelTests:attachSource(IPackageFragmentRoot, String, String)
33932=AbstractJavaModelTests:assertSearchResults(String, String, Object, boolean)
33933=AbstractJavaModelTests:assertElementsEqual(String, String, IJavaElement[])
33934=AbstractJavaModelTests:selectParameterizedMethod(ICompilationUnit, String, int)
33935=AbstractJavaModelTests:setupExternalJCL(String)
33936=AbstractJavaModelTests:assertResourcesEqual(String, String, Object[])
33937=AbstractJavaModelTests:createFile(String, byte[])
33938=AbstractJavaModelTests:DeltaListener:stackTraces()
33939=AbstractJavaModelTests:DeltaListener:resourceChanged(IResourceChangeEvent)
33940=AbstractJavaModelTests:setUp()
33941=AbstractJavaModelTests:refresh(IJavaProject)
33942=AbstractJavaModelTests:toString(String[])
33943=AbstractJavaModelTests:createJar(String[], String, String[], String, Map)
33944=AbstractJavaModelTests:selectType(ICompilationUnit, String, int)
33945=AbstractJavaModelTests:assertCreation(IJavaElement)
33946=AbstractJavaModelTests:createJavaProject(String, String[], String[], String[][], String[][], String[], String[][], String[][], boolean, boolean[], String, String[], String[][], String[][], String, boolean, boolean)
33947=AbstractJavaModelTests:getCompilationUnits(String, String, String)
33948=AbstractJavaModelTests:getSource(String, ISourceRange)
33949=AbstractJavaModelTests:ProblemRequestor:beginReporting()
33950=AbstractJavaModelTests:assertSourceEquals(String, String, String, boolean)
33951=AbstractJavaModelTests:waitForAutoBuild()
33952=AbstractJavaModelTests:BasicProblemRequestor:endReporting()
33953=AbstractJavaModelTests:ProblemRequestor:reset()
33954=AbstractJavaModelTests:buildModelTestSuite(Class)
33955=AbstractJavaModelTests:createJavaProject(String, String[], String[], String[], boolean[], String)
33956=AbstractJavaModelTests:waitForManualRefresh()
33957=AbstractJavaModelTests:createPattern(String, int, int, boolean)
33958=AbstractJavaModelTests:startDeltas(DeltaListener)
33959=AbstractJavaModelTests:setUpJCLClasspathVariables(String, boolean)
33960=AbstractJavaModelTests:assertTypesEqual(String, String, IType[], boolean)
33961=AbstractJavaModelTests:ensureCorrectPositioning(IParent, IJavaElement, IJavaElement)
33962=AbstractJavaModelTests:getWorkspacePath()
33963=AbstractJavaModelTests:createJavaProject(String, String[], String[], String, String, boolean)
33964=AbstractJavaModelTests:createFolder(IPath)
33965=AbstractJavaModelTests:addLibraryEntry(IJavaProject, String, String)
33966=AbstractJavaModelTests:sortResources(Object[])
33967=AbstractJavaModelTests:search(String, int, int, int, IJavaSearchScope, SearchRequestor)
33968=AbstractJavaModelTests:selectField(ICompilationUnit, String)
33969=AbstractJavaModelTests:DeltaListener:getDeltaFor(IJavaElement, boolean)
33970=AbstractJavaModelTests:createJavaProject(String, String[], String[], String[][], String[][], String[], String[][], String[][], boolean[], String, String[], String[][], String[][], String)
33971=AbstractJavaModelTests:getWorkingCopy(String, String, boolean)
33972=AbstractJavaModelTests:search(IJavaElement, int, int, IJavaSearchScope, SearchRequestor)
33973=AbstractJavaModelTests:simulateExit()
33974=AbstractJavaModelTests:selectionInfo(ICompilationUnit, String, int)
33975=AbstractJavaModelTests:setUpProjectCompliance(IJavaProject, String)
33976=AbstractJavaModelTests:codeSelect(ISourceReference, String, String)
33977=AbstractJavaModelTests:sortMarkers(IMarker[])
33978=AbstractJavaModelTests:removeClasspathEntry(IPath)
33979=AbstractJavaModelTests:getLocalVariable(String, String, String)
33980=AbstractJavaModelTests:deltaChildrenChanged(IJavaElementDelta)
33981=AbstractJavaModelTests:simulateRestart()
33982=AbstractJavaModelTests:assertClasspathEquals(IClasspathEntry[], String)
33983=AbstractJavaModelTests:stopDeltas()
33984=AbstractJavaModelTests:removeLibrary(IJavaProject, String, String)
33985=AbstractJavaModelTests:getExternalJCLPathString(String)
33986=AbstractJavaModelTests:assertLogEquals(String)
33987=AbstractJavaModelTests:isJCLPath(IPath)
33988=AbstractJavaModelTests:createJavaProject(String, String[], String, String[])
33989=AbstractJavaModelTests:touch(File)
33990=AbstractJavaModelTests:discardWorkingCopies(ICompilationUnit[])
33991=AbstractJavaModelTests:refreshExternalArchives(IJavaProject)
33992=AbstractJavaModelTests:assertSortedStringsEqual(String, String, String[])
33993=AbstractJavaModelTests:read(java.io.File)
33994=AbstractJavaModelTests:appendAnnotationMemberValue(StringBuffer, Object, int)
33995=AbstractJavaModelTests:buildModelTestSuite(int, Class)
33996=AbstractJavaModelTests:deleteResource(File)
33997=AbstractJavaModelTests:ProblemRequestor:acceptProblem(IProblem)
33998=AbstractJavaModelTests:startDeltas()
33999=AbstractJavaModelTests:getExternalJCLPathString()
34000=AbstractJavaModelTests:buildModelTestSuite(Class, long)
34001=AbstractJavaModelTests:sortElements(IJavaElement[])
34002=AbstractJavaModelTests:removeJavaNature(String)
34003=AbstractJavaModelTests:sortTypes(IType[])
34004=AbstractJavaModelTests:createProject(String)
34005=AbstractJavaModelTests:getWorkingCopy(String, String, WorkingCopyOwner, IProblemRequestor)
34006=AbstractJavaModelTests:getExternalJCLSourcePath(String)
34007=AbstractJavaModelTests:setClasspath(IJavaProject, IClasspathEntry[])
34008=AbstractJavaModelTests:getExternalJCLPath()
34009=AbstractJavaModelTests:getExternalJCLRootSourcePath()
34010=AbstractJavaModelTests:clearDeltas(DeltaListener)
34011=AbstractJavaModelTests:appendAnnotation(StringBuffer, IAnnotation)
34012=AbstractJavaModelTests:getNameSource(String, IJavaElement)
34013=AbstractJavaModelTests:assertSourceEquals(String, String, String)
34014=AbstractJavaModelTests:createLibrary(IJavaProject, String, String, String[], String[], String)
34015=AbstractJavaModelTests:deltaMovedTo(IJavaElementDelta)
34016=AbstractJavaModelTests:getExternalPath()
34017=AbstractJavaModelTests:simulateExitRestart()
34018=AbstractJavaModelTests:assertScopeEquals(String, IJavaSearchScope)
34019=AbstractJavaModelTests:DeltaListener:getCompilationUnitAST(ICompilationUnit, IJavaElementDelta)
34020=AbstractJavaModelTests:createJavaProject(String, String[], String)
34021=AbstractJavaModelTests:codeSelectAt(ISourceReference, String)
34022=AbstractJavaModelTests:DeltaListener:getDeltaFor(IJavaElement)
34023=AbstractJavaModelTests:assertStringsEqual(String, String[], String[])
34024=AbstractJavaModelTests:DeltaListener:waitForResourceDelta()
34025=AbstractJavaModelTests:assertExceptionEquals(String, String, Exception)
34026=AbstractJavaModelTests:selectTypeParameter(ICompilationUnit, String, int)
34027=AbstractJavaModelTests:stopLogListening()
34028=AbstractJavaModelTests:setUpJavaProject(String, String)
34029=AbstractJavaModelTests:tearDown()
34030=AbstractJavaModelTests:assertSortedElementsEqual(String, String, IJavaElement[])
34031=AbstractJavaModelTests:assertElementEquals(String, String, IJavaElement)
34032=AbstractJavaModelTests:selectLocalVariable(ICompilationUnit, String, int)
34033=AbstractJavaModelTests:addLibrary(String, String, String[], String)
34034=AbstractJavaModelTests:createJar(String[], String, String[], String)
34035=AbstractJavaModelTests:addLibraryEntry(IJavaProject, String, boolean)
34036=AbstractJavaModelTests:ProblemRequestor:initialize(char[])
34037=AbstractJavaModelTests:createJavaProject(String, String[], String[], String[][], String[][], String[], String[][], String[][], boolean, boolean[], String, String[], String[][], String[][], String, boolean)
34038=AbstractJavaModelTests:assertDeletion(IJavaElement[])
34039=AbstractJavaModelTests:addClassFolder(IJavaProject, String, String[], String)
34040=AbstractJavaModelTests:getCompilationUnit(String)
34041=AbstractJavaModelTests:addClasspathEntry(IJavaProject, IClasspathEntry)
34042=AbstractJavaModelTests:ProblemRequestor:ProblemRequestor()
34043=AbstractJavaModelTests:selectParameterizedType(ICompilationUnit, String)
34044=AbstractJavaModelTests:DeltaListener:searchForDelta(IJavaElement, IJavaElementDelta)
34045=AbstractJavaModelTests:newExternalWorkingCopy(String, IClasspathEntry[], IProblemRequestor, String)
34046=AbstractJavaModelTests:deltaMovedFrom(IJavaElementDelta)
34047=AbstractJavaModelTests:createFile(String, String)
34048=AbstractJavaModelTests:getExternalResourcePath(String)
34049=AbstractJavaModelTests:DeltaListener:DeltaListener(int)
34050=AbstractJavaModelTests:importJavaProject(String, String[], String[], String)
34051=AbstractJavaModelTests:assertMarkers(String, String, IMarker[])
34052=AbstractJavaModelTests:assertTypeParametersEqual(String, ITypeParameter[])
34053=AbstractJavaModelTests:assertDeltas(String, String, boolean, DeltaListener)
34054=AbstractJavaModelTests:setUpJCLClasspathVariables(String)
34055=AbstractJavaModelTests:setUpJavaProject(String, String, boolean)
34056=AbstractJavaModelTests:createJavaProject(String, String[], String[], String[], boolean[], String, String[], String[][], String[][], String)
34057=AbstractJavaModelTests:createFolder(String)
34058=AbstractJavaModelTests:getPluginDirectoryPath()
34059=AbstractJavaModelTests:selectField(ICompilationUnit, String, int)
34060=AbstractJavaModelTests:deltaContentChanged(IJavaElementDelta)
34061=AbstractJavaModelTests:deleteProject(IJavaProject)
34062=AbstractJavaModelTests:createJar(String[], String)
34063=AbstractJavaModelTests:DeltaListener:getCompilationUnitAST(ICompilationUnit)
34064=AbstractJavaModelTests:selectMethod(ICompilationUnit, String, int)
34065=AbstractJavaModelTests:createJavaProject(String, String[], String[], String)
34066=AbstractJavaModelTests:selectLocalVariable(ICompilationUnit, String)
34067=AbstractJavaModelTests:DeltaListener:getLastDelta()
34068=AbstractJavaModelTests:getFolder(IPath)
34069=AbstractJavaModelTests:createSourceZip(String[], String)
34070=AbstractJavaModelTests:assertDeltas(String, String, IJavaElementDelta)
34071=AbstractJavaModelTests:assertDeltas(String, String, boolean)
34072=AbstractJavaModelTests:newWorkingCopyOwner(IProblemRequestor)
34073=AbstractJavaModelTests:getExternalFile(String)
34074=AbstractJavaModelTests:addLibrary(IJavaProject, String, String, String[], String[], String[], String[], String, Map)
34075=AbstractJavaModelTests:setUpJavaProject(String)
34076=AbstractJavaModelTests:selectTypeParameter(ICompilationUnit, String)
34077=AbstractJavaModelTests:assertWorkingCopyDeltas(String, String)
34078=AbstractJavaModelTests:DeltaListener:elementChanged(ElementChangedEvent)
34079=AbstractJavaModelTests:createPattern(IJavaElement, int)
34080=AbstractJavaModelTests:getJavaModel()
34081=AbstractJavaModelTests:waitUntilIndexesReady()
34082=AbstractJavaModelTests:toIPathArray(String[])
34083=AbstractJavaModelTests:displayString(String, int)
34084=AbstractJavaModelTests:getWorkspace()
34085=Test:foo()
34086=JavadocArraySingleTypeReference:traverse(ASTVisitor, ClassScope)
34087=JavadocArraySingleTypeReference:reportDeprecatedType(TypeBinding, Scope)
34088=JavadocArraySingleTypeReference:JavadocArraySingleTypeReference(char[], int, long)
34089=JavadocArraySingleTypeReference:reportInvalidType(Scope)
34090=JavadocArraySingleTypeReference:traverse(ASTVisitor, BlockScope)
34091=SingleNameReference:unboundReferenceErrorName()
34092=SingleNameReference:computeConversion(Scope, TypeBinding, TypeBinding)
34093=SingleNameReference:analyseAssignment(BlockScope, FlowContext, FlowInfo, Assignment, boolean)
34094=SingleNameReference:resolveType(BlockScope)
34095=SingleNameReference:traverse(ASTVisitor, BlockScope)
34096=SingleNameReference:generateCode(BlockScope, CodeStream, boolean)
34097=SingleNameReference:reportError(BlockScope)
34098=SingleNameReference:checkFieldAccess(BlockScope)
34099=SingleNameReference:manageEnclosingInstanceAccessIfNecessary(BlockScope, FlowInfo)
34100=SingleNameReference:generateCompoundAssignment(BlockScope, CodeStream, Expression, int, int, boolean)
34101=SingleNameReference:SingleNameReference(char[], long)
34102=SingleNameReference:generateCompoundAssignment(BlockScope, CodeStream, MethodBinding, Expression, int, int, boolean)
34103=SingleNameReference:generateAssignment(BlockScope, CodeStream, Assignment, boolean)
34104=SingleNameReference:analyseCode(BlockScope, FlowContext, FlowInfo)
34105=SingleNameReference:generatePostIncrement(BlockScope, CodeStream, CompoundAssignment, boolean)
34106=SingleNameReference:analyseCode(BlockScope, FlowContext, FlowInfo, boolean)
34107=SingleNameReference:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo, boolean)
34108=SingleNameReference:genericTypeArguments()
34109=SingleNameReference:printExpression(int, StringBuffer)
34110=SingleNameReference:generateReceiver(CodeStream)
34111=X:setFoo(String, int, int, int)
34112=ASTRewritingModifyingRemoveTest:test0012()
34113=ASTRewritingModifyingRemoveTest:test0001()
34114=ASTRewritingModifyingRemoveTest:test0003()
34115=ASTRewritingModifyingRemoveTest:ASTRewritingModifyingRemoveTest(String)
34116=ASTRewritingModifyingRemoveTest:testBug446446_003()
34117=ASTRewritingModifyingRemoveTest:test0009()
34118=ASTRewritingModifyingRemoveTest:testBug446446_005()
34119=ASTRewritingModifyingRemoveTest:suite()
34120=ASTRewritingModifyingRemoveTest:testBug446446_001()
34121=ASTRewritingModifyingRemoveTest:test0011()
34122=ASTRewritingModifyingRemoveTest:test0013()
34123=ASTRewritingModifyingRemoveTest:test0002()
34124=ASTRewritingModifyingRemoveTest:test0004()
34125=ASTRewritingModifyingRemoveTest:test0006()
34126=ASTRewritingModifyingRemoveTest:testBug446446_004()
34127=ASTRewritingModifyingRemoveTest:allTests()
34128=ASTRewritingModifyingRemoveTest:test0010()
34129=ASTRewritingModifyingRemoveTest:testBug446446_002()
34130=ISourceAttribute:getSourceFileName()
34131=ISourceAttribute:getSourceFileIndex()
34132=A:bar()
34133=A:foo()
34134=A:foobar()
34135=A:foobar(int)
34136=A:foo()
34137=X10:foo()
34138=A:Example(boolean)
34139=B:foo(int)
34140=A:foo(int, int, int, int, int, int)
34141=A:bar(List)
34142=Test:f(int)
34143=ExceptionHandlingFlowContext:individualToString()
34144=ExceptionHandlingFlowContext:initsOnReturn()
34145=ExceptionHandlingFlowContext:recordReturnFrom(FlowInfo)
34146=ExceptionHandlingFlowContext:recordHandlingException(ReferenceBinding, UnconditionalFlowInfo, TypeBinding, ASTNode, boolean)
34147=ExceptionHandlingFlowContext:mergeUnhandledException(TypeBinding)
34148=ExceptionHandlingFlowContext:complainIfUnusedExceptionHandlers(BlockScope, TryStatement)
34149=ExceptionHandlingFlowContext:complainIfUnusedExceptionHandlers(AbstractMethodDeclaration)
34150=ExceptionHandlingFlowContext:initsOnException(ReferenceBinding)
34151=ExceptionHandlingFlowContext:ExceptionHandlingFlowContext(FlowContext, ASTNode, ReferenceBinding[], BlockScope, UnconditionalFlowInfo)
34152=X19:foo()
34153=EnumConstantDeclarationImpl:kind()
34154=EnumConstantDeclarationImpl:getDeclaringType()
34155=EnumConstantDeclarationImpl:EnumConstantDeclarationImpl(IVariableBinding, BaseProcessorEnv)
34156=EnumConstantDeclarationImpl:accept(DeclarationVisitor)
34157=PostfixExpression:traverse(ASTVisitor, BlockScope)
34158=PostfixExpression:checkCastCompatibility()
34159=PostfixExpression:printExpressionNoParenthesis(int, StringBuffer)
34160=PostfixExpression:generateCode(BlockScope, CodeStream, boolean)
34161=PostfixExpression:PostfixExpression(Expression, Expression, int, int)
34162=PostfixExpression:operatorToString()
34163=PostfixExpression:restrainUsageToNumericTypes()
34164=BreakStatement:traverse(ASTVisitor, BlockScope)
34165=BreakStatement:doesNotCompleteNormally()
34166=BreakStatement:BreakStatement(char[], int, int)
34167=BreakStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
34168=BreakStatement:printStatement(int, StringBuffer)
34169=ClassSignature:hashCode()
34170=ClassSignature:toString()
34171=ClassSignature:getTypeName()
34172=ClassSignature:ClassSignature(char[])
34173=ClassSignature:equals(Object)
34174=CompilationUnitTests:testFindPrimaryType2()
34175=CompilationUnitTests:testDefaultValue5()
34176=CompilationUnitTests:createWorkingCopy(String)
34177=CompilationUnitTests:testPackageDefaultFlag2()
34178=CompilationUnitTests:testGetElementAt2()
34179=CompilationUnitTests:testAnnotations18()
34180=CompilationUnitTests:testApplyEdit3()
34181=CompilationUnitTests:testGetKey1()
34182=CompilationUnitTests:testGetTypes()
34183=CompilationUnitTests:testAnnotations07()
34184=CompilationUnitTests:testTypeParameter1()
34185=CompilationUnitTests:testDefaultValue3()
34186=CompilationUnitTests:testGetTypeQualifiedName1()
34187=CompilationUnitTests:testPackageDefaultFlag4()
34188=CompilationUnitTests:testGetType()
34189=CompilationUnitTests:testGetCategories10()
34190=CompilationUnitTests:testGetElementAt4()
34191=CompilationUnitTests:testGetKey3()
34192=CompilationUnitTests:testAnnotations09()
34193=CompilationUnitTests:testTypeParameter3()
34194=CompilationUnitTests:testDefaultValue11()
34195=CompilationUnitTests:testDefaultValue1()
34196=CompilationUnitTests:testGetCategories01()
34197=CompilationUnitTests:testGetInnerTypes()
34198=CompilationUnitTests:testDeprecatedFlag01()
34199=CompilationUnitTests:testCodeCoverage()
34200=CompilationUnitTests:testAnnotations25()
34201=CompilationUnitTests:testGetCategories12()
34202=CompilationUnitTests:testBug78275()
34203=CompilationUnitTests:testGetContentsForNotPresentRemote()
34204=CompilationUnitTests:testGetOccurrenceCount01()
34205=CompilationUnitTests:testAnnotations14()
34206=CompilationUnitTests:testAnnotations03()
34207=CompilationUnitTests:testGetElementAt()
34208=CompilationUnitTests:testDeprecatedFlag10()
34209=CompilationUnitTests:testGetCategories03()
34210=CompilationUnitTests:testIsEnumConstant1()
34211=CompilationUnitTests:testAnnotations27()
34212=CompilationUnitTests:testGetCategories14()
34213=CompilationUnitTests:testSuperFlag1()
34214=CompilationUnitTests:testGetPackages()
34215=CompilationUnitTests:testAnnotations16()
34216=CompilationUnitTests:testNotPresent2()
34217=CompilationUnitTests:testAnnotations05()
34218=CompilationUnitTests:testGetMethod3()
34219=CompilationUnitTests:testGetCategories05()
34220=CompilationUnitTests:testGetTypeQualifiedName7()
34221=CompilationUnitTests:testGetMethods()
34222=CompilationUnitTests:testDeprecatedFlag05()
34223=CompilationUnitTests:testAnnotations21()
34224=CompilationUnitTests:testAnnotations10()
34225=CompilationUnitTests:testBug248312()
34226=CompilationUnitTests:test110172()
34227=CompilationUnitTests:testGetMethod1()
34228=CompilationUnitTests:testGetFullyQualifiedName6()
34229=CompilationUnitTests:testGetCategories07()
34230=CompilationUnitTests:testDeprecatedFlag03()
34231=CompilationUnitTests:testAnnotations23()
34232=CompilationUnitTests:testAnnotations12()
34233=CompilationUnitTests:createWorkingCopyComputingProblems(String)
34234=CompilationUnitTests:testAnnotations01()
34235=CompilationUnitTests:testGetFullyQualifiedName8()
34236=CompilationUnitTests:testGetCategories09()
34237=CompilationUnitTests:testFileDeleted()
34238=CompilationUnitTests:testGetTypeQualifiedName3()
34239=CompilationUnitTests:testDeprecatedFlag09()
34240=CompilationUnitTests:testGetChildrenForCategory02()
34241=CompilationUnitTests:testGetElementAt6()
34242=CompilationUnitTests:testTypeParameter4()
34243=CompilationUnitTests:testGetFullyQualifiedName2()
34244=CompilationUnitTests:testGetTypeQualifiedName5()
34245=CompilationUnitTests:testDeprecatedFlag07()
34246=CompilationUnitTests:testNameWithoutJavaLikeExtension()
34247=CompilationUnitTests:testDefaultValue8()
34248=CompilationUnitTests:testBug73884()
34249=CompilationUnitTests:testGetFullyQualifiedName4()
34250=CompilationUnitTests:testAnnotations17()
34251=CompilationUnitTests:testNotPresent1()
34252=CompilationUnitTests:testGetKey2()
34253=CompilationUnitTests:testAnnotations06()
34254=CompilationUnitTests:testDefaultValue6()
34255=CompilationUnitTests:testFindPrimaryType1()
34256=CompilationUnitTests:testIsEnumConstant2()
34257=CompilationUnitTests:testApplyEdit()
34258=CompilationUnitTests:testPackageDefaultFlag3()
34259=CompilationUnitTests:testAnnotations19()
34260=CompilationUnitTests:testApplyEdit2()
34261=CompilationUnitTests:testGetKey4()
34262=CompilationUnitTests:testAnnotations08()
34263=CompilationUnitTests:testGetFullyQualifiedName1()
34264=CompilationUnitTests:testTypeParameter2()
34265=CompilationUnitTests:testDefaultValue4()
34266=CompilationUnitTests:testGetTypeQualifiedName2()
34267=CompilationUnitTests:testGetElementAt3()
34268=CompilationUnitTests:testGetOccurrenceCount02()
34269=CompilationUnitTests:testAnnotations13()
34270=CompilationUnitTests:testGetPrimary()
34271=CompilationUnitTests:testAnnotations02()
34272=CompilationUnitTests:testDeprecatedFlag11()
34273=CompilationUnitTests:testDefaultValue2()
34274=CompilationUnitTests:testAnnotations26()
34275=CompilationUnitTests:testGetCategories11()
34276=CompilationUnitTests:testSuperFlag2()
34277=CompilationUnitTests:testStructureUnknownForCU()
34278=CompilationUnitTests:testAnnotations15()
34279=CompilationUnitTests:testAnnotations04()
34280=CompilationUnitTests:testStructureKnownForCU()
34281=CompilationUnitTests:testDefaultValue10()
34282=CompilationUnitTests:testCheckInterfaceMethodModifiers()
34283=CompilationUnitTests:testGetCategories02()
34284=CompilationUnitTests:testGetCategories13()
34285=CompilationUnitTests:testHasResourceChanged()
34286=CompilationUnitTests:testBug246594a()
34287=CompilationUnitTests:testCommitWorkingCopy()
34288=CompilationUnitTests:testImportContainerHasChildren()
34289=CompilationUnitTests:CompilationUnitTests(String)
34290=CompilationUnitTests:testGetMethod2()
34291=CompilationUnitTests:testGetFullyQualifiedName7()
34292=CompilationUnitTests:testGetTypeQualifiedName8()
34293=CompilationUnitTests:testGetCategories04()
34294=CompilationUnitTests:testDeprecatedFlag04()
34295=CompilationUnitTests:suite()
34296=CompilationUnitTests:testGetImports()
34297=CompilationUnitTests:testGetCategories15()
34298=CompilationUnitTests:testAnnotations22()
34299=CompilationUnitTests:tearDownSuite()
34300=CompilationUnitTests:tearDown()
34301=CompilationUnitTests:testAnnotations11()
34302=CompilationUnitTests:testGetCategories06()
34303=CompilationUnitTests:testDeprecatedFlag02()
34304=CompilationUnitTests:testAnnotations24()
34305=CompilationUnitTests:testGetChildrenForCategory01()
34306=CompilationUnitTests:testDefaultValue9()
34307=CompilationUnitTests:test120902()
34308=CompilationUnitTests:testGetFullyQualifiedName3()
34309=CompilationUnitTests:testGetFields()
34310=CompilationUnitTests:testGetCategories08()
34311=CompilationUnitTests:testGetTypeQualifiedName4()
34312=CompilationUnitTests:testGetSuperInterfaceTypeSignatures()
34313=CompilationUnitTests:testGetChildrenForCategory03()
34314=CompilationUnitTests:testDeprecatedFlag08()
34315=CompilationUnitTests:testGetImport()
34316=CompilationUnitTests:testTypeParameter5()
34317=CompilationUnitTests:testGetElementAt5()
34318=CompilationUnitTests:testDefaultValue7()
34319=CompilationUnitTests:testGetContentsForNotPresent()
34320=CompilationUnitTests:testGetFullyQualifiedName5()
34321=CompilationUnitTests:testBug246594()
34322=CompilationUnitTests:setUpSuite()
34323=CompilationUnitTests:testGetTypeQualifiedName6()
34324=CompilationUnitTests:testHasChildren()
34325=CompilationUnitTests:testDeprecatedFlag06()
34326=CompilationUnitTests:testPackageDefaultFlag1()
34327=CompilationUnitTests:testAnnotations20()
34328=CompilationUnitTests:testGetElementAt7()
34329=RenameResourceElementsOperation:getMainTaskName()
34330=RenameResourceElementsOperation:RenameResourceElementsOperation(IJavaElement[], IJavaElement[], String[], boolean)
34331=RenameResourceElementsOperation:verify(IJavaElement)
34332=RenameResourceElementsOperation:isRename()
34333=Y:foo(T)
34334=X:main(String[])
34335=A:foo()
34336=CompletionRequestorWrapper:CompletionRequestorWrapper(org.eclipse.jdt.core.ICompletionRequestor)
34337=CompletionRequestorWrapper:getParameterPackages(char[])
34338=CompletionRequestorWrapper:accept(CompletionProposal)
34339=CompletionRequestorWrapper:getParameterTypes(char[])
34340=CompletionRequestorWrapper:completionFailure(IProblem)
34341=Test:main(String[])
34342=MethodNameMatchRequestorWrapper:acceptMethod(char[], int, char[], char[], int, char[], char[], char[][], char[][], char[], int, String, AccessRestriction, int)
34343=MethodNameMatchRequestorWrapper:MethodNameMatchRequestorWrapper(MethodNameMatchRequestor, IJavaSearchScope)
34344=C:foo()
34345=CastExpression:checkUnsafeCast(Scope, TypeBinding, TypeBinding, TypeBinding, boolean)
34346=CastExpression:tagAsNeedCheckCast()
34347=CastExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
34348=CastExpression:checkNPE(BlockScope, FlowContext, FlowInfo, int)
34349=CastExpression:checkNeedForArgumentCasts(BlockScope, int, int, Expression, int, boolean, Expression, int, boolean)
34350=CastExpression:innermostCastedExpression()
34351=CastExpression:checkAlternateBinding(BlockScope, Expression, TypeBinding, MethodBinding, Expression[], TypeBinding[], TypeBinding[], InvocationSite)
34352=CastExpression:traverse(ASTVisitor, BlockScope)
34353=CastExpression:CastExpression(Expression, TypeReference)
34354=CastExpression:optimizedBooleanConstant()
34355=CastExpression:setExpectedType(TypeBinding)
34356=CastExpression:printExpression(int, StringBuffer)
34357=CastExpression:localVariableBinding()
34358=CastExpression:generateCode(BlockScope, CodeStream, boolean)
34359=CastExpression:nullStatus(FlowInfo, FlowContext)
34360=CastExpression:isIndirectlyUsed()
34361=CastExpression:checkNeedForArgumentCasts(BlockScope, Expression, TypeBinding, MethodBinding, Expression[], TypeBinding[], InvocationSite)
34362=CastExpression:checkNeedForAssignedCast(BlockScope, TypeBinding, CastExpression)
34363=CastExpression:tagAsUnnecessaryCast(Scope, TypeBinding)
34364=CastExpression:checkNeedForCastCast(BlockScope, CastExpression)
34365=CastExpression:checkNeedForArgumentCast(BlockScope, int, int, Expression, int)
34366=CastExpression:resolveType(BlockScope)
34367=CastExpression:checkNeedForEnclosingInstanceCast(BlockScope, Expression, TypeBinding, TypeBinding)
34368=ASTRewritingModifyingMoveTest:test0007()
34369=ASTRewritingModifyingMoveTest:test0009()
34370=ASTRewritingModifyingMoveTest:test0003()
34371=ASTRewritingModifyingMoveTest:test0005()
34372=ASTRewritingModifyingMoveTest:test0002()
34373=ASTRewritingModifyingMoveTest:suite()
34374=ASTRewritingModifyingMoveTest:test0008()
34375=ASTRewritingModifyingMoveTest:test0004()
34376=ASTRewritingModifyingMoveTest:test0006()
34377=ASTRewritingModifyingMoveTest:ASTRewritingModifyingMoveTest(String)
34378=ASTRewritingModifyingMoveTest:test0001()
34379=ASTRewritingModifyingMoveTest:allTests()
34380=IMethodParametersAttribute:getParameterName(int)
34381=IMethodParametersAttribute:getMethodParameterLength()
34382=IMethodParametersAttribute:getAccessFlags(int)
34383=B81556:foo()
34384=B81556:bar()
34385=X14d:foo()
34386=ExternalJavaProject:ExternalJavaProject(IClasspathEntry[])
34387=ExternalJavaProject:getOption(String, boolean)
34388=ExternalJavaProject:isOnClasspath(IJavaElement)
34389=ExternalJavaProject:exists()
34390=ExternalJavaProject:validateExistence(IResource)
34391=ExternalJavaProject:equals(Object)
34392=ExternalJavaProject:isOnClasspath(IResource)
34393=X15b:foo()
34394=CorrectException1:foo()
34395=X06:foo(int, int)
34396=X:foo()
34397=SingleVariableDeclaration:internalGetSetIntProperty(SimplePropertyDescriptor, boolean, int)
34398=SingleVariableDeclaration:setType(Type)
34399=SingleVariableDeclaration:varargsAnnotations()
34400=SingleVariableDeclaration:clone0(AST)
34401=SingleVariableDeclaration:accept0(ASTVisitor)
34402=SingleVariableDeclaration:internalExtraDimensionsProperty()
34403=SingleVariableDeclaration:internalGetSetBooleanProperty(SimplePropertyDescriptor, boolean, boolean)
34404=SingleVariableDeclaration:isVarargs()
34405=SingleVariableDeclaration:setModifiers(int)
34406=SingleVariableDeclaration:SingleVariableDeclaration(AST)
34407=SingleVariableDeclaration:internalExtraDimensions2Property()
34408=SingleVariableDeclaration:treeSize()
34409=SingleVariableDeclaration:memSize()
34410=SingleVariableDeclaration:subtreeMatch0(ASTMatcher, Object)
34411=SingleVariableDeclaration:getNodeType0()
34412=SingleVariableDeclaration:setVarargs(boolean)
34413=SingleVariableDeclaration:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
34414=SingleVariableDeclaration:getType()
34415=SingleVariableDeclaration:internalNameProperty()
34416=SingleVariableDeclaration:internalSetModifiers(int)
34417=SingleVariableDeclaration:propertyDescriptors(int)
34418=SingleVariableDeclaration:getModifiers()
34419=SingleVariableDeclaration:internalGetChildListProperty(ChildListPropertyDescriptor)
34420=SingleVariableDeclaration:internalInitializerProperty()
34421=SingleVariableDeclaration:modifiers()
34422=SingleVariableDeclaration:internalStructuralPropertiesForType(int)
34423=X03:foo()
34424=X03:destroy()
34425=IndentationSwitchCaseBug:IBreakIndentation()
34426=OpenableElementInfo:removeChild(IJavaElement)
34427=OpenableElementInfo:setIsStructureKnown(boolean)
34428=OpenableElementInfo:getChildren()
34429=OpenableElementInfo:setChildren(IJavaElement[])
34430=OpenableElementInfo:addChild(IJavaElement)
34431=OpenableElementInfo:isStructureKnown()
34432=SourceTypeBinding:memberTypes()
34433=SourceTypeBinding:hasMemberTypes()
34434=SourceTypeBinding:addSyntheticMethod(MethodBinding, boolean)
34435=SourceTypeBinding:faultInTypesForFieldsAndMethods()
34436=SourceTypeBinding:resolveTypeFor(FieldBinding)
34437=SourceTypeBinding:getUpdatedFieldBinding(FieldBinding, ReferenceBinding)
34438=SourceTypeBinding:sourceEnd()
34439=SourceTypeBinding:addDefaultAbstractMethods()
34440=SourceTypeBinding:getMethods(char[])
34441=SourceTypeBinding:getUpdatedMethodBinding(MethodBinding, ReferenceBinding)
34442=SourceTypeBinding:getExactConstructor(TypeBinding[])
34443=SourceTypeBinding:getSyntheticField(LocalVariableBinding)
34444=SourceTypeBinding:addSyntheticField(TypeBinding, BlockScope)
34445=SourceTypeBinding:toString()
34446=SourceTypeBinding:genericTypeSignature()
34447=SourceTypeBinding:getSyntheticBridgeMethod(MethodBinding)
34448=SourceTypeBinding:isGenericType()
34449=SourceTypeBinding:addSyntheticField(LocalVariableBinding)
34450=SourceTypeBinding:superclass()
34451=SourceTypeBinding:addDefaultAbstractMethod(MethodBinding)
34452=SourceTypeBinding:addSyntheticMethod(FieldBinding, boolean)
34453=SourceTypeBinding:syntheticAccessMethods()
34454=SourceTypeBinding:genericSignature()
34455=SourceTypeBinding:superInterfaces()
34456=SourceTypeBinding:addSyntheticField(AssertStatement, BlockScope)
34457=SourceTypeBinding:fields()
34458=SourceTypeBinding:addSyntheticField(ReferenceBinding)
34459=SourceTypeBinding:resolveTypesFor(MethodBinding)
34460=SourceTypeBinding:getExactMethod(char[], TypeBinding[], CompilationUnitScope)
34461=SourceTypeBinding:methods()
34462=SourceTypeBinding:verifyMethods(MethodVerifier)
34463=SourceTypeBinding:getSyntheticField(ReferenceBinding, boolean)
34464=SourceTypeBinding:getField(char[], boolean)
34465=SourceTypeBinding:sourceStart()
34466=SourceTypeBinding:syntheticFields()
34467=SourceTypeBinding:addSyntheticBridgeMethod(MethodBinding, MethodBinding)
34468=SourceTypeBinding:SourceTypeBinding(char[][], PackageBinding, ClassScope)
34469=SourceTypeBinding:typeVariables()
34470=SourceTypeBinding:getDefaultAbstractMethods()
34471=SourceTypeBinding:isEquivalentTo(TypeBinding)
34472=SimpleTypeVisitor:visitArrayType(ArrayType)
34473=SimpleTypeVisitor:visitInterfaceType(InterfaceType)
34474=SimpleTypeVisitor:visitWildcardType(WildcardType)
34475=SimpleTypeVisitor:visitPrimitiveType(PrimitiveType)
34476=SimpleTypeVisitor:visitTypeVariable(TypeVariable)
34477=SimpleTypeVisitor:visitTypeMirror(TypeMirror)
34478=SimpleTypeVisitor:visitClassType(ClassType)
34479=SimpleTypeVisitor:visitReferenceType(ReferenceType)
34480=SimpleTypeVisitor:visitAnnotationType(AnnotationType)
34481=SimpleTypeVisitor:SimpleTypeVisitor()
34482=SimpleTypeVisitor:visitVoidType(VoidType)
34483=SimpleTypeVisitor:visitEnumType(EnumType)
34484=SimpleTypeVisitor:visitDeclaredType(DeclaredType)
34485=A:test()
34486=RefMultiple:testRuntimeException()
34487=RefMultiple:testObject()
34488=RefMultiple:testException()
34489=Test:foo(Exception)
34490=ResolveLocalMethod:bar()
34491=Example:bar()
34492=Example:foo()
34493=Example:foo2()
34494=CompletionOnMarkerAnnotationName:CompletionOnMarkerAnnotationName(TypeReference, int)
34495=CompletionOnMarkerAnnotationName:resolveType(BlockScope)
34496=ICompilationUnitLocator:fromIFile(IFile)
34497=TestD1:foo()
34498=TestD1:bar()
34499=AMap:createAMap(String, String)
34500=B:B(M, N)
34501=AMethod:getMap(String, String)
34502=A:A(M, N)
34503=B:getMap(M, N)
34504=A:getMap(M, N)
34505=A:A()
34506=AMap:AMap(String, String)
34507=EclipseRoundCompleteEvent:State:State(BuildEnv)
34508=EclipseRoundCompleteEvent:State:sourceFilesCreated()
34509=EclipseRoundCompleteEvent:EclipseRoundCompleteEvent(BuildEnv)
34510=EclipseRoundCompleteEvent:State:errorRaised()
34511=EclipseRoundCompleteEvent:State:finalRound()
34512=EclipseRoundCompleteEvent:State:classFilesCreated()
34513=BlockScope:getEmulationPath(LocalVariableBinding)
34514=BlockScope:BlockScope(BlockScope)
34515=BlockScope:addLocalType(TypeDeclaration)
34516=BlockScope:referenceType()
34517=BlockScope:problemReporter()
34518=BlockScope:basicToString(int)
34519=BlockScope:emulateOuterAccess(LocalVariableBinding)
34520=BlockScope:addAnonymousType(TypeDeclaration, ReferenceBinding)
34521=BlockScope:getEmulationPath(ReferenceBinding, boolean, boolean)
34522=BlockScope:maxShiftedOffset()
34523=BlockScope:findVariable(char[])
34524=BlockScope:findLocalType(char[])
34525=BlockScope:toString(int)
34526=BlockScope:startIndex()
34527=BlockScope:computeLocalVariablePositions(int, int, CodeStream)
34528=BlockScope:isDuplicateLocalVariable(char[])
34529=BlockScope:getBinding(char[][], InvocationSite)
34530=BlockScope:BlockScope(int, Scope)
34531=BlockScope:getBinding(char[][], int, InvocationSite, boolean)
34532=BlockScope:propagateInnerEmulation(ReferenceBinding, boolean)
34533=BlockScope:addSubscope(Scope)
34534=BlockScope:checkAndSetModifiersForVariable(LocalVariableBinding)
34535=BlockScope:toString()
34536=BlockScope:allowBlankFinalFieldAssignment(FieldBinding)
34537=BlockScope:BlockScope(BlockScope, int)
34538=BlockScope:BlockScope(BlockScope, boolean)
34539=BlockScope:addLocalVariable(LocalVariableBinding)
34540=BlockScope:scopeIndex()
34541=Test:main(String[])
34542=AddFolderToIndex:AddFolderToIndex(IPath, IProject, char[][], char[][], IndexManager)
34543=AddFolderToIndex:toString()
34544=AddFolderToIndex:execute(IProgressMonitor)
34545=X15:CharOperation:equals(char[], char[], boolean)
34546=X15:computeRelevanceForCaseMatching(char[], char[])
34547=X15:CharOperation:prefixEquals(char[], char[], boolean)
34548=FieldInfoWithAnnotation:toString()
34549=FieldInfoWithAnnotation:reset()
34550=FieldInfoWithAnnotation:getAnnotations()
34551=FieldInfoWithAnnotation:FieldInfoWithAnnotation(FieldInfo, AnnotationInfo[])
34552=FieldInfoWithAnnotation:initialize()
34553=FormatterProblem:isZero(int)
34554=X04:foo(String)
34555=LoopingFlowContext:individualToString()
34556=LoopingFlowContext:recordContinueFrom(FlowInfo)
34557=LoopingFlowContext:removeFinalAssignmentIfAny(Reference)
34558=LoopingFlowContext:isContinuable()
34559=LoopingFlowContext:complainOnFinalAssignmentsInLoop(BlockScope, FlowInfo)
34560=LoopingFlowContext:continueLabel()
34561=LoopingFlowContext:isContinuedTo()
34562=LoopingFlowContext:recordFinalAssignment(VariableBinding, Reference)
34563=LoopingFlowContext:LoopingFlowContext(FlowContext, ASTNode, Label, Label, Scope)
34564=Region:Node:gatherLeaves(IJavaElement[], int)
34565=Region:remove(IJavaElement)
34566=Region:findExactNode(IJavaElement)
34567=Region:Node:clearChildren()
34568=Region:contains(IJavaElement)
34569=Region:Node:removeChild(IJavaElement)
34570=Region:findMostSpecificNodeFor(IJavaElement)
34571=Region:Node:countLeafNodes()
34572=Region:getElements()
34573=Region:Node:createChildFor(IJavaElement)
34574=Region:Node:Node()
34575=Region:add(IJavaElement)
34576=Region:countLeafNodes()
34577=Region:createNodeFor(IJavaElement)
34578=Region:getParent(IJavaElement)
34579=Region:findPath(List<Node>, IJavaElement)
34580=Region:Node:findChildFor(IJavaElement)
34581=Region:Node:isEmpty()
34582=AptSourceLocalVariableBinding:getAnnotations()
34583=AptSourceLocalVariableBinding:AptSourceLocalVariableBinding(LocalVariableBinding, MethodBinding)
34584=B:B()
34585=MethodNameAndTypeCache:clear()
34586=MethodNameAndTypeCache:rehash()
34587=MethodNameAndTypeCache:put(MethodBinding, int)
34588=MethodNameAndTypeCache:MethodNameAndTypeCache()
34589=MethodNameAndTypeCache:size()
34590=MethodNameAndTypeCache:hashCode(MethodBinding)
34591=MethodNameAndTypeCache:containsKey(MethodBinding)
34592=MethodNameAndTypeCache:toString()
34593=MethodNameAndTypeCache:equalsForNameAndType(MethodBinding, MethodBinding)
34594=MethodNameAndTypeCache:MethodNameAndTypeCache(int)
34595=MethodNameAndTypeCache:get(MethodBinding)
34596=RefMultiple:testUnbound()
34597=RefMultiple:test()
34598=RefMultiple:testSuper()
34599=RefMultiple:testExtends()
34600=AptBuilderTests:internalTestStopGeneratingFileInBuilder(boolean)
34601=AptBuilderTests:AptBuilderTests(String)
34602=AptBuilderTests:getSourcePath(String)
34603=AptBuilderTests:_testGeneratedFileInBuilder0(String)
34604=AptBuilderTests:testGeneratedFileInBuilder_ProjectRootAsSourceDir()
34605=AptBuilderTests:testGeneratedFileInBuilder()
34606=AptBuilderTests:testExtraDependencies()
34607=AptBuilderTests:testConfigMarker()
34608=AptBuilderTests:testDeletedGeneratedSourceFolder()
34609=AptBuilderTests:testStopGeneratingFileInBuilder_FullBuild()
34610=AptBuilderTests:testAPTRounding()
34611=AptBuilderTests:testDeletedParentFile()
34612=AptBuilderTests:_testGeneratedFileInBuilder1(String)
34613=AptBuilderTests:suite()
34614=AptBuilderTests:testNestedGeneratedFileInBuilder()
34615=AptBuilderTests:setUp()
34616=AptBuilderTests:testStopGeneratingFileInBuilder_IncrementalBuild()
34617=AptBuilderTests:testGeneratingIllegalTypeName()
34618=AptBuilderTests:getProjectName_ProjectRootAsSrcDir()
34619=AptBuilderTests:testTwoAnnotations()
34620=AptBuilderTests:testCaching()
34621=AptBuilderTests:testGeneratedFileInBuilder1()
34622=A:foo()
34623=A:launch()
34624=A:foo()
34625=ITypeRequestor:accept(ISourceType[], PackageBinding)
34626=ITypeRequestor:accept(ICompilationUnit)
34627=ITypeRequestor:accept(IBinaryType, PackageBinding)
34628=TypeNameRequestorWrapper:TypeNameRequestorWrapper(TypeNameRequestor)
34629=TypeNameRequestorWrapper:acceptType(int, char[], char[], char[][], String, AccessRestriction)
34630=SourceRange:SourceRange(int, int)
34631=SourceRange:toString()
34632=SourceRange:equals(Object)
34633=SourceRange:getLength()
34634=SourceRange:hashCode()
34635=SourceRange:isAvailable(ISourceRange)
34636=SourceRange:getOffset()
34637=Foo:Foo()
34638=X23:foo()
34639=A:foo()
34640=AnnotationValue:getValue()
34641=AnnotationValue:toString()
34642=AnnotationValue:getPosition()
34643=CorrectField2:foo()
34644=BranchStatement:generateCode(BlockScope, CodeStream)
34645=BranchStatement:resolve(BlockScope)
34646=BranchStatement:BranchStatement(char[], int, int)
34647=RuntimeVisibleAnnotationsAttribute:RuntimeVisibleAnnotationsAttribute(byte[], IConstantPool, int)
34648=RuntimeVisibleAnnotationsAttribute:getAnnotations()
34649=RuntimeVisibleAnnotationsAttribute:getAnnotationsNumber()
34650=CompoundAssignment:traverse(ASTVisitor, BlockScope)
34651=CompoundAssignment:operatorToString()
34652=CompoundAssignment:analyseCode(BlockScope, FlowContext, FlowInfo)
34653=CompoundAssignment:generateCode(BlockScope, CodeStream, boolean)
34654=CompoundAssignment:resolveType(BlockScope)
34655=CompoundAssignment:printExpressionNoParenthesis(int, StringBuffer)
34656=CompoundAssignment:CompoundAssignment(Expression, Expression, int, int)
34657=CompoundAssignment:restrainUsageToNumericTypes()
34658=Test:bar()
34659=Test:foo(int)
34660=ProblemReferenceBinding:closestMatch()
34661=ProblemReferenceBinding:toString()
34662=ProblemReferenceBinding:problemId()
34663=ProblemReferenceBinding:sourceName()
34664=ProblemReferenceBinding:problemReasonString(int)
34665=ProblemReferenceBinding:shortReadableName()
34666=ProblemReferenceBinding:setTypeAnnotations(AnnotationBinding[], boolean)
34667=ProblemReferenceBinding:clone(TypeBinding)
34668=ProblemReferenceBinding:closestReferenceMatch()
34669=ProblemReferenceBinding:hasTypeBit(int)
34670=ProblemReferenceBinding:ProblemReferenceBinding(char[][], ReferenceBinding, int)
34671=X01:foo(String)
34672=BranchLabel:branchWide()
34673=BranchLabel:BranchLabel(CodeStream)
34674=BranchLabel:forwardReferenceCount()
34675=BranchLabel:isCaseLabel()
34676=BranchLabel:initialize(CodeStream)
34677=BranchLabel:becomeDelegateFor(BranchLabel)
34678=BranchLabel:addForwardReference(int)
34679=BranchLabel:isStandardLabel()
34680=BranchLabel:BranchLabel()
34681=BranchLabel:toString()
34682=BranchLabel:place()
34683=BranchLabel:branch()
34684=BranchLabel:forwardReferences()
34685=X01d:foo()
34686=X03:foo()
34687=ASTRewritingTypeDeclTest:testTypeDeclChanges2_since_3()
34688=ASTRewritingTypeDeclTest:testEnumDeclaration4_since_3()
34689=ASTRewritingTypeDeclTest:test401848_since_3()
34690=ASTRewritingTypeDeclTest:testTypeDeclSpacingFields_only_2_3_4()
34691=ASTRewritingTypeDeclTest:testBug22161()
34692=ASTRewritingTypeDeclTest:testEnumDeclaration7_since_3()
34693=ASTRewritingTypeDeclTest:ASTRewritingTypeDeclTest(String)
34694=ASTRewritingTypeDeclTest:testCompilationUnit2()
34695=ASTRewritingTypeDeclTest:testAnonymousClassDeclaration_only_2_3_4()
34696=ASTRewritingTypeDeclTest:testVariableDeclarationFragmentWithAnnot_since_8()
34697=ASTRewritingTypeDeclTest:testImportDeclaration_since_3()
34698=ASTRewritingTypeDeclTest:ASTRewritingTypeDeclTest(String, int)
34699=ASTRewritingTypeDeclTest:testWildcardType_since_3()
34700=ASTRewritingTypeDeclTest:testAnnotationTypeDeclaration1_since_3()
34701=ASTRewritingTypeDeclTest:testTypeDeclarationChange2_since_3()
34702=ASTRewritingTypeDeclTest:testBug419057a()
34703=ASTRewritingTypeDeclTest:testTypeDeclRemoves_only_2()
34704=ASTRewritingTypeDeclTest:suite()
34705=ASTRewritingTypeDeclTest:testSingleMemberAnnotation1_since_3()
34706=ASTRewritingTypeDeclTest:testEnumDeclaration2_since_3()
34707=ASTRewritingTypeDeclTest:testTypeDeclSpacingMethods1_only_2_3_4()
34708=ASTRewritingTypeDeclTest:testSingleVariableDeclaration_only_2()
34709=ASTRewritingTypeDeclTest:testTypeDeclSpacingMethods2_only_2_3_4()
34710=ASTRewritingTypeDeclTest:testCompilationUnit()
34711=ASTRewritingTypeDeclTest:testEnumDeclaration5_since_3()
34712=ASTRewritingTypeDeclTest:testTypeDeclChanges_only_2()
34713=ASTRewritingTypeDeclTest:testEnumDeclaration6_since_3()
34714=ASTRewritingTypeDeclTest:testEnumDeclaration1_since_3()
34715=ASTRewritingTypeDeclTest:testSingleVariableDeclarationWithAnnotations_since_8()
34716=ASTRewritingTypeDeclTest:testEnumDeclaration3_since_3()
34717=ASTRewritingTypeDeclTest:testTypeDeclInserts_only_2()
34718=ASTRewritingTypeDeclTest:testTypeDeclarationChange()
34719=ASTRewritingTypeDeclTest:testVariableDeclarationFragment_only_2_3_4()
34720=ASTRewritingTypeDeclTest:testEnumDeclaration_since_3()
34721=ASTRewritingTypeDeclTest:testTypeDeclInsertFields1_only_2_3_4()
34722=ASTRewritingTypeDeclTest:testTypeParameters_since_3()
34723=ASTRewritingTypeDeclTest:testBug419057b()
34724=ASTRewritingTypeDeclTest:testPackageDeclaration()
34725=ParameterizedGenericMethodBinding:substitute(TypeBinding)
34726=ParameterizedGenericMethodBinding:ParameterizedGenericMethodBinding(MethodBinding, TypeBinding[], LookupEnvironment)
34727=ParameterizedGenericMethodBinding:inferFromExpectedType(TypeBinding, Scope)
34728=ParameterizedGenericMethodBinding:ParameterizedGenericMethodBinding(MethodBinding, RawTypeBinding, LookupEnvironment)
34729=ParameterizedGenericMethodBinding:computeCompatibleMethod(MethodBinding, TypeBinding[], Scope, InvocationSite)
34730=B:foo()
34731=TypeDeclarationMatch:TypeDeclarationMatch(IJavaElement, int, int, int, SearchParticipant, IResource)
34732=CompletionOnExplicitConstructorCall:CompletionOnExplicitConstructorCall(int)
34733=CompletionOnExplicitConstructorCall:resolve(BlockScope)
34734=CompletionOnExplicitConstructorCall:printStatement(int, StringBuffer)
34735=Test:main(String[])
34736=Version:Version()
34737=Version:id()
34738=Test:m()
34739=Test:foo()
34740=Test:bar()
34741=VMInputStream:available()
34742=VMInputStream:isRunning()
34743=VMInputStream:reset()
34744=VMInputStream:skip(long)
34745=VMInputStream:mark(int)
34746=VMInputStream:read()
34747=VMInputStream:VMInputStream(Process, InputStream)
34748=VMInputStream:markSupported()
34749=VMInputStream:read(byte)
34750=VMInputStream:read(byte, int, int)
34751=VMInputStream:close()
34752=IAnnotation:getElementName()
34753=IAnnotation:getMemberValuePairs()
34754=IAnnotation:getOccurrenceCount()
34755=X04:foo(String)
34756=Test:main(String[])
34757=MethodVerifier:checkAgainstInheritedMethods(MethodBinding, MethodBinding[], int)
34758=MethodVerifier:computeMethods()
34759=MethodVerifier:isAsVisible(MethodBinding, MethodBinding)
34760=MethodVerifier:resolvedExceptionTypesFor(MethodBinding)
34761=MethodVerifier:errorException()
34762=MethodVerifier:areTypesEqual(TypeBinding, TypeBinding)
34763=MethodVerifier:MethodVerifier(LookupEnvironment)
34764=MethodVerifier:checkPackagePrivateAbstractMethod(MethodBinding)
34765=MethodVerifier:problemReporter()
34766=MethodVerifier:areParametersEqual(MethodBinding, MethodBinding)
34767=MethodVerifier:checkInheritedMethods(MethodBinding[], int)
34768=MethodVerifier:checkMethods()
34769=MethodVerifier:toString()
34770=MethodVerifier:checkAbstractMethod(MethodBinding)
34771=MethodVerifier:checkExceptions(MethodBinding, MethodBinding)
34772=MethodVerifier:doesMethodOverride(MethodBinding, MethodBinding)
34773=MethodVerifier:runtimeException()
34774=MethodVerifier:areReturnTypesEqual(MethodBinding, MethodBinding)
34775=MethodVerifier:mustImplementAbstractMethod(MethodBinding)
34776=MethodVerifier:computeInheritedMethods()
34777=MethodVerifier:verify(SourceTypeBinding)
34778=MethodVerifier:isSameClassOrSubclassOf(ReferenceBinding, ReferenceBinding)
34779=MethodVerifier:problemReporter(MethodBinding)
34780=PolyParameterizedGenericMethodBinding:hashCode()
34781=PolyParameterizedGenericMethodBinding:PolyParameterizedGenericMethodBinding(ParameterizedGenericMethodBinding)
34782=PolyParameterizedGenericMethodBinding:equals(Object)
34783=MethodHandleTest:test009()
34784=MethodHandleTest:test011()
34785=MethodHandleTest:test001()
34786=MethodHandleTest:testClass()
34787=MethodHandleTest:test003()
34788=MethodHandleTest:test005()
34789=MethodHandleTest:test007()
34790=MethodHandleTest:MethodHandleTest(String)
34791=MethodHandleTest:suite()
34792=MethodHandleTest:test010()
34793=MethodHandleTest:test002()
34794=MethodHandleTest:test004()
34795=MethodHandleTest:test006()
34796=NLSTag:NLSTag(int, int, int, int)
34797=NLSTag:toString()
34798=RemoveFromIndex:execute(IProgressMonitor)
34799=RemoveFromIndex:RemoveFromIndex(String, IPath, IndexManager)
34800=RemoveFromIndex:toString()
34801=A:goo()
34802=A:bar()
34803=A:foo(int, int)
34804=BatchOperation:canModifyRoots()
34805=BatchOperation:executeOperation()
34806=BatchOperation:verify()
34807=BatchOperation:BatchOperation(IWorkspaceRunnable)
34808=CompletionElementNotifier:notifySourceElementRequestor(ImportReference, boolean)
34809=CompletionElementNotifier:getTypeParameterBounds(TypeParameter)
34810=CompletionElementNotifier:notifySourceElementRequestor(AbstractMethodDeclaration, TypeDeclaration, ImportReference)
34811=CompletionElementNotifier:getThrownExceptions(AbstractMethodDeclaration)
34812=CompletionElementNotifier:notifySourceElementRequestor(FieldDeclaration, TypeDeclaration)
34813=CompletionElementNotifier:CompletionElementNotifier(CompletionUnitStructureRequestor, boolean, ASTNode)
34814=CompletionElementNotifier:getArguments(Argument[])
34815=CompletionElementNotifier:getInterfaceNames(TypeDeclaration)
34816=CompletionElementNotifier:getSuperclassName(TypeDeclaration)
34817=CompletionElementNotifier:notifySourceElementRequestor(TypeDeclaration, boolean, TypeDeclaration, ImportReference)
34818=CompletionElementNotifier:notifySourceElementRequestor(CompilationUnitDeclaration, int, int, boolean, HashtableOfObjectToInt, Map)
34819=IDependent:getFileName()
34820=Test:m()
34821=AnnotationMirrorImpl:formatArgs(Object[])
34822=AnnotationMirrorImpl:getReflectionValue(Object, TypeBinding, Class<?>)
34823=AnnotationMirrorImpl:convertJDTValueToReflectionType(Object, TypeBinding, Class<?>)
34824=AnnotationMirrorImpl:equals(Object)
34825=AnnotationMirrorImpl:getMethodBinding(String)
34826=AnnotationMirrorImpl:hashCode()
34827=AnnotationMirrorImpl:getElementValuesWithDefaults()
34828=AnnotationMirrorImpl:getElementValues()
34829=AnnotationMirrorImpl:convertJDTArrayToReflectionArray(Object, TypeBinding, Class<?>)
34830=AnnotationMirrorImpl:AnnotationMirrorImpl(BaseProcessingEnvImpl, AnnotationBinding)
34831=AnnotationMirrorImpl:getAnnotationType()
34832=AnnotationMirrorImpl:equals(AnnotationBinding, AnnotationBinding)
34833=AnnotationMirrorImpl:invoke(Object, Method, Object[])
34834=AnnotationMirrorImpl:toString()
34835=X07:foo(int, int)
34836=X08:foo()
34837=NameSet:toString()
34838=NameSet:rehash()
34839=NameSet:add(char[])
34840=NameSet:NameSet(int)
34841=A_124645:m()
34842=A:foo()
34843=ASTBasedMemberDeclarationImpl:accept(DeclarationVisitor)
34844=ASTBasedMemberDeclarationImpl:getDeclaringType()
34845=ASTBasedMemberDeclarationImpl:ASTBasedMemberDeclarationImpl(ASTNode, IFile, BaseProcessorEnv)
34846=ASTBasedMemberDeclarationImpl:getDocComment()
34847=ASTBasedMemberDeclarationImpl:getContainingTypeAstNode()
34848=A:foo()
34849=SideCarVMLauncher:buildBootClassPath()
34850=SideCarVMLauncher:getCommandLine()
34851=ConditionalExpression:isBoxingCompatibleWith(TypeBinding, Scope)
34852=ConditionalExpression:computeNullStatus(FlowInfo, FlowInfo, FlowContext)
34853=ConditionalExpression:optimizedBooleanConstant()
34854=ConditionalExpression:isPolyExpression()
34855=ConditionalExpression:nullStatus(FlowInfo, FlowContext)
34856=ConditionalExpression:getExpressionContext()
34857=ConditionalExpression:checkNPE(BlockScope, FlowContext, FlowInfo, int)
34858=ConditionalExpression:isPotentiallyCompatibleWith(TypeBinding, Scope)
34859=ConditionalExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
34860=ConditionalExpression:generateOptimizedBoolean(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
34861=ConditionalExpression:traverse(ASTVisitor, BlockScope)
34862=ConditionalExpression:isFunctionalType()
34863=ConditionalExpression:isCompatibleWith(TypeBinding, Scope)
34864=ConditionalExpression:isPertinentToApplicability(TypeBinding, MethodBinding)
34865=ConditionalExpression:sIsMoreSpecific(TypeBinding, TypeBinding, Scope)
34866=ConditionalExpression:ConditionalExpression(Expression, Expression, Expression)
34867=ConditionalExpression:setExpectedType(TypeBinding)
34868=ConditionalExpression:printExpressionNoParenthesis(int, StringBuffer)
34869=ConditionalExpression:computeConversions(BlockScope, TypeBinding)
34870=ConditionalExpression:setExpressionContext(ExpressionContext)
34871=ConditionalExpression:getPolyExpressions()
34872=ConditionalExpression:resolveType(BlockScope)
34873=ConditionalExpression:generateCode(BlockScope, CodeStream, boolean)
34874=AnnotationContext:toString()
34875=AnnotationContext:AnnotationContext(Annotation, Expression, int, int)
34876=EclipseCompilerImpl:initializeAnnotationProcessorManager()
34877=EclipseCompilerImpl:call()
34878=EclipseCompilerImpl:EclipseCompilerImpl(PrintWriter, PrintWriter, boolean)
34879=EclipseCompilerImpl:getHandlingPolicy()
34880=EclipseCompilerImpl:cleanup()
34881=EclipseCompilerImpl:getProblemFactory()
34882=EclipseCompilerImpl:loggingExtraProblems()
34883=EclipseCompilerImpl:outputClassFiles(CompilationResult)
34884=EclipseCompilerImpl:initialize(PrintWriter, PrintWriter, boolean, Map<String, String>, CompilationProgress)
34885=EclipseCompilerImpl:setPaths(ArrayList, String, ArrayList, ArrayList, ArrayList, ArrayList, String)
34886=EclipseCompilerImpl:getCompilationUnits()
34887=TestBug68726negative1:s_foo()
34888=PackageReferenceMatch:PackageReferenceMatch(IJavaElement, int, int, int, boolean, SearchParticipant, IResource)
34889=StatementRecoveryTest:test0041()
34890=StatementRecoveryTest:test0043()
34891=StatementRecoveryTest:test0030()
34892=StatementRecoveryTest:test0017()
34893=StatementRecoveryTest:test0006()
34894=StatementRecoveryTest:checkParse(char[], String, String, String, String, String, String, String)
34895=StatementRecoveryTest:test0019()
34896=StatementRecoveryTest:test0008()
34897=StatementRecoveryTest:test0014()
34898=StatementRecoveryTest:test0003()
34899=StatementRecoveryTest:test0036()
34900=StatementRecoveryTest:test0025()
34901=StatementRecoveryTest:test0016()
34902=StatementRecoveryTest:test0005()
34903=StatementRecoveryTest:test0038()
34904=StatementRecoveryTest:test0027()
34905=StatementRecoveryTest:test0010()
34906=StatementRecoveryTest:test0045()
34907=StatementRecoveryTest:test0032()
34908=StatementRecoveryTest:test0021()
34909=StatementRecoveryTest:test0012()
34910=StatementRecoveryTest:test0001()
34911=StatementRecoveryTest:test0047()
34912=StatementRecoveryTest:test0034()
34913=StatementRecoveryTest:test0023()
34914=StatementRecoveryTest:testBug430336()
34915=StatementRecoveryTest:test0040()
34916=StatementRecoveryTest:test0031()
34917=StatementRecoveryTest:test0020()
34918=StatementRecoveryTest:test0042()
34919=StatementRecoveryTest:test0018()
34920=StatementRecoveryTest:suite()
34921=StatementRecoveryTest:test0007()
34922=StatementRecoveryTest:test0029()
34923=StatementRecoveryTest:test0009()
34924=StatementRecoveryTest:test0037()
34925=StatementRecoveryTest:test0026()
34926=StatementRecoveryTest:test0013()
34927=StatementRecoveryTest:test0002()
34928=StatementRecoveryTest:test0039()
34929=StatementRecoveryTest:test0028()
34930=StatementRecoveryTest:test0015()
34931=StatementRecoveryTest:test0004()
34932=StatementRecoveryTest:test0033()
34933=StatementRecoveryTest:test0022()
34934=StatementRecoveryTest:test0044()
34935=StatementRecoveryTest:test0035()
34936=StatementRecoveryTest:StatementRecoveryTest(String)
34937=StatementRecoveryTest:test0024()
34938=StatementRecoveryTest:test0011()
34939=StatementRecoveryTest:test0046()
34940=ComplianceDiagnoseTest:test0062()
34941=ComplianceDiagnoseTest:test421477()
34942=ComplianceDiagnoseTest:test0009()
34943=ComplianceDiagnoseTest:test0040()
34944=ComplianceDiagnoseTest:test0051()
34945=ComplianceDiagnoseTest:testBug399778()
34946=ComplianceDiagnoseTest:_test0032()
34947=ComplianceDiagnoseTest:test0060()
34948=ComplianceDiagnoseTest:test0007()
34949=ComplianceDiagnoseTest:test0055()
34950=ComplianceDiagnoseTest:suite()
34951=ComplianceDiagnoseTest:test0020()
34952=ComplianceDiagnoseTest:test0033()
34953=ComplianceDiagnoseTest:test0044()
34954=ComplianceDiagnoseTest:test0053()
34955=ComplianceDiagnoseTest:test0064()
34956=ComplianceDiagnoseTest:testBug399780()
34957=ComplianceDiagnoseTest:test0031()
34958=ComplianceDiagnoseTest:test0042()
34959=ComplianceDiagnoseTest:_test0030()
34960=ComplianceDiagnoseTest:test0036()
34961=ComplianceDiagnoseTest:test0001()
34962=ComplianceDiagnoseTest:test0047()
34963=ComplianceDiagnoseTest:test0014()
34964=ComplianceDiagnoseTest:test0025()
34965=ComplianceDiagnoseTest:test0034()
34966=ComplianceDiagnoseTest:test0045()
34967=ComplianceDiagnoseTest:ComplianceDiagnoseTest(String)
34968=ComplianceDiagnoseTest:test0012()
34969=ComplianceDiagnoseTest:test0058()
34970=ComplianceDiagnoseTest:runComplianceParserTest(String[], String, String, String, String)
34971=ComplianceDiagnoseTest:test0023()
34972=ComplianceDiagnoseTest:_test0024()
34973=ComplianceDiagnoseTest:test0005()
34974=ComplianceDiagnoseTest:test0018()
34975=ComplianceDiagnoseTest:test0029()
34976=ComplianceDiagnoseTest:test0038()
34977=ComplianceDiagnoseTest:test0003()
34978=ComplianceDiagnoseTest:test0049()
34979=ComplianceDiagnoseTest:runComplianceParserTest(String[], String, String, String)
34980=ComplianceDiagnoseTest:test0016()
34981=ComplianceDiagnoseTest:test0027()
34982=ComplianceDiagnoseTest:test0050()
34983=ComplianceDiagnoseTest:test0063()
34984=ComplianceDiagnoseTest:test0019()
34985=ComplianceDiagnoseTest:test0061()
34986=ComplianceDiagnoseTest:test429110()
34987=ComplianceDiagnoseTest:test0008()
34988=ComplianceDiagnoseTest:testBug391201()
34989=ComplianceDiagnoseTest:test406846()
34990=ComplianceDiagnoseTest:test0043()
34991=ComplianceDiagnoseTest:test0010()
34992=ComplianceDiagnoseTest:test0056()
34993=ComplianceDiagnoseTest:test0021()
34994=ComplianceDiagnoseTest:test0041()
34995=ComplianceDiagnoseTest:testBug399781()
34996=ComplianceDiagnoseTest:test0052()
34997=ComplianceDiagnoseTest:testBug399778a()
34998=ComplianceDiagnoseTest:testClass()
34999=ComplianceDiagnoseTest:testBug440285()
35000=ComplianceDiagnoseTest:test0054()
35001=ComplianceDiagnoseTest:test0013()
35002=ComplianceDiagnoseTest:test0059()
35003=ComplianceDiagnoseTest:test401850()
35004=ComplianceDiagnoseTest:test0037()
35005=ComplianceDiagnoseTest:runComplianceParserTest(String[], String, String, String, String, String)
35006=ComplianceDiagnoseTest:test0002()
35007=ComplianceDiagnoseTest:test0048()
35008=ComplianceDiagnoseTest:test0011()
35009=ComplianceDiagnoseTest:test0057()
35010=ComplianceDiagnoseTest:testBug399773()
35011=ComplianceDiagnoseTest:test0022()
35012=ComplianceDiagnoseTest:test0035()
35013=ComplianceDiagnoseTest:runComplianceParserTest(String[], String, String, String, String, String, String)
35014=ComplianceDiagnoseTest:test428605()
35015=ComplianceDiagnoseTest:test0046()
35016=ComplianceDiagnoseTest:test0017()
35017=ComplianceDiagnoseTest:test0028()
35018=ComplianceDiagnoseTest:test0006()
35019=ComplianceDiagnoseTest:test0015()
35020=ComplianceDiagnoseTest:test0026()
35021=ComplianceDiagnoseTest:test0039()
35022=ComplianceDiagnoseTest:test0004()
35023=SampleASTs:oneOfEach(AST)
35024=SampleASTs:oneOfEachList(AST)
35025=InMemoryNameEnvironment:cleanup()
35026=InMemoryNameEnvironment:isPackage(char[][], char[])
35027=InMemoryNameEnvironment:findType(char[][])
35028=InMemoryNameEnvironment:isPackageFromClassLibs(char[][], char[])
35029=InMemoryNameEnvironment:findTypeFromClassLibs(char[], char[][])
35030=InMemoryNameEnvironment:InMemoryNameEnvironment(String[], INameEnvironment[])
35031=InMemoryNameEnvironment:findType(char[], char[][])
35032=I:id(int, int)
35033=A:lambdas()
35034=A:run()
35035=AccessRule:getProblemId()
35036=AccessRule:ignoreIfBetter()
35037=AccessRule:toString()
35038=AccessRule:AccessRule(char[], int, boolean)
35039=AccessRule:equals(Object)
35040=AccessRule:AccessRule(char[], int)
35041=AccessRule:hashCode()
35042=LongLiteralMinValue:LongLiteralMinValue()
35043=LongLiteralMinValue:computeConstant()
35044=DocumentElementParser:consumeModifiers()
35045=DocumentElementParser:parseField(char[])
35046=DocumentElementParser:consumeDefaultModifiers()
35047=DocumentElementParser:parseConstructor(char[])
35048=DocumentElementParser:consumeClassHeaderName1()
35049=DocumentElementParser:parseMethod(char[])
35050=DocumentElementParser:consumeStaticInitializer()
35051=DocumentElementParser:consumeClassDeclaration()
35052=DocumentElementParser:consumeEnhancedForStatementHeaderInit(boolean)
35053=DocumentElementParser:consumeDiet()
35054=DocumentElementParser:pushOnIntArrayStack(int[])
35055=DocumentElementParser:consumeMethodHeaderName(boolean)
35056=DocumentElementParser:consumeExitVariableWithInitialization()
35057=DocumentElementParser:consumeConstructorHeader()
35058=DocumentElementParser:consumePushRealModifiers()
35059=DocumentElementParser:checkComment()
35060=DocumentElementParser:consumeClassBodyDeclaration()
35061=DocumentElementParser:consumePackageComment()
35062=DocumentElementParser:consumeStaticImportOnDemandDeclarationName()
35063=DocumentElementParser:consumeConstructorHeaderName()
35064=DocumentElementParser:consumeInternalCompilationUnitWithTypes()
35065=DocumentElementParser:consumeSingleStaticImportDeclarationName()
35066=DocumentElementParser:consumeMethodHeaderExtendedDims()
35067=DocumentElementParser:consumePushModifiers()
35068=DocumentElementParser:endParse(int)
35069=DocumentElementParser:consumeInterfaceHeaderName1()
35070=DocumentElementParser:parsePackage(char[])
35071=DocumentElementParser:problemReporter()
35072=DocumentElementParser:consumeInternalCompilationUnit()
35073=DocumentElementParser:flushCommentsDefinedPriorTo(int)
35074=DocumentElementParser:initialize()
35075=DocumentElementParser:consumeMethodHeaderNameWithTypeParameters(boolean)
35076=DocumentElementParser:consumeTypeImportOnDemandDeclarationName()
35077=DocumentElementParser:parseCompilationUnit(ICompilationUnit)
35078=DocumentElementParser:DocumentElementParser(IDocumentElementRequestor, IProblemFactory, CompilerOptions)
35079=DocumentElementParser:consumePackageDeclarationNameWithModifiers()
35080=DocumentElementParser:parseType(char[])
35081=DocumentElementParser:consumeInterfaceDeclaration()
35082=DocumentElementParser:consumeConstructorDeclaration()
35083=DocumentElementParser:parse()
35084=DocumentElementParser:consumeCatchFormalParameter()
35085=DocumentElementParser:consumePackageDeclarationName()
35086=DocumentElementParser:isLocalDeclaration()
35087=DocumentElementParser:consumeFormalParameter(boolean)
35088=DocumentElementParser:resumeOnSyntaxError()
35089=DocumentElementParser:toString()
35090=DocumentElementParser:returnTypeName(TypeReference)
35091=DocumentElementParser:consumeExitVariableWithoutInitialization()
35092=DocumentElementParser:consumeMethodDeclaration(boolean, boolean)
35093=DocumentElementParser:consumeCompilationUnit()
35094=DocumentElementParser:consumeMethodHeader()
35095=DocumentElementParser:consumeFieldDeclaration()
35096=DocumentElementParser:consumeStaticOnly()
35097=DocumentElementParser:consumeEnterVariable()
35098=DocumentElementParser:consumeEnterCompilationUnit()
35099=DocumentElementParser:consumeSingleTypeImportDeclarationName()
35100=DocumentElementParser:parseInitializer(char[])
35101=DocumentElementParser:parseImport(char[])
35102=DocumentElementParser:consumeLocalVariableDeclaration()
35103=DocumentElementParser:initialize(boolean)
35104=DocumentElementParser:consumeClassHeader()
35105=DocumentElementParser:consumeInterfaceHeader()
35106=DocumentElementParser:resetModifiers()
35107=A:A()
35108=X92210:foo()
35109=Argument:hasElidedType()
35110=Argument:createBinding(MethodScope, TypeBinding)
35111=Argument:isVarArgs()
35112=Argument:bind(MethodScope, TypeBinding, boolean)
35113=Argument:resolveForCatch(BlockScope)
35114=Argument:hasNullTypeAnnotation(AnnotationPosition)
35115=Argument:print(int, StringBuffer)
35116=Argument:printStatement(int, StringBuffer)
35117=Argument:isRecoveredFromLoneIdentifier()
35118=Argument:isArgument()
35119=Argument:Argument(char[], long, TypeReference, int)
35120=Argument:traverse(ASTVisitor, ClassScope)
35121=Argument:getKind()
35122=Argument:Argument(char[], long, TypeReference, int, boolean)
35123=Argument:traverse(ASTVisitor, BlockScope)
35124=JavaModelStatus:isMultiStatus()
35125=JavaModelStatus:JavaModelStatus(int, IJavaElement, IPath)
35126=JavaModelStatus:newMultiStatus(IJavaModelStatus[])
35127=JavaModelStatus:matches(JavaModelStatus, int)
35128=JavaModelStatus:JavaModelStatus(int, int, IJavaElement, IPath, String)
35129=JavaModelStatus:JavaModelStatus()
35130=JavaModelStatus:isDoesNotExist()
35131=JavaModelStatus:JavaModelStatus(int, IJavaElement)
35132=JavaModelStatus:matches(int)
35133=JavaModelStatus:JavaModelStatus(CoreException)
35134=JavaModelStatus:getElements()
35135=JavaModelStatus:JavaModelStatus(int, IJavaElement[])
35136=JavaModelStatus:getMessage()
35137=JavaModelStatus:getPath()
35138=JavaModelStatus:JavaModelStatus(int, IPath)
35139=JavaModelStatus:isOK()
35140=JavaModelStatus:JavaModelStatus(int, int, String)
35141=JavaModelStatus:JavaModelStatus(int)
35142=JavaModelStatus:getBits()
35143=JavaModelStatus:toString()
35144=JavaModelStatus:getString()
35145=JavaModelStatus:JavaModelStatus(int, IJavaElement, IPath, String)
35146=JavaModelStatus:JavaModelStatus(int, IJavaElement, String)
35147=JavaModelStatus:getChildren()
35148=JavaModelStatus:JavaModelStatus(int, String)
35149=JavaModelStatus:getSeverity()
35150=JavaModelStatus:JavaModelStatus(int, Throwable)
35151=BaseMessagerImpl:BaseMessagerImpl()
35152=BaseMessagerImpl:findAnnotation(Annotation, AnnotationBinding)
35153=BaseMessagerImpl:createProblem(Kind, CharSequence, Element, AnnotationMirror, AnnotationValue)
35154=BaseMessagerImpl:findAnnotation(Annotation[], AnnotationBinding)
35155=StructuralPropertyDescriptor:getId()
35156=StructuralPropertyDescriptor:isChildProperty()
35157=StructuralPropertyDescriptor:isChildListProperty()
35158=StructuralPropertyDescriptor:StructuralPropertyDescriptor(Class, String)
35159=StructuralPropertyDescriptor:getNodeClass()
35160=StructuralPropertyDescriptor:isSimpleProperty()
35161=StructuralPropertyDescriptor:toString()
35162=ASTRewritingRevertTest:testRemoveInserted_since_3()
35163=ASTRewritingRevertTest:ASTRewritingRevertTest(String)
35164=ASTRewritingRevertTest:testReplaceInserted_since_3()
35165=ASTRewritingRevertTest:suite()
35166=ASTRewritingRevertTest:ASTRewritingRevertTest(String, int)
35167=A:test()
35168=B:foobar(int)
35169=B:foobar()
35170=TokenManager:iterator()
35171=TokenManager:TokenManager(List<Token>, TokenManager)
35172=TokenManager:findFirstTokenInLine(int, boolean, boolean)
35173=TokenManager:insert(int, Token)
35174=TokenManager:getEscapedTokenString(Token)
35175=TokenManager:findIndex(int, int, boolean)
35176=TokenManager:addNLSAlignIndex(int, int)
35177=TokenManager:getSource()
35178=TokenManager:firstIndexBefore(ASTNode, int)
35179=TokenManager:toString(Token)
35180=TokenManager:toString(int)
35181=TokenManager:getLength(int, int, int)
35182=TokenManager:toIndent(int, boolean)
35183=TokenManager:firstTokenAfter(ASTNode, int)
35184=TokenManager:countLineBreaksBetween(String, int, int)
35185=TokenManager:firstIndexAfter(ASTNode, int)
35186=TokenManager:traverse(int, TokenTraverser)
35187=TokenManager:applyFormatOff()
35188=TokenManager:getNLSAlign(int)
35189=TokenManager:get(int)
35190=TokenManager:lastIndexIn(ASTNode, int)
35191=TokenManager:getSourceLength()
35192=TokenManager:TokenManager(List<Token>, String, DefaultCodeFormatterOptions)
35193=TokenManager:addDisableFormatTokenPair(Token, Token)
35194=TokenManager:tokenInside(ASTNode, int)
35195=TokenManager:getLength(Token, int)
35196=TokenManager:isInHeader(int)
35197=TokenManager:indexOf(Token)
35198=TokenManager:getPositionInLine(int)
35199=TokenManager:size()
35200=TokenManager:firstIndexIn(ASTNode, int)
35201=TokenManager:findFirstTokenInLine(int)
35202=TokenManager:firstTokenIn(ASTNode, int)
35203=TokenManager:toString(ASTNode)
35204=TokenManager:firstTokenBefore(ASTNode, int)
35205=TokenManager:charAt(int)
35206=TokenManager:isGuardClause(Block)
35207=TokenManager:remove(int)
35208=TokenManager:setHeaderEndIndex(int)
35209=TokenManager:lastTokenIn(ASTNode, int)
35210=TokenManager:findSourcePositionInLine(int)
35211=TokenManager:countLineBreaksBetween(Token, Token)
35212=NamedMember:getFullyQualifiedName(char, boolean)
35213=NamedMember:getOccurrenceCountSignature()
35214=NamedMember:getKey(IMethod, boolean)
35215=NamedMember:NamedMember(JavaElement, String)
35216=NamedMember:getPackageFragment()
35217=NamedMember:getKey(IType, boolean)
35218=NamedMember:getFullyQualifiedParameterizedName(String, String)
35219=NamedMember:resolveType(String, WorkingCopyOwner)
35220=NamedMember:getElementName()
35221=NamedMember:getKey(IField, boolean)
35222=NamedMember:getTypeParameters()
35223=NamedMember:resolveType(String)
35224=NamedMember:getTypeQualifiedName(char, boolean)
35225=NamedMember:appendTypeParameters(StringBuffer)
35226=Z2:foo()
35227=FormatterMassiveRegressionTests:codeFormatter()
35228=FormatterMassiveRegressionTests:getDefaultCompilerOptions()
35229=FormatterMassiveRegressionTests:suite(File, String, Map)
35230=FormatterMassiveRegressionTests:initFailures()
35231=FormatterMassiveRegressionTests:sourceHasCompilationErrors(String)
35232=FormatterMassiveRegressionTests:testReference()
35233=FormatterMassiveRegressionTests:timeString(long)
35234=FormatterMassiveRegressionTests:FormattingFailure:FormattingFailure(int)
35235=FormatterMassiveRegressionTests:setUp()
35236=FormatterMassiveRegressionTests:appendProfiles(int, StringBuffer)
35237=FormatterMassiveRegressionTests:suite()
35238=FormatterMassiveRegressionTests:counterToString(int)
35239=FormatterMassiveRegressionTests:FormattingFailure:size()
35240=FormatterMassiveRegressionTests:getName()
35241=FormatterMassiveRegressionTests:tearDownSuite()
35242=FormatterMassiveRegressionTests:createDir(File, List)
35243=FormatterMassiveRegressionTests:initDirectories(File, int, boolean)
35244=FormatterMassiveRegressionTests:initProfiles(String)
35245=FormatterMassiveRegressionTests:print()
35246=FormatterMassiveRegressionTests:FormattingFailure:FormattingFailure(int, String)
35247=FormatterMassiveRegressionTests:buildProfileString()
35248=FormatterMassiveRegressionTests:runFormatter(CodeFormatter, String, int, int, int, int, String, boolean)
35249=FormatterMassiveRegressionTests:initVersion()
35250=FormatterMassiveRegressionTests:assertSourceEquals(String, String, String)
35251=FormatterMassiveRegressionTests:setProfilesDir(int, File)
35252=FormatterMassiveRegressionTests:setOutputDir(File, String, int)
35253=FormatterMassiveRegressionTests:setLogDir(File, int, boolean)
35254=FormatterMassiveRegressionTests:setUpSuite()
35255=FormatterMassiveRegressionTests:FormatterMassiveRegressionTests(File, File, int, int, boolean)
35256=FormatterMassiveRegressionTests:tearDown()
35257=FormatterMassiveRegressionTests:testCompare()
35258=FormatterMassiveRegressionTests:compareFormattedSource()
35259=FormatterMassiveRegressionTests:FormattingFailure:toString()
35260=FormatterMassiveRegressionTests:setProfilesDir(int, List)
35261=AnnotationInvocationHandler:formatArgs(Object[])
35262=AnnotationInvocationHandler:invoke(Object, Method, Object[])
35263=AnnotationInvocationHandler:getReflectionValueWithTypeConversion(Object, Class<?>)
35264=AnnotationInvocationHandler:_getReflectionValue(Object, Class<?>)
35265=AnnotationInvocationHandler:performNecessaryTypeConversion(Class<?>, Object)
35266=AnnotationInvocationHandler:arrayify(Class<?>, Object)
35267=AnnotationInvocationHandler:AnnotationInvocationHandler(AnnotationMirrorImpl, Class<?>)
35268=A:foo()
35269=NameReference:setActualReceiverType(ReferenceBinding)
35270=NameReference:fieldBinding()
35271=NameReference:setDepth(int)
35272=NameReference:isTypeAccess()
35273=NameReference:setFieldIndex(int)
35274=NameReference:NameReference()
35275=NameReference:unboundReferenceErrorName()
35276=NameReference:isSuperAccess()
35277=NameReference:isTypeReference()
35278=X02:test()
35279=Test:main(String[])
35280=TypeDeclaration:internalSetSuperclass(Name)
35281=TypeDeclaration:setSuperclassType(Type)
35282=TypeDeclaration:setSuperclass(Name)
35283=TypeDeclaration:getFields()
35284=TypeDeclaration:internalGetSetBooleanProperty(SimplePropertyDescriptor, boolean, boolean)
35285=TypeDeclaration:internalBodyDeclarationsProperty()
35286=TypeDeclaration:accept0(ASTVisitor)
35287=TypeDeclaration:getSuperclass()
35288=TypeDeclaration:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
35289=TypeDeclaration:internalSuperInterfaces()
35290=TypeDeclaration:getTypes()
35291=TypeDeclaration:setInterface(boolean)
35292=TypeDeclaration:propertyDescriptors(int)
35293=TypeDeclaration:subtreeMatch0(ASTMatcher, Object)
35294=TypeDeclaration:internalStructuralPropertiesForType(int)
35295=TypeDeclaration:internalGetSetIntProperty(SimplePropertyDescriptor, boolean, int)
35296=TypeDeclaration:isInterface()
35297=TypeDeclaration:internalModifiers2Property()
35298=TypeDeclaration:superInterfaces()
35299=TypeDeclaration:TypeDeclaration(AST)
35300=TypeDeclaration:internalGetChildListProperty(ChildListPropertyDescriptor)
35301=TypeDeclaration:internalResolveBinding()
35302=TypeDeclaration:clone0(AST)
35303=TypeDeclaration:internalJavadocProperty()
35304=TypeDeclaration:getNodeType0()
35305=TypeDeclaration:typeParameters()
35306=TypeDeclaration:treeSize()
35307=TypeDeclaration:getSuperclassType()
35308=TypeDeclaration:internalGetSuperclass()
35309=TypeDeclaration:internalNameProperty()
35310=TypeDeclaration:superInterfaceTypes()
35311=TypeDeclaration:memSize()
35312=TypeDeclaration:getMethods()
35313=TypeDeclaration:internalModifiersProperty()
35314=RecoveredBlock:updateParseTree()
35315=RecoveredBlock:updateStatement()
35316=RecoveredBlock:attach(RecoveredStatement)
35317=RecoveredBlock:add(TypeDeclaration, int, boolean)
35318=RecoveredBlock:updateOnOpeningBrace(int, int)
35319=RecoveredBlock:updatedBlock()
35320=RecoveredBlock:updatedStatement()
35321=RecoveredBlock:add(TypeDeclaration, int)
35322=RecoveredBlock:add(Block, int)
35323=RecoveredBlock:RecoveredBlock(Block, RecoveredElement, int)
35324=RecoveredBlock:toString(int)
35325=RecoveredBlock:add(Statement, int, boolean)
35326=RecoveredBlock:add(LocalDeclaration, int, boolean)
35327=RecoveredBlock:add(LocalDeclaration, int)
35328=RecoveredBlock:add(FieldDeclaration, int)
35329=RecoveredBlock:updateOnClosingBrace(int, int)
35330=RecoveredBlock:parseTree()
35331=RecoveredBlock:add(Statement, int)
35332=AptProject:AptProject(IJavaProject)
35333=AptProject:projectClosed()
35334=AptProject:getGeneratedSourceFolderManager()
35335=AptProject:getJavaProject()
35336=AptProject:getGeneratedFileManager()
35337=AptProject:compilationStarted()
35338=AptProject:projectDeleted()
35339=AptProject:projectClean(boolean)
35340=AptProject:preferenceChanged(String)
35341=ArrayInitializer:printExpression(int, StringBuffer)
35342=ArrayInitializer:generateCode(TypeReference, ArrayAllocationExpression, BlockScope, CodeStream, boolean)
35343=ArrayInitializer:traverse(ASTVisitor, BlockScope)
35344=ArrayInitializer:resolveTypeExpecting(BlockScope, TypeBinding)
35345=ArrayInitializer:analyseCode(BlockScope, FlowContext, FlowInfo)
35346=ArrayInitializer:ArrayInitializer()
35347=ArrayInitializer:generateCode(BlockScope, CodeStream, boolean)
35348=ClassServiceFactory:newInstance()
35349=ClassServiceFactory:ClassServiceFactory(Class<?>)
35350=ClassServiceFactory:toString()
35351=RewriteSite:RewriteSite(IRegion, IRegion, boolean, boolean)
35352=TypeNameRequestor:acceptType(int, char[], char[], char[][], String)
35353=SelectionTest:test32()
35354=SelectionTest:_test56()
35355=SelectionTest:test43()
35356=SelectionTest:test54()
35357=SelectionTest:test30()
35358=SelectionTest:test41()
35359=SelectionTest:test52()
35360=SelectionTest:test36()
35361=SelectionTest:test01()
35362=SelectionTest:test47()
35363=SelectionTest:test12()
35364=SelectionTest:test23()
35365=SelectionTest:test34()
35366=SelectionTest:test45()
35367=SelectionTest:test10()
35368=SelectionTest:test21()
35369=SelectionTest:test05()
35370=SelectionTest:test16()
35371=SelectionTest:test27()
35372=SelectionTest:test38()
35373=SelectionTest:test03()
35374=SelectionTest:test49()
35375=SelectionTest:test14()
35376=SelectionTest:test25()
35377=SelectionTest:test51()
35378=SelectionTest:test09()
35379=SelectionTest:test07()
35380=SelectionTest:test18()
35381=SelectionTest:test29()
35382=SelectionTest:test55()
35383=SelectionTest:test20()
35384=SelectionTest:suite()
35385=SelectionTest:test31()
35386=SelectionTest:test42()
35387=SelectionTest:test53()
35388=SelectionTest:SelectionTest(String)
35389=SelectionTest:test40()
35390=SelectionTest:test13()
35391=SelectionTest:test24()
35392=SelectionTest:test35()
35393=SelectionTest:test46()
35394=SelectionTest:test11()
35395=SelectionTest:test22()
35396=SelectionTest:test33()
35397=SelectionTest:test44()
35398=SelectionTest:test17()
35399=SelectionTest:test28()
35400=SelectionTest:test39()
35401=SelectionTest:test04()
35402=SelectionTest:test15()
35403=SelectionTest:test26()
35404=SelectionTest:test37()
35405=SelectionTest:test02()
35406=SelectionTest:test48()
35407=SelectionTest:test50()
35408=SelectionTest:test08()
35409=SelectionTest:test19()
35410=SelectionTest:test06()
35411=ICodeSnippetRequestor:acceptClassFiles(byte[][], String[][], String)
35412=ICodeSnippetRequestor:acceptProblem(IMarker, String, int)
35413=RoundDispatcher:handleProcessor(ProcessorInfo)
35414=RoundDispatcher:RoundDispatcher(IProcessorProvider, RoundEnvironment, Set<TypeElement>, PrintWriter, PrintWriter)
35415=RoundDispatcher:round()
35416=TypeHierarchyTests:testGetAllSupertypes3()
35417=TypeHierarchyTests:testGeneric02()
35418=TypeHierarchyTests:testGetAllSuperInterfaces()
35419=TypeHierarchyTests:testVisibility2()
35420=TypeHierarchyTests:testCycle2()
35421=TypeHierarchyTests:testGetAllClassesInRegion()
35422=TypeHierarchyTests:testGetRootClasses()
35423=TypeHierarchyTests:testMemberTypeSubtypeDifferentProject()
35424=TypeHierarchyTests:TypeHierarchyTests(String)
35425=TypeHierarchyTests:testSourceTypeGetSuperclass4()
35426=TypeHierarchyTests:testRegion2()
35427=TypeHierarchyTests:testGetAllSuperclassesFromBinary()
35428=TypeHierarchyTests:testBug329663a()
35429=TypeHierarchyTests:testGeneric11()
35430=TypeHierarchyTests:testBug329663()
35431=TypeHierarchyTests:testBug469668()
35432=TypeHierarchyTests:testBinaryInWrongPackage()
35433=TypeHierarchyTests:testGetSubclasses()
35434=TypeHierarchyTests:testAnonymousType10()
35435=TypeHierarchyTests:testSupertypeHierarchyOnWorkingCopy()
35436=TypeHierarchyTests:testBinaryInnerTypeGetSuperInterfaces()
35437=TypeHierarchyTests:testAnonymousType01()
35438=TypeHierarchyTests:testBug462158()
35439=TypeHierarchyTests:testBug215841()
35440=TypeHierarchyTests:testAnonymousType12()
35441=TypeHierarchyTests:testImplementBinaryInnerInterface()
35442=TypeHierarchyTests:testSupertypeHierarchyGetSubclasses()
35443=TypeHierarchyTests:testBinaryTypeHiddenByOtherJar()
35444=TypeHierarchyTests:testMissingBinarySuperclass1()
35445=TypeHierarchyTests:testGetAllSuperclassesFromBinary2()
35446=TypeHierarchyTests:testGetExtendingInterfaces()
35447=TypeHierarchyTests:testGetRootInterfacesFromRegion()
35448=TypeHierarchyTests:testAnonymousType03()
35449=TypeHierarchyTests:testBinaryInnerTypeGetSuperclass()
35450=TypeHierarchyTests:testBug254738()
35451=TypeHierarchyTests:testRegion4()
35452=TypeHierarchyTests:testBug186781()
35453=TypeHierarchyTests:testAnonymousType04()
35454=TypeHierarchyTests:testRegion_Bug150289()
35455=TypeHierarchyTests:testBinaryTypeInDotClassJar()
35456=TypeHierarchyTests:testRootOrder()
35457=TypeHierarchyTests:testContains2()
35458=TypeHierarchyTests:testCancel()
35459=TypeHierarchyTests:testLocalType4()
35460=TypeHierarchyTests:testAnonymousType06()
35461=TypeHierarchyTests:testGetSubtypes()
35462=TypeHierarchyTests:testGetRootInterfaces()
35463=TypeHierarchyTests:testSourceTypeGetSuperInterfaces()
35464=TypeHierarchyTests:testBinaryTypeGetSuperclass2()
35465=TypeHierarchyTests:testResolvedTypeAsFocus()
35466=TypeHierarchyTests:testSuperTypeHierarchyWithMissingBinary()
35467=TypeHierarchyTests:testGeneric09()
35468=TypeHierarchyTests:testLocalType2()
35469=TypeHierarchyTests:testGetAllSubtypes()
35470=TypeHierarchyTests:testAnonymousType08()
35471=TypeHierarchyTests:testGeneric07()
35472=TypeHierarchyTests:testBug300576b()
35473=TypeHierarchyTests:testBug393192()
35474=TypeHierarchyTests:testGetAllInterfacesInRegion()
35475=TypeHierarchyTests:testZIPArchive()
35476=TypeHierarchyTests:testGeneric05()
35477=TypeHierarchyTests:testBinaryTypeGetSuperInterfaces2()
35478=TypeHierarchyTests:testSourceTypeGetSuperclass2()
35479=TypeHierarchyTests:testFocusWithLocalAndAnonymousTypes()
35480=TypeHierarchyTests:testGetImplementingClasses()
35481=TypeHierarchyTests:testBinarySubclass()
35482=TypeHierarchyTests:testRegion1()
35483=TypeHierarchyTests:testGetAllSupertypes2()
35484=TypeHierarchyTests:testGeneric03()
35485=TypeHierarchyTests:testGetCachedFlags()
35486=TypeHierarchyTests:testMissingInterface()
35487=TypeHierarchyTests:testVisibility1()
35488=TypeHierarchyTests:tearDownSuite()
35489=TypeHierarchyTests:testEfficiencyMultipleProjects()
35490=TypeHierarchyTests:testGetAllSupertypes4()
35491=TypeHierarchyTests:testGeneric01()
35492=TypeHierarchyTests:testGetAllSupertypes()
35493=TypeHierarchyTests:testBinaryTypeGetSuperInterfaces()
35494=TypeHierarchyTests:testGeneric12()
35495=TypeHierarchyTests:testAnonymousType11()
35496=TypeHierarchyTests:testSourceTypeGetSuperclass()
35497=TypeHierarchyTests:testRegion5()
35498=TypeHierarchyTests:testFindObject()
35499=TypeHierarchyTests:testGeneric10()
35500=TypeHierarchyTests:testAnonymousType02()
35501=TypeHierarchyTests:testSupertypeHierarchyGetSubtypes()
35502=TypeHierarchyTests:testInnerType1()
35503=TypeHierarchyTests:testPotentialSubtypeNotInClasspath()
35504=TypeHierarchyTests:testBug436139()
35505=TypeHierarchyTests:testRegion3()
35506=TypeHierarchyTests:testMissingBinarySuperclass2()
35507=TypeHierarchyTests:testProgressWhileIndexing()
35508=TypeHierarchyTests:testExternalFolder()
35509=TypeHierarchyTests:testGetType()
35510=TypeHierarchyTests:testGetSuperclassInRegion()
35511=TypeHierarchyTests:testGetSupertypesInRegion()
35512=TypeHierarchyTests:testContains3()
35513=TypeHierarchyTests:testAnonymousType05()
35514=TypeHierarchyTests:testLocalType5()
35515=TypeHierarchyTests:testInnerType2()
35516=TypeHierarchyTests:testBug288698()
35517=TypeHierarchyTests:testEmptyWorkingCopyPotentialSubtype()
35518=TypeHierarchyTests:testGetAllTypes()
35519=TypeHierarchyTests:testGeneric08()
35520=TypeHierarchyTests:testContains1()
35521=TypeHierarchyTests:suite()
35522=TypeHierarchyTests:testLocalType3()
35523=TypeHierarchyTests:testAnonymousType07()
35524=TypeHierarchyTests:testGetAllSuperclasses()
35525=TypeHierarchyTests:testPotentialSubtypeInDependentProject()
35526=TypeHierarchyTests:testGeneric06()
35527=TypeHierarchyTests:testResilienceToMissingBinaries()
35528=TypeHierarchyTests:testBinaryTypeGetSuperclass()
35529=TypeHierarchyTests:testAnonymousType09()
35530=TypeHierarchyTests:testLocalType1()
35531=TypeHierarchyTests:testBug300576()
35532=TypeHierarchyTests:setUpSuite()
35533=TypeHierarchyTests:testGetSupertypesWithProjectRegion()
35534=TypeHierarchyTests:testGetAllSubtypesFromBinary()
35535=TypeHierarchyTests:testGeneric04()
35536=TypeHierarchyTests:testSourceTypeGetSuperclass3()
35537=TypeHierarchyTests:testCycle()
35538=TypeHierarchyTests:testBug436155()
35539=AsMemberOf:m(T[], T)
35540=AsMemberOf:C:x()
35541=IAsMemberOf:m2()
35542=AsMemberOf:D:x()
35543=AsMemberOf:E:x()
35544=AsMemberOf:publicize()
35545=AsMemberOf:E:y()
35546=X02:foo(int, int)
35547=AnnotationDietRecoveryTest:test0037()
35548=AnnotationDietRecoveryTest:test0026()
35549=AnnotationDietRecoveryTest:test0013()
35550=AnnotationDietRecoveryTest:test0002()
35551=AnnotationDietRecoveryTest:test0039()
35552=AnnotationDietRecoveryTest:test0028()
35553=AnnotationDietRecoveryTest:test0015()
35554=AnnotationDietRecoveryTest:test0004()
35555=AnnotationDietRecoveryTest:AnnotationDietRecoveryTest(String)
35556=AnnotationDietRecoveryTest:test0017()
35557=AnnotationDietRecoveryTest:test0006()
35558=AnnotationDietRecoveryTest:test0019()
35559=AnnotationDietRecoveryTest:test0008()
35560=AnnotationDietRecoveryTest:test0041()
35561=AnnotationDietRecoveryTest:test0030()
35562=AnnotationDietRecoveryTest:test0010()
35563=AnnotationDietRecoveryTest:suite()
35564=AnnotationDietRecoveryTest:test0032()
35565=AnnotationDietRecoveryTest:getCompilerOptions()
35566=AnnotationDietRecoveryTest:test0021()
35567=AnnotationDietRecoveryTest:test0012()
35568=AnnotationDietRecoveryTest:test0001()
35569=AnnotationDietRecoveryTest:test0034()
35570=AnnotationDietRecoveryTest:test0023()
35571=AnnotationDietRecoveryTest:testClass()
35572=AnnotationDietRecoveryTest:test0014()
35573=AnnotationDietRecoveryTest:test0003()
35574=AnnotationDietRecoveryTest:test0036()
35575=AnnotationDietRecoveryTest:test0025()
35576=AnnotationDietRecoveryTest:test0016()
35577=AnnotationDietRecoveryTest:test0005()
35578=AnnotationDietRecoveryTest:test0038()
35579=AnnotationDietRecoveryTest:test0027()
35580=AnnotationDietRecoveryTest:test0018()
35581=AnnotationDietRecoveryTest:test0007()
35582=AnnotationDietRecoveryTest:test0009()
35583=AnnotationDietRecoveryTest:test0040()
35584=AnnotationDietRecoveryTest:test0031()
35585=AnnotationDietRecoveryTest:test0020()
35586=AnnotationDietRecoveryTest:test0033()
35587=AnnotationDietRecoveryTest:test0022()
35588=AnnotationDietRecoveryTest:test0035()
35589=AnnotationDietRecoveryTest:test0024()
35590=AnnotationDietRecoveryTest:test0011()
35591=AnnotationDietRecoveryTest:checkParse(char[], String, String, String, String, String)
35592=ExceptionHandlingTests:testOtherPrimitiveForBooleanValue()
35593=ExceptionHandlingTests:testArrayForStringValue()
35594=ExceptionHandlingTests:suite()
35595=ExceptionHandlingTests:testStringForBooleanValue()
35596=ExceptionHandlingTests:testArrayForBooleanValue()
35597=ExceptionHandlingTests:getCodeForTest(String)
35598=ExceptionHandlingTests:testAnnotationForEnumArrayValue()
35599=ExceptionHandlingTests:ExceptionHandlingTests(String)
35600=ExceptionHandlingTests:testOtherClassForStringValue()
35601=ExceptionHandlingTests:testPrimitiveForArrayValue()
35602=ExceptionHandlingTests:testWrapperClassForPrimitiveValue()
35603=ExceptionHandlingTests:testNonArrayForArrayValue()
35604=ExceptionHandlingTests:testPrimitiveForStringValue()
35605=ASTConverter15JLS4Test:test0152()
35606=ASTConverter15JLS4Test:test0198()
35607=ASTConverter15JLS4Test:test0296()
35608=ASTConverter15JLS4Test:test0250()
35609=ASTConverter15JLS4Test:test0054()
35610=ASTConverter15JLS4Test:test0306()
35611=ASTConverter15JLS4Test:test0163()
35612=ASTConverter15JLS4Test:test0261()
35613=ASTConverter15JLS4Test:test0065()
35614=ASTConverter15JLS4Test:test0174()
35615=ASTConverter15JLS4Test:test0272()
35616=ASTConverter15JLS4Test:test0030()
35617=ASTConverter15JLS4Test:test0328()
35618=ASTConverter15JLS4Test:test0076()
35619=ASTConverter15JLS4Test:test0208()
35620=ASTConverter15JLS4Test:test0185()
35621=ASTConverter15JLS4Test:test0283()
35622=ASTConverter15JLS4Test:test0041()
35623=ASTConverter15JLS4Test:test0317()
35624=ASTConverter15JLS4Test:test0087()
35625=ASTConverter15JLS4Test:test0219()
35626=ASTConverter15JLS4Test:test0196()
35627=ASTConverter15JLS4Test:test0294()
35628=ASTConverter15JLS4Test:test0052()
35629=ASTConverter15JLS4Test:test0304()
35630=ASTConverter15JLS4Test:test0098()
35631=ASTConverter15JLS4Test:test0150()
35632=ASTConverter15JLS4Test:test0161()
35633=ASTConverter15JLS4Test:test0206()
35634=ASTConverter15JLS4Test:test0204c()
35635=ASTConverter15JLS4Test:test0063()
35636=ASTConverter15JLS4Test:test0108()
35637=ASTConverter15JLS4Test:test0339()
35638=ASTConverter15JLS4Test:test0172()
35639=ASTConverter15JLS4Test:test0217()
35640=ASTConverter15JLS4Test:test0074()
35641=ASTConverter15JLS4Test:test0119()
35642=ASTConverter15JLS4Test:test0326()
35643=ASTConverter15JLS4Test:test0228()
35644=ASTConverter15JLS4Test:test0183()
35645=ASTConverter15JLS4Test:ASTConverter15JLS4Test(String)
35646=ASTConverter15JLS4Test:test0281()
35647=ASTConverter15JLS4Test:test0085()
35648=ASTConverter15JLS4Test:test234609()
35649=ASTConverter15JLS4Test:test0315()
35650=ASTConverter15JLS4Test:test0194()
35651=ASTConverter15JLS4Test:test0239()
35652=ASTConverter15JLS4Test:test0001()
35653=ASTConverter15JLS4Test:test0292()
35654=ASTConverter15JLS4Test:test0050()
35655=ASTConverter15JLS4Test:test0096()
35656=ASTConverter15JLS4Test:test0302()
35657=ASTConverter15JLS4Test:test0204()
35658=ASTConverter15JLS4Test:test0348a()
35659=ASTConverter15JLS4Test:test0106()
35660=ASTConverter15JLS4Test:test0061()
35661=ASTConverter15JLS4Test:test0337()
35662=ASTConverter15JLS4Test:test0170()
35663=ASTConverter15JLS4Test:test0215()
35664=ASTConverter15JLS4Test:test0324()
35665=ASTConverter15JLS4Test:setUpSuite()
35666=ASTConverter15JLS4Test:test0072()
35667=ASTConverter15JLS4Test:test0117()
35668=ASTConverter15JLS4Test:test0019()
35669=ASTConverter15JLS4Test:test0226()
35670=ASTConverter15JLS4Test:test0181()
35671=ASTConverter15JLS4Test:test0313()
35672=ASTConverter15JLS4Test:test0083()
35673=ASTConverter15JLS4Test:test0128()
35674=ASTConverter15JLS4Test:test0192()
35675=ASTConverter15JLS4Test:test0237()
35676=ASTConverter15JLS4Test:test0003()
35677=ASTConverter15JLS4Test:test0290()
35678=ASTConverter15JLS4Test:test0300()
35679=ASTConverter15JLS4Test:test0346()
35680=ASTConverter15JLS4Test:test0094()
35681=ASTConverter15JLS4Test:test0139()
35682=ASTConverter15JLS4Test:test0202()
35683=ASTConverter15JLS4Test:test0248()
35684=ASTConverter15JLS4Test:test0335()
35685=ASTConverter15JLS4Test:test0104()
35686=ASTConverter15JLS4Test:test0259()
35687=ASTConverter15JLS4Test:test0213()
35688=ASTConverter15JLS4Test:test0070()
35689=ASTConverter15JLS4Test:test0322()
35690=ASTConverter15JLS4Test:test0115()
35691=ASTConverter15JLS4Test:test0017()
35692=ASTConverter15JLS4Test:test0224()
35693=ASTConverter15JLS4Test:test0081()
35694=ASTConverter15JLS4Test:test0311()
35695=ASTConverter15JLS4Test:test0126()
35696=ASTConverter15JLS4Test:test0028()
35697=ASTConverter15JLS4Test:test0005()
35698=ASTConverter15JLS4Test:test0235()
35699=ASTConverter15JLS4Test:test0092()
35700=ASTConverter15JLS4Test:test0137()
35701=ASTConverter15JLS4Test:test0039()
35702=ASTConverter15JLS4Test:test0190()
35703=ASTConverter15JLS4Test:test0200()
35704=ASTConverter15JLS4Test:test0246()
35705=ASTConverter15JLS4Test:test0333()
35706=ASTConverter15JLS4Test:test0102()
35707=ASTConverter15JLS4Test:test0148()
35708=ASTConverter15JLS4Test:test344()
35709=ASTConverter15JLS4Test:test0211()
35710=ASTConverter15JLS4Test:test0257()
35711=ASTConverter15JLS4Test:test0159()
35712=ASTConverter15JLS4Test:test0113()
35713=ASTConverter15JLS4Test:test0015()
35714=ASTConverter15JLS4Test:test0320()
35715=ASTConverter15JLS4Test:test0222()
35716=ASTConverter15JLS4Test:test0268()
35717=ASTConverter15JLS4Test:test0124()
35718=ASTConverter15JLS4Test:test0026()
35719=ASTConverter15JLS4Test:test0007()
35720=ASTConverter15JLS4Test:test0233()
35721=ASTConverter15JLS4Test:test0279()
35722=ASTConverter15JLS4Test:test0090()
35723=ASTConverter15JLS4Test:componentType(ArrayType)
35724=ASTConverter15JLS4Test:test0135()
35725=ASTConverter15JLS4Test:test0037()
35726=ASTConverter15JLS4Test:test0244()
35727=ASTConverter15JLS4Test:test0146()
35728=ASTConverter15JLS4Test:test342()
35729=ASTConverter15JLS4Test:test0100()
35730=ASTConverter15JLS4Test:test0048()
35731=ASTConverter15JLS4Test:test0331()
35732=ASTConverter15JLS4Test:_test0321()
35733=ASTConverter15JLS4Test:test0255()
35734=ASTConverter15JLS4Test:test0157()
35735=ASTConverter15JLS4Test:test0013()
35736=ASTConverter15JLS4Test:test0059()
35737=ASTConverter15JLS4Test:test0111()
35738=ASTConverter15JLS4Test:test0266()
35739=ASTConverter15JLS4Test:test0168()
35740=ASTConverter15JLS4Test:test0220()
35741=ASTConverter15JLS4Test:test0024()
35742=ASTConverter15JLS4Test:test0122()
35743=ASTConverter15JLS4Test:test0009()
35744=ASTConverter15JLS4Test:test0277()
35745=ASTConverter15JLS4Test:test0179()
35746=ASTConverter15JLS4Test:test0231()
35747=ASTConverter15JLS4Test:test0133()
35748=ASTConverter15JLS4Test:test0035()
35749=ASTConverter15JLS4Test:test0340()
35750=ASTConverter15JLS4Test:test0288()
35751=ASTConverter15JLS4Test:test0242()
35752=ASTConverter15JLS4Test:test0144()
35753=ASTConverter15JLS4Test:test0046()
35754=ASTConverter15JLS4Test:test0155()
35755=ASTConverter15JLS4Test:test0253()
35756=ASTConverter15JLS4Test:test0011()
35757=ASTConverter15JLS4Test:test0057()
35758=ASTConverter15JLS4Test:test0166()
35759=ASTConverter15JLS4Test:test0204b()
35760=ASTConverter15JLS4Test:test0264()
35761=ASTConverter15JLS4Test:_test0271()
35762=ASTConverter15JLS4Test:test0022()
35763=ASTConverter15JLS4Test:test0299()
35764=ASTConverter15JLS4Test:test0068()
35765=ASTConverter15JLS4Test:test0120()
35766=ASTConverter15JLS4Test:test0177()
35767=ASTConverter15JLS4Test:test0275()
35768=ASTConverter15JLS4Test:test0033()
35769=ASTConverter15JLS4Test:test0079()
35770=ASTConverter15JLS4Test:test0131()
35771=ASTConverter15JLS4Test:test0188()
35772=ASTConverter15JLS4Test:test0309()
35773=ASTConverter15JLS4Test:test0240()
35774=ASTConverter15JLS4Test:test0286()
35775=ASTConverter15JLS4Test:test0044()
35776=ASTConverter15JLS4Test:test0142()
35777=ASTConverter15JLS4Test:test0153()
35778=ASTConverter15JLS4Test:test0199()
35779=ASTConverter15JLS4Test:test0297()
35780=ASTConverter15JLS4Test:test0251()
35781=ASTConverter15JLS4Test:test0055()
35782=ASTConverter15JLS4Test:test0164()
35783=ASTConverter15JLS4Test:test0262()
35784=ASTConverter15JLS4Test:test0020()
35785=ASTConverter15JLS4Test:test0066()
35786=ASTConverter15JLS4Test:test0175()
35787=ASTConverter15JLS4Test:test0318()
35788=ASTConverter15JLS4Test:test0273()
35789=ASTConverter15JLS4Test:test0077()
35790=ASTConverter15JLS4Test:test0031()
35791=ASTConverter15JLS4Test:test0209()
35792=ASTConverter15JLS4Test:test0186()
35793=ASTConverter15JLS4Test:test0307()
35794=ASTConverter15JLS4Test:test0284()
35795=ASTConverter15JLS4Test:test0042()
35796=ASTConverter15JLS4Test:test0088()
35797=ASTConverter15JLS4Test:testBug420458()
35798=ASTConverter15JLS4Test:test0140()
35799=ASTConverter15JLS4Test:test0151()
35800=ASTConverter15JLS4Test:test0197()
35801=ASTConverter15JLS4Test:test0295()
35802=ASTConverter15JLS4Test:test0053()
35803=ASTConverter15JLS4Test:test0099()
35804=ASTConverter15JLS4Test:test0305()
35805=ASTConverter15JLS4Test:test0162()
35806=ASTConverter15JLS4Test:test0207()
35807=ASTConverter15JLS4Test:test0329()
35808=ASTConverter15JLS4Test:test0260()
35809=ASTConverter15JLS4Test:test0064()
35810=ASTConverter15JLS4Test:test0173()
35811=ASTConverter15JLS4Test:test0218()
35812=ASTConverter15JLS4Test:test0109()
35813=ASTConverter15JLS4Test:test0327()
35814=ASTConverter15JLS4Test:test0075()
35815=ASTConverter15JLS4Test:test0184()
35816=ASTConverter15JLS4Test:test0229()
35817=ASTConverter15JLS4Test:test0282()
35818=ASTConverter15JLS4Test:test0040()
35819=ASTConverter15JLS4Test:test0316()
35820=ASTConverter15JLS4Test:test0086()
35821=ASTConverter15JLS4Test:test0195()
35822=ASTConverter15JLS4Test:test0293()
35823=ASTConverter15JLS4Test:test0051()
35824=ASTConverter15JLS4Test:test0303()
35825=ASTConverter15JLS4Test:test0349()
35826=ASTConverter15JLS4Test:test0097()
35827=ASTConverter15JLS4Test:test0160()
35828=ASTConverter15JLS4Test:test0205()
35829=ASTConverter15JLS4Test:test0062()
35830=ASTConverter15JLS4Test:test0107()
35831=ASTConverter15JLS4Test:test0338()
35832=ASTConverter15JLS4Test:test0171()
35833=ASTConverter15JLS4Test:test0216()
35834=ASTConverter15JLS4Test:test0073()
35835=ASTConverter15JLS4Test:test0118()
35836=ASTConverter15JLS4Test:test0325()
35837=ASTConverter15JLS4Test:test0182()
35838=ASTConverter15JLS4Test:test0227()
35839=ASTConverter15JLS4Test:test0280()
35840=ASTConverter15JLS4Test:test0129()
35841=ASTConverter15JLS4Test:test0084()
35842=ASTConverter15JLS4Test:test0314()
35843=ASTConverter15JLS4Test:test0193()
35844=ASTConverter15JLS4Test:test0238()
35845=ASTConverter15JLS4Test:test0002()
35846=ASTConverter15JLS4Test:test0291()
35847=ASTConverter15JLS4Test:test0095()
35848=ASTConverter15JLS4Test:test0301()
35849=ASTConverter15JLS4Test:test0347()
35850=ASTConverter15JLS4Test:test0203()
35851=ASTConverter15JLS4Test:test0249()
35852=ASTConverter15JLS4Test:test0348b()
35853=ASTConverter15JLS4Test:test0105()
35854=ASTConverter15JLS4Test:test0060()
35855=ASTConverter15JLS4Test:test0336()
35856=ASTConverter15JLS4Test:test341()
35857=ASTConverter15JLS4Test:test0214()
35858=ASTConverter15JLS4Test:test0323()
35859=ASTConverter15JLS4Test:test0071()
35860=ASTConverter15JLS4Test:test0116()
35861=ASTConverter15JLS4Test:test0018()
35862=ASTConverter15JLS4Test:test0225()
35863=ASTConverter15JLS4Test:test0312()
35864=ASTConverter15JLS4Test:test0127()
35865=ASTConverter15JLS4Test:test0082()
35866=ASTConverter15JLS4Test:test0029()
35867=ASTConverter15JLS4Test:test0180()
35868=ASTConverter15JLS4Test:test0004()
35869=ASTConverter15JLS4Test:test0236()
35870=ASTConverter15JLS4Test:test0345()
35871=ASTConverter15JLS4Test:test0093()
35872=ASTConverter15JLS4Test:test0138()
35873=ASTConverter15JLS4Test:test0191()
35874=ASTConverter15JLS4Test:test0201()
35875=ASTConverter15JLS4Test:test0247()
35876=ASTConverter15JLS4Test:test0334()
35877=ASTConverter15JLS4Test:test0149()
35878=ASTConverter15JLS4Test:test0103()
35879=ASTConverter15JLS4Test:test0212()
35880=ASTConverter15JLS4Test:test0258()
35881=ASTConverter15JLS4Test:replaceNodeInParent(Expression, Expression)
35882=ASTConverter15JLS4Test:test0114()
35883=ASTConverter15JLS4Test:test0016()
35884=ASTConverter15JLS4Test:test0223()
35885=ASTConverter15JLS4Test:test0269()
35886=ASTConverter15JLS4Test:test0080()
35887=ASTConverter15JLS4Test:test0310()
35888=ASTConverter15JLS4Test:test0125()
35889=ASTConverter15JLS4Test:test0027()
35890=ASTConverter15JLS4Test:test0006()
35891=ASTConverter15JLS4Test:test0234()
35892=ASTConverter15JLS4Test:test0091()
35893=ASTConverter15JLS4Test:test0136()
35894=ASTConverter15JLS4Test:suite()
35895=ASTConverter15JLS4Test:test0038()
35896=ASTConverter15JLS4Test:test0245()
35897=ASTConverter15JLS4Test:test0332()
35898=ASTConverter15JLS4Test:test0101()
35899=ASTConverter15JLS4Test:test0147()
35900=ASTConverter15JLS4Test:test0049()
35901=ASTConverter15JLS4Test:test0256()
35902=ASTConverter15JLS4Test:test0158()
35903=ASTConverter15JLS4Test:test0210()
35904=ASTConverter15JLS4Test:test0112()
35905=ASTConverter15JLS4Test:test0014()
35906=ASTConverter15JLS4Test:test0267()
35907=ASTConverter15JLS4Test:test0169()
35908=ASTConverter15JLS4Test:test0221()
35909=ASTConverter15JLS4Test:test0123()
35910=ASTConverter15JLS4Test:test0025()
35911=ASTConverter15JLS4Test:test0008()
35912=ASTConverter15JLS4Test:test0239_2()
35913=ASTConverter15JLS4Test:test0278()
35914=ASTConverter15JLS4Test:test0232()
35915=ASTConverter15JLS4Test:test0134()
35916=ASTConverter15JLS4Test:test0036()
35917=ASTConverter15JLS4Test:test0289()
35918=ASTConverter15JLS4Test:test0243()
35919=ASTConverter15JLS4Test:test0145()
35920=ASTConverter15JLS4Test:test0047()
35921=ASTConverter15JLS4Test:test343()
35922=ASTConverter15JLS4Test:test0330()
35923=ASTConverter15JLS4Test:test0156()
35924=ASTConverter15JLS4Test:test0254()
35925=ASTConverter15JLS4Test:test0012()
35926=ASTConverter15JLS4Test:test0110()
35927=ASTConverter15JLS4Test:test0058()
35928=ASTConverter15JLS4Test:test0167()
35929=ASTConverter15JLS4Test:test0265()
35930=ASTConverter15JLS4Test:test0023()
35931=ASTConverter15JLS4Test:test0121()
35932=ASTConverter15JLS4Test:test0069()
35933=ASTConverter15JLS4Test:test234609b()
35934=ASTConverter15JLS4Test:test0230()
35935=ASTConverter15JLS4Test:test0276()
35936=ASTConverter15JLS4Test:test0178()
35937=ASTConverter15JLS4Test:test0034()
35938=ASTConverter15JLS4Test:test0132()
35939=ASTConverter15JLS4Test:test0238_2()
35940=ASTConverter15JLS4Test:tearDown()
35941=ASTConverter15JLS4Test:testBug187430()
35942=ASTConverter15JLS4Test:test0241()
35943=ASTConverter15JLS4Test:test0287()
35944=ASTConverter15JLS4Test:test0189()
35945=ASTConverter15JLS4Test:test0045()
35946=ASTConverter15JLS4Test:test0143()
35947=ASTConverter15JLS4Test:test0154()
35948=ASTConverter15JLS4Test:test0252()
35949=ASTConverter15JLS4Test:test0010()
35950=ASTConverter15JLS4Test:test0056()
35951=ASTConverter15JLS4Test:test0165()
35952=ASTConverter15JLS4Test:test0263()
35953=ASTConverter15JLS4Test:_test0270()
35954=ASTConverter15JLS4Test:test0021()
35955=ASTConverter15JLS4Test:test0067()
35956=ASTConverter15JLS4Test:test0298()
35957=ASTConverter15JLS4Test:_test0348()
35958=ASTConverter15JLS4Test:test0176()
35959=ASTConverter15JLS4Test:test0274()
35960=ASTConverter15JLS4Test:test0319()
35961=ASTConverter15JLS4Test:test0032()
35962=ASTConverter15JLS4Test:test0078()
35963=ASTConverter15JLS4Test:test0130()
35964=ASTConverter15JLS4Test:test0187()
35965=ASTConverter15JLS4Test:test0285()
35966=ASTConverter15JLS4Test:test0308()
35967=ASTConverter15JLS4Test:testBug348024()
35968=ASTConverter15JLS4Test:test0043()
35969=ASTConverter15JLS4Test:test0089()
35970=ASTConverter15JLS4Test:test0141()
35971=ResolveLocalClass5:foo()
35972=IProblemFactory:createProblem(char[], int, String[], String[], int, int, int, int)
35973=IProblemFactory:getLocale()
35974=IProblemFactory:getLocalizedMessage(int, String[])
35975=UnaryExpression:optimizedBooleanConstant()
35976=UnaryExpression:resolveType(BlockScope)
35977=UnaryExpression:traverse(ASTVisitor, BlockScope)
35978=UnaryExpression:generateCode(BlockScope, CodeStream, boolean)
35979=UnaryExpression:generateOptimizedBoolean(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
35980=UnaryExpression:printExpressionNoParenthesis(int, StringBuffer)
35981=UnaryExpression:UnaryExpression(Expression, int)
35982=UnaryExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
35983=X02e:foo()
35984=CancelableProblemFactory:CancelableProblemFactory(IProgressMonitor)
35985=CancelableProblemFactory:createProblem(char[], int, String[], int, String[], int, int, int, int, int)
35986=CancelableProblemFactory:createProblem(char[], int, String[], String[], int, int, int, int, int)
35987=SomeClass:classifySetTwo(Set<?>, int, long, int)
35988=ReferenceInfoAdapter:acceptUnknownReference(char[], int)
35989=ReferenceInfoAdapter:acceptUnknownReference(char[][], int, int)
35990=ReferenceInfoAdapter:acceptConstructorReference(char[], int, int)
35991=ReferenceInfoAdapter:acceptTypeReference(char[], int)
35992=ReferenceInfoAdapter:acceptTypeReference(char[][], int, int)
35993=ReferenceInfoAdapter:acceptFieldReference(char[], int)
35994=ReferenceInfoAdapter:acceptAnnotationTypeReference(char[][], int, int)
35995=ReferenceInfoAdapter:acceptMethodReference(char[], int, int)
35996=ReferenceInfoAdapter:acceptAnnotationTypeReference(char[], int)
35997=SearchMatch:SearchMatch(IJavaElement, int, int, int, SearchParticipant, IResource)
35998=SearchMatch:getElement()
35999=SearchMatch:isExact()
36000=SearchMatch:isErasure()
36001=SearchMatch:getResource()
36002=SearchMatch:getOffset()
36003=SearchMatch:setResource(IResource)
36004=SearchMatch:toString()
36005=SearchMatch:setRaw(boolean)
36006=SearchMatch:isEquivalent()
36007=SearchMatch:isRaw()
36008=SearchMatch:getLength()
36009=SearchMatch:setRule(int)
36010=SearchMatch:setElement(Object)
36011=SearchMatch:setOffset(int)
36012=SearchMatch:setLength(int)
36013=SearchMatch:isInsideDocComment()
36014=SearchMatch:setImplicit(boolean)
36015=SearchMatch:getRule()
36016=SearchMatch:getParticipant()
36017=SearchMatch:setParticipant(SearchParticipant)
36018=SearchMatch:setAccuracy(int)
36019=SearchMatch:setInsideDocComment(boolean)
36020=SearchMatch:isImplicit()
36021=SearchMatch:getAccuracy()
36022=ProjectReferenceChange:toString()
36023=ProjectReferenceChange:updateProjectReferencesIfNecessary()
36024=ProjectReferenceChange:ProjectReferenceChange(JavaProject, IClasspathEntry[])
36025=X01b:foo()
36026=CorrectMethod2:foo()
36027=CorrectMethod2:bar0()
36028=StuffInterface:sendStuff(int)
36029=StuffInterface:getStuff(int)
36030=OutputFolderTests:OutputFolderTests(String)
36031=OutputFolderTests:suite()
36032=OutputFolderTests:testProjectWith2SrcBin()
36033=OutputFolderTests:testProjectWithBin()
36034=OutputFolderTests:testProjectWith2Src2Bin()
36035=OutputFolderTests:testSimpleProject()
36036=OutputFolderTests:testProjectWith2SrcAsBin()
36037=OutputFolderTests:testDeleteOutputFolder()
36038=OutputFolderTests:testProjectWith3Src2Bin()
36039=OutputFolderTests:testChangeOutputFolder()
36040=OutputFolderTests:testInvalidOutput()
36041=OutputFolderTests:testProjectWithSrcBin()
36042=OutputFolderTests:test2ProjectWith1Bin()
36043=SourceElementParserTest:reset()
36044=SourceElementParserTest:fullParse(String, String, boolean)
36045=SourceElementParserTest:test60()
36046=SourceElementParserTest:exitInitializer(int)
36047=SourceElementParserTest:test71()
36048=SourceElementParserTest:test07()
36049=SourceElementParserTest:acceptAnnotationTypeReference(char[][], int, int)
36050=SourceElementParserTest:test40()
36051=SourceElementParserTest:enterMethod(MethodInfo)
36052=SourceElementParserTest:test51()
36053=SourceElementParserTest:acceptUnknownReference(char[], int)
36054=SourceElementParserTest:test62()
36055=SourceElementParserTest:enterConstructor(MethodInfo)
36056=SourceElementParserTest:enterType(TypeInfo)
36057=SourceElementParserTest:test73()
36058=SourceElementParserTest:test09()
36059=SourceElementParserTest:enterCompilationUnit()
36060=SourceElementParserTest:test16()
36061=SourceElementParserTest:addImport(SourceImport)
36062=SourceElementParserTest:acceptLineSeparatorPositions(int[])
36063=SourceElementParserTest:test27()
36064=SourceElementParserTest:test03()
36065=SourceElementParserTest:test38()
36066=SourceElementParserTest:fullParse(String, String)
36067=SourceElementParserTest:test14()
36068=SourceElementParserTest:acceptMethodReference(char[], int, int)
36069=SourceElementParserTest:test49()
36070=SourceElementParserTest:test18()
36071=SourceElementParserTest:test29()
36072=SourceElementParserTest:_test78()
36073=SourceElementParserTest:test05()
36074=SourceElementParserTest:addTypeParameterToType(TypeParameterInfo)
36075=SourceElementParserTest:test69()
36076=SourceElementParserTest:test23()
36077=SourceElementParserTest:acceptPackage(ImportReference)
36078=SourceElementParserTest:test34()
36079=SourceElementParserTest:acceptProblem(CategorizedProblem)
36080=SourceElementParserTest:test45()
36081=SourceElementParserTest:exitField(int, int, int)
36082=SourceElementParserTest:test56()
36083=SourceElementParserTest:test10()
36084=SourceElementParserTest:displayModifiers(int)
36085=SourceElementParserTest:test25()
36086=SourceElementParserTest:test36()
36087=SourceElementParserTest:test47()
36088=SourceElementParserTest:test01()
36089=SourceElementParserTest:test58()
36090=SourceElementParserTest:test12()
36091=SourceElementParserTest:test65()
36092=SourceElementParserTest:test30()
36093=SourceElementParserTest:test76()
36094=SourceElementParserTest:test41()
36095=SourceElementParserTest:enterField(FieldInfo)
36096=SourceElementParserTest:test52()
36097=SourceElementParserTest:dietParse(String, String, boolean)
36098=SourceElementParserTest:test67()
36099=SourceElementParserTest:test21()
36100=SourceElementParserTest:acceptUnknownReference(char[][], int, int)
36101=SourceElementParserTest:exitCompilationUnit(int)
36102=SourceElementParserTest:test32()
36103=SourceElementParserTest:test43()
36104=SourceElementParserTest:test54()
36105=SourceElementParserTest:test61()
36106=SourceElementParserTest:acceptTypeReference(char[][], int, int)
36107=SourceElementParserTest:test72()
36108=SourceElementParserTest:test08()
36109=SourceElementParserTest:exitConstructor(int)
36110=SourceElementParserTest:test19()
36111=SourceElementParserTest:acceptImport(int, int, int, int, char[][], boolean, int)
36112=SourceElementParserTest:test63()
36113=SourceElementParserTest:test74()
36114=SourceElementParserTest:test50()
36115=SourceElementParserTest:acceptAnnotationTypeReference(char[], int)
36116=SourceElementParserTest:_test79()
36117=SourceElementParserTest:test04()
36118=SourceElementParserTest:test39()
36119=SourceElementParserTest:test15()
36120=SourceElementParserTest:test26()
36121=SourceElementParserTest:exitType(int)
36122=SourceElementParserTest:enterAbtractMethod(MethodInfo)
36123=SourceElementParserTest:exitAbstractMethod(int)
36124=SourceElementParserTest:test37()
36125=SourceElementParserTest:_test77()
36126=SourceElementParserTest:dietParse(String, String)
36127=SourceElementParserTest:addTypeParameterToMethod(TypeParameterInfo)
36128=SourceElementParserTest:test70()
36129=SourceElementParserTest:test06()
36130=SourceElementParserTest:SourceElementParserTest(String)
36131=SourceElementParserTest:acceptConstructorReference(char[], int, int)
36132=SourceElementParserTest:suite()
36133=SourceElementParserTest:test81()
36134=SourceElementParserTest:test17()
36135=SourceElementParserTest:fullParse(String, String, Map)
36136=SourceElementParserTest:acceptFieldReference(char[], int)
36137=SourceElementParserTest:test28()
36138=SourceElementParserTest:test46()
36139=SourceElementParserTest:test57()
36140=SourceElementParserTest:enterInitializer(int, int)
36141=SourceElementParserTest:test11()
36142=SourceElementParserTest:test68()
36143=SourceElementParserTest:testBug99662()
36144=SourceElementParserTest:test22()
36145=SourceElementParserTest:fullParse(String, String, boolean, Map)
36146=SourceElementParserTest:test33()
36147=SourceElementParserTest:test48()
36148=SourceElementParserTest:test02()
36149=SourceElementParserTest:test59()
36150=SourceElementParserTest:test13()
36151=SourceElementParserTest:test24()
36152=SourceElementParserTest:test35()
36153=SourceElementParserTest:exitMethod(int, Expression)
36154=SourceElementParserTest:test42()
36155=SourceElementParserTest:test53()
36156=SourceElementParserTest:setImports()
36157=SourceElementParserTest:test64()
36158=SourceElementParserTest:test75()
36159=SourceElementParserTest:test44()
36160=SourceElementParserTest:test55()
36161=SourceElementParserTest:_test80()
36162=SourceElementParserTest:acceptTypeReference(char[], int)
36163=SourceElementParserTest:test66()
36164=SourceElementParserTest:test20()
36165=SourceElementParserTest:test31()
36166=SourceElementParserTest:SourceElementParserTest(String, char[])
36167=JavaSearchMultipleProjectsTests:testBug229128()
36168=JavaSearchMultipleProjectsTests:testMethodOccurences()
36169=JavaSearchMultipleProjectsTests:testHierarchyScope1()
36170=JavaSearchMultipleProjectsTests:testBug199392_Zip_SamePartCount()
36171=JavaSearchMultipleProjectsTests:testBug229951a()
36172=JavaSearchMultipleProjectsTests:testBug229951b()
36173=JavaSearchMultipleProjectsTests:testHierarchyScope3()
36174=JavaSearchMultipleProjectsTests:JavaSearchMultipleProjectsTests(String)
36175=JavaSearchMultipleProjectsTests:suite()
36176=JavaSearchMultipleProjectsTests:testBug199392_Jar()
36177=JavaSearchMultipleProjectsTests:testBug151189_Workspace()
36178=JavaSearchMultipleProjectsTests:testBug250454()
36179=JavaSearchMultipleProjectsTests:testBug167743()
36180=JavaSearchMultipleProjectsTests:testPackageReference2()
36181=JavaSearchMultipleProjectsTests:testFieldOccurencesInWorkingCopies()
36182=JavaSearchMultipleProjectsTests:testReferenceInWorkingCopies()
36183=JavaSearchMultipleProjectsTests:testTypeDeclarationInJar()
36184=JavaSearchMultipleProjectsTests:testBug176831()
36185=JavaSearchMultipleProjectsTests:testBug195228()
36186=JavaSearchMultipleProjectsTests:testBug250454_jars()
36187=JavaSearchMultipleProjectsTests:testHierarchyScope2()
36188=JavaSearchMultipleProjectsTests:testBug210689()
36189=JavaSearchMultipleProjectsTests:testPackageReference1()
36190=JavaSearchMultipleProjectsTests:testHierarchyScope4()
36191=JavaSearchMultipleProjectsTests:testBug199392_Zip()
36192=JavaSearchMultipleProjectsTests:testBug163072()
36193=JavaSearchMultipleProjectsTests:testBug151189_Project()
36194=JavaSearchMultipleProjectsTests:testBug176831b()
36195=JavaSearchMultipleProjectsTests:testPackageDeclaration()
36196=JavaSearchMultipleProjectsTests:testBug199392_Jar_SamePartCount()
36197=X01e:foo()
36198=ResolveConstructorCallOfMemberType:foo()
36199=A:main(String[])
36200=TypeParameterReferenceMatch:TypeParameterReferenceMatch(IJavaElement, int, int, int, boolean, SearchParticipant, IResource)
36201=MyMap:get(Object)
36202=MyMap:put(K, V)
36203=MyMap:remove(Object)
36204=A:foo()
36205=HashtableOfArrayToObject:size()
36206=HashtableOfArrayToObject:put(Object[], Object)
36207=HashtableOfArrayToObject:getIndex(Object[])
36208=HashtableOfArrayToObject:clone()
36209=HashtableOfArrayToObject:get(Object[])
36210=HashtableOfArrayToObject:hashCode(Object[])
36211=HashtableOfArrayToObject:HashtableOfArrayToObject(int)
36212=HashtableOfArrayToObject:HashtableOfArrayToObject()
36213=HashtableOfArrayToObject:rehash()
36214=HashtableOfArrayToObject:removeKey(Object[])
36215=HashtableOfArrayToObject:containsKey(Object[])
36216=HashtableOfArrayToObject:hashCode(Object[], int)
36217=HashtableOfArrayToObject:getKey(Object[], int)
36218=HashtableOfArrayToObject:toString()
36219=RemotePublication:RemotePublication(String, String, String, String, String, String)
36220=RemotePublication:createC42PDFCommandLine(String)
36221=RemotePublication:renamePDFFile()
36222=RemotePublication:createPDFFile()
36223=RemotePublication:createListFile()
36224=RemotePublication:getRemoteDocument()
36225=RemotePublication:getPages()
36226=RemotePublication:getDocument()
36227=RemotePublication:handleMultipleDocuments(File)
36228=A:getCategory()
36229=X01e:foo()
36230=firstClass:myMethod()
36231=X03:foo(int, int)
36232=SecondaryTypeDeclarationPattern:queryIn(Index)
36233=SecondaryTypeDeclarationPattern:print(StringBuffer)
36234=SecondaryTypeDeclarationPattern:SecondaryTypeDeclarationPattern(int)
36235=SecondaryTypeDeclarationPattern:SecondaryTypeDeclarationPattern()
36236=SecondaryTypeDeclarationPattern:getBlankPattern()
36237=A:foo()
36238=Pair:Pair(A, B)
36239=Pair:equals(Object, Object)
36240=Seq:zip(Seq<T>)
36241=Seq:Seq(E, Seq<E>)
36242=A:main(String[])
36243=Pair:toString()
36244=Seq:toString()
36245=Seq:Seq()
36246=Pair:equals(Object)
36247=Seq:Zipper:zip(Seq<T>)
36248=Seq:isEmpty()
36249=X03:foo()
36250=Test:foo()
36251=MethodDeclaration:parseStatements(Parser, CompilationUnitDeclaration)
36252=MethodDeclaration:traverse(ASTVisitor, ClassScope)
36253=MethodDeclaration:getAllAnnotationContexts(int, List)
36254=MethodDeclaration:hasNullTypeAnnotation(AnnotationPosition)
36255=MethodDeclaration:analyseCode(ClassScope, FlowContext, FlowInfo)
36256=MethodDeclaration:isMethod()
36257=MethodDeclaration:typeParameters()
36258=MethodDeclaration:MethodDeclaration(CompilationResult)
36259=MethodDeclaration:printReturnType(int, StringBuffer)
36260=MethodDeclaration:resolveStatements()
36261=MethodDeclaration:isDefaultMethod()
36262=A:foo()
36263=A:foo()
36264=PauseAnnotationProcessorFactory:PauseAnnotationProcessorFactory()
36265=PauseAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
36266=ExternalFoldersManager:addFolder(IPath, boolean)
36267=ExternalFoldersManager:openExternalFoldersProject(IProject, IProgressMonitor)
36268=ExternalFoldersManager:isExternalFolderPath(IPath)
36269=ExternalFoldersManager:cleanUp(IProgressMonitor)
36270=ExternalFoldersManager:RefreshJob:run(IProgressMonitor)
36271=ExternalFoldersManager:removeFolder(IPath)
36272=ExternalFoldersManager:refreshReferences(IProject[], IProgressMonitor)
36273=ExternalFoldersManager:getExternalFoldersProject()
36274=ExternalFoldersManager:createExternalFoldersProject(IProgressMonitor)
36275=ExternalFoldersManager:RefreshJob:belongsTo(Object)
36276=ExternalFoldersManager:getExternalFolders(IClasspathEntry[])
36277=ExternalFoldersManager:getFolders()
36278=ExternalFoldersManager:getExternalFoldersManager()
36279=ExternalFoldersManager:runRefreshJob(Collection)
36280=ExternalFoldersManager:addFolder(IPath, IProject, boolean)
36281=ExternalFoldersManager:getFolder(IPath)
36282=ExternalFoldersManager:createPendingFolders(IProgressMonitor)
36283=ExternalFoldersManager:RefreshJob:addFoldersToRefresh(Collection)
36284=ExternalFoldersManager:getFoldersToCleanUp(IProgressMonitor)
36285=ExternalFoldersManager:refreshReferences(IProject, IProgressMonitor)
36286=ExternalFoldersManager:createLinkFolder(IPath, boolean, IProgressMonitor)
36287=ExternalFoldersManager:createExternalFoldersProject(IProject, IProgressMonitor)
36288=ExternalFoldersManager:ExternalFoldersManager()
36289=ExternalFoldersManager:removePendingFolder(Object)
36290=ExternalFoldersManager:isInternalPathForExternalFolder(IPath)
36291=ExternalFoldersManager:createLinkFolder(IPath, boolean, IProject, IProgressMonitor)
36292=ExternalFoldersManager:RefreshJob:RefreshJob(Vector)
36293=JRockitVMLauncher:buildBootClassPath()
36294=JRockitVMLauncher:JRockitVMLauncher()
36295=JRockitVMLauncher:getCommandLine()
36296=JRockitVMLauncher:getBatchFileName()
36297=JRockitVMLauncher:writeBatchFile(String, Vector)
36298=JRockitVMLauncher:setBatchFileName(String)
36299=ContinueStatement:traverse(ASTVisitor, BlockScope)
36300=ContinueStatement:printStatement(int, StringBuffer)
36301=ContinueStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
36302=ContinueStatement:ContinueStatement(char[], int, int)
36303=Test:foo()
36304=IDOMCompilationUnit:setHeader(String)
36305=IDOMCompilationUnit:setName(String)
36306=IDOMCompilationUnit:getName()
36307=IDOMCompilationUnit:getHeader()
36308=Bug49361:main(String[])
36309=EnumType:getDeclaration()
36310=X14b:foo()
36311=ArrayAllocationExpression:printExpression(int, StringBuffer)
36312=ArrayAllocationExpression:resolveType(BlockScope)
36313=ArrayAllocationExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
36314=ArrayAllocationExpression:ArrayAllocationExpression()
36315=ArrayAllocationExpression:generateCode(BlockScope, CodeStream, boolean)
36316=ArrayAllocationExpression:traverse(ASTVisitor, BlockScope)
36317=MirrorDeclarationTestAnnotationProcessor:testAnnotationImplementations(TypeDeclaration)
36318=MirrorDeclarationTestAnnotationProcessor:testEnumImplementations(TypeDeclaration)
36319=MirrorDeclarationTestAnnotationProcessor:process()
36320=MirrorDeclarationTestAnnotationProcessor:MirrorDeclarationTestAnnotationProcessor(AnnotationProcessorEnvironment)
36321=MirrorDeclarationTestAnnotationProcessor:testMethodDeclaration(ClassDeclaration)
36322=MirrorDeclarationTestAnnotationProcessor:testFieldDeclaration(ClassDeclaration)
36323=MirrorDeclarationTestAnnotationProcessor:testClassDeclaration(ClassDeclaration)
36324=Test:foo(String)
36325=BinaryField:getConstant()
36326=BinaryField:toStringInfo(int, StringBuffer, Object, boolean)
36327=BinaryField:resolved(Binding)
36328=BinaryField:getElementType()
36329=BinaryField:getAttachedJavadoc(IProgressMonitor)
36330=BinaryField:equals(Object)
36331=BinaryField:BinaryField(JavaElement, String)
36332=BinaryField:getFlags()
36333=BinaryField:getAnnotations()
36334=BinaryField:getTypeSignature()
36335=BinaryField:getKey(boolean)
36336=BinaryField:isResolved()
36337=BinaryField:isEnumConstant()
36338=BinaryField:getHandleMementoDelimiter()
36339=InternalCompletionProposal:setDeclarationTypeName(char[])
36340=InternalCompletionProposal:setIsContructor(boolean)
36341=InternalCompletionProposal:setDeclarationKey(char[])
36342=InternalCompletionProposal:getParameterTypeNames()
36343=InternalCompletionProposal:getDeclarationPackageName()
36344=InternalCompletionProposal:setDeclarationPackageName(char[])
36345=InternalCompletionProposal:getReceiverEnd()
36346=InternalCompletionProposal:setPackageName(char[])
36347=InternalCompletionProposal:getRelevance()
36348=InternalCompletionProposal:setReceiverRange(int, int)
36349=InternalCompletionProposal:setHasNoParameterNamesFromIndex(boolean)
36350=InternalCompletionProposal:getDeclarationSignature()
36351=InternalCompletionProposal:isConstructor()
36352=InternalCompletionProposal:setReceiverSignature(char[])
36353=InternalCompletionProposal:setSignature(char[])
36354=InternalCompletionProposal:setKey(char[])
36355=InternalCompletionProposal:getParameterPackageNames()
36356=InternalCompletionProposal:getTokenStart()
36357=InternalCompletionProposal:findMethodParameterNames(char[], char[], char[], char[][])
36358=InternalCompletionProposal:findParameterNames(IProgressMonitor)
36359=InternalCompletionProposal:getOpenedBinaryTypesThreshold()
36360=InternalCompletionProposal:getReceiverSignature()
36361=InternalCompletionProposal:getKind()
36362=InternalCompletionProposal:getRequiredProposals()
36363=InternalCompletionProposal:setBinding(Binding)
36364=InternalCompletionProposal:setFlags(int)
36365=InternalCompletionProposal:setParameterNames(char[][])
36366=InternalCompletionProposal:findMethod(IType, char[], char[][])
36367=InternalCompletionProposal:getReceiverStart()
36368=InternalCompletionProposal:setRelevance(int)
36369=InternalCompletionProposal:getName()
36370=InternalCompletionProposal:InternalCompletionProposal(int, int)
36371=InternalCompletionProposal:setOriginalSignature(char[])
36372=InternalCompletionProposal:setCompletion(char[])
36373=InternalCompletionProposal:setDeclarationSignature(char[])
36374=InternalCompletionProposal:setName(char[])
36375=InternalCompletionProposal:getAccessibility()
36376=InternalCompletionProposal:setAccessibility(int)
36377=InternalCompletionProposal:getBinding()
36378=InternalCompletionProposal:setParameterPackageNames(char[][])
36379=InternalCompletionProposal:canUseDiamond(CompletionContext)
36380=InternalCompletionProposal:getCompletionLocation()
36381=InternalCompletionProposal:getPackageName()
36382=InternalCompletionProposal:getDeclarationTypeName()
36383=InternalCompletionProposal:setRequiredProposals(CompletionProposal[])
36384=InternalCompletionProposal:getTokenEnd()
36385=InternalCompletionProposal:getReplaceStart()
36386=InternalCompletionProposal:getFlags()
36387=InternalCompletionProposal:getKey()
36388=InternalCompletionProposal:getTypeName()
36389=InternalCompletionProposal:getSignature()
36390=InternalCompletionProposal:getAdditionalFlags()
36391=InternalCompletionProposal:setReplaceRange(int, int)
36392=InternalCompletionProposal:getReplaceEnd()
36393=InternalCompletionProposal:setAdditionalFlags(int)
36394=InternalCompletionProposal:findConstructorParameterNames(char[], char[], char[], char[][])
36395=InternalCompletionProposal:getDeclarationKey()
36396=InternalCompletionProposal:setTokenRange(int, int)
36397=InternalCompletionProposal:setTypeName(char[])
36398=InternalCompletionProposal:setParameterTypeNames(char[][])
36399=InternalCompletionProposal:getCompletion()
36400=InternalCompletionProposal:toString()
36401=CompletionTests:testCompletionVariableName11()
36402=CompletionTests:testCompletionVariableNameOfArray1()
36403=CompletionTests:testDuplicateLocals3()
36404=CompletionTests:testCompletionKeywordFinal14()
36405=CompletionTests:testFavoriteImports031()
36406=CompletionTests:testCompletionBinaryOperator3()
36407=CompletionTests:testType2()
36408=CompletionTests:test270437b()
36409=CompletionTests:testCompletionKeywordNew1()
36410=CompletionTests:testCompletionKeywordClass17()
36411=CompletionTests:test203060c()
36412=CompletionTests:testCompletionFindClass2()
36413=CompletionTests:testCompletionKeywordPublic1()
36414=CompletionTests:testBug304006e()
36415=CompletionTests:testCompletionKeywordPublic20()
36416=CompletionTests:testCompletionArrayLength()
36417=CompletionTests:testCompletionKeywordNative8()
36418=CompletionTests:testBug401487b()
36419=CompletionTests:testCompletionKeywordClass4()
36420=CompletionTests:testCompletionThrowStatement()
36421=CompletionTests:testCompletionAfterInstanceof13()
36422=CompletionTests:testCompletionKeywordFalse4()
36423=CompletionTests:testCompletionKeywordFor6()
36424=CompletionTests:testFavoriteImports020()
36425=CompletionTests:testCompletionKeywordFinally14()
36426=CompletionTests:testCompletionVariableName22()
36427=CompletionTests:testCompletionKeywordThis6()
36428=CompletionTests:testBug402812b()
36429=CompletionTests:testCompletionKeywordImport1()
36430=CompletionTests:testCompletionStaticMethodDeclaration1()
36431=CompletionTests:testCompletionKeywordAbstract4()
36432=CompletionTests:testCompletionMethodDeclaration4()
36433=CompletionTests:testCompletionImportedType5()
36434=CompletionTests:testCompletionKeywordImplements6()
36435=CompletionTests:testCompletionKeywordPackage5()
36436=CompletionTests:testCompletionKeywordFinal8()
36437=CompletionTests:testCompletionKeywordWhile6()
36438=CompletionTests:testCompletionAfterInstanceof01_02()
36439=CompletionTests:testBug202634c()
36440=CompletionTests:testCompletionKeywordInstanceof2()
36441=CompletionTests:testCompletionKeywordSuper5()
36442=CompletionTests:testCompletionKeywordStrictfp4()
36443=CompletionTests:testCompletionInsideExtends10()
36444=CompletionTests:testCompletionOnStaticMember2()
36445=CompletionTests:testCompletionAfterEqualEqual1()
36446=CompletionTests:testBug267091b()
36447=CompletionTests:testBug350652()
36448=CompletionTests:testCompletionKeywordSuper3()
36449=CompletionTests:testBug164311_2()
36450=CompletionTests:testCompletionVariableName33()
36451=CompletionTests:testCompletionInsideExtends8()
36452=CompletionTests:testCompletionMethodDeclaration6()
36453=CompletionTests:testEvaluationContextCompletion3()
36454=CompletionTests:testCompletionVariableName9()
36455=CompletionTests:testDeprecationCheck5()
36456=CompletionTests:testCompletionAfterInstanceof22_01()
36457=CompletionTests:testCompletionKeywordSynchronized7()
36458=CompletionTests:testEvaluationContextCompletion()
36459=CompletionTests:testBug370971()
36460=CompletionTests:testBug385858d()
36461=CompletionTests:testCompletionSuperType8()
36462=CompletionTests:testCompletionKeywordPrivate2()
36463=CompletionTests:testBug346454i()
36464=CompletionTests:testCompletionAllocationExpressionIsParent4()
36465=CompletionTests:testCompletionEmptyTypeName4()
36466=CompletionTests:testCompletionKeywordDefault9()
36467=CompletionTests:testCompletionKeywordProtected7()
36468=CompletionTests:testCompletionKeywordBreak1()
36469=CompletionTests:testBug350652h()
36470=CompletionTests:testCompletionKeywordDo5()
36471=CompletionTests:testCompletionKeywordNull3()
36472=CompletionTests:testBug343342a()
36473=CompletionTests:testCompletionSameSuperClass()
36474=CompletionTests:testCompletionBasicVariableDeclaration1()
36475=CompletionTests:testCompletionKeywordReturn7()
36476=CompletionTests:testCompletionKeywordFinal16()
36477=CompletionTests:testBug343476()
36478=CompletionTests:testCompletionBinaryOperator1()
36479=CompletionTests:testType4()
36480=CompletionTests:testCompletionCastIsParent1()
36481=CompletionTests:testCompletionVariableName13()
36482=CompletionTests:testCompletionVariableNameOfArray3()
36483=CompletionTests:testCompletionKeywordNew3()
36484=CompletionTests:test269493b()
36485=CompletionTests:testCompletionKeywordClass19()
36486=CompletionTests:testDuplicateLocals1()
36487=CompletionTests:testCompletionKeywordExtends10()
36488=CompletionTests:testCompletionKeywordPublic3()
36489=CompletionTests:testBug304006c()
36490=CompletionTests:test328674a()
36491=CompletionTests:testCompletionKeywordClass6()
36492=CompletionTests:testCompletionUnresolvedFieldType()
36493=CompletionTests:testCompletionMessageSendIsParent5()
36494=CompletionTests:testCompletionVariableName24()
36495=CompletionTests:testLabel6()
36496=CompletionTests:testCompletionKeywordAbstract2()
36497=CompletionTests:testCompletionKeywordThis8()
36498=CompletionTests:testBug402812d()
36499=CompletionTests:testBug169682b()
36500=CompletionTests:testCompletionKeywordFalse2()
36501=CompletionTests:testInvalidField2()
36502=CompletionTests:testCompletionAfterInstanceof11()
36503=CompletionTests:testCompletionImportedType7()
36504=CompletionTests:testCompletionKeywordWhile8()
36505=CompletionTests:testCatchClauseExceptionRef11()
36506=CompletionTests:testBug202634e()
36507=CompletionTests:testCompletionKeywordPackage3()
36508=CompletionTests:testCompletionFindMethodInThis()
36509=CompletionTests:testCompletionKeywordSuper7()
36510=CompletionTests:testCompletionVariableInitializerInInitializer4()
36511=CompletionTests:testDeprecationCheck17()
36512=CompletionTests:testCompletionKeywordInstanceof4()
36513=CompletionTests:testCompletionKeywordStrictfp2()
36514=CompletionTests:testCompletionVariableName35()
36515=CompletionTests:testCompletionMemberType3()
36516=CompletionTests:test276526d()
36517=CompletionTests:testCompletionVariableName7()
36518=CompletionTests:test253008c()
36519=CompletionTests:testCompletionBasicMethod1()
36520=CompletionTests:testCompletionAbstractMethod3()
36521=CompletionTests:testCompletionMethodDeclaration8()
36522=CompletionTests:testDeprecationCheck7()
36523=CompletionTests:testCompletionAfterInstanceof22_03()
36524=CompletionTests:testCompletionMethodThrowsClause2()
36525=CompletionTests:testCompletionKeywordSynchronized5()
36526=CompletionTests:testCompletionKeywordStatic2()
36527=CompletionTests:testCompletionKeywordDefault10()
36528=CompletionTests:testBug350652j()
36529=CompletionTests:testCompletionSuperType6()
36530=CompletionTests:testBug385858b()
36531=CompletionTests:testCompletionKeywordDefault7()
36532=CompletionTests:testCompletionKeywordPrivate4()
36533=CompletionTests:testCompletionAllocationExpressionIsParent2()
36534=CompletionTests:testCompletionEmptyTypeName2()
36535=CompletionTests:testCompletionKeywordDo3()
36536=CompletionTests:testCompletionKeywordProtected9()
36537=CompletionTests:testCompletionKeywordTransient7()
36538=CompletionTests:testBug99811()
36539=CompletionTests:testCompletionKeywordReturn5()
36540=CompletionTests:testType6()
36541=CompletionTests:testCompletionKeywordThis11()
36542=CompletionTests:testCompletionVariableName15()
36543=CompletionTests:testCompletionKeywordCase6()
36544=CompletionTests:testCompletionKeywordElse1()
36545=CompletionTests:testCompletionAfterCase1()
36546=CompletionTests:test269493d()
36547=CompletionTests:testCompletionLocalName()
36548=CompletionTests:testCompletionAfterInstanceof03_05()
36549=CompletionTests:testCompletionEmptyToken1()
36550=CompletionTests:testCompletionKeywordFinal18()
36551=CompletionTests:testCompletionReturnInInitializer()
36552=CompletionTests:testCompletionOnClassFile()
36553=CompletionTests:testCatchClauseExceptionRef02()
36554=CompletionTests:testCompletionKeywordNative4()
36555=CompletionTests:testCompletionKeywordClass8()
36556=CompletionTests:testCompletionExpectedTypeOnEmptyToken3()
36557=CompletionTests:testCompletionFieldInitializer3()
36558=CompletionTests:testCompletionKeywordSwitch1()
36559=CompletionTests:testLabel4()
36560=CompletionTests:testCompletionVariableName26()
36561=CompletionTests:testCompletion2InterfacesWithSameMethod()
36562=CompletionTests:testCompletionAfterInstanceof17()
36563=CompletionTests:testCompletionStaticMethodDeclaration5()
36564=CompletionTests:testFavoriteImports024()
36565=CompletionTests:testCompletionKeywordPackage1()
36566=CompletionTests:testCompletionKeywordWhile2()
36567=CompletionTests:testCompletionKeywordAbstract8()
36568=CompletionTests:testCatchClauseExceptionRef13()
36569=CompletionTests:testCompletionInsideExtends14()
36570=CompletionTests:testCompletionKeywordInstanceof6()
36571=CompletionTests:testFavoriteImports011()
36572=CompletionTests:testCompletionVariableName37()
36573=CompletionTests:testCompletionAfterInstanceof06_01()
36574=CompletionTests:testCompletionKeywordSuper11()
36575=CompletionTests:test276526b()
36576=CompletionTests:testCompletionAfterIf2()
36577=CompletionTests:testCompletionKeywordThrow3()
36578=CompletionTests:testCompletionKeywordFinally8()
36579=CompletionTests:testDeprecationCheck1()
36580=CompletionTests:testCompletionKeywordFinally10()
36581=CompletionTests:testCompletionKeywordIf3()
36582=CompletionTests:testBug195346a()
36583=CompletionTests:testCompletionSuperType4()
36584=CompletionTests:testBug350652l()
36585=CompletionTests:test312603()
36586=CompletionTests:testCompletionAfterSwitch()
36587=CompletionTests:testCompletionKeywordBreak5()
36588=CompletionTests:testMethod2()
36589=CompletionTests:testType12()
36590=CompletionTests:test270436c()
36591=CompletionTests:testCompletionAssignmentInMethod1()
36592=CompletionTests:testCompletionKeywordSynchronized10()
36593=CompletionTests:suite()
36594=CompletionTests:testCompletionKeywordAssert6()
36595=CompletionTests:testNameWithUnresolvedReferences011()
36596=CompletionTests:testBug351444c()
36597=CompletionTests:testFavoriteImports033()
36598=CompletionTests:testCompletionAfterInstanceof04()
36599=CompletionTests:testCompletionAfterCase3()
36600=CompletionTests:testCompletionKeywordThis13()
36601=CompletionTests:testCompletionKeywordCase8()
36602=CompletionTests:test269493f()
36603=CompletionTests:testType8()
36604=CompletionTests:testCatchClauseExceptionRef04()
36605=CompletionTests:testCompletionFieldInitializer1()
36606=CompletionTests:testCompletionAbstractMethodRelevance1()
36607=CompletionTests:testCompletionKeywordNative6()
36608=CompletionTests:testCompletionVariableName17()
36609=CompletionTests:tearDownSuite()
36610=CompletionTests:testCompletionBasicAnonymousDeclaration1()
36611=CompletionTests:testCompletionKeywordPublic18()
36612=CompletionTests:testFavoriteImports022()
36613=CompletionTests:testInvalidMethod2()
36614=CompletionTests:testCompletionAfterInstanceof15()
36615=CompletionTests:testBug261534a()
36616=CompletionTests:testCompletionKeywordSynchronized9()
36617=CompletionTests:testBug343637g()
36618=CompletionTests:testCompletionKeywordTry4()
36619=CompletionTests:testCompletionSameClass()
36620=CompletionTests:testCompletionStaticMethodDeclaration3()
36621=CompletionTests:testCompletionKeywordAbstract6()
36622=CompletionTests:testCompletionMethodDeclaration2()
36623=CompletionTests:testArrayInitializer1()
36624=CompletionTests:testLabel2()
36625=CompletionTests:testCatchClauseExceptionRef15()
36626=CompletionTests:testCompletionKeywordWhile4()
36627=CompletionTests:testCompletionAfterInstanceof01_04()
36628=CompletionTests:testCompletionFieldName2()
36629=CompletionTests:testCompletionInsideExtends12()
36630=CompletionTests:testCompletionVariableName28()
36631=CompletionTests:testBug343637()
36632=CompletionTests:testCompletionKeywordIf1()
36633=CompletionTests:testCompletionKeywordSuper1()
36634=CompletionTests:test325481()
36635=CompletionTests:testCompletionKeywordFinally6()
36636=CompletionTests:testCompletionKeywordThrow5()
36637=CompletionTests:testCompletionKeywordTry2()
36638=CompletionTests:testDeprecationCheck3()
36639=CompletionTests:testCompletionKeywordFinally12()
36640=CompletionTests:testCompletionKeywordCase10()
36641=CompletionTests:testBug346415()
36642=CompletionTests:testCompletionVariableName39()
36643=CompletionTests:testBug350652n()
36644=CompletionTests:testCompletionFindConstructor()
36645=CompletionTests:testCompletionSuperType2()
36646=CompletionTests:testCompletionAllocationExpressionIsParent6()
36647=CompletionTests:testCompletionKeywordNew10()
36648=CompletionTests:testCompletionKeywordBreak3()
36649=CompletionTests:testCompletionKeywordThrows2()
36650=CompletionTests:test270436a()
36651=CompletionTests:testCompletionConditionalExpression3()
36652=CompletionTests:test253008()
36653=CompletionTests:testCompletionKeywordNull1()
36654=CompletionTests:testCompletionAssignmentInMethod3()
36655=CompletionTests:testType14()
36656=CompletionTests:testCompletionVariableNameUnresolvedType()
36657=CompletionTests:testCompletionPrefixMethodName2()
36658=CompletionTests:testBug351444a()
36659=CompletionTests:setUpSuite()
36660=CompletionTests:testDeprecationCheck11()
36661=CompletionTests:test269493h()
36662=CompletionTests:testCompletionKeywordThis15()
36663=CompletionTests:testCompletionKeywordTrue4()
36664=CompletionTests:testFavoriteImports016()
36665=CompletionTests:testCatchClauseExceptionRef06()
36666=CompletionTests:testCompletionVariableName19()
36667=CompletionTests:testNameWithUnresolvedReferences005()
36668=CompletionTests:testCompletionUnresolvedSuperclass()
36669=CompletionTests:testCompletionKeywordSwitch5()
36670=CompletionTests:testCompletionKeywordPublic9()
36671=CompletionTests:testCompletionKeywordCatch5()
36672=CompletionTests:testCompletionKeywordIf6()
36673=CompletionTests:testCompletionKeywordNew13()
36674=CompletionTests:testCompletionKeywordStatic9()
36675=CompletionTests:testCompletionKeywordPublic16()
36676=CompletionTests:testBug275518b()
36677=CompletionTests:testBug343637e()
36678=CompletionTests:testCompletionKeywordClass21()
36679=CompletionTests:testCompletionKeywordThrows3()
36680=CompletionTests:testCompletionKeywordTry6()
36681=CompletionTests:testCompletionKeywordDefault2()
36682=CompletionTests:testCompletionKeywordInterface17()
36683=CompletionTests:testFavoriteImports005()
36684=CompletionTests:testCompletionMethodDeclaration12()
36685=CompletionTests:testCompletionFieldName4()
36686=CompletionTests:testCompletionKeywordInterface9()
36687=CompletionTests:testCompletionFindMethodWhenInProcess()
36688=CompletionTests:testCompletionKeywordAssert1()
36689=CompletionTests:testCompletionKeywordCase2()
36690=CompletionTests:testNameWithUnresolvedReferences016()
36691=CompletionTests:testCompletionBasicKeyword1()
36692=CompletionTests:testCompletionKeywordAbstract11()
36693=CompletionTests:testCompletionAfterCase4()
36694=CompletionTests:testConstructor5()
36695=CompletionTests:testCompletionKeywordClass10()
36696=CompletionTests:testCompletionAfterInstanceof03_02()
36697=CompletionTests:testCompletionAmbiguousFieldName4()
36698=CompletionTests:testBug292087b()
36699=CompletionTests:testCompletionKeywordNew8()
36700=CompletionTests:testCompletionVariableName1()
36701=CompletionTests:testCompletionKeywordElse6()
36702=CompletionTests:testBug332268b()
36703=CompletionTests:testCompletionKeywordFinally4()
36704=CompletionTests:testBug338789()
36705=CompletionTests:testCompletionKeywordExtends3()
36706=CompletionTests:testBug338789b()
36707=CompletionTests:testCompletionCaseInsensitivePackage()
36708=CompletionTests:testCompletionBasicType3()
36709=CompletionTests:testCompletionMethodDeclaration()
36710=CompletionTests:testCompletionKeywordVolatile3()
36711=CompletionTests:testCompletionKeywordImport8()
36712=CompletionTests:testCompletionKeywordTransient1()
36713=CompletionTests:testFavoriteImports027()
36714=CompletionTests:testCompletionPackageAndClass1()
36715=CompletionTests:testBug308980b()
36716=CompletionTests:testCompletionInsideStaticMethod()
36717=CompletionTests:testBug292087()
36718=CompletionTests:testCompletionFindField1()
36719=CompletionTests:testCompletionKeywordContinue5()
36720=CompletionTests:testCompletionAllMemberTypes5()
36721=CompletionTests:testBug287939c()
36722=CompletionTests:testCompletionFindSecondaryType1()
36723=CompletionTests:testBug405250c()
36724=CompletionTests:testCompletionAfterInstanceof08()
36725=CompletionTests:testCompletionKeywordPrivate10()
36726=CompletionTests:testCatchClauseExceptionRef08()
36727=CompletionTests:testBug406468a()
36728=CompletionTests:testCompletionKeywordNative2()
36729=CompletionTests:testCompletionKeywordIf4()
36730=CompletionTests:testCompletionKeywordSwitch3()
36731=CompletionTests:testCompletionConstructorForAnonymousType()
36732=CompletionTests:testNameWithUnresolvedReferences003()
36733=CompletionTests:testBug346454b()
36734=CompletionTests:testCompletionFindMemberType1()
36735=CompletionTests:testCompletionKeywordClass23()
36736=CompletionTests:testCompletionKeywordNew15()
36737=CompletionTests:testCompletionAfterInstanceof02_03()
36738=CompletionTests:testCompletionFieldName()
36739=CompletionTests:testCompletionKeywordPublic14()
36740=CompletionTests:testCompletionAfterInstanceof19()
36741=CompletionTests:testCompletionKeywordWhile10()
36742=CompletionTests:testCompletionKeywordThrows5()
36743=CompletionTests:testCompletionKeywordInterface15()
36744=CompletionTests:testFavoriteImports003()
36745=CompletionTests:testCompletionFieldName6()
36746=CompletionTests:testCompletionFindImport2()
36747=CompletionTests:testCompletionStaticMethod1()
36748=CompletionTests:testCompletionKeywordInterface7()
36749=CompletionTests:testCompletionVariableInitializerInMethod2()
36750=CompletionTests:testConstructor1()
36751=CompletionTests:testCompletionKeywordAssert3()
36752=CompletionTests:testCompletionKeywordCase4()
36753=CompletionTests:testBug343637c()
36754=CompletionTests:testCompletionPrefixFieldName1()
36755=CompletionTests:testNameWithUnresolvedReferences014()
36756=CompletionTests:testCompletionMethodDeclaration10()
36757=CompletionTests:testCompletionKeywordFinal2()
36758=CompletionTests:testCompletionKeywordElse4()
36759=CompletionTests:testCompletionKeywordClass12()
36760=CompletionTests:testCompletionFindConstructor3()
36761=CompletionTests:testCompletionLocalType1()
36762=CompletionTests:testConstructor3()
36763=CompletionTests:testCompletionKeywordStatic10()
36764=CompletionTests:testBug292087d()
36765=CompletionTests:testBug350767b()
36766=CompletionTests:testCompletionAfterInstanceof03_04()
36767=CompletionTests:testCompletionInsideExtends2()
36768=CompletionTests:testParameterNames1()
36769=CompletionTests:testCompletionBasicType1()
36770=CompletionTests:testCompletionKeywordExtends5()
36771=CompletionTests:testCompletionKeywordFinally2()
36772=CompletionTests:testCompletionKeywordCatch3()
36773=CompletionTests:testCompletionKeywordVolatile5()
36774=CompletionTests:testCompletionKeywordImport6()
36775=CompletionTests:testCompletionStaticMethodDeclaration6()
36776=CompletionTests:testBug350652b()
36777=CompletionTests:testFavoriteImports025()
36778=CompletionTests:testType10()
36779=CompletionTests:testCompletionKeywordTrue2()
36780=CompletionTests:testCompletionKeywordProtected1()
36781=CompletionTests:testCompletionFindField3()
36782=CompletionTests:testCompletionAfterInstanceof18_03()
36783=CompletionTests:testCompletionKeywordContinue3()
36784=CompletionTests:testBug351444e()
36785=CompletionTests:testCompletionAllMemberTypes3()
36786=CompletionTests:test269493()
36787=CompletionTests:testCompletionKeywordWhile1()
36788=CompletionTests:testCompletionKeywordCatch10()
36789=CompletionTests:testCompletionVariableName30()
36790=CompletionTests:testCompletionKeywordFinal10()
36791=CompletionTests:testCompletionVoidMethod()
36792=CompletionTests:testBug405250a()
36793=CompletionTests:testCompletionMemberType()
36794=CompletionTests:testCompletionOnExtendFinalClass()
36795=CompletionTests:testBug287939a()
36796=CompletionTests:testCompletionAfterInstanceof21()
36797=CompletionTests:testCompletionKeywordImplements2()
36798=CompletionTests:testCompletionKeywordPublic5()
36799=CompletionTests:testDeprecationCheck8()
36800=CompletionTests:testNameWithUnresolvedReferences009()
36801=CompletionTests:testCompletionKeywordCatch9()
36802=CompletionTests:testCompletionKeywordSynchronized2()
36803=CompletionTests:testCompletionKeywordInterface13()
36804=CompletionTests:testBug346454d()
36805=CompletionTests:testAbortCompletion2()
36806=CompletionTests:testCompletionFindExceptions2()
36807=CompletionTests:testCompletionKeywordStatic5()
36808=CompletionTests:testCompletionKeywordPublic12()
36809=CompletionTests:testCompletionFindThisDotField()
36810=CompletionTests:testCompletionKeywordDefault6()
36811=CompletionTests:testFavoriteImports009()
36812=CompletionTests:testInconsistentHierarchy1()
36813=CompletionTests:testCompletionAllocationExpressionIsParent1()
36814=CompletionTests:testCompletionKeywordThrows7()
36815=CompletionTests:testCamelCaseType4()
36816=CompletionTests:testCompletionKeywordInterface5()
36817=CompletionTests:testCompletionVariableInitializerInMethod4()
36818=CompletionTests:testCompletionMethodDeclaration16()
36819=CompletionTests:testCompletionVisibilityCheckDisabled()
36820=CompletionTests:testCompletionImportedType1()
36821=CompletionTests:testCompletionKeywordFinal4()
36822=CompletionTests:testDeprecationCheck15()
36823=CompletionTests:testCompletionKeywordSuper9()
36824=CompletionTests:testCompletionKeywordClass14()
36825=CompletionTests:testCompletionKeywordReturn3()
36826=CompletionTests:testCompletionUnresolvedReturnType()
36827=CompletionTests:testCompletionCastIsParent2()
36828=CompletionTests:testCompletionKeywordAbstract15()
36829=CompletionTests:testCompletionKeywordNew4()
36830=CompletionTests:testCompletionVariableName5()
36831=CompletionTests:testCompletionOutOfBounds()
36832=CompletionTests:testBug310427b()
36833=CompletionTests:testCompletionInsideExtends4()
36834=CompletionTests:test253008e()
36835=CompletionTests:testCompletionAbstractMethod1()
36836=CompletionTests:testCompletionOnExtendFinalClass3()
36837=CompletionTests:testBug304006b()
36838=CompletionTests:testCompletionKeywordExtends7()
36839=CompletionTests:testCompletionMessageSendIsParent4()
36840=CompletionTests:testCompletionKeywordVolatile7()
36841=CompletionTests:testCompletionKeywordImport4()
36842=CompletionTests:testCompletionBasicMethodDeclaration1()
36843=CompletionTests:testCompletionKeywordDo1()
36844=CompletionTests:testCompletionKeywordPrivate6()
36845=CompletionTests:testCompletionFindSuperInterface()
36846=CompletionTests:testCompletionArraysCloneMethod()
36847=CompletionTests:testBug350652d()
36848=CompletionTests:testCompletionKeywordProtected3()
36849=CompletionTests:testCompletionKeywordTransient5()
36850=CompletionTests:testCompletionAfterInstanceof18_01()
36851=CompletionTests:testCompletionKeywordThis1()
36852=CompletionTests:testCompletionKeywordFor1()
36853=CompletionTests:testCompletionVariableInitializerInInitializer3()
36854=CompletionTests:testCompletionKeywordContinue1()
36855=CompletionTests:testCompletionReturnStatementIsParent1()
36856=CompletionTests:testCompletionUnresolvedEnclosingType()
36857=CompletionTests:testCompletionAfterEqualEqual2()
36858=CompletionTests:testCompletionKeywordFinal12()
36859=CompletionTests:testDeprecationCheck13()
36860=CompletionTests:testCompletionVariableName32()
36861=CompletionTests:testFavoriteImports018()
36862=CompletionTests:testCompletionKeywordImplements4()
36863=CompletionTests:testCompletionKeywordTrue6()
36864=CompletionTests:testCompletionFindClass()
36865=CompletionTests:testEvaluationContextCompletion6()
36866=CompletionTests:testNameWithUnresolvedReferences007()
36867=CompletionTests:testCompletionKeywordCatch7()
36868=CompletionTests:testCompletionKeywordPublic7()
36869=CompletionTests:testCompletionNonEmptyToken1()
36870=CompletionTests:testCompletionKeywordStatic7()
36871=CompletionTests:testCompletionKeywordInterface11()
36872=CompletionTests:testBug346454f()
36873=CompletionTests:testDuplicateLocalsType2()
36874=CompletionTests:testCamelCaseType2()
36875=CompletionTests:testFavoriteImports007()
36876=CompletionTests:testCompletionKeywordDefault4()
36877=CompletionTests:testCompletionAfterInstanceof24_1()
36878=CompletionTests:testBug307337()
36879=CompletionTests:testCompletionMethodDeclaration14()
36880=CompletionTests:testCompletionKeywordInterface3()
36881=CompletionTests:testCompletionImportedType3()
36882=CompletionTests:testCompletionFindMethod1()
36883=CompletionTests:testCompletionKeywordPublic10()
36884=CompletionTests:testNameWithUnresolvedReferences018()
36885=CompletionTests:testCompletionUnaryOperator2()
36886=CompletionTests:testCompletionKeywordFinal6()
36887=CompletionTests:testCompletionAfterSupercall1()
36888=CompletionTests:testCompletionAllMemberTypes()
36889=CompletionTests:testDuplicateLocals4()
36890=CompletionTests:testCompletionKeywordReturn1()
36891=CompletionTests:testConstructor7()
36892=CompletionTests:testCompletionKeywordAbstract13()
36893=CompletionTests:test203060b()
36894=CompletionTests:testCompletionAmbiguousFieldName2()
36895=CompletionTests:testCompletionInsideExtends6()
36896=CompletionTests:testCompletionKeywordElse8()
36897=CompletionTests:testCompletionKeywordClass16()
36898=CompletionTests:testCompletionKeywordInterface1()
36899=CompletionTests:testCompletionKeywordNew6()
36900=CompletionTests:testCompletionVariableName3()
36901=CompletionTests:testBug338789d()
36902=CompletionTests:testCompletionMessageSendIsParent2()
36903=CompletionTests:testCompletionKeywordClass1()
36904=CompletionTests:testCompletionKeywordExtends9()
36905=CompletionTests:testBug401487e()
36906=CompletionTests:testCompletionKeywordFalse5()
36907=CompletionTests:testCompletionKeywordImport2()
36908=CompletionTests:testCompletionKeywordFor3()
36909=CompletionTests:testBug350652f()
36910=CompletionTests:testCompletionKeywordThis3()
36911=CompletionTests:testCompletionKeywordPrivate8()
36912=CompletionTests:testBug202634b()
36913=CompletionTests:testCompletionKeywordTransient3()
36914=CompletionTests:testCompletionKeywordProtected5()
36915=CompletionTests:testCompletionAllMemberTypes7()
36916=CompletionTests:testCompletionKeywordStrictfp7()
36917=CompletionTests:testCompletionKeywordInstanceof1()
36918=CompletionTests:testCompletionKeywordPackage8()
36919=CompletionTests:testCompletionVariableInitializerInInitializer1()
36920=CompletionTests:testCompletionVariableName34()
36921=CompletionTests:testBug346454()
36922=CompletionTests:testCamelCaseLocalVariable1()
36923=CompletionTests:testEvaluationContextCompletion4()
36924=CompletionTests:testCompletionMethodDeclaration5()
36925=CompletionTests:testCompletionAbstractMethod4()
36926=CompletionTests:testCompletionKeywordThrow6()
36927=CompletionTests:testDeprecationCheck4()
36928=CompletionTests:testCompletionKeywordSynchronized6()
36929=CompletionTests:testCompletionKeywordStatic1()
36930=CompletionTests:testCompletionAmbiguousType2()
36931=CompletionTests:testBug385858c()
36932=CompletionTests:testCompletionKeywordNull4()
36933=CompletionTests:testCompletionSuperType7()
36934=CompletionTests:testCompletionKeywordPrivate1()
36935=CompletionTests:testBug350652i()
36936=CompletionTests:testBug346454h()
36937=CompletionTests:testCompletionKeywordProtected8()
36938=CompletionTests:testCompletionAllocationExpressionIsParent5()
36939=CompletionTests:testCompletionKeywordBreak2()
36940=CompletionTests:testCompletionAmbiguousFieldName()
36941=CompletionTests:testBug343342()
36942=CompletionTests:testCompletionKeywordDo6()
36943=CompletionTests:testCompletionKeywordTransient8()
36944=CompletionTests:testCompletionInsideExtends9()
36945=CompletionTests:testBug402574()
36946=CompletionTests:testCompletionKeywordReturn6()
36947=CompletionTests:testCompletionPrefixMethodName3()
36948=CompletionTests:testCompletionExpectedTypeIsNotValid()
36949=CompletionTests:testCatchClauseExceptionRef13b()
36950=CompletionTests:testCompletionBinaryOperator2()
36951=CompletionTests:testCompletionVariableNameOfArray2()
36952=CompletionTests:testBug249704()
36953=CompletionTests:testCompletionVariableName10()
36954=CompletionTests:testCompletionVariableName6_2()
36955=CompletionTests:testFavoriteImports030()
36956=CompletionTests:testCompletionKeywordFinal13()
36957=CompletionTests:testType3()
36958=CompletionTests:test270437a()
36959=CompletionTests:testCompletionVariableName5_2()
36960=CompletionTests:test203060d()
36961=CompletionTests:testDuplicateLocals2()
36962=CompletionTests:testCompletionAfterInstanceof01()
36963=CompletionTests:testCompletionKeywordClass18()
36964=CompletionTests:testCompletionKeywordPublic2()
36965=CompletionTests:testCompletionKeywordNative7()
36966=CompletionTests:testBug401487c()
36967=CompletionTests:testCompletionKeywordClass3()
36968=CompletionTests:testCompletionVariableName21()
36969=CompletionTests:testCompletionKeywordFor5()
36970=CompletionTests:testCompletionAmbiguousType()
36971=CompletionTests:testCompletionKeywordThis5()
36972=CompletionTests:testBug402812a()
36973=CompletionTests:testCompletionKeywordFalse3()
36974=CompletionTests:testCompletionAfterInstanceof12()
36975=CompletionTests:testCompletionKeywordAbstract3()
36976=CompletionTests:testCompletionImportedType4()
36977=CompletionTests:testCompletionKeywordPackage6()
36978=CompletionTests:testCompletionKeywordFinal9()
36979=CompletionTests:testBug202634d()
36980=CompletionTests:testCompletionAfterInstanceof01_03()
36981=CompletionTests:testCompletionKeywordWhile7()
36982=CompletionTests:testCamelCaseMethod1()
36983=CompletionTests:testCompletionKeywordStrictfp5()
36984=CompletionTests:testCompletionKeywordInstanceof3()
36985=CompletionTests:testCompletionKeywordSuper4()
36986=CompletionTests:testCompletionInsideExtends11()
36987=CompletionTests:testCompletionKeywordReturn4()
36988=CompletionTests:testCompletionMemberType2()
36989=CompletionTests:testCompletionVariableName36()
36990=CompletionTests:testCompletionKeywordAbstract16()
36991=CompletionTests:testBug310427a()
36992=CompletionTests:testCompletionAfterIf1()
36993=CompletionTests:testCompletionVariableName8()
36994=CompletionTests:test253008b()
36995=CompletionTests:testCompletionAfterInstanceof23()
36996=CompletionTests:testCompletionAbstractMethod2()
36997=CompletionTests:testCompletionMethodDeclaration7()
36998=CompletionTests:testDeprecationCheck6()
36999=CompletionTests:testCompletionArrayClone()
37000=CompletionTests:testCompletionAfterInstanceof22_02()
37001=CompletionTests:testEvaluationContextCompletion2()
37002=CompletionTests:testCompletionKeywordFinally9()
37003=CompletionTests:testCompletionKeywordSynchronized4()
37004=CompletionTests:testCompletionKeywordStatic3()
37005=CompletionTests:testCompletionSuperType5()
37006=CompletionTests:testBug385858a()
37007=CompletionTests:testCompletionKeywordPrivate3()
37008=CompletionTests:testBug350652k()
37009=CompletionTests:testCompletionAllocationExpressionIsParent3()
37010=CompletionTests:testCompletionEmptyTypeName3()
37011=CompletionTests:testCompletionKeywordDefault8()
37012=CompletionTests:testCompletionClassLiteralAfterAnonymousType1()
37013=CompletionTests:testCompletionKeywordDo4()
37014=CompletionTests:testBug310747()
37015=CompletionTests:testCompletionUnresolvedSuperinteface()
37016=CompletionTests:testCompletionKeywordTransient6()
37017=CompletionTests:testType5()
37018=CompletionTests:testCompletionKeywordFinal15()
37019=CompletionTests:testCompletionVariableNameOfArray4()
37020=CompletionTests:testCompletionVariableName12()
37021=CompletionTests:testCompletionKeywordNew2()
37022=CompletionTests:testCompletionKeywordPublic4()
37023=CompletionTests:testCompletionType1()
37024=CompletionTests:testBug401487a()
37025=CompletionTests:testBug304006d()
37026=CompletionTests:testCompletionKeywordClass5()
37027=CompletionTests:testCompletionMessageSendIsParent6()
37028=CompletionTests:testCompletionVariableName23()
37029=CompletionTests:testAbortCompletion1()
37030=CompletionTests:testCompletionKeywordAbstract1()
37031=CompletionTests:testCompletionWithBinaryFolder()
37032=CompletionTests:testCompletionAfterInstanceof10()
37033=CompletionTests:testCompletionKeywordThis7()
37034=CompletionTests:testBug402812c()
37035=CompletionTests:testCompletionKeywordFalse1()
37036=CompletionTests:testInvalidField1()
37037=CompletionTests:testCompletionImportedType6()
37038=CompletionTests:testBug202634f()
37039=CompletionTests:testCompletionKeywordWhile9()
37040=CompletionTests:testCompletionKeywordPackage4()
37041=CompletionTests:testCompletionKeywordSuper6()
37042=CompletionTests:testCatchClauseExceptionRef10()
37043=CompletionTests:testDeprecationCheck16()
37044=CompletionTests:testCompletionKeywordStrictfp3()
37045=CompletionTests:testCompletionKeywordInstanceof5()
37046=CompletionTests:test276526c()
37047=CompletionTests:testCompletionKeywordSuper12()
37048=CompletionTests:testCompletionKeywordFinally7()
37049=CompletionTests:testCamelCaseMethodDeclaration1()
37050=CompletionTests:testCompletionKeywordTry1()
37051=CompletionTests:testCompletionKeywordThrow2()
37052=CompletionTests:testCompletionKeywordIf2()
37053=CompletionTests:testCompletionVariableName38()
37054=CompletionTests:testNameWithUnresolvedReferences001()
37055=CompletionTests:testCompletionSuperType3()
37056=CompletionTests:testFavoriteImports001()
37057=CompletionTests:testBug350652m()
37058=CompletionTests:testBug195346b()
37059=CompletionTests:testCompletionAfterInstanceof02_01()
37060=CompletionTests:testCompletionEmptyTypeName1()
37061=CompletionTests:testCompletionKeywordBreak6()
37062=CompletionTests:testMethod1()
37063=CompletionTests:testType11()
37064=CompletionTests:test201762()
37065=CompletionTests:testCompletionAssignmentInMethod2()
37066=CompletionTests:testCompletionKeywordSynchronized11()
37067=CompletionTests:testCompletionKeywordAssert5()
37068=CompletionTests:testCompletionFindClassDefaultPackage()
37069=CompletionTests:testNameWithUnresolvedReferences012()
37070=CompletionTests:testBug351444d()
37071=CompletionTests:testCompletionKeywordFinal17()
37072=CompletionTests:testCompletionKeywordElse2()
37073=CompletionTests:testCompletionQualifiedExpectedType()
37074=CompletionTests:testType7()
37075=CompletionTests:testCompletionAfterInstanceof05()
37076=CompletionTests:testCompletionKeywordThis10()
37077=CompletionTests:testCompletionVariableName14()
37078=CompletionTests:testCompletionKeywordCase7()
37079=CompletionTests:testCompletionAfterInstanceof03_06()
37080=CompletionTests:testCompletionEmptyToken2()
37081=CompletionTests:test269493c()
37082=CompletionTests:testCompletionFindConstructor5()
37083=CompletionTests:testBug164311()
37084=CompletionTests:testBug406468b()
37085=CompletionTests:testCatchClauseExceptionRef01()
37086=CompletionTests:testCompletionKeywordNative3()
37087=CompletionTests:testCompletionKeywordClass7()
37088=CompletionTests:testCompletionFieldInitializer4()
37089=CompletionTests:testCompletionMethodThrowsClause()
37090=CompletionTests:testFavoriteImports023()
37091=CompletionTests:testLabel5()
37092=CompletionTests:testCompletionAfterInstanceof16()
37093=CompletionTests:testCompletionVariableName25()
37094=CompletionTests:testCompletionKeywordCatch1()
37095=CompletionTests:testCompletionVisibilityCheckEnabled()
37096=CompletionTests:testCompletionStaticMethodDeclaration4()
37097=CompletionTests:testCompletionKeywordPublic19()
37098=CompletionTests:testCompletionKeywordThis9()
37099=CompletionTests:testCompletionKeywordWhile3()
37100=CompletionTests:testCompletionKeywordPackage2()
37101=CompletionTests:testCompletionKeywordAbstract7()
37102=CompletionTests:testCatchClauseExceptionRef12()
37103=CompletionTests:testCompletionKeywordStrictfp1()
37104=CompletionTests:testCompletionImportedType8()
37105=CompletionTests:testNameWithUnresolvedReferences010()
37106=CompletionTests:test276526a()
37107=CompletionTests:testCompletionAfterInstanceof06_02()
37108=CompletionTests:testCompletionKeywordSuper2()
37109=CompletionTests:testCompletionBasicLocalVariable1()
37110=CompletionTests:testCompletionKeywordThrow4()
37111=CompletionTests:testCompletionKeywordFinally5()
37112=CompletionTests:testCompletionKeywordThrows1()
37113=CompletionTests:testCompletionKeywordTry3()
37114=CompletionTests:testDeprecationCheck2()
37115=CompletionTests:testCompletionKeywordFinally11()
37116=CompletionTests:testCompletionKeywordSynchronized8()
37117=CompletionTests:testCompletionVariableName14_2()
37118=CompletionTests:testCompletionKeywordNew11()
37119=CompletionTests:testCompletionAbstractMethodRelevance2()
37120=CompletionTests:testCompletionConditionalExpression2()
37121=CompletionTests:testCompletionKeywordNull2()
37122=CompletionTests:testCompletionKeywordBreak4()
37123=CompletionTests:testCompletionAssignmentInMethod4()
37124=CompletionTests:testMethod3()
37125=CompletionTests:testType13()
37126=CompletionTests:test270436b()
37127=CompletionTests:testBug343342b()
37128=CompletionTests:testBug346454c_2()
37129=CompletionTests:testBug351444b()
37130=CompletionTests:testCompletionPrefixMethodName1()
37131=CompletionTests:testCompletionKeywordCase9()
37132=CompletionTests:testFavoriteImports032()
37133=CompletionTests:testCompletionAfterCase2()
37134=CompletionTests:testCompletionKeywordThis12()
37135=CompletionTests:test269493e()
37136=CompletionTests:testType9()
37137=CompletionTests:testCompletionNonStaticFieldRelevance()
37138=CompletionTests:testCompletionKeywordClass9()
37139=CompletionTests:testCatchClauseExceptionRef03()
37140=CompletionTests:test270437c()
37141=CompletionTests:testCompletionKeywordNative5()
37142=CompletionTests:testCompletionVariableName16()
37143=CompletionTests:testCompletionExpectedTypeOnEmptyToken4()
37144=CompletionTests:testCompletionFieldInitializer2()
37145=CompletionTests:testCompletionAfterInstanceof14()
37146=CompletionTests:testCompletionKeywordPublic17()
37147=CompletionTests:testBug343637h()
37148=CompletionTests:testInvalidMethod1()
37149=CompletionTests:testBug261534b()
37150=CompletionTests:test325481b()
37151=CompletionTests:testCompletionKeywordClass20()
37152=CompletionTests:testBug275518a()
37153=CompletionTests:testCompletionKeywordExtends1()
37154=CompletionTests:testCompletionKeywordVolatile1()
37155=CompletionTests:testCompletionKeywordFinally13()
37156=CompletionTests:testCompletionKeywordInterface18()
37157=CompletionTests:testCompletionStaticMethodDeclaration2()
37158=CompletionTests:testCompletionKeywordAbstract5()
37159=CompletionTests:testCompletionMethodDeclaration3()
37160=CompletionTests:testLabel3()
37161=CompletionTests:testCompletionKeywordWhile5()
37162=CompletionTests:testCatchClauseExceptionRef14()
37163=CompletionTests:testCompletionWithProblem1()
37164=CompletionTests:testCompletionInsideExtends13()
37165=CompletionTests:testCompletionVariableName27()
37166=CompletionTests:testCompletionOnStaticMember1()
37167=CompletionTests:testCompletionFindConstructor2()
37168=CompletionTests:testCompletionKeywordAbstract10()
37169=CompletionTests:testCompletionKeywordElse5()
37170=CompletionTests:testCompletionBasicField1()
37171=CompletionTests:testConstructor4()
37172=CompletionTests:testCompletionQualifiedAllocationType1()
37173=CompletionTests:testCompletionAfterInstanceof03_01()
37174=CompletionTests:testBug292087c()
37175=CompletionTests:testCompletionAmbiguousFieldName3()
37176=CompletionTests:testCompletionVariableName2()
37177=CompletionTests:testCompletionInsideExtends1()
37178=CompletionTests:testBug308980a()
37179=CompletionTests:testCompletionSuperType()
37180=CompletionTests:testCompletionKeywordExtends2()
37181=CompletionTests:testBug338789c()
37182=CompletionTests:testCompletionBasicType2()
37183=CompletionTests:testCompletionKeywordFinally3()
37184=CompletionTests:testCompletionNullRequestor()
37185=CompletionTests:testCompletionKeywordVolatile2()
37186=CompletionTests:testFavoriteImports028()
37187=CompletionTests:testCompletionPackageAndClass2()
37188=CompletionTests:testCompletionKeywordPrivate9()
37189=CompletionTests:testCompletionFindField2()
37190=CompletionTests:testCompletionAllMemberTypes4()
37191=CompletionTests:testDeprecationCheck10()
37192=CompletionTests:testCompletionAfterInstanceof09()
37193=CompletionTests:test269493g()
37194=CompletionTests:testCompletionKeywordThis14()
37195=CompletionTests:testCompletionKeywordTrue5()
37196=CompletionTests:testCatchClauseExceptionRef05()
37197=CompletionTests:testCompletionVariableName18()
37198=CompletionTests:testNameWithUnresolvedReferences004()
37199=CompletionTests:testCompletionKeywordCatch6()
37200=CompletionTests:testCompletionKeywordSwitch4()
37201=CompletionTests:testCompletionKeywordNew12()
37202=CompletionTests:testCompletionKeywordStatic8()
37203=CompletionTests:testCompletionAfterInstanceof02_04()
37204=CompletionTests:testCompletionKeywordDefault1()
37205=CompletionTests:testCompletionKeywordPublic15()
37206=CompletionTests:testBug275518c()
37207=CompletionTests:testCompletionConditionalExpression1()
37208=CompletionTests:testCompletionKeywordClass22()
37209=CompletionTests:testBug343637f()
37210=CompletionTests:testCompletionKeywordTry5()
37211=CompletionTests:testCamelCaseType1()
37212=CompletionTests:testCompletionKeywordThrows4()
37213=CompletionTests:testFavoriteImports004()
37214=CompletionTests:testLabel1()
37215=CompletionTests:testCompletionKeywordInterface16()
37216=CompletionTests:testCompletionFindLocalVariable()
37217=CompletionTests:testCompletionMethodDeclaration13()
37218=CompletionTests:testCompletionKeywordNew9()
37219=CompletionTests:testCompletionKeywordInterface8()
37220=CompletionTests:testCompletionVariableInitializerInMethod1()
37221=CompletionTests:testCompletionFieldName3()
37222=CompletionTests:testCompletionKeywordProtected10()
37223=CompletionTests:testCompletionKeywordAssert2()
37224=CompletionTests:testCompletionFindImport1()
37225=CompletionTests:testCompletionKeywordCase3()
37226=CompletionTests:testNameWithUnresolvedReferences015()
37227=CompletionTests:testCompletionKeywordFinal1()
37228=CompletionTests:testCompletionVariableName29()
37229=CompletionTests:testCompletionFindConstructor4()
37230=CompletionTests:testCompletionKeywordElse3()
37231=CompletionTests:testCompletionKeywordClass11()
37232=CompletionTests:testCompletionKeywordSuper10()
37233=CompletionTests:testConstructor2()
37234=CompletionTests:testCompletionAfterInstanceof03_03()
37235=CompletionTests:testCompletionInsideExtends3()
37236=CompletionTests:testBug332268a()
37237=CompletionTests:testCompletionBasicPackage1()
37238=CompletionTests:testCompletionExpectedTypeOnEmptyToken1()
37239=CompletionTests:testCompletionKeywordExtends4()
37240=CompletionTests:testCompletionToplevelType1()
37241=CompletionTests:testCompletionKeywordFinally1()
37242=CompletionTests:testCompletionKeywordCatch2()
37243=CompletionTests:testCompletionKeywordVolatile4()
37244=CompletionTests:testCompletionKeywordImport7()
37245=CompletionTests:testFavoriteImports026()
37246=CompletionTests:testBug350652c()
37247=CompletionTests:testCompletionKeywordProtected2()
37248=CompletionTests:testCompletionKeywordTrue1()
37249=CompletionTests:testCompletionAfterInstanceof18_02()
37250=CompletionTests:testCompletionKeywordContinue4()
37251=CompletionTests:testBug132679()
37252=CompletionTests:testCompletionAllMemberTypes2()
37253=CompletionTests:testBug405250d()
37254=CompletionTests:testCompletionKeywordCase5()
37255=CompletionTests:testCompletionAfterInstanceof07()
37256=CompletionTests:test269493i()
37257=CompletionTests:testBug287939d()
37258=CompletionTests:testCompletionKeywordTrue3()
37259=CompletionTests:testCompletionKeywordImplements1()
37260=CompletionTests:testFavoriteImports013()
37261=CompletionTests:testCatchClauseExceptionRef07()
37262=CompletionTests:testCompletionKeywordNative1()
37263=CompletionTests:testCompletionKeywordThrow1()
37264=CompletionTests:testCompletionKeywordIf5()
37265=CompletionTests:testCompletionArrayAccess1()
37266=CompletionTests:testCompletionKeywordCatch4()
37267=CompletionTests:testCompletionKeywordSwitch2()
37268=CompletionTests:testNameWithUnresolvedReferences002()
37269=CompletionTests:testCompletionFindMemberType2()
37270=CompletionTests:testCompletionKeywordClass24()
37271=CompletionTests:testCompletionKeywordInterface14()
37272=CompletionTests:testBug346454c()
37273=CompletionTests:testCompletionKeywordNew14()
37274=CompletionTests:testCompletionAfterInstanceof02_02()
37275=CompletionTests:testCompletionKeywordPublic13()
37276=CompletionTests:testBug343637d()
37277=CompletionTests:testCompletionVariableName9_2()
37278=CompletionTests:testCompletionKeywordThrows6()
37279=CompletionTests:testFavoriteImports002()
37280=CompletionTests:testCompletionKeywordAbstract9()
37281=CompletionTests:testCompletionKeywordSynchronized12()
37282=CompletionTests:testCompletionFieldName5()
37283=CompletionTests:testCompletionVariableInitializerInMethod3()
37284=CompletionTests:testCompletionKeywordInterface6()
37285=CompletionTests:testBug343476a()
37286=CompletionTests:testCompletionKeywordAssert4()
37287=CompletionTests:testCompletionKeywordFinal3()
37288=CompletionTests:testCompletionPrefixFieldName2()
37289=CompletionTests:testNameWithUnresolvedReferences013()
37290=CompletionTests:testCompletionMethodDeclaration11()
37291=CompletionTests:testCompletionKeywordClass13()
37292=CompletionTests:testCompletionKeywordReturn2()
37293=CompletionTests:testCompletionKeywordAbstract14()
37294=CompletionTests:testStaticMembers1()
37295=CompletionTests:testCompletionKeywordStrictfp8()
37296=CompletionTests:testCompletionVariableName6()
37297=CompletionTests:testCompletionBasicCompletionContext()
37298=CompletionTests:testCompletionInsideExtends5()
37299=CompletionTests:getVarClassSignature(IEvaluationContext)
37300=CompletionTests:testCompletionKeywordNew5()
37301=CompletionTests:test253008d()
37302=CompletionTests:testCompletionAfterInstanceof22_04()
37303=CompletionTests:testCompletionMethodDeclaration9()
37304=CompletionTests:testBug304006a()
37305=CompletionTests:testCompletionKeywordExtends6()
37306=CompletionTests:testCompletionInstanceofOperator1()
37307=CompletionTests:testCompletionMessageSendIsParent3()
37308=CompletionTests:testBug96213()
37309=CompletionTests:testCompletionKeywordImport5()
37310=CompletionTests:testCompletionKeywordVolatile6()
37311=CompletionTests:testCompletionKeywordFor2()
37312=CompletionTests:testCompletionKeywordPrivate5()
37313=CompletionTests:testBug350652e()
37314=CompletionTests:testCompletionKeywordDo2()
37315=CompletionTests:testBug244820()
37316=CompletionTests:testCompletionKeywordProtected4()
37317=CompletionTests:testCompletionKeywordTransient4()
37318=CompletionTests:testCompletionKeywordThis2()
37319=CompletionTests:testCompletionExactNameCaseInsensitive()
37320=CompletionTests:testCompletionKeywordContinue2()
37321=CompletionTests:testCompletionVariableInitializerInInitializer2()
37322=CompletionTests:testCompletionReturnStatementIsParent2()
37323=CompletionTests:testBug405250b()
37324=CompletionTests:testDeprecationCheck14()
37325=CompletionTests:testBug287939b()
37326=CompletionTests:testFavoriteImports019()
37327=CompletionTests:testCatchClauseExceptionRef09()
37328=CompletionTests:testCompletionKeywordImplements3()
37329=CompletionTests:testCompletionAfterInstanceof20()
37330=CompletionTests:testDeprecationCheck9()
37331=CompletionTests:testNameWithUnresolvedReferences008()
37332=CompletionTests:test328674b()
37333=CompletionTests:testCompletionKeywordNew16()
37334=CompletionTests:testCompletionKeywordSynchronized3()
37335=CompletionTests:testCompletionKeywordPublic6()
37336=CompletionTests:testCompletionKeywordInterface12()
37337=CompletionTests:testBug346454e()
37338=CompletionTests:testCompletionFindExceptions1()
37339=CompletionTests:testCompletionKeywordStatic4()
37340=CompletionTests:testCompletionKeywordPublic11()
37341=CompletionTests:testBug421469()
37342=CompletionTests:testCompletionArgumentName()
37343=CompletionTests:testCompletionObjectsMethodWithInterfaceReceiver()
37344=CompletionTests:testBug169682a()
37345=CompletionTests:testCamelCaseType5()
37346=CompletionTests:testCompletionKeywordDefault5()
37347=CompletionTests:testCompletionKeywordThrows8()
37348=CompletionTests:testCompletionAfterInstanceof24_2()
37349=CompletionTests:testCompletionKeywordInterface4()
37350=CompletionTests:testCompletionFieldName7()
37351=CompletionTests:testCompletionCatchArgumentName2()
37352=CompletionTests:testCompletionMethodDeclaration17()
37353=CompletionTests:testCompletionInsideGenericClass()
37354=CompletionTests:testCompletionKeywordFinal5()
37355=CompletionTests:testBug343637b()
37356=CompletionTests:testCompletionKeywordSuper8()
37357=CompletionTests:testBug267091a()
37358=CompletionTests:test253008f()
37359=CompletionTests:testCompletionKeywordAbstract12()
37360=CompletionTests:testCompletionKeywordClass15()
37361=CompletionTests:test203060a()
37362=CompletionTests:testConstructor6()
37363=CompletionTests:testDuplicateLocals5()
37364=CompletionTests:testCompletionInsideExtends7()
37365=CompletionTests:testCompletionCaseInsensitive()
37366=CompletionTests:testCompletionKeywordNew7()
37367=CompletionTests:testCompletionKeywordElse7()
37368=CompletionTests:testCompletionVariableName4()
37369=CompletionTests:testCompletionOnExtendFinalClass2()
37370=CompletionTests:testBug338789e()
37371=CompletionTests:testCompletionMessageSendIsParent1()
37372=CompletionTests:CompletionTests(String)
37373=CompletionTests:testCompletionKeywordClass2()
37374=CompletionTests:testBug401487d()
37375=CompletionTests:testCompletionKeywordExtends8()
37376=CompletionTests:testCompletionKeywordVolatile8()
37377=CompletionTests:testCompletionKeywordImport3()
37378=CompletionTests:testCompletionVariableName20()
37379=CompletionTests:testCompletionKeywordFor4()
37380=CompletionTests:testCompletionKeywordThis4()
37381=CompletionTests:testCompletionKeywordPrivate7()
37382=CompletionTests:testCompletionKeywordTransient2()
37383=CompletionTests:testBug350652g()
37384=CompletionTests:testBug202634a()
37385=CompletionTests:testBug346415a()
37386=CompletionTests:testCompletionKeywordProtected6()
37387=CompletionTests:testCompletionRepeatedType()
37388=CompletionTests:testCompletionAllMemberTypes6()
37389=CompletionTests:testCompletionKeywordStrictfp6()
37390=CompletionTests:testBug351444()
37391=CompletionTests:testCompletionKeywordPackage7()
37392=CompletionTests:testType1()
37393=CompletionTests:testCompletionVariableName31()
37394=CompletionTests:testCompletionKeywordFinal11()
37395=CompletionTests:testDeprecationCheck12()
37396=CompletionTests:testCamelCaseField1()
37397=CompletionTests:testFavoriteImports017()
37398=CompletionTests:testCompletionUnresolvedParameterType()
37399=CompletionTests:testEvaluationContextCompletion5()
37400=CompletionTests:testCompletionCatchArgumentName()
37401=CompletionTests:testBug350767()
37402=CompletionTests:testCompletionKeywordCatch8()
37403=CompletionTests:testCompletionKeywordSwitch6()
37404=CompletionTests:testNameWithUnresolvedReferences006()
37405=CompletionTests:testCompletionKeywordSynchronized1()
37406=CompletionTests:testCompletionKeywordPublic8()
37407=CompletionTests:testCompletionKeywordInterface10()
37408=CompletionTests:testBug346454g()
37409=CompletionTests:testCompletionKeywordStatic6()
37410=CompletionTests:testCamelCaseType3()
37411=CompletionTests:testDuplicateLocalsType1()
37412=CompletionTests:testCompletionEndOfCompilationUnit()
37413=CompletionTests:testFavoriteImports006()
37414=CompletionTests:testCompletionBasicPotentialMethodDeclaration1()
37415=CompletionTests:testCompletionKeywordDefault3()
37416=CompletionTests:testCompletionKeywordInterface2()
37417=CompletionTests:testCompletionKeywordImplements5()
37418=CompletionTests:testCompletionMethodDeclaration15()
37419=CompletionTests:testCompletionImportedType2()
37420=CompletionTests:testCompletionKeywordFinal7()
37421=CompletionTests:testCompletionFindMethod2()
37422=CompletionTests:testCompletionKeywordCase1()
37423=CompletionTests:testNameWithUnresolvedReferences017()
37424=CompletionTests:testBug421469a()
37425=CompletionTests:testCompletionUnaryOperator1()
37426=A:foo()
37427=B:foo()
37428=X:foo(T)
37429=ASTBasedMethodDeclarationImpl:ASTBasedMethodDeclarationImpl(org.eclipse.jdt.core.dom.BodyDeclaration, IFile, BaseProcessorEnv)
37430=ASTBasedMethodDeclarationImpl:accept(DeclarationVisitor)
37431=ASTBasedMethodDeclarationImpl:getReturnType()
37432=ASTBasedMethodDeclarationImpl:kind()
37433=OriginalImportEntry:asOriginalImportEntry()
37434=OriginalImportEntry:OriginalImportEntry(ImportName, Collection<ImportComment>, int, IRegion, IRegion)
37435=OriginalImportEntry:isOriginal()
37436=OriginalImportEntry:toString()
37437=TestBuilderParticipant:processAnnotations(BuildContext[])
37438=TestBuilderParticipant:aboutToBuild(IJavaProject)
37439=TestBuilderParticipant:buildFinished(IJavaProject)
37440=TestBuilderParticipant:isAnnotationProcessor()
37441=TestBuilderParticipant:cleanStarting(IJavaProject)
37442=TestBuilderParticipant:buildStarting(BuildContext[], boolean)
37443=TestBuilderParticipant:isActive(IJavaProject)
37444=X:bar(List<? extends X<?, ?>>)
37445=X:foo()
37446=A:foo()
37447=DeclarationsUtil:hides(MemberDeclaration, MemberDeclaration)
37448=DeclarationsUtil:overrides(MethodDeclaration, MethodDeclaration)
37449=DeclarationsUtil:isVisibleForHiding(ITypeBinding, ITypeBinding, int)
37450=DeclarationsUtil:getDeclaringClass(IBinding)
37451=DeclarationsUtil:getBinding(MemberDeclaration)
37452=SourceJavadocParser:parseIdentifierTag(boolean)
37453=SourceJavadocParser:checkDeprecation(int)
37454=SourceJavadocParser:parseSimpleTag()
37455=SourceJavadocParser:SourceJavadocParser(Parser)
37456=A:f()
37457=B:method(int)
37458=A:A()
37459=X:foo(int, int)
37460=JavaSearchGenericMethodExactTests:JavaSearchGenericMethodExactTests(String)
37461=JavaSearchGenericMethodExactTests:removeFirstTypeArgument(char[])
37462=JavaSearchGenericMethodExactTests:addResultLine(StringBuffer, char[])
37463=JavaSearchGenericMethodExactTests:suite()
37464=TestB:foo2()
37465=TestB:foo()
37466=TestB:foo4()
37467=TestB:foo1()
37468=TestB:foo3()
37469=A:goo()
37470=NullBuffer:NullBuffer(IFile, IOpenable, boolean)
37471=Test:foo(int)
37472=RecoveredUnit:resetPendingModifiers()
37473=RecoveredUnit:add(FieldDeclaration, int)
37474=RecoveredUnit:updateParseTree()
37475=RecoveredUnit:updatedCompilationUnitDeclaration()
37476=RecoveredUnit:addModifier(int, int)
37477=RecoveredUnit:updateSourceEndIfNecessary(int, int)
37478=RecoveredUnit:addAnnotationName(int, int, int, int)
37479=RecoveredUnit:sourceEnd()
37480=RecoveredUnit:toString(int)
37481=RecoveredUnit:RecoveredUnit(CompilationUnitDeclaration, int, Parser)
37482=RecoveredUnit:add(TypeDeclaration, int)
37483=RecoveredUnit:add(ImportReference, int)
37484=RecoveredUnit:add(AbstractMethodDeclaration, int)
37485=RecoveredUnit:parseTree()
37486=IMemberValuePair:getValue()
37487=IMemberValuePair:getValueKind()
37488=IMemberValuePair:getMemberName()
37489=First:Test:Test(float)
37490=First:First()
37491=ThrowStatement:traverse(ASTVisitor, BlockScope)
37492=ThrowStatement:printStatement(int, StringBuffer)
37493=ThrowStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
37494=ThrowStatement:generateCode(BlockScope, CodeStream)
37495=ThrowStatement:ThrowStatement(Expression, int, int)
37496=ThrowStatement:doesNotCompleteNormally()
37497=ThrowStatement:resolve(BlockScope)
37498=GenericTypeTest:test1241()
37499=GenericTypeTest:test1287()
37500=GenericTypeTest:test0389()
37501=GenericTypeTest:test0136()
37502=GenericTypeTest:test0429e()
37503=GenericTypeTest:test0550()
37504=GenericTypeTest:test0596()
37505=GenericTypeTest:test0739()
37506=GenericTypeTest:test0343()
37507=GenericTypeTest:test0900()
37508=GenericTypeTest:test1189()
37509=GenericTypeTest:test0946()
37510=GenericTypeTest:test0050b()
37511=GenericTypeTest:test0027()
37512=GenericTypeTest:test1385()
37513=GenericTypeTest:test1132()
37514=GenericTypeTest:test0694()
37515=GenericTypeTest:test0234()
37516=GenericTypeTest:test0848()
37517=GenericTypeTest:test1034()
37518=GenericTypeTest:test0487()
37519=GenericTypeTest:test0802()
37520=GenericTypeTest:test0441()
37521=GenericTypeTest:test0101()
37522=GenericTypeTest:test0147()
37523=GenericTypeTest:test1023()
37524=GenericTypeTest:test1252()
37525=GenericTypeTest:test1298()
37526=GenericTypeTest:test0890()
37527=GenericTypeTest:test0332()
37528=GenericTypeTest:test0378()
37529=GenericTypeTest:test0561()
37530=GenericTypeTest:test0704()
37531=GenericTypeTest:test0792()
37532=GenericTypeTest:test1018a()
37533=GenericTypeTest:test0935()
37534=GenericTypeTest:test1021c()
37535=GenericTypeTest:test1121()
37536=GenericTypeTest:test1167()
37537=GenericTypeTest:test1396()
37538=GenericTypeTest:test0016()
37539=GenericTypeTest:test0245()
37540=GenericTypeTest:test0508()
37541=GenericTypeTest:test0430()
37542=GenericTypeTest:test0476()
37543=GenericTypeTest:test0606()
37544=GenericTypeTest:test0837()
37545=GenericTypeTest:test1350()
37546=GenericTypeTest:test1069()
37547=GenericTypeTest:test1012()
37548=GenericTypeTest:test1263()
37549=GenericTypeTest:test0114()
37550=GenericTypeTest:test0715()
37551=GenericTypeTest:test0321()
37552=GenericTypeTest:test0367()
37553=GenericTypeTest:test0572()
37554=GenericTypeTest:test0922()
37555=GenericTypeTest:test1308()
37556=GenericTypeTest:test0968()
37557=GenericTypeTest:test0049()
37558=GenericTypeTest:test1110()
37559=GenericTypeTest:test1156()
37560=GenericTypeTest:test1417()
37561=GenericTypeTest:test0519()
37562=GenericTypeTest:test0003()
37563=GenericTypeTest:test0258()
37564=GenericTypeTest:test0465()
37565=GenericTypeTest:test0670()
37566=GenericTypeTest:test0617()
37567=GenericTypeTest:test0212()
37568=GenericTypeTest:test1361()
37569=GenericTypeTest:test1058()
37570=GenericTypeTest:test0824()
37571=GenericTypeTest:test1203c()
37572=GenericTypeTest:test1001()
37573=GenericTypeTest:test1274()
37574=GenericTypeTest:test0125()
37575=GenericTypeTest:test0310()
37576=GenericTypeTest:test0356()
37577=GenericTypeTest:test0726()
37578=GenericTypeTest:test1176()
37579=GenericTypeTest:test0911()
37580=GenericTypeTest:test1319()
37581=GenericTypeTest:test0583()
37582=GenericTypeTest:test0957()
37583=GenericTypeTest:test0038()
37584=GenericTypeTest:test1406()
37585=GenericTypeTest:test1145()
37586=GenericTypeTest:test0269()
37587=GenericTypeTest:test0454()
37588=GenericTypeTest:test0628()
37589=GenericTypeTest:testBug433989()
37590=GenericTypeTest:test0223()
37591=GenericTypeTest:test0681()
37592=GenericTypeTest:test0859()
37593=GenericTypeTest:test1372()
37594=GenericTypeTest:test0091()
37595=GenericTypeTest:test1047()
37596=GenericTypeTest:test0813()
37597=GenericTypeTest:test0387()
37598=GenericTypeTest:test0134()
37599=GenericTypeTest:test1285()
37600=GenericTypeTest:test1187()
37601=GenericTypeTest:test0598()
37602=GenericTypeTest:test0341()
37603=GenericTypeTest:test0902()
37604=GenericTypeTest:test0948()
37605=GenericTypeTest:test0429g()
37606=GenericTypeTest:test0552()
37607=GenericTypeTest:test0278()
37608=GenericTypeTest:test1134()
37609=GenericTypeTest:test0025()
37610=GenericTypeTest:test0650()
37611=GenericTypeTest:test1383()
37612=GenericTypeTest:test1439()
37613=GenericTypeTest:test0232()
37614=GenericTypeTest:test0804()
37615=GenericTypeTest:test1036()
37616=GenericTypeTest:test0485()
37617=GenericTypeTest:test0696()
37618=GenericTypeTest:test1025()
37619=GenericTypeTest:_test1090()
37620=GenericTypeTest:test0145()
37621=GenericTypeTest:test0892()
37622=GenericTypeTest:test1296()
37623=GenericTypeTest:test1198()
37624=GenericTypeTest:test0376()
37625=GenericTypeTest:test0706()
37626=GenericTypeTest:test1250()
37627=GenericTypeTest:test0794()
37628=GenericTypeTest:test0937()
37629=GenericTypeTest:test0330()
37630=GenericTypeTest:test0563()
37631=GenericTypeTest:test1169()
37632=GenericTypeTest:test0243()
37633=GenericTypeTest:test0289()
37634=GenericTypeTest:test0839()
37635=GenericTypeTest:test0608()
37636=GenericTypeTest:test0990()
37637=GenericTypeTest:test1123()
37638=GenericTypeTest:test0014()
37639=GenericTypeTest:test0661()
37640=GenericTypeTest:test1394()
37641=GenericTypeTest:test1428()
37642=GenericTypeTest:test0474()
37643=GenericTypeTest:test1014()
37644=GenericTypeTest:test0112()
37645=GenericTypeTest:test0158()
37646=GenericTypeTest:test0717()
37647=GenericTypeTest:test0781()
37648=GenericTypeTest:test0365()
37649=GenericTypeTest:test1261()
37650=GenericTypeTest:test1306()
37651=GenericTypeTest:test0924()
37652=GenericTypeTest:test0574()
37653=GenericTypeTest:test0001()
37654=GenericTypeTest:test1158()
37655=GenericTypeTest:test0256()
37656=GenericTypeTest:test0770()
37657=GenericTypeTest:test0047()
37658=GenericTypeTest:test1112()
37659=GenericTypeTest:test1415()
37660=GenericTypeTest:test0619()
37661=GenericTypeTest:test1208()
37662=GenericTypeTest:test0672()
37663=GenericTypeTest:test0210()
37664=GenericTypeTest:test0826()
37665=GenericTypeTest:test0463()
37666=GenericTypeTest:test1003()
37667=GenericTypeTest:test1203a()
37668=GenericTypeTest:test0169()
37669=GenericTypeTest:test0123()
37670=GenericTypeTest:test1174()
37671=GenericTypeTest:test0585()
37672=GenericTypeTest:test1272()
37673=GenericTypeTest:test0354()
37674=GenericTypeTest:test0728()
37675=GenericTypeTest:test1317()
37676=GenericTypeTest:test0913()
37677=GenericTypeTest:test0959()
37678=GenericTypeTest:test1147()
37679=GenericTypeTest:test0267()
37680=GenericTypeTest:test0036()
37681=GenericTypeTest:test1404()
37682=GenericTypeTest:test1101()
37683=GenericTypeTest:test1219()
37684=GenericTypeTest:test0683()
37685=GenericTypeTest:test1370()
37686=GenericTypeTest:test0498()
37687=GenericTypeTest:test0221()
37688=GenericTypeTest:test0815()
37689=GenericTypeTest:test1049()
37690=GenericTypeTest:test0452()
37691=GenericTypeTest:test1245()
37692=GenericTypeTest:test1452()
37693=GenericTypeTest:test0238()
37694=GenericTypeTest:test0193()
37695=GenericTypeTest:test0301()
37696=GenericTypeTest:_test0119()
37697=GenericTypeTest:test0554()
37698=GenericTypeTest:test0904()
37699=GenericTypeTest:test1343()
37700=GenericTypeTest:test1389()
37701=GenericTypeTest:test0750()
37702=GenericTypeTest:test0806()
37703=GenericTypeTest:test0429a()
37704=GenericTypeTest:test0347()
37705=GenericTypeTest:test1030()
37706=GenericTypeTest:test1076()
37707=GenericTypeTest:test0084()
37708=GenericTypeTest:test0445()
37709=GenericTypeTest:test0652()
37710=GenericTypeTest:test0698()
37711=GenericTypeTest:test0291()
37712=GenericTypeTest:test1210()
37713=GenericTypeTest:test1256()
37714=GenericTypeTest:test0894()
37715=GenericTypeTest:test0939()
37716=GenericTypeTest:test1441()
37717=GenericTypeTest:test0708()
37718=GenericTypeTest:test0249()
37719=GenericTypeTest:test0565()
37720=GenericTypeTest:test0796()
37721=GenericTypeTest:GenericTypeTest(String)
37722=GenericTypeTest:test0992()
37723=GenericTypeTest:test1354()
37724=GenericTypeTest:test0761()
37725=GenericTypeTest:test0336()
37726=GenericTypeTest:test0105()
37727=GenericTypeTest:test1163()
37728=GenericTypeTest:test0203()
37729=GenericTypeTest:test1065()
37730=GenericTypeTest:test0073()
37731=GenericTypeTest:test0434()
37732=GenericTypeTest:test0663()
37733=GenericTypeTest:test1221()
37734=GenericTypeTest:test1267()
37735=GenericTypeTest:test0469()
37736=GenericTypeTest:test0719()
37737=GenericTypeTest:test0881()
37738=GenericTypeTest:test0216()
37739=GenericTypeTest:test0007()
37740=GenericTypeTest:test0783()
37741=GenericTypeTest:test0530()
37742=GenericTypeTest:test0576()
37743=GenericTypeTest:test0171()
37744=GenericTypeTest:test0926()
37745=GenericTypeTest:test1365()
37746=GenericTypeTest:test0772()
37747=GenericTypeTest:test0828()
37748=GenericTypeTest:test0325()
37749=GenericTypeTest:test0060()
37750=GenericTypeTest:test1152()
37751=GenericTypeTest:test1054()
37752=GenericTypeTest:test0118()
37753=GenericTypeTest:test0423()
37754=GenericTypeTest:test0674()
37755=GenericTypeTest:test1278()
37756=GenericTypeTest:test1463()
37757=GenericTypeTest:test0458()
37758=GenericTypeTest:test0227()
37759=GenericTypeTest:test0870()
37760=GenericTypeTest:test1232()
37761=GenericTypeTest:test0587()
37762=GenericTypeTest:test0182()
37763=GenericTypeTest:test0541()
37764=GenericTypeTest:test0915()
37765=GenericTypeTest:test0817()
37766=GenericTypeTest:test1330()
37767=GenericTypeTest:test0314()
37768=GenericTypeTest:test1376()
37769=GenericTypeTest:test0095()
37770=GenericTypeTest:test1043()
37771=GenericTypeTest:test1089()
37772=GenericTypeTest:test1141()
37773=GenericTypeTest:test0129()
37774=GenericTypeTest:test0280()
37775=GenericTypeTest:test0412()
37776=GenericTypeTest:test0685()
37777=GenericTypeTest:test0861()
37778=GenericTypeTest:test0906()
37779=GenericTypeTest:test1450()
37780=GenericTypeTest:test1289()
37781=GenericTypeTest:test1243()
37782=GenericTypeTest:test0345()
37783=GenericTypeTest:test0029()
37784=GenericTypeTest:test0429c()
37785=GenericTypeTest:test0510()
37786=GenericTypeTest:test0191()
37787=GenericTypeTest:test0752()
37788=GenericTypeTest:test0808()
37789=GenericTypeTest:test0556()
37790=GenericTypeTest:test1341()
37791=GenericTypeTest:test1387()
37792=GenericTypeTest:test0236()
37793=GenericTypeTest:test1032()
37794=GenericTypeTest:test1078()
37795=GenericTypeTest:test0082()
37796=GenericTypeTest:test0138()
37797=GenericTypeTest:test0443()
37798=GenericTypeTest:test0489()
37799=GenericTypeTest:test1130()
37800=GenericTypeTest:test0654()
37801=GenericTypeTest:test0850()
37802=GenericTypeTest:test0896()
37803=GenericTypeTest:test0103()
37804=GenericTypeTest:test1021()
37805=GenericTypeTest:test1254()
37806=GenericTypeTest:test0018()
37807=GenericTypeTest:_test0083()
37808=GenericTypeTest:test0334()
37809=GenericTypeTest:test0521()
37810=GenericTypeTest:test0798()
37811=GenericTypeTest:test0763()
37812=GenericTypeTest:test0994()
37813=GenericTypeTest:test1352()
37814=GenericTypeTest:test0567()
37815=GenericTypeTest:test1165()
37816=GenericTypeTest:test1398()
37817=GenericTypeTest:test0247()
37818=GenericTypeTest:test0071()
37819=GenericTypeTest:test0149()
37820=GenericTypeTest:test0478()
37821=GenericTypeTest:test0201()
37822=GenericTypeTest:test1067()
37823=GenericTypeTest:_test0995()
37824=GenericTypeTest:test0432()
37825=GenericTypeTest:test0665()
37826=GenericTypeTest:test0928()
37827=GenericTypeTest:test0630()
37828=GenericTypeTest:test0883()
37829=GenericTypeTest:test1010()
37830=GenericTypeTest:test1265()
37831=GenericTypeTest:_test1397()
37832=GenericTypeTest:test0323()
37833=GenericTypeTest:test0785()
37834=GenericTypeTest:test0532()
37835=GenericTypeTest:test0981()
37836=GenericTypeTest:test0774()
37837=GenericTypeTest:test1363()
37838=GenericTypeTest:test1419()
37839=GenericTypeTest:test0578()
37840=GenericTypeTest:test0005()
37841=GenericTypeTest:test1154()
37842=GenericTypeTest:test0369()
37843=GenericTypeTest:test0116()
37844=GenericTypeTest:test0214()
37845=GenericTypeTest:test0467()
37846=GenericTypeTest:test0939b()
37847=GenericTypeTest:test1056()
37848=GenericTypeTest:test0421()
37849=GenericTypeTest:test0676()
37850=GenericTypeTest:test0872()
37851=GenericTypeTest:test0917()
37852=GenericTypeTest:test1461()
37853=GenericTypeTest:test1230()
37854=GenericTypeTest:test1276()
37855=GenericTypeTest:test0180()
37856=GenericTypeTest:test0312()
37857=GenericTypeTest:test1178()
37858=GenericTypeTest:test0543()
37859=GenericTypeTest:test0970()
37860=GenericTypeTest:test0819()
37861=GenericTypeTest:test1408()
37862=GenericTypeTest:test0589()
37863=GenericTypeTest:test1374()
37864=GenericTypeTest:test0358()
37865=GenericTypeTest:test1143()
37866=GenericTypeTest:test0225()
37867=GenericTypeTest:test0917b()
37868=GenericTypeTest:test0127()
37869=GenericTypeTest:test0093()
37870=GenericTypeTest:test1045()
37871=GenericTypeTest:test0456()
37872=GenericTypeTest:test0641()
37873=GenericTypeTest:test0687()
37874=GenericTypeTest:test0410()
37875=GenericTypeTest:test0381()
37876=GenericTypeTest:test0426()
37877=GenericTypeTest:test0219()
37878=GenericTypeTest:test0840()
37879=GenericTypeTest:test0174()
37880=GenericTypeTest:test0679()
37881=GenericTypeTest:test1456()
37882=GenericTypeTest:test1410()
37883=GenericTypeTest:test0777()
37884=GenericTypeTest:test0535()
37885=GenericTypeTest:test0731()
37886=GenericTypeTest:test0788()
37887=GenericTypeTest:test0984()
37888=GenericTypeTest:test1301()
37889=GenericTypeTest:test1347()
37890=GenericTypeTest:test0065()
37891=GenericTypeTest:test0328()
37892=GenericTypeTest:test1095()
37893=GenericTypeTest:test1249()
37894=GenericTypeTest:test0272()
37895=GenericTypeTest:test0886()
37896=GenericTypeTest:test0633()
37897=GenericTypeTest:test0415()
37898=GenericTypeTest:test0644()
37899=GenericTypeTest:test0370()
37900=GenericTypeTest:test0185()
37901=GenericTypeTest:test1214()
37902=GenericTypeTest:test1445()
37903=GenericTypeTest:test1129()
37904=GenericTypeTest:test0500()
37905=GenericTypeTest:test0742()
37906=GenericTypeTest:test0546()
37907=GenericTypeTest:test0973()
37908=GenericTypeTest:test1312()
37909=GenericTypeTest:test1358()
37910=GenericTypeTest:test0054()
37911=GenericTypeTest:test0317()
37912=GenericTypeTest:test1084()
37913=GenericTypeTest:test0875()
37914=GenericTypeTest:test0283()
37915=GenericTypeTest:test0404()
37916=GenericTypeTest:test0655()
37917=GenericTypeTest:test0152()
37918=GenericTypeTest:test0907()
37919=GenericTypeTest:test1180()
37920=GenericTypeTest:test1225()
37921=GenericTypeTest:test0862()
37922=GenericTypeTest:test1432()
37923=GenericTypeTest:test0198()
37924=GenericTypeTest:test1118()
37925=GenericTypeTest:test0511()
37926=GenericTypeTest:test0753()
37927=GenericTypeTest:test0809()
37928=GenericTypeTest:test0296()
37929=GenericTypeTest:test0557()
37930=GenericTypeTest:test0087()
37931=GenericTypeTest:test1369()
37932=GenericTypeTest:test0960()
37933=GenericTypeTest:test0306()
37934=GenericTypeTest:test0706a()
37935=GenericTypeTest:test1073()
37936=GenericTypeTest:test1323()
37937=GenericTypeTest:test0041()
37938=GenericTypeTest:test1198a()
37939=GenericTypeTest:test0250()
37940=GenericTypeTest:test0394()
37941=GenericTypeTest:test0620()
37942=GenericTypeTest:test0666()
37943=GenericTypeTest:test0163()
37944=GenericTypeTest:test0208()
37945=GenericTypeTest:test1236()
37946=GenericTypeTest:test0851()
37947=GenericTypeTest:test1191()
37948=GenericTypeTest:test1421()
37949=GenericTypeTest:test1467()
37950=GenericTypeTest:testBug469201_B()
37951=GenericTypeTest:test0439()
37952=GenericTypeTest:test1107()
37953=GenericTypeTest:test0522()
37954=GenericTypeTest:test0764()
37955=GenericTypeTest:test0492()
37956=GenericTypeTest:test0799()
37957=GenericTypeTest:test0568()
37958=GenericTypeTest:test0076()
37959=GenericTypeTest:test1062()
37960=GenericTypeTest:test1334()
37961=GenericTypeTest:test1160()
37962=GenericTypeTest:test0030()
37963=GenericTypeTest:test1009()
37964=GenericTypeTest:test0897()
37965=GenericTypeTest:test0261()
37966=GenericTypeTest:test0590()
37967=GenericTypeTest:test1247()
37968=GenericTypeTest:test0424()
37969=GenericTypeTest:test0217()
37970=GenericTypeTest:test1454()
37971=GenericTypeTest:test1201()
37972=GenericTypeTest:test0779()
37973=GenericTypeTest:test0172()
37974=GenericTypeTest:test0986()
37975=GenericTypeTest:testBug492450_comment0()
37976=GenericTypeTest:test0733()
37977=GenericTypeTest:test0537()
37978=GenericTypeTest:test0326()
37979=GenericTypeTest:test1051()
37980=GenericTypeTest:test0940()
37981=GenericTypeTest:test1345()
37982=GenericTypeTest:test0063()
37983=GenericTypeTest:test0270()
37984=GenericTypeTest:test0842()
37985=GenericTypeTest:test0888()
37986=GenericTypeTest:test0635()
37987=GenericTypeTest:test0413()
37988=GenericTypeTest:test0646()
37989=GenericTypeTest:test1258()
37990=GenericTypeTest:test0228()
37991=GenericTypeTest:test1443()
37992=GenericTypeTest:test0459()
37993=GenericTypeTest:test1212()
37994=GenericTypeTest:test0183()
37995=GenericTypeTest:test0975()
37996=GenericTypeTest:test0744()
37997=GenericTypeTest:test0502()
37998=GenericTypeTest:test0548()
37999=GenericTypeTest:test1310()
38000=GenericTypeTest:test0315()
38001=GenericTypeTest:test1040()
38002=GenericTypeTest:test1086()
38003=GenericTypeTest:test1356()
38004=GenericTypeTest:test0098()
38005=GenericTypeTest:test0052()
38006=GenericTypeTest:test0281()
38007=GenericTypeTest:test0831()
38008=GenericTypeTest:test0877()
38009=GenericTypeTest:test0600()
38010=GenericTypeTest:test0402()
38011=GenericTypeTest:test0657()
38012=GenericTypeTest:test1430()
38013=GenericTypeTest:test1269()
38014=GenericTypeTest:test0196()
38015=GenericTypeTest:test0909()
38016=GenericTypeTest:test0448()
38017=GenericTypeTest:test1223()
38018=GenericTypeTest:test0150()
38019=GenericTypeTest:test0755()
38020=GenericTypeTest:test0513()
38021=GenericTypeTest:test0559()
38022=GenericTypeTest:test1321()
38023=GenericTypeTest:test0962()
38024=GenericTypeTest:test0304()
38025=GenericTypeTest:test1075()
38026=GenericTypeTest:test1367()
38027=GenericTypeTest:test0085()
38028=GenericTypeTest:test0294()
38029=GenericTypeTest:test0864()
38030=GenericTypeTest:test0611()
38031=GenericTypeTest:test1234()
38032=GenericTypeTest:test0437()
38033=GenericTypeTest:test0668()
38034=GenericTypeTest:test0206()
38035=GenericTypeTest:test0161()
38036=GenericTypeTest:test0997()
38037=GenericTypeTest:test268798a()
38038=GenericTypeTest:test0392()
38039=GenericTypeTest:test0766()
38040=GenericTypeTest:test1109()
38041=GenericTypeTest:test0524()
38042=GenericTypeTest:test1332()
38043=GenericTypeTest:test1378()
38044=GenericTypeTest:test0720()
38045=GenericTypeTest:test0490()
38046=GenericTypeTest:test0951()
38047=GenericTypeTest:test0339()
38048=GenericTypeTest:test1064()
38049=GenericTypeTest:test1162()
38050=GenericTypeTest:test0074()
38051=GenericTypeTest:test0108()
38052=GenericTypeTest:test0899()
38053=GenericTypeTest:test0853()
38054=GenericTypeTest:test0622()
38055=GenericTypeTest:test0132()
38056=GenericTypeTest:test0637()
38057=GenericTypeTest:test0178()
38058=GenericTypeTest:test1260()
38059=GenericTypeTest:test1305()
38060=GenericTypeTest:test0942()
38061=GenericTypeTest:test0592()
38062=GenericTypeTest:test0385()
38063=GenericTypeTest:test0735()
38064=GenericTypeTest:test0988()
38065=GenericTypeTest:test0023()
38066=GenericTypeTest:test0069()
38067=GenericTypeTest:test0276()
38068=GenericTypeTest:test1091()
38069=GenericTypeTest:test1136()
38070=GenericTypeTest:test0539()
38071=GenericTypeTest:test0690()
38072=GenericTypeTest:test1414()
38073=GenericTypeTest:test1005b()
38074=GenericTypeTest:test1207()
38075=GenericTypeTest:test0230()
38076=GenericTypeTest:test0844()
38077=GenericTypeTest:test1038()
38078=GenericTypeTest:test0483()
38079=GenericTypeTest:suite()
38080=GenericTypeTest:test1027()
38081=GenericTypeTest:test0143()
38082=GenericTypeTest:test0419()
38083=GenericTypeTest:test0648()
38084=GenericTypeTest:test1173()
38085=GenericTypeTest:test0189()
38086=GenericTypeTest:test1316()
38087=GenericTypeTest:test0931()
38088=GenericTypeTest:test1271()
38089=GenericTypeTest:test0374()
38090=GenericTypeTest:test0700()
38091=GenericTypeTest:test0746()
38092=GenericTypeTest:test0977()
38093=GenericTypeTest:test1125()
38094=GenericTypeTest:test0012()
38095=GenericTypeTest:test0058()
38096=GenericTypeTest:test0241()
38097=GenericTypeTest:test0287()
38098=GenericTypeTest:test0504()
38099=GenericTypeTest:test1080()
38100=GenericTypeTest:testBug433989a()
38101=GenericTypeTest:test1403()
38102=GenericTypeTest:test1218()
38103=GenericTypeTest:test0879()
38104=GenericTypeTest:_test0932()
38105=GenericTypeTest:test1449()
38106=GenericTypeTest:test0412a()
38107=GenericTypeTest:test0472()
38108=GenericTypeTest:test0602()
38109=GenericTypeTest:test0833()
38110=GenericTypeTest:test1016()
38111=GenericTypeTest:test0110()
38112=GenericTypeTest:test0408()
38113=GenericTypeTest:test0659()
38114=GenericTypeTest:test0156()
38115=GenericTypeTest:test1184()
38116=GenericTypeTest:test0964()
38117=GenericTypeTest:test1282()
38118=GenericTypeTest:test1327()
38119=GenericTypeTest:test0711()
38120=GenericTypeTest:test0757()
38121=GenericTypeTest:test0363()
38122=GenericTypeTest:test0045()
38123=GenericTypeTest:test1114()
38124=GenericTypeTest:test0254()
38125=GenericTypeTest:test0515()
38126=GenericTypeTest:test1380()
38127=GenericTypeTest:test1436()
38128=GenericTypeTest:test0820()
38129=GenericTypeTest:test0461()
38130=GenericTypeTest:test0613()
38131=GenericTypeTest:test1229()
38132=GenericTypeTest:test0866()
38133=GenericTypeTest:test1005()
38134=GenericTypeTest:test0121()
38135=GenericTypeTest:test0398()
38136=GenericTypeTest:test0167()
38137=GenericTypeTest:test1195()
38138=GenericTypeTest:test0953()
38139=GenericTypeTest:test1293()
38140=GenericTypeTest:test1338()
38141=GenericTypeTest:test0352()
38142=GenericTypeTest:test0722()
38143=GenericTypeTest:test0768()
38144=GenericTypeTest:test0120a()
38145=GenericTypeTest:test0999()
38146=GenericTypeTest:test0034()
38147=GenericTypeTest:test1103()
38148=GenericTypeTest:test1149()
38149=GenericTypeTest:test0526()
38150=GenericTypeTest:test0265()
38151=GenericTypeTest:testBug460491()
38152=GenericTypeTest:test1425()
38153=GenericTypeTest:test1391()
38154=GenericTypeTest:test0450()
38155=GenericTypeTest:test0496()
38156=GenericTypeTest:test0624()
38157=GenericTypeTest:test0855()
38158=GenericTypeTest:test0130()
38159=GenericTypeTest:test0176()
38160=GenericTypeTest:test0639()
38161=GenericTypeTest:test0428()
38162=GenericTypeTest:test0944()
38163=GenericTypeTest:test1412()
38164=GenericTypeTest:test1349()
38165=GenericTypeTest:test0737()
38166=GenericTypeTest:test0594()
38167=GenericTypeTest:test0383()
38168=GenericTypeTest:test0274()
38169=GenericTypeTest:test0481()
38170=GenericTypeTest:test1093()
38171=GenericTypeTest:test1138()
38172=GenericTypeTest:test0021()
38173=GenericTypeTest:test1303()
38174=GenericTypeTest:test0067()
38175=GenericTypeTest:test0800()
38176=GenericTypeTest:test0846()
38177=GenericTypeTest:test1458()
38178=GenericTypeTest:test0692()
38179=GenericTypeTest:test1205()
38180=GenericTypeTest:_test0068()
38181=GenericTypeTest:test0141()
38182=GenericTypeTest:test0187()
38183=GenericTypeTest:test1171()
38184=GenericTypeTest:test0417()
38185=GenericTypeTest:test0790()
38186=GenericTypeTest:test0933()
38187=GenericTypeTest:test0979()
38188=GenericTypeTest:test1401()
38189=GenericTypeTest:test0748()
38190=GenericTypeTest:test0050d()
38191=GenericTypeTest:test0384b()
38192=GenericTypeTest:test0372()
38193=GenericTypeTest:test0702()
38194=GenericTypeTest:test0285()
38195=GenericTypeTest:test0319()
38196=GenericTypeTest:test1082()
38197=GenericTypeTest:test0470()
38198=GenericTypeTest:test1127()
38199=GenericTypeTest:test0010()
38200=GenericTypeTest:test0506()
38201=GenericTypeTest:test1314()
38202=GenericTypeTest:test0056()
38203=GenericTypeTest:test0835()
38204=GenericTypeTest:test1447()
38205=GenericTypeTest:test0604()
38206=GenericTypeTest:test1216()
38207=GenericTypeTest:test1029()
38208=GenericTypeTest:test0154()
38209=GenericTypeTest:test1182()
38210=GenericTypeTest:test0406()
38211=GenericTypeTest:test1434()
38212=GenericTypeTest:test0920()
38213=GenericTypeTest:test0966()
38214=GenericTypeTest:test0759()
38215=GenericTypeTest:test0570()
38216=GenericTypeTest:test1280()
38217=GenericTypeTest:test0713()
38218=GenericTypeTest:test0361()
38219=GenericTypeTest:test0252()
38220=GenericTypeTest:test0298()
38221=GenericTypeTest:test0308()
38222=GenericTypeTest:test1071()
38223=GenericTypeTest:test0043()
38224=GenericTypeTest:test1116()
38225=GenericTypeTest:test0517()
38226=GenericTypeTest:test1325()
38227=GenericTypeTest:test0089()
38228=GenericTypeTest:test0822()
38229=GenericTypeTest:test0868()
38230=GenericTypeTest:test0615()
38231=GenericTypeTest:test1227()
38232=GenericTypeTest:test1018()
38233=GenericTypeTest:test0165()
38234=GenericTypeTest:test0396()
38235=GenericTypeTest:test1193()
38236=GenericTypeTest:test1423()
38237=GenericTypeTest:test0955()
38238=GenericTypeTest:test0581()
38239=GenericTypeTest:test1291()
38240=GenericTypeTest:test0350()
38241=GenericTypeTest:test0724()
38242=GenericTypeTest:test0263()
38243=GenericTypeTest:test0032()
38244=GenericTypeTest:test1060()
38245=GenericTypeTest:test1105()
38246=GenericTypeTest:test0528()
38247=GenericTypeTest:test1336()
38248=GenericTypeTest:test0078()
38249=GenericTypeTest:test0811()
38250=GenericTypeTest:test0857()
38251=GenericTypeTest:test0626()
38252=GenericTypeTest:test1238()
38253=GenericTypeTest:test1007()
38254=GenericTypeTest:test0494()
38255=GenericTypeTest:testClass()
38256=GenericTypeTest:test1264()
38257=GenericTypeTest:test0113()
38258=GenericTypeTest:test0159()
38259=GenericTypeTest:test1011()
38260=GenericTypeTest:test0573()
38261=GenericTypeTest:test0780()
38262=GenericTypeTest:test0366()
38263=GenericTypeTest:test0716()
38264=GenericTypeTest:test1309()
38265=GenericTypeTest:test0923()
38266=GenericTypeTest:test0969()
38267=GenericTypeTest:test0320()
38268=GenericTypeTest:test1362()
38269=GenericTypeTest:test1418()
38270=GenericTypeTest:test0004()
38271=GenericTypeTest:test1155()
38272=GenericTypeTest:test0257()
38273=GenericTypeTest:test0618()
38274=GenericTypeTest:test0464()
38275=GenericTypeTest:test0211()
38276=GenericTypeTest:test1057()
38277=GenericTypeTest:test0671()
38278=GenericTypeTest:test0825()
38279=GenericTypeTest:test1203b()
38280=GenericTypeTest:test0124()
38281=GenericTypeTest:test1000()
38282=GenericTypeTest:test1275()
38283=GenericTypeTest:test1177()
38284=GenericTypeTest:test0039()
38285=GenericTypeTest:test0355()
38286=GenericTypeTest:test0727()
38287=GenericTypeTest:test0912()
38288=GenericTypeTest:test0958()
38289=GenericTypeTest:test1460()
38290=GenericTypeTest:test0584()
38291=GenericTypeTest:test1407()
38292=GenericTypeTest:test1144()
38293=GenericTypeTest:test1373()
38294=GenericTypeTest:test0268()
38295=GenericTypeTest:test0453()
38296=GenericTypeTest:test0499()
38297=GenericTypeTest:test0629()
38298=GenericTypeTest:test0682()
38299=GenericTypeTest:test0222()
38300=GenericTypeTest:test1046()
38301=GenericTypeTest:test0092()
38302=GenericTypeTest:test0814()
38303=GenericTypeTest:test0137()
38304=GenericTypeTest:test1286()
38305=GenericTypeTest:test0738()
38306=GenericTypeTest:test0429f()
38307=GenericTypeTest:test1188()
38308=GenericTypeTest:test0344()
38309=GenericTypeTest:test1240()
38310=GenericTypeTest:test0190()
38311=GenericTypeTest:test0945()
38312=GenericTypeTest:test0595()
38313=GenericTypeTest:test0026()
38314=GenericTypeTest:test1133()
38315=GenericTypeTest:test1384()
38316=GenericTypeTest:test0442()
38317=GenericTypeTest:test0488()
38318=GenericTypeTest:test0693()
38319=GenericTypeTest:test0235()
38320=GenericTypeTest:test0801()
38321=GenericTypeTest:test0847()
38322=GenericTypeTest:test1035()
38323=GenericTypeTest:test1024()
38324=GenericTypeTest:test0102()
38325=GenericTypeTest:test0148()
38326=GenericTypeTest:test1297()
38327=GenericTypeTest:test0333()
38328=GenericTypeTest:test0379()
38329=GenericTypeTest:test0703()
38330=GenericTypeTest:test0749()
38331=GenericTypeTest:test0791()
38332=GenericTypeTest:test0560()
38333=GenericTypeTest:test1251()
38334=GenericTypeTest:test1199()
38335=GenericTypeTest:test0050c()
38336=GenericTypeTest:test0934()
38337=GenericTypeTest:_test0080()
38338=GenericTypeTest:test1168()
38339=GenericTypeTest:test0015()
38340=GenericTypeTest:test1021b()
38341=GenericTypeTest:test1395()
38342=GenericTypeTest:test0246()
38343=GenericTypeTest:test0507()
38344=GenericTypeTest:test1122()
38345=GenericTypeTest:test0836()
38346=GenericTypeTest:test0200()
38347=GenericTypeTest:test0477()
38348=GenericTypeTest:test0605()
38349=GenericTypeTest:test1429()
38350=GenericTypeTest:test0431()
38351=GenericTypeTest:test0111()
38352=GenericTypeTest:test1032a()
38353=GenericTypeTest:test0880()
38354=GenericTypeTest:test1013()
38355=GenericTypeTest:test0409()
38356=GenericTypeTest:test0718()
38357=GenericTypeTest:test0157()
38358=GenericTypeTest:test1262()
38359=GenericTypeTest:test1307()
38360=GenericTypeTest:test0782()
38361=GenericTypeTest:test0364()
38362=GenericTypeTest:test0575()
38363=GenericTypeTest:test0925()
38364=GenericTypeTest:test1157()
38365=GenericTypeTest:test0255()
38366=GenericTypeTest:test0771()
38367=GenericTypeTest:test0048()
38368=GenericTypeTest:test1416()
38369=GenericTypeTest:test0002()
38370=GenericTypeTest:test1111()
38371=GenericTypeTest:test0827()
38372=GenericTypeTest:test1059()
38373=GenericTypeTest:test0673()
38374=GenericTypeTest:test1360()
38375=GenericTypeTest:test0462()
38376=GenericTypeTest:test1209()
38377=GenericTypeTest:test0122()
38378=GenericTypeTest:test0399()
38379=GenericTypeTest:test0729()
38380=GenericTypeTest:test1002()
38381=GenericTypeTest:test0168()
38382=GenericTypeTest:test1175()
38383=GenericTypeTest:test0540()
38384=GenericTypeTest:test0586()
38385=GenericTypeTest:test1273()
38386=GenericTypeTest:test1318()
38387=GenericTypeTest:test0353()
38388=GenericTypeTest:test0914()
38389=GenericTypeTest:test1146()
38390=GenericTypeTest:test0266()
38391=GenericTypeTest:test0037()
38392=GenericTypeTest:test1405()
38393=GenericTypeTest:test1100()
38394=GenericTypeTest:test0497()
38395=GenericTypeTest:test1371()
38396=GenericTypeTest:test0816()
38397=GenericTypeTest:test0220()
38398=GenericTypeTest:test1048()
38399=GenericTypeTest:test0451()
38400=GenericTypeTest:test0684()
38401=GenericTypeTest:test0090()
38402=GenericTypeTest:test0135()
38403=GenericTypeTest:test0388()
38404=GenericTypeTest:test1186()
38405=GenericTypeTest:test0551()
38406=GenericTypeTest:test0597()
38407=GenericTypeTest:test1284()
38408=GenericTypeTest:test1329()
38409=GenericTypeTest:test0901()
38410=GenericTypeTest:test0947()
38411=GenericTypeTest:test0342()
38412=GenericTypeTest:test1135()
38413=GenericTypeTest:test0050a()
38414=GenericTypeTest:test0024()
38415=GenericTypeTest:test0279()
38416=GenericTypeTest:test0486()
38417=GenericTypeTest:test1382()
38418=GenericTypeTest:test1438()
38419=GenericTypeTest:test0233()
38420=GenericTypeTest:test0849()
38421=GenericTypeTest:test1037()
38422=GenericTypeTest:test0440()
38423=GenericTypeTest:test0695()
38424=GenericTypeTest:test0803()
38425=GenericTypeTest:test1026()
38426=GenericTypeTest:test0100()
38427=GenericTypeTest:test0146()
38428=GenericTypeTest:test0891()
38429=GenericTypeTest:test0562()
38430=GenericTypeTest:test1295()
38431=GenericTypeTest:test1197()
38432=GenericTypeTest:test0377()
38433=GenericTypeTest:test0705()
38434=GenericTypeTest:test0793()
38435=GenericTypeTest:test0936()
38436=GenericTypeTest:test0331()
38437=GenericTypeTest:test1124()
38438=GenericTypeTest:test0059()
38439=GenericTypeTest:test0244()
38440=GenericTypeTest:test0013()
38441=GenericTypeTest:test0509()
38442=GenericTypeTest:test0475()
38443=GenericTypeTest:test0607()
38444=GenericTypeTest:test1427()
38445=GenericTypeTest:test0660()
38446=GenericTypeTest:test0838()
38447=GenericTypeTest:test1393()
38448=GenericTypeTest:test1222()
38449=GenericTypeTest:test1268()
38450=GenericTypeTest:test0927()
38451=GenericTypeTest:test0882()
38452=GenericTypeTest:test0468()
38453=GenericTypeTest:test0215()
38454=GenericTypeTest:test0008()
38455=GenericTypeTest:test0324()
38456=GenericTypeTest:test0531()
38457=GenericTypeTest:test0577()
38458=GenericTypeTest:test0784()
38459=GenericTypeTest:test0170()
38460=GenericTypeTest:test1320()
38461=GenericTypeTest:test0773()
38462=GenericTypeTest:test0829()
38463=GenericTypeTest:_test1465()
38464=GenericTypeTest:test1053()
38465=GenericTypeTest:test0980()
38466=GenericTypeTest:test1366()
38467=GenericTypeTest:test0061()
38468=GenericTypeTest:test0117()
38469=GenericTypeTest:test1151()
38470=GenericTypeTest:test1099()
38471=GenericTypeTest:test0422()
38472=GenericTypeTest:test0675()
38473=GenericTypeTest:test0871()
38474=GenericTypeTest:test0916()
38475=GenericTypeTest:test1464()
38476=GenericTypeTest:test1279()
38477=GenericTypeTest:test0457()
38478=GenericTypeTest:test0226()
38479=GenericTypeTest:test1233()
38480=GenericTypeTest:test0313()
38481=GenericTypeTest:test0588()
38482=GenericTypeTest:test0181()
38483=GenericTypeTest:test0542()
38484=GenericTypeTest:test1331()
38485=GenericTypeTest:test1377()
38486=GenericTypeTest:test0818()
38487=GenericTypeTest:test0359()
38488=GenericTypeTest:test1042()
38489=GenericTypeTest:test0128()
38490=GenericTypeTest:test1140()
38491=GenericTypeTest:test0050()
38492=GenericTypeTest:test0096()
38493=GenericTypeTest:test1088()
38494=GenericTypeTest:test0411()
38495=GenericTypeTest:test0640()
38496=GenericTypeTest:test0686()
38497=GenericTypeTest:test0917c()
38498=GenericTypeTest:test1451()
38499=GenericTypeTest:test0949()
38500=GenericTypeTest:test0446()
38501=GenericTypeTest:test0239()
38502=GenericTypeTest:test1244()
38503=GenericTypeTest:test0194()
38504=GenericTypeTest:test0302()
38505=GenericTypeTest:test0599()
38506=GenericTypeTest:test0903()
38507=GenericTypeTest:test0553()
38508=GenericTypeTest:test1342()
38509=GenericTypeTest:test1388()
38510=GenericTypeTest:test0429b()
38511=GenericTypeTest:test0348()
38512=GenericTypeTest:test1031()
38513=GenericTypeTest:test1077()
38514=GenericTypeTest:test0400()
38515=GenericTypeTest:test0651()
38516=GenericTypeTest:test0697()
38517=GenericTypeTest:test0805()
38518=GenericTypeTest:test0292()
38519=GenericTypeTest:test1440()
38520=GenericTypeTest:test0893()
38521=GenericTypeTest:test0938()
38522=GenericTypeTest:test0435()
38523=GenericTypeTest:test0707()
38524=GenericTypeTest:test0204()
38525=GenericTypeTest:test1255()
38526=GenericTypeTest:test0019()
38527=GenericTypeTest:test1020()
38528=GenericTypeTest:test0390()
38529=GenericTypeTest:test0795()
38530=GenericTypeTest:test0564()
38531=GenericTypeTest:test1353()
38532=GenericTypeTest:test1399()
38533=GenericTypeTest:_test0667()
38534=GenericTypeTest:test0337()
38535=GenericTypeTest:test0760()
38536=GenericTypeTest:test0609()
38537=GenericTypeTest:test0991()
38538=GenericTypeTest:test1164()
38539=GenericTypeTest:test0072()
38540=GenericTypeTest:test1066()
38541=GenericTypeTest:test0106()
38542=GenericTypeTest:test0662()
38543=GenericTypeTest:test0884()
38544=GenericTypeTest:test277643()
38545=GenericTypeTest:test0631()
38546=GenericTypeTest:test0677()
38547=GenericTypeTest:test1220()
38548=GenericTypeTest:test0929()
38549=GenericTypeTest:test1266()
38550=GenericTypeTest:test0115()
38551=GenericTypeTest:test0448a()
38552=GenericTypeTest:test0259()
38553=GenericTypeTest:test0322()
38554=GenericTypeTest:test0368()
38555=GenericTypeTest:test0006()
38556=GenericTypeTest:getCompilerOptions()
38557=GenericTypeTest:test0533()
38558=GenericTypeTest:test0786()
38559=GenericTypeTest:test0775()
38560=GenericTypeTest:test0982()
38561=GenericTypeTest:test1364()
38562=GenericTypeTest:test0579()
38563=GenericTypeTest:test1153()
38564=GenericTypeTest:test0213()
38565=GenericTypeTest:test1055()
38566=GenericTypeTest:test0466()
38567=GenericTypeTest:test0420()
38568=GenericTypeTest:test1462()
38569=GenericTypeTest:test0688()
38570=GenericTypeTest:test0873()
38571=GenericTypeTest:test0918()
38572=GenericTypeTest:test1231()
38573=GenericTypeTest:test1277()
38574=GenericTypeTest:test0126()
38575=GenericTypeTest:test0311()
38576=GenericTypeTest:test0357()
38577=GenericTypeTest:test1179()
38578=GenericTypeTest:test0544()
38579=GenericTypeTest:test0971()
38580=GenericTypeTest:test1409()
38581=GenericTypeTest:test0740()
38582=GenericTypeTest:test1142()
38583=GenericTypeTest:test1375()
38584=GenericTypeTest:test0224()
38585=GenericTypeTest:test0917a()
38586=GenericTypeTest:test1044()
38587=GenericTypeTest:test0455()
38588=GenericTypeTest:test0094()
38589=GenericTypeTest:test0642()
38590=GenericTypeTest:test0905()
38591=GenericTypeTest:test0860()
38592=GenericTypeTest:test0699()
38593=GenericTypeTest:test1242()
38594=GenericTypeTest:test1288()
38595=GenericTypeTest:test0237()
38596=GenericTypeTest:test0192()
38597=GenericTypeTest:test0300()
38598=GenericTypeTest:test0346()
38599=GenericTypeTest:test0028()
38600=GenericTypeTest:test0429d()
38601=GenericTypeTest:test0555()
38602=GenericTypeTest:test1340()
38603=GenericTypeTest:test0751()
38604=GenericTypeTest:test0807()
38605=GenericTypeTest:test1131()
38606=GenericTypeTest:test1386()
38607=GenericTypeTest:test0139()
38608=GenericTypeTest:test0290()
38609=GenericTypeTest:test1033()
38610=GenericTypeTest:test1079()
38611=GenericTypeTest:test0444()
38612=GenericTypeTest:test0081()
38613=GenericTypeTest:test0653()
38614=GenericTypeTest:test0895()
38615=GenericTypeTest:test1253()
38616=GenericTypeTest:test1299()
38617=GenericTypeTest:test0479()
38618=GenericTypeTest:test0709()
38619=GenericTypeTest:test1022()
38620=GenericTypeTest:test0104()
38621=GenericTypeTest:test0248()
38622=GenericTypeTest:test0017()
38623=GenericTypeTest:test0335()
38624=GenericTypeTest:test0520()
38625=GenericTypeTest:test0566()
38626=GenericTypeTest:test0797()
38627=GenericTypeTest:test0993()
38628=GenericTypeTest:test0762()
38629=GenericTypeTest:test1351()
38630=GenericTypeTest:test1120()
38631=GenericTypeTest:test1166()
38632=GenericTypeTest:test0202()
38633=GenericTypeTest:test1068()
38634=GenericTypeTest:test0433()
38635=GenericTypeTest:test0070()
38636=GenericTypeTest:test0664()
38637=GenericTypeTest:test0610()
38638=GenericTypeTest:test0656()
38639=GenericTypeTest:test0863()
38640=GenericTypeTest:test0403()
38641=GenericTypeTest:test0908()
38642=GenericTypeTest:test1181()
38643=GenericTypeTest:test1226()
38644=GenericTypeTest:test0197()
38645=GenericTypeTest:test1433()
38646=GenericTypeTest:test0449()
38647=GenericTypeTest:test0151()
38648=GenericTypeTest:test1117()
38649=GenericTypeTest:test0754()
38650=GenericTypeTest:test0512()
38651=GenericTypeTest:test0558()
38652=GenericTypeTest:test0295()
38653=GenericTypeTest:test0042()
38654=GenericTypeTest:test1324()
38655=GenericTypeTest:test0961()
38656=GenericTypeTest:test0305()
38657=GenericTypeTest:test1072()
38658=GenericTypeTest:test0088()
38659=GenericTypeTest:test1019()
38660=GenericTypeTest:test0438()
38661=GenericTypeTest:test0621()
38662=GenericTypeTest:test0852()
38663=GenericTypeTest:test1192()
38664=GenericTypeTest:test1237()
38665=GenericTypeTest:test0207()
38666=GenericTypeTest:test1422()
38667=GenericTypeTest:test0996()
38668=GenericTypeTest:test0162()
38669=GenericTypeTest:test1106()
38670=GenericTypeTest:test1290()
38671=GenericTypeTest:test0393()
38672=GenericTypeTest:test0765()
38673=GenericTypeTest:test0491()
38674=GenericTypeTest:test0523()
38675=GenericTypeTest:test0569()
38676=GenericTypeTest:test0031()
38677=GenericTypeTest:test1335()
38678=GenericTypeTest:test0950()
38679=GenericTypeTest:test1061()
38680=GenericTypeTest:test0077()
38681=GenericTypeTest:test0109()
38682=GenericTypeTest:test0260()
38683=GenericTypeTest:test0898()
38684=GenericTypeTest:test1008()
38685=GenericTypeTest:test0382()
38686=GenericTypeTest:test0427()
38687=GenericTypeTest:test0632()
38688=GenericTypeTest:test0678()
38689=GenericTypeTest:test0885()
38690=GenericTypeTest:test0175()
38691=GenericTypeTest:test1248()
38692=GenericTypeTest:test1455()
38693=GenericTypeTest:test1202()
38694=GenericTypeTest:test0776()
38695=GenericTypeTest:test0787()
38696=GenericTypeTest:test0273()
38697=GenericTypeTest:test0329()
38698=GenericTypeTest:test0534()
38699=GenericTypeTest:test0983()
38700=GenericTypeTest:test0480()
38701=GenericTypeTest:test0730()
38702=GenericTypeTest:test0064()
38703=GenericTypeTest:test1050()
38704=GenericTypeTest:test1096()
38705=GenericTypeTest:test1300()
38706=GenericTypeTest:test1346()
38707=GenericTypeTest:test0371()
38708=GenericTypeTest:test0416()
38709=GenericTypeTest:test0186()
38710=GenericTypeTest:test0874()
38711=GenericTypeTest:test0919()
38712=GenericTypeTest:test1259()
38713=GenericTypeTest:test0689()
38714=GenericTypeTest:test1444()
38715=GenericTypeTest:test283306()
38716=GenericTypeTest:test1213()
38717=GenericTypeTest:_test1097()
38718=GenericTypeTest:test0140()
38719=GenericTypeTest:test0318()
38720=GenericTypeTest:test0741()
38721=GenericTypeTest:test0284()
38722=GenericTypeTest:test0545()
38723=GenericTypeTest:test0972()
38724=GenericTypeTest:test0053()
38725=GenericTypeTest:test0099()
38726=GenericTypeTest:test1085()
38727=GenericTypeTest:test1311()
38728=GenericTypeTest:test1357()
38729=GenericTypeTest:test294724()
38730=GenericTypeTest:test0643()
38731=GenericTypeTest:test0658()
38732=GenericTypeTest:test1431()
38733=GenericTypeTest:test0447()
38734=GenericTypeTest:test1224()
38735=GenericTypeTest:test0195()
38736=GenericTypeTest:test0963()
38737=GenericTypeTest:test0756()
38738=GenericTypeTest:test0710()
38739=GenericTypeTest:test1119()
38740=GenericTypeTest:test0514()
38741=GenericTypeTest:test0303()
38742=GenericTypeTest:test0349()
38743=GenericTypeTest:test1074()
38744=GenericTypeTest:test0086()
38745=GenericTypeTest:test1368()
38746=GenericTypeTest:test0706b()
38747=GenericTypeTest:test1322()
38748=GenericTypeTest:test0293()
38749=GenericTypeTest:test0865()
38750=GenericTypeTest:test0040()
38751=GenericTypeTest:test0401()
38752=GenericTypeTest:test0612()
38753=GenericTypeTest:test1190()
38754=GenericTypeTest:test1235()
38755=GenericTypeTest:test0436()
38756=GenericTypeTest:test0669()
38757=GenericTypeTest:test1420()
38758=GenericTypeTest:test0205()
38759=GenericTypeTest:test1466()
38760=GenericTypeTest:testBug469201_A()
38761=GenericTypeTest:test0952()
38762=GenericTypeTest:test0391()
38763=GenericTypeTest:test0721()
38764=GenericTypeTest:test0767()
38765=GenericTypeTest:test0160()
38766=GenericTypeTest:test0998()
38767=GenericTypeTest:test1108()
38768=GenericTypeTest:test1379()
38769=GenericTypeTest:test0525()
38770=GenericTypeTest:test0075()
38771=GenericTypeTest:test1333()
38772=GenericTypeTest:test0338()
38773=GenericTypeTest:test1063()
38774=GenericTypeTest:test0107()
38775=GenericTypeTest:test1161()
38776=GenericTypeTest:test0854()
38777=GenericTypeTest:test0623()
38778=GenericTypeTest:test1200()
38779=GenericTypeTest:test1246()
38780=GenericTypeTest:test0380()
38781=GenericTypeTest:test0425()
38782=GenericTypeTest:test1453()
38783=GenericTypeTest:test0841()
38784=GenericTypeTest:test0218()
38785=GenericTypeTest:test0009()
38786=GenericTypeTest:test1149b()
38787=GenericTypeTest:test0173()
38788=GenericTypeTest:test0985()
38789=GenericTypeTest:test0778()
38790=GenericTypeTest:test0732()
38791=GenericTypeTest:test0789()
38792=GenericTypeTest:test0536()
38793=GenericTypeTest:test1344()
38794=GenericTypeTest:test0327()
38795=GenericTypeTest:test1052()
38796=GenericTypeTest:test0062()
38797=GenericTypeTest:test1150()
38798=GenericTypeTest:test1098()
38799=GenericTypeTest:test0634()
38800=GenericTypeTest:test0271()
38801=GenericTypeTest:test0887()
38802=GenericTypeTest:test1211()
38803=GenericTypeTest:test1257()
38804=GenericTypeTest:test0645()
38805=GenericTypeTest:test1442()
38806=GenericTypeTest:test0414()
38807=GenericTypeTest:test0830()
38808=GenericTypeTest:test0229()
38809=GenericTypeTest:test0184()
38810=GenericTypeTest:test0974()
38811=GenericTypeTest:test0743()
38812=GenericTypeTest:test0501()
38813=GenericTypeTest:test0547()
38814=GenericTypeTest:test0097()
38815=GenericTypeTest:test0316()
38816=GenericTypeTest:test1041()
38817=GenericTypeTest:testBug433989b()
38818=GenericTypeTest:test1355()
38819=GenericTypeTest:test0051()
38820=GenericTypeTest:test1087()
38821=GenericTypeTest:test0876()
38822=GenericTypeTest:test0282()
38823=GenericTypeTest:test0155()
38824=GenericTypeTest:test1015()
38825=GenericTypeTest:test0407()
38826=GenericTypeTest:test1185()
38827=GenericTypeTest:test1283()
38828=GenericTypeTest:test1328()
38829=GenericTypeTest:test0965()
38830=GenericTypeTest:test0758()
38831=GenericTypeTest:test0362()
38832=GenericTypeTest:test0712()
38833=GenericTypeTest:test1113()
38834=GenericTypeTest:test1159()
38835=GenericTypeTest:test0253()
38836=GenericTypeTest:test0309()
38837=GenericTypeTest:test0516()
38838=GenericTypeTest:test0299()
38839=GenericTypeTest:test0046()
38840=GenericTypeTest:test1381()
38841=GenericTypeTest:test1437()
38842=GenericTypeTest:test0821()
38843=GenericTypeTest:test0614()
38844=GenericTypeTest:test0460()
38845=GenericTypeTest:test0867()
38846=GenericTypeTest:test0120()
38847=GenericTypeTest:test0166()
38848=GenericTypeTest:test280054()
38849=GenericTypeTest:test0397()
38850=GenericTypeTest:test0580()
38851=GenericTypeTest:test1004()
38852=GenericTypeTest:test1196()
38853=GenericTypeTest:test1339()
38854=GenericTypeTest:test0954()
38855=GenericTypeTest:test1294()
38856=GenericTypeTest:test0769()
38857=GenericTypeTest:test0351()
38858=GenericTypeTest:test0723()
38859=GenericTypeTest:test1102()
38860=GenericTypeTest:test1148()
38861=GenericTypeTest:test0264()
38862=GenericTypeTest:test0527()
38863=GenericTypeTest:test0035()
38864=GenericTypeTest:test1392()
38865=GenericTypeTest:test1426()
38866=GenericTypeTest:test0810()
38867=GenericTypeTest:test0495()
38868=GenericTypeTest:test0625()
38869=GenericTypeTest:test0856()
38870=GenericTypeTest:test0133()
38871=GenericTypeTest:test0591()
38872=GenericTypeTest:test0179()
38873=GenericTypeTest:test1413()
38874=GenericTypeTest:test1304()
38875=GenericTypeTest:test0941()
38876=GenericTypeTest:test0386()
38877=GenericTypeTest:test0734()
38878=GenericTypeTest:test0987()
38879=GenericTypeTest:test0340()
38880=GenericTypeTest:test0022()
38881=GenericTypeTest:test1092()
38882=GenericTypeTest:test1137()
38883=GenericTypeTest:test0277()
38884=GenericTypeTest:test0538()
38885=GenericTypeTest:test1459()
38886=GenericTypeTest:test1206()
38887=GenericTypeTest:test0484()
38888=GenericTypeTest:test0636()
38889=GenericTypeTest:test0231()
38890=GenericTypeTest:test0843()
38891=GenericTypeTest:test0889()
38892=GenericTypeTest:test1039()
38893=GenericTypeTest:test1028()
38894=GenericTypeTest:test0144()
38895=GenericTypeTest:test0647()
38896=GenericTypeTest:test1172()
38897=GenericTypeTest:test1402()
38898=GenericTypeTest:test1315()
38899=GenericTypeTest:test0930()
38900=GenericTypeTest:test1270()
38901=GenericTypeTest:test0375()
38902=GenericTypeTest:test0745()
38903=GenericTypeTest:test0976()
38904=GenericTypeTest:test0011()
38905=GenericTypeTest:test0057()
38906=GenericTypeTest:test1081()
38907=GenericTypeTest:test0242()
38908=GenericTypeTest:test0503()
38909=GenericTypeTest:test1126()
38910=GenericTypeTest:test0288()
38911=GenericTypeTest:test0549()
38912=GenericTypeTest:test1448()
38913=GenericTypeTest:test1217()
38914=GenericTypeTest:test0832()
38915=GenericTypeTest:test0878()
38916=GenericTypeTest:test0473()
38917=GenericTypeTest:test0601()
38918=GenericTypeTest:test1017()
38919=GenericTypeTest:test0360()
38920=GenericTypeTest:test0405()
38921=GenericTypeTest:test0153()
38922=GenericTypeTest:test1183()
38923=GenericTypeTest:test0199()
38924=GenericTypeTest:test1435()
38925=GenericTypeTest:test0714()
38926=GenericTypeTest:test0571()
38927=GenericTypeTest:test1281()
38928=GenericTypeTest:test1326()
38929=GenericTypeTest:test0921()
38930=GenericTypeTest:test0967()
38931=GenericTypeTest:test0251()
38932=GenericTypeTest:test0297()
38933=GenericTypeTest:test0307()
38934=GenericTypeTest:test1070()
38935=GenericTypeTest:test0044()
38936=GenericTypeTest:test1115()
38937=GenericTypeTest:test0518()
38938=GenericTypeTest:test0823()
38939=GenericTypeTest:test0869()
38940=GenericTypeTest:test0616()
38941=GenericTypeTest:test1228()
38942=GenericTypeTest:test0395()
38943=GenericTypeTest:test1006()
38944=GenericTypeTest:test0164()
38945=GenericTypeTest:test0209()
38946=GenericTypeTest:test1194()
38947=GenericTypeTest:test1424()
38948=GenericTypeTest:test0725()
38949=GenericTypeTest:test1337()
38950=GenericTypeTest:test0910()
38951=GenericTypeTest:test1292()
38952=GenericTypeTest:test0582()
38953=GenericTypeTest:test0956()
38954=GenericTypeTest:test1203d()
38955=GenericTypeTest:test0262()
38956=GenericTypeTest:test0033()
38957=GenericTypeTest:test0079()
38958=GenericTypeTest:test1104()
38959=GenericTypeTest:test0529()
38960=GenericTypeTest:test0812()
38961=GenericTypeTest:test0858()
38962=GenericTypeTest:test0627()
38963=GenericTypeTest:test0680()
38964=GenericTypeTest:testBug401783()
38965=GenericTypeTest:test1239()
38966=GenericTypeTest:test0493()
38967=GenericTypeTest:test1390()
38968=GenericTypeTest:test0131()
38969=GenericTypeTest:test0177()
38970=GenericTypeTest:test1204()
38971=GenericTypeTest:test0638()
38972=GenericTypeTest:test0429()
38973=GenericTypeTest:test1457()
38974=GenericTypeTest:test0943()
38975=GenericTypeTest:test0989()
38976=GenericTypeTest:test0736()
38977=GenericTypeTest:test1411()
38978=GenericTypeTest:test1348()
38979=GenericTypeTest:test0593()
38980=GenericTypeTest:test1139()
38981=GenericTypeTest:test0020()
38982=GenericTypeTest:test0275()
38983=GenericTypeTest:test0066()
38984=GenericTypeTest:test1094()
38985=GenericTypeTest:test1302()
38986=GenericTypeTest:test0691()
38987=GenericTypeTest:test0482()
38988=GenericTypeTest:test0845()
38989=GenericTypeTest:test0142()
38990=GenericTypeTest:test0188()
38991=GenericTypeTest:test268798()
38992=GenericTypeTest:test1170()
38993=GenericTypeTest:test1215()
38994=GenericTypeTest:test0649()
38995=GenericTypeTest:test1446()
38996=GenericTypeTest:test0418()
38997=GenericTypeTest:test0978()
38998=GenericTypeTest:test0747()
38999=GenericTypeTest:test1400()
39000=GenericTypeTest:test1359()
39001=GenericTypeTest:test0384a()
39002=GenericTypeTest:test1128()
39003=GenericTypeTest:test0373()
39004=GenericTypeTest:test0701()
39005=GenericTypeTest:test0286()
39006=GenericTypeTest:test0505()
39007=GenericTypeTest:test0055()
39008=GenericTypeTest:test1083()
39009=GenericTypeTest:test1313()
39010=GenericTypeTest:test0118a()
39011=GenericTypeTest:test0471()
39012=GenericTypeTest:test0603()
39013=GenericTypeTest:test0240()
39014=GenericTypeTest:test0834()
39015=ImportDeclaration:getPrimaryElement(boolean)
39016=ImportDeclaration:isOnDemand()
39017=ImportDeclaration:getHandleMementoDelimiter()
39018=ImportDeclaration:toStringInfo(int, StringBuffer, Object, boolean)
39019=ImportDeclaration:getFlags()
39020=ImportDeclaration:getElementType()
39021=ImportDeclaration:equals(Object)
39022=ImportDeclaration:getHandleMemento(StringBuffer)
39023=ImportDeclaration:readableName()
39024=ImportDeclaration:ImportDeclaration(ImportContainer, String, boolean)
39025=ImportDeclaration:getNameWithoutStar()
39026=ImportDeclaration:getElementName()
39027=ImportDeclaration:getNameRange()
39028=A:thisIsAMethodWithAVeryLongName(long, int, String, Object)
39029=MovePackageFragmentRootOperation:renameEntryInClasspath(IPath, IJavaProject)
39030=MovePackageFragmentRootOperation:moveResource(IPackageFragmentRoot, IClasspathEntry, IWorkspaceRoot)
39031=MovePackageFragmentRootOperation:removeEntryFromClasspath(IPath, IJavaProject)
39032=MovePackageFragmentRootOperation:renamePatterns(IPath, IPath[])
39033=MovePackageFragmentRootOperation:updateReferringProjectClasspaths(IPath, IJavaProject)
39034=MovePackageFragmentRootOperation:executeOperation()
39035=MovePackageFragmentRootOperation:MovePackageFragmentRootOperation(IPackageFragmentRoot, IPath, int, int, IClasspathEntry)
39036=SubTypeSearchJob:finished()
39037=SubTypeSearchJob:search(Index, IProgressMonitor)
39038=SubTypeSearchJob:getIndexes(IProgressMonitor)
39039=SubTypeSearchJob:SubTypeSearchJob(SearchPattern, SearchParticipant, IJavaSearchScope, IndexQueryRequestor)
39040=ILocalVariable:getTypeSignature()
39041=ILocalVariable:getElementName()
39042=ILocalVariable:getNameRange()
39043=ILocalVariable:getTypeRoot()
39044=ILocalVariable:getFlags()
39045=ILocalVariable:getDeclaringMember()
39046=ILocalVariable:isParameter()
39047=A:method()
39048=LookupTest:test011()
39049=LookupTest:test057()
39050=LookupTest:test022()
39051=LookupTest:test068()
39052=LookupTest:test035()
39053=LookupTest:test046()
39054=LookupTest:test055()
39055=LookupTest:test066()
39056=LookupTest:test020()
39057=LookupTest:test033()
39058=LookupTest:test079()
39059=LookupTest:test044()
39060=LookupTest:test015()
39061=LookupTest:test026()
39062=LookupTest:test039()
39063=LookupTest:test102()
39064=LookupTest:test092()
39065=LookupTest:test004()
39066=LookupTest:test013()
39067=LookupTest:test059()
39068=LookupTest:test024()
39069=LookupTest:test037()
39070=LookupTest:test100()
39071=LookupTest:test090()
39072=LookupTest:test002()
39073=LookupTest:test048()
39074=LookupTest:test105()
39075=LookupTest:test095()
39076=LookupTest:test007()
39077=LookupTest:test060()
39078=LookupTest:test073()
39079=LookupTest:test084()
39080=LookupTest:test103()
39081=LookupTest:test093()
39082=LookupTest:test005()
39083=LookupTest:test018()
39084=LookupTest:test071()
39085=LookupTest:test029()
39086=LookupTest:test082()
39087=LookupTest:test099()
39088=LookupTest:test053()
39089=LookupTest:test064()
39090=LookupTest:test077()
39091=LookupTest:_test087()
39092=LookupTest:test031()
39093=LookupTest:test088()
39094=LookupTest:test042()
39095=LookupTest:test051()
39096=LookupTest:test097()
39097=LookupTest:test009()
39098=LookupTest:test062()
39099=LookupTest:test068a()
39100=LookupTest:test075()
39101=LookupTest:test086()
39102=LookupTest:test040()
39103=LookupTest:test034()
39104=LookupTest:LookupTest(String)
39105=LookupTest:test045()
39106=LookupTest:test012()
39107=LookupTest:test058()
39108=LookupTest:test069()
39109=LookupTest:test023()
39110=LookupTest:test032()
39111=LookupTest:test078()
39112=LookupTest:test043()
39113=LookupTest:test089()
39114=LookupTest:test010()
39115=LookupTest:test056()
39116=LookupTest:test021()
39117=LookupTest:test067()
39118=LookupTest:test038()
39119=LookupTest:test101()
39120=LookupTest:test091()
39121=LookupTest:test049()
39122=LookupTest:test003()
39123=LookupTest:test016()
39124=LookupTest:test027()
39125=LookupTest:test080()
39126=LookupTest:test036()
39127=LookupTest:test001()
39128=LookupTest:test047()
39129=LookupTest:test014()
39130=LookupTest:testClass()
39131=LookupTest:test025()
39132=LookupTest:suite()
39133=LookupTest:test019()
39134=LookupTest:test072()
39135=LookupTest:test083()
39136=LookupTest:test050()
39137=LookupTest:test096()
39138=LookupTest:test106()
39139=LookupTest:test008()
39140=LookupTest:test061()
39141=LookupTest:test017()
39142=LookupTest:test070()
39143=LookupTest:test028()
39144=LookupTest:test081()
39145=LookupTest:test104()
39146=LookupTest:test094()
39147=LookupTest:test006()
39148=LookupTest:test076()
39149=LookupTest:test030()
39150=LookupTest:test041()
39151=LookupTest:test054()
39152=LookupTest:test065()
39153=LookupTest:test074()
39154=LookupTest:test098()
39155=LookupTest:test052()
39156=LookupTest:test063()
39157=Test:main(String[])
39158=X06:foo(Object, boolean)
39159=BindingsCollectorVisitor:endVisit(AnnotationTypeMemberDeclaration)
39160=BindingsCollectorVisitor:endVisit(ClassInstanceCreation)
39161=BindingsCollectorVisitor:BindingsCollectorVisitor()
39162=BindingsCollectorVisitor:endVisit(InstanceofExpression)
39163=BindingsCollectorVisitor:endVisit(BooleanLiteral)
39164=BindingsCollectorVisitor:endVisit(MethodRef)
39165=BindingsCollectorVisitor:endVisit(MethodInvocation)
39166=BindingsCollectorVisitor:endVisit(AnonymousClassDeclaration)
39167=BindingsCollectorVisitor:endVisit(NullLiteral)
39168=BindingsCollectorVisitor:endVisit(ArrayAccess)
39169=BindingsCollectorVisitor:endVisit(SingleVariableDeclaration)
39170=BindingsCollectorVisitor:endVisit(ArrayInitializer)
39171=BindingsCollectorVisitor:endVisit(VariableDeclarationExpression)
39172=BindingsCollectorVisitor:getUnresolvedNodesSet()
39173=BindingsCollectorVisitor:endVisit(PrimitiveType)
39174=BindingsCollectorVisitor:endVisit(PostfixExpression)
39175=BindingsCollectorVisitor:endVisit(VariableDeclarationFragment)
39176=BindingsCollectorVisitor:endVisit(ImportDeclaration)
39177=BindingsCollectorVisitor:endVisit(AnnotationTypeDeclaration)
39178=BindingsCollectorVisitor:endVisit(ThisExpression)
39179=BindingsCollectorVisitor:endVisit(ConstructorInvocation)
39180=BindingsCollectorVisitor:endVisit(SuperMethodInvocation)
39181=BindingsCollectorVisitor:endVisit(InfixExpression)
39182=BindingsCollectorVisitor:endVisit(SimpleName)
39183=BindingsCollectorVisitor:endVisit(PrefixExpression)
39184=BindingsCollectorVisitor:collectBindings(ASTNode, IBinding)
39185=BindingsCollectorVisitor:endVisit(QualifiedName)
39186=BindingsCollectorVisitor:endVisit(CastExpression)
39187=BindingsCollectorVisitor:endVisit(NumberLiteral)
39188=BindingsCollectorVisitor:endVisit(SuperFieldAccess)
39189=BindingsCollectorVisitor:endVisit(EnumConstantDeclaration)
39190=BindingsCollectorVisitor:endVisit(ArrayCreation)
39191=BindingsCollectorVisitor:endVisit(Assignment)
39192=BindingsCollectorVisitor:endVisit(ParenthesizedExpression)
39193=BindingsCollectorVisitor:endVisit(MemberRef)
39194=BindingsCollectorVisitor:endVisit(TypeLiteral)
39195=BindingsCollectorVisitor:endVisit(EnumDeclaration)
39196=BindingsCollectorVisitor:endVisit(TypeDeclaration)
39197=BindingsCollectorVisitor:endVisit(CharacterLiteral)
39198=BindingsCollectorVisitor:endVisit(ConditionalExpression)
39199=BindingsCollectorVisitor:endVisit(ArrayType)
39200=BindingsCollectorVisitor:endVisit(ParameterizedType)
39201=BindingsCollectorVisitor:endVisit(StringLiteral)
39202=BindingsCollectorVisitor:endVisit(PackageDeclaration)
39203=BindingsCollectorVisitor:endVisit(SimpleType)
39204=BindingsCollectorVisitor:endVisit(MethodDeclaration)
39205=BindingsCollectorVisitor:getBindingsMap()
39206=BindingsCollectorVisitor:endVisit(FieldAccess)
39207=BindingsCollectorVisitor:endVisit(SuperConstructorInvocation)
39208=DefaultErrorHandlingPolicies:proceedWithAllProblems()
39209=DefaultErrorHandlingPolicies:proceedOnFirstError()
39210=DefaultErrorHandlingPolicies:exitAfterAllProblems()
39211=DefaultErrorHandlingPolicies:exitOnFirstError()
39212=Test:main(String[])
39213=Initializer:isStatic()
39214=Initializer:parseStatements(Parser, TypeDeclaration, CompilationUnitDeclaration)
39215=Initializer:resolve(MethodScope)
39216=Initializer:printStatement(int, StringBuffer)
39217=Initializer:getKind()
39218=Initializer:getMethodBinding()
39219=Initializer:analyseCode(MethodScope, FlowContext, FlowInfo)
39220=Initializer:traverse(ASTVisitor, MethodScope)
39221=Initializer:Initializer(Block, int)
39222=Initializer:generateCode(BlockScope, CodeStream)
39223=MethodDeclaration:resolveBinding()
39224=MethodDeclaration:treeSize()
39225=MethodDeclaration:getReturnType2()
39226=MethodDeclaration:internalJavadocProperty()
39227=MethodDeclaration:parameters()
39228=MethodDeclaration:memSize()
39229=MethodDeclaration:internalGetReturnType()
39230=MethodDeclaration:getExtraDimensions()
39231=MethodDeclaration:setReceiverType(Type)
39232=MethodDeclaration:typeParameters()
39233=MethodDeclaration:getNodeType0()
39234=MethodDeclaration:setName(SimpleName)
39235=MethodDeclaration:getReceiverQualifier()
39236=MethodDeclaration:getBody()
39237=MethodDeclaration:internalStructuralPropertiesForType(int)
39238=MethodDeclaration:setConstructor(boolean)
39239=MethodDeclaration:MethodDeclaration(AST)
39240=MethodDeclaration:internalGetChildListProperty(ChildListPropertyDescriptor)
39241=MethodDeclaration:internalModifiers2Property()
39242=MethodDeclaration:isConstructor()
39243=MethodDeclaration:getName()
39244=MethodDeclaration:getReceiverType()
39245=MethodDeclaration:internalGetSetIntProperty(SimplePropertyDescriptor, boolean, int)
39246=MethodDeclaration:internalGetSetBooleanProperty(SimplePropertyDescriptor, boolean, boolean)
39247=MethodDeclaration:getReturnType()
39248=MethodDeclaration:internalSetReturnType(Type)
39249=MethodDeclaration:subtreeMatch0(ASTMatcher, Object)
39250=MethodDeclaration:internalModifiersProperty()
39251=MethodDeclaration:clone0(AST)
39252=MethodDeclaration:isVarargs()
39253=MethodDeclaration:setBody(Block)
39254=MethodDeclaration:thrownExceptionTypes()
39255=MethodDeclaration:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
39256=MethodDeclaration:thrownExceptions()
39257=MethodDeclaration:extraDimensions()
39258=MethodDeclaration:internalThrownExceptions()
39259=MethodDeclaration:setReturnType(Type)
39260=MethodDeclaration:setReturnType2(Type)
39261=MethodDeclaration:accept0(ASTVisitor)
39262=MethodDeclaration:setExtraDimensions(int)
39263=MethodDeclaration:propertyDescriptors(int)
39264=MethodDeclaration:setReceiverQualifier(SimpleName)
39265=ExtraDependencyAnnotationProcessor:ExtraDependencyAnnotationProcessor(AnnotationProcessorEnvironment)
39266=ExtraDependencyAnnotationProcessor:process()
39267=InitializationTests:testBug383690()
39268=InitializationTests:test318020k()
39269=InitializationTests:test318020i()
39270=InitializationTests:test318020g()
39271=InitializationTests:test318020e()
39272=InitializationTests:test318020c()
39273=InitializationTests:test318020a()
39274=InitializationTests:testBug324178b()
39275=InitializationTests:testClass()
39276=InitializationTests:testBug324178d()
39277=InitializationTests:test318020j()
39278=InitializationTests:suite()
39279=InitializationTests:test318020h()
39280=InitializationTests:test318020f()
39281=InitializationTests:test325567()
39282=InitializationTests:test318020d()
39283=InitializationTests:test318020b()
39284=InitializationTests:InitializationTests(String)
39285=InitializationTests:testBug324178c()
39286=JavadocAllocationExpression:JavadocAllocationExpression(long)
39287=JavadocAllocationExpression:resolveType(BlockScope)
39288=JavadocAllocationExpression:internalResolveType(Scope)
39289=JavadocAllocationExpression:isSuperAccess()
39290=JavadocAllocationExpression:resolveType(ClassScope)
39291=SwitchStatement:clone0(AST)
39292=SwitchStatement:accept0(ASTVisitor)
39293=SwitchStatement:statements()
39294=SwitchStatement:getNodeType0()
39295=SwitchStatement:internalGetChildListProperty(ChildListPropertyDescriptor)
39296=SwitchStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
39297=SwitchStatement:internalStructuralPropertiesForType(int)
39298=SwitchStatement:getExpression()
39299=SwitchStatement:subtreeMatch0(ASTMatcher, Object)
39300=SwitchStatement:memSize()
39301=SwitchStatement:setExpression(Expression)
39302=SwitchStatement:propertyDescriptors(int)
39303=SwitchStatement:SwitchStatement(AST)
39304=SwitchStatement:treeSize()
39305=Test:foo()
39306=Test:main(String[])
39307=ExecutableDeclarationImpl:getFormalTypeParameters()
39308=ExecutableDeclarationImpl:accept(DeclarationVisitor)
39309=ExecutableDeclarationImpl:getDeclarationBinding()
39310=ExecutableDeclarationImpl:getSimpleName()
39311=ExecutableDeclarationImpl:getDeclaringType()
39312=ExecutableDeclarationImpl:ExecutableDeclarationImpl(IMethodBinding, BaseProcessorEnv)
39313=ExecutableDeclarationImpl:getThrownTypes()
39314=ExecutableDeclarationImpl:getParameters()
39315=ExecutableDeclarationImpl:isFromSource()
39316=ExecutableDeclarationImpl:isVarArgs()
39317=ReductionResult:relationToString(int)
39318=X16:foo(Object)
39319=DoubleConstant:toString()
39320=DoubleConstant:longValue()
39321=DoubleConstant:stringValue()
39322=DoubleConstant:charValue()
39323=DoubleConstant:shortValue()
39324=DoubleConstant:intValue()
39325=DoubleConstant:floatValue()
39326=DoubleConstant:doubleValue()
39327=DoubleConstant:typeID()
39328=DoubleConstant:byteValue()
39329=DoubleConstant:DoubleConstant(double)
39330=A:foo(java.lang.String, long)
39331=JavadocArrayQualifiedTypeReference:reportDeprecatedType(TypeBinding, Scope)
39332=JavadocArrayQualifiedTypeReference:reportInvalidType(Scope)
39333=JavadocArrayQualifiedTypeReference:JavadocArrayQualifiedTypeReference(JavadocQualifiedTypeReference, int)
39334=JavadocArrayQualifiedTypeReference:traverse(ASTVisitor, ClassScope)
39335=JavadocArrayQualifiedTypeReference:traverse(ASTVisitor, BlockScope)
39336=X:bar()
39337=X:foo()
39338=IElementChangedListener:elementChanged(ElementChangedEvent)
39339=firstClass:firstClass()
39340=RenameElementsOperation:getMainTaskName()
39341=RenameElementsOperation:isRename()
39342=RenameElementsOperation:verify()
39343=RenameElementsOperation:RenameElementsOperation(IJavaElement[], IJavaElement[], String[], boolean)
39344=RenameElementsOperation:verify(IJavaElement)
39345=MixedModeTesting:testAPTRoundingInMixedMode0()
39346=MixedModeTesting:MixedModeTesting(String)
39347=MixedModeTesting:testAPTRoundingInMixedMode1()
39348=MixedModeTesting:suite()
39349=MixedModeTesting:testSimpleBatchProcessing()
39350=MixedModeTesting:setUp()
39351=CaptureBinding:isCapture()
39352=CaptureBinding:withoutToplevelNullAnnotation()
39353=CaptureBinding:shortReadableName()
39354=CaptureBinding:signableName()
39355=CaptureBinding:nullAnnotatedReadableName(CompilerOptions, boolean)
39356=CaptureBinding:getDerivedTypesForDeferredInitialization()
39357=CaptureBinding:CaptureBinding(ReferenceBinding, char[], int, int, int, LookupEnvironment)
39358=CaptureBinding:substituteInferenceVariable(InferenceVariable, TypeBinding)
39359=CaptureBinding:initializeBounds(Scope, ParameterizedTypeBinding)
39360=CaptureBinding:CaptureBinding(WildcardBinding, ReferenceBinding, int, int, ASTNode, int)
39361=CaptureBinding:genericTypeSignature()
39362=CaptureBinding:debugName()
39363=CaptureBinding:computeUniqueKey(boolean)
39364=CaptureBinding:clone(TypeBinding)
39365=CaptureBinding:isProperType(boolean)
39366=CaptureBinding:toString()
39367=CaptureBinding:CaptureBinding(CaptureBinding)
39368=CaptureBinding:readableName()
39369=CaptureBinding:isEquivalentTo(TypeBinding)
39370=CaptureBinding:setTypeAnnotations(AnnotationBinding[], boolean)
39371=CaptureBinding:uncapture(Scope)
39372=SearchEngine:ResultCollectorAdapter:beginReporting()
39373=SearchEngine:SearchPatternAdapter:SearchPatternAdapter(SearchPattern)
39374=SearchEngine:searchAllMethodNames(char[], int, char[], int, IJavaSearchScope, MethodNameRequestor, int, IProgressMonitor)
39375=SearchEngine:searchAllTypeNames(char[][], char[][], IJavaSearchScope, TypeNameMatchRequestor, int, IProgressMonitor)
39376=SearchEngine:SearchEngine(ICompilationUnit[])
39377=SearchEngine:searchAllMethodNames(char[], int, char[], int, char[], int, char[], int, IJavaSearchScope, MethodNameMatchRequestor, int, IProgressMonitor)
39378=SearchEngine:searchAllTypeNames(char[], char[], int, int, IJavaSearchScope, ITypeNameRequestor, int, IProgressMonitor)
39379=SearchEngine:SearchEngine(IWorkingCopy[])
39380=SearchEngine:search(IWorkspace, String, int, int, IJavaSearchScope, IJavaSearchResultCollector)
39381=SearchEngine:searchDeclarationsOfReferencedTypes(IWorkspace, IJavaElement, IJavaSearchResultCollector)
39382=SearchEngine:getDefaultSearchParticipant()
39383=SearchEngine:createTypeNameMatch(IType, int)
39384=SearchEngine:search(SearchPattern, SearchParticipant[], IJavaSearchScope, SearchRequestor, IProgressMonitor)
39385=SearchEngine:TypeNameRequestorAdapter:acceptType(int, char[], char[], char[][], String, AccessRestriction)
39386=SearchEngine:createJavaSearchScope(IResource[])
39387=SearchEngine:searchAllMethodNames(char[], int, char[], int, IJavaSearchScope, MethodNameMatchRequestor, int, IProgressMonitor)
39388=SearchEngine:searchDeclarationsOfSentMessages(IJavaElement, SearchRequestor, IProgressMonitor)
39389=SearchEngine:createStrictHierarchyScope(IJavaProject, IType, boolean, boolean, WorkingCopyOwner)
39390=SearchEngine:ResultCollectorAdapter:endReporting()
39391=SearchEngine:searchAllMethodNames(char[], int, char[], int, char[], int, char[], int, IJavaSearchScope, MethodNameRequestor, int, IProgressMonitor)
39392=SearchEngine:ResultCollectorAdapter:ResultCollectorAdapter(IJavaSearchResultCollector)
39393=SearchEngine:SearchEngine(WorkingCopyOwner)
39394=SearchEngine:createSearchPattern(IJavaElement, int)
39395=SearchEngine:TypeNameRequestorAdapter:TypeNameRequestorAdapter(ITypeNameRequestor)
39396=SearchEngine:search(IWorkspace, IJavaElement, int, IJavaSearchScope, IJavaSearchResultCollector)
39397=SearchEngine:ResultCollectorAdapter:acceptSearchMatch(SearchMatch)
39398=SearchEngine:searchAllTypeNames(IWorkspace, char[], char[], int, boolean, int, IJavaSearchScope, ITypeNameRequestor, int, IProgressMonitor)
39399=SearchEngine:searchAllTypeNames(char[][], char[][], IJavaSearchScope, TypeNameRequestor, int, IProgressMonitor)
39400=SearchEngine:searchAllTypeNames(char[], int, char[], int, int, IJavaSearchScope, TypeNameMatchRequestor, int, IProgressMonitor)
39401=SearchEngine:SearchEngine()
39402=SearchEngine:createOrSearchPattern(ISearchPattern, ISearchPattern)
39403=SearchEngine:createWorkspaceScope()
39404=SearchEngine:createHierarchyScope(IType)
39405=SearchEngine:createJavaSearchScope(IJavaElement[], boolean)
39406=SearchEngine:searchAllTypeNames(char[], int, char[], int, int, IJavaSearchScope, TypeNameRequestor, int, IProgressMonitor)
39407=SearchEngine:searchDeclarationsOfSentMessages(IWorkspace, IJavaElement, IJavaSearchResultCollector)
39408=SearchEngine:searchDeclarationsOfAccessedFields(IJavaElement, SearchRequestor, IProgressMonitor)
39409=SearchEngine:searchDeclarationsOfAccessedFields(IWorkspace, IJavaElement, IJavaSearchResultCollector)
39410=SearchEngine:createSearchPattern(String, int, int, boolean)
39411=SearchEngine:createMethodNameMatch(IMethod, int)
39412=SearchEngine:createJavaSearchScope(IJavaElement[])
39413=SearchEngine:search(IWorkspace, ISearchPattern, IJavaSearchScope, IJavaSearchResultCollector)
39414=SearchEngine:createJavaSearchScope(IJavaElement[], int)
39415=SearchEngine:searchDeclarationsOfReferencedTypes(IJavaElement, SearchRequestor, IProgressMonitor)
39416=SearchEngine:createHierarchyScope(IType, WorkingCopyOwner)
39417=SearchEngine:searchAllTypeNames(char[], char[], int, int, IJavaSearchScope, TypeNameRequestor, int, IProgressMonitor)
39418=CompletionOnJavadocQualifiedTypeReference:printExpression(int, StringBuffer)
39419=CompletionOnJavadocQualifiedTypeReference:addCompletionFlags(int)
39420=CompletionOnJavadocQualifiedTypeReference:completeFormalReference()
39421=CompletionOnJavadocQualifiedTypeReference:CompletionOnJavadocQualifiedTypeReference(JavadocQualifiedTypeReference)
39422=CompletionOnJavadocQualifiedTypeReference:completeAnException()
39423=CompletionOnJavadocQualifiedTypeReference:completeBaseTypes()
39424=CompletionOnJavadocQualifiedTypeReference:completeInText()
39425=CompletionOnJavadocQualifiedTypeReference:CompletionOnJavadocQualifiedTypeReference(char[][], char[], long[], int, int)
39426=CompletionOnJavadocQualifiedTypeReference:getCompletionFlags()
39427=LocalClass02:searchAllTypeNames(char[], int, char[])
39428=A:updateAnnotation()
39429=X:foo()
39430=ResolveMethodDeclarationInInterface:main(String[])
39431=FactoryPathConfigurationBlock:canRemove()
39432=FactoryPathConfigurationBlock:FactoryPathAdapter:selectionChanged(ListDialogField<FactoryPathEntry>)
39433=FactoryPathConfigurationBlock:hasProjectSpecificOptionsNoCache(IProject)
39434=FactoryPathConfigurationBlock:FactoryPathAdapter:doubleClicked(ListDialogField<FactoryPathEntry>)
39435=FactoryPathConfigurationBlock:getSelectedListContents()
39436=FactoryPathConfigurationBlock:editSelectedItem()
39437=FactoryPathConfigurationBlock:updateFactoryPathEntries()
39438=FactoryPathConfigurationBlock:FactoryPathLabelProvider:getColumnImage(Object, int)
39439=FactoryPathConfigurationBlock:cacheOriginalValues()
39440=FactoryPathConfigurationBlock:FactoryPathEntry:FactoryPathEntry(FactoryContainer, FactoryPath.Attributes)
39441=FactoryPathConfigurationBlock:addEntries(FactoryPathEntry[])
39442=FactoryPathConfigurationBlock:performDefaults()
39443=FactoryPathConfigurationBlock:canAdvanced()
39444=FactoryPathConfigurationBlock:setListContents(List<FactoryPathEntry>)
39445=FactoryPathConfigurationBlock:FactoryPathAdapter:customButtonPressed(ListDialogField<FactoryPathEntry>, int)
39446=FactoryPathConfigurationBlock:getExistingPaths(FactoryContainer.FactoryType, FactoryContainer)
39447=FactoryPathConfigurationBlock:FactoryPathAdapter:dialogFieldChanged(DialogField)
39448=FactoryPathConfigurationBlock:validateSettings(Key, String, String)
39449=FactoryPathConfigurationBlock:initContents()
39450=FactoryPathConfigurationBlock:FactoryPathEntry:pathMapFromList(List<FactoryPathEntry>)
39451=FactoryPathConfigurationBlock:canEdit()
39452=FactoryPathConfigurationBlock:FactoryPathLabelProvider:getColumnText(Object, int)
39453=FactoryPathConfigurationBlock:openVariableSelectionDialog(FactoryPathEntry)
39454=FactoryPathConfigurationBlock:openJarFileDialog(FactoryPathEntry)
39455=FactoryPathConfigurationBlock:getListContents()
39456=FactoryPathConfigurationBlock:advancedOptionsDialog()
39457=FactoryPathConfigurationBlock:openExtJarFileDialog(FactoryPathEntry)
39458=FactoryPathConfigurationBlock:updateModel(DialogField)
39459=FactoryPathConfigurationBlock:settingsChanged(IScopeContext)
39460=FactoryPathConfigurationBlock:saveSettings()
39461=FactoryPathConfigurationBlock:FactoryPathEntry:hashCode()
39462=FactoryPathConfigurationBlock:FactoryPathEntry:pathListFromMap(Map<FactoryContainer, Attributes>)
39463=FactoryPathConfigurationBlock:createContents(Composite)
39464=FactoryPathConfigurationBlock:FactoryPathEntry:equals(Object)
39465=FactoryPathConfigurationBlock:customButtonPressed(int)
39466=FactoryPathConfigurationBlock:FactoryPathConfigurationBlock(IStatusChangeListener, IProject, IWorkbenchPreferenceContainer)
39467=Test:foo()
39468=Test:bar()
39469=RunOnlyAssistModelTests18:suite()
39470=RunOnlyAssistModelTests18:RunOnlyAssistModelTests18(String)
39471=RunOnlyAssistModelTests18:addTestsToSuite(TestSuite, Class[])
39472=RunOnlyAssistModelTests18:getAllTestClasses()
39473=RunOnlyAssistModelTests18:tearDown()
39474=TF47209:m47209(int)
39475=TF47209:TF47209(String)
39476=ConditionalExpression:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
39477=ConditionalExpression:propertyDescriptors(int)
39478=ConditionalExpression:setExpression(Expression)
39479=ConditionalExpression:subtreeMatch0(ASTMatcher, Object)
39480=ConditionalExpression:setElseExpression(Expression)
39481=ConditionalExpression:internalStructuralPropertiesForType(int)
39482=ConditionalExpression:getExpression()
39483=ConditionalExpression:clone0(AST)
39484=ConditionalExpression:memSize()
39485=ConditionalExpression:getElseExpression()
39486=ConditionalExpression:accept0(ASTVisitor)
39487=ConditionalExpression:treeSize()
39488=ConditionalExpression:getThenExpression()
39489=ConditionalExpression:ConditionalExpression(AST)
39490=ConditionalExpression:getNodeType0()
39491=ConditionalExpression:setThenExpression(Expression)
39492=RecoveredLocalVariable:sourceEnd()
39493=RecoveredLocalVariable:RecoveredLocalVariable(LocalDeclaration, RecoveredElement, int)
39494=RecoveredLocalVariable:updatedStatement()
39495=RecoveredLocalVariable:updateOnOpeningBrace(int, int)
39496=RecoveredLocalVariable:updateParseTree()
39497=RecoveredLocalVariable:add(Statement, int)
39498=RecoveredLocalVariable:updateSourceEndIfNecessary(int, int)
39499=RecoveredLocalVariable:parseTree()
39500=RecoveredLocalVariable:toString(int)
39501=RecoveredLocalVariable:updateOnClosingBrace(int, int)
39502=IBufferFactory:createBuffer(IOpenable)
39503=GetKeyVisitor:visit(ClassInstanceCreation)
39504=IdeProcessingEnvImpl:IdeProcessingEnvImpl(IdeAnnotationProcessorManager, IJavaProject, Compiler)
39505=IdeProcessingEnvImpl:getAptProject()
39506=IdeProcessingEnvImpl:addNewUnit(FileGenerationResult)
39507=IdeProcessingEnvImpl:currentProcessorSupportsRTTG()
39508=IdeProcessingEnvImpl:getPhase()
39509=IdeProcessingEnvImpl:getJavaProject()
39510=IdeProcessingEnvImpl:addNewResource(IFile)
39511=IdeProcessingEnvImpl:getOptions()
39512=IdeProcessingEnvImpl:getEnclosingIFile(Element)
39513=IdeProcessingEnvImpl:getProject()
39514=IdeProcessingEnvImpl:getLocale()
39515=EnhancedForStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
39516=EnhancedForStatement:memSize()
39517=EnhancedForStatement:getNodeType0()
39518=EnhancedForStatement:getExpression()
39519=EnhancedForStatement:setParameter(SingleVariableDeclaration)
39520=EnhancedForStatement:setBody(Statement)
39521=EnhancedForStatement:getBody()
39522=EnhancedForStatement:clone0(AST)
39523=EnhancedForStatement:subtreeMatch0(ASTMatcher, Object)
39524=EnhancedForStatement:accept0(ASTVisitor)
39525=EnhancedForStatement:setExpression(Expression)
39526=EnhancedForStatement:treeSize()
39527=EnhancedForStatement:getParameter()
39528=EnhancedForStatement:propertyDescriptors(int)
39529=EnhancedForStatement:internalStructuralPropertiesForType(int)
39530=EnhancedForStatement:EnhancedForStatement(AST)
39531=Test:main(String[])
39532=A:foo(String)
39533=HashtableOfPackage:HashtableOfPackage()
39534=HashtableOfPackage:HashtableOfPackage(int)
39535=HashtableOfPackage:size()
39536=HashtableOfPackage:get(char[])
39537=HashtableOfPackage:containsKey(char[])
39538=HashtableOfPackage:rehash()
39539=HashtableOfPackage:toString()
39540=HashtableOfPackage:put(char[], PackageBinding)
39541=A:launch()
39542=ExistenceTests:testClassFileInBinary()
39543=ExistenceTests:testNonExistingClassFile2()
39544=ExistenceTests:testCompilationUnitInLibrary1()
39545=ExistenceTests:testNonExistingPackageFragment2()
39546=ExistenceTests:testCorrespondingResourceNonExistingPkgFragmentRoot()
39547=ExistenceTests:testCorrespondingResourceNonExistingClassFile()
39548=ExistenceTests:testUnderlyingResourceNonExistingType()
39549=ExistenceTests:testInvalidPackageName1()
39550=ExistenceTests:assertOpenFails(String, IOpenable)
39551=ExistenceTests:testTypeParameter5()
39552=ExistenceTests:testUnderlyingResourceNonExistingProject()
39553=ExistenceTests:testMethodWithInvalidParameter()
39554=ExistenceTests:testNonExistingExternalPackageFragmentRoot1()
39555=ExistenceTests:testTypeParameter3()
39556=ExistenceTests:testCorrespondingResourceNonExistingPkgFragment()
39557=ExistenceTests:testTypeParameter1()
39558=ExistenceTests:suite()
39559=ExistenceTests:testCorrespondingResourceNonExistingJarPkgFragmentRoot()
39560=ExistenceTests:testClassFileInSource1()
39561=ExistenceTests:testNonExistingClassFile1()
39562=ExistenceTests:ExistenceTests(String)
39563=ExistenceTests:testCorrespondingResourceNonExistingCompilationUnit()
39564=ExistenceTests:testInvalidPackageName2()
39565=ExistenceTests:testCompilationUnitInLibrary2()
39566=ExistenceTests:testNonExistingCompilationUnit()
39567=ExistenceTests:testNonExistingPackageFragment3()
39568=ExistenceTests:testUnderlyingResourceNonExistingCompilationUnit()
39569=ExistenceTests:testNonExistingPackageFragment1()
39570=ExistenceTests:testBinaryMethodAfterNonExistingMember()
39571=ExistenceTests:testPkgFragmentRootNotInClasspath()
39572=ExistenceTests:testNonJavaProject()
39573=ExistenceTests:testClassFileInLibrary()
39574=ExistenceTests:testUnderlyingResourceNonExistingPkgFragmentRoot()
39575=ExistenceTests:testNonExistingExternalPackageFragmentRoot2()
39576=ExistenceTests:testClassFileInLibraryInOtherProject()
39577=ExistenceTests:testTypeParameter4()
39578=ExistenceTests:testUnderlyingResourceNonExistingJarPkgFragmentRoot()
39579=ExistenceTests:testTypeParameter2()
39580=ExistenceTests:testUnderlyingResourceNonExistingClassFile()
39581=ExistenceTests:assertCorrespondingResourceFails(IJavaElement)
39582=ExistenceTests:testUnderlyingResourceNonExistingPkgFragment()
39583=ExistenceTests:assertUnderlyingResourceFails(IJavaElement)
39584=ExistenceTests:testCorrespondingResourceNonExistingType()
39585=ExistenceTests:testClassFileInSource2()
39586=ExistenceTests:testCorrespondingResourceNonExistingProject()
39587=ExistenceTests:testJarFile()
39588=JavaSearchGenericMethodEquivalentTests:suite()
39589=JavaSearchGenericMethodEquivalentTests:JavaSearchGenericMethodEquivalentTests(String)
39590=JavaSearchGenericMethodEquivalentTests:addResultLine(StringBuffer, char[])
39591=JavaSearchGenericMethodEquivalentTests:removeFirstTypeArgument(char[])
39592=AssistSourceType:getField(String)
39593=AssistSourceType:getType(String, int)
39594=AssistSourceType:toStringInfo(int, StringBuffer, Object, boolean)
39595=AssistSourceType:getFullyQualifiedParameterizedName()
39596=AssistSourceType:AssistSourceType(JavaElement, String, Map, Map)
39597=AssistSourceType:getInitializer(int)
39598=AssistSourceType:getElementInfo(IProgressMonitor)
39599=AssistSourceType:getType(String)
39600=AssistSourceType:getMethod(String, String[])
39601=AssistSourceType:getKey()
39602=AssistSourceType:isResolved()
39603=AssistSourceType:getAnnotation(String)
39604=AssistSourceType:getTypeParameter(String)
39605=CodeAttribute:getLocalVariableAttribute()
39606=CodeAttribute:getCodeLength()
39607=CodeAttribute:getExceptionTableLength()
39608=CodeAttribute:getMaxLocals()
39609=CodeAttribute:getMaxStack()
39610=CodeAttribute:CodeAttribute(byte[], IConstantPool, int)
39611=CodeAttribute:getAttributesCount()
39612=CodeAttribute:getExceptionTable()
39613=CodeAttribute:getBytecodes()
39614=CodeAttribute:getAttributes()
39615=CodeAttribute:traverse(IBytecodeVisitor)
39616=CodeAttribute:getLineNumberAttribute()
39617=IJavaElement:getAncestor(int)
39618=IJavaElement:getSchedulingRule()
39619=IJavaElement:getParent()
39620=IJavaElement:getJavaModel()
39621=IJavaElement:getElementName()
39622=IJavaElement:getUnderlyingResource()
39623=IJavaElement:getElementType()
39624=IJavaElement:isReadOnly()
39625=IJavaElement:getHandleIdentifier()
39626=IJavaElement:getCorrespondingResource()
39627=IJavaElement:getPrimaryElement()
39628=IJavaElement:getJavaProject()
39629=IJavaElement:getPath()
39630=IJavaElement:getResource()
39631=IJavaElement:getAttachedJavadoc(IProgressMonitor)
39632=IJavaElement:exists()
39633=IJavaElement:isStructureKnown()
39634=IJavaElement:getOpenable()
39635=X04:foo()
39636=X02b:setCharset(String, Object)
39637=ICodeAssist:codeSelect(int, int)
39638=ICodeAssist:codeComplete(int, CompletionRequestor, IProgressMonitor)
39639=ICodeAssist:codeSelect(int, int, WorkingCopyOwner)
39640=ICodeAssist:codeComplete(int, ICodeCompletionRequestor)
39641=ICodeAssist:codeComplete(int, ICompletionRequestor)
39642=ICodeAssist:codeComplete(int, ICompletionRequestor, WorkingCopyOwner)
39643=ICodeAssist:codeComplete(int, CompletionRequestor, WorkingCopyOwner, IProgressMonitor)
39644=ICodeAssist:codeComplete(int, CompletionRequestor, WorkingCopyOwner)
39645=ICodeAssist:codeComplete(int, CompletionRequestor)
39646=A:mdd(int)
39647=Pair:Pair(A, B)
39648=Pair:equals(Object, Object)
39649=Seq:zip(Seq<T>)
39650=Seq:Seq(E, Seq<E>)
39651=A:main(String[])
39652=Pair:toString()
39653=Seq:toString()
39654=Seq:Seq()
39655=Pair:equals(Object)
39656=Seq:Zipper:zip(Seq<T>)
39657=Seq:isEmpty()
39658=HierarchyOnWorkingCopiesTests:test228845()
39659=HierarchyOnWorkingCopiesTests:testSimpleSubTypeHierarchy()
39660=HierarchyOnWorkingCopiesTests:test442534()
39661=HierarchyOnWorkingCopiesTests:test429435()
39662=HierarchyOnWorkingCopiesTests:testSimpleSuperTypeHierarchy()
39663=HierarchyOnWorkingCopiesTests:test429537()
39664=HierarchyOnWorkingCopiesTests:test450442()
39665=HierarchyOnWorkingCopiesTests:test400905b()
39666=HierarchyOnWorkingCopiesTests:test228845b()
39667=HierarchyOnWorkingCopiesTests:HierarchyOnWorkingCopiesTests(String)
39668=HierarchyOnWorkingCopiesTests:suite()
39669=HierarchyOnWorkingCopiesTests:test400905()
39670=HierarchyOnWorkingCopiesTests:test400905a()
39671=DeclarationOfAccessedFieldsPattern:DeclarationOfAccessedFieldsPattern(IJavaElement)
39672=ImplicitNullAnnotationVerifier:findAllOverriddenMethods(MethodBinding, char[], int, ReferenceBinding, Set, List)
39673=ImplicitNullAnnotationVerifier:checkNullSpecInheritance(MethodBinding, AbstractMethodDeclaration, boolean, boolean, boolean, MethodBinding, MethodBinding[], Scope, InheritedNonNullnessInfo[])
39674=ImplicitNullAnnotationVerifier:applyReturnNullBits(MethodBinding, long)
39675=ImplicitNullAnnotationVerifier:checkImplicitNullAnnotations(MethodBinding, AbstractMethodDeclaration, boolean, Scope)
39676=ImplicitNullAnnotationVerifier:ImplicitNullAnnotationVerifier(LookupEnvironment)
39677=ImplicitNullAnnotationVerifier:recordArgNonNullness(MethodBinding, int, int, Argument, Boolean)
39678=ImplicitNullAnnotationVerifier:recordDeferredInheritedNullness(Scope, ASTNode, MethodBinding, Boolean, InheritedNonNullnessInfo)
39679=ImplicitNullAnnotationVerifier:getParameterNonNullness(MethodBinding, int, boolean)
39680=ImplicitNullAnnotationVerifier:recordArgNonNullness18(MethodBinding, int, Argument, Boolean, LookupEnvironment)
39681=ImplicitNullAnnotationVerifier:areTypesEqual(TypeBinding, TypeBinding)
39682=ImplicitNullAnnotationVerifier:collectOverriddenMethods(MethodBinding, char[], int, ReferenceBinding, Set, List)
39683=ImplicitNullAnnotationVerifier:areParametersEqual(MethodBinding, MethodBinding)
39684=ImplicitNullAnnotationVerifier:getReturnTypeNullnessTagBits(MethodBinding, boolean)
39685=ImplicitNullAnnotationVerifier:ImplicitNullAnnotationVerifier(LookupEnvironment, boolean)
39686=AbstractSyntaxTreeTest:checkParse(char[], String, String, String)
39687=AbstractSyntaxTreeTest:acceptImport(int, int, int, int, char[][], boolean, int)
39688=AbstractSyntaxTreeTest:getCompilerMessages(CompilationResult)
39689=AbstractSyntaxTreeTest:acceptProblem(CategorizedProblem)
39690=AbstractSyntaxTreeTest:enterType(TypeInfo)
39691=AbstractSyntaxTreeTest:acceptTypeReference(char[], int)
39692=AbstractSyntaxTreeTest:exitInterface(int, int)
39693=AbstractSyntaxTreeTest:acceptUnknownReference(char[][], int, int)
39694=AbstractSyntaxTreeTest:acceptInitializer(int, int, int[], int, int, int, int)
39695=AbstractSyntaxTreeTest:enterMethod(MethodInfo)
39696=AbstractSyntaxTreeTest:acceptConstructorReference(char[], int, int)
39697=AbstractSyntaxTreeTest:exitClass(int, int)
39698=AbstractSyntaxTreeTest:exitField(int, int, int)
39699=AbstractSyntaxTreeTest:acceptTypeReference(char[][], int, int)
39700=AbstractSyntaxTreeTest:acceptAnnotationTypeReference(char[][], int, int)
39701=AbstractSyntaxTreeTest:enterConstructor(int, int[], int, int, char[], int, int, char[][], int[], int[], char[][], int[], int[], int, char[][], int[], int[], int)
39702=AbstractSyntaxTreeTest:enterField(FieldInfo)
39703=AbstractSyntaxTreeTest:assertParseTreeEquals(String, String)
39704=AbstractSyntaxTreeTest:checkParse(int, char[], String, String, String, ASTVisitor)
39705=AbstractSyntaxTreeTest:enterMethod(int, int[], int, int, char[], int, int, int, char[], int, int, char[][], int[], int[], char[][], int[], int[], int, int, int, char[][], int[], int[], int)
39706=AbstractSyntaxTreeTest:enterField(int, int[], int, int, char[], int, int, int, char[], int, int, int, int)
39707=AbstractSyntaxTreeTest:checkParse(char[], String, String, String, ASTVisitor)
39708=AbstractSyntaxTreeTest:exitConstructor(int, int)
39709=AbstractSyntaxTreeTest:acceptMethodReference(char[], int, int)
39710=AbstractSyntaxTreeTest:exitField(int, int)
39711=AbstractSyntaxTreeTest:exitType(int)
39712=AbstractSyntaxTreeTest:exitCompilationUnit(int)
39713=AbstractSyntaxTreeTest:enterInitializer(int, int)
39714=AbstractSyntaxTreeTest:acceptAnnotationTypeReference(char[], int)
39715=AbstractSyntaxTreeTest:acceptImport(int, int, int[], char[], int, boolean, int)
39716=AbstractSyntaxTreeTest:exitMethod(int, int)
39717=AbstractSyntaxTreeTest:assertDianosticEquals(String, String, CompilationResult)
39718=AbstractSyntaxTreeTest:AbstractSyntaxTreeTest(String, String, String)
39719=AbstractSyntaxTreeTest:acceptLineSeparatorPositions(int[])
39720=AbstractSyntaxTreeTest:exitConstructor(int)
39721=AbstractSyntaxTreeTest:checkParse(int, char[], String, String, String)
39722=AbstractSyntaxTreeTest:enterInterface(int, int[], int, int, int, char[], int, int, char[][], int[], int[], int)
39723=AbstractSyntaxTreeTest:exitMethod(int, Expression)
39724=AbstractSyntaxTreeTest:acceptPackage(ImportReference)
39725=AbstractSyntaxTreeTest:enterCompilationUnit()
39726=AbstractSyntaxTreeTest:acceptPackage(int, int, int[], char[], int)
39727=AbstractSyntaxTreeTest:acceptFieldReference(char[], int)
39728=AbstractSyntaxTreeTest:acceptUnknownReference(char[], int)
39729=AbstractSyntaxTreeTest:exitInitializer(int)
39730=AbstractSyntaxTreeTest:enterConstructor(MethodInfo)
39731=AbstractSyntaxTreeTest:enterClass(int, int[], int, int, int, char[], int, int, char[], int, int, char[][], int[], int[], int)
39732=MissingTypesGuesser:convert(ArrayQualifiedTypeReference)
39733=MissingTypesGuesser:convert(Wildcard)
39734=MissingTypesGuesser:convert(QualifiedTypeReference)
39735=MissingTypesGuesser:ResolutionCleaner:ResolutionCleaner()
39736=MissingTypesGuesser:findTypeNames(char[][])
39737=MissingTypesGuesser:ResolutionCleaner:visit(QualifiedTypeReference, ClassScope)
39738=MissingTypesGuesser:getSubstitution(TypeReference)
39739=MissingTypesGuesser:ResolutionCleaner:visit(ParameterizedSingleTypeReference, BlockScope)
39740=MissingTypesGuesser:convert(ParameterizedSingleTypeReference)
39741=MissingTypesGuesser:ResolutionCleaner:cleanUp(TypeReference)
39742=MissingTypesGuesser:computeMissingElements(QualifiedTypeReference[], char[][][], Binding[], int[], int[])
39743=MissingTypesGuesser:guess(TypeReference, Scope, GuessedTypeRequestor)
39744=MissingTypesGuesser:ResolutionCleaner:cleanUp(ParameterizedQualifiedTypeReference)
39745=MissingTypesGuesser:GuessedTypeRequestor:accept(TypeBinding, Binding[], int[], int[], boolean)
39746=MissingTypesGuesser:convert(ParameterizedQualifiedTypeReference)
39747=MissingTypesGuesser:ResolutionCleaner:visit(ParameterizedSingleTypeReference, ClassScope)
39748=MissingTypesGuesser:ResolutionCleaner:visit(Wildcard, BlockScope)
39749=MissingTypesGuesser:convert(SingleTypeReference)
39750=MissingTypesGuesser:convert(ArrayTypeReference)
39751=MissingTypesGuesser:ResolutionCleaner:visit(QualifiedTypeReference, BlockScope)
39752=MissingTypesGuesser:nextSubstitution(QualifiedTypeReference[], char[][][][], int[])
39753=MissingTypesGuesser:getSubstituedTypes()
39754=MissingTypesGuesser:ResolutionCleaner:visit(Wildcard, ClassScope)
39755=MissingTypesGuesser:ResolutionCleaner:visit(ArrayQualifiedTypeReference, BlockScope)
39756=MissingTypesGuesser:MissingTypesGuesser(CompletionEngine)
39757=MissingTypesGuesser:ResolutionCleaner:visit(SingleTypeReference, BlockScope)
39758=MissingTypesGuesser:ResolutionCleaner:cleanUp(TypeReference, ClassScope)
39759=MissingTypesGuesser:ResolutionCleaner:visit(ParameterizedQualifiedTypeReference, ClassScope)
39760=MissingTypesGuesser:ResolutionCleaner:visit(ParameterizedQualifiedTypeReference, BlockScope)
39761=MissingTypesGuesser:ResolutionCleaner:visit(ArrayTypeReference, ClassScope)
39762=MissingTypesGuesser:convert(TypeReference)
39763=MissingTypesGuesser:ResolutionCleaner:cleanUp(TypeReference, BlockScope)
39764=MissingTypesGuesser:ResolutionCleaner:visit(SingleTypeReference, ClassScope)
39765=MissingTypesGuesser:getOriginal(TypeReference)
39766=MissingTypesGuesser:ResolutionCleaner:cleanUp(ParameterizedSingleTypeReference)
39767=MissingTypesGuesser:ResolutionCleaner:visit(ArrayTypeReference, BlockScope)
39768=MissingTypesGuesser:ResolutionCleaner:visit(ArrayQualifiedTypeReference, ClassScope)
39769=LineInformation:create(CompilationUnit)
39770=LineInformation:getLineOfOffset(int)
39771=LineInformation:getLineOffset(int)
39772=LineInformation:create(IDocument)
39773=A:foo()
39774=A:run()
39775=ReconcileEnv:addTypeDependency(String)
39776=ReconcileEnv:getASTFrom(IFile)
39777=ReconcileEnv:addMessage(IFile, int, int, Severity, String, int, String[])
39778=ReconcileEnv:newEnv(ReconcileContext)
39779=ReconcileEnv:openPipeline()
39780=ReconcileEnv:getCompilationUnit()
39781=ReconcileEnv:CallbackRequestor:acceptAST(ICompilationUnit, CompilationUnit)
39782=ReconcileEnv:close()
39783=ReconcileEnv:CallbackRequestor:acceptBinding(String, IBinding)
39784=ReconcileEnv:getFiler()
39785=ReconcileEnv:ReconcileEnv(ReconcileContext, ICompilationUnit, IFile, IJavaProject)
39786=ClassLiteralAccessCompletionTest:testPrimitiveTypeWithNonEmptyIdentifier()
39787=ClassLiteralAccessCompletionTest:suite()
39788=ClassLiteralAccessCompletionTest:testArrayTypeWithNonEmptyIdentifier()
39789=ClassLiteralAccessCompletionTest:ClassLiteralAccessCompletionTest(String)
39790=ClassLiteralAccessCompletionTest:testPrimitiveArrayTypeWithNonEmptyIdentifier()
39791=ClassLiteralAccessCompletionTest:testArrayType()
39792=ClassLiteralAccessCompletionTest:testPrimitiveType()
39793=ClassLiteralAccessCompletionTest:testPrimitiveArrayType()
39794=NullPrintWriter:write(char[], int, int)
39795=NullPrintWriter:write(String, int, int)
39796=NullPrintWriter:NullPrintWriter()
39797=NullPrintWriter:write(int)
39798=NullPrintWriter:flush()
39799=Example:bar(int)
39800=Test:foo()
39801=ISourceMethod:getTypeParameterBounds()
39802=ISourceMethod:getArgumentTypeNames()
39803=ISourceMethod:getDeclarationSourceEnd()
39804=ISourceMethod:getNameSourceStart()
39805=ISourceMethod:getExceptionTypeNames()
39806=ISourceMethod:getNameSourceEnd()
39807=ISourceMethod:getReturnTypeName()
39808=ISourceMethod:getDeclarationSourceStart()
39809=ISourceMethod:getTypeParameterNames()
39810=Example:bar()
39811=Example:foo(int, int)
39812=Test:Test()
39813=A:lambdas()
39814=A:run()
39815=X:bar(String[][])
39816=A:actionPerformed(ActionEvent)
39817=ParameterizedTypeBinding:methods()
39818=ParameterizedTypeBinding:ParameterizedTypeBinding(ReferenceBinding, TypeBinding[], ReferenceBinding, LookupEnvironment)
39819=ParameterizedTypeBinding:isEquivalentTo(TypeBinding)
39820=ParameterizedTypeBinding:getMethods(char[])
39821=ParameterizedTypeBinding:shortReadableName()
39822=ParameterizedTypeBinding:initialize(ReferenceBinding, TypeBinding[])
39823=ParameterizedTypeBinding:superclass()
39824=ParameterizedTypeBinding:syntheticEnclosingInstanceTypes()
39825=ParameterizedTypeBinding:getMemberType(char[])
39826=ParameterizedTypeBinding:getExactConstructor(TypeBinding[])
39827=ParameterizedTypeBinding:getExactMethod(char[], TypeBinding[], CompilationUnitScope)
39828=ParameterizedTypeBinding:collectSubstitutes(TypeBinding, Map)
39829=ParameterizedTypeBinding:isParameterizedType()
39830=ParameterizedTypeBinding:getField(char[], boolean)
39831=ParameterizedTypeBinding:swapUnresolved(UnresolvedReferenceBinding, ReferenceBinding, LookupEnvironment)
39832=ParameterizedTypeBinding:qualifiedSourceName()
39833=ParameterizedTypeBinding:fields()
39834=ParameterizedTypeBinding:toString()
39835=ParameterizedTypeBinding:memberTypes()
39836=ParameterizedTypeBinding:hasMemberTypes()
39837=ParameterizedTypeBinding:resolve()
39838=ParameterizedTypeBinding:substitute(TypeBinding)
39839=ParameterizedTypeBinding:readableName()
39840=ParameterizedTypeBinding:erasure()
39841=ParameterizedTypeBinding:superInterfaces()
39842=ParameterizedTypeBinding:debugName()
39843=ParameterizedTypeBinding:initializeArguments()
39844=ParameterizedTypeBinding:sourceName()
39845=ParameterizedTypeBinding:qualifiedPackageName()
39846=ParameterizedTypeBinding:implementsMethod(MethodBinding)
39847=ParameterizedTypeBinding:signature()
39848=ParameterizedTypeBinding:syntheticOuterLocalVariables()
39849=ParameterizedTypeBinding:enclosingType()
39850=ParameterizedTypeBinding:constantPoolName()
39851=ParameterizedTypeBinding:genericTypeSignature()
39852=ParameterizedTypeBinding:createParameterizedMethod(MethodBinding)
39853=ParameterizedTypeBinding:computeId()
39854=ParameterizedTypeBinding:typeVariables()
39855=ParameterizedTypeBinding:fieldCount()
39856=MissingTypeBinding:clone(TypeBinding)
39857=MissingTypeBinding:toString()
39858=MissingTypeBinding:collectMissingTypes(List<TypeBinding>)
39859=MissingTypeBinding:problemId()
39860=MissingTypeBinding:setTypeAnnotations(AnnotationBinding[], boolean)
39861=MissingTypeBinding:setMissingSuperclass(ReferenceBinding)
39862=MissingTypeBinding:MissingTypeBinding(PackageBinding, char[][], LookupEnvironment)
39863=A:foo(java.lang.String, long, java.lang.String, int, long)
39864=A:A(int)
39865=ReferenceContext:tagAsHavingErrors()
39866=ReferenceContext:hasErrors()
39867=ReferenceContext:getCompilationUnitDeclaration()
39868=ReferenceContext:compilationResult()
39869=ReferenceContext:tagAsHavingIgnoredMandatoryErrors(int)
39870=ReferenceContext:abort(int, CategorizedProblem)
39871=IndentManipulation:isLineDelimiterChar(char)
39872=IndentManipulation:getIntValue(Map, String, int)
39873=IndentManipulation:calculateSpaceEquivalents(int, int)
39874=IndentManipulation:indexOfIndent(CharSequence, int, int, int)
39875=IndentManipulation:measureIndentInSpaces(CharSequence, int)
39876=IndentManipulation:trimIndent(String, int, int, int)
39877=IndentManipulation:getIndentWidth(Map)
39878=IndentManipulation:getChangeIndentEdits(String, int, int, int, String)
39879=IndentManipulation:changeIndent(String, int, int, int, String, String)
39880=IndentManipulation:IndentManipulation()
39881=IndentManipulation:extractIndentString(String, int, int)
39882=IndentManipulation:measureIndentUnits(CharSequence, int, int)
39883=IndentManipulation:isIndentChar(char)
39884=IndentManipulation:getTabWidth(Map)
39885=Foo:m1()
39886=A:f()
39887=Test:main(String[])
39888=DiscardWorkingCopyOperation:DiscardWorkingCopyOperation(IJavaElement)
39889=DiscardWorkingCopyOperation:getWorkingCopy()
39890=DiscardWorkingCopyOperation:isReadOnly()
39891=DiscardWorkingCopyOperation:executeOperation()
39892=ExceptionTableEntry:getCatchType()
39893=ExceptionTableEntry:getEndPC()
39894=ExceptionTableEntry:getStartPC()
39895=ExceptionTableEntry:getHandlerPC()
39896=ExceptionTableEntry:ExceptionTableEntry(byte[], IConstantPool, int)
39897=ExceptionTableEntry:getCatchTypeIndex()
39898=DOMField:getInitializer()
39899=DOMField:insertSibling(IDOMNode)
39900=DOMField:setHasInitializer(boolean)
39901=DOMField:appendMemberBodyContents(CharArrayBuffer)
39902=DOMField:setComment(String)
39903=DOMField:getFirstFieldDeclaration()
39904=DOMField:remove()
39905=DOMField:setIsVariableDeclarator(boolean)
39906=DOMField:appendSimpleContents(CharArrayBuffer)
39907=DOMField:DOMField()
39908=DOMField:setInitializerRange(int, int)
39909=DOMField:getTypeContents()
39910=DOMField:getMemberDeclarationStartPosition()
39911=DOMField:DOMField(char[], int[], String, int[], int, String, boolean)
39912=DOMField:setInitializer(String)
39913=DOMField:normalizeEndPosition(ILineStartFinder, DOMNode)
39914=DOMField:isTypeAltered()
39915=DOMField:offset(int)
39916=DOMField:isVariableDeclarator()
39917=DOMField:getDetailedNode()
39918=DOMField:DOMField(char[], int[], String, int[], int[], int, int[], int[], String, boolean, int[], boolean)
39919=DOMField:getJavaElement(IJavaElement)
39920=DOMField:setFlags(int)
39921=DOMField:setName(String)
39922=DOMField:setTypeAltered(boolean)
39923=DOMField:toString()
39924=DOMField:appendMemberHeaderFragment(CharArrayBuffer)
39925=DOMField:expand()
39926=DOMField:hasMultipleVariableDeclarators()
39927=DOMField:normalizeStartPosition(int, ILineStartFinder)
39928=DOMField:getType()
39929=DOMField:getNodeType()
39930=DOMField:setType(String)
39931=DOMField:appendMemberDeclarationContents(CharArrayBuffer)
39932=DOMField:getLastFieldDeclaration()
39933=DOMField:hasInitializer()
39934=DOMField:newDOMNode()
39935=DOMField:shareContents(DOMNode)
39936=DOMField:getSingleVariableDeclaratorContents()
39937=DOMField:becomeDetailed()
39938=DOMField:clone()
39939=X04:foo(String)
39940=ProgrammingProblemsTest:test0021_declared_thrown_checked_exceptions()
39941=ProgrammingProblemsTest:test0043()
39942=ProgrammingProblemsTest:test0013_declared_thrown_checked_exceptions()
39943=ProgrammingProblemsTest:test0026_declared_thrown_checked_exceptions()
39944=ProgrammingProblemsTest:test0052a()
39945=ProgrammingProblemsTest:test0056()
39946=ProgrammingProblemsTest:test0041()
39947=ProgrammingProblemsTest:test0022_declared_thrown_unchecked_exceptions()
39948=ProgrammingProblemsTest:test0054()
39949=ProgrammingProblemsTest:test0007_declared_thrown_checked_exceptions()
39950=ProgrammingProblemsTest:test0047()
39951=ProgrammingProblemsTest:test0028_declared_thrown_checked_exceptions()
39952=ProgrammingProblemsTest:test0027_declared_thrown_unchecked_exceptions()
39953=ProgrammingProblemsTest:testClass()
39954=ProgrammingProblemsTest:test0032_declared_thrown_checked_exceptions()
39955=ProgrammingProblemsTest:test0045()
39956=ProgrammingProblemsTest:test0010_declared_thrown_checked_exceptions()
39957=ProgrammingProblemsTest:runTest(String[], String[], String[], String[], boolean, String, String, boolean, String[], boolean, String[], Map, ICompilerRequestor, boolean)
39958=ProgrammingProblemsTest:test0036_declared_thrown_checked_exceptions()
39959=ProgrammingProblemsTest:test0034_declared_thrown_checked_exceptions()
39960=ProgrammingProblemsTest:test0023_declared_thrown_unchecked_exceptions()
39961=ProgrammingProblemsTest:test0011_declared_thrown_checked_exceptions()
39962=ProgrammingProblemsTest:test0001_unread_parameters()
39963=ProgrammingProblemsTest:test0029_declared_thrown_checked_exceptions()
39964=ProgrammingProblemsTest:test0049()
39965=ProgrammingProblemsTest:test0008_declared_thrown_checked_exceptions()
39966=ProgrammingProblemsTest:test0038()
39967=ProgrammingProblemsTest:test0002_unread_parameters()
39968=ProgrammingProblemsTest:test0019_declared_thrown_unchecked_exceptions()
39969=ProgrammingProblemsTest:test0005_unread_parameters()
39970=ProgrammingProblemsTest:test0006_unread_parameters()
39971=ProgrammingProblemsTest:test0009_declared_thrown_checked_exceptions()
39972=ProgrammingProblemsTest:test0062()
39973=ProgrammingProblemsTest:test0051()
39974=ProgrammingProblemsTest:ProgrammingProblemsTest(String)
39975=ProgrammingProblemsTest:test0040()
39976=ProgrammingProblemsTest:test0025_declared_thrown_checked_exceptions()
39977=ProgrammingProblemsTest:test0046_field_qualified()
39978=ProgrammingProblemsTest:test0060()
39979=ProgrammingProblemsTest:test0035_declared_thrown_checked_exceptions()
39980=ProgrammingProblemsTest:_test0058()
39981=ProgrammingProblemsTest:test0031_declared_thrown_checked_exceptions()
39982=ProgrammingProblemsTest:test0046_field()
39983=ProgrammingProblemsTest:getCompilerOptions()
39984=ProgrammingProblemsTest:test0016_unread_parameters_constructor()
39985=ProgrammingProblemsTest:test0052b()
39986=ProgrammingProblemsTest:test0055()
39987=ProgrammingProblemsTest:test0046_field_this_qualified()
39988=ProgrammingProblemsTest:test0017_shadowing_package_visible_methods()
39989=ProgrammingProblemsTest:test0044()
39990=ProgrammingProblemsTest:test0003_unread_parameters()
39991=ProgrammingProblemsTest:test0014_declared_thrown_checked_exceptions_unread_parameters()
39992=ProgrammingProblemsTest:test0018_declared_thrown_unchecked_exceptions()
39993=ProgrammingProblemsTest:test0053()
39994=ProgrammingProblemsTest:test0024_declared_thrown_unchecked_exceptions()
39995=ProgrammingProblemsTest:test0042()
39996=ProgrammingProblemsTest:test0004_unread_parameters()
39997=ProgrammingProblemsTest:test0012_declared_thrown_checked_exceptions()
39998=ProgrammingProblemsTest:suite()
39999=ProgrammingProblemsTest:test0030_declared_thrown_checked_exceptions()
40000=ProgrammingProblemsTest:test0059()
40001=ProgrammingProblemsTest:test0048()
40002=ProgrammingProblemsTest:test0037()
40003=ProgrammingProblemsTest:test0015_declared_thrown_checked_exceptions_unread_parameters()
40004=ProgrammingProblemsTest:test0046_field_in_private_type()
40005=ProgrammingProblemsTest:test0057()
40006=ProgrammingProblemsTest:test0046()
40007=ProgrammingProblemsTest:test0020_declared_thrown_checked_exceptions()
40008=ProgrammingProblemsTest:test0039()
40009=ProgrammingProblemsTest:test0063()
40010=ProgrammingProblemsTest:test0052()
40011=ProgrammingProblemsTest:test0061()
40012=ProgrammingProblemsTest:test0033_declared_thrown_checked_exceptions()
40013=ProgrammingProblemsTest:test0050()
40014=ResolvedBinaryField:getKey()
40015=ResolvedBinaryField:isResolved()
40016=ResolvedBinaryField:ResolvedBinaryField(JavaElement, String, String)
40017=ResolvedBinaryField:toStringInfo(int, StringBuffer, Object, boolean)
40018=ResolvedBinaryField:unresolved()
40019=ResolvedBinaryField:getKey(boolean)
40020=CharOperation:compareTo(char[], char[], int, int)
40021=CharOperation:concat(char, char[], char)
40022=CharOperation:replace(char[], char, char)
40023=CharOperation:equals(char[][], char[][])
40024=CharOperation:splitOn(char, char[])
40025=CharOperation:indexOf(char[], char[], boolean, int, int)
40026=CharOperation:checkSubstringMatch(char[], char[])
40027=CharOperation:subarray(char[][], int, int)
40028=CharOperation:camelCaseMatch(char[], char[], boolean)
40029=CharOperation:trim(char[])
40030=CharOperation:isWhitespace(char)
40031=CharOperation:replace(char[], char[], char[])
40032=CharOperation:replace(char[], char[], char)
40033=CharOperation:indexOf(char[], char[], boolean)
40034=CharOperation:camelCaseMatch(char[], int, int, char[], int, int)
40035=CharOperation:concatWith(char[][], char[], char)
40036=CharOperation:substringMatch(String, String)
40037=CharOperation:splitAndTrimOn(char, char[])
40038=CharOperation:charArrayToStringArray(char[][])
40039=CharOperation:substringMatch(char[], char[])
40040=CharOperation:splitOnWithEnclosures(char, char, char, char[], int, int)
40041=CharOperation:replaceOnCopy(char[], char, char)
40042=CharOperation:concat(char[], char, char[], char, char[])
40043=CharOperation:append(char[], char[])
40044=CharOperation:toLowerCase(char[])
40045=CharOperation:concat(char[], char[], char[])
40046=CharOperation:lastIndexOf(char, char[], int)
40047=CharOperation:deepCopy(char[][])
40048=CharOperation:concat(char[], char[])
40049=CharOperation:compareWith(char[], char[])
40050=CharOperation:charToString(char[])
40051=CharOperation:toUpperCase(char[])
40052=CharOperation:splitOn(char, char[], int, int)
40053=CharOperation:remove(char[], char)
40054=CharOperation:equals(char[], char[], int, int, boolean)
40055=CharOperation:lastIndexOf(char, char[])
40056=CharOperation:compareTo(char[], char[])
40057=CharOperation:prefixEquals(char[], char[], boolean, int)
40058=CharOperation:prefixEquals(char[], char[])
40059=CharOperation:hashCode(char[])
40060=CharOperation:concatWith(char[], char[][], char)
40061=CharOperation:concatWith(char[][], char)
40062=CharOperation:match(char[], int, int, char[], int, int, boolean)
40063=CharOperation:contains(char, char[])
40064=CharOperation:occurencesOf(char, char[])
40065=CharOperation:append(char[], char)
40066=CharOperation:indexOf(char[], char[], boolean, int)
40067=CharOperation:concatWithAll(char[][], char)
40068=CharOperation:concat(char[], char[], char)
40069=CharOperation:equals(char[], char[], int, int)
40070=CharOperation:camelCaseMatch(char[], int, int, char[], int, int, boolean)
40071=CharOperation:toString(char[][])
40072=CharOperation:arrayConcat(char[][], char[][])
40073=CharOperation:indexOf(char, char[], int)
40074=CharOperation:contains(char[], char[])
40075=CharOperation:endsWith(char[], char[])
40076=CharOperation:replace(char[], char[], char, int, int)
40077=CharOperation:lastIndexOf(char, char[], int, int)
40078=CharOperation:parseInt(char[], int, int)
40079=CharOperation:equals(char[], char[], boolean)
40080=CharOperation:equals(char[], char[])
40081=CharOperation:fragmentEquals(char[], char[], int, boolean)
40082=CharOperation:arrayConcat(char[][], char[])
40083=CharOperation:append(char[], int, char[], int, int)
40084=CharOperation:equals(char[][], char[][], boolean)
40085=CharOperation:contains(char, char[][])
40086=CharOperation:prefixEquals(char[], char[], boolean)
40087=CharOperation:indexOf(char, char[], int, int)
40088=CharOperation:lastSegment(char[], char)
40089=CharOperation:concatNonEmpty(char[], char, char[], char, char[])
40090=CharOperation:match(char[], char[], boolean)
40091=CharOperation:concatNonEmpty(char[], char[], char)
40092=CharOperation:camelCaseMatch(char[], char[])
40093=CharOperation:occurencesOf(char, char[], int)
40094=CharOperation:toStrings(char[][])
40095=CharOperation:subarray(char[], int, int)
40096=CharOperation:pathMatch(char[], char[], boolean, char)
40097=CharOperation:indexOf(char, char[])
40098=MethodRef:getNodeType0()
40099=MethodRef:getQualifier()
40100=MethodRef:internalGetChildListProperty(ChildListPropertyDescriptor)
40101=MethodRef:clone0(AST)
40102=MethodRef:resolveBinding()
40103=MethodRef:setQualifier(Name)
40104=MethodRef:MethodRef(AST)
40105=MethodRef:parameters()
40106=MethodRef:internalStructuralPropertiesForType(int)
40107=MethodRef:memSize()
40108=MethodRef:subtreeMatch0(ASTMatcher, Object)
40109=MethodRef:setName(SimpleName)
40110=MethodRef:getName()
40111=MethodRef:propertyDescriptors(int)
40112=MethodRef:treeSize()
40113=MethodRef:accept0(ASTVisitor)
40114=MethodRef:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
40115=CodeSnippetEvaluator:getMapper()
40116=CodeSnippetEvaluator:addEvaluationResultForCompilationProblem(Map<char[], EvaluationResult>, CategorizedProblem, char[])
40117=CodeSnippetEvaluator:getSource()
40118=CodeSnippetEvaluator:CodeSnippetEvaluator(char[], EvaluationContext, INameEnvironment, Map<String, String>, IRequestor, IProblemFactory)
40119=CodeSnippetEvaluator:getCompiler(ICompilerRequestor)
40120=CodeSnippetEvaluator:getWrapperEnvironment()
40121=CodeSnippetEvaluator:getClassName()
40122=X:bar()
40123=X:foo()
40124=X06:runTest()
40125=X06:runBare()
40126=Messages:bind(String, Object)
40127=Messages:bind(String, Object, Object)
40128=Messages:bind(String, Object[])
40129=Messages:Messages()
40130=Messages:bind(String)
40131=VariableDeclarationFragment:clone0(AST)
40132=VariableDeclarationFragment:VariableDeclarationFragment(AST)
40133=VariableDeclarationFragment:internalInitializerProperty()
40134=VariableDeclarationFragment:internalNameProperty()
40135=VariableDeclarationFragment:treeSize()
40136=VariableDeclarationFragment:accept0(ASTVisitor)
40137=VariableDeclarationFragment:internalExtraDimensionsProperty()
40138=VariableDeclarationFragment:propertyDescriptors(int)
40139=VariableDeclarationFragment:memSize()
40140=VariableDeclarationFragment:internalStructuralPropertiesForType(int)
40141=VariableDeclarationFragment:internalGetChildListProperty(ChildListPropertyDescriptor)
40142=VariableDeclarationFragment:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
40143=VariableDeclarationFragment:internalExtraDimensions2Property()
40144=VariableDeclarationFragment:internalGetSetIntProperty(SimplePropertyDescriptor, boolean, int)
40145=VariableDeclarationFragment:getNodeType0()
40146=VariableDeclarationFragment:subtreeMatch0(ASTMatcher, Object)
40147=NormalAnnotation:memberValuePairs()
40148=NormalAnnotation:traverse(ASTVisitor, BlockScope)
40149=NormalAnnotation:printExpression(int, StringBuffer)
40150=NormalAnnotation:NormalAnnotation(TypeReference, int)
40151=NormalAnnotation:traverse(ASTVisitor, ClassScope)
40152=NormalAnnotation:computeElementValuePairs()
40153=X03:foo(int, int)
40154=IProblemRequestor:endReporting()
40155=IProblemRequestor:beginReporting()
40156=IProblemRequestor:isActive()
40157=IProblemRequestor:acceptProblem(IProblem)
40158=JavaConventions:isOverlappingRoots(IPath, IPath)
40159=JavaConventions:validateImportDeclaration(String)
40160=JavaConventions:validateJavaTypeName(String)
40161=JavaConventions:validateTypeVariableName(String)
40162=JavaConventions:validateIdentifier(String)
40163=JavaConventions:validateClasspath(IJavaProject, IClasspathEntry[], IPath)
40164=JavaConventions:validateClasspathEntry(IJavaProject, IClasspathEntry, boolean)
40165=JavaConventions:validatePackageName(String, String, String)
40166=JavaConventions:validateFieldName(String)
40167=JavaConventions:validateCompilationUnitName(String, String, String)
40168=JavaConventions:scannedIdentifier(String, String, String)
40169=JavaConventions:JavaConventions()
40170=JavaConventions:validateImportDeclaration(String, String, String)
40171=JavaConventions:validateClassFileName(String, String, String)
40172=JavaConventions:validatePackageName(String)
40173=JavaConventions:validateIdentifier(String, String, String)
40174=JavaConventions:validateTypeVariableName(String, String, String)
40175=JavaConventions:validateClassFileName(String)
40176=JavaConventions:validateMethodName(String, String, String)
40177=JavaConventions:validateJavaTypeName(String, String, String)
40178=JavaConventions:validateCompilationUnitName(String)
40179=JavaConventions:validateMethodName(String)
40180=JavaConventions:validateFieldName(String, String, String)
40181=ProblemReferenceBinding:ProblemReferenceBinding(char[], ReferenceBinding, int)
40182=ProblemReferenceBinding:problemId()
40183=ProblemReferenceBinding:shortReadableName()
40184=ProblemReferenceBinding:ProblemReferenceBinding(char[][], int)
40185=ProblemReferenceBinding:ProblemReferenceBinding(char[][], ReferenceBinding, int)
40186=ProblemReferenceBinding:ProblemReferenceBinding(char[], int)
40187=X06:foo()
40188=SignatureTests:testGetTypeSignatureKindCharArray06()
40189=SignatureTests:testInvalidCharacter()
40190=SignatureTests:testGetIntersectionTypeBounds2()
40191=SignatureTests:testGetTypeArguments9()
40192=SignatureTests:testGetTypeSignatureKind09()
40193=SignatureTests:testGetTypeParameters5()
40194=SignatureTests:testGetReturnType4()
40195=SignatureTests:testToStringType24()
40196=SignatureTests:testGetTypeSignatureKindCharArray17()
40197=SignatureTests:testGetTypeParameterBounds()
40198=SignatureTests:testToStringMethod04()
40199=SignatureTests:testToStringType13()
40200=SignatureTests:testGetTypeSignatureKindCharArray08()
40201=SignatureTests:assertInvalidTypeSignature(String, boolean, String)
40202=SignatureTests:testGetArrayCount()
40203=SignatureTests:testToStringType02()
40204=SignatureTests:testCreateArraySignature()
40205=SignatureTests:testGetParameterCount19()
40206=SignatureTests:testGetParameterCount08()
40207=SignatureTests:testToStringType26()
40208=SignatureTests:testGetTypeSignatureKindCharArray19()
40209=SignatureTests:testToStringMethod02()
40210=SignatureTests:testGetTypeParameters7()
40211=SignatureTests:testGetQualifier2()
40212=SignatureTests:testToStringType15()
40213=SignatureTests:testGetTypeSignatureKindCharArray02()
40214=SignatureTests:testToStringMethod11()
40215=SignatureTests:testGetTypeSignatureKindCharArray24()
40216=SignatureTests:testToStringType20()
40217=SignatureTests:testGetTypeSignatureKindCharArray13()
40218=SignatureTests:testGetTypeErasure9()
40219=SignatureTests:testGetSimpleNames02()
40220=SignatureTests:testGetTypeSignatureKindCharArray04()
40221=SignatureTests:testGetPackageFragment01()
40222=SignatureTests:testToStringAnonymousType()
40223=SignatureTests:testGetTypeSignatureKind22()
40224=SignatureTests:testGetTypeSignatureKindCharArray26()
40225=SignatureTests:testGetThrownExceptions_Bug155003()
40226=SignatureTests:testGetTypeSignatureKind20()
40227=SignatureTests:testToStringType22()
40228=SignatureTests:testGetReturnType2()
40229=SignatureTests:testCreateIntersectionTypeSignature()
40230=SignatureTests:testGetTypeSignatureKindCharArray15()
40231=SignatureTests:testToStringType11()
40232=SignatureTests:testToStringType08()
40233=SignatureTests:testGetTypeSignatureKindCharArray21()
40234=SignatureTests:testGetTypeSignatureKind12()
40235=SignatureTests:testGetPackageFragment03()
40236=SignatureTests:testGetTypeSignatureKindCharArray10()
40237=SignatureTests:testGetTypeErasure6()
40238=SignatureTests:testGetTypeSignatureKind01()
40239=SignatureTests:testGetSimpleName06()
40240=SignatureTests:testGetParameterCount13()
40241=SignatureTests:testGetTypeSignatureKind23()
40242=SignatureTests:testGetParameterCount02()
40243=SignatureTests:testGetTypeErasure11()
40244=SignatureTests:testGetTypeSignatureKindCharArray23()
40245=SignatureTests:testGetTypeSignatureKind14()
40246=SignatureTests:testGetThrownExceptionTypes()
40247=SignatureTests:testGetTypeErasure8()
40248=SignatureTests:testGetTypeSignatureKindCharArray12()
40249=SignatureTests:testGetTypeSignatureKind03()
40250=SignatureTests:testGetSimpleName08()
40251=SignatureTests:testGetParameterCount11()
40252=SignatureTests:testGetTypeFragment02()
40253=SignatureTests:testGetTypeSignatureKind25()
40254=SignatureTests:testToStringType30()
40255=SignatureTests:testGetTypeArguments2()
40256=SignatureTests:testGetReturnType()
40257=SignatureTests:testGetTypeSignatureKind16()
40258=SignatureTests:testToStringType04()
40259=SignatureTests:testGetTypeErasure2()
40260=SignatureTests:testToStringMethod09()
40261=SignatureTests:testGetParameterCount17()
40262=SignatureTests:testGetSimpleName02()
40263=SignatureTests:testGetTypeSignatureKind05()
40264=SignatureTests:testToStringType28()
40265=SignatureTests:testCreateMethodSignature()
40266=SignatureTests:testGetParameterCount06()
40267=SignatureTests:testGetTypeParameters1()
40268=SignatureTests:testToStringType17()
40269=SignatureTests:testCreateTypeSignature()
40270=SignatureTests:testGetTypeArguments10()
40271=SignatureTests:testGetTypeArguments4()
40272=SignatureTests:testToStringType06()
40273=SignatureTests:testGetTypeSignatureKind18()
40274=SignatureTests:testToStringMethod07()
40275=SignatureTests:testGetParameterTypes()
40276=SignatureTests:testGetTypeErasure4()
40277=SignatureTests:testGetTypeSignatureKind07()
40278=SignatureTests:testGetSimpleName04()
40279=SignatureTests:testGetSignaturesSimpleName02()
40280=SignatureTests:testGetElementType2()
40281=SignatureTests:testGetTypeParameters3()
40282=SignatureTests:testGetParameterCount15()
40283=SignatureTests:testToStringType19()
40284=SignatureTests:testGetParameterCount04()
40285=SignatureTests:testGetTypeArguments6()
40286=SignatureTests:testGetParameterCount09()
40287=SignatureTests:testGetTypeParameters4()
40288=SignatureTests:testToStringType23()
40289=SignatureTests:testCreateInvalidTypeSignature()
40290=SignatureTests:testGetTypeSignatureKindCharArray18()
40291=SignatureTests:testToStringMethod05()
40292=SignatureTests:testGetQualifier3()
40293=SignatureTests:testToStringType12()
40294=SignatureTests:testGetTypeSignatureKindCharArray05()
40295=SignatureTests:testToStringType01()
40296=SignatureTests:testGetTypeSignatureKind19()
40297=SignatureTests:testGetTypeArguments8()
40298=SignatureTests:testToQualifiedName()
40299=SignatureTests:testGetTypeSignatureKind08()
40300=SignatureTests:testGetParameterCount07()
40301=SignatureTests:testToStringType25()
40302=SignatureTests:testToStringMethod03()
40303=SignatureTests:testGetTypeParameters6()
40304=SignatureTests:testGetQualifier1()
40305=SignatureTests:testToStringType14()
40306=SignatureTests:testGetTypeSignatureKindCharArray07()
40307=SignatureTests:testSourceMapperSigConversion01()
40308=SignatureTests:testToStringType03()
40309=SignatureTests:testGetTypeSignatureKindCharArray25()
40310=SignatureTests:testToStringMethod12()
40311=SignatureTests:testGetTypeSignatureKindCharArray14()
40312=SignatureTests:testToStringMethod01()
40313=SignatureTests:testGetSimpleNames03()
40314=SignatureTests:testGetTypeSignatureKindCharArray01()
40315=SignatureTests:testGetTypeVariable()
40316=SignatureTests:testToStringInnerType2()
40317=SignatureTests:testGetTypeSignatureKindCharArray27()
40318=SignatureTests:testToStringMethod10()
40319=SignatureTests:testGetTypeSignatureKind21()
40320=SignatureTests:testToStringType21()
40321=SignatureTests:testGetReturnType3()
40322=SignatureTests:suite()
40323=SignatureTests:testGetTypeSignatureKindCharArray16()
40324=SignatureTests:testGetTypeSignatureKind10()
40325=SignatureTests:testGetSimpleNames01()
40326=SignatureTests:testToStringType10()
40327=SignatureTests:testGetTypeSignatureKindCharArray03()
40328=SignatureTests:testGetElementType()
40329=SignatureTests:testGetParameterCount12()
40330=SignatureTests:testGetTypeFragment03()
40331=SignatureTests:testGetParameterCount01()
40332=SignatureTests:testGetTypeSignatureKind24()
40333=SignatureTests:testGetTypeArguments1()
40334=SignatureTests:testToStringType09()
40335=SignatureTests:testGetTypeSignatureKindCharArray20()
40336=SignatureTests:testGetTypeSignatureKind11()
40337=SignatureTests:testGetPackageFragment02()
40338=SignatureTests:testGetTypeErasure5()
40339=SignatureTests:testGetSimpleName05()
40340=SignatureTests:testGetParameterCount10()
40341=SignatureTests:testGetTypeFragment01()
40342=SignatureTests:testGetTypeArguments3()
40343=SignatureTests:testGetTypeErasure10()
40344=SignatureTests:testGetTypeSignatureKindCharArray22()
40345=SignatureTests:testGetTypeSignatureKind13()
40346=SignatureTests:testGetPackageFragment04()
40347=SignatureTests:testCreateIntersectionTypeSignature2()
40348=SignatureTests:testGetTypeSignatureKindCharArray11()
40349=SignatureTests:testGetTypeErasure7()
40350=SignatureTests:testGetTypeSignatureKind02()
40351=SignatureTests:testGetSimpleName07()
40352=SignatureTests:testGetSimpleNames04()
40353=SignatureTests:testGetSignaturesSimpleName01()
40354=SignatureTests:testGetParameterCount16()
40355=SignatureTests:testToStringType27()
40356=SignatureTests:testGetParameterCount05()
40357=SignatureTests:testGetTypeArguments5()
40358=SignatureTests:testToStringType16()
40359=SignatureTests:testGetTypeSignatureKindCharArray09()
40360=SignatureTests:testGetTypeSignatureKind15()
40361=SignatureTests:testToStringType05()
40362=SignatureTests:testToStringMethod08()
40363=SignatureTests:testGetTypeErasure1()
40364=SignatureTests:testGetParameterCount18()
40365=SignatureTests:testGetSimpleName01()
40366=SignatureTests:testGetTypeSignatureKind04()
40367=SignatureTests:testToStringType29()
40368=SignatureTests:testGetIntersectionTypeBounds()
40369=SignatureTests:testGetTypeParameters2()
40370=SignatureTests:testGetParameterCount14()
40371=SignatureTests:testToStringInnerType()
40372=SignatureTests:testToStringType18()
40373=SignatureTests:testGetTypeArguments11()
40374=SignatureTests:SignatureTests(String)
40375=SignatureTests:testGetParameterCount03()
40376=SignatureTests:testGetTypeArguments7()
40377=SignatureTests:testToStringType07()
40378=SignatureTests:testGetTypeSignatureKind17()
40379=SignatureTests:testGetTypeErasure3()
40380=SignatureTests:testToStringMethod06()
40381=SignatureTests:testGetSimpleName03()
40382=SignatureTests:testGetTypeSignatureKind06()
40383=DoubleLiteral:literalType(BlockScope)
40384=DoubleLiteral:traverse(ASTVisitor, BlockScope)
40385=DoubleLiteral:computeConstant()
40386=DoubleLiteral:DoubleLiteral(char[], int, int)
40387=DoubleLiteral:generateCode(BlockScope, CodeStream, boolean)
40388=CodeSnippetParsingUtil:parseClassBodyDeclarations(char[], int, int, Map<String, String>, boolean, boolean)
40389=CodeSnippetParsingUtil:getRecordedParsingInformation(CompilationResult, int[][])
40390=CodeSnippetParsingUtil:parseCompilationUnit(char[], Map<String, String>, boolean)
40391=CodeSnippetParsingUtil:CodeSnippetParsingUtil()
40392=CodeSnippetParsingUtil:parseStatements(char[], Map<String, String>, boolean, boolean)
40393=CodeSnippetParsingUtil:parseExpression(char[], Map<String, String>, boolean)
40394=CodeSnippetParsingUtil:parseExpression(char[], int, int, Map<String, String>, boolean)
40395=CodeSnippetParsingUtil:parseClassBodyDeclarations(char[], Map<String, String>, boolean)
40396=CodeSnippetParsingUtil:parseStatements(char[], int, int, Map<String, String>, boolean, boolean)
40397=CodeSnippetParsingUtil:CodeSnippetParsingUtil(boolean)
40398=CompletionOnMessageSendName:resolveType(BlockScope)
40399=CompletionOnMessageSendName:CompletionOnMessageSendName(char[], int, int)
40400=CompletionOnMessageSendName:printExpression(int, StringBuffer)
40401=D:goo()
40402=CompilerOptions:warningTokenFromIrritant(int)
40403=CompilerOptions:usesNullTypeAnnotations()
40404=CompilerOptions:nameListToString(String[])
40405=CompilerOptions:getSeverityString(int)
40406=CompilerOptions:getVisibilityString(int)
40407=CompilerOptions:resetDefaults()
40408=CompilerOptions:CompilerOptions()
40409=CompilerOptions:versionToJdkLevel(String)
40410=CompilerOptions:stringToNameList(String)
40411=CompilerOptions:isAnyEnabled(IrritantSet)
40412=CompilerOptions:getMap()
40413=CompilerOptions:getSeverity(int)
40414=CompilerOptions:CompilerOptions(Map, boolean)
40415=CompilerOptions:versionFromJdkLevel(long)
40416=CompilerOptions:warningTokenToIrritants(String)
40417=CompilerOptions:toString()
40418=CompilerOptions:CompilerOptions(Map<String, String>)
40419=CompilerOptions:warningOptionNames()
40420=CompilerOptions:set(Map<String, String>)
40421=CompilerOptions:updateSeverity(int, Object)
40422=CompilerOptions:optionKeyFromIrritant(int)
40423=X03b:foo()
40424=X01b:foo()
40425=A:foo()
40426=ConstantPool:literalIndex(FieldBinding)
40427=ConstantPool:literalIndexForJavaLangAssertionErrorConstructor(int)
40428=ConstantPool:literalIndexForJavaLangObject()
40429=ConstantPool:literalIndexForJavaLangStringBuilderAppend(int)
40430=ConstantPool:literalIndexForJavaLangByteTYPE()
40431=ConstantPool:literalIndexForJavaLangShortTYPE()
40432=ConstantPool:literalIndexForJavaLangSystemExitInt()
40433=ConstantPool:literalIndexForJavaLangDouble()
40434=ConstantPool:literalIndexForJavaLangStringBuilderConstructor()
40435=ConstantPool:literalIndexForJavaLangNoClassDefFoundError()
40436=ConstantPool:literalIndex(MethodBinding)
40437=ConstantPool:literalIndexForJavaLangInteger()
40438=ConstantPool:literalIndexForJavaLangStringBuffer()
40439=ConstantPool:indexOfWellKnownMethods(MethodBinding)
40440=ConstantPool:literalIndex(char[], byte[])
40441=ConstantPool:literalIndexForJavaLangReflectConstructor()
40442=ConstantPool:indexOfWellKnownFieldNameAndType(FieldBinding)
40443=ConstantPool:literalIndexForFields(int, int, FieldBinding)
40444=ConstantPool:resetForClinit(int, int)
40445=ConstantPool:literalIndexForJavaLangShort()
40446=ConstantPool:literalIndexForJavaUtilIteratorHasNext()
40447=ConstantPool:literalIndexForJavaLangNoClassDefFoundErrorStringConstructor()
40448=ConstantPool:literalIndexForJavaLangFloatTYPE()
40449=ConstantPool:writeU1(int)
40450=ConstantPool:literalIndexForJavaLangThrowable()
40451=ConstantPool:literalIndexForJavaLangVoid()
40452=ConstantPool:literalIndex(char[])
40453=ConstantPool:literalIndexForJavaLangStringBuilderDefaultConstructor()
40454=ConstantPool:literalIndexForJavaLangString()
40455=ConstantPool:literalIndexForJavaLangThrowableGetMessage()
40456=ConstantPool:literalIndexForLdc(char[])
40457=ConstantPool:literalIndexForJavaLangReflectConstructorNewInstance()
40458=ConstantPool:dumpBytes()
40459=ConstantPool:literalIndex(byte[], char[])
40460=ConstantPool:literalIndexForJavaLangStringBufferToString()
40461=ConstantPool:literalIndexForJavaLangCharacter()
40462=ConstantPool:literalIndexForJavaLangClass()
40463=ConstantPool:literalIndexForJavaLangCharacterTYPE()
40464=ConstantPool:literalIndexForJavaLangStringBufferConstructor()
40465=ConstantPool:literalIndexForJavaLangStringValueOf(int)
40466=ConstantPool:literalIndexForJavaLangBoolean()
40467=ConstantPool:literalIndexForJavaLangError()
40468=ConstantPool:literalIndex(long)
40469=ConstantPool:literalIndexForJavaLangLong()
40470=ConstantPool:literalIndex(TypeBinding)
40471=ConstantPool:ConstantPool(ClassFile)
40472=ConstantPool:literalIndexForJavaLangByte()
40473=ConstantPool:indexOfWellKnownTypes(TypeBinding)
40474=ConstantPool:literalIndexForJavaLangStringIntern()
40475=ConstantPool:literalIndexForJavaLangAssertionErrorDefaultConstructor()
40476=ConstantPool:resizePoolContents(int)
40477=ConstantPool:literalIndexForJavaLangClassGetComponentType()
40478=ConstantPool:literalIndex(int)
40479=ConstantPool:literalIndex(double)
40480=ConstantPool:literalIndexForJavaLangLongTYPE()
40481=ConstantPool:literalIndexForJavaLangException()
40482=ConstantPool:literalIndexForJavaLangDoubleTYPE()
40483=ConstantPool:literalIndexForJavaUtilIteratorNext()
40484=ConstantPool:literalIndex(float)
40485=ConstantPool:literalIndexForJavaLangErrorConstructor()
40486=ConstantPool:literalIndexForJavaLangStringBufferDefaultConstructor()
40487=ConstantPool:literalIndexForJavaLangClassDesiredAssertionStatus()
40488=ConstantPool:literalIndexForJavaLangStringBufferAppend(int)
40489=ConstantPool:literalIndexForJavaLangClassForName()
40490=ConstantPool:literalIndexForMethods(int, int, MethodBinding)
40491=ConstantPool:writeU2(int)
40492=ConstantPool:literalIndexForJavaUtilIterator()
40493=ConstantPool:literalIndex(String)
40494=ConstantPool:literalIndexForJavaLangSystem()
40495=ConstantPool:literalIndexForJavaLangObjectGetClass()
40496=ConstantPool:literalIndexForJavaLangIntegerTYPE()
40497=ConstantPool:indexOfWellKnownMethodNameAndType(MethodBinding)
40498=ConstantPool:indexOfWellKnownFields(FieldBinding)
40499=ConstantPool:literalIndexForJavaLangFloat()
40500=ConstantPool:literalIndexForJavaLangClassNotFoundException()
40501=ConstantPool:literalIndexForJavaLangStringBuilderToString()
40502=ConstantPool:literalIndexForJavaLangBooleanTYPE()
40503=ConstantPool:literalIndexForJavaLangVoidTYPE()
40504=ConstantPool:literalIndexForJavaLangAssertionError()
40505=ConstantPool:literalIndexForJavaLangStringBuilder()
40506=IDEInterface:IDEInterface(int)
40507=IDEInterface:connect()
40508=IDEInterface:disconnect()
40509=IDEInterface:getNextClasses()
40510=IDEInterface:getRunFlag()
40511=IDEInterface:sendResult(Class, Object)
40512=IDEInterface:isConnected()
40513=JdtApt:execute()
40514=JdtApt:setWorkspace(File)
40515=JdtApt:setEclipseHome(File)
40516=ShouldNotImplement:ShouldNotImplement(String)
40517=RunAllTests:suite()
40518=RunAllTests:getAllTestClasses()
40519=RunAllTests:RunAllTests(String)
40520=firstClass:myMethod()
40521=A:method()
40522=AptPlugin:optionsChanged(DebugOptions)
40523=AptPlugin:getPlugin()
40524=AptPlugin:createWarningStatus(Throwable, String)
40525=AptPlugin:createInfoStatus(Throwable, String)
40526=AptPlugin:log(IStatus)
40527=AptPlugin:deleteAptProject(IJavaProject)
40528=AptPlugin:createStatus(Throwable, String)
40529=AptPlugin:start(BundleContext)
40530=AptPlugin:getAptProject(IJavaProject)
40531=AptPlugin:trace(String)
40532=AptPlugin:logWarning(Throwable, String)
40533=AptPlugin:canRunJava6Processors()
40534=AptPlugin:log(Throwable, String)
40535=AptPlugin:getAptProject(IJavaProject, boolean)
40536=AptPlugin:trace(String, Throwable)
40537=AptPlugin:getJava6ProcessorClass()
40538=AptPlugin:stop(BundleContext)
40539=MoveResourceElementsOperation:getMainTaskName()
40540=MoveResourceElementsOperation:MoveResourceElementsOperation(IJavaElement[], IJavaElement[], boolean)
40541=MoveResourceElementsOperation:isMove()
40542=X:f2()
40543=X:ctor()
40544=X:f1()
40545=ResourceLeakTests:testBug397204()
40546=ResourceLeakTests:test056m()
40547=ResourceLeakTests:testBug376053()
40548=ResourceLeakTests:test061b()
40549=ResourceLeakTests:test066()
40550=ResourceLeakTests:testBug411098_test5()
40551=ResourceLeakTests:test061s()
40552=ResourceLeakTests:testBug395977()
40553=ResourceLeakTests:testBug440282()
40554=ResourceLeakTests:_testBug386534()
40555=ResourceLeakTests:testBug381445_2()
40556=ResourceLeakTests:test056o()
40557=ResourceLeakTests:test061d()
40558=ResourceLeakTests:test068()
40559=ResourceLeakTests:testBug411098_test3()
40560=ResourceLeakTests:test063b()
40561=ResourceLeakTests:testStream4()
40562=ResourceLeakTests:testBug433510()
40563=ResourceLeakTests:test061f4()
40564=ResourceLeakTests:test056throw4()
40565=ResourceLeakTests:test056i()
40566=ResourceLeakTests:runTestsExpectingErrorsOnlyIn17(String[], String, Map)
40567=ResourceLeakTests:test062a()
40568=ResourceLeakTests:test056x()
40569=ResourceLeakTests:testBug411098_test1()
40570=ResourceLeakTests:test061o()
40571=ResourceLeakTests:test063d()
40572=ResourceLeakTests:testStream2()
40573=ResourceLeakTests:_test071b()
40574=ResourceLeakTests:test061f2()
40575=ResourceLeakTests:test056throw2()
40576=ResourceLeakTests:test056k()
40577=ResourceLeakTests:test062c()
40578=ResourceLeakTests:test056z()
40579=ResourceLeakTests:testBug395977_2()
40580=ResourceLeakTests:test056u()
40581=ResourceLeakTests:testBug415790_ex4()
40582=ResourceLeakTests:testBug395977_1()
40583=ResourceLeakTests:test056g2()
40584=ResourceLeakTests:testBug397204_comment4()
40585=ResourceLeakTests:test056d_suppress()
40586=ResourceLeakTests:test061j()
40587=ResourceLeakTests:test056d()
40588=ResourceLeakTests:test066b()
40589=ResourceLeakTests:test056w()
40590=ResourceLeakTests:testBug415790_ex2()
40591=ResourceLeakTests:test070()
40592=ResourceLeakTests:test061n()
40593=ResourceLeakTests:testBug371614_comment8()
40594=ResourceLeakTests:_test061q()
40595=ResourceLeakTests:test061l()
40596=ResourceLeakTests:test056f()
40597=ResourceLeakTests:test072()
40598=ResourceLeakTests:testBug390064()
40599=ResourceLeakTests:test056q()
40600=ResourceLeakTests:testBug381445_3()
40601=ResourceLeakTests:test061f()
40602=ResourceLeakTests:testBug444964()
40603=ResourceLeakTests:test074()
40604=ResourceLeakTests:test056s()
40605=ResourceLeakTests:test061h()
40606=ResourceLeakTests:test061l3()
40607=ResourceLeakTests:test056b()
40608=ResourceLeakTests:testBug368709a()
40609=ResourceLeakTests:test056i_ignore()
40610=ResourceLeakTests:test061c()
40611=ResourceLeakTests:testBug411098_test6()
40612=ResourceLeakTests:test056zzz()
40613=ResourceLeakTests:test063e()
40614=ResourceLeakTests:test062d()
40615=ResourceLeakTests:test056l()
40616=ResourceLeakTests:test061e()
40617=ResourceLeakTests:testBug411098_test4()
40618=ResourceLeakTests:test056()
40619=ResourceLeakTests:ResourceLeakTests(String)
40620=ResourceLeakTests:testBug381445_1()
40621=ResourceLeakTests:testBug371614_comment0()
40622=ResourceLeakTests:suite()
40623=ResourceLeakTests:test056zz()
40624=ResourceLeakTests:test056n()
40625=ResourceLeakTests:test056y()
40626=ResourceLeakTests:testBug385415()
40627=ResourceLeakTests:test061p()
40628=ResourceLeakTests:test069()
40629=ResourceLeakTests:testBug411098_test2()
40630=ResourceLeakTests:test063a()
40631=ResourceLeakTests:testStream3()
40632=ResourceLeakTests:test056i2()
40633=ResourceLeakTests:testBug381445_1b()
40634=ResourceLeakTests:testBug371614_comment2()
40635=ResourceLeakTests:test061f3()
40636=ResourceLeakTests:test056throw3()
40637=ResourceLeakTests:test056h()
40638=ResourceLeakTests:testBug394768_1()
40639=ResourceLeakTests:test061a()
40640=ResourceLeakTests:test061r()
40641=ResourceLeakTests:testBug388996()
40642=ResourceLeakTests:test063c()
40643=ResourceLeakTests:testStream1()
40644=ResourceLeakTests:test056jconditional()
40645=ResourceLeakTests:testBug361073c7()
40646=ResourceLeakTests:test056throw1()
40647=ResourceLeakTests:_testBug462371_shouldWarn()
40648=ResourceLeakTests:test056j()
40649=ResourceLeakTests:test062b()
40650=ResourceLeakTests:testBug368709b()
40651=ResourceLeakTests:_test065()
40652=ResourceLeakTests:test061k()
40653=ResourceLeakTests:test056e()
40654=ResourceLeakTests:test056t()
40655=ResourceLeakTests:testBug386534()
40656=ResourceLeakTests:testBug394768()
40657=ResourceLeakTests:test061m()
40658=ResourceLeakTests:test056g()
40659=ResourceLeakTests:test056v()
40660=ResourceLeakTests:test071()
40661=ResourceLeakTests:testBug396575()
40662=ResourceLeakTests:test056throw5()
40663=ResourceLeakTests:test061g()
40664=ResourceLeakTests:test056a()
40665=ResourceLeakTests:testBug421035()
40666=ResourceLeakTests:test073()
40667=ResourceLeakTests:testBug411098_comment19()
40668=ResourceLeakTests:test056p()
40669=ResourceLeakTests:_test067()
40670=ResourceLeakTests:test061i()
40671=ResourceLeakTests:test061l2()
40672=ResourceLeakTests:test067b()
40673=ResourceLeakTests:test056c()
40674=ResourceLeakTests:test075()
40675=ResourceLeakTests:testBug462371_orig()
40676=ResourceLeakTests:testBug411098_test7()
40677=ResourceLeakTests:test064()
40678=ResourceLeakTests:test056r()
40679=Multiple:generic(U1, U2, U3)
40680=Multiple:returnParamType()
40681=Multiple:paramTypesArgs(Single<T1>, Single<T2>, Single<T3>, Multiple<T1, T2, T3>)
40682=Multiple:complete(U1, U2, U3, Multiple<T1, T2, T3>)
40683=Multiple:standard(T1, T2, T3)
40684=AllTests:suite()
40685=CompletionOnArgumentName:bind(MethodScope, TypeBinding, boolean)
40686=CompletionOnArgumentName:CompletionOnArgumentName(char[], long, TypeReference, int)
40687=CompletionOnArgumentName:resolve(BlockScope)
40688=CompletionOnArgumentName:print(int, StringBuffer)
40689=ASTBasedConstructorDeclarationImpl:kind()
40690=ASTBasedConstructorDeclarationImpl:accept(DeclarationVisitor)
40691=ASTBasedConstructorDeclarationImpl:ASTBasedConstructorDeclarationImpl(org.eclipse.jdt.core.dom.BodyDeclaration, IFile, BaseProcessorEnv)
40692=Test:foo(int)
40693=Test:f(B)
40694=Test:f()
40695=MemoryIndex:addDocumentNames(String, SimpleSet)
40696=MemoryIndex:hasChanged()
40697=MemoryIndex:MemoryIndex()
40698=MemoryIndex:remove(String)
40699=MemoryIndex:addQueryResults(char[][], char[], int, HashtableOfObject)
40700=MemoryIndex:addIndexEntry(char[], char[], String)
40701=MemoryIndex:shouldMerge()
40702=NegativeVariableTest:testInitializerProblem()
40703=NegativeVariableTest:testClass()
40704=NegativeVariableTest:_testInvalidName()
40705=NegativeVariableTest:testUnknownType()
40706=NegativeVariableTest:suite()
40707=NegativeVariableTest:NegativeVariableTest(String)
40708=CompletionOnMethodName:CompletionOnMethodName(CompilationResult)
40709=CompletionOnMethodName:resolve(ClassScope)
40710=CompletionOnMethodName:print(int, StringBuffer)
40711=BinaryTypeConverter:buildTypeDeclaration(IType, CompilationUnitDeclaration)
40712=BinaryTypeConverter:convert(IField, IType)
40713=BinaryTypeConverter:createTypeReference(String)
40714=BinaryTypeConverter:convert(IMethod, IType)
40715=BinaryTypeConverter:stringArrayToCharArray(String[])
40716=BinaryTypeConverter:BinaryTypeConverter(ProblemReporter, CompilationResult, HashSetOfCharArrayArray)
40717=BinaryTypeConverter:convert(IType, IType, TypeDeclaration)
40718=BinaryTypeConverter:buildImports(ClassFileReader)
40719=ModelTestsUtil:getExternalJCLSourcePath(String)
40720=ModelTestsUtil:getWorkspace()
40721=ModelTestsUtil:getPluginDirectoryPath(String)
40722=ModelTestsUtil:collectAllFiles(File, ArrayList, FileFilter)
40723=ModelTestsUtil:getAllFiles(File, FileFilter)
40724=ModelTestsUtil:getSourceWorkspacePath(String)
40725=ModelTestsUtil:getCompilationUnits(IPackageFragmentRoot)
40726=ModelTestsUtil:getExternalJCLRootSourcePath()
40727=ModelTestsUtil:getExternalJCLSourcePathString(String)
40728=ModelTestsUtil:getPackageFragment(IJavaProject, String, String)
40729=ModelTestsUtil:getExternalJCLSourcePath()
40730=ModelTestsUtil:getExternalJCLPathString(String)
40731=ModelTestsUtil:getWorkspaceRoot()
40732=ModelTestsUtil:getExternalJarFile(IJavaProject, String)
40733=ModelTestsUtil:getCompilationUnit(IJavaProject, String, String)
40734=ModelTestsUtil:getExternalJCLSourcePathString()
40735=ModelTestsUtil:convertToIndependantLineDelimiter(File)
40736=ModelTestsUtil:setUpJCLClasspathVariables(String)
40737=ModelTestsUtil:removeWhiteSpace(String)
40738=ModelTestsUtil:setupExternalJCL(String)
40739=ModelTestsUtil:trimLinesLeadingWhitespaces(String)
40740=ModelTestsUtil:copy(File, File)
40741=ModelTestsUtil:getExternalJCLPathString()
40742=ModelTestsUtil:getPluginDirectoryPath()
40743=ModelTestsUtil:getExternalJCLPath()
40744=ModelTestsUtil:getExternalJCLPath(String)
40745=ModelTestsUtil:copyDirectory(File, File)
40746=ModelTestsUtil:getPackageFragmentRoot(IJavaProject, String)
40747=ModelTestsUtil:getCompilationUnits(IJavaProject)
40748=ModelTestsUtil:getExternalPath()
40749=ModelTestsUtil:read(java.io.File)
40750=ModelTestsUtil:getClassFile(IJavaProject, String, String, String)
40751=BindingKey:createWildcardTypeBindingKey(String, char, String, int)
40752=BindingKey:toSignature()
40753=BindingKey:isParameterizedMethod()
40754=BindingKey:createTypeBindingKey(String)
40755=BindingKey:BindingKey(String)
40756=BindingKey:createWilcardTypeBindingKey(String, char)
40757=BindingKey:isRawType()
40758=BindingKey:createParameterizedTypeBindingKey(String, String[])
40759=BindingKey:toString()
40760=BindingKey:createArrayTypeBindingKey(String, int)
40761=BindingKey:getThrownExceptions()
40762=BindingKey:isParameterizedType()
40763=BindingKey:getDeclaringType()
40764=BindingKey:createTypeVariableBindingKey(String, String)
40765=BindingKey:getTypeArguments()
40766=T:bar()
40767=Test:foo()
40768=Test:bar()
40769=Test:main(String[])
40770=FieldAccess:getName()
40771=FieldAccess:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
40772=FieldAccess:getNodeType0()
40773=FieldAccess:getExpression()
40774=FieldAccess:FieldAccess(AST)
40775=FieldAccess:resolveFieldBinding()
40776=FieldAccess:setName(SimpleName)
40777=FieldAccess:accept0(ASTVisitor)
40778=FieldAccess:treeSize()
40779=FieldAccess:setExpression(Expression)
40780=FieldAccess:clone0(AST)
40781=FieldAccess:memSize()
40782=FieldAccess:subtreeMatch0(ASTMatcher, Object)
40783=FieldAccess:propertyDescriptors(int)
40784=FieldAccess:internalStructuralPropertiesForType(int)
40785=F:bar()
40786=AbstractVariableDeclaration:getKind()
40787=AbstractVariableDeclaration:isSuperAccess()
40788=AbstractVariableDeclaration:resolve(BlockScope)
40789=AbstractVariableDeclaration:genericTypeArguments()
40790=AbstractVariableDeclaration:freshInferenceContext(Scope)
40791=AbstractVariableDeclaration:analyseCode(BlockScope, FlowContext, FlowInfo)
40792=AbstractVariableDeclaration:setDepth(int)
40793=AbstractVariableDeclaration:isTypeAccess()
40794=AbstractVariableDeclaration:printStatement(int, StringBuffer)
40795=AbstractVariableDeclaration:printAsExpression(int, StringBuffer)
40796=AbstractVariableDeclaration:setFieldIndex(int)
40797=AbstractVariableDeclaration:setActualReceiverType(ReferenceBinding)
40798=ClassFileReaderTest_1_5:test010()
40799=ClassFileReaderTest_1_5:test016()
40800=ClassFileReaderTest_1_5:test005()
40801=ClassFileReaderTest_1_5:test007()
40802=ClassFileReaderTest_1_5:test012()
40803=ClassFileReaderTest_1_5:checkClassFileUsingInputStream(String, String, String, String, int)
40804=ClassFileReaderTest_1_5:test001()
40805=ClassFileReaderTest_1_5:test014()
40806=ClassFileReaderTest_1_5:test003()
40807=ClassFileReaderTest_1_5:ClassFileReaderTest_1_5(String)
40808=ClassFileReaderTest_1_5:test011()
40809=ClassFileReaderTest_1_5:testClass()
40810=ClassFileReaderTest_1_5:test009()
40811=ClassFileReaderTest_1_5:test006()
40812=ClassFileReaderTest_1_5:test008()
40813=ClassFileReaderTest_1_5:suite()
40814=ClassFileReaderTest_1_5:test013()
40815=ClassFileReaderTest_1_5:test002()
40816=ClassFileReaderTest_1_5:test015()
40817=ClassFileReaderTest_1_5:test004()
40818=X24:foo()
40819=FormatterJavadocDontIndentTagsTests:setUp()
40820=FormatterJavadocDontIndentTagsTests:suite()
40821=FormatterJavadocDontIndentTagsTests:FormatterJavadocDontIndentTagsTests(String)
40822=FormatterJavadocDontIndentTagsTests:codeFormatter()
40823=FormatterJavadocDontIndentTagsTests:getOutputFolder()
40824=IdeInputFileObject:delete()
40825=IdeInputFileObject:getLastModified()
40826=IdeInputFileObject:openOutputStream()
40827=IdeInputFileObject:openWriter()
40828=IdeInputFileObject:toUri()
40829=IdeInputFileObject:openReader(boolean)
40830=IdeInputFileObject:openInputStream()
40831=IdeInputFileObject:getName()
40832=IdeInputFileObject:getCharContent(boolean)
40833=IdeInputFileObject:IdeInputFileObject(IFile)
40834=X02:test()
40835=A:foo()
40836=SingleMemberAnnotation:SingleMemberAnnotation(AST)
40837=SingleMemberAnnotation:clone0(AST)
40838=SingleMemberAnnotation:setValue(Expression)
40839=SingleMemberAnnotation:getNodeType0()
40840=SingleMemberAnnotation:treeSize()
40841=SingleMemberAnnotation:internalTypeNameProperty()
40842=SingleMemberAnnotation:memSize()
40843=SingleMemberAnnotation:propertyDescriptors(int)
40844=SingleMemberAnnotation:accept0(ASTVisitor)
40845=SingleMemberAnnotation:subtreeMatch0(ASTMatcher, Object)
40846=SingleMemberAnnotation:getValue()
40847=SingleMemberAnnotation:internalStructuralPropertiesForType(int)
40848=SingleMemberAnnotation:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
40849=X:X(int)
40850=X:bar()
40851=X:Inner:foo()
40852=X:X()
40853=X:foo(int, String, X)
40854=CompletionParser:checkRecoveredType()
40855=CompletionParser:consumeWildcard3()
40856=CompletionParser:consumeInterfaceType()
40857=CompletionParser:parse(ICompilationUnit, CompilationResult, int)
40858=CompletionParser:consumeArrayCreationExpressionWithInitializer()
40859=CompletionParser:consumeEnhancedForStatementHeaderInit(boolean)
40860=CompletionParser:consumePrimaryNoNewArrayName()
40861=CompletionParser:consumeWildcardBounds3Extends()
40862=CompletionParser:CompletionParser(ProblemReporter, boolean, IProgressMonitor)
40863=CompletionParser:isInsideReturn()
40864=CompletionParser:updateRecoveryState()
40865=CompletionParser:consumeStaticInitializer()
40866=CompletionParser:isInImportStatement()
40867=CompletionParser:consumeInsideCastExpressionWithQualifiedGenerics()
40868=CompletionParser:consumeWildcard1()
40869=CompletionParser:consumeInvocationExpression()
40870=CompletionParser:createFieldDeclaration(char[], int, int)
40871=CompletionParser:createQualifiedAssistTypeReference(char[][], char[], long[])
40872=CompletionParser:consumeMethodInvocationPrimary()
40873=CompletionParser:consumeMethodHeader()
40874=CompletionParser:consumeTypeImportOnDemandDeclarationName()
40875=CompletionParser:consumeInstanceOfExpression()
40876=CompletionParser:checkInstanceofKeyword()
40877=CompletionParser:consumeMethodInvocationSuperWithTypeArguments()
40878=CompletionParser:consumeCompilationUnit()
40879=CompletionParser:consumePushCombineModifiers()
40880=CompletionParser:consumeTypeParameter1WithExtendsAndBounds()
40881=CompletionParser:pushCompletionOnMemberAccessOnExpressionStack(boolean)
40882=CompletionParser:consumeAnnotationTypeDeclarationHeaderName()
40883=CompletionParser:consumeEqualityExpressionWithName(int)
40884=CompletionParser:consumeNormalAnnotation(boolean)
40885=CompletionParser:consumeEnhancedForStatement()
40886=CompletionParser:consumeNestedMethod()
40887=CompletionParser:resumeOnSyntaxError()
40888=CompletionParser:consumeWildcardBounds1Extends()
40889=CompletionParser:consumeConstructorHeaderName()
40890=CompletionParser:consumeTypeArgumentReferenceType1()
40891=CompletionParser:CompletionParser(ProblemReporter, boolean)
40892=CompletionParser:consumeBlockStatement()
40893=CompletionParser:createJavadocParser()
40894=CompletionParser:consumeMethodInvocationNameWithTypeArguments()
40895=CompletionParser:dietParse(ICompilationUnit, CompilationResult, int)
40896=CompletionParser:consumeBinaryExpressionWithName(int)
40897=CompletionParser:isIndirectlyInsideBlock()
40898=CompletionParser:newReferenceExpression()
40899=CompletionParser:assistIdentifier()
40900=CompletionParser:consumeConstructorBody()
40901=CompletionParser:checkRecoveredMethod()
40902=CompletionParser:convertToMethodDeclaration(ConstructorDeclaration, CompilationResult)
40903=CompletionParser:consumeConditionalExpression(int)
40904=CompletionParser:isEmptyNameCompletion()
40905=CompletionParser:consumeMethodInvocationName()
40906=CompletionParser:consumeOnlyTypeArguments()
40907=CompletionParser:consumePackageDeclarationNameWithModifiers()
40908=CompletionParser:classHeaderExtendsOrImplements(boolean)
40909=CompletionParser:consumeStatementFor()
40910=CompletionParser:consumeDimWithOrWithOutExpr()
40911=CompletionParser:becomeSimpleParser()
40912=CompletionParser:addPotentialName(char[], int, int)
40913=CompletionParser:reset()
40914=CompletionParser:consumeMethodHeaderName(boolean)
40915=CompletionParser:consumeMemberValuePair()
40916=CompletionParser:consumeReferenceExpression(ReferenceExpression)
40917=CompletionParser:consumeEnumHeaderName()
40918=CompletionParser:getUnspecifiedReferenceOptimized()
40919=CompletionParser:checkKeyword()
40920=CompletionParser:createSnapShotParser()
40921=CompletionParser:checkNameCompletion()
40922=CompletionParser:consumeArrayCreationHeader()
40923=CompletionParser:checkInvocation()
40924=CompletionParser:consumeOnlyTypeArgumentsForCastExpression()
40925=CompletionParser:isInsideBreakable()
40926=CompletionParser:toString()
40927=CompletionParser:consumeInsideCastExpression()
40928=CompletionParser:createParameterizedSingleAssistTypeReference(TypeReference[], char[], long)
40929=CompletionParser:createAssistPackageReference(char[][], long[])
40930=CompletionParser:consumeFieldAccess(boolean)
40931=CompletionParser:consumeConstructorHeaderNameWithTypeParameters()
40932=CompletionParser:consumeMethodHeaderNameWithTypeParameters(boolean)
40933=CompletionParser:consumeEnterAnonymousClassBody(boolean)
40934=CompletionParser:consumeCastExpressionWithQualifiedGenericsArray()
40935=CompletionParser:consumeInsideCastExpressionLL1WithBounds()
40936=CompletionParser:consumeReferenceType1()
40937=CompletionParser:consumeCastExpressionLL1()
40938=CompletionParser:consumeAnnotationName()
40939=CompletionParser:consumeStatementLabel()
40940=CompletionParser:createQualifiedAssistNameReference(char[][], char[], long[])
40941=CompletionParser:createParameterizedQualifiedAssistTypeReference(char[][], TypeReference[][], char[], TypeReference[], long[])
40942=CompletionParser:checkMemberValueName()
40943=CompletionParser:consumePrimaryNoNewArrayNameThis()
40944=CompletionParser:consumeStaticImportOnDemandDeclarationName()
40945=CompletionParser:consumeReferenceType()
40946=CompletionParser:consumeImportDeclaration()
40947=CompletionParser:consumeAdditionalBound1()
40948=CompletionParser:isAlreadyPotentialName(int)
40949=CompletionParser:consumeClassBodyDeclaration()
40950=CompletionParser:consumeReferenceType3()
40951=CompletionParser:consumeStatementBreakWithLabel()
40952=CompletionParser:consumeCastExpressionWithGenericsArray()
40953=CompletionParser:consumeToken(int)
40954=CompletionParser:consumeTypeParameterHeader()
40955=CompletionParser:consumeClassDeclaration()
40956=CompletionParser:consumeEmptyStatement()
40957=CompletionParser:consumeAssignmentOperator(int)
40958=CompletionParser:consumeLabel()
40959=CompletionParser:buildMoreTryStatementCompletionContext(TypeReference)
40960=CompletionParser:createStringLiteral(char[], int, int, int)
40961=CompletionParser:consumeAnnotationTypeDeclarationHeaderNameWithTypeParameters()
40962=CompletionParser:consumeMethodHeaderExtendedDims()
40963=CompletionParser:getTypeReferenceForGenericType(int, int, int)
40964=CompletionParser:buildMoreCompletionContext(Expression)
40965=CompletionParser:consumeArrayCreationExpressionWithoutInitializer()
40966=CompletionParser:consumeCastExpressionWithNameArray()
40967=CompletionParser:consumePackageDeclarationName()
40968=CompletionParser:buildMoreCompletionEnclosingContext(Statement)
40969=CompletionParser:initialize()
40970=CompletionParser:consumeInsideCastExpressionLL1()
40971=CompletionParser:prepareForBlockStatements()
40972=CompletionParser:consumeFormalParameter(boolean)
40973=CompletionParser:isAfterArrayType()
40974=CompletionParser:consumeExitVariableWithInitialization()
40975=CompletionParser:consumeInterfaceHeaderExtends()
40976=CompletionParser:copyState(Parser)
40977=CompletionParser:consumeModifiers()
40978=CompletionParser:consumeSingleMemberAnnotation(boolean)
40979=CompletionParser:checkMemberAccess()
40980=CompletionParser:consumeTypeParameter1()
40981=CompletionParser:consumeClassHeaderName1()
40982=CompletionParser:checkClassLiteralAccess()
40983=CompletionParser:consumeRightParen()
40984=CompletionParser:consumeWildcard2()
40985=CompletionParser:recoveryExitFromVariable()
40986=CompletionParser:consumeMethodInvocationPrimaryWithTypeArguments()
40987=CompletionParser:attachOrphanCompletionNode()
40988=CompletionParser:initializeScanner()
40989=CompletionParser:popUntilCompletedAnnotationIfNecessary()
40990=CompletionParser:consumeOnlySynchronized()
40991=CompletionParser:consumeMethodBody()
40992=CompletionParser:consumeTypeParameterWithExtends()
40993=CompletionParser:consumeTypeParameters()
40994=CompletionParser:consumeOpenFakeBlock()
40995=CompletionParser:consumeStatementIfNoElse()
40996=CompletionParser:createAssistImportReference(char[][], long[], int)
40997=CompletionParser:consumeWildcard()
40998=CompletionParser:isInsideAnnotation()
40999=CompletionParser:buildMoreGenericsCompletionContext(ASTNode, boolean)
41000=CompletionParser:consumeInstanceOfExpressionWithName()
41001=CompletionParser:consumeEnumConstantHeaderName()
41002=CompletionParser:consumeClassInstanceCreationExpressionName()
41003=CompletionParser:consumeUnaryExpression(int)
41004=CompletionParser:createSingleAssistNameReference(char[], long)
41005=CompletionParser:consumeEnumConstantWithClassBody()
41006=CompletionParser:initializeForBlockStatements()
41007=CompletionParser:createLocalDeclaration(char[], int, int)
41008=CompletionParser:consumeClassHeaderExtends()
41009=CompletionParser:consumeEqualityExpression(int)
41010=CompletionParser:consumeUnionType()
41011=CompletionParser:checkLabelStatement()
41012=CompletionParser:assistNodeNeedsStacking()
41013=CompletionParser:consumeMemberValueAsName()
41014=CompletionParser:consumeTypeHeaderNameWithTypeParameters()
41015=CompletionParser:checkParemeterizedType()
41016=CompletionParser:consumeLambdaExpression()
41017=CompletionParser:consumeCatchFormalParameter()
41018=CompletionParser:bodyEnd(AbstractMethodDeclaration)
41019=CompletionParser:resetAfterCompletion()
41020=CompletionParser:consumeInterfaceHeaderName1()
41021=CompletionParser:stackHasInstanceOfExpression(Object[], int)
41022=CompletionParser:consumeTypeArguments()
41023=CompletionParser:consumeClassTypeElt()
41024=CompletionParser:bodyEnd(Initializer)
41025=CompletionParser:createSingleAssistTypeReference(char[], long)
41026=CompletionParser:augmentTypeWithAdditionalDimensions(TypeReference, int, Annotation[][], boolean)
41027=CompletionParser:consumeMarkerAnnotation(boolean)
41028=CompletionParser:parseBlockStatements(ConstructorDeclaration, CompilationUnitDeclaration)
41029=CompletionParser:consumeGenericTypeWithDiamond()
41030=CompletionParser:consumeTypeArgumentReferenceType2()
41031=CompletionParser:consumeSingleTypeImportDeclarationName()
41032=CompletionParser:consumeEnumHeaderNameWithTypeParameters()
41033=CompletionParser:consumeStatementWhile()
41034=CompletionParser:consumeConstructorHeader()
41035=CompletionParser:consumeMethodDeclaration(boolean, boolean)
41036=CompletionParser:checkAndSetModifiers(int)
41037=CompletionParser:initialize(boolean)
41038=CompletionParser:consumeUnionTypeAsClassType()
41039=CompletionParser:recordReference(NameReference)
41040=CompletionParser:consumeCastExpressionWithPrimitiveType()
41041=CompletionParser:consumeTypeParameter1WithExtends()
41042=CompletionParser:consumeEnterVariable()
41043=CompletionParser:checkParemeterizedMethodName()
41044=CompletionParser:consumeRestoreDiet()
41045=CompletionParser:consumeAnnotationAsModifier()
41046=CompletionParser:isInsideLoop()
41047=CompletionParser:consumeBinaryExpression(int)
41048=CompletionParser:isInsideBlock()
41049=CompletionParser:stopRecordingIdentifiers()
41050=CompletionParser:setAssistIdentifier(char[])
41051=CompletionParser:consumeExitVariableWithoutInitialization()
41052=CompletionParser:consumeEnumConstantNoClassBody()
41053=CompletionParser:consumeSingleStaticImportDeclarationName()
41054=CompletionParser:shouldStackAssistNode()
41055=CompletionParser:consumeMethodInvocationSuper()
41056=CompletionParser:recoveryTokenCheck()
41057=CompletionParser:resumeAfterRecovery()
41058=CompletionParser:consumeQualifiedSuperReceiver()
41059=CompletionParser:consumePushPosition()
41060=CompletionParser:buildMoreAnnotationCompletionContext(MemberValuePair)
41061=CompletionParser:consumeAdditionalBound()
41062=CompletionParser:assistNodeParent()
41063=CompletionParser:consumeUnaryExpression(int, boolean)
41064=CompletionParser:consumeTypeParameterWithExtendsAndBounds()
41065=CompletionParser:consumeConditionalExpressionWithName(int)
41066=CompletionParser:isInsideArrayInitializer()
41067=CompletionParser:startRecordingIdentifiers(int, int)
41068=CompletionParser:consumeStatementIfWithElse()
41069=CompletionParser:checkClassInstanceCreation()
41070=CompletionParser:consumeClassHeaderImplements()
41071=CompletionParser:consumeClassBodyopt()
41072=CompletionParser:restoreAssistParser(Object)
41073=CompletionParser:consumeWildcardBoundsExtends()
41074=CompletionParser:consumeStatementSwitch()
41075=CompletionParser:consumeDefaultLabel()
41076=CompletionParser:consumeWildcardBounds2Extends()
41077=CompletionParser:completionIdentifierCheck()
41078=CompletionParser:flushAssistState()
41079=CompletionParser:consumeMethodHeaderRightParen()
41080=CompletionParser:consumeCaseLabel()
41081=CompletionParser:getUnspecifiedReference(boolean)
41082=CompletionParser:pushOnLabelStack(char[])
41083=CompletionParser:enclosingNode()
41084=CompletionParser:consumeExplicitConstructorInvocation(int, int)
41085=CompletionParser:consumeForceNoDiet()
41086=CompletionParser:indexOfAssistIdentifier(boolean)
41087=CompletionParser:parseSomeStatements(int, int, int, CompilationUnitDeclaration)
41088=CompletionParser:consumeAssignment()
41089=CompletionParser:consumeReferenceType2()
41090=F:bar2()
41091=F:bar()
41092=F:foo()
41093=VariableBinding:toString()
41094=VariableBinding:isEffectivelyFinal()
41095=VariableBinding:constant()
41096=VariableBinding:isFinal()
41097=VariableBinding:setConstant(Constant)
41098=VariableBinding:isBlankFinal()
41099=VariableBinding:isNullable()
41100=VariableBinding:constant(Scope)
41101=VariableBinding:getAnnotations()
41102=VariableBinding:isNonNull()
41103=VariableBinding:VariableBinding(char[], TypeBinding, int, Constant)
41104=VariableBinding:readableName()
41105=HashSetOfArray:HashSetOfArray()
41106=HashSetOfArray:HashSetOfArray(int)
41107=HashSetOfArray:clone()
41108=HashSetOfArray:rehash()
41109=HashSetOfArray:hashCode(Object[], int)
41110=HashSetOfArray:contains(Object[])
41111=HashSetOfArray:toString()
41112=HashSetOfArray:size()
41113=HashSetOfArray:hashCode(Object[])
41114=HashSetOfArray:remove(Object[])
41115=HashSetOfArray:add(Object[])
41116=X:foo()
41117=MessagerAnnotationProcessorFactory:MessagerAnnotationProcessorFactory()
41118=MessagerAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
41119=SyntheticFieldBinding:SyntheticFieldBinding(char[], TypeBinding, int, ReferenceBinding, Constant, int)
41120=X02:foo()
41121=X:main(String[])
41122=ResolveClass2:foo()
41123=LocalDeclaration:checkModifiers()
41124=LocalDeclaration:analyseCode(BlockScope, FlowContext, FlowInfo)
41125=LocalDeclaration:LocalDeclaration(char[], int, int)
41126=LocalDeclaration:generateCode(BlockScope, CodeStream)
41127=LocalDeclaration:traverse(ASTVisitor, BlockScope)
41128=LocalDeclaration:resolve(BlockScope)
41129=Example:foo()
41130=Parser:consumeWildcard2()
41131=Parser:consumeInternalCompilationUnitWithTypes()
41132=Parser:consumeLocalVariableDeclarationStatement()
41133=Parser:consumeNameArrayType()
41134=Parser:consumeClassHeader()
41135=Parser:consumeEnhancedForStatement()
41136=Parser:consumeFieldAccess(boolean)
41137=Parser:pushOnGenericsLengthStack(int)
41138=Parser:consumeEmptyBlockStatementsopt()
41139=Parser:consumeModifiers()
41140=Parser:consumeCastExpressionWithGenericsArray()
41141=Parser:consumeClassInstanceCreationExpressionName()
41142=Parser:consumeToken(int)
41143=Parser:consumeEmptyClassBodyDeclarationsopt()
41144=Parser:consumeStatementBreak()
41145=Parser:consumeGenericType()
41146=Parser:consumeInsideCastExpression()
41147=Parser:convertToMethodDeclaration(ConstructorDeclaration, CompilationResult)
41148=Parser:createFieldDeclaration(char[], int, int)
41149=Parser:consumeClassInstanceCreationExpressionQualified()
41150=Parser:parse(ConstructorDeclaration, CompilationUnitDeclaration)
41151=Parser:consumePrimaryNoNewArrayNameThis()
41152=Parser:consumeStatementSwitch()
41153=Parser:readByteTable(String)
41154=Parser:consumeExitTryBlock()
41155=Parser:consumeConstructorHeaderNameWithTypeParameters()
41156=Parser:getFirstToken()
41157=Parser:consumeConstructorHeader()
41158=Parser:consumeAssertStatement()
41159=Parser:goForHeaders()
41160=Parser:consumeTypeArguments()
41161=Parser:consumeNormalAnnotation()
41162=Parser:classInstanceCreation(boolean)
41163=Parser:initializeScanner()
41164=Parser:consumeStatementThrow()
41165=Parser:consumeMethodInvocationNameWithTypeArguments()
41166=Parser:consumeMethodBody()
41167=Parser:consumeMemberValues()
41168=Parser:consumeNestedType()
41169=Parser:goForPackageDeclaration()
41170=Parser:consumeRightParen()
41171=Parser:consumeEmptyEnumDeclarations()
41172=Parser:consumeExitVariableWithInitialization()
41173=Parser:consumePushModifiers()
41174=Parser:consumeStatementExpressionList()
41175=Parser:resumeAfterRecovery()
41176=Parser:consumePrimaryNoNewArrayPrimitiveType()
41177=Parser:consumePrimaryNoNewArrayPrimitiveArrayType()
41178=Parser:consumeWildcard1WithBounds()
41179=Parser:consumeOpenBlock()
41180=Parser:consumeWildcardBoundsExtends()
41181=Parser:consumeStatementWhile()
41182=Parser:getJavaDocPositions()
41183=Parser:parseExpression(char[], int, int, CompilationUnitDeclaration)
41184=Parser:consumeWildcard3WithBounds()
41185=Parser:parse(FieldDeclaration, TypeDeclaration, CompilationUnitDeclaration, char[])
41186=Parser:consumeCaseLabel()
41187=Parser:ignoreInvalidConstructorDeclaration(boolean)
41188=Parser:consumeCastExpressionWithQualifiedGenericsArray()
41189=Parser:parse(ICompilationUnit, CompilationResult, int, int)
41190=Parser:consumeDimWithOrWithOutExprs()
41191=Parser:consumeConditionalExpressionWithName(int)
41192=Parser:reportSyntaxErrors(boolean, int)
41193=Parser:consumePushRealModifiers()
41194=Parser:initialize()
41195=Parser:buildFileForTable(String, byte[])
41196=Parser:consumeSingleMemberAnnotation()
41197=Parser:consumeTypeArgument()
41198=Parser:consumeAnnotationTypeMemberDeclarations()
41199=Parser:consumeSingleTypeImportDeclarationName()
41200=Parser:consumeAnnotationTypeDeclaration()
41201=Parser:consumeRestoreDiet()
41202=Parser:getTypeReferenceForGenericType(int, int, int)
41203=Parser:consumeBlockStatements()
41204=Parser:consumeFormalParameterList()
41205=Parser:consumeWildcardBounds2Super()
41206=Parser:consumeLeftParen()
41207=Parser:consumeInsideCastExpressionWithQualifiedGenerics()
41208=Parser:recoveryTokenCheck()
41209=Parser:updateSourcePosition(Expression)
41210=Parser:consumeAnnotationTypeMemberHeaderExtendedDims()
41211=Parser:consumeEnterAnonymousClassBody()
41212=Parser:consumeVariableInitializers()
41213=Parser:getUnspecifiedReference()
41214=Parser:consumeExitVariableWithoutInitialization()
41215=Parser:updateSourceDeclarationParts(int)
41216=Parser:consumeSwitchBlockStatement()
41217=Parser:consumeRule(int)
41218=Parser:in_symbol(int)
41219=Parser:consumeClassBodyDeclarations()
41220=Parser:consumeEmptyMemberValueArrayInitializer()
41221=Parser:ignoreInterfaceDeclaration()
41222=Parser:consumePackageDeclaration()
41223=Parser:consumeBinaryExpressionWithName(int)
41224=Parser:consumeStaticInitializer()
41225=Parser:consumeInsideCastExpressionLL1()
41226=Parser:pushOnExpressionStackLengthStack(int)
41227=Parser:consumeTypeParameterWithExtendsAndBounds()
41228=Parser:consumeEnterAnonymousClassBodySimpleName()
41229=Parser:goForMethodBody()
41230=Parser:buildFileOfShortFor(String, String, String[])
41231=Parser:consumeInstanceOfExpressionWithName(int)
41232=Parser:copyDims(TypeReference, int)
41233=Parser:consumeStatementDo()
41234=Parser:consumeEmptyInterfaceMemberDeclaration()
41235=Parser:readReadableNameTable(String)
41236=Parser:adjustInterfaceModifiers()
41237=Parser:consumePrimaryNoNewArrayThis()
41238=Parser:consumeUnaryExpression(int, boolean)
41239=Parser:consumeGenericTypeNameArrayType()
41240=Parser:consumeMemberValuePairs()
41241=Parser:goForImportDeclaration()
41242=Parser:consumeMethodHeaderThrowsClause()
41243=Parser:createLocalDeclaration(char[], int, int)
41244=Parser:consumeFormalParameter(boolean)
41245=Parser:consumeEnumDeclaration()
41246=Parser:consumeEnumConstantWithClassBody()
41247=Parser:consumeGenericTypeArrayType()
41248=Parser:consumeConstructorBlockStatements()
41249=Parser:reportSyntaxErrorsForSkippedMethod(TypeDeclaration[])
41250=Parser:pushOnAstLengthStack(int)
41251=Parser:consumeStatementIfNoElse()
41252=Parser:getTypeReference(Expression)
41253=Parser:ntAction(int, int)
41254=Parser:parse(MethodDeclaration, CompilationUnitDeclaration)
41255=Parser:consumeEnumBodyWithConstants()
41256=Parser:consumeTypeArgumentList()
41257=Parser:problemReporter()
41258=Parser:consumeSimpleAssertStatement()
41259=Parser:updateRecoveryState()
41260=Parser:consumeTypeParameterHeader()
41261=Parser:consumeConstructorDeclaration()
41262=Parser:consumeSwitchBlockStatements()
41263=Parser:toString()
41264=Parser:optimizedConcatNodeLists()
41265=Parser:consumeInterfaceMemberDeclarationsopt()
41266=Parser:consumeTypeParameter1()
41267=Parser:consumeOnlyTypeArgumentsForCastExpression()
41268=Parser:consumeClassTypeList()
41269=Parser:goForFieldDeclaration()
41270=Parser:consumeMemberValueArrayInitializer()
41271=Parser:consumeEmptySwitchBlock()
41272=Parser:consumeInstanceOfExpression(int)
41273=Parser:consumeArrayInitializer()
41274=Parser:consumeWildcardBounds1Super()
41275=Parser:consumeEqualityExpressionWithName(int)
41276=Parser:initTables()
41277=Parser:dispatchDeclarationIntoEnumDeclaration(int)
41278=Parser:consumeEmptyInternalCompilationUnit()
41279=Parser:consumeEmptyArguments()
41280=Parser:consumeArgumentList()
41281=Parser:consumeTypeParameters()
41282=Parser:consumeMethodHeader()
41283=Parser:consumeForceNoDiet()
41284=Parser:buildFileForName(String, String)
41285=Parser:pushIdentifier(int)
41286=Parser:consumePushLeftBrace()
41287=Parser:dispatchDeclarationInto(int)
41288=Parser:blockReal()
41289=Parser:consumeStatementContinue()
41290=Parser:consumeMethodHeaderRightParen()
41291=Parser:resumeOnSyntaxError()
41292=Parser:consumeTypeParameter1WithExtendsAndBounds()
41293=Parser:consumeInterfaceDeclaration()
41294=Parser:consumeArguments()
41295=Parser:consumeReferenceType()
41296=Parser:consumeSingleStaticImportDeclarationName()
41297=Parser:consumeWildcardBounds2Extends()
41298=Parser:consumePrimaryNoNewArray()
41299=Parser:consumeEmptyTypeDeclaration()
41300=Parser:consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()
41301=Parser:goForTypeDeclaration()
41302=Parser:pushOnGenericsIdentifiersLengthStack(int)
41303=Parser:consumeInterfaceMemberDeclarations()
41304=Parser:consumeTypeArgumentReferenceType1()
41305=Parser:consumeTypeArgumentList2()
41306=Parser:consumeFormalParameterListopt()
41307=Parser:consumeTypeHeaderNameWithTypeParameters()
41308=Parser:pushOnGenericsStack(ASTNode)
41309=Parser:consumeLocalVariableDeclaration()
41310=Parser:consumeTypeParameter1WithExtends()
41311=Parser:consumeEmptyArrayInitializer()
41312=Parser:consumeAnnotationTypeMemberDeclaration()
41313=Parser:consumePackageDeclarationNameWithModifiers()
41314=Parser:consumeMethodDeclaration(boolean)
41315=Parser:consumeReferenceType2()
41316=Parser:consumeStaticImportOnDemandDeclarationName()
41317=Parser:consumeAdditionalBound1()
41318=Parser:consumeEmptyArgumentListopt()
41319=Parser:consumeClassDeclaration()
41320=Parser:consumeWildcard()
41321=Parser:newMessageSendWithTypeArguments()
41322=Parser:pushOnRealBlockStack(int)
41323=Parser:ignoreExpressionAssignment()
41324=Parser:consumeArrayCreationHeader()
41325=Parser:consumeClassOrInterfaceName()
41326=Parser:goForCompilationUnit()
41327=Parser:buildFileForReadableName(String, char[], char[], String[], String[])
41328=Parser:consumeClassHeaderImplements()
41329=Parser:goForExpression()
41330=Parser:consumeAnnotationAsModifier()
41331=Parser:consumeAdditionalBoundList()
41332=Parser:resetModifiers()
41333=Parser:consumeEnumBodyNoConstants()
41334=Parser:Parser(ProblemReporter, boolean)
41335=Parser:consumeMethodInvocationSuperWithTypeArguments()
41336=Parser:consumeWildcard2WithBounds()
41337=Parser:ignoreMethodBody()
41338=Parser:readLongTable(String)
41339=Parser:consumeQualifiedName()
41340=Parser:consumeStatementContinueWithLabel()
41341=Parser:consumeClassInstanceCreationExpressionWithTypeArguments()
41342=Parser:consumeAssignment()
41343=Parser:consumePrimaryNoNewArrayArrayType()
41344=Parser:consumeEmptyMemberValuePairsopt()
41345=Parser:consumeClassHeaderName1()
41346=Parser:consumeDefaultModifiers()
41347=Parser:resetStacks()
41348=Parser:consumeConstructorBody()
41349=Parser:buildFileOfIntFor(String, String, String[])
41350=Parser:pushOnIntStack(int)
41351=Parser:endParse(int)
41352=Parser:consumeWildcardBounds1Extends()
41353=Parser:getNextCharacter(char[], int[])
41354=Parser:consumeWildcard1()
41355=Parser:consumeInterfaceType()
41356=Parser:newMessageSend()
41357=Parser:buildInitialRecoveryState()
41358=Parser:consumeOneDimLoop()
41359=Parser:checkNonExternalizedStringLiteral()
41360=Parser:consumeClassBodyDeclarationsopt()
41361=Parser:consumeWildcardWithBounds()
41362=Parser:consumeMethodInvocationSuper()
41363=Parser:consumeInterfaceHeader()
41364=Parser:parse(ICompilationUnit, CompilationResult)
41365=Parser:buildFileForCompliance(String, int, String[])
41366=Parser:consumeEnumDeclarations()
41367=Parser:consumePrimitiveArrayType()
41368=Parser:arrayInitializer(int)
41369=Parser:consumeSwitchLabels()
41370=Parser:consumeEnumHeader()
41371=Parser:concatGenericsLists()
41372=Parser:goForBlockStatementsOrCatchHeader()
41373=Parser:buildFile(String, List)
41374=Parser:consumeArrayCreationExpressionWithInitializer()
41375=Parser:consumeMemberValueAsName()
41376=Parser:consumeCastExpressionLL1()
41377=Parser:consumeOnlySynchronized()
41378=Parser:consumePostfixExpression()
41379=Parser:pushIdentifier()
41380=Parser:consumeReduceImports()
41381=Parser:consumeStatementIfWithElse()
41382=Parser:consumeBlock()
41383=Parser:consumeClassHeaderExtends()
41384=Parser:consumeArrayAccess(boolean)
41385=Parser:consumeVariableDeclarators()
41386=Parser:consumeMethodHeaderName()
41387=Parser:consumeCastExpressionWithNameArray()
41388=Parser:consumeEmptyDefaultValue()
41389=Parser:goForClassBodyDeclarations()
41390=Parser:consumeInterfaceTypeList()
41391=Parser:consumeAnnotationTypeDeclarationHeader()
41392=Parser:markInitializersWithLocalType(TypeDeclaration)
41393=Parser:consumeAnnotationTypeMemberDeclarationHeader()
41394=Parser:consumeClassBodyopt()
41395=Parser:goForInitializer()
41396=Parser:consumeCatchHeader()
41397=Parser:consumeStatementFor()
41398=Parser:consumeUnaryExpression(int)
41399=Parser:consumeEnumConstantNoClassBody()
41400=Parser:consumeSwitchBlock()
41401=Parser:consumeBinaryExpression(int)
41402=Parser:consumeArrayCreationExpressionWithoutInitializer()
41403=Parser:consumeStatementTry(boolean)
41404=Parser:consumeEmptyClassMemberDeclaration()
41405=Parser:consumeMemberValuePair()
41406=Parser:buildFileOfByteFor(String, String, String[])
41407=Parser:tAction(int, int)
41408=Parser:consumeTypeParameterList1()
41409=Parser:consumeWildcardBounds3Super()
41410=Parser:consumeStatementSynchronized()
41411=Parser:consumeInternalCompilationUnit()
41412=Parser:consumeStatementReturn()
41413=Parser:consumeAdditionalBound()
41414=Parser:checkComment()
41415=Parser:consumeExplicitConstructorInvocationWithTypeArguments(int, int)
41416=Parser:consumeCatches()
41417=Parser:checkNonNLSAfterBodyEnd(int)
41418=Parser:dietParse(ICompilationUnit, CompilationResult)
41419=Parser:consumeMethodInvocationPrimary()
41420=Parser:consumeEqualityExpression(int)
41421=Parser:flushCommentsDefinedPriorTo(int)
41422=Parser:consumeTypeImportOnDemandDeclarationName()
41423=Parser:consumeEmptyStatement()
41424=Parser:readNameTable(String)
41425=Parser:consumeTypeDeclarations()
41426=Parser:markEnclosingMemberWithLocalType()
41427=Parser:consumeClassOrInterface()
41428=Parser:checkAndSetModifiers(int)
41429=Parser:computeQualifiedGenericsFromRightSide(TypeReference, int)
41430=Parser:consumeConstructorHeaderName()
41431=Parser:consumeStatementCatch()
41432=Parser:consumeEmptyForInitopt()
41433=Parser:jumpOverMethodBody()
41434=Parser:moveRecoveryCheckpoint()
41435=Parser:consumeDefaultLabel()
41436=Parser:consumeMarkerAnnotation()
41437=Parser:concatNodeLists()
41438=Parser:consumeEnterCompilationUnit()
41439=Parser:consumeClassInstanceCreationExpression()
41440=Parser:persistLineSeparatorPositions()
41441=Parser:consumeWildcardBounds3Extends()
41442=Parser:consumeInterfaceHeaderName1()
41443=Parser:consumeDims()
41444=Parser:getUnspecifiedReferenceOptimized()
41445=Parser:parse(Initializer, TypeDeclaration, CompilationUnitDeclaration)
41446=Parser:consumeEmptyDimsopt()
41447=Parser:consumePrimaryNoNewArrayName()
41448=Parser:consumeCastExpressionWithPrimitiveType()
41449=Parser:consumeMethodHeaderNameWithTypeParameters()
41450=Parser:base_check(int)
41451=Parser:nasi(int)
41452=Parser:consumeArrayTypeWithTypeArgumentsName()
41453=Parser:consumeExplicitConstructorInvocation(int, int)
41454=Parser:consumePackageDeclarationName()
41455=Parser:consumeStatementBreakWithLabel()
41456=Parser:consumeEnumConstantHeader()
41457=Parser:consumeImportDeclaration()
41458=Parser:consumeInvalidConstructorDeclaration()
41459=Parser:consumeMethodInvocationPrimaryWithTypeArguments()
41460=Parser:pushOnExpressionStack(Expression)
41461=Parser:parseClassBodyDeclarations(char[], int, int, CompilationUnitDeclaration)
41462=Parser:consumeInterfaceHeaderExtends()
41463=Parser:containsComment(int, int)
41464=Parser:consumeEmptyCatchesopt()
41465=Parser:parse(ConstructorDeclaration, CompilationUnitDeclaration, boolean)
41466=Parser:original_state(int)
41467=Parser:goForGenericMethodDeclaration()
41468=Parser:buildFileForTable(String, char[])
41469=Parser:consumeEmptyAnnotationTypeMemberDeclarationsopt()
41470=Parser:consumePrimaryNoNewArrayWithName()
41471=Parser:consumeCompilationUnit()
41472=Parser:consumeMethodInvocationName()
41473=Parser:consumeStatementLabel()
41474=Parser:getTypeReference(int)
41475=Parser:readTable(String)
41476=Parser:pushOnAstStack(ASTNode)
41477=Parser:consumeTypeArgumentReferenceType2()
41478=Parser:consumeEnhancedForStatementHeader(boolean)
41479=Parser:consumeTypeArgumentList1()
41480=Parser:consumePushPosition()
41481=Parser:consumeEnumConstants()
41482=Parser:consumeEmptyInterfaceMemberDeclarationsopt()
41483=Parser:consumeModifiers2()
41484=Parser:goForBlockStatementsopt()
41485=Parser:consumeClassBodyDeclaration()
41486=Parser:consumeConditionalExpression(int)
41487=Parser:consumeDimWithOrWithOutExpr()
41488=Parser:parse()
41489=Parser:consumeStaticOnly()
41490=Parser:consumeReferenceType1()
41491=Parser:consumeTypeParameterList()
41492=Parser:consumeFieldDeclaration()
41493=Parser:consumeNestedMethod()
41494=Parser:recoveryExitFromVariable()
41495=Parser:consumeAdditionalBoundList1()
41496=Parser:consumeAssignmentOperator(int)
41497=Parser:consumeMethodHeaderExtendedDims()
41498=Parser:consumeExpressionStatement()
41499=Parser:buildFilesFromLPG(String, String)
41500=Parser:consumeEmptyArrayInitializeropt()
41501=Parser:asi(int)
41502=Parser:concatExpressionLists()
41503=Parser:consumeTypeParameterWithExtends()
41504=Parser:consumeOnlyTypeArguments()
41505=Parser:consumeTypeArgumentList3()
41506=Parser:consumeEmptyForUpdateopt()
41507=Parser:getMethodBodies(CompilationUnitDeclaration)
41508=Parser:consumeAllocationHeader()
41509=Parser:consumePrimitiveType()
41510=Parser:consumeWildcardBoundsSuper()
41511=Parser:consumeEnterVariable()
41512=Parser:consumeWildcard3()
41513=Parser:consumeReferenceType3()
41514=Parser:consumeDiet()
41515=Parser:consumePrimaryNoNewArrayNameSuper()
41516=Parser:consumeClassTypeElt()
41517=Parser:consumeEmptyExpression()
41518=Parser:consumeImportDeclarations()
41519=Parser:consumeForInit()
41520=MatchingRegionsTest:test0029()
41521=MatchingRegionsTest:test0191()
41522=MatchingRegionsTest:test0138()
41523=MatchingRegionsTest:test0093()
41524=MatchingRegionsTest:test0201()
41525=MatchingRegionsTest:test0103()
41526=MatchingRegionsTest:test0149()
41527=MatchingRegionsTest:test0005()
41528=MatchingRegionsTest:test0212()
41529=MatchingRegionsTest:test0114()
41530=MatchingRegionsTest:test0321()
41531=MatchingRegionsTest:test0016()
41532=MatchingRegionsTest:test0125()
41533=MatchingRegionsTest:test0080()
41534=MatchingRegionsTest:test0310()
41535=MatchingRegionsTest:MatchingRegionsTest(String)
41536=MatchingRegionsTest:test0027()
41537=MatchingRegionsTest:test0136()
41538=MatchingRegionsTest:test0091()
41539=MatchingRegionsTest:test0038()
41540=MatchingRegionsTest:test0101()
41541=MatchingRegionsTest:test0147()
41542=MatchingRegionsTest:test0003()
41543=MatchingRegionsTest:test0049()
41544=MatchingRegionsTest:test0210()
41545=MatchingRegionsTest:test0112()
41546=MatchingRegionsTest:test0158()
41547=MatchingRegionsTest:test0014()
41548=MatchingRegionsTest:test0123()
41549=MatchingRegionsTest:test0169()
41550=MatchingRegionsTest:test0025()
41551=MatchingRegionsTest:test0051()
41552=MatchingRegionsTest:test0097()
41553=MatchingRegionsTest:test0303()
41554=MatchingRegionsTest:test0160()
41555=MatchingRegionsTest:test0327()
41556=MatchingRegionsTest:test0062()
41557=MatchingRegionsTest:test0009()
41558=MatchingRegionsTest:test0171()
41559=MatchingRegionsTest:test0073()
41560=MatchingRegionsTest:test0107()
41561=MatchingRegionsTest:test0325()
41562=MatchingRegionsTest:test0205()
41563=MatchingRegionsTest:test0182()
41564=MatchingRegionsTest:test0084()
41565=MatchingRegionsTest:test0118()
41566=MatchingRegionsTest:test0314()
41567=MatchingRegionsTest:test0216()
41568=MatchingRegionsTest:test0193()
41569=MatchingRegionsTest:test0129()
41570=MatchingRegionsTest:test0301()
41571=MatchingRegionsTest:test0095()
41572=MatchingRegionsTest:test0203()
41573=MatchingRegionsTest:test0105()
41574=MatchingRegionsTest:test0060()
41575=MatchingRegionsTest:test0214()
41576=MatchingRegionsTest:test0007()
41577=MatchingRegionsTest:test0116()
41578=MatchingRegionsTest:test0323()
41579=MatchingRegionsTest:test0071()
41580=MatchingRegionsTest:test0180()
41581=MatchingRegionsTest:test0018()
41582=MatchingRegionsTest:test0127()
41583=MatchingRegionsTest:test0312()
41584=MatchingRegionsTest:test0082()
41585=MatchingRegionsTest:test0130()
41586=MatchingRegionsTest:test0319()
41587=MatchingRegionsTest:test0176()
41588=MatchingRegionsTest:test0032()
41589=MatchingRegionsTest:test0078()
41590=MatchingRegionsTest:test0141()
41591=MatchingRegionsTest:test0308()
41592=MatchingRegionsTest:test0187()
41593=MatchingRegionsTest:test0043()
41594=MatchingRegionsTest:test0089()
41595=MatchingRegionsTest:test0152()
41596=MatchingRegionsTest:test0054()
41597=MatchingRegionsTest:test0163()
41598=MatchingRegionsTest:test0065()
41599=MatchingRegionsTest:test0174()
41600=MatchingRegionsTest:test0317()
41601=MatchingRegionsTest:test0030()
41602=MatchingRegionsTest:test0076()
41603=MatchingRegionsTest:test0208()
41604=MatchingRegionsTest:test0185()
41605=MatchingRegionsTest:test0306()
41606=MatchingRegionsTest:test0041()
41607=MatchingRegionsTest:test0087()
41608=MatchingRegionsTest:test0219()
41609=MatchingRegionsTest:test0150()
41610=MatchingRegionsTest:test0052()
41611=MatchingRegionsTest:test0098()
41612=MatchingRegionsTest:test0161()
41613=MatchingRegionsTest:test0328()
41614=MatchingRegionsTest:test0063()
41615=MatchingRegionsTest:test0134()
41616=MatchingRegionsTest:suite()
41617=MatchingRegionsTest:test0036()
41618=MatchingRegionsTest:test0145()
41619=MatchingRegionsTest:test0001()
41620=MatchingRegionsTest:test0047()
41621=MatchingRegionsTest:test0110()
41622=MatchingRegionsTest:test0156()
41623=MatchingRegionsTest:test0012()
41624=MatchingRegionsTest:test0058()
41625=MatchingRegionsTest:test0121()
41626=MatchingRegionsTest:test0167()
41627=MatchingRegionsTest:test0023()
41628=MatchingRegionsTest:test0069()
41629=MatchingRegionsTest:test0132()
41630=MatchingRegionsTest:test0178()
41631=MatchingRegionsTest:test0034()
41632=MatchingRegionsTest:test0143()
41633=MatchingRegionsTest:test0189()
41634=MatchingRegionsTest:test0045()
41635=MatchingRegionsTest:test0154()
41636=MatchingRegionsTest:test0010()
41637=MatchingRegionsTest:test0056()
41638=MatchingRegionsTest:test0165()
41639=MatchingRegionsTest:test0021()
41640=MatchingRegionsTest:test0067()
41641=MatchingRegionsTest:test0213()
41642=MatchingRegionsTest:test0115()
41643=MatchingRegionsTest:test0322()
41644=MatchingRegionsTest:test0070()
41645=MatchingRegionsTest:test0017()
41646=MatchingRegionsTest:test0126()
41647=MatchingRegionsTest:test0311()
41648=MatchingRegionsTest:test0081()
41649=MatchingRegionsTest:test0028()
41650=MatchingRegionsTest:test0190()
41651=MatchingRegionsTest:test0137()
41652=MatchingRegionsTest:test0092()
41653=MatchingRegionsTest:test0039()
41654=MatchingRegionsTest:test0102()
41655=MatchingRegionsTest:test0148()
41656=MatchingRegionsTest:test0004()
41657=MatchingRegionsTest:test0211()
41658=MatchingRegionsTest:test0113()
41659=MatchingRegionsTest:test0159()
41660=MatchingRegionsTest:test0320()
41661=MatchingRegionsTest:test0015()
41662=MatchingRegionsTest:test0124()
41663=MatchingRegionsTest:test0026()
41664=MatchingRegionsTest:test0135()
41665=MatchingRegionsTest:test0090()
41666=MatchingRegionsTest:test0037()
41667=MatchingRegionsTest:test0146()
41668=MatchingRegionsTest:test0100()
41669=MatchingRegionsTest:test0002()
41670=MatchingRegionsTest:test0048()
41671=MatchingRegionsTest:test0172()
41672=MatchingRegionsTest:test0315()
41673=MatchingRegionsTest:test0108()
41674=MatchingRegionsTest:test0074()
41675=MatchingRegionsTest:test0206()
41676=MatchingRegionsTest:test0183()
41677=MatchingRegionsTest:test0304()
41678=MatchingRegionsTest:test0119()
41679=MatchingRegionsTest:test0085()
41680=MatchingRegionsTest:test0217()
41681=MatchingRegionsTest:test0194()
41682=MatchingRegionsTest:test0050()
41683=MatchingRegionsTest:test0096()
41684=MatchingRegionsTest:test0302()
41685=MatchingRegionsTest:test0204()
41686=MatchingRegionsTest:test0326()
41687=MatchingRegionsTest:test0061()
41688=MatchingRegionsTest:test0170()
41689=MatchingRegionsTest:test0215()
41690=MatchingRegionsTest:test0008()
41691=MatchingRegionsTest:test0106()
41692=MatchingRegionsTest:test0072()
41693=MatchingRegionsTest:test0324()
41694=MatchingRegionsTest:printRegions(String, int[])
41695=MatchingRegionsTest:test0181()
41696=MatchingRegionsTest:test0019()
41697=MatchingRegionsTest:test0117()
41698=MatchingRegionsTest:test0083()
41699=MatchingRegionsTest:test0313()
41700=MatchingRegionsTest:test0192()
41701=MatchingRegionsTest:test0300()
41702=MatchingRegionsTest:test0128()
41703=MatchingRegionsTest:test0094()
41704=MatchingRegionsTest:test0202()
41705=MatchingRegionsTest:test0104()
41706=MatchingRegionsTest:test0139()
41707=MatchingRegionsTest:test0006()
41708=MatchingRegionsTest:test0153()
41709=MatchingRegionsTest:test0055()
41710=MatchingRegionsTest:test0164()
41711=MatchingRegionsTest:test0020()
41712=MatchingRegionsTest:test0066()
41713=MatchingRegionsTest:test0175()
41714=MatchingRegionsTest:test0318()
41715=MatchingRegionsTest:test0031()
41716=MatchingRegionsTest:test0209()
41717=MatchingRegionsTest:test0077()
41718=MatchingRegionsTest:test0140()
41719=MatchingRegionsTest:test0186()
41720=MatchingRegionsTest:test0307()
41721=MatchingRegionsTest:test0042()
41722=MatchingRegionsTest:test0088()
41723=MatchingRegionsTest:test0151()
41724=MatchingRegionsTest:test0053()
41725=MatchingRegionsTest:test0099()
41726=MatchingRegionsTest:test0162()
41727=MatchingRegionsTest:test0329()
41728=MatchingRegionsTest:test0064()
41729=MatchingRegionsTest:test0173()
41730=MatchingRegionsTest:test0316()
41731=MatchingRegionsTest:test0075()
41732=MatchingRegionsTest:test0109()
41733=MatchingRegionsTest:test0207()
41734=MatchingRegionsTest:test0184()
41735=MatchingRegionsTest:test0305()
41736=MatchingRegionsTest:test0086()
41737=MatchingRegionsTest:test0040()
41738=MatchingRegionsTest:test0218()
41739=MatchingRegionsTest:test0111()
41740=MatchingRegionsTest:test0157()
41741=MatchingRegionsTest:test0013()
41742=MatchingRegionsTest:test0059()
41743=MatchingRegionsTest:test0220()
41744=MatchingRegionsTest:test0122()
41745=MatchingRegionsTest:test0168()
41746=MatchingRegionsTest:test0024()
41747=MatchingRegionsTest:test0133()
41748=MatchingRegionsTest:test0179()
41749=MatchingRegionsTest:test0035()
41750=MatchingRegionsTest:test0144()
41751=MatchingRegionsTest:test0046()
41752=MatchingRegionsTest:test0155()
41753=MatchingRegionsTest:test0011()
41754=MatchingRegionsTest:test0057()
41755=MatchingRegionsTest:test0120()
41756=MatchingRegionsTest:test0166()
41757=MatchingRegionsTest:test0022()
41758=MatchingRegionsTest:test0068()
41759=MatchingRegionsTest:test0131()
41760=MatchingRegionsTest:test0177()
41761=MatchingRegionsTest:test0033()
41762=MatchingRegionsTest:test0079()
41763=MatchingRegionsTest:test0142()
41764=MatchingRegionsTest:test0188()
41765=MatchingRegionsTest:test0309()
41766=MatchingRegionsTest:test0044()
41767=IRestrictedAccessConstructorRequestor:acceptConstructor(int, char[], int, char[], char[][], char[][], int, char[], int, String, AccessRestriction)
41768=BaseAnnotationProcessorManager:configure(Object, String[])
41769=BaseAnnotationProcessorManager:getDiscoveredProcessors()
41770=BaseAnnotationProcessorManager:setErr(PrintWriter)
41771=BaseAnnotationProcessorManager:getDeletedUnits()
41772=BaseAnnotationProcessorManager:processAnnotations(CompilationUnitDeclaration[], ReferenceBinding[], boolean)
41773=BaseAnnotationProcessorManager:configureFromPlatform(Compiler, Object, Object)
41774=BaseAnnotationProcessorManager:setOut(PrintWriter)
41775=BaseAnnotationProcessorManager:getNewUnits()
41776=BaseAnnotationProcessorManager:setProcessors(Object[])
41777=BaseAnnotationProcessorManager:getNewClassFiles()
41778=BaseAnnotationProcessorManager:reset()
41779=UnresolvedReferenceNameFinder:indexOfNextName(int)
41780=UnresolvedReferenceNameFinder:visit(ConstructorDeclaration, ClassScope)
41781=UnresolvedReferenceNameFinder:endVisit(TypeDeclaration, ClassScope)
41782=UnresolvedReferenceNameFinder:removeFields(TypeDeclaration)
41783=UnresolvedReferenceNameFinder:popParent()
41784=UnresolvedReferenceNameFinder:endVisit(Block, BlockScope)
41785=UnresolvedReferenceNameFinder:visit(Block, BlockScope)
41786=UnresolvedReferenceNameFinder:find(char[], Initializer, ClassScope, int, char[][], UnresolvedReferenceNameRequestor)
41787=UnresolvedReferenceNameFinder:visit(FieldDeclaration, MethodScope)
41788=UnresolvedReferenceNameFinder:endVisit(FieldDeclaration, MethodScope)
41789=UnresolvedReferenceNameFinder:removeLocals(Statement[], int, int)
41790=UnresolvedReferenceNameFinder:pushParent(ASTNode)
41791=UnresolvedReferenceNameFinder:endVisit(ConstructorDeclaration, ClassScope)
41792=UnresolvedReferenceNameFinder:findBefore(char[], Scope, int, int, int, int, char[][], UnresolvedReferenceNameRequestor)
41793=UnresolvedReferenceNameFinder:findBefore(char[], Scope, ClassScope, int, int, int, char[][], UnresolvedReferenceNameRequestor)
41794=UnresolvedReferenceNameFinder:acceptName(char[])
41795=UnresolvedReferenceNameFinder:endVisit(Argument, BlockScope)
41796=UnresolvedReferenceNameFinder:findAfter(char[], Scope, ClassScope, int, int, char[][], UnresolvedReferenceNameRequestor)
41797=UnresolvedReferenceNameFinder:visit(TypeDeclaration, ClassScope)
41798=UnresolvedReferenceNameFinder:endVisit(LocalDeclaration, BlockScope)
41799=UnresolvedReferenceNameFinder:getEnclosingDeclaration()
41800=UnresolvedReferenceNameFinder:endVisit(Argument, ClassScope)
41801=UnresolvedReferenceNameFinder:indexOfFisrtNameAfter(int)
41802=UnresolvedReferenceNameFinder:visit(Initializer, MethodScope)
41803=UnresolvedReferenceNameFinder:endVisit(Initializer, MethodScope)
41804=UnresolvedReferenceNameFinder:endVisitPreserved(int, int)
41805=UnresolvedReferenceNameFinder:UnresolvedReferenceNameFinder(CompletionEngine)
41806=UnresolvedReferenceNameFinder:visit(TypeDeclaration, BlockScope)
41807=UnresolvedReferenceNameFinder:endVisit(TypeDeclaration, BlockScope)
41808=UnresolvedReferenceNameFinder:find(char[], AbstractMethodDeclaration, int, char[][], UnresolvedReferenceNameRequestor)
41809=UnresolvedReferenceNameFinder:initPotentialNamesTables(char[][])
41810=UnresolvedReferenceNameFinder:findAfter(char[], Scope, int, int, int, boolean, char[][], UnresolvedReferenceNameRequestor)
41811=UnresolvedReferenceNameFinder:UnresolvedReferenceNameRequestor:acceptName(char[])
41812=UnresolvedReferenceNameFinder:endVisit(MethodDeclaration, ClassScope)
41813=UnresolvedReferenceNameFinder:visit(MethodDeclaration, ClassScope)
41814=UnresolvedReferenceNameFinder:endVisitRemoved(int, int)
41815=UnresolvedReferenceNameFinder:removeNameAt(int)
41816=Test:foo(int)
41817=A:getString()
41818=X04:foo(String)
41819=A:goo()
41820=A:bar()
41821=A:foo(int, int)
41822=Test:___run(java.lang.String[])
41823=A:foo()
41824=A:A()
41825=ValueConversionProcessorFactory:ValueConversionProcessorFactory()
41826=ValueConversionProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
41827=Test:main(String[])
41828=LineComment:propertyDescriptors(int)
41829=LineComment:clone0(AST)
41830=LineComment:internalStructuralPropertiesForType(int)
41831=LineComment:memSize()
41832=LineComment:getNodeType0()
41833=LineComment:treeSize()
41834=LineComment:subtreeMatch0(ASTMatcher, Object)
41835=LineComment:accept0(ASTVisitor)
41836=LineComment:LineComment(AST)
41837=X13:foo(String)
41838=GenericsRegressionTest:testBug499048()
41839=GenericsRegressionTest:testBug413958_2()
41840=GenericsRegressionTest:testBug430759()
41841=GenericsRegressionTest:testBug427433b()
41842=GenericsRegressionTest:test444024()
41843=GenericsRegressionTest:test427736()
41844=GenericsRegressionTest:testBug426590b()
41845=GenericsRegressionTest:test426633b()
41846=GenericsRegressionTest:testBug434044()
41847=GenericsRegressionTest:testBug435643()
41848=GenericsRegressionTest:test339478l()
41849=GenericsRegressionTest:test322531c()
41850=GenericsRegressionTest:testBug438337comment5()
41851=GenericsRegressionTest:test322817c()
41852=GenericsRegressionTest:test348493()
41853=GenericsRegressionTest:test339478n()
41854=GenericsRegressionTest:testBug395002_combined()
41855=GenericsRegressionTest:test322531e()
41856=GenericsRegressionTest:test397888b()
41857=GenericsRegressionTest:test322817e()
41858=GenericsRegressionTest:testBug427216()
41859=GenericsRegressionTest:test426678a()
41860=GenericsRegressionTest:test334622d()
41861=GenericsRegressionTest:test446223()
41862=GenericsRegressionTest:test339478a()
41863=GenericsRegressionTest:test322817g()
41864=GenericsRegressionTest:testBug426537_generic()
41865=GenericsRegressionTest:test339478p()
41866=GenericsRegressionTest:testBug432603a()
41867=GenericsRegressionTest:testBug499126()
41868=GenericsRegressionTest:testBug434793()
41869=GenericsRegressionTest:test283353()
41870=GenericsRegressionTest:test337751()
41871=GenericsRegressionTest:test334622b()
41872=GenericsRegressionTest:test427728a()
41873=GenericsRegressionTest:test339478c()
41874=GenericsRegressionTest:test322817i()
41875=GenericsRegressionTest:test366131()
41876=GenericsRegressionTest:test425719a()
41877=GenericsRegressionTest:testBug438337comment3()
41878=GenericsRegressionTest:testBug395002_1()
41879=GenericsRegressionTest:test338011()
41880=GenericsRegressionTest:testBug432603()
41881=GenericsRegressionTest:test426836()
41882=GenericsRegressionTest:testBug460491_comment23()
41883=GenericsRegressionTest:testBug399527_comment1()
41884=GenericsRegressionTest:testBug395002_4()
41885=GenericsRegressionTest:testBug456459b()
41886=GenericsRegressionTest:test339478e()
41887=GenericsRegressionTest:testBug434630_comment7()
41888=GenericsRegressionTest:test282152d()
41889=GenericsRegressionTest:test335751()
41890=GenericsRegressionTest:test322817k()
41891=GenericsRegressionTest:test429733b()
41892=GenericsRegressionTest:test375394()
41893=GenericsRegressionTest:testBug498057()
41894=GenericsRegressionTest:test334493()
41895=GenericsRegressionTest:test338011b()
41896=GenericsRegressionTest:testBug434630()
41897=GenericsRegressionTest:testBug434570_comment3b()
41898=GenericsRegressionTest:test339478g()
41899=GenericsRegressionTest:test428071()
41900=GenericsRegressionTest:test448795b()
41901=GenericsRegressionTest:test282152b()
41902=GenericsRegressionTest:testBug415734()
41903=GenericsRegressionTest:testBug427957()
41904=GenericsRegressionTest:test427992()
41905=GenericsRegressionTest:test337962b()
41906=GenericsRegressionTest:test347426c()
41907=GenericsRegressionTest:test339478i()
41908=GenericsRegressionTest:test334313d()
41909=GenericsRegressionTest:test444334()
41910=GenericsRegressionTest:test330869()
41911=GenericsRegressionTest:testBug434044_comment36()
41912=GenericsRegressionTest:test426633()
41913=GenericsRegressionTest:testClass()
41914=GenericsRegressionTest:test427728()
41915=GenericsRegressionTest:test339478k()
41916=GenericsRegressionTest:test334313b()
41917=GenericsRegressionTest:testBug452194()
41918=GenericsRegressionTest:test348493a()
41919=GenericsRegressionTest:testBug498486()
41920=GenericsRegressionTest:testBug405706a()
41921=GenericsRegressionTest:test366131b()
41922=GenericsRegressionTest:test322531i()
41923=GenericsRegressionTest:test416480()
41924=GenericsRegressionTest:test434118()
41925=GenericsRegressionTest:testBug434044_comment20()
41926=GenericsRegressionTest:test426633a()
41927=GenericsRegressionTest:test428285()
41928=GenericsRegressionTest:test339478m()
41929=GenericsRegressionTest:test322531b()
41930=GenericsRegressionTest:testBug426537()
41931=GenericsRegressionTest:test322817b()
41932=GenericsRegressionTest:testBug428366()
41933=GenericsRegressionTest:testBug426590()
41934=GenericsRegressionTest:getCompilerOptions()
41935=GenericsRegressionTest:testBug399527()
41936=GenericsRegressionTest:testBug422832()
41937=GenericsRegressionTest:testBug434570()
41938=GenericsRegressionTest:test347145()
41939=GenericsRegressionTest:testBug427433()
41940=GenericsRegressionTest:test401456()
41941=GenericsRegressionTest:test339478o()
41942=GenericsRegressionTest:test347746()
41943=GenericsRegressionTest:test443596()
41944=GenericsRegressionTest:test322531d()
41945=GenericsRegressionTest:test397888a()
41946=GenericsRegressionTest:test322817d()
41947=GenericsRegressionTest:GenericsRegressionTest(String)
41948=GenericsRegressionTest:test322817()
41949=GenericsRegressionTest:test334313e()
41950=GenericsRegressionTest:test347600()
41951=GenericsRegressionTest:test338350()
41952=GenericsRegressionTest:test425719()
41953=GenericsRegressionTest:testBug399527_corrected()
41954=GenericsRegressionTest:test440019()
41955=GenericsRegressionTest:test446235()
41956=GenericsRegressionTest:test334313()
41957=GenericsRegressionTest:testBug456924()
41958=GenericsRegressionTest:test339478q()
41959=GenericsRegressionTest:test322817f()
41960=GenericsRegressionTest:test489636()
41961=GenericsRegressionTest:test334622c()
41962=GenericsRegressionTest:testBug408441()
41963=GenericsRegressionTest:testBug395002_full()
41964=GenericsRegressionTest:test322817h()
41965=GenericsRegressionTest:test425719b()
41966=GenericsRegressionTest:testBug395002_2()
41967=GenericsRegressionTest:test448795()
41968=GenericsRegressionTest:test438246()
41969=GenericsRegressionTest:testBug413958_1()
41970=GenericsRegressionTest:test425203()
41971=GenericsRegressionTest:test334622a()
41972=GenericsRegressionTest:testBug430987()
41973=GenericsRegressionTest:test339478b()
41974=GenericsRegressionTest:test282152e()
41975=GenericsRegressionTest:test322817j()
41976=GenericsRegressionTest:test427282()
41977=GenericsRegressionTest:testBug430686()
41978=GenericsRegressionTest:testBug395002_3()
41979=GenericsRegressionTest:test427411()
41980=GenericsRegressionTest:test339478d()
41981=GenericsRegressionTest:testBug456459c()
41982=GenericsRegressionTest:test421922()
41983=GenericsRegressionTest:test448795c()
41984=GenericsRegressionTest:test282152c()
41985=GenericsRegressionTest:test429733c()
41986=GenericsRegressionTest:test428019()
41987=GenericsRegressionTest:test337751a()
41988=GenericsRegressionTest:test337962()
41989=GenericsRegressionTest:test347426()
41990=GenericsRegressionTest:test282152()
41991=GenericsRegressionTest:test339478f()
41992=GenericsRegressionTest:testBug431581()
41993=GenericsRegressionTest:test448795a()
41994=GenericsRegressionTest:test334121()
41995=GenericsRegressionTest:testBug405706b()
41996=GenericsRegressionTest:test426678()
41997=GenericsRegressionTest:test322531f()
41998=GenericsRegressionTest:test426534()
41999=GenericsRegressionTest:testBug434570_comment3()
42000=GenericsRegressionTest:test339478h()
42001=GenericsRegressionTest:testBug431408()
42002=GenericsRegressionTest:test334313c()
42003=GenericsRegressionTest:test385780()
42004=GenericsRegressionTest:test426589()
42005=GenericsRegressionTest:testBug454644()
42006=GenericsRegressionTest:test347426b()
42007=GenericsRegressionTest:suite()
42008=GenericsRegressionTest:test339478j()
42009=GenericsRegressionTest:test440019_c9()
42010=GenericsRegressionTest:testBug427438c3()
42011=GenericsRegressionTest:testBug456459a()
42012=AssistMyStyleImpl:Factory:newAssistMyStyle()
42013=AssistMyStyle:Factory:newAssistMyStyle()
42014=AssistMyStyle:someMethod()
42015=AssistMyStyleImpl:anotherMethodWithLongNameToForceCodeformaterToBreakTheLine()
42016=GeneralConcept:anotherMethodWithLongNameToForceCodeformaterToBreakTheLine()
42017=AssistMyStyleImpl:someMethod()
42018=Test:foo()
42019=Test:bar()
42020=ClassFileTests:testWorkingCopy11()
42021=ClassFileTests:testSourceRange3()
42022=ClassFileTests:testGetCategories03()
42023=ClassFileTests:testExceptionTypes2()
42024=ClassFileTests:testBug316937()
42025=ClassFileTests:testGetChildrenForCategory02()
42026=ClassFileTests:testWorkingCopy02()
42027=ClassFileTests:tearDownSuite()
42028=ClassFileTests:setUpSuite()
42029=ClassFileTests:testGetCategories05()
42030=ClassFileTests:testJarLikeRootFolder()
42031=ClassFileTests:testAnnotations09()
42032=ClassFileTests:testWorkingCopy04()
42033=ClassFileTests:testGetCategories10()
42034=ClassFileTests:testParameterNames01()
42035=ClassFileTests:testAnnotations22()
42036=ClassFileTests:testParameterTypeSignatures1()
42037=ClassFileTests:testBug246594a()
42038=ClassFileTests:testGetCategories01()
42039=ClassFileTests:testGetSuperclassTypeSignature()
42040=ClassFileTests:testWorkingCopy09()
42041=ClassFileTests:testAnnotations20()
42042=ClassFileTests:testParameterTypeSignatures3()
42043=ClassFileTests:testAnnotations02()
42044=ClassFileTests:testGetBytes()
42045=ClassFileTests:testTypeParameter()
42046=ClassFileTests:testAnnotations13()
42047=ClassFileTests:tearDown()
42048=ClassFileTests:testWorkingCopy07()
42049=ClassFileTests:testAnnotations26()
42050=ClassFileTests:testGetFullyQualifiedName5()
42051=ClassFileTests:testDefaultValue2()
42052=ClassFileTests:testParameterTypeSignatures5()
42053=ClassFileTests:testAnnotations11()
42054=ClassFileTests:testGetFullyQualifiedName1()
42055=ClassFileTests:testAnnotations24()
42056=ClassFileTests:testGetFullyQualifiedName3()
42057=ClassFileTests:testDefaultValue4()
42058=ClassFileTests:testBug246594()
42059=ClassFileTests:testAnnotations06()
42060=ClassFileTests:suite()
42061=ClassFileTests:testAnnotations17()
42062=ClassFileTests:createClassFile(String)
42063=ClassFileTests:testRawParameterNames01()
42064=ClassFileTests:testGetCategories06()
42065=ClassFileTests:testReturnType1()
42066=ClassFileTests:testAnnotations04()
42067=ClassFileTests:testSourceRange1()
42068=ClassFileTests:testAnnotations15()
42069=ClassFileTests:testGetFullyQualifiedName7()
42070=ClassFileTests:testGetCategories08()
42071=ClassFileTests:testGetChildrenForCategory01()
42072=ClassFileTests:testWorkingCopy10()
42073=ClassFileTests:testWorkingCopy01()
42074=ClassFileTests:testSourceRange2()
42075=ClassFileTests:testGetCategories02()
42076=ClassFileTests:testParameterNames02()
42077=ClassFileTests:testAnnotations08()
42078=ClassFileTests:testAnnotations19()
42079=ClassFileTests:testReturnType2()
42080=ClassFileTests:testWorkingCopy03()
42081=ClassFileTests:testGetCategories04()
42082=ClassFileTests:testExceptionTypes1()
42083=ClassFileTests:testAnnotations21()
42084=ClassFileTests:ClassFileTests(String)
42085=ClassFileTests:testWorkingCopy05()
42086=ClassFileTests:testAnnotations10()
42087=ClassFileTests:testParameterTypeSignatures2()
42088=ClassFileTests:testWorkingCopy08()
42089=ClassFileTests:testAnnotations25()
42090=ClassFileTests:testGetFullyQualifiedName4()
42091=ClassFileTests:testDefaultValue1()
42092=ClassFileTests:testGetResource()
42093=ClassFileTests:testParameterTypeSignatures4()
42094=ClassFileTests:testAnnotations03()
42095=ClassFileTests:testAnnotations14()
42096=ClassFileTests:testWorkingCopy06()
42097=ClassFileTests:testAnnotations23()
42098=ClassFileTests:testVarargs()
42099=ClassFileTests:testDefaultValue3()
42100=ClassFileTests:testBug372687()
42101=ClassFileTests:testAnnotations01()
42102=ClassFileTests:testParameterTypeSignatures6()
42103=ClassFileTests:testAnnotations12()
42104=ClassFileTests:testGetFullyQualifiedName2()
42105=ClassFileTests:testGetFullyQualifiedName8()
42106=ClassFileTests:testGenericFieldGetTypeSignature()
42107=ClassFileTests:testGetCategories07()
42108=ClassFileTests:testAnnotations07()
42109=ClassFileTests:testGetSuperInterfaceTypeSignatures()
42110=ClassFileTests:testAnnotations18()
42111=ClassFileTests:testDotName()
42112=ClassFileTests:testGetFullyQualifiedName6()
42113=ClassFileTests:testRawParameterNames02()
42114=ClassFileTests:testGetCategories09()
42115=ClassFileTests:testAnnotations05()
42116=ClassFileTests:testAnnotations16()
42117=X:bar(double, double)
42118=X:eval(double, double)
42119=X:foo(String[])
42120=X:values()
42121=BaseProcessorEnv:getTypeDeclaration(String)
42122=BaseProcessorEnv:getIntType()
42123=BaseProcessorEnv:getPhase()
42124=BaseProcessorEnv:getTypeDefinitionBindingFromName(String)
42125=BaseProcessorEnv:getDeclarationsAnnotatedWith(AnnotationTypeDeclaration)
42126=BaseProcessorEnv:getDeclarationUtils()
42127=BaseProcessorEnv:getTypeUtils()
42128=BaseProcessorEnv:getTypeDefinitionBindingFromCorrectName(String)
42129=BaseProcessorEnv:getTypeBindingFromKey(String)
42130=BaseProcessorEnv:getMessager()
42131=BaseProcessorEnv:getProject()
42132=BaseProcessorEnv:initOptions(IJavaProject)
42133=BaseProcessorEnv:getDeclarations(ASTNode, List<Declaration>)
42134=BaseProcessorEnv:getVoidType()
42135=BaseProcessorEnv:getTypeBindings()
42136=BaseProcessorEnv:getDeclaringClass(IBinding)
42137=BaseProcessorEnv:getTypeDeclaration(IType)
42138=BaseProcessorEnv:searchLocallyForTypeDeclarations()
42139=BaseProcessorEnv:getFileForNode(ASTNode)
42140=BaseProcessorEnv:searchLocallyForBinding(IBinding)
42141=BaseProcessorEnv:getCurrentDietAST()
42142=BaseProcessorEnv:BaseRequestor:acceptAST(ICompilationUnit, CompilationUnit)
42143=BaseProcessorEnv:initPrimitives()
42144=BaseProcessorEnv:createASTs(IJavaProject, ICompilationUnit[], ASTRequestor)
42145=BaseProcessorEnv:getByteType()
42146=BaseProcessorEnv:addListener(AnnotationProcessorListener)
42147=BaseProcessorEnv:getSpecifiedTypeDeclarations()
42148=BaseProcessorEnv:removeListener(AnnotationProcessorListener)
42149=BaseProcessorEnv:getJavaProject()
42150=BaseProcessorEnv:getLongType()
42151=BaseProcessorEnv:getCompilationUnitForBinding(IBinding)
42152=BaseProcessorEnv:createAST(IJavaProject, ICompilationUnit)
42153=BaseProcessorEnv:searchLocallyForIFile(IBinding)
42154=BaseProcessorEnv:getFiler()
42155=BaseProcessorEnv:getAstCompilationUnit()
42156=BaseProcessorEnv:getCharType()
42157=BaseProcessorEnv:getAllPackageFragmentRoots()
42158=BaseProcessorEnv:getBindingFromKey(String, ICompilationUnit)
42159=BaseProcessorEnv:getPackageBindingKey(String)
42160=BaseProcessorEnv:getOptions()
42161=BaseProcessorEnv:getFloatType()
42162=BaseProcessorEnv:getTypeDeclarations()
42163=BaseProcessorEnv:getFile()
42164=BaseProcessorEnv:getDoubleType()
42165=BaseProcessorEnv:getASTNodesWithAnnotations()
42166=BaseProcessorEnv:getTypeBindings(ITypeBinding, List<ITypeBinding>)
42167=BaseProcessorEnv:BaseProcessorEnv(CompilationUnit, IFile, IJavaProject, Phase)
42168=BaseProcessorEnv:getASTNodeForBinding(IBinding)
42169=BaseProcessorEnv:getBooleanType()
42170=BaseProcessorEnv:getICompilationUnitForTopLevelType(String)
42171=BaseProcessorEnv:getDeclaringFileForBinding(IBinding)
42172=BaseProcessorEnv:getShortType()
42173=BaseProcessorEnv:getPackage(String)
42174=BaseProcessorEnv:getAptProject()
42175=BaseProcessorEnv:BaseRequestor:BaseRequestor(ICompilationUnit[])
42176=BaseProcessorEnv:getDeclarationsAnnotatedWith(ITypeBinding)
42177=GenericsRegressionTest_1_8:testBug428307()
42178=GenericsRegressionTest_1_8:testBug425063()
42179=GenericsRegressionTest_1_8:testBug427168()
42180=GenericsRegressionTest_1_8:testBug496578()
42181=GenericsRegressionTest_1_8:testBug432626()
42182=GenericsRegressionTest_1_8:testBug426537b()
42183=GenericsRegressionTest_1_8:testBug496761()
42184=GenericsRegressionTest_1_8:testBug496675_problem()
42185=GenericsRegressionTest_1_8:testBug424637()
42186=GenericsRegressionTest_1_8:testBug488672()
42187=GenericsRegressionTest_1_8:testBug424195_comment2()
42188=GenericsRegressionTest_1_8:testBug426290()
42189=GenericsRegressionTest_1_8:testBug424930b()
42190=GenericsRegressionTest_1_8:testBug424195a()
42191=GenericsRegressionTest_1_8:testBug425798b()
42192=GenericsRegressionTest_1_8:testBug429203()
42193=GenericsRegressionTest_1_8:test445725()
42194=GenericsRegressionTest_1_8:testBug424415c()
42195=GenericsRegressionTest_1_8:testBug426540()
42196=GenericsRegressionTest_1_8:testBug426366()
42197=GenericsRegressionTest_1_8:test434394()
42198=GenericsRegressionTest_1_8:testBug424591_comment20()
42199=GenericsRegressionTest_1_8:testBug435462()
42200=GenericsRegressionTest_1_8:testBug426048()
42201=GenericsRegressionTest_1_8:testBug423504()
42202=GenericsRegressionTest_1_8:_testBug487746_comment9()
42203=GenericsRegressionTest_1_8:testBug445231()
42204=GenericsRegressionTest_1_8:testBug427164()
42205=GenericsRegressionTest_1_8:testBug485373()
42206=GenericsRegressionTest_1_8:testBug452788a()
42207=GenericsRegressionTest_1_8:testBug426764()
42208=GenericsRegressionTest_1_8:testBug424038()
42209=GenericsRegressionTest_1_8:testBug484448()
42210=GenericsRegressionTest_1_8:testBug425951()
42211=GenericsRegressionTest_1_8:testBug420525()
42212=GenericsRegressionTest_1_8:testBug449824a()
42213=GenericsRegressionTest_1_8:testBug418807()
42214=GenericsRegressionTest_1_8:testBug429430c()
42215=GenericsRegressionTest_1_8:testBug429430()
42216=GenericsRegressionTest_1_8:test439594()
42217=GenericsRegressionTest_1_8:testBug426998a()
42218=GenericsRegressionTest_1_8:testBug498362_comment0()
42219=GenericsRegressionTest_1_8:test426633c()
42220=GenericsRegressionTest_1_8:testBug473657()
42221=GenericsRegressionTest_1_8:testBug487746_comment2()
42222=GenericsRegressionTest_1_8:test447767()
42223=GenericsRegressionTest_1_8:testBug452788c()
42224=GenericsRegressionTest_1_8:testBug425152()
42225=GenericsRegressionTest_1_8:testBug471280_comment0()
42226=GenericsRegressionTest_1_8:testBug485593()
42227=GenericsRegressionTest_1_8:testBug424712a()
42228=GenericsRegressionTest_1_8:testBug487563()
42229=GenericsRegressionTest_1_8:testBug498113a()
42230=GenericsRegressionTest_1_8:testBug470958()
42231=GenericsRegressionTest_1_8:testBug428291()
42232=GenericsRegressionTest_1_8:testBug485057()
42233=GenericsRegressionTest_1_8:testBug429430a()
42234=GenericsRegressionTest_1_8:testBug432110()
42235=GenericsRegressionTest_1_8:testBug426542()
42236=GenericsRegressionTest_1_8:testBug466487()
42237=GenericsRegressionTest_1_8:testBug496942()
42238=GenericsRegressionTest_1_8:testBug428198b()
42239=GenericsRegressionTest_1_8:testBug425142_minimal()
42240=GenericsRegressionTest_1_8:testBug424591_comment20_variant()
42241=GenericsRegressionTest_1_8:testBug426537()
42242=GenericsRegressionTest_1_8:testBug429090()
42243=GenericsRegressionTest_1_8:testBug425951a()
42244=GenericsRegressionTest_1_8:testBug496675_comment4()
42245=GenericsRegressionTest_1_8:testBug496624()
42246=GenericsRegressionTest_1_8:testBug491934()
42247=GenericsRegressionTest_1_8:test426633d()
42248=GenericsRegressionTest_1_8:testBug492939b()
42249=GenericsRegressionTest_1_8:testBug424906()
42250=GenericsRegressionTest_1_8:testBug420525a()
42251=GenericsRegressionTest_1_8:testBug479167()
42252=GenericsRegressionTest_1_8:testBug424075()
42253=GenericsRegressionTest_1_8:testBug469753()
42254=GenericsRegressionTest_1_8:test428524()
42255=GenericsRegressionTest_1_8:testBug470667()
42256=GenericsRegressionTest_1_8:testBug497603()
42257=GenericsRegressionTest_1_8:testBug496574()
42258=GenericsRegressionTest_1_8:testBug497193()
42259=GenericsRegressionTest_1_8:testBug423839()
42260=GenericsRegressionTest_1_8:testBug425142_full()
42261=GenericsRegressionTest_1_8:testBug427223()
42262=GenericsRegressionTest_1_8:GenericsRegressionTest_1_8(String)
42263=GenericsRegressionTest_1_8:testBug424205b()
42264=GenericsRegressionTest_1_8:testBug463728()
42265=GenericsRegressionTest_1_8:testBug480075()
42266=GenericsRegressionTest_1_8:testBug426671_full()
42267=GenericsRegressionTest_1_8:testBug433158()
42268=GenericsRegressionTest_1_8:testBug428275()
42269=GenericsRegressionTest_1_8:testBug401850a()
42270=GenericsRegressionTest_1_8:testBug429490()
42271=GenericsRegressionTest_1_8:testBug429090_comment1()
42272=GenericsRegressionTest_1_8:testBug428264()
42273=GenericsRegressionTest_1_8:testBug429424()
42274=GenericsRegressionTest_1_8:testBug424403()
42275=GenericsRegressionTest_1_8:testBug424710()
42276=GenericsRegressionTest_1_8:testBug488795()
42277=GenericsRegressionTest_1_8:testBug472426()
42278=GenericsRegressionTest_1_8:testBug437007()
42279=GenericsRegressionTest_1_8:testBug424930c()
42280=GenericsRegressionTest_1_8:testBug425798()
42281=GenericsRegressionTest_1_8:testBug425183_comment8()
42282=GenericsRegressionTest_1_8:testBug428198()
42283=GenericsRegressionTest_1_8:testBug426671_medium()
42284=GenericsRegressionTest_1_8:test437444_c113()
42285=GenericsRegressionTest_1_8:testBug457079()
42286=GenericsRegressionTest_1_8:testBug496579()
42287=GenericsRegressionTest_1_8:testBug471280_comment3()
42288=GenericsRegressionTest_1_8:testBug424712b()
42289=GenericsRegressionTest_1_8:testBug424845()
42290=GenericsRegressionTest_1_8:testBug424930a()
42291=GenericsRegressionTest_1_8:testBug428294()
42292=GenericsRegressionTest_1_8:testBug424195b()
42293=GenericsRegressionTest_1_8:suite()
42294=GenericsRegressionTest_1_8:testBug425798a()
42295=GenericsRegressionTest_1_8:testBug423070()
42296=GenericsRegressionTest_1_8:testBug429490_comment33()
42297=GenericsRegressionTest_1_8:testBug426998b()
42298=GenericsRegressionTest_1_8:testBug420525_mini()
42299=GenericsRegressionTest_1_8:test433852()
42300=GenericsRegressionTest_1_8:test428352()
42301=GenericsRegressionTest_1_8:testBug441734()
42302=GenericsRegressionTest_1_8:testBug470942()
42303=GenericsRegressionTest_1_8:testBug496675()
42304=GenericsRegressionTest_1_8:testBug455945()
42305=GenericsRegressionTest_1_8:testBug433845()
42306=GenericsRegressionTest_1_8:testBug468999()
42307=GenericsRegressionTest_1_8:testClass()
42308=GenericsRegressionTest_1_8:testBug496886()
42309=GenericsRegressionTest_1_8:testBug428786()
42310=GenericsRegressionTest_1_8:testBug425493()
42311=GenericsRegressionTest_1_8:testBug427504()
42312=GenericsRegressionTest_1_8:testBug452788b()
42313=GenericsRegressionTest_1_8:testBug430296()
42314=GenericsRegressionTest_1_8:testBug431577()
42315=GenericsRegressionTest_1_8:testBug488649()
42316=GenericsRegressionTest_1_8:testBug425153()
42317=GenericsRegressionTest_1_8:testBug449824b()
42318=GenericsRegressionTest_1_8:testBug428019()
42319=GenericsRegressionTest_1_8:testBug426652()
42320=GenericsRegressionTest_1_8:testBug498113b()
42321=GenericsRegressionTest_1_8:testBug427626()
42322=GenericsRegressionTest_1_8:testBug435187()
42323=GenericsRegressionTest_1_8:test427218_reduced()
42324=GenericsRegressionTest_1_8:test428352b()
42325=GenericsRegressionTest_1_8:testBug429430b()
42326=GenericsRegressionTest_1_8:testBug426676()
42327=GenericsRegressionTest_1_8:testBug470826()
42328=GenericsRegressionTest_1_8:testBug430759()
42329=GenericsRegressionTest_1_8:testConditionalExpression1()
42330=GenericsRegressionTest_1_8:testBug426537c()
42331=GenericsRegressionTest_1_8:test442769()
42332=GenericsRegressionTest_1_8:testBug427483()
42333=GenericsRegressionTest_1_8:test427218()
42334=GenericsRegressionTest_1_8:testBug429430b2()
42335=GenericsRegressionTest_1_8:testBug492939a()
42336=GenericsRegressionTest_1_8:testBug470542()
42337=GenericsRegressionTest_1_8:testBug434483()
42338=GenericsRegressionTest_1_8:testBug477751()
42339=GenericsRegressionTest_1_8:testBug425278()
42340=GenericsRegressionTest_1_8:testConditionalExpression2()
42341=GenericsRegressionTest_1_8:testBug425460orig()
42342=GenericsRegressionTest_1_8:testBug483019a()
42343=GenericsRegressionTest_1_8:testBug442245()
42344=GenericsRegressionTest_1_8:testBug433825()
42345=GenericsRegressionTest_1_8:testBug478848()
42346=GenericsRegressionTest_1_8:testBug435767()
42347=GenericsRegressionTest_1_8:testBug426671b()
42348=GenericsRegressionTest_1_8:testBug433825a()
42349=GenericsRegressionTest_1_8:testBug458396()
42350=GenericsRegressionTest_1_8:testBug435689()
42351=GenericsRegressionTest_1_8:testBug425156()
42352=GenericsRegressionTest_1_8:testBug426778()
42353=GenericsRegressionTest_1_8:testBug424631()
42354=GenericsRegressionTest_1_8:testBug432626_reduced()
42355=GenericsRegressionTest_1_8:testBug427479b()
42356=GenericsRegressionTest_1_8:testBug427196()
42357=GenericsRegressionTest_1_8:test426633e()
42358=GenericsRegressionTest_1_8:test437444_c113a()
42359=GenericsRegressionTest_1_8:testBug483019()
42360=GenericsRegressionTest_1_8:testBug491485()
42361=GenericsRegressionTest_1_8:testBug427224()
42362=GenericsRegressionTest_1_8:testBug414631()
42363=GenericsRegressionTest_1_8:testBug483228a()
42364=GenericsRegressionTest_1_8:testBug464496()
42365=GenericsRegressionTest_1_8:testBug426836()
42366=GenericsRegressionTest_1_8:testBug497239()
42367=GenericsRegressionTest_1_8:testBug401850b()
42368=GenericsRegressionTest_1_8:testBug424591_comment22()
42369=GenericsRegressionTest_1_8:testBug428811()
42370=GenericsRegressionTest_1_8:testBug489976()
42371=GenericsRegressionTest_1_8:testBug424205a()
42372=GenericsRegressionTest_1_8:testBug424415b()
42373=GenericsRegressionTest_1_8:testBug427479()
42374=GenericsRegressionTest_1_8:testBug498362_comment5()
42375=GenericsRegressionTest_1_8:testBug426671_ok()
42376=GenericsRegressionTest_1_8:testBug425460variant()
42377=GenericsRegressionTest_1_8:testAllocationBoxingCompatibility()
42378=GenericsRegressionTest_1_8:testBug482416()
42379=GenericsRegressionTest_1_8:testBug424415()
42380=GenericsRegressionTest_1_8:test442916()
42381=GenericsRegressionTest_1_8:testBug425783()
42382=A:m()
42383=B:m()
42384=Example:bar()
42385=Example:foo()
42386=Example:foo2()
42387=LocalVariableAttribute:getLocalVariableTableLength()
42388=LocalVariableAttribute:getLocalVariableTable()
42389=LocalVariableAttribute:LocalVariableAttribute(byte[], IConstantPool, int)
42390=ExternalAnnotationProvider:TypeParametersAnnotationWalker:toTypeParameter(boolean, int)
42391=ExternalAnnotationProvider:initialize(InputStream)
42392=ExternalAnnotationProvider:DispatchingAnnotationWalker:toReceiver()
42393=ExternalAnnotationProvider:forField(char[], char[], LookupEnvironment)
42394=ExternalAnnotationProvider:BasicAnnotationWalker:toReceiver()
42395=ExternalAnnotationProvider:SuperTypesAnnotationWalker:toField()
42396=ExternalAnnotationProvider:toString()
42397=ExternalAnnotationProvider:BasicAnnotationWalker:toNextArrayDimension()
42398=ExternalAnnotationProvider:MethodAnnotationWalker:toTypeParameterBounds(boolean, int)
42399=ExternalAnnotationProvider:DispatchingAnnotationWalker:toTypeParameterBounds(boolean, int)
42400=ExternalAnnotationProvider:FieldAnnotationWalker:toMethodReturn()
42401=ExternalAnnotationProvider:BasicAnnotationWalker:toTypeArgument(int)
42402=ExternalAnnotationProvider:DispatchingAnnotationWalker:DispatchingAnnotationWalker(LookupEnvironment)
42403=ExternalAnnotationProvider:BasicAnnotationWalker:toTypeParameter(boolean, int)
42404=ExternalAnnotationProvider:ExternalAnnotationProvider(InputStream, String)
42405=ExternalAnnotationProvider:SuperTypesAnnotationWalker:toMethodParameter(short)
42406=ExternalAnnotationProvider:FieldAnnotationWalker:toThrows(int)
42407=ExternalAnnotationProvider:FieldAnnotationWalker:FieldAnnotationWalker(char[], int, LookupEnvironment)
42408=ExternalAnnotationProvider:BasicAnnotationWalker:getAnnotationsAtCursor(int)
42409=ExternalAnnotationProvider:DispatchingAnnotationWalker:toSupertype(short, char[])
42410=ExternalAnnotationProvider:MethodAnnotationWalker:toMethodParameter(short)
42411=ExternalAnnotationProvider:DispatchingAnnotationWalker:toThrows(int)
42412=ExternalAnnotationProvider:DispatchingAnnotationWalker:toTypeArgument(int)
42413=ExternalAnnotationProvider:TypeParametersAnnotationWalker:toThrows(int)
42414=ExternalAnnotationProvider:MethodAnnotationWalker:toTypeParameter(boolean, int)
42415=ExternalAnnotationProvider:TypeParametersAnnotationWalker:toMethodParameter(short)
42416=ExternalAnnotationProvider:DispatchingAnnotationWalker:toNextArrayDimension()
42417=ExternalAnnotationProvider:MethodAnnotationWalker:toField()
42418=ExternalAnnotationProvider:initAnnotations(LookupEnvironment)
42419=ExternalAnnotationProvider:assertClassHeader(String, String)
42420=ExternalAnnotationProvider:SuperTypesAnnotationWalker:toMethodReturn()
42421=ExternalAnnotationProvider:MethodAnnotationWalker:toThrows(int)
42422=ExternalAnnotationProvider:BasicAnnotationWalker:toNextNestedType()
42423=ExternalAnnotationProvider:SingleMarkerAnnotation:getBinaryTypeName(char[][])
42424=ExternalAnnotationProvider:extractSignature(String)
42425=ExternalAnnotationProvider:BasicAnnotationWalker:toSupertype(short, char[])
42426=ExternalAnnotationProvider:MethodAnnotationWalker:toMethodReturn()
42427=ExternalAnnotationProvider:TypeParametersAnnotationWalker:toTypeBound(short)
42428=ExternalAnnotationProvider:IMethodAnnotationWalker:getParameterCount()
42429=ExternalAnnotationProvider:BasicAnnotationWalker:wrapperWithStart(int)
42430=ExternalAnnotationProvider:DispatchingAnnotationWalker:toMethodParameter(short)
42431=ExternalAnnotationProvider:DispatchingAnnotationWalker:getAnnotationsAtCursor(int)
42432=ExternalAnnotationProvider:SuperTypesAnnotationWalker:SuperTypesAnnotationWalker(char[], LookupEnvironment)
42433=ExternalAnnotationProvider:BasicAnnotationWalker:toTypeParameterBounds(boolean, int)
42434=ExternalAnnotationProvider:BasicAnnotationWalker:toWildcardBound()
42435=ExternalAnnotationProvider:trimTail(String)
42436=ExternalAnnotationProvider:BasicAnnotationWalker:toTypeBound(short)
42437=ExternalAnnotationProvider:TypeParametersAnnotationWalker:TypeParametersAnnotationWalker(char[], int, int, int[], LookupEnvironment)
42438=ExternalAnnotationProvider:MethodAnnotationWalker:MethodAnnotationWalker(char[], int, LookupEnvironment)
42439=ExternalAnnotationProvider:MethodAnnotationWalker:typeEnd(int)
42440=ExternalAnnotationProvider:FieldAnnotationWalker:toField()
42441=ExternalAnnotationProvider:BasicAnnotationWalker:BasicAnnotationWalker(char[], int, LookupEnvironment)
42442=ExternalAnnotationProvider:DispatchingAnnotationWalker:toNextNestedType()
42443=ExternalAnnotationProvider:DispatchingAnnotationWalker:toTypeParameter(boolean, int)
42444=ExternalAnnotationProvider:TypeParametersAnnotationWalker:toField()
42445=ExternalAnnotationProvider:TypeParametersAnnotationWalker:toMethodReturn()
42446=ExternalAnnotationProvider:forMethod(char[], char[], LookupEnvironment)
42447=ExternalAnnotationProvider:SuperTypesAnnotationWalker:toThrows(int)
42448=ExternalAnnotationProvider:forTypeHeader(LookupEnvironment)
42449=ExternalAnnotationProvider:MethodAnnotationWalker:getParameterCount()
42450=ExternalAnnotationProvider:SingleMarkerAnnotation:getElementValuePairs()
42451=ExternalAnnotationProvider:DispatchingAnnotationWalker:toTypeBound(short)
42452=ExternalAnnotationProvider:TypeParametersAnnotationWalker:toTypeParameterBounds(boolean, int)
42453=ExternalAnnotationProvider:DispatchingAnnotationWalker:toWildcardBound()
42454=ExternalAnnotationProvider:FieldAnnotationWalker:toMethodParameter(short)
42455=ExternalAnnotationProvider:TypeParametersAnnotationWalker:getAnnotationsAtCursor(int)
42456=ExternalAnnotationProvider:DispatchingAnnotationWalker:toField()
42457=ExternalAnnotationProvider:DispatchingAnnotationWalker:toMethodReturn()
42458=InfrastructureTests:suite()
42459=InfrastructureTests:InfrastructureTests(String)
42460=InfrastructureTests:testProjectBuild()
42461=InfrastructureTests:testPluginLoaded()
42462=InfrastructureTests:testFactoryPathContents()
42463=F:foo()
42464=SourceOrderDeclScanner:SourceOrderComparator:compare(Declaration, Declaration)
42465=SourceOrderDeclScanner:SourceOrderDeclScanner(DeclarationVisitor, DeclarationVisitor)
42466=SourceOrderDeclScanner:SourceOrderComparator:compareEqualPosition(Declaration, Declaration)
42467=SourceOrderDeclScanner:visitClassDeclaration(ClassDeclaration)
42468=SourceOrderDeclScanner:visitExecutableDeclaration(ExecutableDeclaration)
42469=SourceOrderDeclScanner:SourceOrderComparator:equals(Declaration, Declaration)
42470=SourceOrderDeclScanner:SourceOrderComparator:SourceOrderComparator()
42471=SourceOrderDeclScanner:visitTypeDeclaration(TypeDeclaration)
42472=HashtableOfIntValues:clone()
42473=HashtableOfIntValues:HashtableOfIntValues(int)
42474=HashtableOfIntValues:toString()
42475=HashtableOfIntValues:size()
42476=HashtableOfIntValues:removeKey(char[])
42477=HashtableOfIntValues:put(char[], int)
42478=HashtableOfIntValues:HashtableOfIntValues()
42479=HashtableOfIntValues:containsKey(char[])
42480=HashtableOfIntValues:get(char[])
42481=HashtableOfIntValues:rehash()
42482=TestUtils:convertToIndependentLineDelimiter(String)
42483=TestUtils:concatPath(String)
42484=HashtableOfInt:HashtableOfInt(int)
42485=HashtableOfInt:put(int, Object)
42486=HashtableOfInt:get(int)
42487=HashtableOfInt:toString()
42488=HashtableOfInt:rehash()
42489=HashtableOfInt:HashtableOfInt()
42490=HashtableOfInt:size()
42491=HashtableOfInt:containsKey(int)
42492=IndexLocation:createIndexLocation(URL)
42493=IndexLocation:createNewFile()
42494=IndexLocation:getInputStream()
42495=IndexLocation:getUrl()
42496=IndexLocation:startsWith(IPath)
42497=IndexLocation:getIndexFile()
42498=IndexLocation:isParticipantIndex()
42499=IndexLocation:toString()
42500=IndexLocation:getCanonicalFilePath()
42501=IndexLocation:fileName()
42502=IndexLocation:lastModified()
42503=IndexLocation:IndexLocation(URL)
42504=IndexLocation:length()
42505=IndexLocation:IndexLocation(File)
42506=IndexLocation:delete()
42507=IndexLocation:hashCode()
42508=IndexLocation:exists()
42509=IndexLocation:close()
42510=ResolveTests2:testBug227822a()
42511=ResolveTests2:testBug232880g()
42512=ResolveTests2:testBug227822c()
42513=ResolveTests2:testBug232880e()
42514=ResolveTests2:suite()
42515=ResolveTests2:testBug232880c()
42516=ResolveTests2:testBug249027b()
42517=ResolveTests2:testBug232880a()
42518=ResolveTests2:testBug343693()
42519=ResolveTests2:testBug232880i()
42520=ResolveTests2:testBug356325()
42521=ResolveTests2:testBug227822b()
42522=ResolveTests2:testBug232880h()
42523=ResolveTests2:testBug227822d()
42524=ResolveTests2:testBug232880f()
42525=ResolveTests2:testBug232880b()
42526=ResolveTests2:testBug249027a()
42527=ResolveTests2:testBug232880d()
42528=ResolveTests2:tearDownSuite()
42529=ResolveTests2:ResolveTests2(String)
42530=ResolveTests2:setUpSuite()
42531=ResolveTests2:testBug349486()
42532=ResolveTests2:testBug232880j()
42533=CompletionTestsRequestor:getResultsWithPosition()
42534=CompletionTestsRequestor:getResults(boolean, boolean)
42535=CompletionTestsRequestor:getResult(int, boolean, boolean)
42536=CompletionTestsRequestor:getResults()
42537=CompletionTestsRequestor:acceptCommon(CompletionProposal)
42538=CompletionTestsRequestor:quickSort(String[], int, int)
42539=CompletionTestsRequestor:toString()
42540=CompletionTestsRequestor:accept(CompletionProposal)
42541=SwitchCase:accept0(ASTVisitor)
42542=SwitchCase:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
42543=SwitchCase:getExpression()
42544=SwitchCase:internalStructuralPropertiesForType(int)
42545=SwitchCase:setExpression(Expression)
42546=SwitchCase:propertyDescriptors(int)
42547=SwitchCase:isDefault()
42548=SwitchCase:clone0(AST)
42549=SwitchCase:getNodeType0()
42550=SwitchCase:SwitchCase(AST)
42551=SwitchCase:treeSize()
42552=SwitchCase:memSize()
42553=SwitchCase:subtreeMatch0(ASTMatcher, Object)
42554=X14:foo()
42555=IndentationSwitchCaseBug:IBreakIndentation()
42556=X:m()
42557=X11:X11()
42558=X11:X11(boolean, boolean, boolean, int, Object, Object, boolean)
42559=CompilerOptions:set(Map)
42560=CompilerOptions:getVisibilityString(int)
42561=CompilerOptions:versionToJdkLevel(Object)
42562=CompilerOptions:CompilerOptions()
42563=CompilerOptions:getSeverity(long)
42564=CompilerOptions:getMap()
42565=CompilerOptions:CompilerOptions(Map)
42566=CompilerOptions:versionFromJdkLevel(long)
42567=CompilerOptions:updateSeverity(long, Object)
42568=CompilerOptions:getSeverityString(long)
42569=CompilerOptions:toString()
42570=CompletionTests_1_5:test0246()
42571=CompletionTests_1_5:test0039()
42572=CompletionTests_1_5:test0344()
42573=CompletionTests_1_5:test0137()
42574=CompletionTests_1_5:test0028()
42575=CompletionTests_1_5:test0190()
42576=CompletionTests_1_5:test0355()
42577=CompletionTests_1_5:test0126()
42578=CompletionTests_1_5:testFavoriteImports003()
42579=CompletionTests_1_5:test0224()
42580=CompletionTests_1_5:testBug351426j()
42581=CompletionTests_1_5:test0092()
42582=CompletionTests_1_5:test0015()
42583=CompletionTests_1_5:test0368()
42584=CompletionTests_1_5:test0322()
42585=CompletionTests_1_5:test0113()
42586=CompletionTests_1_5:testFavoriteImports014()
42587=CompletionTests_1_5:test0159()
42588=CompletionTests_1_5:test0211()
42589=CompletionTests_1_5:test0235()
42590=CompletionTests_1_5:test0004()
42591=CompletionTests_1_5:test0333()
42592=CompletionTests_1_5:testCamelCaseStaticMethodImport()
42593=CompletionTests_1_5:test0102()
42594=CompletionTests_1_5:testFavoriteImports025()
42595=CompletionTests_1_5:test0148()
42596=CompletionTests_1_5:test0200()
42597=CompletionTests_1_5:test0248()
42598=CompletionTests_1_5:testNameWithUnresolvedReferences002()
42599=CompletionTests_1_5:test0346()
42600=CompletionTests_1_5:testFavoriteImports001()
42601=CompletionTests_1_5:test0300()
42602=CompletionTests_1_5:test0139()
42603=CompletionTests_1_5:test0357()
42604=CompletionTests_1_5:testFavoriteImports012()
42605=CompletionTests_1_5:test0192()
42606=CompletionTests_1_5:test0311()
42607=CompletionTests_1_5:test0128()
42608=CompletionTests_1_5:test0226()
42609=CompletionTests_1_5:test0094()
42610=CompletionTests_1_5:testBug351426l()
42611=CompletionTests_1_5:test0017()
42612=CompletionTests_1_5:testCompletionWithUnboxing()
42613=CompletionTests_1_5:test0324()
42614=CompletionTests_1_5:testFavoriteImports023()
42615=CompletionTests_1_5:test0115()
42616=CompletionTests_1_5:test0213()
42617=CompletionTests_1_5:test0290()
42618=CompletionTests_1_5:test0081()
42619=CompletionTests_1_5:test0006()
42620=CompletionTests_1_5:test0237()
42621=CompletionTests_1_5:test0335()
42622=CompletionTests_1_5:test0104()
42623=CompletionTests_1_5:test0202()
42624=CompletionTests_1_5:test0070()
42625=CompletionTests_1_5:test0242()
42626=CompletionTests_1_5:test0288()
42627=CompletionTests_1_5:test0035()
42628=CompletionTests_1_5:test0133()
42629=CompletionTests_1_5:test0179()
42630=CompletionTests_1_5:test0351()
42631=CompletionTests_1_5:testBug326610b()
42632=CompletionTests_1_5:test0299()
42633=CompletionTests_1_5:test0024()
42634=CompletionTests_1_5:testFavoriteImports010()
42635=CompletionTests_1_5:test0122()
42636=CompletionTests_1_5:test0168()
42637=CompletionTests_1_5:test0362()
42638=CompletionTests_1_5:testBug351426f()
42639=CompletionTests_1_5:test0220()
42640=CompletionTests_1_5:test0011()
42641=CompletionTests_1_5:test0266()
42642=CompletionTests_1_5:test0057()
42643=CompletionTests_1_5:testFavoriteImports021()
42644=CompletionTests_1_5:test0120()
42645=CompletionTests_1_5:test0364()
42646=CompletionTests_1_5:test0155()
42647=CompletionTests_1_5:test0231()
42648=CompletionTests_1_5:test0277()
42649=CompletionTests_1_5:test0046()
42650=CompletionTests_1_5:testFavoriteImports032()
42651=CompletionTests_1_5:test0375()
42652=CompletionTests_1_5:testBug343865b()
42653=CompletionTests_1_5:test0340()
42654=CompletionTests_1_5:test0144()
42655=CompletionTests_1_5:testBug351426()
42656=CompletionTests_1_5:test0244()
42657=CompletionTests_1_5:test0037()
42658=CompletionTests_1_5:test0342()
42659=CompletionTests_1_5:test0135()
42660=CompletionTests_1_5:test0026()
42661=CompletionTests_1_5:test0353()
42662=CompletionTests_1_5:test0090()
42663=CompletionTests_1_5:test0124()
42664=CompletionTests_1_5:testBug351426h()
42665=CompletionTests_1_5:test0222()
42666=CompletionTests_1_5:test0013()
42667=CompletionTests_1_5:test0059()
42668=CompletionTests_1_5:test0268()
42669=CompletionTests_1_5:test0320()
42670=CompletionTests_1_5:test0366()
42671=CompletionTests_1_5:test0111()
42672=CompletionTests_1_5:test0157()
42673=CompletionTests_1_5:test0002()
42674=CompletionTests_1_5:test0048()
42675=CompletionTests_1_5:test0233()
42676=CompletionTests_1_5:test0279()
42677=CompletionTests_1_5:testFavoriteImports030()
42678=CompletionTests_1_5:test0331()
42679=CompletionTests_1_5:test0100()
42680=CompletionTests_1_5:test0146()
42681=CompletionTests_1_5:test0377()
42682=CompletionTests_1_5:setUpSuite()
42683=CompletionTests_1_5:testCompletionOnExtends2()
42684=CompletionTests_1_5:test0077()
42685=CompletionTests_1_5:test0329()
42686=CompletionTests_1_5:test0186()
42687=CompletionTests_1_5:testCompletionOnExtends()
42688=CompletionTests_1_5:test0140()
42689=CompletionTests_1_5:test0042()
42690=CompletionTests_1_5:test0295()
42691=CompletionTests_1_5:test0066()
42692=CompletionTests_1_5:test0175()
42693=CompletionTests_1_5:test0209()
42694=CompletionTests_1_5:test0031()
42695=CompletionTests_1_5:test0260()
42696=CompletionTests_1_5:test0099()
42697=CompletionTests_1_5:test0307()
42698=CompletionTests_1_5:test0162()
42699=CompletionTests_1_5:test0371()
42700=CompletionTests_1_5:test0064()
42701=CompletionTests_1_5:test0273()
42702=CompletionTests_1_5:test0088()
42703=CompletionTests_1_5:test0318()
42704=CompletionTests_1_5:test0197()
42705=CompletionTests_1_5:test0151()
42706=CompletionTests_1_5:testBug351426c()
42707=CompletionTests_1_5:test0053()
42708=CompletionTests_1_5:test0284()
42709=CompletionTests_1_5:testCompletionOnExtends4()
42710=CompletionTests_1_5:test0286()
42711=CompletionTests_1_5:test0033()
42712=CompletionTests_1_5:test0079()
42713=CompletionTests_1_5:test0142()
42714=CompletionTests_1_5:testCompletionWithUnboxing_1()
42715=CompletionTests_1_5:test0177()
42716=CompletionTests_1_5:testBug326610d()
42717=CompletionTests_1_5:test0297()
42718=CompletionTests_1_5:test0022()
42719=CompletionTests_1_5:test0068()
42720=CompletionTests_1_5:test0131()
42721=CompletionTests_1_5:test0166()
42722=CompletionTests_1_5:test0360()
42723=CompletionTests_1_5:test0201b()
42724=CompletionTests_1_5:test0262()
42725=CompletionTests_1_5:test0198b()
42726=CompletionTests_1_5:test0309()
42727=CompletionTests_1_5:test0264()
42728=CompletionTests_1_5:test0055()
42729=CompletionTests_1_5:test0164()
42730=CompletionTests_1_5:testEC001()
42731=CompletionTests_1_5:test0373()
42732=CompletionTests_1_5:test0199()
42733=CompletionTests_1_5:test0020()
42734=CompletionTests_1_5:test0275()
42735=CompletionTests_1_5:test0044()
42736=CompletionTests_1_5:test0153()
42737=CompletionTests_1_5:testFavoriteImports008()
42738=CompletionTests_1_5:test0188()
42739=CompletionTests_1_5:testBug351426e()
42740=CompletionTests_1_5:test0240()
42741=CompletionTests_1_5:test0325()
42742=CompletionTests_1_5:test0182()
42743=CompletionTests_1_5:testFavoriteImports019()
42744=CompletionTests_1_5:test0216()
42745=CompletionTests_1_5:test0291()
42746=CompletionTests_1_5:test0118()
42747=CompletionTests_1_5:test0084()
42748=CompletionTests_1_5:test0238()
42749=CompletionTests_1_5:test0171()
42750=CompletionTests_1_5:test0336()
42751=CompletionTests_1_5:test0009()
42752=CompletionTests_1_5:testBug310423a()
42753=CompletionTests_1_5:test0107()
42754=CompletionTests_1_5:test0073()
42755=CompletionTests_1_5:test0205()
42756=CompletionTests_1_5:test0349()
42757=CompletionTests_1_5:test0303()
42758=CompletionTests_1_5:test0060()
42759=CompletionTests_1_5:test0314()
42760=CompletionTests_1_5:test0193()
42761=CompletionTests_1_5:testFavoriteImports006()
42762=CompletionTests_1_5:test0227()
42763=CompletionTests_1_5:test0280()
42764=CompletionTests_1_5:test0129()
42765=CompletionTests_1_5:test0095()
42766=CompletionTests_1_5:test0196b()
42767=CompletionTests_1_5:test0327()
42768=CompletionTests_1_5:test0184()
42769=CompletionTests_1_5:testFavoriteImports017()
42770=CompletionTests_1_5:test0218()
42771=CompletionTests_1_5:test0040()
42772=CompletionTests_1_5:test0086()
42773=CompletionTests_1_5:test0293()
42774=CompletionTests_1_5:test0338()
42775=CompletionTests_1_5:test0173()
42776=CompletionTests_1_5:test0207()
42777=CompletionTests_1_5:test0109()
42778=CompletionTests_1_5:test0075()
42779=CompletionTests_1_5:test0305()
42780=CompletionTests_1_5:test0160()
42781=CompletionTests_1_5:test0062()
42782=CompletionTests_1_5:test0271()
42783=CompletionTests_1_5:test0316()
42784=CompletionTests_1_5:test0195()
42785=CompletionTests_1_5:test0229()
42786=CompletionTests_1_5:testFavoriteImports004()
42787=CompletionTests_1_5:test0051()
42788=CompletionTests_1_5:test0097()
42789=CompletionTests_1_5:test0282()
42790=CompletionTests_1_5:test0269()
42791=CompletionTests_1_5:test0016()
42792=CompletionTests_1_5:test0367()
42793=CompletionTests_1_5:test0321()
42794=CompletionTests_1_5:test0114()
42795=CompletionTests_1_5:testFavoriteImports015()
42796=CompletionTests_1_5:test0212()
42797=CompletionTests_1_5:test0080()
42798=CompletionTests_1_5:test0234()
42799=CompletionTests_1_5:test0005()
42800=CompletionTests_1_5:test0332()
42801=CompletionTests_1_5:test0103()
42802=CompletionTests_1_5:test0149()
42803=CompletionTests_1_5:test0378()
42804=CompletionTests_1_5:testFavoriteImports026()
42805=CompletionTests_1_5:test0201()
42806=CompletionTests_1_5:test0247()
42807=CompletionTests_1_5:test0038()
42808=CompletionTests_1_5:test0345()
42809=CompletionTests_1_5:test0136()
42810=CompletionTests_1_5:test0027()
42811=CompletionTests_1_5:test0356()
42812=CompletionTests_1_5:test0310()
42813=CompletionTests_1_5:testFavoriteImports002()
42814=CompletionTests_1_5:test0125()
42815=CompletionTests_1_5:test0223()
42816=CompletionTests_1_5:test0091()
42817=CompletionTests_1_5:testBug351426k()
42818=CompletionTests_1_5:test0018()
42819=CompletionTests_1_5:test0323()
42820=CompletionTests_1_5:test0369()
42821=CompletionTests_1_5:test0180()
42822=CompletionTests_1_5:testFavoriteImports013()
42823=CompletionTests_1_5:test0116()
42824=CompletionTests_1_5:test0214()
42825=CompletionTests_1_5:test0082()
42826=CompletionTests_1_5:test0007()
42827=CompletionTests_1_5:test0236()
42828=CompletionTests_1_5:test0334()
42829=CompletionTests_1_5:testFavoriteImports024()
42830=CompletionTests_1_5:test0105()
42831=CompletionTests_1_5:test0203()
42832=CompletionTests_1_5:test0071()
42833=CompletionTests_1_5:test482775()
42834=CompletionTests_1_5:testNameWithUnresolvedReferences001()
42835=CompletionTests_1_5:test0249()
42836=CompletionTests_1_5:test0301()
42837=CompletionTests_1_5:test0347()
42838=CompletionTests_1_5:test0138()
42839=CompletionTests_1_5:test0029()
42840=CompletionTests_1_5:test0312()
42841=CompletionTests_1_5:test0358()
42842=CompletionTests_1_5:testFavoriteImports011()
42843=CompletionTests_1_5:test0191()
42844=CompletionTests_1_5:test0127()
42845=CompletionTests_1_5:test0225()
42846=CompletionTests_1_5:test0093()
42847=CompletionTests_1_5:test0265()
42848=CompletionTests_1_5:test0012()
42849=CompletionTests_1_5:test0058()
42850=CompletionTests_1_5:testFavoriteImports022()
42851=CompletionTests_1_5:test0363()
42852=CompletionTests_1_5:test0156()
42853=CompletionTests_1_5:test0110()
42854=CompletionTests_1_5:test0230()
42855=CompletionTests_1_5:test0276()
42856=CompletionTests_1_5:test0001()
42857=CompletionTests_1_5:test0047()
42858=CompletionTests_1_5:test0374()
42859=CompletionTests_1_5:testBug343865a()
42860=CompletionTests_1_5:test0145()
42861=CompletionTests_1_5:test0241()
42862=CompletionTests_1_5:test0243()
42863=CompletionTests_1_5:test0289()
42864=CompletionTests_1_5:test0034()
42865=CompletionTests_1_5:testBug326610a()
42866=CompletionTests_1_5:test0341()
42867=CompletionTests_1_5:test0132()
42868=CompletionTests_1_5:test0178()
42869=CompletionTests_1_5:test0023()
42870=CompletionTests_1_5:test0069()
42871=CompletionTests_1_5:test0352()
42872=CompletionTests_1_5:test0121()
42873=CompletionTests_1_5:test0167()
42874=CompletionTests_1_5:testBug351426g()
42875=CompletionTests_1_5:test0014()
42876=CompletionTests_1_5:testBug326610()
42877=CompletionTests_1_5:test0267()
42878=CompletionTests_1_5:testFavoriteImports020()
42879=CompletionTests_1_5:test0365()
42880=CompletionTests_1_5:test0112()
42881=CompletionTests_1_5:test0158()
42882=CompletionTests_1_5:test0210()
42883=CompletionTests_1_5:CompletionTests_1_5(String)
42884=CompletionTests_1_5:test0003()
42885=CompletionTests_1_5:test0049()
42886=CompletionTests_1_5:test0232()
42887=CompletionTests_1_5:test0278()
42888=CompletionTests_1_5:testFavoriteImports031()
42889=CompletionTests_1_5:test0321b()
42890=CompletionTests_1_5:test0330()
42891=CompletionTests_1_5:test0101()
42892=CompletionTests_1_5:test0376()
42893=CompletionTests_1_5:test0147()
42894=CompletionTests_1_5:test0036()
42895=CompletionTests_1_5:test0245()
42896=CompletionTests_1_5:test0343()
42897=CompletionTests_1_5:test0134()
42898=CompletionTests_1_5:test0025()
42899=CompletionTests_1_5:test0354()
42900=CompletionTests_1_5:test0123()
42901=CompletionTests_1_5:test0169()
42902=CompletionTests_1_5:testBug351426i()
42903=CompletionTests_1_5:test0221()
42904=CompletionTests_1_5:test0306()
42905=CompletionTests_1_5:test0163()
42906=CompletionTests_1_5:test0370()
42907=CompletionTests_1_5:test0198()
42908=CompletionTests_1_5:test0065()
42909=CompletionTests_1_5:test0272()
42910=CompletionTests_1_5:test0317()
42911=CompletionTests_1_5:test0089()
42912=CompletionTests_1_5:test0152()
42913=CompletionTests_1_5:test0187()
42914=CompletionTests_1_5:testBug351426b()
42915=CompletionTests_1_5:test0054()
42916=CompletionTests_1_5:test0283()
42917=CompletionTests_1_5:test0185()
42918=CompletionTests_1_5:testCompletionWithUnboxing_2()
42919=CompletionTests_1_5:test0200b()
42920=CompletionTests_1_5:test0219()
42921=CompletionTests_1_5:testBug326610e()
42922=CompletionTests_1_5:test0041()
42923=CompletionTests_1_5:test0087()
42924=CompletionTests_1_5:test0250()
42925=CompletionTests_1_5:test0296()
42926=CompletionTests_1_5:test0199b()
42927=CompletionTests_1_5:test0174()
42928=CompletionTests_1_5:test0208()
42929=CompletionTests_1_5:test0076()
42930=CompletionTests_1_5:test0261()
42931=CompletionTests_1_5:test0030()
42932=CompletionTests_1_5:test0056()
42933=CompletionTests_1_5:test0308()
42934=CompletionTests_1_5:test0372()
42935=CompletionTests_1_5:test0154()
42936=CompletionTests_1_5:test0021()
42937=CompletionTests_1_5:test0274()
42938=CompletionTests_1_5:test0045()
42939=CompletionTests_1_5:test0319()
42940=CompletionTests_1_5:testLabel()
42941=CompletionTests_1_5:test0143()
42942=CompletionTests_1_5:testFavoriteImports009()
42943=CompletionTests_1_5:test0189()
42944=CompletionTests_1_5:testBug351426d()
42945=CompletionTests_1_5:test0010()
42946=CompletionTests_1_5:test0285()
42947=CompletionTests_1_5:test0287()
42948=CompletionTests_1_5:testCompletionOnExtends3()
42949=CompletionTests_1_5:test0078()
42950=CompletionTests_1_5:test0141()
42951=CompletionTests_1_5:test0350()
42952=CompletionTests_1_5:test0176()
42953=CompletionTests_1_5:testBug326610c()
42954=CompletionTests_1_5:test361963()
42955=CompletionTests_1_5:test0043()
42956=CompletionTests_1_5:test0298()
42957=CompletionTests_1_5:test0067()
42958=CompletionTests_1_5:test0130()
42959=CompletionTests_1_5:test0361()
42960=CompletionTests_1_5:test0165()
42961=CompletionTests_1_5:test0032()
42962=CompletionTests_1_5:test0263()
42963=CompletionTests_1_5:test0302()
42964=CompletionTests_1_5:test0348()
42965=CompletionTests_1_5:test0061()
42966=CompletionTests_1_5:test0197b()
42967=CompletionTests_1_5:getExternalQQTypes()
42968=CompletionTests_1_5:test0194()
42969=CompletionTests_1_5:test0313()
42970=CompletionTests_1_5:test0359()
42971=CompletionTests_1_5:testFavoriteImports007()
42972=CompletionTests_1_5:test0228()
42973=CompletionTests_1_5:test274466()
42974=CompletionTests_1_5:test0096()
42975=CompletionTests_1_5:test0050()
42976=CompletionTests_1_5:testNameWithUnresolvedReferences003()
42977=CompletionTests_1_5:test0326()
42978=CompletionTests_1_5:test0019()
42979=CompletionTests_1_5:test0181()
42980=CompletionTests_1_5:testFavoriteImports018()
42981=CompletionTests_1_5:test0117()
42982=CompletionTests_1_5:test0215()
42983=CompletionTests_1_5:test0292()
42984=CompletionTests_1_5:test0083()
42985=CompletionTests_1_5:suite()
42986=CompletionTests_1_5:test0239()
42987=CompletionTests_1_5:test0170()
42988=CompletionTests_1_5:test0337()
42989=CompletionTests_1_5:test0008()
42990=CompletionTests_1_5:testBug310423b()
42991=CompletionTests_1_5:testFavoriteImports029()
42992=CompletionTests_1_5:test0106()
42993=CompletionTests_1_5:test0204()
42994=CompletionTests_1_5:test0072()
42995=CompletionTests_1_5:test0304()
42996=CompletionTests_1_5:test0161()
42997=CompletionTests_1_5:test0063()
42998=CompletionTests_1_5:test0270()
42999=CompletionTests_1_5:test0196()
43000=CompletionTests_1_5:test0315()
43001=CompletionTests_1_5:test0150()
43002=CompletionTests_1_5:testFavoriteImports005()
43003=CompletionTests_1_5:test0052()
43004=CompletionTests_1_5:test0098()
43005=CompletionTests_1_5:test0281()
43006=CompletionTests_1_5:test0328()
43007=CompletionTests_1_5:test0183()
43008=CompletionTests_1_5:testFavoriteImports016()
43009=CompletionTests_1_5:test0217()
43010=CompletionTests_1_5:test0119()
43011=CompletionTests_1_5:test0085()
43012=CompletionTests_1_5:test0294()
43013=CompletionTests_1_5:test0339()
43014=CompletionTests_1_5:test0172()
43015=CompletionTests_1_5:test0206()
43016=CompletionTests_1_5:testFavoriteImports027()
43017=CompletionTests_1_5:test0074()
43018=CompletionTests_1_5:test0108()
43019=IBootstrapMethodsAttribute:getBootstrapMethods()
43020=IBootstrapMethodsAttribute:getBootstrapMethodsLength()
43021=X05:bar()
43022=CompletionOnKeyword2:getPossibleKeywords()
43023=CompletionOnKeyword2:getToken()
43024=CompletionOnKeyword2:print(int, StringBuffer, boolean)
43025=CompletionOnKeyword2:CompletionOnKeyword2(char[], long, char[][])
43026=AlwaysMoreIndentation:getX()
43027=AlwaysMoreIndentation:setX(int)
43028=A:foo()
43029=X20:foo(String)
43030=ASTRewritingTest:ASTRewritingTest(String)
43031=ASTRewritingTest:createAST(ICompilationUnit, boolean, boolean)
43032=ASTRewritingTest:findTypeDeclaration(CompilationUnit, String)
43033=ASTRewritingTest:createAST(ICompilationUnit)
43034=ASTRewritingTest:createNewMethod(AST, String, boolean)
43035=ASTRewritingTest:tearDown()
43036=ASTRewritingTest:setModifiers(BodyDeclaration, int)
43037=ASTRewritingTest:createSuite(Class)
43038=ASTRewritingTest:assertEqualString(String, String)
43039=ASTRewritingTest:createProject(String, String)
43040=ASTRewritingTest:createNewParam(AST, String)
43041=ASTRewritingTest:createSuite(Class, int)
43042=ASTRewritingTest:createAST(ICompilationUnit, boolean)
43043=ASTRewritingTest:suite()
43044=ASTRewritingTest:ASTRewritingTest(String, int)
43045=ASTRewritingTest:getName()
43046=ASTRewritingTest:createNewField(AST, String)
43047=ASTRewritingTest:setUp()
43048=ASTRewritingTest:evaluateRewrite(ICompilationUnit, ASTRewrite)
43049=ASTRewritingTest:createAST(int, ICompilationUnit, boolean, boolean)
43050=ASTRewritingTest:findAbstractTypeDeclaration(CompilationUnit, String)
43051=ASTRewritingTest:findMethodDeclaration(TypeDeclaration, String)
43052=ASTRewritingTest:setReturnType(MethodDeclaration, Type)
43053=IdeMessagerImpl:printMessage(Kind, CharSequence)
43054=IdeMessagerImpl:printMessage(Kind, CharSequence, Element)
43055=IdeMessagerImpl:printMessage(Kind, CharSequence, Element, AnnotationMirror, AnnotationValue)
43056=IdeMessagerImpl:IdeMessagerImpl(IdeAnnotationProcessorManager, IdeProcessingEnvImpl)
43057=IdeMessagerImpl:printMessage(Kind, CharSequence, Element, AnnotationMirror)
43058=TestProgressMonitor:done()
43059=TestProgressMonitor:setCanceled(boolean)
43060=TestProgressMonitor:beginTask(String, int)
43061=TestProgressMonitor:setCancelledCounter(int)
43062=TestProgressMonitor:subTask(String)
43063=TestProgressMonitor:reset()
43064=TestProgressMonitor:worked(int)
43065=TestProgressMonitor:getInstance()
43066=TestProgressMonitor:isCanceled()
43067=TestProgressMonitor:setTaskName(String)
43068=TestProgressMonitor:internalWorked(double)
43069=X27:foo()
43070=NormalAnnotation:traverse(ASTVisitor, BlockScope)
43071=NormalAnnotation:printExpression(int, StringBuffer)
43072=NormalAnnotation:traverse(ASTVisitor, CompilationUnitScope)
43073=NormalAnnotation:traverse(ASTVisitor, ClassScope)
43074=NormalAnnotation:NormalAnnotation(char[][], long[], int)
43075=NormalAnnotation:NormalAnnotation(char[], long, int)
43076=A:A()
43077=ReturnStatement:generateCode(BlockScope, CodeStream)
43078=ReturnStatement:needValue()
43079=ReturnStatement:ReturnStatement(Expression, int, int, boolean)
43080=ReturnStatement:needValueStore()
43081=ReturnStatement:prepareSaveValueLocation(TryStatement)
43082=ReturnStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
43083=ReturnStatement:doesNotCompleteNormally()
43084=ReturnStatement:printStatement(int, StringBuffer)
43085=ReturnStatement:ReturnStatement(Expression, int, int)
43086=ReturnStatement:traverse(ASTVisitor, BlockScope)
43087=ReturnStatement:generateReturnBytecode(CodeStream)
43088=ReturnStatement:generateStoreSaveValueIfNecessary(CodeStream)
43089=ReturnStatement:checkAgainstNullAnnotation(BlockScope, FlowContext, FlowInfo)
43090=ReturnStatement:resolve(BlockScope)
43091=IPolyExpression:isCompatibleWith(TypeBinding, Scope)
43092=IPolyExpression:resolveType(BlockScope)
43093=IPolyExpression:sIsMoreSpecific(TypeBinding, TypeBinding, Scope)
43094=IPolyExpression:setExpectedType(TypeBinding)
43095=IPolyExpression:setExpressionContext(ExpressionContext)
43096=IPolyExpression:isBoxingCompatibleWith(TypeBinding, Scope)
43097=IPolyExpression:isPotentiallyCompatibleWith(TypeBinding, Scope)
43098=IPolyExpression:getExpressionContext()
43099=IPolyExpression:getPolyExpressions()
43100=IPolyExpression:isPolyExpression(MethodBinding)
43101=IPolyExpression:resolveExpressionExpecting(TypeBinding, Scope, InferenceContext18)
43102=IPolyExpression:isPertinentToApplicability(TypeBinding, MethodBinding)
43103=IPolyExpression:isPolyExpression()
43104=IPolyExpression:invocationTargetType()
43105=IPolyExpression:isFunctionalType()
43106=TestA:getPattern()
43107=X01b:foo()
43108=Example:function1(Object, Object, Object, Object)
43109=SuperTypeReferenceLocator:resolveLevel(Binding)
43110=SuperTypeReferenceLocator:matchContainer()
43111=SuperTypeReferenceLocator:matchReportReference(ASTNode, IJavaElement, Binding, int, MatchLocator)
43112=SuperTypeReferenceLocator:toString()
43113=SuperTypeReferenceLocator:SuperTypeReferenceLocator(SuperTypeReferencePattern)
43114=SuperTypeReferenceLocator:resolveLevel(ASTNode)
43115=SuperTypeReferenceLocator:match(TypeReference, MatchingNodeSet)
43116=SuperTypeReferenceLocator:referenceType()
43117=SuperTypeReferenceLocator:match(LambdaExpression, MatchingNodeSet)
43118=A:foo(String, Object)
43119=ProfilingASTConvertionTest:Result:compareTo(Object)
43120=ProfilingASTConvertionTest:test0003()
43121=ProfilingASTConvertionTest:ProfilingASTConvertionTest(String)
43122=ProfilingASTConvertionTest:test0000()
43123=ProfilingASTConvertionTest:test0002()
43124=ProfilingASTConvertionTest:reportResults(int, long, int, long[], ArrayList)
43125=ProfilingASTConvertionTest:suite()
43126=ProfilingASTConvertionTest:printDistribution(long[], int)
43127=ProfilingASTConvertionTest:test0004()
43128=ProfilingASTConvertionTest:Result:Result(String, long, long)
43129=ProfilingASTConvertionTest:printRange(int, int, int, int, int, int, int)
43130=ProfilingASTConvertionTest:display(int, int)
43131=ProfilingASTConvertionTest:setUpSuite()
43132=ProfilingASTConvertionTest:test0001()
43133=HashtableOfType:rehash()
43134=HashtableOfType:toString()
43135=HashtableOfType:get(char[])
43136=HashtableOfType:size()
43137=HashtableOfType:containsKey(char[])
43138=HashtableOfType:getput(char[], ReferenceBinding)
43139=HashtableOfType:HashtableOfType()
43140=HashtableOfType:put(char[], ReferenceBinding)
43141=HashtableOfType:HashtableOfType(int)
43142=BooleanConstant:typeID()
43143=BooleanConstant:stringValue()
43144=BooleanConstant:booleanValue()
43145=BooleanConstant:toString()
43146=BooleanConstant:BooleanConstant(boolean)
43147=TestInvalid2:foo()
43148=TestClass:TestClass(TestBuilder)
43149=TestClass:TestBuilder:build()
43150=A:main(String[])
43151=SimpleSet:rehash()
43152=SimpleSet:clear()
43153=SimpleSet:remove(Object)
43154=SimpleSet:asArray(Object[])
43155=SimpleSet:includes(Object)
43156=SimpleSet:clone()
43157=SimpleSet:toString()
43158=SimpleSet:addIfNotIncluded(Object)
43159=SimpleSet:SimpleSet()
43160=SimpleSet:SimpleSet(int)
43161=SimpleSet:add(Object)
43162=X02b:foo()
43163=NumberLiteral:removePrefixZerosAndUnderscores(char[], boolean)
43164=NumberLiteral:NumberLiteral(char[], int, int)
43165=NumberLiteral:isValidJavaStatement()
43166=NumberLiteral:source()
43167=NumberLiteral:NumberLiteral(int, int)
43168=AnnotationTest:test234()
43169=AnnotationTest:test027()
43170=AnnotationTest:testBug376590b()
43171=AnnotationTest:test125()
43172=AnnotationTest:test091()
43173=AnnotationTest:test245()
43174=AnnotationTest:test016()
43175=AnnotationTest:test114()
43176=AnnotationTest:test080()
43177=AnnotationTest:test212()
43178=AnnotationTest:test258()
43179=AnnotationTest:test003()
43180=AnnotationTest:test049()
43181=AnnotationTest:test101()
43182=AnnotationTest:test147()
43183=AnnotationTest:test223()
43184=AnnotationTest:test269()
43185=AnnotationTest:test038()
43186=AnnotationTest:testBug365437b()
43187=AnnotationTest:test136()
43188=AnnotationTest:test278()
43189=AnnotationTest:test025()
43190=AnnotationTest:test232()
43191=AnnotationTest:test123()
43192=AnnotationTest:test169()
43193=AnnotationTest:test449330()
43194=AnnotationTest:test289()
43195=AnnotationTest:test014()
43196=AnnotationTest:test243()
43197=AnnotationTest:test112()
43198=AnnotationTest:test158()
43199=AnnotationTest:test256()
43200=AnnotationTest:test047()
43201=AnnotationTest:test001()
43202=AnnotationTest:test210()
43203=AnnotationTest:test145()
43204=AnnotationTest:test267()
43205=AnnotationTest:test036()
43206=AnnotationTest:test221()
43207=AnnotationTest:testBug365437d()
43208=AnnotationTest:test134()
43209=AnnotationTest:test398657_2()
43210=AnnotationTest:test238()
43211=AnnotationTest:test291()
43212=AnnotationTest:test084()
43213=AnnotationTest:test129()
43214=AnnotationTest:test416107b()
43215=AnnotationTest:test182()
43216=AnnotationTest:test249()
43217=AnnotationTest:test073()
43218=AnnotationTest:test203()
43219=AnnotationTest:test118()
43220=AnnotationTest:test171()
43221=AnnotationTest:test216()
43222=AnnotationTest:test007()
43223=AnnotationTest:testClass()
43224=AnnotationTest:test060()
43225=AnnotationTest:test105()
43226=AnnotationTest:test449330b()
43227=AnnotationTest:test227()
43228=AnnotationTest:test280()
43229=AnnotationTest:test095()
43230=AnnotationTest:test193()
43231=AnnotationTest:test029()
43232=AnnotationTest:test191()
43233=AnnotationTest:test236()
43234=AnnotationTest:test142b()
43235=AnnotationTest:test082()
43236=AnnotationTest:test127()
43237=AnnotationTest:test384567()
43238=AnnotationTest:test018()
43239=AnnotationTest:test180()
43240=AnnotationTest:test247()
43241=AnnotationTest:test071()
43242=AnnotationTest:test201()
43243=AnnotationTest:test116()
43244=AnnotationTest:test005()
43245=AnnotationTest:test214()
43246=AnnotationTest:test103()
43247=AnnotationTest:test149()
43248=AnnotationTest:test225()
43249=AnnotationTest:test093()
43250=AnnotationTest:test138()
43251=AnnotationTest:test272()
43252=AnnotationTest:test065()
43253=AnnotationTest:test163()
43254=AnnotationTest:test219()
43255=AnnotationTest:test283()
43256=AnnotationTest:test054()
43257=AnnotationTest:test152()
43258=AnnotationTest:test198()
43259=AnnotationTest:test250()
43260=AnnotationTest:test296()
43261=AnnotationTest:test087()
43262=AnnotationTest:test041()
43263=AnnotationTest:test185()
43264=AnnotationTest:test261()
43265=AnnotationTest:test434556()
43266=AnnotationTest:test076()
43267=AnnotationTest:test030()
43268=AnnotationTest:test208()
43269=AnnotationTest:test174()
43270=AnnotationTest:testBug366003e()
43271=AnnotationTest:test217()
43272=AnnotationTest:test270()
43273=AnnotationTest:test063()
43274=AnnotationTest:test108()
43275=AnnotationTest:testBug366003()
43276=AnnotationTest:test161()
43277=AnnotationTest:test228()
43278=AnnotationTest:test098()
43279=AnnotationTest:test281()
43280=AnnotationTest:test052()
43281=AnnotationTest:test196()
43282=AnnotationTest:test150()
43283=AnnotationTest:testBug470665()
43284=AnnotationTest:test085()
43285=AnnotationTest:test294()
43286=AnnotationTest:test183()
43287=AnnotationTest:testBug386356_1()
43288=AnnotationTest:test384567_2()
43289=AnnotationTest:test206()
43290=AnnotationTest:test074()
43291=AnnotationTest:test119()
43292=AnnotationTest:test172()
43293=AnnotationTest:test069()
43294=AnnotationTest:test023()
43295=AnnotationTest:test230()
43296=AnnotationTest:test276()
43297=AnnotationTest:test167()
43298=AnnotationTest:test121()
43299=AnnotationTest:test058()
43300=AnnotationTest:test012()
43301=AnnotationTest:test241()
43302=AnnotationTest:test287()
43303=AnnotationTest:testBug365437e()
43304=AnnotationTest:test156()
43305=AnnotationTest:test110()
43306=AnnotationTest:test045()
43307=AnnotationTest:test254()
43308=AnnotationTest:test189()
43309=AnnotationTest:test143()
43310=AnnotationTest:test034()
43311=AnnotationTest:test265()
43312=AnnotationTest:test178()
43313=AnnotationTest:test274c()
43314=AnnotationTest:test132()
43315=AnnotationTest:testBug376429a()
43316=AnnotationTest:test021()
43317=AnnotationTest:test067()
43318=AnnotationTest:test165()
43319=AnnotationTest:test010()
43320=AnnotationTest:test056()
43321=AnnotationTest:test285()
43322=AnnotationTest:test154()
43323=AnnotationTest:test274a()
43324=AnnotationTest:test043()
43325=AnnotationTest:test089()
43326=AnnotationTest:test252()
43327=AnnotationTest:test187()
43328=AnnotationTest:test141()
43329=AnnotationTest:test032()
43330=AnnotationTest:test078()
43331=AnnotationTest:test263()
43332=AnnotationTest:test176()
43333=AnnotationTest:testBug366003c()
43334=AnnotationTest:test130()
43335=AnnotationTest:test211()
43336=AnnotationTest:test257()
43337=AnnotationTest:test004()
43338=AnnotationTest:test102()
43339=AnnotationTest:test148()
43340=AnnotationTest:test222()
43341=AnnotationTest:test268()
43342=AnnotationTest:test039()
43343=AnnotationTest:testBug365437a()
43344=AnnotationTest:test137()
43345=AnnotationTest:testBug376590a()
43346=AnnotationTest:test235()
43347=AnnotationTest:testBug376429b()
43348=AnnotationTest:test026()
43349=AnnotationTest:testBug376590c()
43350=AnnotationTest:test472178()
43351=AnnotationTest:test090()
43352=AnnotationTest:test124()
43353=AnnotationTest:test246()
43354=AnnotationTest:test015()
43355=AnnotationTest:test200()
43356=AnnotationTest:test113()
43357=AnnotationTest:test159()
43358=AnnotationTest:test456960()
43359=AnnotationTest:test255()
43360=AnnotationTest:test002()
43361=AnnotationTest:test048()
43362=AnnotationTest:test146()
43363=AnnotationTest:test100()
43364=AnnotationTest:test266()
43365=AnnotationTest:test037()
43366=AnnotationTest:testBug365437c()
43367=AnnotationTest:test220()
43368=AnnotationTest:test135()
43369=AnnotationTest:test233()
43370=AnnotationTest:test279()
43371=AnnotationTest:test024()
43372=AnnotationTest:test168()
43373=AnnotationTest:test416107a()
43374=AnnotationTest:test122()
43375=AnnotationTest:testBug469584()
43376=AnnotationTest:test244()
43377=AnnotationTest:test013()
43378=AnnotationTest:test059()
43379=AnnotationTest:test157()
43380=AnnotationTest:test111()
43381=AnnotationTest:test215()
43382=AnnotationTest:test008()
43383=AnnotationTest:test061()
43384=AnnotationTest:test106()
43385=AnnotationTest:test449330a()
43386=AnnotationTest:test433747()
43387=AnnotationTest:test438437()
43388=AnnotationTest:test226()
43389=AnnotationTest:test050()
43390=AnnotationTest:test096()
43391=AnnotationTest:test290()
43392=AnnotationTest:test194()
43393=AnnotationTest:test427367()
43394=AnnotationTest:test239()
43395=AnnotationTest:test292()
43396=AnnotationTest:test083()
43397=AnnotationTest:test128()
43398=AnnotationTest:test181()
43399=AnnotationTest:test019()
43400=AnnotationTest:test204()
43401=AnnotationTest:test072()
43402=AnnotationTest:test117()
43403=AnnotationTest:test170()
43404=AnnotationTest:test213()
43405=AnnotationTest:test259()
43406=AnnotationTest:test006()
43407=AnnotationTest:test070()
43408=AnnotationTest:test104()
43409=AnnotationTest:testBug386692()
43410=AnnotationTest:test224()
43411=AnnotationTest:test094()
43412=AnnotationTest:test139()
43413=AnnotationTest:test142c()
43414=AnnotationTest:test192()
43415=AnnotationTest:test398657()
43416=AnnotationTest:test028()
43417=AnnotationTest:test190()
43418=AnnotationTest:test237()
43419=AnnotationTest:test092()
43420=AnnotationTest:test126()
43421=AnnotationTest:test017()
43422=AnnotationTest:test248()
43423=AnnotationTest:test202()
43424=AnnotationTest:test081()
43425=AnnotationTest:test115()
43426=AnnotationTest:test295()
43427=AnnotationTest:test042()
43428=AnnotationTest:test088()
43429=AnnotationTest:test039a()
43430=AnnotationTest:test140()
43431=AnnotationTest:test186()
43432=AnnotationTest:test077()
43433=AnnotationTest:test207()
43434=AnnotationTest:test260()
43435=AnnotationTest:test031()
43436=AnnotationTest:test376977()
43437=AnnotationTest:test175()
43438=AnnotationTest:testBug366003d()
43439=AnnotationTest:test109()
43440=AnnotationTest:test064()
43441=AnnotationTest:test273()
43442=AnnotationTest:testBug464977()
43443=AnnotationTest:test162()
43444=AnnotationTest:test053()
43445=AnnotationTest:test099()
43446=AnnotationTest:test284()
43447=AnnotationTest:test197()
43448=AnnotationTest:test151()
43449=AnnotationTest:test293()
43450=AnnotationTest:test018b()
43451=AnnotationTest:test086()
43452=AnnotationTest:test040()
43453=AnnotationTest:setUp()
43454=AnnotationTest:test184()
43455=AnnotationTest:test075()
43456=AnnotationTest:test205()
43457=AnnotationTest:getCompilerOptions()
43458=AnnotationTest:test173()
43459=AnnotationTest:test009()
43460=AnnotationTest:test218()
43461=AnnotationTest:test271()
43462=AnnotationTest:test062()
43463=AnnotationTest:test107()
43464=AnnotationTest:AnnotationTest(String)
43465=AnnotationTest:test160()
43466=AnnotationTest:testBug386356_2()
43467=AnnotationTest:test229()
43468=AnnotationTest:test282()
43469=AnnotationTest:test097()
43470=AnnotationTest:test051()
43471=AnnotationTest:test195()
43472=AnnotationTest:test046()
43473=AnnotationTest:test253()
43474=AnnotationTest:test144()
43475=AnnotationTest:test035()
43476=AnnotationTest:test264()
43477=AnnotationTest:test179()
43478=AnnotationTest:testBug371832()
43479=AnnotationTest:test274d()
43480=AnnotationTest:test133()
43481=AnnotationTest:test277()
43482=AnnotationTest:test068()
43483=AnnotationTest:test022()
43484=AnnotationTest:test231()
43485=AnnotationTest:test166()
43486=AnnotationTest:test120()
43487=AnnotationTest:testBug365437f()
43488=AnnotationTest:test288()
43489=AnnotationTest:test057()
43490=AnnotationTest:test011()
43491=AnnotationTest:test242()
43492=AnnotationTest:test155()
43493=AnnotationTest:test274b()
43494=AnnotationTest:test297()
43495=AnnotationTest:test044()
43496=AnnotationTest:test251()
43497=AnnotationTest:test188()
43498=AnnotationTest:test142()
43499=AnnotationTest:test079()
43500=AnnotationTest:test033()
43501=AnnotationTest:test262()
43502=AnnotationTest:test209()
43503=AnnotationTest:suite()
43504=AnnotationTest:test177()
43505=AnnotationTest:testBug366003b()
43506=AnnotationTest:test131()
43507=AnnotationTest:testBug384663()
43508=AnnotationTest:test020()
43509=AnnotationTest:test066()
43510=AnnotationTest:test275()
43511=AnnotationTest:test164()
43512=AnnotationTest:test055()
43513=AnnotationTest:test240()
43514=AnnotationTest:test286()
43515=AnnotationTest:test153()
43516=AnnotationTest:test199()
43517=X02:setCharset(String, Object)
43518=A:foo()
43519=Foo:Foo()
43520=Foo:blowup()
43521=JavadocReturnStatement:resolve(BlockScope)
43522=JavadocReturnStatement:traverse(ASTVisitor, ClassScope)
43523=JavadocReturnStatement:printStatement(int, StringBuffer)
43524=JavadocReturnStatement:traverse(ASTVisitor, BlockScope)
43525=JavadocReturnStatement:JavadocReturnStatement(int, int)
43526=Test:foo()
43527=CompilationUnitHelper:updateWorkingCopyContents(String, ICompilationUnit, WorkingCopyOwner, boolean)
43528=CompilationUnitHelper:createPackageFragment(String, IPackageFragmentRoot, IProgressMonitor)
43529=CompilationUnitHelper:getWorkingCopy(String, IPackageFragmentRoot)
43530=CompilationUnitHelper:parseTypeName(String)
43531=CompilationUnitHelper:commitNewContents(ICompilationUnit, String, IProgressMonitor)
43532=CompilationUnitHelper:discardWorkingCopy(ICompilationUnit)
43533=AssertStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
43534=AssertStatement:printStatement(int, StringBuffer)
43535=AssertStatement:AssertStatement(Expression, int)
43536=AssertStatement:generateCode(BlockScope, CodeStream)
43537=AssertStatement:traverse(ASTVisitor, BlockScope)
43538=AssertStatement:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo)
43539=AssertStatement:resolve(BlockScope)
43540=AssertStatement:AssertStatement(Expression, Expression, int)
43541=ModelTests:testGenericsWithEclipseCompiler()
43542=ModelTests:testTypeMirrorWithEclipseCompiler()
43543=ModelTests:tearDown()
43544=ModelTests:testGenericsWithSystemCompiler()
43545=ModelTests:internalTest(JavaCompiler, String)
43546=ModelTests:testReportedProblemsWithDiagnosticListener()
43547=ModelTests:testElementWithSystemCompiler()
43548=ModelTests:internalTest(JavaCompiler, String, String)
43549=ModelTests:testTypeMirrorWithSystemCompiler()
43550=ModelTests:testElementWithEclipseCompiler()
43551=ModelTests:testVisitorsWithSystemCompiler()
43552=ModelTests:setUp()
43553=ModelTests:testAnnotationMirrorWithEclipseCompiler()
43554=ModelTests:testVisitorsWithEclipseCompiler()
43555=LocalElementTests:testLocalType2()
43556=LocalElementTests:testGetSuperclassName()
43557=LocalElementTests:testLocalType4()
43558=LocalElementTests:testAnonymousType7()
43559=LocalElementTests:testLocalType6()
43560=LocalElementTests:testAnonymousType5()
43561=LocalElementTests:testLocalType8()
43562=LocalElementTests:suite()
43563=LocalElementTests:testGetType()
43564=LocalElementTests:testAnonymousType4()
43565=LocalElementTests:testAnonymousType2()
43566=LocalElementTests:testLocalType3()
43567=LocalElementTests:testLocalType5()
43568=LocalElementTests:setUpSuite()
43569=LocalElementTests:testLocalType7()
43570=LocalElementTests:testLocalType9()
43571=LocalElementTests:testAnonymousType6()
43572=LocalElementTests:testAnonymousType3()
43573=LocalElementTests:testLocalType10()
43574=LocalElementTests:testAnonymousType1()
43575=LocalElementTests:LocalElementTests(String)
43576=LocalElementTests:tearDownSuite()
43577=LocalElementTests:testLocalType1()
43578=Block:Block(int)
43579=Block:resolveUsing(BlockScope)
43580=Block:printBody(int, StringBuffer)
43581=Block:completesByContinue()
43582=Block:isEmptyBlock()
43583=Block:traverse(ASTVisitor, BlockScope)
43584=Block:analyseCode(BlockScope, FlowContext, FlowInfo)
43585=Block:generateCode(BlockScope, CodeStream)
43586=Block:printStatement(int, StringBuffer)
43587=Block:branchChainTo(BranchLabel)
43588=Block:resolve(BlockScope)
43589=Block:doesNotCompleteNormally()
43590=IBufferChangedListener:bufferChanged(BufferChangedEvent)
43591=RunOnlyJava8Tests:tearDown()
43592=RunOnlyJava8Tests:getConverterTestClasses()
43593=RunOnlyJava8Tests:suite()
43594=RunOnlyJava8Tests:addTestsToSuite(TestSuite, Class[])
43595=RunOnlyJava8Tests:RunOnlyJava8Tests(String)
43596=RunOnlyJava8Tests:getAllTestClasses()
43597=BindingComparator:isEqual(FieldBinding, FieldBinding)
43598=BindingComparator:isEqual(VariableBinding, VariableBinding)
43599=BindingComparator:isEqual(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, HashSet)
43600=BindingComparator:isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding[], org.eclipse.jdt.internal.compiler.lookup.TypeBinding[])
43601=BindingComparator:isEqual(TypeVariableBinding[], TypeVariableBinding[])
43602=BindingComparator:isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding[], org.eclipse.jdt.internal.compiler.lookup.TypeBinding[], HashSet)
43603=BindingComparator:isEqual(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
43604=BindingComparator:isEqual(Binding, Binding, HashSet)
43605=BindingComparator:isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
43606=BindingComparator:isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, HashSet)
43607=CheckArgsProc:process(Set<? extends TypeElement>, RoundEnvironment)
43608=Test:bar()
43609=Test:foo(int)
43610=CodeSnippetSingleNameReference:CodeSnippetSingleNameReference(char[], long, EvaluationContext)
43611=CodeSnippetSingleNameReference:generatePostIncrement(BlockScope, CodeStream, CompoundAssignment, boolean)
43612=CodeSnippetSingleNameReference:checkFieldAccess(BlockScope)
43613=CodeSnippetSingleNameReference:generateAssignment(BlockScope, CodeStream, Assignment, boolean)
43614=CodeSnippetSingleNameReference:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo, boolean)
43615=CodeSnippetSingleNameReference:analyseCode(BlockScope, FlowContext, FlowInfo, boolean)
43616=CodeSnippetSingleNameReference:generateCode(BlockScope, CodeStream, boolean)
43617=CodeSnippetSingleNameReference:reportError(BlockScope)
43618=CodeSnippetSingleNameReference:generateReceiver(CodeStream)
43619=CodeSnippetSingleNameReference:generateCompoundAssignment(BlockScope, CodeStream, MethodBinding, Expression, int, int, boolean)
43620=CodeSnippetSingleNameReference:getReceiverType(BlockScope)
43621=JavaSearchScopeTests:testScopeEncloses29()
43622=JavaSearchScopeTests:testScopeEncloses16()
43623=JavaSearchScopeTests:testScopeEncloses05()
43624=JavaSearchScopeTests:testScopeEncloses14b()
43625=JavaSearchScopeTests:testApplicationLibrairiesClasspathVariable()
43626=JavaSearchScopeTests:testScopeEncloses38()
43627=JavaSearchScopeTests:JavaSearchScopeTests(String)
43628=JavaSearchScopeTests:testScopeEncloses27()
43629=JavaSearchScopeTests:testScopeEncloses14()
43630=JavaSearchScopeTests:testScopeEncloses03()
43631=JavaSearchScopeTests:testScopeEncloses36()
43632=JavaSearchScopeTests:testScopeEncloses25()
43633=JavaSearchScopeTests:testScopeEncloses12()
43634=JavaSearchScopeTests:testScopeEncloses01()
43635=JavaSearchScopeTests:testScopeEncloses34()
43636=JavaSearchScopeTests:testScopeEncloses23()
43637=JavaSearchScopeTests:testScopeEncloses10()
43638=JavaSearchScopeTests:testBug397818()
43639=JavaSearchScopeTests:testSourcesOrDirectReferencedProjects()
43640=JavaSearchScopeTests:testScopeEncloses32()
43641=JavaSearchScopeTests:testScopeEncloses21()
43642=JavaSearchScopeTests:testBug101022()
43643=JavaSearchScopeTests:testApplicationLibrairiesNonExistingClasspathVariable()
43644=JavaSearchScopeTests:testScopeEncloses30()
43645=JavaSearchScopeTests:testBug250211()
43646=JavaSearchScopeTests:tearDown()
43647=JavaSearchScopeTests:testSourcesOrContainerReferencedProjects()
43648=JavaSearchScopeTests:testScopeEncloses41()
43649=JavaSearchScopeTests:suite()
43650=JavaSearchScopeTests:testScopeEncloses28b()
43651=JavaSearchScopeTests:testScopeEncloses19()
43652=JavaSearchScopeTests:testApplicationLibrairiesNonExistingJarAndClassFolder()
43653=JavaSearchScopeTests:testScopeEncloses08()
43654=JavaSearchScopeTests:testScopeEncloses17()
43655=JavaSearchScopeTests:testScopeEncloses06()
43656=JavaSearchScopeTests:testScopeEncloses39()
43657=JavaSearchScopeTests:testScopeEncloses28()
43658=JavaSearchScopeTests:testScopeEncloses15()
43659=JavaSearchScopeTests:testScopeEncloses04()
43660=JavaSearchScopeTests:testScopeEncloses14c()
43661=JavaSearchScopeTests:testScopeEncloses37()
43662=JavaSearchScopeTests:testApplicationLibrairiesExternalJar()
43663=JavaSearchScopeTests:testScopeEncloses26()
43664=JavaSearchScopeTests:testScopeEncloses13()
43665=JavaSearchScopeTests:testScopeEncloses02()
43666=JavaSearchScopeTests:testScopeEncloses35()
43667=JavaSearchScopeTests:testApplicationLibrairiesClasspathContainer()
43668=JavaSearchScopeTests:testScopeEncloses24()
43669=JavaSearchScopeTests:testScopeEncloses11()
43670=JavaSearchScopeTests:testApplicationLibrairiesJarAndClassFolder()
43671=JavaSearchScopeTests:testScopeEncloses33()
43672=JavaSearchScopeTests:testScopeEncloses22()
43673=JavaSearchScopeTests:testScopeEncloses31()
43674=JavaSearchScopeTests:testBug179199()
43675=JavaSearchScopeTests:testScopeEncloses20()
43676=JavaSearchScopeTests:testBug119203()
43677=JavaSearchScopeTests:testSources()
43678=JavaSearchScopeTests:testScopeEncloses40()
43679=JavaSearchScopeTests:testScopeEncloses09()
43680=JavaSearchScopeTests:testSystemLibraries()
43681=JavaSearchScopeTests:testScopeEncloses28c()
43682=JavaSearchScopeTests:testBug101426()
43683=JavaSearchScopeTests:testScopeEncloses18()
43684=JavaSearchScopeTests:testScopeEncloses07()
43685=JavaSearchScopeTests:testBug101777()
43686=X:main(String[])
43687=X05:foo(Object)
43688=DiskIndex:writeAllDocumentNames(String[], FileOutputStream)
43689=DiskIndex:computeDocumentNames(String[], int[], SimpleLookupTable, MemoryIndex)
43690=DiskIndex:writeDocumentNumbers(int[], FileOutputStream)
43691=DiskIndex:addQueryResult(HashtableOfObject, char[], Object, MemoryIndex, boolean)
43692=DiskIndex:mergeCategory(char[], DiskIndex, int[], FileOutputStream)
43693=DiskIndex:writeStreamChars(FileOutputStream, char[])
43694=DiskIndex:writeStreamChars(FileOutputStream, char[], int, int)
43695=DiskIndex:addQueryResults(char[][], char[], int, MemoryIndex)
43696=DiskIndex:readDocumentNumbers(Object)
43697=DiskIndex:DiskIndex(IndexLocation)
43698=DiskIndex:initialize(boolean)
43699=DiskIndex:startQuery()
43700=DiskIndex:readDocumentName(int)
43701=DiskIndex:mergeWith(MemoryIndex)
43702=DiskIndex:IntList:asArray()
43703=DiskIndex:readCategoryTable(char[], boolean)
43704=DiskIndex:writeCategoryTable(char[], HashtableOfObject, FileOutputStream)
43705=DiskIndex:writeOffsetToHeader(int)
43706=DiskIndex:readChunk(String[], InputStream, int, int)
43707=DiskIndex:copyQueryResults(HashtableOfObject, int)
43708=DiskIndex:IntList:add(int)
43709=DiskIndex:initializeFrom(DiskIndex, File)
43710=DiskIndex:readStreamInt(InputStream)
43711=DiskIndex:mergeCategories(DiskIndex, int[], FileOutputStream)
43712=DiskIndex:readAllDocumentNames()
43713=DiskIndex:DiskIndex()
43714=DiskIndex:writeHeaderInfo(FileOutputStream)
43715=DiskIndex:writeStreamInt(FileOutputStream, int)
43716=DiskIndex:stopQuery()
43717=DiskIndex:readStreamChars(InputStream)
43718=DiskIndex:readStreamDocumentArray(InputStream, int)
43719=DiskIndex:cacheDocumentNames()
43720=DiskIndex:IntList:IntList(int[])
43721=DiskIndex:addDocumentNames(String, MemoryIndex)
43722=DiskIndex:readStreamBuffer(InputStream)
43723=DiskIndex:writeCategories(FileOutputStream)
43724=DiskIndex:readHeaderInfo(InputStream)
43725=A:foo(java.lang.String, long)
43726=Q:Q()
43727=AND_AND_Expression:resolveType(BlockScope)
43728=AND_AND_Expression:analyseCode(BlockScope, FlowContext, FlowInfo)
43729=AND_AND_Expression:isCompactableOperation()
43730=AND_AND_Expression:generateCode(BlockScope, CodeStream, boolean)
43731=AND_AND_Expression:traverse(ASTVisitor, BlockScope)
43732=AND_AND_Expression:AND_AND_Expression(Expression, Expression, int)
43733=AND_AND_Expression:generateOptimizedBoolean(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
43734=ClassFileWorkingCopy:getContents()
43735=ClassFileWorkingCopy:getBuffer()
43736=ClassFileWorkingCopy:commitWorkingCopy(boolean, IProgressMonitor)
43737=ClassFileWorkingCopy:toStringName(StringBuffer)
43738=ClassFileWorkingCopy:openBuffer(IProgressMonitor, Object)
43739=ClassFileWorkingCopy:resource(PackageFragmentRoot)
43740=ClassFileWorkingCopy:getPath()
43741=ClassFileWorkingCopy:ClassFileWorkingCopy(ClassFile, WorkingCopyOwner)
43742=ClassFileWorkingCopy:getPrimaryElement(boolean)
43743=A:foo()
43744=X28c:foo()
43745=X14a:foo()
43746=JavaElementDeltaTests:testRemoveNonJavaProjectUpdateDependent3()
43747=JavaElementDeltaTests:testCloseJavaProject()
43748=JavaElementDeltaTests:testDiscardWorkingCopy1()
43749=JavaElementDeltaTests:testDeleteProjectAfterChangingClasspath()
43750=JavaElementDeltaTests:testAddCuInDefaultPkg1()
43751=JavaElementDeltaTests:testAddJavaNature()
43752=JavaElementDeltaTests:testModifyOutputLocation2()
43753=JavaElementDeltaTests:testChangeCustomOutput()
43754=JavaElementDeltaTests:testAddExternalLibFolder1()
43755=JavaElementDeltaTests:testAddZIPArchive4()
43756=JavaElementDeltaTests:testRemoveExternalLibFolder3()
43757=JavaElementDeltaTests:testRemoveNonJavaProjectUpdateDependent1()
43758=JavaElementDeltaTests:testWorkingCopyCommit()
43759=JavaElementDeltaTests:testBuildProjectUsedAsLib()
43760=JavaElementDeltaTests:testBatchOperation()
43761=JavaElementDeltaTests:testModifyOutputLocation4()
43762=JavaElementDeltaTests:testAddExternalLibFolder3()
43763=JavaElementDeltaTests:testRemoveNonJavaResourceJar()
43764=JavaElementDeltaTests:testModifyMethodBodyAndSave()
43765=JavaElementDeltaTests:testRemoveDotClasspathFile()
43766=JavaElementDeltaTests:testRemoveCPEntryAndRoot1()
43767=JavaElementDeltaTests:testChangeExportFlag()
43768=JavaElementDeltaTests:testSetClasspathOnFreshProject()
43769=JavaElementDeltaTests:testRenameNonJavaProject()
43770=JavaElementDeltaTests:testDeleteNonJavaFolder()
43771=JavaElementDeltaTests:testNestedRootParentMove()
43772=JavaElementDeltaTests:testRemoveZIPArchive2()
43773=JavaElementDeltaTests:suite()
43774=JavaElementDeltaTests:JavaElementDeltaTests(String)
43775=JavaElementDeltaTests:testOverwriteClasspath()
43776=JavaElementDeltaTests:testRenameOuterPkgFragment()
43777=JavaElementDeltaTests:testSetClasspathVariable1()
43778=JavaElementDeltaTests:testPackageFragmentRootRemoveAndAdd()
43779=JavaElementDeltaTests:testCopyAndOverwritePackage()
43780=JavaElementDeltaTests:testCloseNonJavaProject()
43781=JavaElementDeltaTests:testChangeExternalLibFolder2()
43782=JavaElementDeltaTests:testAddCommentAndCommit()
43783=JavaElementDeltaTests:testRemoveCPEntryAndRoot2()
43784=JavaElementDeltaTests:testMoveTwoResInRoot()
43785=JavaElementDeltaTests:testAddJavaNatureAndClasspath()
43786=JavaElementDeltaTests:testChangeZIPArchive2()
43787=JavaElementDeltaTests:testCreateWorkingCopy()
43788=JavaElementDeltaTests:testChangeExternalJar()
43789=JavaElementDeltaTests:testChangeExternalLibFolder4()
43790=JavaElementDeltaTests:testAddZIPArchive1()
43791=JavaElementDeltaTests:testAddNonJavaProject()
43792=JavaElementDeltaTests:testRemoveJavaNature()
43793=JavaElementDeltaTests:testDiscardWorkingCopy3()
43794=JavaElementDeltaTests:testRemoveZIPArchive4()
43795=JavaElementDeltaTests:testAddPackageSourceIsBin()
43796=JavaElementDeltaTests:testDeleteProjectSetCPAnotherProject()
43797=JavaElementDeltaTests:testModifyOutputLocation3()
43798=JavaElementDeltaTests:testMoveResInDotNamedFolder()
43799=JavaElementDeltaTests:testNonJavaResourceRemoveAndAdd()
43800=JavaElementDeltaTests:testAddFolderInNonJavaFolder()
43801=JavaElementDeltaTests:testAddFileToSharedNonJavaResource()
43802=JavaElementDeltaTests:testAddExternalLibFolder2()
43803=JavaElementDeltaTests:testAddInvalidSubfolder()
43804=JavaElementDeltaTests:testRemoveExternalLibFolder4()
43805=JavaElementDeltaTests:testAddZIPArchive5()
43806=JavaElementDeltaTests:testRemoveNonJavaProjectUpdateDependent2()
43807=JavaElementDeltaTests:testDiscardWorkingCopy2()
43808=JavaElementDeltaTests:testCUNotOnClasspath()
43809=JavaElementDeltaTests:testRemoveAddJavaProject()
43810=JavaElementDeltaTests:testListenerPostChange()
43811=JavaElementDeltaTests:testListenerReconcile()
43812=JavaElementDeltaTests:testAddExternalLibFolder4()
43813=JavaElementDeltaTests:testRemoveExternalLibFolder2()
43814=JavaElementDeltaTests:testAddZIPArchive3()
43815=JavaElementDeltaTests:testAddCuAfterProjectOpen()
43816=JavaElementDeltaTests:testAddCuInDefaultPkg2()
43817=JavaElementDeltaTests:testOpenJavaProject()
43818=JavaElementDeltaTests:testRenameJavaProject()
43819=JavaElementDeltaTests:testOpenNonJavaProject()
43820=JavaElementDeltaTests:testModifyOutputLocation1()
43821=JavaElementDeltaTests:testModifyProjectDescriptionAndRemoveFolder()
43822=JavaElementDeltaTests:testAddJavaProject()
43823=JavaElementDeltaTests:testPackageFragmentMove()
43824=JavaElementDeltaTests:testRenameMethodAndSave()
43825=JavaElementDeltaTests:testCloseNonJavaProjectUpdateDependent()
43826=JavaElementDeltaTests:testMoveCuInEnclosingPkg()
43827=JavaElementDeltaTests:testChangeRootKind()
43828=JavaElementDeltaTests:testSetClasspathVariable2()
43829=JavaElementDeltaTests:testAddJarAndFolderInSource()
43830=JavaElementDeltaTests:testRemoveZIPArchive3()
43831=JavaElementDeltaTests:testAddTwoJavaProjects()
43832=JavaElementDeltaTests:testCreateSharedWorkingCopy()
43833=JavaElementDeltaTests:testChangeExternalLibFolder1()
43834=JavaElementDeltaTests:testRemoveCPEntryAndRoot3()
43835=JavaElementDeltaTests:testChangeExternalSourceAttachment()
43836=JavaElementDeltaTests:testMergeResourceDeltas()
43837=JavaElementDeltaTests:testRemoveZIPArchive1()
43838=JavaElementDeltaTests:testBug455882()
43839=JavaElementDeltaTests:testRemoveExternalLibFolder1()
43840=JavaElementDeltaTests:testChangeExternalLibFolder3()
43841=JavaElementDeltaTests:testAddZIPArchive2()
43842=JavaElementDeltaTests:testSaveWorkingCopy()
43843=JavaElementDeltaTests:testAddFileToNonJavaProject()
43844=JavaElementDeltaTests:testAddDotClasspathFile()
43845=JavaElementDeltaTests:testChangeZIPArchive1()
43846=JavaElementDeltaTests:testRemoveNonJavaProject()
43847=JavaElementDeltaTests:testChangeExternalLibFolder5()
43848=JavaElementDeltaTests:testRemoveAddBinaryProject()
43849=JavaElementDeltaTests:testRemoveJavaProject()
43850=JavaElementDeltaTests:testCompilationUnitRemoveAndAdd()
43851=JavaElementDeltaTests:testDeleteInnerJar()
43852=JavaElementDeltaTests:testPackageFragmentAddAndRemove()
43853=JavaElementDeltaTests:testAddTwoJavaProjectsWithExtraSetClasspath()
43854=JavaElementDeltaTests:testRemoveZIPArchive5()
43855=X09:foo(Object, int)
43856=TestValid2:foo1()
43857=TestValid2:foo2()
43858=DeclarationVisitor:visitFieldDeclaration(FieldDeclaration)
43859=DeclarationVisitor:visitAnnotationTypeElementDeclaration(AnnotationTypeElementDeclaration)
43860=DeclarationVisitor:visitAnnotationTypeDeclaration(AnnotationTypeDeclaration)
43861=DeclarationVisitor:visitTypeParameterDeclaration(TypeParameterDeclaration)
43862=DeclarationVisitor:visitPackageDeclaration(PackageDeclaration)
43863=DeclarationVisitor:visitMemberDeclaration(MemberDeclaration)
43864=DeclarationVisitor:visitInterfaceDeclaration(InterfaceDeclaration)
43865=DeclarationVisitor:visitParameterDeclaration(ParameterDeclaration)
43866=DeclarationVisitor:visitEnumDeclaration(EnumDeclaration)
43867=DeclarationVisitor:visitClassDeclaration(ClassDeclaration)
43868=DeclarationVisitor:visitDeclaration(Declaration)
43869=DeclarationVisitor:visitExecutableDeclaration(ExecutableDeclaration)
43870=DeclarationVisitor:visitMethodDeclaration(MethodDeclaration)
43871=DeclarationVisitor:visitConstructorDeclaration(ConstructorDeclaration)
43872=DeclarationVisitor:visitTypeDeclaration(TypeDeclaration)
43873=DeclarationVisitor:visitEnumConstantDeclaration(EnumConstantDeclaration)
43874=ASTSyntaxErrorPropagator:visit(EnumDeclaration)
43875=ASTSyntaxErrorPropagator:ASTSyntaxErrorPropagator(CategorizedProblem[])
43876=ASTSyntaxErrorPropagator:visit(CompilationUnit)
43877=ASTSyntaxErrorPropagator:visit(Initializer)
43878=ASTSyntaxErrorPropagator:checkAndTagAsMalformed(ASTNode)
43879=ASTSyntaxErrorPropagator:visit(MethodDeclaration)
43880=ASTSyntaxErrorPropagator:visit(AnnotationTypeDeclaration)
43881=ASTSyntaxErrorPropagator:visit(TypeDeclaration)
43882=ASTSyntaxErrorPropagator:visit(FieldDeclaration)
43883=ASTSyntaxErrorPropagator:visit(PackageDeclaration)
43884=ASTSyntaxErrorPropagator:visit(ImportDeclaration)
43885=LabelFlowContext:individualToString()
43886=LabelFlowContext:LabelFlowContext(FlowContext, ASTNode, char[], BranchLabel, BlockScope)
43887=LabelFlowContext:checkLabelValidity(BlockScope)
43888=LabelFlowContext:labelName()
43889=RegionBasedTypeHierarchy:removeType(IType)
43890=RegionBasedTypeHierarchy:pruneDeadBranches(IType)
43891=RegionBasedTypeHierarchy:compute()
43892=RegionBasedTypeHierarchy:pruneDeadBranches(IType[])
43893=RegionBasedTypeHierarchy:RegionBasedTypeHierarchy(IRegion, ICompilationUnit[], IType, boolean)
43894=RegionBasedTypeHierarchy:pruneDeadBranches()
43895=RegionBasedTypeHierarchy:javaProject()
43896=RegionBasedTypeHierarchy:isAffectedByOpenable(IJavaElementDelta, IJavaElement, int)
43897=RegionBasedTypeHierarchy:initializeRegions()
43898=ConstructorLocator:matchParametersCount(ASTNode, Expression[])
43899=ConstructorLocator:matchConstructor(MethodBinding)
43900=ConstructorLocator:newDeclarationMatch(ASTNode, IJavaElement, Binding, int, int, MatchLocator)
43901=ConstructorLocator:match(MessageSend, MatchingNodeSet)
43902=ConstructorLocator:match(ASTNode, MatchingNodeSet)
43903=ConstructorLocator:match(ConstructorDeclaration, MatchingNodeSet)
43904=ConstructorLocator:match(ReferenceExpression, MatchingNodeSet)
43905=ConstructorLocator:resolveLevel(ConstructorDeclaration, boolean)
43906=ConstructorLocator:match(TypeDeclaration, MatchingNodeSet)
43907=ConstructorLocator:ConstructorLocator(ConstructorPattern)
43908=ConstructorLocator:resolveLevel(Binding)
43909=ConstructorLocator:referenceType()
43910=ConstructorLocator:matchReportReference(ASTNode, IJavaElement, Binding, int, MatchLocator)
43911=ConstructorLocator:resolveLevel(AllocationExpression)
43912=ConstructorLocator:fineGrain()
43913=ConstructorLocator:match(Expression, MatchingNodeSet)
43914=ConstructorLocator:resolveLevel(ASTNode)
43915=ConstructorLocator:toString()
43916=ConstructorLocator:matchLevelForDeclarations(ConstructorDeclaration)
43917=ConstructorLocator:matchContainer()
43918=ConstructorLocator:match(FieldDeclaration, MatchingNodeSet)
43919=ConstructorLocator:resolveLevel(TypeDeclaration)
43920=ConstructorLocator:resolveLevel(FieldDeclaration)
43921=ConstructorLocator:matchLevelForReferences(ConstructorDeclaration)
43922=MultiSourceFolderAndOutputFolderTests:test0009()
43923=MultiSourceFolderAndOutputFolderTests:MultiSourceFolderAndOutputFolderTests(String)
43924=MultiSourceFolderAndOutputFolderTests:test0005()
43925=MultiSourceFolderAndOutputFolderTests:suite()
43926=MultiSourceFolderAndOutputFolderTests:test0007()
43927=MultiSourceFolderAndOutputFolderTests:test0001()
43928=MultiSourceFolderAndOutputFolderTests:test0012()
43929=MultiSourceFolderAndOutputFolderTests:test0003()
43930=MultiSourceFolderAndOutputFolderTests:test0010()
43931=MultiSourceFolderAndOutputFolderTests:test0008()
43932=MultiSourceFolderAndOutputFolderTests:test0004()
43933=MultiSourceFolderAndOutputFolderTests:test0006()
43934=MultiSourceFolderAndOutputFolderTests:test0002()
43935=MultiSourceFolderAndOutputFolderTests:test0011()
43936=IfStatement:setExpression(Expression)
43937=IfStatement:propertyDescriptors(int)
43938=IfStatement:memSize()
43939=IfStatement:setElseStatement(Statement)
43940=IfStatement:subtreeMatch0(ASTMatcher, Object)
43941=IfStatement:getThenStatement()
43942=IfStatement:getNodeType0()
43943=IfStatement:clone0(AST)
43944=IfStatement:getExpression()
43945=IfStatement:internalStructuralPropertiesForType(int)
43946=IfStatement:setThenStatement(Statement)
43947=IfStatement:getElseStatement()
43948=IfStatement:treeSize()
43949=IfStatement:IfStatement(AST)
43950=IfStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
43951=IfStatement:accept0(ASTVisitor)
43952=InferenceFailureException:InferenceFailureException(String)
43953=StringSet:rehash()
43954=StringSet:add(String)
43955=StringSet:StringSet(int)
43956=StringSet:includes(String)
43957=StringSet:toString()
43958=StringSet:clear()
43959=CompletionOnSingleNameReference:printExpression(int, StringBuffer)
43960=CompletionOnSingleNameReference:resolveType(BlockScope)
43961=CompletionOnSingleNameReference:CompletionOnSingleNameReference(char[], long, char[][], boolean, boolean)
43962=CompletionOnSingleNameReference:CompletionOnSingleNameReference(char[], long, boolean)
43963=X:bar(int, String)
43964=X:X()
43965=BatchFilerImpl:addNewClassFile(ReferenceBinding)
43966=BatchFilerImpl:validateName(CharSequence)
43967=BatchFilerImpl:createSourceFile(CharSequence, Element)
43968=BatchFilerImpl:createResource(Location, CharSequence, CharSequence, Element)
43969=BatchFilerImpl:addNewUnit(ICompilationUnit)
43970=BatchFilerImpl:BatchFilerImpl(BaseAnnotationProcessorManager, BatchProcessingEnvImpl)
43971=BatchFilerImpl:getResource(Location, CharSequence, CharSequence)
43972=BatchFilerImpl:createClassFile(CharSequence, Element)
43973=X30:foo()
43974=A:foo()
43975=CorrectSuperInterface1:foo()
43976=HashtableOfInt:HashtableOfInt(int)
43977=HashtableOfInt:put(int, Object)
43978=HashtableOfInt:get(int)
43979=HashtableOfInt:toString()
43980=HashtableOfInt:rehash()
43981=HashtableOfInt:HashtableOfInt()
43982=HashtableOfInt:size()
43983=HashtableOfInt:containsKey(int)
43984=Test:m()
43985=INameEnvironmentWithProgress:setMonitor(IProgressMonitor)
43986=AptUtil:getFactoryForAnnotation(String, IJavaProject)
43987=AptUtil:AptUtil()
43988=TestRunner:addGrid(Panel, Component, int, int, int, int, double, int)
43989=TestRunner:testEnded(String)
43990=TestRunner:showStatus(String)
43991=TestRunner:createTestResult()
43992=TestRunner:testFailed(int, Test, Throwable)
43993=TestRunner:runFailed(String)
43994=TestRunner:failureSelected()
43995=TestRunner:run(Class)
43996=TestRunner:runSuite()
43997=TestRunner:createCounterPanel()
43998=TestRunner:start(String[])
43999=TestRunner:about()
44000=TestRunner:clearStatus()
44001=TestRunner:isErrorSelected()
44002=TestRunner:createUI(String)
44003=TestRunner:TestRunner()
44004=TestRunner:shouldReload()
44005=TestRunner:reset()
44006=TestRunner:rerun()
44007=TestRunner:showInfo(String)
44008=TestRunner:main(String[])
44009=TestRunner:appendFailure(String, Test, Throwable)
44010=TestRunner:createMenus(MenuBar)
44011=TestRunner:loadFrameIcon()
44012=TestRunner:getRunner()
44013=TestRunner:rerunTest(Test)
44014=TestRunner:setLabelValue(Label, int)
44015=TestRunner:addToCounterPanel(Panel, Component, int, int, int, int, double, double, int, int, Insets)
44016=TestRunner:showErrorTrace()
44017=TestRunner:createJUnitMenu()
44018=TestRunner:setSuiteName(String)
44019=TestRunner:testStarted(String)
44020=X01:foo()
44021=ResolveDuplicateMethodDeclaration3:foo(Object)
44022=X:foo(List<? extends @Marker Comparable<T>>)
44023=Test:foo(int)
44024=E:foo()
44025=X:main(String[])
44026=EnumDeclaration:traverse(ASTVisitor, ClassScope)
44027=EnumDeclaration:EnumDeclaration(CompilationResult)
44028=EnumDeclaration:traverse(ASTVisitor, CompilationUnitScope)
44029=EnumDeclaration:traverse(ASTVisitor, BlockScope)
44030=EnumDeclaration:printBody(int, StringBuffer)
44031=E:foo()
44032=FriendDependencyTests:suite()
44033=FriendDependencyTests:testInternSimpleNames()
44034=FriendDependencyTests:testIncludes()
44035=FriendDependencyTests:testStringSetNew()
44036=FriendDependencyTests:testStringSetElementSize()
44037=FriendDependencyTests:testJavaModelManagerGetJavaModelManager()
44038=FriendDependencyTests:testJavaModelManagerGetLastBuiltState()
44039=FriendDependencyTests:testInternQualifiedNames()
44040=FriendDependencyTests:testGetReferences()
44041=FriendDependencyTests:FriendDependencyTests(String)
44042=FriendDependencyTests:testStringSetAdd()
44043=FriendDependencyTests:testStringSetclear()
44044=FriendDependencyTests:testSimpleLookupTableValueTable()
44045=FriendDependencyTests:testSimpleLookupTableKeyTable()
44046=ListRewriteEvent:getIndex(ASTNode, int)
44047=ListRewriteEvent:getChangeKind()
44048=ListRewriteEvent:toString()
44049=ListRewriteEvent:replaceEntry(ASTNode, ASTNode)
44050=ListRewriteEvent:ListRewriteEvent(List)
44051=ListRewriteEvent:getEntries()
44052=ListRewriteEvent:ListRewriteEvent(RewriteEvent[])
44053=ListRewriteEvent:insert(ASTNode, int)
44054=ListRewriteEvent:isListRewrite()
44055=ListRewriteEvent:getOriginalValue()
44056=ListRewriteEvent:getNewValue()
44057=ListRewriteEvent:setNewValue(ASTNode, int)
44058=ListRewriteEvent:removeEntry(ASTNode)
44059=ListRewriteEvent:getChangeKind(int)
44060=ListRewriteEvent:getChildren()
44061=ListRewriteEvent:revertChange(NodeRewriteEvent)
44062=Test:main(String[])
44063=MethodInvocation:isResolvedTypeInferredFromExpectedType()
44064=MethodInvocation:MethodInvocation(AST)
44065=MethodInvocation:getExpression()
44066=MethodInvocation:arguments()
44067=MethodInvocation:treeSize()
44068=MethodInvocation:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
44069=MethodInvocation:getName()
44070=MethodInvocation:clone0(AST)
44071=MethodInvocation:internalGetChildListProperty(ChildListPropertyDescriptor)
44072=MethodInvocation:accept0(ASTVisitor)
44073=MethodInvocation:typeArguments()
44074=MethodInvocation:propertyDescriptors(int)
44075=MethodInvocation:subtreeMatch0(ASTMatcher, Object)
44076=MethodInvocation:getNodeType0()
44077=MethodInvocation:setExpression(Expression)
44078=MethodInvocation:setName(SimpleName)
44079=MethodInvocation:memSize()
44080=MethodInvocation:internalStructuralPropertiesForType(int)
44081=MethodInvocation:resolveMethodBinding()
44082=A:foo()
44083=A:main(String[])
44084=ImportAdder:addImports(Collection<ImportName>, Collection<ImportName>)
44085=A:foo()
44086=FloatCache:put(float, int)
44087=FloatCache:get(float)
44088=FloatCache:toString()
44089=FloatCache:clear()
44090=FloatCache:FloatCache(int)
44091=FloatCache:containsKey(float)
44092=FloatCache:FloatCache()
44093=CompletionWithMissingTypesTests_1_5:test0004()
44094=CompletionWithMissingTypesTests_1_5:test0008()
44095=CompletionWithMissingTypesTests_1_5:setUpSuite()
44096=CompletionWithMissingTypesTests_1_5:test0006()
44097=CompletionWithMissingTypesTests_1_5:test0013()
44098=CompletionWithMissingTypesTests_1_5:test0015()
44099=CompletionWithMissingTypesTests_1_5:test0002()
44100=CompletionWithMissingTypesTests_1_5:test0011()
44101=CompletionWithMissingTypesTests_1_5:test0009()
44102=CompletionWithMissingTypesTests_1_5:test0005()
44103=CompletionWithMissingTypesTests_1_5:CompletionWithMissingTypesTests_1_5(String)
44104=CompletionWithMissingTypesTests_1_5:test0007()
44105=CompletionWithMissingTypesTests_1_5:test0001()
44106=CompletionWithMissingTypesTests_1_5:test0012()
44107=CompletionWithMissingTypesTests_1_5:test0003()
44108=CompletionWithMissingTypesTests_1_5:test0014()
44109=CompletionWithMissingTypesTests_1_5:suite()
44110=CompletionWithMissingTypesTests_1_5:_test0010()
44111=A:B:test()
44112=DeleteResourceElementsOperation:verify(IJavaElement)
44113=DeleteResourceElementsOperation:processElement(IJavaElement)
44114=DeleteResourceElementsOperation:deletePackageFragment(IPackageFragment)
44115=DeleteResourceElementsOperation:DeleteResourceElementsOperation(IJavaElement[], boolean)
44116=DeleteResourceElementsOperation:getMainTaskName()
44117=ExternalAnnotationSuperimposer:snapshot()
44118=ExternalAnnotationSuperimposer:visit(ReferenceBinding)
44119=ExternalAnnotationSuperimposer:annotateFieldBinding(FieldBinding, ExternalAnnotationProvider, LookupEnvironment)
44120=ExternalAnnotationSuperimposer:annotateMethodBinding(MethodBinding, ExternalAnnotationProvider, LookupEnvironment)
44121=ExternalAnnotationSuperimposer:visit(TypeVariableBinding)
44122=ExternalAnnotationSuperimposer:restore(ExternalAnnotationSuperimposer)
44123=ExternalAnnotationSuperimposer:ExternalAnnotationSuperimposer(TypeBinding, boolean, ITypeAnnotationWalker)
44124=ExternalAnnotationSuperimposer:visit(IntersectionTypeBinding18)
44125=ExternalAnnotationSuperimposer:visit(RawTypeBinding)
44126=ExternalAnnotationSuperimposer:goAndSuperimpose(ITypeAnnotationWalker, TypeBinding)
44127=ExternalAnnotationSuperimposer:visit(WildcardBinding)
44128=ExternalAnnotationSuperimposer:ExternalAnnotationSuperimposer(LookupEnvironment)
44129=ExternalAnnotationSuperimposer:go(ITypeAnnotationWalker)
44130=ExternalAnnotationSuperimposer:annotateType(SourceTypeBinding, ExternalAnnotationProvider, LookupEnvironment)
44131=ExternalAnnotationSuperimposer:apply(SourceTypeBinding, String)
44132=ExternalAnnotationSuperimposer:superimpose(T, Class<? extends T>)
44133=ExternalAnnotationSuperimposer:visit(BaseTypeBinding)
44134=ExternalAnnotationSuperimposer:visit(ArrayBinding)
44135=ExternalAnnotationSuperimposer:visit(ParameterizedTypeBinding)
44136=TypeAnnotationWalker:TypeAnnotationWalker(IBinaryTypeAnnotation[], long, int)
44137=TypeAnnotationWalker:toTypeParameter(boolean, int)
44138=TypeAnnotationWalker:toNextArrayDimension()
44139=TypeAnnotationWalker:toSupertype(short, char[])
44140=TypeAnnotationWalker:toNextDetail(int)
44141=TypeAnnotationWalker:toField()
44142=TypeAnnotationWalker:toReceiver()
44143=TypeAnnotationWalker:TypeAnnotationWalker(IBinaryTypeAnnotation[], long)
44144=TypeAnnotationWalker:restrict(long, int)
44145=TypeAnnotationWalker:toTypeParameterBounds(boolean, int)
44146=TypeAnnotationWalker:toThrows(int)
44147=TypeAnnotationWalker:toNextNestedType()
44148=TypeAnnotationWalker:toWildcardBound()
44149=TypeAnnotationWalker:toTypeBound(short)
44150=TypeAnnotationWalker:toMethodParameter(short)
44151=TypeAnnotationWalker:TypeAnnotationWalker(IBinaryTypeAnnotation[])
44152=TypeAnnotationWalker:toTypeArgument(int)
44153=TypeAnnotationWalker:toTarget(int)
44154=TypeAnnotationWalker:toMethodReturn()
44155=TypeAnnotationWalker:getAnnotationsAtCursor(int)
44156=SourceRefElementInfo:getDeclarationSourceEnd()
44157=SourceRefElementInfo:setSourceRangeEnd(int)
44158=SourceRefElementInfo:setSourceRangeStart(int)
44159=SourceRefElementInfo:getDeclarationSourceStart()
44160=SourceRefElementInfo:getSourceRange()
44161=TryStatement:treeSize()
44162=TryStatement:setBody(Block)
44163=TryStatement:resources()
44164=TryStatement:internalStructuralPropertiesForType(int)
44165=TryStatement:subtreeMatch0(ASTMatcher, Object)
44166=TryStatement:catchClauses()
44167=TryStatement:propertyDescriptors(int)
44168=TryStatement:getBody()
44169=TryStatement:TryStatement(AST)
44170=TryStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
44171=TryStatement:getNodeType0()
44172=TryStatement:memSize()
44173=TryStatement:setFinally(Block)
44174=TryStatement:accept0(ASTVisitor)
44175=TryStatement:internalGetChildListProperty(ChildListPropertyDescriptor)
44176=TryStatement:clone0(AST)
44177=TryStatement:getFinally()
44178=Statistics:toString()
44179=Statistics:getSum(int)
44180=Statistics:getStddev(int)
44181=Statistics:getCount(int)
44182=Statistics:elapsedProcessToString()
44183=Statistics:dimToString(int, StringBuffer)
44184=Statistics:getAverage(int)
44185=Statistics:Statistics(DataPoint[])
44186=Statistics:toString(int)
44187=LocalVariableTest:test019()
44188=LocalVariableTest:test008()
44189=LocalVariableTest:test010()
44190=LocalVariableTest:suite()
44191=LocalVariableTest:test412119c()
44192=LocalVariableTest:test013()
44193=LocalVariableTest:test002()
44194=LocalVariableTest:test011()
44195=LocalVariableTest:test017()
44196=LocalVariableTest:test006()
44197=LocalVariableTest:test015()
44198=LocalVariableTest:test004()
44199=LocalVariableTest:LocalVariableTest(String)
44200=LocalVariableTest:test009()
44201=LocalVariableTest:test412119d()
44202=LocalVariableTest:test020()
44203=LocalVariableTest:test412119b()
44204=LocalVariableTest:test014()
44205=LocalVariableTest:test003()
44206=LocalVariableTest:test412119a()
44207=LocalVariableTest:test001()
44208=LocalVariableTest:test012()
44209=LocalVariableTest:testClass()
44210=LocalVariableTest:test018()
44211=LocalVariableTest:test007()
44212=LocalVariableTest:test016()
44213=LocalVariableTest:test005()
44214=FieldDeclaration:resolve(MethodScope)
44215=FieldDeclaration:FieldDeclaration(char[], int, int)
44216=FieldDeclaration:analyseCode(MethodScope, FlowContext, FlowInfo)
44217=FieldDeclaration:isStatic()
44218=FieldDeclaration:generateCode(BlockScope, CodeStream)
44219=FieldDeclaration:traverse(ASTVisitor, MethodScope)
44220=FieldDeclaration:isField()
44221=FieldDeclaration:FieldDeclaration()
44222=Test:main(String[])
44223=DefaultProblemFactory:loadMessageTemplates(Locale)
44224=DefaultProblemFactory:localizedMessage(IProblem)
44225=DefaultProblemFactory:DefaultProblemFactory(Locale)
44226=DefaultProblemFactory:getLocale()
44227=DefaultProblemFactory:DefaultProblemFactory()
44228=DefaultProblemFactory:keyFromID(int)
44229=DefaultProblemFactory:createProblem(char[], int, String[], String[], int, int, int, int)
44230=DefaultProblemFactory:getLocalizedMessage(int, String[])
44231=Test:foo(Exception)
44232=SimpleNameVector:remove(char[])
44233=SimpleNameVector:addAll(char[][])
44234=SimpleNameVector:add(char[])
44235=SimpleNameVector:elementAt(int)
44236=SimpleNameVector:copyInto(Object[])
44237=SimpleNameVector:removeAll()
44238=SimpleNameVector:contains(char[])
44239=SimpleNameVector:SimpleNameVector()
44240=SimpleNameVector:size()
44241=SimpleNameVector:toString()
44242=SortElementsOperation:checkMalformedNodes(ASTNode)
44243=SortElementsOperation:verify()
44244=SortElementsOperation:SortElementsOperation(int, IJavaElement[], int[], Comparator)
44245=SortElementsOperation:executeOperation()
44246=SortElementsOperation:processElement(ICompilationUnit, char[])
44247=SortElementsOperation:sortCompilationUnit(org.eclipse.jdt.core.dom.CompilationUnit, TextEditGroup)
44248=SortElementsOperation:isMalformed(ASTNode)
44249=SortElementsOperation:covers(TextEdit, TextEdit)
44250=SortElementsOperation:calculateEdit(org.eclipse.jdt.core.dom.CompilationUnit, TextEditGroup)
44251=SortElementsOperation:getMainAmountOfWork()
44252=SortElementsOperation:insert(TextEdit, TextEdit)
44253=Test:foo()
44254=firstClass:myMethod()
44255=Example:foo()
44256=X06:bar()
44257=Test:bar()
44258=Test:foo(int)
44259=LoopingFlowContext:recordCatchContextOfEscapingException(ExceptionHandlingFlowContext, ReferenceBinding, FlowInfo)
44260=LoopingFlowContext:recordUnboxing(Scope, Expression, int, FlowInfo)
44261=LoopingFlowContext:individualToString()
44262=LoopingFlowContext:EscapingExceptionCatchSite:EscapingExceptionCatchSite(ExceptionHandlingFlowContext, ReferenceBinding, FlowInfo)
44263=LoopingFlowContext:removeFinalAssignmentIfAny(Reference)
44264=LoopingFlowContext:complainOnDeferredNullChecks(BlockScope, FlowInfo, boolean)
44265=LoopingFlowContext:recordUsingNullReference(Scope, LocalVariableBinding, ASTNode, int, FlowInfo)
44266=LoopingFlowContext:EscapingExceptionCatchSite:simulateThrowAfterLoopBack(FlowInfo)
44267=LoopingFlowContext:isContinuable()
44268=LoopingFlowContext:LoopingFlowContext(FlowContext, FlowInfo, ASTNode, BranchLabel, BranchLabel, Scope, boolean)
44269=LoopingFlowContext:simulateThrowAfterLoopBack(FlowInfo)
44270=LoopingFlowContext:recordContinueFrom(FlowContext, FlowInfo)
44271=LoopingFlowContext:hasEscapingExceptions()
44272=LoopingFlowContext:complainOnDeferredNullChecks(BlockScope, FlowInfo)
44273=LoopingFlowContext:continueLabel()
44274=LoopingFlowContext:isContinuedTo()
44275=LoopingFlowContext:recordFinalAssignment(VariableBinding, Reference)
44276=LoopingFlowContext:internalRecordNullityMismatch(Expression, TypeBinding, FlowInfo, int, TypeBinding, int)
44277=LoopingFlowContext:recordExitAgainstResource(BlockScope, FlowInfo, FakedTrackingVariable, ASTNode)
44278=LoopingFlowContext:complainOnDeferredFinalChecks(BlockScope, FlowInfo)
44279=LoopingFlowContext:recordNullReference(LocalVariableBinding, ASTNode, int, FlowInfo)
44280=LoopingFlowContext:recordBreakTo(FlowContext)
44281=ASTBasedDeclarationImpl:getModifiers()
44282=ASTBasedDeclarationImpl:getAstNode()
44283=ASTBasedDeclarationImpl:getAnnotationMirrors()
44284=ASTBasedDeclarationImpl:getCompilationUnit()
44285=ASTBasedDeclarationImpl:getModifiers(int)
44286=ASTBasedDeclarationImpl:ASTBasedDeclarationImpl(ASTNode, IFile, BaseProcessorEnv)
44287=ASTBasedDeclarationImpl:hashCode()
44288=ASTBasedDeclarationImpl:isFromSource()
44289=ASTBasedDeclarationImpl:getResource()
44290=ASTBasedDeclarationImpl:isBindingBased()
44291=ASTBasedDeclarationImpl:getAnnotation(Class<A>)
44292=ASTBasedDeclarationImpl:getPosition()
44293=ASTBasedDeclarationImpl:equals(Object)
44294=ASTBasedDeclarationImpl:getAnnotationInstancesFromAST()
44295=Sorting:concreteFirst(MethodBinding[], int)
44296=Sorting:sortTypes(ReferenceBinding[])
44297=Sorting:sortInferenceVariables(InferenceVariable[])
44298=Sorting:abstractFirst(MethodBinding[], int)
44299=Sorting:sort(ReferenceBinding[], int, ReferenceBinding[], int)
44300=Sorting:sortSuper(ReferenceBinding, ReferenceBinding[], ReferenceBinding[], int)
44301=Test:main(String[])
44302=CounterPanel:setFailureValue(int)
44303=CounterPanel:setRunValue(int)
44304=CounterPanel:addToGrid(Component, int, int, int, int, double, double, int, int, Insets)
44305=CounterPanel:setLabelValue(JTextField, int)
44306=CounterPanel:reset()
44307=CounterPanel:setErrorValue(int)
44308=CounterPanel:CounterPanel()
44309=CounterPanel:createOutputField(int)
44310=CounterPanel:setTotal(int)
44311=MirrorDeclarationTestAnnotationProcessorFactory:MirrorDeclarationTestAnnotationProcessorFactory()
44312=MirrorDeclarationTestAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
44313=DebugEvaluationTest:test059()
44314=DebugEvaluationTest:test024()
44315=DebugEvaluationTest:test037()
44316=DebugEvaluationTest:compileAndDeploy15(String, String)
44317=DebugEvaluationTest:compileAndDeploy(String, String)
44318=DebugEvaluationTest:test048()
44319=DebugEvaluationTest:test002()
44320=DebugEvaluationTest:test011()
44321=DebugEvaluationTest:test057()
44322=DebugEvaluationTest:initialize(CompilerTestSetup)
44323=DebugEvaluationTest:test022()
44324=DebugEvaluationTest:test068()
44325=DebugEvaluationTest:test035()
44326=DebugEvaluationTest:test046()
44327=DebugEvaluationTest:test055()
44328=DebugEvaluationTest:test020()
44329=DebugEvaluationTest:test066()
44330=DebugEvaluationTest:testClass()
44331=DebugEvaluationTest:testNegative003()
44332=DebugEvaluationTest:test033()
44333=DebugEvaluationTest:getCompilerOptions()
44334=DebugEvaluationTest:_test013()
44335=DebugEvaluationTest:test044()
44336=DebugEvaluationTest:test053()
44337=DebugEvaluationTest:testNegative005()
44338=DebugEvaluationTest:test031()
44339=DebugEvaluationTest:test042()
44340=DebugEvaluationTest:test051()
44341=DebugEvaluationTest:test009()
44342=DebugEvaluationTest:test062()
44343=DebugEvaluationTest:test040()
44344=DebugEvaluationTest:evaluate(JDIStackFrame, DebugRequestor, char[])
44345=DebugEvaluationTest:removeTempClass(String)
44346=DebugEvaluationTest:test060()
44347=DebugEvaluationTest:test007()
44348=DebugEvaluationTest:_test015()
44349=DebugEvaluationTest:suite()
44350=DebugEvaluationTest:test005()
44351=DebugEvaluationTest:test018()
44352=DebugEvaluationTest:test029()
44353=DebugEvaluationTest:setupSuite(Class)
44354=DebugEvaluationTest:test038()
44355=DebugEvaluationTest:test049()
44356=DebugEvaluationTest:test003()
44357=DebugEvaluationTest:test016()
44358=DebugEvaluationTest:test027()
44359=DebugEvaluationTest:test036()
44360=DebugEvaluationTest:test001()
44361=DebugEvaluationTest:test047()
44362=DebugEvaluationTest:test025()
44363=DebugEvaluationTest:test034()
44364=DebugEvaluationTest:test045()
44365=DebugEvaluationTest:test058()
44366=DebugEvaluationTest:test023()
44367=DebugEvaluationTest:test069()
44368=DebugEvaluationTest:test032()
44369=DebugEvaluationTest:testNegative002()
44370=DebugEvaluationTest:_test012()
44371=DebugEvaluationTest:test043()
44372=DebugEvaluationTest:test010()
44373=DebugEvaluationTest:test056()
44374=DebugEvaluationTest:test021()
44375=DebugEvaluationTest:test067()
44376=DebugEvaluationTest:testNegative004()
44377=DebugEvaluationTest:test030()
44378=DebugEvaluationTest:test041()
44379=DebugEvaluationTest:test054()
44380=DebugEvaluationTest:test065()
44381=DebugEvaluationTest:DebugRequestor:acceptClassFiles(org.eclipse.jdt.internal.compiler.ClassFile[], char[])
44382=DebugEvaluationTest:test052()
44383=DebugEvaluationTest:test063()
44384=DebugEvaluationTest:test019()
44385=DebugEvaluationTest:_test014()
44386=DebugEvaluationTest:testNegative001()
44387=DebugEvaluationTest:test050()
44388=DebugEvaluationTest:test008()
44389=DebugEvaluationTest:test061()
44390=DebugEvaluationTest:test017()
44391=DebugEvaluationTest:test028()
44392=DebugEvaluationTest:test006()
44393=DebugEvaluationTest:test026()
44394=DebugEvaluationTest:test039()
44395=DebugEvaluationTest:test004()
44396=DebugEvaluationTest:DebugEvaluationTest(String)
44397=VarJarFactoryContainer:VarJarFactoryContainer(IPath)
44398=VarJarFactoryContainer:getJarFile()
44399=VarJarFactoryContainer:getType()
44400=VarJarFactoryContainer:getId()
44401=WhileStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
44402=WhileStatement:WhileStatement(Expression, Statement, int, int)
44403=WhileStatement:traverse(ASTVisitor, BlockScope)
44404=WhileStatement:resolve(BlockScope)
44405=WhileStatement:doesNotCompleteNormally()
44406=WhileStatement:printStatement(int, StringBuffer)
44407=WhileStatement:generateCode(BlockScope, CodeStream)
44408=WhileStatement:completesByContinue()
44409=BuildJarIndex:setJarPath(String)
44410=BuildJarIndex:execute()
44411=BuildJarIndex:setIndexPath(String)
44412=X:foo()
44413=X:foo()
44414=IBinding:toString()
44415=IBinding:isEqualTo(IBinding)
44416=IBinding:isSynthetic()
44417=IBinding:getAnnotations()
44418=IBinding:getJavaElement()
44419=IBinding:getName()
44420=IBinding:getModifiers()
44421=IBinding:isDeprecated()
44422=IBinding:getKey()
44423=IBinding:getKind()
44424=IBinding:isRecovered()
44425=IBinding:equals(Object)
44426=ICompilerRequestor:acceptResult(CompilationResult)
44427=ClassFile:generateMethodInfoAttributes(MethodBinding, AnnotationMethodDeclaration)
44428=ClassFile:generateAnnotation(Annotation, int)
44429=ClassFile:addProblemMethod(AbstractMethodDeclaration, MethodBinding, CategorizedProblem[], int)
44430=ClassFile:generateRuntimeAnnotationsForParameters(Argument[])
44431=ClassFile:completeCodeAttributeForSyntheticMethod(SyntheticMethodBinding, int, int[])
44432=ClassFile:generateMissingTypesAttribute()
44433=ClassFile:u4At(byte[], int, int)
44434=ClassFile:writeArgumentName(char[], int, int)
44435=ClassFile:generateSourceAttribute(String)
44436=ClassFile:reset(SourceTypeBinding)
44437=ClassFile:addSyntheticSwitchTable(SyntheticMethodBinding)
44438=ClassFile:completeCodeAttributeForSyntheticMethod(boolean, SyntheticMethodBinding, int, int[])
44439=ClassFile:generateConstantValueAttribute(Constant, FieldBinding, int)
44440=ClassFile:generateAnnotationDefaultAttribute(AnnotationMethodDeclaration, int)
44441=ClassFile:generateMethodInfoHeader(MethodBinding)
44442=ClassFile:generateElementValue(Expression, TypeBinding, int)
44443=ClassFile:generateCodeAttributeHeader()
44444=ClassFile:addFieldInfos()
44445=ClassFile:generateRuntimeAnnotations(Annotation[], long)
44446=ClassFile:generateHierarchyInconsistentAttribute()
44447=ClassFile:generateSignatureAttribute(char[])
44448=ClassFile:generateTypeAnnotationsOnCodeAttribute()
44449=ClassFile:addAbstractMethod(AbstractMethodDeclaration, MethodBinding)
44450=ClassFile:completeCodeAttributeForMissingAbstractProblemMethod(MethodBinding, int, int[], int)
44451=ClassFile:generateVarargsAttribute()
44452=ClassFile:generateTypeAnnotationAttributeForTypeDeclaration()
44453=ClassFile:recordInnerClasses(TypeBinding, boolean)
44454=ClassFile:utf8At(byte[], int, int)
44455=ClassFile:setForMethodInfos()
44456=ClassFile:addFieldInfo(FieldBinding)
44457=ClassFile:addSyntheticFieldReadAccessMethod(SyntheticMethodBinding)
44458=ClassFile:addSyntheticConstructorAccessMethod(SyntheticMethodBinding)
44459=ClassFile:generateRuntimeTypeAnnotations(AnnotationContext[], int, int)
44460=ClassFile:ClassFile()
44461=ClassFile:i4At(byte[], int, int)
44462=ClassFile:u1At(byte[], int, int)
44463=ClassFile:generateTypeAnnotation(AnnotationContext, int)
44464=ClassFile:getParametersCount(char[])
44465=ClassFile:scanType(char[], int)
44466=ClassFile:filterFakeFrames(Set, Map, int)
44467=ClassFile:completeCodeAttribute(int)
44468=ClassFile:addSyntheticEnumInitializationMethod(SyntheticMethodBinding)
44469=ClassFile:addSyntheticDeserializeLambda(SyntheticMethodBinding, SyntheticMethodBinding[])
44470=ClassFile:completeCodeAttributeForProblemMethod(AbstractMethodDeclaration, MethodBinding, int, int[], int)
44471=ClassFile:addAttributes()
44472=ClassFile:addSyntheticEnumValuesMethod(SyntheticMethodBinding)
44473=ClassFile:initializeLocals(boolean, int, StackMapFrame)
44474=ClassFile:addSyntheticArrayClone(SyntheticMethodBinding)
44475=ClassFile:generateInnerClassAttribute(int, ReferenceBinding[])
44476=ClassFile:generateLocalVariableTableAttribute(int, boolean, boolean)
44477=ClassFile:generateStackMapTableAttribute(MethodBinding, int, int, int, boolean)
44478=ClassFile:initByteArrays()
44479=ClassFile:recordBootstrapMethod(FunctionalExpression)
44480=ClassFile:i2At(byte[], int, int)
44481=ClassFile:addSyntheticMethodAccessMethod(SyntheticMethodBinding)
44482=ClassFile:addSyntheticEnumValueOfMethod(SyntheticMethodBinding)
44483=ClassFile:addFieldAttributes(FieldBinding, int)
44484=ClassFile:completeArgumentAnnotationInfo(Argument[], List)
44485=ClassFile:generateStackMapAttribute(MethodBinding, int, int, int, boolean)
44486=ClassFile:addProblemConstructor(AbstractMethodDeclaration, MethodBinding, CategorizedProblem[], int)
44487=ClassFile:generateMethodInfoAttributes(MethodBinding)
44488=ClassFile:addProblemClinit(CategorizedProblem[])
44489=ClassFile:generateMethodInfoHeaderForClinit()
44490=ClassFile:dumpTargetTypeContents(int, AnnotationContext)
44491=ClassFile:generateElementValue(int, Expression, Constant, TypeBinding)
44492=ClassFile:initializeDefaultLocals(StackMapFrame, MethodBinding, int, int)
44493=ClassFile:recordInnerClasses(TypeBinding)
44494=ClassFile:initialize(SourceTypeBinding, ClassFile, boolean)
44495=ClassFile:completeCodeAttributeForClinit(int, int)
44496=ClassFile:generateMethodParameters(MethodBinding)
44497=ClassFile:retrieveLocal(int, int)
44498=ClassFile:generateMissingAbstractMethods(MethodDeclaration[], CompilationResult)
44499=ClassFile:getNewInstance(SourceTypeBinding)
44500=ClassFile:getReturnType(char[])
44501=ClassFile:jdk16packageInfoAnnotation(long, long)
44502=ClassFile:addSpecialMethods()
44503=ClassFile:addSyntheticArrayConstructor(SyntheticMethodBinding)
44504=ClassFile:addProblemConstructor(AbstractMethodDeclaration, MethodBinding, CategorizedProblem[])
44505=ClassFile:createProblemType(TypeDeclaration, CompilationResult)
44506=ClassFile:generateLineNumberAttribute(int)
44507=ClassFile:addSyntheticFieldWriteAccessMethod(SyntheticMethodBinding)
44508=ClassFile:generateSyntheticAttribute()
44509=ClassFile:u2At(byte[], int, int)
44510=ClassFile:ClassFile(SourceTypeBinding)
44511=ClassFile:addProblemMethod(AbstractMethodDeclaration, MethodBinding, CategorizedProblem[])
44512=ClassFile:generateExceptionsAttribute(ReferenceBinding[])
44513=ClassFile:getBytes()
44514=ClassFile:completeCodeAttributeForClinit(int)
44515=ClassFile:generateDeprecatedAttribute()
44516=ClassFile:fileName()
44517=ClassFile:addRealJumpTarget(Set, int)
44518=ClassFile:outerMostEnclosingClassFile()
44519=ClassFile:generateLineNumberAttribute()
44520=ClassFile:resizeContents(int)
44521=ClassFile:generateMethodInfoHeader(MethodBinding, int)
44522=ClassFile:generateElementValueForNonConstantExpression(Expression, int, TypeBinding)
44523=ClassFile:getCompoundName()
44524=ClassFile:completeMethodInfo(MethodBinding, int, int)
44525=ClassFile:dumpLocations(int[])
44526=ClassFile:generateBootstrapMethods(List)
44527=ClassFile:traverse(MethodBinding, int, byte[], int, int, Map, boolean)
44528=ClassFile:generateEnclosingMethodAttribute()
44529=ClassFile:add(Map, StackMapFrame)
44530=ClassFile:addMissingAbstractProblemMethod(MethodDeclaration, MethodBinding, CategorizedProblem, CompilationResult)
44531=ClassFile:addSyntheticFactoryMethod(SyntheticMethodBinding)
44532=ClassFile:addDefaultAbstractMethods()
44533=Test:foo()
44534=IRuntimeVisibleParameterAnnotationsAttribute:getParameterAnnotations()
44535=IRuntimeVisibleParameterAnnotationsAttribute:getParametersNumber()
44536=DeprecatedTest:test009()
44537=DeprecatedTest:test007()
44538=DeprecatedTest:test020()
44539=DeprecatedTest:test013()
44540=DeprecatedTest:test002()
44541=DeprecatedTest:test011()
44542=DeprecatedTest:test017()
44543=DeprecatedTest:test006()
44544=DeprecatedTest:test015()
44545=DeprecatedTest:test004()
44546=DeprecatedTest:test019()
44547=DeprecatedTest:test008()
44548=DeprecatedTest:suite()
44549=DeprecatedTest:test010()
44550=DeprecatedTest:DeprecatedTest(String)
44551=DeprecatedTest:test001()
44552=DeprecatedTest:test014()
44553=DeprecatedTest:testClass()
44554=DeprecatedTest:test012()
44555=DeprecatedTest:test005()
44556=DeprecatedTest:test018()
44557=DeprecatedTest:test003()
44558=DeprecatedTest:test016()
44559=AnnotationMethodInfo:toStringContent(StringBuffer)
44560=AnnotationMethodInfo:createAnnotationMethod(byte, int, int)
44561=AnnotationMethodInfo:AnnotationMethodInfo(MethodInfo, Object)
44562=AnnotationMethodInfo:getDefaultValue()
44563=TryFlowContext:TryFlowContext(FlowContext, ASTNode)
44564=TryFlowContext:mergeFinallyNullInfo(FlowInfo)
44565=TryFlowContext:markFinallyNullStatus(LocalVariableBinding, int)
44566=X10:bar(String)
44567=X10:foo(String)
44568=TestAll:TestAll(String)
44569=TestAll:suite()
44570=AbstractJavaModelCompletionTests:AbstractJavaModelCompletionTests(String)
44571=AbstractJavaModelCompletionTests:assertResults(String, String)
44572=AbstractJavaModelCompletionTests:setUpSuite()
44573=AbstractJavaModelCompletionTests:tearDown()
44574=AbstractJavaModelCompletionTests:contextComplete0(ICompilationUnit, int, boolean, boolean, boolean, String)
44575=AbstractJavaModelCompletionTests:contextComplete(ICompilationUnit, int, boolean, boolean)
44576=AbstractJavaModelCompletionTests:setUp()
44577=AbstractJavaModelCompletionTests:tearDownSuite()
44578=AbstractJavaModelCompletionTests:getWorkingCopy(String, String)
44579=AbstractJavaModelCompletionTests:removeLibrary(String, String)
44580=AbstractJavaModelCompletionTests:snippetContextComplete(IType, String, int, int, boolean)
44581=AbstractJavaModelCompletionTests:complete(String, String, String)
44582=AbstractJavaModelCompletionTests:contextComplete(ICompilationUnit, int, boolean, boolean, String)
44583=AbstractJavaModelCompletionTests:contextComplete(ICompilationUnit, int)
44584=AbstractJavaModelCompletionTests:addLibrary(String, String, String, String, boolean)
44585=AbstractJavaModelCompletionTests:complete(String, String, boolean, String)
44586=AbstractJavaModelCompletionTests:complete(String, String, boolean, String, String, String)
44587=GenClassProc:init(ProcessingEnvironment)
44588=GenClassProc:createSourceFile(Element, String, String)
44589=GenClassProc:process(Set<? extends TypeElement>, RoundEnvironment)
44590=RecordedParsingInformation:updateRecordedParsingInformation(CompilationResult)
44591=RecordedParsingInformation:RecordedParsingInformation(CategorizedProblem[], int[], int[][])
44592=NullReferenceTest:test0033_conditional_expression()
44593=NullReferenceTest:test0320_if_else()
44594=NullReferenceTest:test0438_while()
44595=NullReferenceTest:testBug336428d()
44596=NullReferenceTest:test0456_while_nested_explicit_label()
44597=NullReferenceTest:test0460_while_explicit_label()
44598=NullReferenceTest:test0421_while()
44599=NullReferenceTest:test0711_for()
44600=NullReferenceTest:test0339_if_else_nested()
44601=NullReferenceTest:_test0900_notNull_protection_tag()
44602=NullReferenceTest:testBug253896a()
44603=NullReferenceTest:testBug195638_comment6()
44604=NullReferenceTest:test0516_try_finally()
44605=NullReferenceTest:testBug402993a()
44606=NullReferenceTest:test0747_for_try_catch()
44607=NullReferenceTest:test0617_do_while_explicit_label()
44608=NullReferenceTest:test0613_do_while()
44609=NullReferenceTest:test0026_suppress_warnings()
44610=NullReferenceTest:test0603_do_while()
44611=NullReferenceTest:test0311_if_else()
44612=NullReferenceTest:test0341_if_else_nested()
44613=NullReferenceTest:test0509_try_finally_embedded()
44614=NullReferenceTest:testBug321926i()
44615=NullReferenceTest:test1017()
44616=NullReferenceTest:test0042_autoboxing_literal()
44617=NullReferenceTest:test0736_for_embedded_lazy_init()
44618=NullReferenceTest:test0950_assert()
44619=NullReferenceTest:_testBug336428a()
44620=NullReferenceTest:test1006()
44621=NullReferenceTest:test0567_try_catch_checked_exception()
44622=NullReferenceTest:test0573_try_catch_unchecked_and_checked_exception()
44623=NullReferenceTest:testBug345305_4()
44624=NullReferenceTest:testBug435528()
44625=NullReferenceTest:test0432_while()
44626=NullReferenceTest:testBug317829e()
44627=NullReferenceTest:test401092a()
44628=NullReferenceTest:test0037_autounboxing_3()
44629=NullReferenceTest:test0903_non_null_protection_tag()
44630=NullReferenceTest:test0517_try_finally()
44631=NullReferenceTest:testBug305590()
44632=NullReferenceTest:test0081_shortcut_boolean_expressions()
44633=NullReferenceTest:testBug253896c()
44634=NullReferenceTest:test0122_strings_concatenation()
44635=NullReferenceTest:testBug384380_a()
44636=NullReferenceTest:testBug336428f()
44637=NullReferenceTest:test0616_do_while_explicit_label()
44638=NullReferenceTest:test0302_if_else()
44639=NullReferenceTest:test0315_if_else()
44640=NullReferenceTest:test0804_switch()
44641=NullReferenceTest:testBug432109()
44642=NullReferenceTest:test1015()
44643=NullReferenceTest:_test0087_shortcut_boolean_expression()
44644=NullReferenceTest:test0092_instanceof()
44645=NullReferenceTest:testBug321926k()
44646=NullReferenceTest:test0514_try_finally()
44647=NullReferenceTest:test0729_for_try_catch_finally()
44648=NullReferenceTest:test0515_try_finally()
44649=NullReferenceTest:testBug256796()
44650=NullReferenceTest:test0527_try_finally_unchecked_exception()
44651=NullReferenceTest:test0336_if_else()
44652=NullReferenceTest:test0080_shortcut_boolean_expressions()
44653=NullReferenceTest:test1004()
44654=NullReferenceTest:testBug345305_2()
44655=NullReferenceTest:testBug332637b()
44656=NullReferenceTest:test0956_assert_combined()
44657=NullReferenceTest:test0703_for()
44658=NullReferenceTest:testBug325229a()
44659=NullReferenceTest:testBug299900b()
44660=NullReferenceTest:test0801_switch()
44661=NullReferenceTest:test0062_method_call_isolation()
44662=NullReferenceTest:test0413_while_unknown_field()
44663=NullReferenceTest:_test0738_for_unknown_protection()
44664=NullReferenceTest:test0443_while_nested()
44665=NullReferenceTest:test0037_autounboxing_5()
44666=NullReferenceTest:test0324_if_else_nested()
44667=NullReferenceTest:testBug291418a()
44668=NullReferenceTest:testClass()
44669=NullReferenceTest:test0741_for_explicit_label()
44670=NullReferenceTest:testBug321926t()
44671=NullReferenceTest:testBug317829a()
44672=NullReferenceTest:test0440_while()
44673=NullReferenceTest:testBug339250b()
44674=NullReferenceTest:test0532_try_finally()
44675=NullReferenceTest:test0465_while_infinite()
44676=NullReferenceTest:test0905_non_null_protection_tag()
44677=NullReferenceTest:test0513_try_finally()
44678=NullReferenceTest:test0537_try_finally()
44679=NullReferenceTest:test0416_while()
44680=NullReferenceTest:test0052_array()
44681=NullReferenceTest:test0430_while_for_nested()
44682=NullReferenceTest:test0437_while_exit()
44683=NullReferenceTest:test0002_simple_field()
44684=NullReferenceTest:test0565_try_catch_unchecked_exception()
44685=NullReferenceTest:testBug293917b()
44686=NullReferenceTest:test0744_for_infinite()
44687=NullReferenceTest:testBug418500()
44688=NullReferenceTest:testBug338234()
44689=NullReferenceTest:test0332_if_else()
44690=NullReferenceTest:test0412_while_if_nested()
44691=NullReferenceTest:test0458_while_nested_explicit_label()
44692=NullReferenceTest:testBug348379c()
44693=NullReferenceTest:testBug321926e()
44694=NullReferenceTest:test0531_try_finally()
44695=NullReferenceTest:test0093_instanceof()
44696=NullReferenceTest:test1052_options_all_error()
44697=NullReferenceTest:testBug339250()
44698=NullReferenceTest:testBug321926v()
44699=NullReferenceTest:test0411_while_nested()
44700=NullReferenceTest:test0404_while()
44701=NullReferenceTest:test0095_instanceof_conditional_or()
44702=NullReferenceTest:test0085_shortcut_boolean_expression()
44703=NullReferenceTest:test0561_try_catch_unchecked_exception()
44704=NullReferenceTest:test0441_while()
44705=NullReferenceTest:test0734_for_while_break()
44706=NullReferenceTest:testBug313870()
44707=NullReferenceTest:test0444_while_deeply_nested()
44708=NullReferenceTest:testBug325755a()
44709=NullReferenceTest:test0094_instanceof()
44710=NullReferenceTest:test0333_if_else()
44711=NullReferenceTest:test0606_do_while()
44712=NullReferenceTest:test1019()
44713=NullReferenceTest:test0737_for_unknown_protection()
44714=NullReferenceTest:test0121_strings_concatenation()
44715=NullReferenceTest:test0306_if_else()
44716=NullReferenceTest:test0535_try_finally()
44717=NullReferenceTest:test2019_flow_info()
44718=NullReferenceTest:test0025_parameter()
44719=NullReferenceTest:test1500()
44720=NullReferenceTest:test2015_flow_info()
44721=NullReferenceTest:test0067_method_call_invocation_target()
44722=NullReferenceTest:testBug332637()
44723=NullReferenceTest:test1008()
44724=NullReferenceTest:test2011_flow_info()
44725=NullReferenceTest:testBug320414()
44726=NullReferenceTest:test0536_try_finally()
44727=NullReferenceTest:testBug317829c()
44728=NullReferenceTest:testBug348379e()
44729=NullReferenceTest:test0446_while()
44730=NullReferenceTest:testBug321926g()
44731=NullReferenceTest:test0434_while_switch_nested()
44732=NullReferenceTest:test0018_field_of_enclosing_object()
44733=NullReferenceTest:test0463_while_infinite()
44734=NullReferenceTest:test1031()
44735=NullReferenceTest:test0021_final_field()
44736=NullReferenceTest:test2007_flow_info()
44737=NullReferenceTest:_test1028()
44738=NullReferenceTest:test0312_if_else()
44739=NullReferenceTest:testBug360328c()
44740=NullReferenceTest:test0731_for()
44741=NullReferenceTest:test1501()
44742=NullReferenceTest:test0511_try_finally()
44743=NullReferenceTest:test2004_flow_info()
44744=NullReferenceTest:test2005_flow_info()
44745=NullReferenceTest:testBug317829a2()
44746=NullReferenceTest:test0449_while_nested()
44747=NullReferenceTest:test0604_do_while()
44748=NullReferenceTest:testBug292478()
44749=NullReferenceTest:test0447_while()
44750=NullReferenceTest:test0722_for_return()
44751=NullReferenceTest:testExpressions01()
44752=NullReferenceTest:test0717_for()
44753=NullReferenceTest:testBug333089()
44754=NullReferenceTest:test0037_conditional_expression_4()
44755=NullReferenceTest:test0314_if_else()
44756=NullReferenceTest:test1051_options_all_ignore()
44757=NullReferenceTest:testBug321926q()
44758=NullReferenceTest:testBug345305_11()
44759=NullReferenceTest:test0530_try_finally()
44760=NullReferenceTest:test0325_if_else_nested()
44761=NullReferenceTest:testBug401088a()
44762=NullReferenceTest:test0065_method_call_invocation_target()
44763=NullReferenceTest:test0013_field_with_method_call()
44764=NullReferenceTest:test0307_if_else()
44765=NullReferenceTest:test2002_flow_info()
44766=NullReferenceTest:testBug319201b()
44767=NullReferenceTest:test0064_method_call_isolation()
44768=NullReferenceTest:test0414_while_unknown_parameter()
44769=NullReferenceTest:test0712_for()
44770=NullReferenceTest:test0802_switch()
44771=NullReferenceTest:testBug304416()
44772=NullReferenceTest:testBug303448a()
44773=NullReferenceTest:testBug406160a()
44774=NullReferenceTest:test0735_for_nested_break()
44775=NullReferenceTest:test0408_while()
44776=NullReferenceTest:test0566_try_catch_unchecked_exception()
44777=NullReferenceTest:test0051_array()
44778=NullReferenceTest:test0423_while()
44779=NullReferenceTest:test0519_try_finally_constructor_exc()
44780=NullReferenceTest:test0503_try_finally()
44781=NullReferenceTest:test0005_final_local()
44782=NullReferenceTest:test1503()
44783=NullReferenceTest:testBug326950a()
44784=NullReferenceTest:test0309_if_else()
44785=NullReferenceTest:test0445_while_deeply_nested()
44786=NullReferenceTest:test0958_assert()
44787=NullReferenceTest:test1055_options_mix()
44788=NullReferenceTest:testBug345305_9()
44789=NullReferenceTest:test0906_non_null_protection_tag()
44790=NullReferenceTest:testBug292478f()
44791=NullReferenceTest:test0710_for()
44792=NullReferenceTest:test0024_field_cast_assignment()
44793=NullReferenceTest:test0037_conditional_expression_2()
44794=NullReferenceTest:testBug321926b()
44795=NullReferenceTest:testExpressions03()
44796=NullReferenceTest:test0034_conditional_expression()
44797=NullReferenceTest:testBug321926s()
44798=NullReferenceTest:test0609_do_while()
44799=NullReferenceTest:test0433_while()
44800=NullReferenceTest:test0310_if_else()
44801=NullReferenceTest:test1058_options_instanceof_is_check()
44802=NullReferenceTest:test0501_try_finally()
44803=NullReferenceTest:test2016_flow_info()
44804=NullReferenceTest:test2018_flow_info()
44805=NullReferenceTest:test0044_autoboxing()
44806=NullReferenceTest:test2010_flow_info()
44807=NullReferenceTest:test0740_for_explicit_label()
44808=NullReferenceTest:testBug338303()
44809=NullReferenceTest:test0607_do_while()
44810=NullReferenceTest:test0529_try_finally()
44811=NullReferenceTest:testBug345305_13()
44812=NullReferenceTest:test0019_field_synchronized()
44813=NullReferenceTest:test0316_if_else()
44814=NullReferenceTest:_test0904_notNull_protection_tag()
44815=NullReferenceTest:test0032_conditional_expression()
44816=NullReferenceTest:test0714_for()
44817=NullReferenceTest:test0619_do_while_infinite()
44818=NullReferenceTest:testBug354554()
44819=NullReferenceTest:test0034_conditional_expression_2()
44820=NullReferenceTest:testBug195638_comment14()
44821=NullReferenceTest:test0419_while()
44822=NullReferenceTest:test1024()
44823=NullReferenceTest:test0601_do_while()
44824=NullReferenceTest:testBug345305_7()
44825=NullReferenceTest:testBug326950c()
44826=NullReferenceTest:_test0034_conditional_expression_4()
44827=NullReferenceTest:test0431_while()
44828=NullReferenceTest:testBug313870c()
44829=NullReferenceTest:test0725_for_with_assignment()
44830=NullReferenceTest:testBug332838()
44831=NullReferenceTest:testBug292478d()
44832=NullReferenceTest:testBug384380()
44833=NullReferenceTest:test0724_for_with_initialization()
44834=NullReferenceTest:test0120_strings_concatenation()
44835=NullReferenceTest:test0063_method_call_isolation()
44836=NullReferenceTest:test0597_throw()
44837=NullReferenceTest:test0086_shortcut_boolean_expression()
44838=NullReferenceTest:test1013()
44839=NullReferenceTest:test0427_while_return()
44840=NullReferenceTest:testBug321926m()
44841=NullReferenceTest:test0420_while()
44842=NullReferenceTest:_test0902_non_null_protection_tag()
44843=NullReferenceTest:test0424_while_try()
44844=NullReferenceTest:testBug336544_2()
44845=NullReferenceTest:test0459_while_nested()
44846=NullReferenceTest:test0001_simple_local()
44847=NullReferenceTest:test0719_for()
44848=NullReferenceTest:test0610_do_while()
44849=NullReferenceTest:test0572_if_statement()
44850=NullReferenceTest:testBug325229c()
44851=NullReferenceTest:test0415_while_unknown_if_else()
44852=NullReferenceTest:test0467_while_break()
44853=NullReferenceTest:test0045_autoboxing_operator()
44854=NullReferenceTest:test0015_field_with_explicit_this_access()
44855=NullReferenceTest:testBug336428()
44856=NullReferenceTest:testBug325342b()
44857=NullReferenceTest:test0010_field_with_method_call()
44858=NullReferenceTest:test1033()
44859=NullReferenceTest:test0066_method_call_invocation_target()
44860=NullReferenceTest:testBug324178a()
44861=NullReferenceTest:_test0901_notNull_protection_tag()
44862=NullReferenceTest:test0505_try_finally()
44863=NullReferenceTest:test0952_assert()
44864=NullReferenceTest:test0469_while_break()
44865=NullReferenceTest:test0959a_assert_loop()
44866=NullReferenceTest:test0009_local_with_member()
44867=NullReferenceTest:test1022()
44868=NullReferenceTest:test0713_for()
44869=NullReferenceTest:test0028_field_as_initializer()
44870=NullReferenceTest:_test0615_do_while()
44871=NullReferenceTest:testBug292478b()
44872=NullReferenceTest:test0418_while_try()
44873=NullReferenceTest:test0450_while()
44874=NullReferenceTest:test0526_try_finally_unchecked_exception()
44875=NullReferenceTest:test0559_try_catch()
44876=NullReferenceTest:testBug321926o()
44877=NullReferenceTest:test0575_try_multi_catch_finally_unchecked_and_checked_exception()
44878=NullReferenceTest:testBug441737()
44879=NullReferenceTest:test1011()
44880=NullReferenceTest:test0126_strings_concatenation()
44881=NullReferenceTest:test0436_while_init()
44882=NullReferenceTest:_test0453_while()
44883=NullReferenceTest:test0551_try_catch()
44884=NullReferenceTest:test0507_try_finally()
44885=NullReferenceTest:testBug336428d2()
44886=NullReferenceTest:test0716_for()
44887=NullReferenceTest:test2013_flow_info()
44888=NullReferenceTest:test0313_if_else()
44889=NullReferenceTest:test0401_while()
44890=NullReferenceTest:test0425_while()
44891=NullReferenceTest:test0562_try_catch_unchecked_exception()
44892=NullReferenceTest:test0083_shortcut_boolean_expression()
44893=NullReferenceTest:test0090_instanceof()
44894=NullReferenceTest:test0715_for()
44895=NullReferenceTest:testBug342300()
44896=NullReferenceTest:test0800_switch()
44897=NullReferenceTest:test1016()
44898=NullReferenceTest:testBug321926h()
44899=NullReferenceTest:testBug451660()
44900=NullReferenceTest:test0406_while()
44901=NullReferenceTest:test0329_if_else_nested()
44902=NullReferenceTest:test0569_try_catch()
44903=NullReferenceTest:test0560_try_catch()
44904=NullReferenceTest:_test0525_try_finally_unchecked_exception()
44905=NullReferenceTest:test0029_field_assignment()
44906=NullReferenceTest:test0084_shortcut_boolean_expression()
44907=NullReferenceTest:test0563_try_catch()
44908=NullReferenceTest:test0304_if_else()
44909=NullReferenceTest:test1005()
44910=NullReferenceTest:testBug345305_3()
44911=NullReferenceTest:_testBug336428b()
44912=NullReferenceTest:testBug317829f()
44913=NullReferenceTest:testBug348379f()
44914=NullReferenceTest:test0570_try_catch()
44915=NullReferenceTest:test0805_switch()
44916=NullReferenceTest:test0409_while()
44917=NullReferenceTest:test0506_try_finally()
44918=NullReferenceTest:test0037_autounboxing_2()
44919=NullReferenceTest:testBug431016_simplified()
44920=NullReferenceTest:testBug376263()
44921=NullReferenceTest:test0331_if_else_nested()
44922=NullReferenceTest:test0011_field_with_method_call()
44923=NullReferenceTest:test0576_try_with_resources()
44924=NullReferenceTest:test0403_while()
44925=NullReferenceTest:_test0901_non_null_protection_tag()
44926=NullReferenceTest:testBug336428c()
44927=NullReferenceTest:test0953_assert_combined()
44928=NullReferenceTest:test0568_try_catch_checked_exception()
44929=NullReferenceTest:testBug384380_b()
44930=NullReferenceTest:test1029()
44931=NullReferenceTest:test0718_for()
44932=NullReferenceTest:testBug292478a()
44933=NullReferenceTest:test0043_autoboxing_literal()
44934=NullReferenceTest:test0322_if_else()
44935=NullReferenceTest:testBug256796a()
44936=NullReferenceTest:test0464_while_infinite()
44937=NullReferenceTest:test0955_assert_combined()
44938=NullReferenceTest:test1014()
44939=NullReferenceTest:testBug321926j()
44940=NullReferenceTest:test0308_if_else()
44941=NullReferenceTest:test0417_while()
44942=NullReferenceTest:test0605_do_while()
44943=NullReferenceTest:testBug293917a()
44944=NullReferenceTest:testBug486912KnownNullInLoop()
44945=NullReferenceTest:test0705_for()
44946=NullReferenceTest:test0960_assert_finally()
44947=NullReferenceTest:testBug345305_1()
44948=NullReferenceTest:testBug299900a()
44949=NullReferenceTest:testBug325229b()
44950=NullReferenceTest:test0023_field_assignment()
44951=NullReferenceTest:test0951_assert()
44952=NullReferenceTest:test0730_for()
44953=NullReferenceTest:testBug336544()
44954=NullReferenceTest:test0037_autounboxing_4()
44955=NullReferenceTest:testBug291418b()
44956=NullReferenceTest:test0556_try_catch()
44957=NullReferenceTest:test0550_try_catch()
44958=NullReferenceTest:test0558_try_catch()
44959=NullReferenceTest:test0451_while_nested()
44960=NullReferenceTest:test0733_for_while_break()
44961=NullReferenceTest:test0726_for()
44962=NullReferenceTest:test0552_try_catch()
44963=NullReferenceTest:testBug253896b()
44964=NullReferenceTest:test0036_conditional_expression()
44965=NullReferenceTest:test0554_try_catch()
44966=NullReferenceTest:testBug336428e()
44967=NullReferenceTest:test0520_try_finally_constructor_exc()
44968=NullReferenceTest:test1027()
44969=NullReferenceTest:test0127_strings_concatenation()
44970=NullReferenceTest:test0442_while()
44971=NullReferenceTest:test0030_conditional_expression()
44972=NullReferenceTest:test0727_for()
44973=NullReferenceTest:_test0612_do_while()
44974=NullReferenceTest:test0319_if_else_dead_branch()
44975=NullReferenceTest:test0012_field_with_method_call()
44976=NullReferenceTest:suite()
44977=NullReferenceTest:test0125_strings_concatenation()
44978=NullReferenceTest:test0016_field_of_another_object()
44979=NullReferenceTest:testBug293917c()
44980=NullReferenceTest:_test0952_nullable_tag()
44981=NullReferenceTest:test358827()
44982=NullReferenceTest:test0701_for()
44983=NullReferenceTest:test0428_while()
44984=NullReferenceTest:test0410_while_nested()
44985=NullReferenceTest:test1009()
44986=NullReferenceTest:test0611_do_while()
44987=NullReferenceTest:test0334_if_else()
44988=NullReferenceTest:test1054_options_mix()
44989=NullReferenceTest:test0523_try_finally()
44990=NullReferenceTest:test0461_while_explicit_label()
44991=NullReferenceTest:testBug321926d()
44992=NullReferenceTest:testBug348379b()
44993=NullReferenceTest:test0037_autounboxing_6()
44994=NullReferenceTest:testBug303448b()
44995=NullReferenceTest:_test0534_try_finally()
44996=NullReferenceTest:test0595_throw()
44997=NullReferenceTest:testBug321926u()
44998=NullReferenceTest:test0439_while()
44999=NullReferenceTest:testBug342300b()
45000=NullReferenceTest:test1053_options_mix()
45001=NullReferenceTest:test0317_if_else_nested()
45002=NullReferenceTest:testBug321926a2()
45003=NullReferenceTest:testBug339250a()
45004=NullReferenceTest:testBug360328()
45005=NullReferenceTest:test0533_try_finally_field()
45006=NullReferenceTest:test0342_if_else_nested()
45007=NullReferenceTest:test0027_embedded_comparison()
45008=NullReferenceTest:_test0337_if_else_nested_correlation()
45009=NullReferenceTest:test0335_if_else()
45010=NullReferenceTest:test0037_conditional_expression_1()
45011=NullReferenceTest:testBug431016()
45012=NullReferenceTest:testBug325755b()
45013=NullReferenceTest:test0457_while_nested_break()
45014=NullReferenceTest:test0602_do_while()
45015=NullReferenceTest:test1018()
45016=NullReferenceTest:_test1026()
45017=NullReferenceTest:test0035_conditional_expression()
45018=NullReferenceTest:test0524_try_finally()
45019=NullReferenceTest:test1007()
45020=NullReferenceTest:test0903_notNull_protection_tag()
45021=NullReferenceTest:testBug317829d()
45022=NullReferenceTest:testBug348379d()
45023=NullReferenceTest:test0070_type_reference()
45024=NullReferenceTest:test0571_try_catch_finally()
45025=NullReferenceTest:testBug321926f()
45026=NullReferenceTest:test0557_try_catch()
45027=NullReferenceTest:test0739_for()
45028=NullReferenceTest:testBug317829b()
45029=NullReferenceTest:test0522_try_finally()
45030=NullReferenceTest:test0422_while()
45031=NullReferenceTest:test0553_try_catch()
45032=NullReferenceTest:testBug324178()
45033=NullReferenceTest:test0014_field_with_explicit_this_access()
45034=NullReferenceTest:testBug195638_comment19()
45035=NullReferenceTest:test0521_try_finally()
45036=NullReferenceTest:test0053_array()
45037=NullReferenceTest:test0008_local_with_member()
45038=NullReferenceTest:testBug319201d()
45039=NullReferenceTest:test0031_conditional_expression()
45040=NullReferenceTest:testBug453305()
45041=NullReferenceTest:test0455_while_nested()
45042=NullReferenceTest:test0704_for()
45043=NullReferenceTest:testBug321926p()
45044=NullReferenceTest:test2008_flow_info()
45045=NullReferenceTest:test2009_flow_info()
45046=NullReferenceTest:testBug345305_10()
45047=NullReferenceTest:test0003_simple_parameter()
45048=NullReferenceTest:test2006_flow_info()
45049=NullReferenceTest:test2003_flow_info()
45050=NullReferenceTest:test0618_do_while_infinite()
45051=NullReferenceTest:test0321_if_else()
45052=NullReferenceTest:test367879()
45053=NullReferenceTest:test401092()
45054=NullReferenceTest:testBug319201c()
45055=NullReferenceTest:test0305_if_else()
45056=NullReferenceTest:test0502_try_finally()
45057=NullReferenceTest:getCompilerOptions()
45058=NullReferenceTest:test0006_final_local()
45059=NullReferenceTest:test0068_method_call_assignment()
45060=NullReferenceTest:test1032()
45061=NullReferenceTest:test1056_options_mix_with_SuppressWarnings()
45062=NullReferenceTest:testBug360328d()
45063=NullReferenceTest:test0330_if_else_nested()
45064=NullReferenceTest:test1502()
45065=NullReferenceTest:test2020_flow_info()
45066=NullReferenceTest:test0723_for()
45067=NullReferenceTest:test2000_flow_info()
45068=NullReferenceTest:test2001_flow_info()
45069=NullReferenceTest:test1021()
45070=NullReferenceTest:testBug321926a()
45071=NullReferenceTest:test0017_field_of_another_object()
45072=NullReferenceTest:test0124_strings_concatenation()
45073=NullReferenceTest:test0022_final_field()
45074=NullReferenceTest:test0037_conditional_expression_5()
45075=NullReferenceTest:test0510_try_finally()
45076=NullReferenceTest:testExpressions02()
45077=NullReferenceTest:test0512_try_finally()
45078=NullReferenceTest:testBug321926r()
45079=NullReferenceTest:testBug354554b()
45080=NullReferenceTest:testBug345305_12()
45081=NullReferenceTest:test0323_if_else()
45082=NullReferenceTest:test0338_if_else_nested()
45083=NullReferenceTest:test0470_while()
45084=NullReferenceTest:_test0951_nullable_tag()
45085=NullReferenceTest:test0082_shortcut_boolean_expression()
45086=NullReferenceTest:test0728_for()
45087=NullReferenceTest:test0720_for_continue_break()
45088=NullReferenceTest:testBug319201a()
45089=NullReferenceTest:test0957_assert()
45090=NullReferenceTest:_test0950_nullable_tag()
45091=NullReferenceTest:testBug190623()
45092=NullReferenceTest:test0426_while()
45093=NullReferenceTest:test0702_for()
45094=NullReferenceTest:test0020_final_field()
45095=NullReferenceTest:test0340_if_else_nested()
45096=NullReferenceTest:test0405_while()
45097=NullReferenceTest:test1030()
45098=NullReferenceTest:testBug292478g()
45099=NullReferenceTest:_test0614_do_while()
45100=NullReferenceTest:test0528_try_finally()
45101=NullReferenceTest:_test0902_notNull_protection_tag()
45102=NullReferenceTest:test0454_while()
45103=NullReferenceTest:test0732_for_nested_break()
45104=NullReferenceTest:test2014_flow_info()
45105=NullReferenceTest:testBug360328b()
45106=NullReferenceTest:test0462_while_explicit_label()
45107=NullReferenceTest:test0574_try_multi_catch_unchecked_and_checked_exception()
45108=NullReferenceTest:test0743_for_infinite()
45109=NullReferenceTest:test0500_try_finally()
45110=NullReferenceTest:test2012_flow_info()
45111=NullReferenceTest:testBug321926c()
45112=NullReferenceTest:test0037_conditional_expression_3()
45113=NullReferenceTest:test0303_if_else()
45114=NullReferenceTest:test0596_throw()
45115=NullReferenceTest:testBug348379a()
45116=NullReferenceTest:testExpressions04()
45117=NullReferenceTest:test0504_try_finally()
45118=NullReferenceTest:test0061_method_call_guard()
45119=NullReferenceTest:test0327_if_else()
45120=NullReferenceTest:testBug321926l()
45121=NullReferenceTest:_test0452_while()
45122=NullReferenceTest:test0402_while()
45123=NullReferenceTest:test1012()
45124=NullReferenceTest:testBug336544_3()
45125=NullReferenceTest:test0721_for()
45126=NullReferenceTest:test0328_if_else()
45127=NullReferenceTest:test0742_for_explicit_label()
45128=NullReferenceTest:testBug325229d()
45129=NullReferenceTest:testBug345305_14()
45130=NullReferenceTest:testBug364326()
45131=NullReferenceTest:test0041_autoboxing_increment_operator()
45132=NullReferenceTest:test0564_try_catch_unchecked_exception()
45133=NullReferenceTest:test0954_assert_fake_reachable()
45134=NullReferenceTest:test1059_options_cannot_be_null_check()
45135=NullReferenceTest:testBug325342a()
45136=NullReferenceTest:test1036()
45137=NullReferenceTest:test0407_while()
45138=NullReferenceTest:test0448_while()
45139=NullReferenceTest:test0034_conditional_expression_3()
45140=NullReferenceTest:test0429_while_nested()
45141=NullReferenceTest:test0468_while_break()
45142=NullReferenceTest:testBug253896d()
45143=NullReferenceTest:test0518_try_finally()
45144=NullReferenceTest:test1025()
45145=NullReferenceTest:testBug345305_8()
45146=NullReferenceTest:testBug326950b()
45147=NullReferenceTest:_test0034_conditional_expression_5()
45148=NullReferenceTest:test0707_for()
45149=NullReferenceTest:testBug292478e()
45150=NullReferenceTest:test0004_final_local()
45151=NullReferenceTest:test0040_autoboxing_compound_assignment()
45152=NullReferenceTest:test0091_instanceof()
45153=NullReferenceTest:_test0905_notNull_protection_tag()
45154=NullReferenceTest:test0803_switch()
45155=NullReferenceTest:testBug486912PotNullInLoop()
45156=NullReferenceTest:testBug321926n()
45157=NullReferenceTest:NullReferenceTest(String)
45158=NullReferenceTest:test0746_for_try_catch()
45159=NullReferenceTest:test0301_if_else()
45160=NullReferenceTest:test1010()
45161=NullReferenceTest:test0435_while_init()
45162=NullReferenceTest:test0608_do_while()
45163=NullReferenceTest:_test0900_non_null_protection_tag()
45164=NullReferenceTest:testBug324762()
45165=NullReferenceTest:test0318_if_else_nested()
45166=NullReferenceTest:test0123_strings_concatenation()
45167=NullReferenceTest:test0708_for()
45168=NullReferenceTest:testBug454031()
45169=NullReferenceTest:test0555_try_catch()
45170=NullReferenceTest:test0007_local_with_member()
45171=NullReferenceTest:testBug324762a()
45172=NullReferenceTest:test1034()
45173=NullReferenceTest:test2017_flow_info()
45174=NullReferenceTest:testBug401088()
45175=NullReferenceTest:test0959b_assert_loop()
45176=NullReferenceTest:test0466_while_infinite()
45177=NullReferenceTest:test0709_for()
45178=NullReferenceTest:test0050_array()
45179=NullReferenceTest:test0300_if_else()
45180=NullReferenceTest:testBug402993()
45181=NullReferenceTest:testBug486912PotNullInLoop_orig()
45182=NullReferenceTest:testBug195638_comment3()
45183=NullReferenceTest:testBug345305_6()
45184=NullReferenceTest:test0326_if_else()
45185=NullReferenceTest:test0508_try_finally()
45186=NullReferenceTest:test1023()
45187=NullReferenceTest:testBug326950d()
45188=NullReferenceTest:testBug313870b()
45189=NullReferenceTest:test0037_autounboxing_1()
45190=NullReferenceTest:testBug292478c()
45191=NullReferenceTest:testBug319201()
45192=NullReferenceTest:test1050_options_all_default()
45193=NullReferenceTest:test1057_options_instanceof_is_check()
45194=ASTNode:isSuper()
45195=ASTNode:concreteStatement()
45196=ASTNode:printIndent(int, StringBuffer)
45197=ASTNode:isTypeUseDeprecated(TypeBinding, Scope)
45198=ASTNode:isMethodUseDeprecated(MethodBinding, Scope, boolean)
45199=ASTNode:resolvePolyExpressionArguments(Invocation, MethodBinding, TypeBinding[], BlockScope)
45200=ASTNode:isFieldUseDeprecated(FieldBinding, Scope, int)
45201=ASTNode:checkingPotentialCompatibility()
45202=ASTNode:traverse(ASTVisitor, BlockScope)
45203=ASTNode:sourceEnd()
45204=ASTNode:resolveAnnotations(BlockScope, Annotation[][], TypeBinding)
45205=ASTNode:resolveAnnotations(BlockScope, Annotation[], Binding, boolean)
45206=ASTNode:copySE8AnnotationsToType(BlockScope, Binding, Annotation[], boolean)
45207=ASTNode:print(int, StringBuffer)
45208=ASTNode:checkInvocationArguments(BlockScope, Expression, TypeBinding, MethodBinding, Expression[], TypeBinding[], boolean, InvocationSite)
45209=ASTNode:isUnqualifiedSuper()
45210=ASTNode:mergeAnnotationsIntoType(BlockScope, AnnotationBinding[], long, Annotation, TypeReference, TypeBinding)
45211=ASTNode:receiverIsImplicitThis()
45212=ASTNode:sourceStart()
45213=ASTNode:isImplicitThis()
45214=ASTNode:isThis()
45215=ASTNode:resolveDeprecatedAnnotations(BlockScope, Annotation[], Binding)
45216=ASTNode:checkInvocationArgument(BlockScope, Expression, TypeBinding, TypeBinding, TypeBinding)
45217=ASTNode:printModifiers(int, StringBuffer)
45218=ASTNode:isQualifiedSuper()
45219=ASTNode:acceptPotentiallyCompatibleMethods(MethodBinding[])
45220=ASTNode:printAnnotations(Annotation[], StringBuffer)
45221=ASTNode:ASTNode()
45222=ASTNode:resolveAnnotations(BlockScope, Annotation[], Binding)
45223=ASTNode:toString()
45224=NodeRewriteEvent:getChildren()
45225=NodeRewriteEvent:setNewValue(Object)
45226=NodeRewriteEvent:getNewValue()
45227=NodeRewriteEvent:isListRewrite()
45228=NodeRewriteEvent:getChangeKind()
45229=NodeRewriteEvent:NodeRewriteEvent(Object, Object)
45230=NodeRewriteEvent:getOriginalValue()
45231=NodeRewriteEvent:toString()
45232=CodeSnippetAllocationExpression:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo)
45233=CodeSnippetAllocationExpression:resolveType(BlockScope)
45234=CodeSnippetAllocationExpression:CodeSnippetAllocationExpression(EvaluationContext)
45235=CodeSnippetAllocationExpression:manageEnclosingInstanceAccessIfNecessary(BlockScope, FlowInfo)
45236=CodeSnippetAllocationExpression:generateCode(BlockScope, CodeStream, boolean)
45237=TypeHierarchy:getAllSubtypesForType0(IType, ArrayList<IType>)
45238=TypeHierarchy:cacheSuperclass(IType, IType)
45239=TypeHierarchy:cacheSuperInterfaces(IType, IType[])
45240=TypeHierarchy:getImplementingClasses(IType)
45241=TypeHierarchy:growAndAddToArray(IType[], IType)
45242=TypeHierarchy:isAffectedByOpenable(IJavaElementDelta, IJavaElement, int)
45243=TypeHierarchy:getAllClasses()
45244=TypeHierarchy:hasSubtypeNamed(String)
45245=TypeHierarchy:addRootClass(IType)
45246=TypeHierarchy:contains(IType)
45247=TypeHierarchy:load(IType, InputStream, WorkingCopyOwner)
45248=TypeHierarchy:isAffectedByPackageFragmentRoot(IJavaElementDelta, IJavaElement, int)
45249=TypeHierarchy:includesTypeOrSupertype(IType)
45250=TypeHierarchy:getSubtypesForType(IType)
45251=TypeHierarchy:hasSupertype(String)
45252=TypeHierarchy:getAllTypes()
45253=TypeHierarchy:packageRegionContainsSamePackageFragment(PackageFragment)
45254=TypeHierarchy:readUntil(InputStream, byte, int)
45255=TypeHierarchy:javaProject()
45256=TypeHierarchy:getAllSuperInterfaces(IType)
45257=TypeHierarchy:isAffectedByPackageFragment(IJavaElementDelta, PackageFragment, int)
45258=TypeHierarchy:getRootInterfaces()
45259=TypeHierarchy:getClonedChangeListeners()
45260=TypeHierarchy:isAffectedByJavaModel(IJavaElementDelta, IJavaElement, int)
45261=TypeHierarchy:isAffected(IJavaElementDelta, int)
45262=TypeHierarchy:TypeHierarchy()
45263=TypeHierarchy:fireChange()
45264=TypeHierarchy:isAffectedByJavaProject(IJavaElementDelta, IJavaElement, int)
45265=TypeHierarchy:addInterface(IType)
45266=TypeHierarchy:removeTypeHierarchyChangedListener(ITypeHierarchyChangedListener)
45267=TypeHierarchy:worked(int)
45268=TypeHierarchy:getSuperclass(IType)
45269=TypeHierarchy:getSuperInterfaces(IType)
45270=TypeHierarchy:initializeRegions()
45271=TypeHierarchy:getAllSubtypes(IType)
45272=TypeHierarchy:getImplementingClasses0(IType)
45273=TypeHierarchy:exists()
45274=TypeHierarchy:isAffectedByChildren(IJavaElementDelta, int)
45275=TypeHierarchy:getRootClasses()
45276=TypeHierarchy:checkCanceled()
45277=TypeHierarchy:refresh(IProgressMonitor)
45278=TypeHierarchy:initialize(int)
45279=TypeHierarchy:hasTypeNamed(String)
45280=TypeHierarchy:addSubtype(IType, IType)
45281=TypeHierarchy:getAllInterfaces()
45282=TypeHierarchy:toString(StringBuffer, IJavaElement, int)
45283=TypeHierarchy:getAllSuperclasses(IType)
45284=TypeHierarchy:getAllSuperInterfaces0(IType, ArrayList<IType>)
45285=TypeHierarchy:getSubclasses(IType)
45286=TypeHierarchy:elementChanged(ElementChangedEvent)
45287=TypeHierarchy:getExtendingInterfaces(IType)
45288=TypeHierarchy:getSubtypes(IType)
45289=TypeHierarchy:toString(StringBuffer, IJavaElement, int, boolean)
45290=TypeHierarchy:TypeHierarchy(IType, ICompilationUnit[], IJavaSearchScope, boolean)
45291=TypeHierarchy:isInterface(IType)
45292=TypeHierarchy:toString()
45293=TypeHierarchy:subtypesIncludeSupertypeOf(IType)
45294=TypeHierarchy:addTypeHierarchyChangedListener(ITypeHierarchyChangedListener)
45295=TypeHierarchy:getExtendingInterfaces0(IType)
45296=TypeHierarchy:getAllSubtypesForType(IType)
45297=TypeHierarchy:getSupertypes(IType)
45298=TypeHierarchy:getType()
45299=TypeHierarchy:cacheFlags(IType, int)
45300=TypeHierarchy:compute()
45301=TypeHierarchy:getAllSupertypes0(IType, ArrayList<IType>)
45302=TypeHierarchy:getAllSupertypes(IType)
45303=TypeHierarchy:getCachedFlags(IType)
45304=TypeHierarchy:flagsToBytes(Integer)
45305=TypeHierarchy:hasFineGrainChanges()
45306=TypeHierarchy:bytesToFlags(byte[])
45307=TypeHierarchy:store(OutputStream, IProgressMonitor)
45308=TypeHierarchy:TypeHierarchy(IType, ICompilationUnit[], IJavaProject, boolean)
45309=TypeHierarchy:readUntil(InputStream, byte)
45310=TypeHierarchy:growAndAddToArray(IType[], IType[])
45311=SuiteOfTestCases:Suite:initialize(SuiteOfTestCases)
45312=SuiteOfTestCases:Suite:Suite(Class)
45313=SuiteOfTestCases:Suite:superRun(TestResult)
45314=SuiteOfTestCases:Suite:run(TestResult)
45315=SuiteOfTestCases:setUpTest(Test)
45316=SuiteOfTestCases:tearDownSuite()
45317=SuiteOfTestCases:setUpSuite()
45318=SuiteOfTestCases:Suite:runTest(Test, TestResult)
45319=SuiteOfTestCases:Suite:Suite(String)
45320=SuiteOfTestCases:SuiteOfTestCases(String)
45321=Y07:foo()
45322=X07:foo()
45323=TestInvalid:foo1(int)
45324=TestInvalid:foo2(int)
45325=A:foo(long, int, String, Object)
45326=X05:Y05:foo()
45327=X14d:foo()
45328=A:foo()
45329=A:foo(boolean)
45330=Test:___run(java.lang.String[])
45331=X14:foo(String)
45332=A:foo()
45333=TypeDeclarationStatement:internalSetTypeDeclaration(TypeDeclaration)
45334=TypeDeclarationStatement:accept0(ASTVisitor)
45335=TypeDeclarationStatement:getDeclaration()
45336=TypeDeclarationStatement:resolveBinding()
45337=TypeDeclarationStatement:getNodeType0()
45338=TypeDeclarationStatement:propertyDescriptors(int)
45339=TypeDeclarationStatement:subtreeMatch0(ASTMatcher, Object)
45340=TypeDeclarationStatement:TypeDeclarationStatement(AST)
45341=TypeDeclarationStatement:setDeclaration(AbstractTypeDeclaration)
45342=TypeDeclarationStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
45343=TypeDeclarationStatement:clone0(AST)
45344=TypeDeclarationStatement:setTypeDeclaration(TypeDeclaration)
45345=TypeDeclarationStatement:getTypeDeclaration()
45346=TypeDeclarationStatement:internalStructuralPropertiesForType(int)
45347=TypeDeclarationStatement:typeDeclProperty()
45348=TypeDeclarationStatement:internalGetTypeDeclaration()
45349=TypeDeclarationStatement:memSize()
45350=TypeDeclarationStatement:treeSize()
45351=Example:foo(int, int)
45352=Test:service()
45353=Test:service2()
45354=Test:main(String[])
45355=Test:service3()
45356=A:foo()
45357=A:foo(String)
45358=ASTConverter15Test:test0093()
45359=ASTConverter15Test:test0138()
45360=ASTConverter15Test:test0345()
45361=ASTConverter15Test:test0191()
45362=ASTConverter15Test:test0029()
45363=ASTConverter15Test:test0201()
45364=ASTConverter15Test:test0247()
45365=ASTConverter15Test:test0127()
45366=ASTConverter15Test:test0018()
45367=ASTConverter15Test:test0310()
45368=ASTConverter15Test:test0180()
45369=ASTConverter15Test:test0212()
45370=ASTConverter15Test:test0258()
45371=ASTConverter15Test:test0082()
45372=ASTConverter15Test:testBug474922_002()
45373=ASTConverter15Test:test234609b()
45374=ASTConverter15Test:test0114()
45375=ASTConverter15Test:test0323()
45376=ASTConverter15Test:test0016()
45377=ASTConverter15Test:test0225()
45378=ASTConverter15Test:test344()
45379=ASTConverter15Test:test0149()
45380=ASTConverter15Test:test0103()
45381=ASTConverter15Test:test0334()
45382=ASTConverter15Test:test0005()
45383=ASTConverter15Test:test0236()
45384=ASTConverter15Test:test0091()
45385=ASTConverter15Test:test0136()
45386=ASTConverter15Test:test0038()
45387=ASTConverter15Test:test0348b()
45388=ASTConverter15Test:test0245()
45389=ASTConverter15Test:test0125()
45390=ASTConverter15Test:test0210()
45391=ASTConverter15Test:test0027()
45392=ASTConverter15Test:test0256()
45393=ASTConverter15Test:test0080()
45394=ASTConverter15Test:testBug474922_004()
45395=ASTConverter15Test:test0112()
45396=ASTConverter15Test:test0158()
45397=ASTConverter15Test:assertArrayEquals(int[], int[])
45398=ASTConverter15Test:test0014()
45399=ASTConverter15Test:test0223()
45400=ASTConverter15Test:test0269()
45401=ASTConverter15Test:replaceNodeInParent(Expression, Expression)
45402=ASTConverter15Test:test0101()
45403=ASTConverter15Test:test0147()
45404=ASTConverter15Test:test0332()
45405=ASTConverter15Test:test0003()
45406=ASTConverter15Test:test0049()
45407=ASTConverter15Test:test0234()
45408=ASTConverter15Test:test0134()
45409=ASTConverter15Test:suite()
45410=ASTConverter15Test:testBug398520()
45411=ASTConverter15Test:test0243()
45412=ASTConverter15Test:test0289()
45413=ASTConverter15Test:test0036()
45414=ASTConverter15Test:test0123()
45415=ASTConverter15Test:test0169()
45416=ASTConverter15Test:test0352()
45417=ASTConverter15Test:test0254()
45418=ASTConverter15Test:test0025()
45419=ASTConverter15Test:test0110()
45420=ASTConverter15Test:test0156()
45421=ASTConverter15Test:test0058()
45422=ASTConverter15Test:test0221()
45423=ASTConverter15Test:test0012()
45424=ASTConverter15Test:test0267()
45425=ASTConverter15Test:test0145()
45426=ASTConverter15Test:test0330()
45427=ASTConverter15Test:test0047()
45428=ASTConverter15Test:test0232()
45429=ASTConverter15Test:test0001()
45430=ASTConverter15Test:test0278()
45431=ASTConverter15Test:test0132()
45432=ASTConverter15Test:test0178()
45433=ASTConverter15Test:test0241()
45434=ASTConverter15Test:test0287()
45435=ASTConverter15Test:test0034()
45436=ASTConverter15Test:test0121()
45437=ASTConverter15Test:test0167()
45438=ASTConverter15Test:test0350()
45439=ASTConverter15Test:test0252()
45440=ASTConverter15Test:test0069()
45441=ASTConverter15Test:test0298()
45442=ASTConverter15Test:test0023()
45443=ASTConverter15Test:test0154()
45444=ASTConverter15Test:testBug484220_002()
45445=ASTConverter15Test:test0265()
45446=ASTConverter15Test:test0010()
45447=ASTConverter15Test:test0056()
45448=ASTConverter15Test:test342()
45449=ASTConverter15Test:test234609()
45450=ASTConverter15Test:test0143()
45451=ASTConverter15Test:test0189()
45452=ASTConverter15Test:test0230()
45453=ASTConverter15Test:test0276()
45454=ASTConverter15Test:test0045()
45455=ASTConverter15Test:test0153()
45456=ASTConverter15Test:test0199()
45457=ASTConverter15Test:_test0270()
45458=ASTConverter15Test:test0055()
45459=ASTConverter15Test:test0262()
45460=ASTConverter15Test:test0142()
45461=ASTConverter15Test:test0188()
45462=ASTConverter15Test:test0209()
45463=ASTConverter15Test:test0307()
45464=ASTConverter15Test:test0044()
45465=ASTConverter15Test:test0273()
45466=ASTConverter15Test:test0175()
45467=ASTConverter15Test:testBug460422()
45468=ASTConverter15Test:test0286()
45469=ASTConverter15Test:test0077()
45470=ASTConverter15Test:test0031()
45471=ASTConverter15Test:test0240()
45472=ASTConverter15Test:test0164()
45473=ASTConverter15Test:_test0348()
45474=ASTConverter15Test:test0297()
45475=ASTConverter15Test:test0066()
45476=ASTConverter15Test:test0020()
45477=ASTConverter15Test:test0251()
45478=ASTConverter15Test:test0197()
45479=ASTConverter15Test:test0099()
45480=ASTConverter15Test:test0151()
45481=ASTConverter15Test:test0053()
45482=ASTConverter15Test:test0260()
45483=ASTConverter15Test:test0186()
45484=ASTConverter15Test:test0088()
45485=ASTConverter15Test:test0140()
45486=ASTConverter15Test:test0207()
45487=ASTConverter15Test:test0305()
45488=ASTConverter15Test:test0042()
45489=ASTConverter15Test:test0173()
45490=ASTConverter15Test:test0318()
45491=ASTConverter15Test:test0075()
45492=ASTConverter15Test:test0109()
45493=ASTConverter15Test:test0284()
45494=ASTConverter15Test:test0162()
45495=ASTConverter15Test:test0329()
45496=ASTConverter15Test:test0064()
45497=ASTConverter15Test:test0295()
45498=ASTConverter15Test:test0097()
45499=ASTConverter15Test:test0195()
45500=ASTConverter15Test:test0303()
45501=ASTConverter15Test:test0338()
45502=ASTConverter15Test:test0051()
45503=ASTConverter15Test:test0184()
45504=ASTConverter15Test:test0205()
45505=ASTConverter15Test:test0314()
45506=ASTConverter15Test:test0086()
45507=ASTConverter15Test:test0040()
45508=ASTConverter15Test:test0171()
45509=ASTConverter15Test:test0218()
45510=ASTConverter15Test:test0009()
45511=ASTConverter15Test:test0316()
45512=ASTConverter15Test:test0282()
45513=ASTConverter15Test:test0073()
45514=ASTConverter15Test:test0107()
45515=ASTConverter15Test:test0160()
45516=ASTConverter15Test:test0229()
45517=ASTConverter15Test:test0327()
45518=ASTConverter15Test:testBug187430()
45519=ASTConverter15Test:testBug474922_007()
45520=ASTConverter15Test:test0293()
45521=ASTConverter15Test:test0062()
45522=ASTConverter15Test:test0095()
45523=ASTConverter15Test:test0347()
45524=ASTConverter15Test:test0238()
45525=ASTConverter15Test:test0193()
45526=ASTConverter15Test:test0301()
45527=ASTConverter15Test:test0203()
45528=ASTConverter15Test:test0129()
45529=ASTConverter15Test:test0182()
45530=ASTConverter15Test:test0249()
45531=ASTConverter15Test:test0312()
45532=ASTConverter15Test:testBug353474()
45533=ASTConverter15Test:test0214()
45534=ASTConverter15Test:test0084()
45535=ASTConverter15Test:test0118()
45536=ASTConverter15Test:test0116()
45537=ASTConverter15Test:test0216()
45538=ASTConverter15Test:test0325()
45539=ASTConverter15Test:test0007()
45540=ASTConverter15Test:test0071()
45541=ASTConverter15Test:ASTConverter15Test(String)
45542=ASTConverter15Test:test0280()
45543=ASTConverter15Test:test0105()
45544=ASTConverter15Test:test0336()
45545=ASTConverter15Test:test0227()
45546=ASTConverter15Test:test0060()
45547=ASTConverter15Test:test0291()
45548=ASTConverter15Test:test0115()
45549=ASTConverter15Test:test0322()
45550=ASTConverter15Test:test0017()
45551=ASTConverter15Test:test0224()
45552=ASTConverter15Test:test343()
45553=ASTConverter15Test:test0070()
45554=ASTConverter15Test:test0104()
45555=ASTConverter15Test:test0333()
45556=ASTConverter15Test:test0006()
45557=ASTConverter15Test:test0235()
45558=ASTConverter15Test:test0139()
45559=ASTConverter15Test:test0092()
45560=ASTConverter15Test:test0137()
45561=ASTConverter15Test:test0346()
45562=ASTConverter15Test:test0300()
45563=ASTConverter15Test:test0190()
45564=ASTConverter15Test:test0039()
45565=ASTConverter15Test:test0202()
45566=ASTConverter15Test:test0248()
45567=ASTConverter15Test:test0126()
45568=ASTConverter15Test:test0311()
45569=ASTConverter15Test:test0028()
45570=ASTConverter15Test:test0213()
45571=ASTConverter15Test:test0259()
45572=ASTConverter15Test:testBug474922_003()
45573=ASTConverter15Test:test0081()
45574=ASTConverter15Test:test0159()
45575=ASTConverter15Test:test0113()
45576=ASTConverter15Test:test0320()
45577=ASTConverter15Test:test0015()
45578=ASTConverter15Test:test0222()
45579=ASTConverter15Test:test0268()
45580=ASTConverter15Test:test0148()
45581=ASTConverter15Test:test0102()
45582=ASTConverter15Test:test0331()
45583=ASTConverter15Test:test0004()
45584=ASTConverter15Test:test0233()
45585=ASTConverter15Test:test0279()
45586=ASTConverter15Test:test0090()
45587=ASTConverter15Test:testBug404489()
45588=ASTConverter15Test:test0135()
45589=ASTConverter15Test:test0037()
45590=ASTConverter15Test:test0200()
45591=ASTConverter15Test:test0348a()
45592=ASTConverter15Test:test0246()
45593=ASTConverter15Test:testBug353474a()
45594=ASTConverter15Test:test0124()
45595=ASTConverter15Test:test0026()
45596=ASTConverter15Test:test0211()
45597=ASTConverter15Test:test0257()
45598=ASTConverter15Test:testBug474922_005()
45599=ASTConverter15Test:test0111()
45600=ASTConverter15Test:test0157()
45601=ASTConverter15Test:test0204c()
45602=ASTConverter15Test:test0220()
45603=ASTConverter15Test:test0266()
45604=ASTConverter15Test:test0059()
45605=ASTConverter15Test:test0013()
45606=ASTConverter15Test:test0100()
45607=ASTConverter15Test:test0146()
45608=ASTConverter15Test:test0231()
45609=ASTConverter15Test:test0277()
45610=ASTConverter15Test:test0048()
45611=ASTConverter15Test:test0002()
45612=ASTConverter15Test:test0133()
45613=ASTConverter15Test:test0179()
45614=ASTConverter15Test:test0244()
45615=ASTConverter15Test:test0035()
45616=ASTConverter15Test:test0122()
45617=ASTConverter15Test:test0168()
45618=ASTConverter15Test:test0353()
45619=ASTConverter15Test:test0255()
45620=ASTConverter15Test:test0024()
45621=ASTConverter15Test:test0155()
45622=ASTConverter15Test:test0351a()
45623=ASTConverter15Test:testBug484220_001()
45624=ASTConverter15Test:test0264()
45625=ASTConverter15Test:test0011()
45626=ASTConverter15Test:test0057()
45627=ASTConverter15Test:test341()
45628=ASTConverter15Test:test0144()
45629=ASTConverter15Test:test0275()
45630=ASTConverter15Test:test0309()
45631=ASTConverter15Test:test0046()
45632=ASTConverter15Test:test0340()
45633=ASTConverter15Test:test0131()
45634=ASTConverter15Test:test0177()
45635=ASTConverter15Test:test0242()
45636=ASTConverter15Test:test0033()
45637=ASTConverter15Test:test0079()
45638=ASTConverter15Test:test0288()
45639=ASTConverter15Test:test0351()
45640=ASTConverter15Test:test0120()
45641=ASTConverter15Test:test0166()
45642=ASTConverter15Test:tearDown()
45643=ASTConverter15Test:testBug474922_001()
45644=ASTConverter15Test:test0253()
45645=ASTConverter15Test:test0022()
45646=ASTConverter15Test:test0068()
45647=ASTConverter15Test:test0299()
45648=ASTConverter15Test:test0176()
45649=ASTConverter15Test:test0130()
45650=ASTConverter15Test:test0319()
45651=ASTConverter15Test:test0285()
45652=ASTConverter15Test:test0032()
45653=ASTConverter15Test:test0078()
45654=ASTConverter15Test:test0165()
45655=ASTConverter15Test:test0296()
45656=ASTConverter15Test:test0021()
45657=ASTConverter15Test:test0067()
45658=ASTConverter15Test:test0250()
45659=ASTConverter15Test:test0198()
45660=ASTConverter15Test:test0152()
45661=ASTConverter15Test:test0263()
45662=ASTConverter15Test:test0054()
45663=ASTConverter15Test:test0187()
45664=ASTConverter15Test:test0089()
45665=ASTConverter15Test:test0141()
45666=ASTConverter15Test:test0308()
45667=ASTConverter15Test:test0274()
45668=ASTConverter15Test:test0043()
45669=ASTConverter15Test:test0174()
45670=ASTConverter15Test:test0219()
45671=ASTConverter15Test:test0317()
45672=ASTConverter15Test:test0076()
45673=ASTConverter15Test:test0283()
45674=ASTConverter15Test:test0030()
45675=ASTConverter15Test:test0163()
45676=ASTConverter15Test:test0328()
45677=ASTConverter15Test:test0065()
45678=ASTConverter15Test:test0294()
45679=ASTConverter15Test:_test0271()
45680=ASTConverter15Test:test0098()
45681=ASTConverter15Test:test0150()
45682=ASTConverter15Test:test0196()
45683=ASTConverter15Test:testBug376440()
45684=ASTConverter15Test:test0204b()
45685=ASTConverter15Test:test0052()
45686=ASTConverter15Test:test0261()
45687=ASTConverter15Test:test0185()
45688=ASTConverter15Test:test0208()
45689=ASTConverter15Test:test0306()
45690=ASTConverter15Test:test0087()
45691=ASTConverter15Test:test0041()
45692=ASTConverter15Test:test0272()
45693=ASTConverter15Test:test0172()
45694=ASTConverter15Test:test0217()
45695=ASTConverter15Test:test0315()
45696=ASTConverter15Test:test0108()
45697=ASTConverter15Test:test0281()
45698=ASTConverter15Test:test0074()
45699=ASTConverter15Test:componentType(ArrayType)
45700=ASTConverter15Test:test0161()
45701=ASTConverter15Test:test0228()
45702=ASTConverter15Test:test0326()
45703=ASTConverter15Test:test0292()
45704=ASTConverter15Test:test0063()
45705=ASTConverter15Test:testBug474922_006()
45706=ASTConverter15Test:test0096()
45707=ASTConverter15Test:test0194()
45708=ASTConverter15Test:test0050()
45709=ASTConverter15Test:test0339()
45710=ASTConverter15Test:test0206()
45711=ASTConverter15Test:test0183()
45712=ASTConverter15Test:_test0321()
45713=ASTConverter15Test:test0304()
45714=ASTConverter15Test:test0119()
45715=ASTConverter15Test:test0085()
45716=ASTConverter15Test:test0238_2()
45717=ASTConverter15Test:test0324()
45718=ASTConverter15Test:test0008()
45719=ASTConverter15Test:test0170()
45720=ASTConverter15Test:setUpSuite()
45721=ASTConverter15Test:test0226()
45722=ASTConverter15Test:test0106()
45723=ASTConverter15Test:test0072()
45724=ASTConverter15Test:test0335()
45725=ASTConverter15Test:test0237()
45726=ASTConverter15Test:test0061()
45727=ASTConverter15Test:test0290()
45728=ASTConverter15Test:test0094()
45729=ASTConverter15Test:test0239()
45730=ASTConverter15Test:test0302()
45731=ASTConverter15Test:test0192()
45732=ASTConverter15Test:test0204()
45733=ASTConverter15Test:test0337()
45734=ASTConverter15Test:test0128()
45735=ASTConverter15Test:test0239_2()
45736=ASTConverter15Test:test0313()
45737=ASTConverter15Test:test0019()
45738=ASTConverter15Test:test0181()
45739=ASTConverter15Test:test0215()
45740=ASTConverter15Test:test0117()
45741=ASTConverter15Test:test0083()
45742=IWorkingCopy:isBasedOn(IResource)
45743=IWorkingCopy:getWorkingCopy(IProgressMonitor, IBufferFactory, IProblemRequestor)
45744=IWorkingCopy:getWorkingCopy()
45745=IWorkingCopy:reconcile()
45746=IWorkingCopy:findSharedWorkingCopy(IBufferFactory)
45747=IWorkingCopy:isWorkingCopy()
45748=IWorkingCopy:reconcile(boolean, IProgressMonitor)
45749=IWorkingCopy:getSharedWorkingCopy(IProgressMonitor, IBufferFactory, IProblemRequestor)
45750=IWorkingCopy:destroy()
45751=IWorkingCopy:getOriginalElement()
45752=IWorkingCopy:getOriginal(IJavaElement)
45753=IWorkingCopy:findElements(IJavaElement)
45754=IWorkingCopy:restore()
45755=IWorkingCopy:findPrimaryType()
45756=IWorkingCopy:commit(boolean, IProgressMonitor)
45757=ClasspathLocation:equals(Object)
45758=ClasspathLocation:hashCode()
45759=ClasspathLocation:getPath()
45760=ClasspathLocation:fetchAccessRestriction(String)
45761=ClasspathLocation:ClasspathLocation(AccessRuleSet, String)
45762=ClasspathLocation:getMode()
45763=CompletionOnImportReference:print(int, StringBuffer, boolean)
45764=CompletionOnImportReference:CompletionOnImportReference(char[][], long[], int)
45765=GlobalVariableWrapper:getTypeName()
45766=GlobalVariableWrapper:GlobalVariableWrapper(GlobalVariable)
45767=GlobalVariableWrapper:getName()
45768=GlobalVariableWrapper:getInitializer()
45769=FormaterBug:main(String[])
45770=A:foo()
45771=A:getMyObject()
45772=LambdaExpression:setParentheses(boolean)
45773=LambdaExpression:accept0(ASTVisitor)
45774=LambdaExpression:treeSize()
45775=LambdaExpression:propertyDescriptors(int)
45776=LambdaExpression:subtreeMatch0(ASTMatcher, Object)
45777=LambdaExpression:internalGetChildListProperty(ChildListPropertyDescriptor)
45778=LambdaExpression:resolveMethodBinding()
45779=LambdaExpression:parameters()
45780=LambdaExpression:getNodeType0()
45781=LambdaExpression:clone0(AST)
45782=LambdaExpression:LambdaExpression(AST)
45783=LambdaExpression:getBody()
45784=LambdaExpression:hasParentheses()
45785=LambdaExpression:internalStructuralPropertiesForType(int)
45786=LambdaExpression:internalGetSetBooleanProperty(SimplePropertyDescriptor, boolean, boolean)
45787=LambdaExpression:setBody(ASTNode)
45788=LambdaExpression:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
45789=LambdaExpression:memSize()
45790=ExternalizeStringLiteralsTest:test011()
45791=ExternalizeStringLiteralsTest:test022()
45792=ExternalizeStringLiteralsTest:test443456()
45793=ExternalizeStringLiteralsTest:test015()
45794=ExternalizeStringLiteralsTest:test004()
45795=ExternalizeStringLiteralsTest:suite()
45796=ExternalizeStringLiteralsTest:test013()
45797=ExternalizeStringLiteralsTest:test002()
45798=ExternalizeStringLiteralsTest:test019()
45799=ExternalizeStringLiteralsTest:test008()
45800=ExternalizeStringLiteralsTest:test017()
45801=ExternalizeStringLiteralsTest:test006()
45802=ExternalizeStringLiteralsTest:test012()
45803=ExternalizeStringLiteralsTest:test001()
45804=ExternalizeStringLiteralsTest:test023()
45805=ExternalizeStringLiteralsTest:test010()
45806=ExternalizeStringLiteralsTest:testClass()
45807=ExternalizeStringLiteralsTest:test021()
45808=ExternalizeStringLiteralsTest:test016()
45809=ExternalizeStringLiteralsTest:test005()
45810=ExternalizeStringLiteralsTest:test014()
45811=ExternalizeStringLiteralsTest:test003()
45812=ExternalizeStringLiteralsTest:test009()
45813=ExternalizeStringLiteralsTest:test018()
45814=ExternalizeStringLiteralsTest:test007()
45815=ExternalizeStringLiteralsTest:ExternalizeStringLiteralsTest(String)
45816=ExternalizeStringLiteralsTest:test020()
45817=A:foo(java.lang.String)
45818=NO_WORKING:method()
45819=X:foo()
45820=PolyTypeBinding:isPolyType()
45821=PolyTypeBinding:shortReadableName()
45822=PolyTypeBinding:sourceName()
45823=PolyTypeBinding:qualifiedSourceName()
45824=PolyTypeBinding:toString()
45825=PolyTypeBinding:readableName()
45826=PolyTypeBinding:isFunctionalType()
45827=PolyTypeBinding:isCompatibleWith(TypeBinding, Scope)
45828=PolyTypeBinding:computeBoxingType()
45829=PolyTypeBinding:getPackage()
45830=PolyTypeBinding:constantPoolName()
45831=PolyTypeBinding:kind()
45832=PolyTypeBinding:PolyTypeBinding(Expression)
45833=PolyTypeBinding:sIsMoreSpecific(TypeBinding, TypeBinding, Scope)
45834=PolyTypeBinding:isPotentiallyCompatibleWith(TypeBinding, Scope)
45835=X:foo()
45836=ITypeRoot:getWorkingCopy(WorkingCopyOwner, IProgressMonitor)
45837=ITypeRoot:getElementAt(int)
45838=ITypeRoot:findPrimaryType()
45839=AptConfig:addProjectClasspath(IWorkspaceRoot, IJavaProject, Set<IJavaProject>, Set<String>)
45840=AptConfig:getRawProcessorOptions(IJavaProject)
45841=AptConfig:flushPreference(String, IEclipsePreferences)
45842=AptConfig:setGenSrcDir(IJavaProject, String)
45843=AptConfig:resolveVarPath(IJavaProject, String)
45844=AptConfig:getOldStyleRawProcessorOptions(IJavaProject)
45845=AptConfig:getProcessorOptions(IJavaProject)
45846=AptConfig:getString(IJavaProject, String)
45847=AptConfig:getBoolean(IJavaProject, String)
45848=AptConfig:setBoolean(IJavaProject, String, boolean)
45849=AptConfig:convertPathCollectionToString(Collection<String>)
45850=AptConfig:getFactoryPath(IJavaProject)
45851=AptConfig:removeProcessorOption(IJavaProject, String)
45852=AptConfig:ProcessorOptionsParser:parseVal()
45853=AptConfig:ProcessorOptionsParser:parseKey()
45854=AptConfig:setProcessorOptions(Map<String, String>, IJavaProject)
45855=AptConfig:dispose()
45856=AptConfig:shouldProcessDuringReconcile(IJavaProject)
45857=AptConfig:getDefaultFactoryPath(IJavaProject)
45858=AptConfig:ProcessorOptionsParser:parse()
45859=AptConfig:ProcessorOptionsParser:ProcessorOptionsParser(String)
45860=AptConfig:addProcessorOption(IJavaProject, String, String)
45861=AptConfig:isAutomaticProcessorOption(String)
45862=AptConfig:setEnabled(IJavaProject, boolean)
45863=AptConfig:validateGenSrcDir(IJavaProject, String)
45864=AptConfig:setFactoryPath(IJavaProject, IFactoryPath)
45865=AptConfig:isEnabled(IJavaProject)
45866=AptConfig:removeOldStyleSettings(IScopeContext)
45867=AptConfig:initialize()
45868=AptConfig:hasProjectSpecificFactoryPath(IJavaProject)
45869=AptConfig:setProcessDuringReconcile(IJavaProject, boolean)
45870=AptConfig:setString(IJavaProject, String, String)
45871=AptConfig:AptConfig()
45872=AptConfig:getGenSrcDir(IJavaProject)
45873=A:foo(Object, A)
45874=TestInvalid:foo1()
45875=TestInvalid:foo2()
45876=FormaterBug:method2()
45877=FormaterBug:method6()
45878=FormaterBug:voidmethod4()
45879=FormaterBug:main(String[])
45880=FormaterBug:method1()
45881=FormaterBug:method5()
45882=FormaterBug:method3()
45883=FormaterBug:method7()
45884=TypeNameMatchRequestorWrapper:TypeNameMatchRequestorWrapper(TypeNameMatchRequestor, IJavaSearchScope)
45885=TypeNameMatchRequestorWrapper:acceptType(int, char[], char[], char[][], String, AccessRestriction)
45886=A:foo()
45887=JavaLikeExtensionsTests:suite()
45888=JavaLikeExtensionsTests:testGetJavaLikeExtensions01()
45889=JavaLikeExtensionsTests:testIJavaLikeFileName02()
45890=JavaLikeExtensionsTests:testRemoveJavaLikeExtension02()
45891=JavaLikeExtensionsTests:testIJavaLikeFileName04()
45892=JavaLikeExtensionsTests:JavaLikeExtensionsTests(String)
45893=JavaLikeExtensionsTests:testGetJavaLikeExtensions02()
45894=JavaLikeExtensionsTests:testIJavaLikeFileName03()
45895=JavaLikeExtensionsTests:setUpSuite()
45896=JavaLikeExtensionsTests:testIJavaLikeFileName01()
45897=JavaLikeExtensionsTests:testRemoveJavaLikeExtension03()
45898=JavaLikeExtensionsTests:testRemoveJavaLikeExtension01()
45899=ClasspathMultiDirectory:equals(Object)
45900=ClasspathMultiDirectory:ClasspathMultiDirectory(IContainer, IContainer, char[][], char[][], boolean)
45901=ClasspathMultiDirectory:isExcluded(IResource)
45902=ClasspathMultiDirectory:toString()
45903=TryStatement:traverse(ASTVisitor, BlockScope)
45904=TryStatement:generateCode(BlockScope, CodeStream)
45905=TryStatement:resolve(BlockScope)
45906=TryStatement:exitAnyExceptionHandler()
45907=TryStatement:finallyMode()
45908=TryStatement:doesNotCompleteNormally()
45909=TryStatement:isUncheckedCatchBlock(int)
45910=TryStatement:completesByContinue()
45911=TryStatement:prepareCatchInfo(FlowInfo, ExceptionHandlingFlowContext, FlowInfo, int)
45912=TryStatement:isSubRoutineEscaping()
45913=TryStatement:verifyDuplicationAndOrder(int, TypeBinding[], boolean)
45914=TryStatement:generateSubRoutineInvocation(BlockScope, CodeStream, Object, int, LocalVariableBinding)
45915=TryStatement:enterAnyExceptionHandler(CodeStream)
45916=TryStatement:exitDeclaredExceptionHandlers(CodeStream)
45917=TryStatement:enterDeclaredExceptionHandlers(CodeStream)
45918=TryStatement:printStatement(int, StringBuffer)
45919=TryStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
45920=TryStatement:findCloseMethod(LocalDeclaration, LocalVariableBinding)
45921=StaticImportTest:test045b()
45922=StaticImportTest:test001()
45923=StaticImportTest:test047()
45924=StaticImportTest:test036()
45925=StaticImportTest:test025()
45926=StaticImportTest:test014()
45927=StaticImportTest:test045()
45928=StaticImportTest:test034()
45929=StaticImportTest:test069()
45930=StaticImportTest:test023()
45931=StaticImportTest:test012()
45932=StaticImportTest:test058()
45933=StaticImportTest:test005()
45934=StaticImportTest:test032c()
45935=StaticImportTest:test029()
45936=StaticImportTest:test082()
45937=StaticImportTest:test018()
45938=StaticImportTest:test071()
45939=StaticImportTest:test049()
45940=StaticImportTest:test003()
45941=StaticImportTest:test038()
45942=StaticImportTest:test080()
45943=StaticImportTest:test027()
45944=StaticImportTest:test033b()
45945=StaticImportTest:test016()
45946=StaticImportTest:test009()
45947=StaticImportTest:test062()
45948=StaticImportTest:test051()
45949=StaticImportTest:test040()
45950=StaticImportTest:test085b()
45951=StaticImportTest:test086()
45952=StaticImportTest:StaticImportTest(String)
45953=StaticImportTest:test075()
45954=StaticImportTest:test007()
45955=StaticImportTest:test060()
45956=StaticImportTest:test084()
45957=StaticImportTest:test073()
45958=StaticImportTest:testClass()
45959=StaticImportTest:test020()
45960=StaticImportTest:test066()
45961=StaticImportTest:test055()
45962=StaticImportTest:suite()
45963=StaticImportTest:test044()
45964=StaticImportTest:test079()
45965=StaticImportTest:test033()
45966=StaticImportTest:testBug401271()
45967=StaticImportTest:test064()
45968=StaticImportTest:test053()
45969=StaticImportTest:test042()
45970=StaticImportTest:test031()
45971=StaticImportTest:test077()
45972=StaticImportTest:test024()
45973=StaticImportTest:test059()
45974=StaticImportTest:test013()
45975=StaticImportTest:test048()
45976=StaticImportTest:test002()
45977=StaticImportTest:test037()
45978=StaticImportTest:test068()
45979=StaticImportTest:test022()
45980=StaticImportTest:test011()
45981=StaticImportTest:test057()
45982=StaticImportTest:test046()
45983=StaticImportTest:test035()
45984=StaticImportTest:test032d()
45985=StaticImportTest:test028()
45986=StaticImportTest:test081()
45987=StaticImportTest:test017()
45988=StaticImportTest:testBug442580()
45989=StaticImportTest:test070()
45990=StaticImportTest:test042b()
45991=StaticImportTest:test006()
45992=StaticImportTest:test032b()
45993=StaticImportTest:test026()
45994=StaticImportTest:test015()
45995=StaticImportTest:testBug479287()
45996=StaticImportTest:test004()
45997=StaticImportTest:test039()
45998=StaticImportTest:test085()
45999=StaticImportTest:test085a()
46000=StaticImportTest:test074()
46001=StaticImportTest:test063()
46002=StaticImportTest:test426544()
46003=StaticImportTest:test052()
46004=StaticImportTest:test083()
46005=StaticImportTest:test019()
46006=StaticImportTest:test072()
46007=StaticImportTest:test008()
46008=StaticImportTest:test061()
46009=StaticImportTest:test050()
46010=StaticImportTest:test043()
46011=StaticImportTest:test032()
46012=StaticImportTest:test078()
46013=StaticImportTest:test021()
46014=StaticImportTest:test067()
46015=StaticImportTest:test010()
46016=StaticImportTest:test056()
46017=StaticImportTest:test041()
46018=StaticImportTest:test085c()
46019=StaticImportTest:test030()
46020=StaticImportTest:test076()
46021=StaticImportTest:test065()
46022=A:foo()
46023=A:run()
46024=AMap:createAMap(String, String)
46025=B:B(M, N)
46026=AMethod:getMap(String, String)
46027=A:A(M, N)
46028=B:getMap(M, N)
46029=A:getMap(M, N)
46030=A:A()
46031=AMap:AMap(String, String)
46032=Bug49361:main(String[])
46033=ArrayTypeReference:traverse(ASTVisitor, ClassScope)
46034=ArrayTypeReference:dimensions()
46035=ArrayTypeReference:getTypeBinding(Scope)
46036=ArrayTypeReference:printExpression(int, StringBuffer)
46037=ArrayTypeReference:setAnnotationsOnDimensions(Annotation[][])
46038=ArrayTypeReference:getAnnotationsOnDimensions(boolean)
46039=ArrayTypeReference:internalResolveType(Scope, int)
46040=ArrayTypeReference:ArrayTypeReference(char[], int, long)
46041=ArrayTypeReference:ArrayTypeReference(char[], int, Annotation[][], long)
46042=ArrayTypeReference:traverse(ASTVisitor, BlockScope)
46043=ArrayTypeReference:getParameterizedTypeName()
46044=ArrayTypeReference:hasNullTypeAnnotation(AnnotationPosition)
46045=ArrayTypeReference:extraDimensions()
46046=AptPreferencePage:getPreferencePageID()
46047=AptPreferencePage:AptPreferencePage()
46048=AptPreferencePage:createControl(Composite)
46049=AptPreferencePage:getContextHelpId()
46050=AptPreferencePage:getPropertyPageID()
46051=BatchCompiler:compile(String, PrintWriter, PrintWriter, CompilationProgress)
46052=BatchCompiler:compile(String[], PrintWriter, PrintWriter, CompilationProgress)
46053=BatchCompiler:BatchCompiler()
46054=AnnotatableType:AnnotatableType(AST)
46055=AnnotatableType:internalAnnotationsProperty()
46056=AnnotatableType:getAnnotationsProperty()
46057=AnnotatableType:internalAnnotationsPropertyFactory(Class)
46058=AnnotatableType:annotations()
46059=SourceFieldWithChildrenInfo:getChildren()
46060=SourceFieldWithChildrenInfo:SourceFieldWithChildrenInfo(IJavaElement[])
46061=BufferCache:BufferCache(int, int)
46062=BufferCache:newInstance(int, int)
46063=BufferCache:close(LRUCacheEntry)
46064=BufferCache:closeBuffers()
46065=BufferCache:BufferCache(int)
46066=MirrorTests:suite()
46067=MirrorTests:testMirror()
46068=MirrorTests:MirrorTests(String)
46069=MirrorTests:testTypeParmaterAPI()
46070=X:bar(int, String)
46071=X:X()
46072=Ordered:methodA()
46073=Ordered:methodB()
46074=PreferencesTests:testGenSrcDir()
46075=PreferencesTests:suite()
46076=PreferencesTests:testAutomaticOptions()
46077=PreferencesTests:testConfigGenSrcDir()
46078=PreferencesTests:isOnClasspath(IJavaProject, IPath)
46079=PreferencesTests:testSimpleConfigApi()
46080=PreferencesTests:testFactoryPathEncodingAndDecoding()
46081=PreferencesTests:PreferencesTests(String)
46082=CompilationProgress:done()
46083=CompilationProgress:begin(int)
46084=CompilationProgress:isCanceled()
46085=CompilationProgress:worked(int, int)
46086=CompilationProgress:setTaskName(String)
46087=MethodDeclarationPattern:getIndexCategories()
46088=MethodDeclarationPattern:MethodDeclarationPattern(char[], char[], char[], char[], int)
46089=MethodDeclarationPattern:MethodDeclarationPattern(int)
46090=MethodDeclarationPattern:MethodDeclarationPattern(char[], char[], int)
46091=MethodDeclarationPattern:getTypeErasure(char[])
46092=MethodDeclarationPattern:createDeclarationIndexKey(char[], char[], char[], int, char[], char[][], char[][], char[], int, char[], int, int)
46093=MethodDeclarationPattern:decodeIndexKey(char[])
46094=MethodDeclarationPattern:getBlankPattern()
46095=MethodDeclarationPattern:removeInternalFlags()
46096=MethodDeclarationPattern:encodeExtraFlags(int)
46097=RemoveFolderFromIndex:execute(IProgressMonitor)
46098=RemoveFolderFromIndex:RemoveFolderFromIndex(IPath, char[][], char[][], IProject, IndexManager)
46099=RemoveFolderFromIndex:toString()
46100=IRequestor:acceptProblem(CategorizedProblem, char[], int)
46101=IRequestor:acceptClassFiles(ClassFile[], char[])
46102=ILocalVariableTableEntry:getStartPC()
46103=ILocalVariableTableEntry:getDescriptorIndex()
46104=ILocalVariableTableEntry:getNameIndex()
46105=ILocalVariableTableEntry:getDescriptor()
46106=ILocalVariableTableEntry:getIndex()
46107=ILocalVariableTableEntry:getName()
46108=ILocalVariableTableEntry:getLength()
46109=A:Inner1:i()
46110=A:Inner2:xy()
46111=B:foo()
46112=A:Inner1:bar()
46113=X17b:findPackageFragmentRoots(String)
46114=CollisionCase:CollisionCase(String)
46115=CollisionCase:suite()
46116=CollisionCase:test002()
46117=CollisionCase:testClass()
46118=CollisionCase:test001()
46119=CollisionCase:test003()
46120=X03a:foo()
46121=Test:foo(int)
46122=Test:foo()
46123=JarEntryFile:clone(Object)
46124=JarEntryFile:getContents()
46125=JarEntryFile:JarEntryFile(String)
46126=JarEntryFile:toString()
46127=JarEntryFile:isFile()
46128=JarEntryFile:getChildren()
46129=JavadocArgumentExpression:traverse(ASTVisitor, ClassScope)
46130=JavadocArgumentExpression:internalResolveType(Scope)
46131=JavadocArgumentExpression:resolveType(ClassScope)
46132=JavadocArgumentExpression:JavadocArgumentExpression(char[], int, int, TypeReference)
46133=JavadocArgumentExpression:printExpression(int, StringBuffer)
46134=JavadocArgumentExpression:traverse(ASTVisitor, BlockScope)
46135=JavadocArgumentExpression:resolveType(BlockScope)
46136=JavadocArgumentExpression:resolve(BlockScope)
46137=IDOMInitializer:setName(String)
46138=IDOMInitializer:getName()
46139=IDOMInitializer:getBody()
46140=IDOMInitializer:setBody(String)
46141=firstClass:myMethod()
46142=ASTConverterBindingsTest:BindingsCollector:endVisit(VariableDeclarationExpression)
46143=ASTConverterBindingsTest:BindingsCollector:endVisit(VariableDeclarationFragment)
46144=ASTConverterBindingsTest:BindingsCollector:endVisit(ArrayAccess)
46145=ASTConverterBindingsTest:test0001()
46146=ASTConverterBindingsTest:BindingsCollector:endVisit(SingleVariableDeclaration)
46147=ASTConverterBindingsTest:BindingsCollector:endVisit(ClassInstanceCreation)
46148=ASTConverterBindingsTest:BindingsCollector:collectBindings(ASTNode, IBinding)
46149=ASTConverterBindingsTest:BindingsCollector:endVisit(ArrayType)
46150=ASTConverterBindingsTest:BindingsCollector:endVisit(AnonymousClassDeclaration)
46151=ASTConverterBindingsTest:BindingsCollector:endVisit(AnnotationTypeMemberDeclaration)
46152=ASTConverterBindingsTest:BindingsCollector:endVisit(SuperConstructorInvocation)
46153=ASTConverterBindingsTest:BindingsCollector:endVisit(ParenthesizedExpression)
46154=ASTConverterBindingsTest:BindingsCollector:getBindings()
46155=ASTConverterBindingsTest:BindingsCollector:endVisit(EnumConstantDeclaration)
46156=ASTConverterBindingsTest:setUpSuite()
46157=ASTConverterBindingsTest:BindingsCollector:endVisit(CharacterLiteral)
46158=ASTConverterBindingsTest:BindingsCollector:endVisit(Assignment)
46159=ASTConverterBindingsTest:BindingsCollector:endVisit(SuperFieldAccess)
46160=ASTConverterBindingsTest:BindingsCollector:endVisit(TypeDeclaration)
46161=ASTConverterBindingsTest:BindingsCollector:endVisit(ParameterizedType)
46162=ASTConverterBindingsTest:BindingsCollector:endVisit(MethodInvocation)
46163=ASTConverterBindingsTest:BindingsCollector:endVisit(PrimitiveType)
46164=ASTConverterBindingsTest:BindingsCollector:endVisit(SimpleName)
46165=ASTConverterBindingsTest:BindingsCollector:endVisit(MemberRef)
46166=ASTConverterBindingsTest:suite()
46167=ASTConverterBindingsTest:BindingsCollector:endVisit(StringLiteral)
46168=ASTConverterBindingsTest:BindingsCollector:endVisit(SuperMethodInvocation)
46169=ASTConverterBindingsTest:BindingsCollector:endVisit(MethodDeclaration)
46170=ASTConverterBindingsTest:BindingsCollector:endVisit(SimpleType)
46171=ASTConverterBindingsTest:BindingsCollector:endVisit(NullLiteral)
46172=ASTConverterBindingsTest:BindingsCollector:endVisit(ArrayInitializer)
46173=ASTConverterBindingsTest:BindingsCollector:endVisit(NumberLiteral)
46174=ASTConverterBindingsTest:ASTConverterBindingsTest(String)
46175=ASTConverterBindingsTest:BindingsCollector:endVisit(ConstructorInvocation)
46176=ASTConverterBindingsTest:BindingsCollector:endVisit(PackageDeclaration)
46177=ASTConverterBindingsTest:BindingsCollector:endVisit(QualifiedName)
46178=ASTConverterBindingsTest:BindingsCollector:BindingsCollector()
46179=ASTConverterBindingsTest:BindingsCollector:endVisit(TypeLiteral)
46180=ASTConverterBindingsTest:BindingsCollector:endVisit(MethodRef)
46181=ASTConverterBindingsTest:checkBindingEqualityForProject(String)
46182=ASTConverterBindingsTest:BindingsCollector:endVisit(ThisExpression)
46183=ASTConverterBindingsTest:BindingsCollector:endVisit(ConditionalExpression)
46184=ASTConverterBindingsTest:BindingsCollector:endVisit(BooleanLiteral)
46185=ASTConverterBindingsTest:BindingsCollector:endVisit(InfixExpression)
46186=ASTConverterBindingsTest:BindingsCollector:endVisit(FieldAccess)
46187=ASTConverterBindingsTest:BindingsCollector:endVisit(InstanceofExpression)
46188=ASTConverterBindingsTest:BindingsCollector:endVisit(EnumDeclaration)
46189=ASTConverterBindingsTest:BindingsCollector:endVisit(PrefixExpression)
46190=ASTConverterBindingsTest:BindingsCollector:endVisit(CastExpression)
46191=ASTConverterBindingsTest:BindingsCollector:endVisit(ImportDeclaration)
46192=ASTConverterBindingsTest:BindingsCollector:endVisit(ArrayCreation)
46193=ASTConverterBindingsTest:BindingsCollector:endVisit(AnnotationTypeDeclaration)
46194=ASTConverterBindingsTest:BindingsCollector:endVisit(PostfixExpression)
46195=X19:foo()
46196=X18:setKind(int)
46197=X16:setConstantPoolName(char[])
46198=IA:methodIAString(int)
46199=RefSingle:testObject()
46200=RefSingle:testException()
46201=RefSingle:testRuntimeException()
46202=SimpleTest:startEvaluationContext()
46203=SimpleTest:getProblemFactory()
46204=SimpleTest:buildCharArray(String[])
46205=SimpleTest:getEnv()
46206=SimpleTest:Requestor:acceptClassFiles(ClassFile[], char[])
46207=SimpleTest:findVar(char[])
46208=SimpleTest:stopEvaluationContext()
46209=SimpleTest:Requestor:acceptProblem(CategorizedProblem, char[], int)
46210=SimpleTest:errorReportSource(DefaultProblem, char[])
46211=TestD2:bar()
46212=TestD2:foo()
46213=Test:foo(int)
46214=ASTConverterTestAST4_2:test0523()
46215=ASTConverterTestAST4_2:test0425()
46216=ASTConverterTestAST4_2:test0678()
46217=ASTConverterTestAST4_2:test0558()
46218=ASTConverterTestAST4_2:test0632()
46219=ASTConverterTestAST4_2:test0534()
46220=ASTConverterTestAST4_2:test0436()
46221=ASTConverterTestAST4_2:test0667()
46222=ASTConverterTestAST4_2:test0621()
46223=ASTConverterTestAST4_2:test0501()
46224=ASTConverterTestAST4_2:test0438()
46225=ASTConverterTestAST4_2:test0403()
46226=ASTConverterTestAST4_2:test0656()
46227=ASTConverterTestAST4_2:test0536()
46228=ASTConverterTestAST4_2:test0610()
46229=ASTConverterTestAST4_2:test0538b()
46230=ASTConverterTestAST4_2:test0512()
46231=ASTConverterTestAST4_2:test0449()
46232=ASTConverterTestAST4_2:internalThrownExceptions(MethodDeclaration)
46233=ASTConverterTestAST4_2:test0414()
46234=ASTConverterTestAST4_2:test0645()
46235=ASTConverterTestAST4_2:test0547()
46236=ASTConverterTestAST4_2:test0669()
46237=ASTConverterTestAST4_2:test0416()
46238=ASTConverterTestAST4_2:test0514()
46239=ASTConverterTestAST4_2:test0634()
46240=ASTConverterTestAST4_2:test0480()
46241=ASTConverterTestAST4_2:test0427()
46242=ASTConverterTestAST4_2:test0721()
46243=ASTConverterTestAST4_2:test0623()
46244=ASTConverterTestAST4_2:test0525()
46245=ASTConverterTestAST4_2:test0491()
46246=ASTConverterTestAST4_2:test0647()
46247=ASTConverterTestAST4_2:test0710()
46248=ASTConverterTestAST4_2:test0612()
46249=ASTConverterTestAST4_2:test0636()
46250=ASTConverterTestAST4_2:test0405()
46251=ASTConverterTestAST4_2:test0549()
46252=ASTConverterTestAST4_2:test0601()
46253=ASTConverterTestAST4_2:test0537c()
46254=ASTConverterTestAST4_2:test0625()
46255=ASTConverterTestAST4_2:test0418()
46256=ASTConverterTestAST4_2:test0580()
46257=ASTConverterTestAST4_2:test0723()
46258=ASTConverterTestAST4_2:test0516()
46259=ASTConverterTestAST4_2:test0482()
46260=ASTConverterTestAST4_2:test0614()
46261=ASTConverterTestAST4_2:test0429()
46262=ASTConverterTestAST4_2:test0591()
46263=ASTConverterTestAST4_2:test0712()
46264=ASTConverterTestAST4_2:test0493()
46265=ASTConverterTestAST4_2:test0527()
46266=ASTConverterTestAST4_2:test0603()
46267=ASTConverterTestAST4_2:test0649()
46268=ASTConverterTestAST4_2:test0503c()
46269=ASTConverterTestAST4_2:test0701()
46270=ASTConverterTestAST4_2:test0460()
46271=ASTConverterTestAST4_2:test0638()
46272=ASTConverterTestAST4_2:test0538f()
46273=ASTConverterTestAST4_2:test0407()
46274=ASTConverterTestAST4_2:test0666_2()
46275=ASTConverterTestAST4_2:test0502b()
46276=ASTConverterTestAST4_2:test0505()
46277=ASTConverterTestAST4_2:test0471()
46278=ASTConverterTestAST4_2:test0537a()
46279=ASTConverterTestAST4_2:test0627()
46280=ASTConverterTestAST4_2:test0582()
46281=ASTConverterTestAST4_2:test0698a()
46282=ASTConverterTestAST4_2:test0484()
46283=ASTConverterTestAST4_2:test0725()
46284=ASTConverterTestAST4_2:test0667_2()
46285=ASTConverterTestAST4_2:test0518()
46286=ASTConverterTestAST4_2:test0691()
46287=ASTConverterTestAST4_2:test0616()
46288=ASTConverterTestAST4_2:test0593()
46289=ASTConverterTestAST4_2:test0495()
46290=ASTConverterTestAST4_2:test0714()
46291=ASTConverterTestAST4_2:test0680()
46292=ASTConverterTestAST4_2:test0529()
46293=ASTConverterTestAST4_2:test0605()
46294=ASTConverterTestAST4_2:test0560()
46295=ASTConverterTestAST4_2:test0462()
46296=ASTConverterTestAST4_2:test0503a()
46297=ASTConverterTestAST4_2:test0703()
46298=ASTConverterTestAST4_2:test0538d()
46299=ASTConverterTestAST4_2:test0571()
46300=ASTConverterTestAST4_2:test0409()
46301=ASTConverterTestAST4_2:test0473()
46302=ASTConverterTestAST4_2:test0507()
46303=ASTConverterTestAST4_2:test0606()
46304=ASTConverterTestAST4_2:test0561()
46305=ASTConverterTestAST4_2:test0463()
46306=ASTConverterTestAST4_2:test0704()
46307=ASTConverterTestAST4_2:test0670()
46308=ASTConverterTestAST4_2:test0503h()
46309=ASTConverterTestAST4_2:test0572()
46310=ASTConverterTestAST4_2:test0474()
46311=ASTConverterTestAST4_2:test0508()
46312=ASTConverterTestAST4_2:test0502g()
46313=ASTConverterTestAST4_2:test0585()
46314=ASTConverterTestAST4_2:test0694()
46315=ASTConverterTestAST4_2:test0441()
46316=ASTConverterTestAST4_2:test0487()
46317=ASTConverterTestAST4_2:componentType(ArrayType)
46318=ASTConverterTestAST4_2:test0619()
46319=ASTConverterTestAST4_2:test0550()
46320=ASTConverterTestAST4_2:test0596()
46321=ASTConverterTestAST4_2:test0717()
46322=ASTConverterTestAST4_2:test0683()
46323=ASTConverterTestAST4_2:test0452()
46324=ASTConverterTestAST4_2:test0498()
46325=ASTConverterTestAST4_2:test0608()
46326=ASTConverterTestAST4_2:test0563()
46327=ASTConverterTestAST4_2:test0672()
46328=ASTConverterTestAST4_2:test0706()
46329=ASTConverterTestAST4_2:test0465()
46330=ASTConverterTestAST4_2:test0503f()
46331=ASTConverterTestAST4_2:test0574()
46332=ASTConverterTestAST4_2:test0538g()
46333=ASTConverterTestAST4_2:test0661()
46334=ASTConverterTestAST4_2:test0430()
46335=ASTConverterTestAST4_2:test0476()
46336=ASTConverterTestAST4_2:test0502e()
46337=ASTConverterTestAST4_2:test0541()
46338=ASTConverterTestAST4_2:test0587()
46339=ASTConverterTestAST4_2:test0650()
46340=ASTConverterTestAST4_2:test0696()
46341=ASTConverterTestAST4_2:test0489()
46342=ASTConverterTestAST4_2:test0443()
46343=ASTConverterTestAST4_2:test0552()
46344=ASTConverterTestAST4_2:test0598()
46345=ASTConverterTestAST4_2:_test0658()
46346=ASTConverterTestAST4_2:test0685()
46347=ASTConverterTestAST4_2:test0719()
46348=ASTConverterTestAST4_2:test0454()
46349=ASTConverterTestAST4_2:test0565()
46350=ASTConverterTestAST4_2:test0421()
46351=ASTConverterTestAST4_2:test0467()
46352=ASTConverterTestAST4_2:test0674()
46353=ASTConverterTestAST4_2:test0708()
46354=ASTConverterTestAST4_2:test0530()
46355=ASTConverterTestAST4_2:test0576()
46356=ASTConverterTestAST4_2:test0432()
46357=ASTConverterTestAST4_2:test0478()
46358=ASTConverterTestAST4_2:test0663()
46359=ASTConverterTestAST4_2:test0589()
46360=ASTConverterTestAST4_2:test0543()
46361=ASTConverterTestAST4_2:test0445()
46362=ASTConverterTestAST4_2:test0554()
46363=ASTConverterTestAST4_2:test0410()
46364=ASTConverterTestAST4_2:test0456()
46365=ASTConverterTestAST4_2:test0641()
46366=ASTConverterTestAST4_2:test0687()
46367=ASTConverterTestAST4_2:test0521()
46368=ASTConverterTestAST4_2:test0567()
46369=ASTConverterTestAST4_2:test0469()
46370=ASTConverterTestAST4_2:test0676()
46371=ASTConverterTestAST4_2:test0423()
46372=ASTConverterTestAST4_2:test0630()
46373=ASTConverterTestAST4_2:test0532()
46374=ASTConverterTestAST4_2:test0578()
46375=ASTConverterTestAST4_2:test0665()
46376=ASTConverterTestAST4_2:test0434()
46377=ASTConverterTestAST4_2:test0502i()
46378=ASTConverterTestAST4_2:test0545()
46379=ASTConverterTestAST4_2:test0447()
46380=ASTConverterTestAST4_2:test0654()
46381=ASTConverterTestAST4_2:test0401()
46382=ASTConverterTestAST4_2:test0510()
46383=ASTConverterTestAST4_2:test0556()
46384=ASTConverterTestAST4_2:test0458()
46385=ASTConverterTestAST4_2:test0643()
46386=ASTConverterTestAST4_2:test0689()
46387=ASTConverterTestAST4_2:test0412()
46388=ASTConverterTestAST4_2:test0500()
46389=ASTConverterTestAST4_2:test0546()
46390=ASTConverterTestAST4_2:test0437()
46391=ASTConverterTestAST4_2:test0402()
46392=ASTConverterTestAST4_2:test0655()
46393=ASTConverterTestAST4_2:test0538a()
46394=ASTConverterTestAST4_2:test0511()
46395=ASTConverterTestAST4_2:test0557()
46396=ASTConverterTestAST4_2:test0448()
46397=ASTConverterTestAST4_2:test0413()
46398=ASTConverterTestAST4_2:test0644()
46399=ASTConverterTestAST4_2:test0524()
46400=ASTConverterTestAST4_2:test0668()
46401=ASTConverterTestAST4_2:test0415()
46402=ASTConverterTestAST4_2:test0633()
46403=ASTConverterTestAST4_2:test0559()
46404=ASTConverterTestAST4_2:_test0652()
46405=ASTConverterTestAST4_2:test0535()
46406=ASTConverterTestAST4_2:test0657()
46407=ASTConverterTestAST4_2:test0720()
46408=ASTConverterTestAST4_2:test0426()
46409=ASTConverterTestAST4_2:test0622()
46410=ASTConverterTestAST4_2:test0490()
46411=ASTConverterTestAST4_2:test0646()
46412=ASTConverterTestAST4_2:test0439()
46413=ASTConverterTestAST4_2:test0611()
46414=ASTConverterTestAST4_2:test0513()
46415=ASTConverterTestAST4_2:test0635()
46416=ASTConverterTestAST4_2:test0404()
46417=ASTConverterTestAST4_2:suite()
46418=ASTConverterTestAST4_2:test0600()
46419=ASTConverterTestAST4_2:test0548()
46420=ASTConverterTestAST4_2:test0624()
46421=ASTConverterTestAST4_2:test0417()
46422=ASTConverterTestAST4_2:test0481()
46423=ASTConverterTestAST4_2:test0515()
46424=ASTConverterTestAST4_2:test0613()
46425=ASTConverterTestAST4_2:test0590()
46426=ASTConverterTestAST4_2:test0428()
46427=ASTConverterTestAST4_2:test0659()
46428=ASTConverterTestAST4_2:test0722()
46429=ASTConverterTestAST4_2:test0526()
46430=ASTConverterTestAST4_2:test0492()
46431=ASTConverterTestAST4_2:test0602()
46432=ASTConverterTestAST4_2:test0648()
46433=ASTConverterTestAST4_2:test0711()
46434=ASTConverterTestAST4_2:test0503d()
46435=ASTConverterTestAST4_2:test0539()
46436=ASTConverterTestAST4_2:test0538e()
46437=ASTConverterTestAST4_2:test0637()
46438=ASTConverterTestAST4_2:test0406()
46439=ASTConverterTestAST4_2:test0700()
46440=ASTConverterTestAST4_2:test0502c()
46441=ASTConverterTestAST4_2:test0470()
46442=ASTConverterTestAST4_2:test0504()
46443=ASTConverterTestAST4_2:test0626()
46444=ASTConverterTestAST4_2:test0581()
46445=ASTConverterTestAST4_2:test0419()
46446=ASTConverterTestAST4_2:test0724()
46447=ASTConverterTestAST4_2:test0483()
46448=ASTConverterTestAST4_2:test0517()
46449=ASTConverterTestAST4_2:test0690()
46450=ASTConverterTestAST4_2:test0615()
46451=ASTConverterTestAST4_2:test0592()
46452=ASTConverterTestAST4_2:test0713()
46453=ASTConverterTestAST4_2:test0494()
46454=ASTConverterTestAST4_2:test0528()
46455=ASTConverterTestAST4_2:test0604()
46456=ASTConverterTestAST4_2:test0503b()
46457=ASTConverterTestAST4_2:test0702()
46458=ASTConverterTestAST4_2:test0461()
46459=ASTConverterTestAST4_2:test0538c()
46460=ASTConverterTestAST4_2:test0639()
46461=ASTConverterTestAST4_2:test0570()
46462=ASTConverterTestAST4_2:test0408()
46463=ASTConverterTestAST4_2:test0502a()
46464=ASTConverterTestAST4_2:test0472()
46465=ASTConverterTestAST4_2:test0506()
46466=ASTConverterTestAST4_2:test0537b()
46467=ASTConverterTestAST4_2:test0628()
46468=ASTConverterTestAST4_2:test0583()
46469=ASTConverterTestAST4_2:test0698b()
46470=ASTConverterTestAST4_2:test0485()
46471=ASTConverterTestAST4_2:test0519()
46472=ASTConverterTestAST4_2:test0692()
46473=ASTConverterTestAST4_2:test0617()
46474=ASTConverterTestAST4_2:test0594()
46475=ASTConverterTestAST4_2:test0715()
46476=ASTConverterTestAST4_2:test0496()
46477=ASTConverterTestAST4_2:test0450()
46478=ASTConverterTestAST4_2:test0681()
46479=ASTConverterTestAST4_2:test0629()
46480=ASTConverterTestAST4_2:test0584()
46481=ASTConverterTestAST4_2:test0693()
46482=ASTConverterTestAST4_2:test0440()
46483=ASTConverterTestAST4_2:test0486()
46484=ASTConverterTestAST4_2:test0618()
46485=ASTConverterTestAST4_2:test0595()
46486=ASTConverterTestAST4_2:test0716()
46487=ASTConverterTestAST4_2:test0682()
46488=ASTConverterTestAST4_2:test0451()
46489=ASTConverterTestAST4_2:test0497()
46490=ASTConverterTestAST4_2:test0562()
46491=ASTConverterTestAST4_2:test0607()
46492=ASTConverterTestAST4_2:test0705()
46493=ASTConverterTestAST4_2:test0671()
46494=ASTConverterTestAST4_2:test0464()
46495=ASTConverterTestAST4_2:test0503g()
46496=ASTConverterTestAST4_2:test0573()
46497=ASTConverterTestAST4_2:setUpSuite()
46498=ASTConverterTestAST4_2:test0660()
46499=ASTConverterTestAST4_2:test0475()
46500=ASTConverterTestAST4_2:test0502f()
46501=ASTConverterTestAST4_2:test0509()
46502=ASTConverterTestAST4_2:test0540()
46503=ASTConverterTestAST4_2:test0586()
46504=ASTConverterTestAST4_2:test0695()
46505=ASTConverterTestAST4_2:test0488()
46506=ASTConverterTestAST4_2:test0442()
46507=ASTConverterTestAST4_2:test0551()
46508=ASTConverterTestAST4_2:test0597()
46509=ASTConverterTestAST4_2:test0684()
46510=ASTConverterTestAST4_2:test0499()
46511=ASTConverterTestAST4_2:test0718()
46512=ASTConverterTestAST4_2:test0453()
46513=ASTConverterTestAST4_2:test0564()
46514=ASTConverterTestAST4_2:test0609()
46515=ASTConverterTestAST4_2:test0420()
46516=ASTConverterTestAST4_2:test0466()
46517=ASTConverterTestAST4_2:test0503e()
46518=ASTConverterTestAST4_2:test0707()
46519=ASTConverterTestAST4_2:test0673()
46520=ASTConverterTestAST4_2:test0575()
46521=ASTConverterTestAST4_2:test0538h()
46522=ASTConverterTestAST4_2:test0431()
46523=ASTConverterTestAST4_2:test0477()
46524=ASTConverterTestAST4_2:test0502d()
46525=ASTConverterTestAST4_2:test0662()
46526=ASTConverterTestAST4_2:test0542()
46527=ASTConverterTestAST4_2:test0588()
46528=ASTConverterTestAST4_2:test0444()
46529=ASTConverterTestAST4_2:test0651()
46530=ASTConverterTestAST4_2:test0697()
46531=ASTConverterTestAST4_2:test0553()
46532=ASTConverterTestAST4_2:test0599()
46533=ASTConverterTestAST4_2:test0455()
46534=ASTConverterTestAST4_2:test0686()
46535=ASTConverterTestAST4_2:test0520()
46536=ASTConverterTestAST4_2:test0566()
46537=ASTConverterTestAST4_2:test0468()
46538=ASTConverterTestAST4_2:test0675()
46539=ASTConverterTestAST4_2:test0422()
46540=ASTConverterTestAST4_2:test0709()
46541=ASTConverterTestAST4_2:test0531()
46542=ASTConverterTestAST4_2:_test0679()
46543=ASTConverterTestAST4_2:test0479()
46544=ASTConverterTestAST4_2:test0664()
46545=ASTConverterTestAST4_2:test0433()
46546=ASTConverterTestAST4_2:test0502j()
46547=ASTConverterTestAST4_2:test0544()
46548=ASTConverterTestAST4_2:test0446()
46549=ASTConverterTestAST4_2:test0653()
46550=ASTConverterTestAST4_2:test0699()
46551=ASTConverterTestAST4_2:test0555()
46552=ASTConverterTestAST4_2:test0457()
46553=ASTConverterTestAST4_2:test0642()
46554=ASTConverterTestAST4_2:test0688()
46555=ASTConverterTestAST4_2:test0411()
46556=ASTConverterTestAST4_2:test0522()
46557=ASTConverterTestAST4_2:test0568()
46558=ASTConverterTestAST4_2:ASTConverterTestAST4_2(String)
46559=ASTConverterTestAST4_2:test0459()
46560=ASTConverterTestAST4_2:test0424()
46561=ASTConverterTestAST4_2:test0677()
46562=ASTConverterTestAST4_2:test0631()
46563=ASTConverterTestAST4_2:test0503i()
46564=ASTConverterTestAST4_2:test0533()
46565=ASTConverterTestAST4_2:test0579()
46566=ASTConverterTestAST4_2:test0435()
46567=ASTConverterTestAST4_2:test0666()
46568=ASTConverterTestAST4_2:test0620()
46569=ASTConverterTestAST4_2:test0502h()
46570=ILocalVariableTypeTableAttribute:getLocalVariableTypeTable()
46571=ILocalVariableTypeTableAttribute:getLocalVariableTypeTableLength()
46572=XMLConverter:convertTypeMirror(TypeMirror, Node)
46573=XMLConverter:xmlToCutAndPasteString(Document, int, boolean)
46574=XMLConverter:convertSuperclass(TypeElement, Node)
46575=XMLConverter:convertAnnotationMirror(AnnotationMirror, Node)
46576=XMLConverter:convertInterfaces(TypeElement, Node)
46577=XMLConverter:xmlToString(Document)
46578=XMLConverter:visitPackage(PackageElement, Node)
46579=XMLConverter:convertAnnotationMirrors(javax.lang.model.element.Element, Node)
46580=XMLConverter:visitType(TypeElement, Node)
46581=XMLConverter:visitExecutable(ExecutableElement, Node)
46582=XMLConverter:convertModel(Iterable<? extends javax.lang.model.element.Element>)
46583=XMLConverter:XMLConverter(Document)
46584=XMLConverter:visitVariable(VariableElement, Node)
46585=XMLConverter:visitTypeParameter(TypeParameterElement, Node)
46586=JavadocCompletionContextTests:test0053()
46587=JavadocCompletionContextTests:test0042()
46588=JavadocCompletionContextTests:test0031()
46589=JavadocCompletionContextTests:test0020()
46590=JavadocCompletionContextTests:test0051()
46591=JavadocCompletionContextTests:test0040()
46592=JavadocCompletionContextTests:test0011()
46593=JavadocCompletionContextTests:setUpSuite()
46594=JavadocCompletionContextTests:test0046()
46595=JavadocCompletionContextTests:test0035()
46596=JavadocCompletionContextTests:test0024()
46597=JavadocCompletionContextTests:test0055()
46598=JavadocCompletionContextTests:test0044()
46599=JavadocCompletionContextTests:test0033()
46600=JavadocCompletionContextTests:test0022()
46601=JavadocCompletionContextTests:test0015()
46602=JavadocCompletionContextTests:test0004()
46603=JavadocCompletionContextTests:test0039()
46604=JavadocCompletionContextTests:test0028()
46605=JavadocCompletionContextTests:test0013()
46606=JavadocCompletionContextTests:test0002()
46607=JavadocCompletionContextTests:test0048()
46608=JavadocCompletionContextTests:test0037()
46609=JavadocCompletionContextTests:test0026()
46610=JavadocCompletionContextTests:test0019()
46611=JavadocCompletionContextTests:test0008()
46612=JavadocCompletionContextTests:test0050()
46613=JavadocCompletionContextTests:test0017()
46614=JavadocCompletionContextTests:test0006()
46615=JavadocCompletionContextTests:JavadocCompletionContextTests(String)
46616=JavadocCompletionContextTests:test0030()
46617=JavadocCompletionContextTests:test0054()
46618=JavadocCompletionContextTests:test0043()
46619=JavadocCompletionContextTests:test0052()
46620=JavadocCompletionContextTests:test0041()
46621=JavadocCompletionContextTests:test0034()
46622=JavadocCompletionContextTests:test0023()
46623=JavadocCompletionContextTests:test0012()
46624=JavadocCompletionContextTests:test0001()
46625=JavadocCompletionContextTests:test0047()
46626=JavadocCompletionContextTests:test0032()
46627=JavadocCompletionContextTests:test0021()
46628=JavadocCompletionContextTests:test0010()
46629=JavadocCompletionContextTests:test0056()
46630=JavadocCompletionContextTests:test0045()
46631=JavadocCompletionContextTests:test0038()
46632=JavadocCompletionContextTests:test0027()
46633=JavadocCompletionContextTests:test0016()
46634=JavadocCompletionContextTests:test0005()
46635=JavadocCompletionContextTests:test0036()
46636=JavadocCompletionContextTests:test0025()
46637=JavadocCompletionContextTests:test0014()
46638=JavadocCompletionContextTests:test0049()
46639=JavadocCompletionContextTests:test0003()
46640=JavadocCompletionContextTests:test0009()
46641=JavadocCompletionContextTests:suite()
46642=JavadocCompletionContextTests:test0029()
46643=JavadocCompletionContextTests:test0018()
46644=JavadocCompletionContextTests:test0007()
46645=InternalHexFloatTest:suite()
46646=InternalHexFloatTest:test001()
46647=InternalHexFloatTest:test007()
46648=InternalHexFloatTest:test005()
46649=InternalHexFloatTest:test003()
46650=InternalHexFloatTest:test002()
46651=InternalHexFloatTest:FloatTest:FloatTest(String, int)
46652=InternalHexFloatTest:DoubleTest:DoubleTest(String, long)
46653=InternalHexFloatTest:test006()
46654=InternalHexFloatTest:InternalHexFloatTest(String)
46655=InternalHexFloatTest:test004()
46656=InternalHexFloatTest:testClass()
46657=Example:foo()
46658=Test:main(String[])
46659=SourceType:toString()
46660=SourceType:getModifiers()
46661=SourceType:isClass()
46662=SourceType:getQualifiedName()
46663=SourceType:setImports(SourceImport[])
46664=SourceType:getImports()
46665=SourceType:getNameSourceStart()
46666=SourceType:getFileName()
46667=SourceType:getNameSourceEnd()
46668=SourceType:setPackage(SourcePackage)
46669=SourceType:isInterface()
46670=SourceType:addMemberType(SourceType)
46671=SourceType:getActualName()
46672=SourceType:addMethod(SourceMethod)
46673=SourceType:getSuperclassName()
46674=SourceType:displayModifiers()
46675=SourceType:SourceType(char[], int, int, char[], int, int, char[], char[][], char[])
46676=SourceType:getName()
46677=SourceType:toString(int)
46678=SourceType:getDeclarationSourceStart()
46679=SourceType:setDeclarationSourceEnd(int)
46680=SourceType:getInterfaceNames()
46681=SourceType:getDeclarationSourceEnd()
46682=SourceType:addField(SourceField)
46683=SourceType:getMethods()
46684=SourceType:isBinaryType()
46685=SourceType:tabString(int)
46686=SourceType:getMemberTypes()
46687=SourceType:setDefaultConstructor(String)
46688=SourceType:getFields()
46689=SourceType:setSuperinterfaces(char[][])
46690=SourceType:getPackageName()
46691=SourceType:setSuperclass(char[])
46692=SourceType:getEnclosingTypeName()
46693=NoOpOutputStream:write(int)
46694=NoOpOutputStream:write(byte[], int, int)
46695=NoOpOutputStream:write(byte[])
46696=NoOpOutputStream:NoOpOutputStream()
46697=InnerTypeCompletionTest:testLocalTypeSecondMethod()
46698=InnerTypeCompletionTest:testAnonymousNoStatementBefore()
46699=InnerTypeCompletionTest:testLocalTypeOneFieldBefore()
46700=InnerTypeCompletionTest:InnerTypeCompletionTest(String)
46701=InnerTypeCompletionTest:testAnonymousSecondMethod()
46702=InnerTypeCompletionTest:testAnonymousOneStatementBefore()
46703=InnerTypeCompletionTest:suite()
46704=InnerTypeCompletionTest:testLocalTypeOneStatementBefore()
46705=InnerTypeCompletionTest:testAnonymousFirstMethod()
46706=InnerTypeCompletionTest:testAnonymousOneFieldBefore()
46707=InnerTypeCompletionTest:testLocalTypeNoStatementBefore()
46708=InnerTypeCompletionTest:testLocalTypeFirstMethod()
46709=ASTRecoveryPropagator:endVisit(SingleMemberAnnotation)
46710=ASTRecoveryPropagator:flagNodesWithInsertedTokensAtEnd(ASTNode)
46711=ASTRecoveryPropagator:endVisitNode(ASTNode)
46712=ASTRecoveryPropagator:endVisit(ForStatement)
46713=ASTRecoveryPropagator:endVisit(NormalAnnotation)
46714=ASTRecoveryPropagator:visitNode(ASTNode)
46715=ASTRecoveryPropagator:flagNodeWithInsertedTokens()
46716=ASTRecoveryPropagator:endVisit(ExpressionStatement)
46717=ASTRecoveryPropagator:flagNodesWithInsertedTokensInside(ASTNode)
46718=ASTRecoveryPropagator:ASTRecoveryPropagator(CategorizedProblem[], RecoveryScannerData)
46719=ASTRecoveryPropagator:endVisit(VariableDeclarationStatement)
46720=ASTRecoveryPropagator:endVisit(Block)
46721=ASTRecoveryPropagator:visit(Block)
46722=ASTRecoveryPropagator:markIncludedProblems(int, int)
46723=AdditionalTypeCollection:AdditionalTypeCollection(char[][], char[][][], char[][], char[][])
46724=A:foo()
46725=Test:test()
46726=X05:foo(Object)
46727=IConstantValueAttribute:getConstantValue()
46728=IConstantValueAttribute:getConstantValueIndex()
46729=JavadocTest_1_4:testBug119857_Fields()
46730=JavadocTest_1_4:test009()
46731=JavadocTest_1_4:testBug101283g()
46732=JavadocTest_1_4:testBug119857_Public01()
46733=JavadocTest_1_4:testBug83127h()
46734=JavadocTest_1_4:test007()
46735=JavadocTest_1_4:test018()
46736=JavadocTest_1_4:test029()
46737=JavadocTest_1_4:testBug80257()
46738=JavadocTest_1_4:testBug96237_Public07()
46739=JavadocTest_1_4:test005()
46740=JavadocTest_1_4:testBug119857_Methods()
46741=JavadocTest_1_4:test016()
46742=JavadocTest_1_4:test027()
46743=JavadocTest_1_4:suite()
46744=JavadocTest_1_4:testBug119857_Private01()
46745=JavadocTest_1_4:test038()
46746=JavadocTest_1_4:test003()
46747=JavadocTest_1_4:setUp()
46748=JavadocTest_1_4:test014()
46749=JavadocTest_1_4:test025()
46750=JavadocTest_1_4:testBug112346()
46751=JavadocTest_1_4:test013()
46752=JavadocTest_1_4:testBug86769()
46753=JavadocTest_1_4:testBug145007()
46754=JavadocTest_1_4:test024()
46755=JavadocTest_1_4:test035()
46756=JavadocTest_1_4:testBug96237_Public04()
46757=JavadocTest_1_4:testBug119857_Private02()
46758=JavadocTest_1_4:testBug96237_Private01()
46759=JavadocTest_1_4:test011()
46760=JavadocTest_1_4:test022()
46761=JavadocTest_1_4:testBug101283b()
46762=JavadocTest_1_4:test033()
46763=JavadocTest_1_4:testBug96237_Public06()
46764=JavadocTest_1_4:getCompilerOptions()
46765=JavadocTest_1_4:testBug96237_Private03()
46766=JavadocTest_1_4:testBug95521()
46767=JavadocTest_1_4:testBug83127f()
46768=JavadocTest_1_4:testBug101283d()
46769=JavadocTest_1_4:test020()
46770=JavadocTest_1_4:testBug82514()
46771=JavadocTest_1_4:test031()
46772=JavadocTest_1_4:testClass()
46773=JavadocTest_1_4:testBug96237_Private05()
46774=JavadocTest_1_4:testBug83127d()
46775=JavadocTest_1_4:testBug83393b()
46776=JavadocTest_1_4:testBug119857_Public02()
46777=JavadocTest_1_4:testBug96237_Public02()
46778=JavadocTest_1_4:testBug119857_Types()
46779=JavadocTest_1_4:JavadocTest_1_4(String)
46780=JavadocTest_1_4:test040()
46781=JavadocTest_1_4:testBug83127b()
46782=JavadocTest_1_4:testBug96237_Private07()
46783=JavadocTest_1_4:testBug119857()
46784=JavadocTest_1_4:test008()
46785=JavadocTest_1_4:test019()
46786=JavadocTest_1_4:testBug83127g()
46787=JavadocTest_1_4:test006()
46788=JavadocTest_1_4:test017()
46789=JavadocTest_1_4:test028()
46790=JavadocTest_1_4:testBug96237_Public08()
46791=JavadocTest_1_4:testBug95286_Default()
46792=JavadocTest_1_4:test039()
46793=JavadocTest_1_4:test004()
46794=JavadocTest_1_4:test015()
46795=JavadocTest_1_4:test026()
46796=JavadocTest_1_4:test037()
46797=JavadocTest_1_4:test036()
46798=JavadocTest_1_4:testBug96237_Public03()
46799=JavadocTest_1_4:testBug96237_Private02()
46800=JavadocTest_1_4:testBug83127a()
46801=JavadocTest_1_4:test012()
46802=JavadocTest_1_4:test023()
46803=JavadocTest_1_4:test034()
46804=JavadocTest_1_4:testBug96237_Public05()
46805=JavadocTest_1_4:testBug96237_Private04()
46806=JavadocTest_1_4:test010()
46807=JavadocTest_1_4:testBug101283a()
46808=JavadocTest_1_4:test021()
46809=JavadocTest_1_4:test032()
46810=JavadocTest_1_4:testBug95286_Private()
46811=JavadocTest_1_4:testBug96237_Private06()
46812=JavadocTest_1_4:testBug95521b()
46813=JavadocTest_1_4:testBug83127e()
46814=JavadocTest_1_4:testBug83393a()
46815=JavadocTest_1_4:testBug101283c()
46816=JavadocTest_1_4:test030()
46817=JavadocTest_1_4:testBug96237_Public01()
46818=JavadocTest_1_4:testBug83804()
46819=JavadocTest_1_4:testBug96237_Private08()
46820=JavadocTest_1_4:testBug83127c()
46821=JavadocTest_1_4:testBug101283e()
46822=JavadocTest_1_4:testBug119857_Public03()
46823=RunFormatterTests:getTestClasses()
46824=RunFormatterTests:RunFormatterTests(String)
46825=RunFormatterTests:suite()
46826=FullSourceWorkspaceModelTests:testProjectFindUnknownType()
46827=FullSourceWorkspaceModelTests:testNameLookupFindUnknownType()
46828=FullSourceWorkspaceModelTests:FullSourceWorkspaceModelTests(String)
46829=FullSourceWorkspaceModelTests:testPerfBatchCreatePackageAndReconcile()
46830=FullSourceWorkspaceModelTests:testProjectFindUnknownTypeAfterSetClasspath()
46831=FullSourceWorkspaceModelTests:testPerfReconcileBigFileWithSyntaxError()
46832=FullSourceWorkspaceModelTests:testSeekPackageFragments()
46833=FullSourceWorkspaceModelTests:resetCounters()
46834=FullSourceWorkspaceModelTests:setUpBigProject()
46835=FullSourceWorkspaceModelTests:tearDown()
46836=FullSourceWorkspaceModelTests:createJavaProject(String)
46837=FullSourceWorkspaceModelTests:searchAllTypeNames(IJavaSearchScope)
46838=FullSourceWorkspaceModelTests:assertElementsEqual(String, String, IJavaElement[])
46839=FullSourceWorkspaceModelTests:suite()
46840=FullSourceWorkspaceModelTests:testInitJDTPlugin()
46841=FullSourceWorkspaceModelTests:testCreateJavaElement()
46842=FullSourceWorkspaceModelTests:getNameLookup(JavaProject)
46843=FullSourceWorkspaceModelTests:testRefreshExternalArchives()
46844=FullSourceWorkspaceModelTests:testProjectFindKnownType()
46845=FullSourceWorkspaceModelTests:testResolveClasspath()
46846=FullSourceWorkspaceModelTests:testPerfReconcile()
46847=FullSourceWorkspaceModelTests:getExternalPath()
46848=FullSourceWorkspaceModelTests:testNameLookupFindKnownSecondaryType()
46849=FullSourceWorkspaceModelTests:testPerfDeleteLotsOfMembersAndReconcile()
46850=FullSourceWorkspaceModelTests:testReconcileDuplicates()
46851=FullSourceWorkspaceModelTests:testProjectFindKnownSecondaryType()
46852=FullSourceWorkspaceModelTests:testProjectFindKnownMemberType()
46853=FullSourceWorkspaceModelTests:testNameLookupFindKnownType()
46854=FullSourceWorkspaceModelTests:testFindType()
46855=FullSourceWorkspaceModelTests:touchFiles(File[])
46856=FullSourceWorkspaceModelTests:setUpBigJars()
46857=FullSourceWorkspaceModelTests:testPopulateTwoBigJars()
46858=FullSourceWorkspaceModelTests:testGetSourceBigJarNoAttachment()
46859=FullSourceWorkspaceModelTests:assertElementsEqual(String, String, IJavaElement[], boolean)
46860=FullSourceWorkspaceModelTests:testGetAllPackageFragmentRoots()
46861=FullSourceWorkspaceModelTests:assertElementEquals(String, String, IJavaElement)
46862=FullSourceWorkspaceModelTests:setUp()
46863=FullSourceWorkspaceModelTests:testCloseProjects()
46864=FullSourceWorkspaceModelTests:JavaSearchResultCollector:acceptSearchMatch(SearchMatch)
46865=FullSourceWorkspaceModelTests:testClass()
46866=FullSourceWorkspaceModelTests:testPerfSearchAllTypeNamesAndReconcile()
46867=FullSourceWorkspaceModelTests:testReopenSingleProject()
46868=ParameterizedQualifiedTypeReference:traverse(ASTVisitor, BlockScope)
46869=ParameterizedQualifiedTypeReference:getParameterizedTypeName()
46870=ParameterizedQualifiedTypeReference:resolveType(ClassScope)
46871=ParameterizedQualifiedTypeReference:internalResolveType(Scope)
46872=ParameterizedQualifiedTypeReference:checkBounds(ReferenceBinding, Scope, int)
46873=ParameterizedQualifiedTypeReference:printExpression(int, StringBuffer)
46874=ParameterizedQualifiedTypeReference:getTypeBinding(Scope)
46875=ParameterizedQualifiedTypeReference:ParameterizedQualifiedTypeReference(char[][], TypeReference[][], int, long[])
46876=ParameterizedQualifiedTypeReference:traverse(ASTVisitor, ClassScope)
46877=ParameterizedQualifiedTypeReference:copyDims(int)
46878=ParameterizedQualifiedTypeReference:checkBounds(Scope)
46879=ParameterizedQualifiedTypeReference:resolveType(BlockScope)
46880=ParameterizedType:memSize()
46881=ParameterizedType:getNodeType0()
46882=ParameterizedType:internalStructuralPropertiesForType(int)
46883=ParameterizedType:subtreeMatch0(ASTMatcher, Object)
46884=ParameterizedType:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
46885=ParameterizedType:ParameterizedType(AST)
46886=ParameterizedType:propertyDescriptors(int)
46887=ParameterizedType:getType()
46888=ParameterizedType:setType(Type)
46889=ParameterizedType:accept0(ASTVisitor)
46890=ParameterizedType:treeSize()
46891=ParameterizedType:typeArguments()
46892=ParameterizedType:internalGetChildListProperty(ChildListPropertyDescriptor)
46893=ParameterizedType:clone0(AST)
46894=X04b:foo()
46895=A:foo()
46896=A:A()
46897=A:foo(int)
46898=ConflictIdentifier:extractOnDemandContainerNames(Collection<ImportName>, boolean)
46899=ConflictIdentifier:Conflicts:toString()
46900=ConflictIdentifier:ConflictIdentifier(OnDemandComputer, TypeConflictingSimpleNameFinder, StaticConflictingSimpleNameFinder, Set<String>)
46901=ConflictIdentifier:identifyConflicts(Set<ImportName>, Set<ImportName>, Set<String>, Set<String>, IProgressMonitor)
46902=ConflictIdentifier:extractContainerNames(Collection<OnDemandReduction>, boolean)
46903=ConflictIdentifier:Conflicts:Conflicts(Set<String>, Set<String>)
46904=ConflictIdentifier:findConflictingSimpleNames(ConflictingSimpleNameFinder, Set<ImportName>, boolean, Set<String>, IProgressMonitor)
46905=X17b:findPackageFragmentRoots(String)
46906=RunCompilerTests:RunCompilerTests(String)
46907=RunCompilerTests:getAllTestClasses()
46908=RunCompilerTests:suite()
46909=AddJarFileToIndex:execute(IProgressMonitor)
46910=AddJarFileToIndex:getJobFamily()
46911=AddJarFileToIndex:hasPreBuiltIndex()
46912=AddJarFileToIndex:hashCode()
46913=AddJarFileToIndex:updatedIndexState()
46914=AddJarFileToIndex:isValidPackageNameForClass(String)
46915=AddJarFileToIndex:AddJarFileToIndex(IPath, IndexLocation, IndexManager)
46916=AddJarFileToIndex:toString()
46917=AddJarFileToIndex:equals(Object)
46918=AddJarFileToIndex:AddJarFileToIndex(IFile, IndexLocation, IndexManager, boolean)
46919=AddJarFileToIndex:AddJarFileToIndex(IFile, IndexLocation, IndexManager)
46920=AddJarFileToIndex:isIdentifier()
46921=AddJarFileToIndex:AddJarFileToIndex(IPath, IndexLocation, IndexManager, boolean)
46922=A:foo(Object)
46923=Test:foo()
46924=NumericTest:NumericTest(String)
46925=NumericTest:suite()
46926=NumericTest:test004()
46927=NumericTest:testClass()
46928=NumericTest:test002()
46929=NumericTest:test001()
46930=NumericTest:test005()
46931=NumericTest:test003()
46932=AssistOptions:AssistOptions()
46933=AssistOptions:AssistOptions(Map)
46934=Comment:getAlternateRoot()
46935=Comment:isBlockComment()
46936=Comment:memSize()
46937=Comment:isLineComment()
46938=Comment:isDocComment()
46939=Comment:Comment(AST)
46940=Comment:setAlternateRoot(ASTNode)
46941=FormatterOldBugsGistTests:testCode()
46942=FormatterOldBugsGistTests:testComments()
46943=FormatterOldBugsGistTests:FormatterOldBugsGistTests(String)
46944=FormatterOldBugsGistTests:format(String, String, String, Map)
46945=FormatterOldBugsGistTests:suite()
46946=A:foo()
46947=ASTTest:assignSourceRanges(ASTNode)
46948=ASTTest:CheckPositionsMatcher:match(TryStatement, Object)
46949=ASTTest:testSuperConstructorInvocation()
46950=ASTTest:testStringLiteral()
46951=ASTTest:CheckPositionsMatcher:match(MethodRef, Object)
46952=ASTTest:testQualifiedName()
46953=ASTTest:CheckPositionsMatcher:match(Javadoc, Object)
46954=ASTTest:testDoStatement()
46955=ASTTest:testInfixExpression()
46956=ASTTest:CheckPositionsMatcher:match(NullLiteral, Object)
46957=ASTTest:CheckPositionsMatcher:match(ThrowStatement, Object)
46958=ASTTest:testMethodRefParameter()
46959=ASTTest:genericPropertyTest(ASTNode, Property)
46960=ASTTest:CheckPositionsMatcher:match(ParameterizedType, Object)
46961=ASTTest:testVariableDeclarationFragment()
46962=ASTTest:testModifiers()
46963=ASTTest:allModifiers()
46964=ASTTest:Property:counterExamples(AST)
46965=ASTTest:CheckPositionsMatcher:match(CastExpression, Object)
46966=ASTTest:CheckPositionsMatcher:match(ConstructorInvocation, Object)
46967=ASTTest:testWhileStatement()
46968=ASTTest:testSimpleType()
46969=ASTTest:testMemberValuePair()
46970=ASTTest:CheckPositionsMatcher:match(InstanceofExpression, Object)
46971=ASTTest:CheckPositionsMatcher:match(ContinueStatement, Object)
46972=ASTTest:CheckPositionsMatcher:match(ParenthesizedExpression, Object)
46973=ASTTest:CheckPositionsMatcher:match(AnonymousClassDeclaration, Object)
46974=ASTTest:CheckPositionsMatcher:match(WildcardType, Object)
46975=ASTTest:testAnonymousClassDeclaration()
46976=ASTTest:CheckPositionsMatcher:match(PrimitiveType, Object)
46977=ASTTest:CheckPositionsMatcher:match(Initializer, Object)
46978=ASTTest:CheckPositionsMatcher:match(PostfixExpression, Object)
46979=ASTTest:CheckPositionsMatcher:match(TypeLiteral, Object)
46980=ASTTest:testPrefixExpression()
46981=ASTTest:testAnnotationTypeMemberDeclaration()
46982=ASTTest:getArrayComponentType(ArrayType)
46983=ASTTest:testTryStatement()
46984=ASTTest:CheckPositionsMatcher:match(LabeledStatement, Object)
46985=ASTTest:CheckPositionsMatcher:match(WhileStatement, Object)
46986=ASTTest:CheckPositionsMatcher:match(MethodRefParameter, Object)
46987=ASTTest:CheckPositionsMatcher:match(FieldDeclaration, Object)
46988=ASTTest:testThrowStatement()
46989=ASTTest:CheckPositionsMatcher:match(MarkerAnnotation, Object)
46990=ASTTest:CheckPositionsMatcher:match(VariableDeclarationFragment, Object)
46991=ASTTest:testVariableDeclarationExpression()
46992=ASTTest:CheckPositionsMatcher:match(ArrayAccess, Object)
46993=ASTTest:CheckPositionsMatcher:match(BooleanLiteral, Object)
46994=ASTTest:testPrimitiveType()
46995=ASTTest:testSuperFieldAccess()
46996=ASTTest:CheckPositionsMatcher:match(ClassInstanceCreation, Object)
46997=ASTTest:testNullResolve()
46998=ASTTest:testNullLiteral()
46999=ASTTest:testContinueStatement()
47000=ASTTest:testEnumDeclaration()
47001=ASTTest:testTypeParameter()
47002=ASTTest:CheckPositionsMatcher:match(ArrayType, Object)
47003=ASTTest:CheckPositionsMatcher:match(CharacterLiteral, Object)
47004=ASTTest:CheckPositionsMatcher:match(BlockComment, Object)
47005=ASTTest:testAnnotationTypeDeclaration()
47006=ASTTest:CheckPositionsMatcher:match(TypeDeclarationStatement, Object)
47007=ASTTest:testMethodInvocation()
47008=ASTTest:testEnumConstantDeclaration()
47009=ASTTest:Property:toString()
47010=ASTTest:Property:sample(AST, boolean)
47011=ASTTest:testCharacterLiteral()
47012=ASTTest:testMemberRef()
47013=ASTTest:testPackageDeclaration()
47014=ASTTest:CheckPositionsMatcher:match(StringLiteral, Object)
47015=ASTTest:CheckPositionsMatcher:match(ForStatement, Object)
47016=ASTTest:testConditionalExpression()
47017=ASTTest:CheckPositionsMatcher:match(SingleVariableDeclaration, Object)
47018=ASTTest:setUp()
47019=ASTTest:CheckPositionsMatcher:match(ThisExpression, Object)
47020=ASTTest:getName()
47021=ASTTest:testWildcardType()
47022=ASTTest:CheckPositionsMatcher:match(EmptyStatement, Object)
47023=ASTTest:testReturnStatement()
47024=ASTTest:setExtraDimensions(VariableDeclarationFragment, int)
47025=ASTTest:CheckPositionsMatcher:match(NumberLiteral, Object)
47026=ASTTest:tClientProperties(ASTNode)
47027=ASTTest:testEnhancedForStatement()
47028=ASTTest:CheckPositionsMatcher:match(PackageDeclaration, Object)
47029=ASTTest:CheckPositionsMatcher:CheckPositionsMatcher()
47030=ASTTest:testSwitchStatement()
47031=ASTTest:testArrayType()
47032=ASTTest:Property:set(ASTNode)
47033=ASTTest:CheckPositionsMatcher:match(InfixExpression, Object)
47034=ASTTest:testAST()
47035=ASTTest:testSingleMemberAnnotation()
47036=ASTTest:CheckPositionsMatcher:match(MethodInvocation, Object)
47037=ASTTest:CheckPositionsMatcher:match(LineComment, Object)
47038=ASTTest:CheckPositionsMatcher:match(SimpleType, Object)
47039=ASTTest:suite()
47040=ASTTest:CheckPositionsMatcher:match(ImportDeclaration, Object)
47041=ASTTest:testArrayInitializer()
47042=ASTTest:CheckPositionsMatcher:match(EnhancedForStatement, Object)
47043=ASTTest:CheckPositionsMatcher:match(ReturnStatement, Object)
47044=ASTTest:testCastExpression()
47045=ASTTest:CheckPositionsMatcher:checkPositions(Object, Object)
47046=ASTTest:testAssertStatement()
47047=ASTTest:testThisExpression()
47048=ASTTest:Property:get()
47049=ASTTest:CheckPositionsMatcher:match(CatchClause, Object)
47050=ASTTest:CheckPositionsMatcher:match(VariableDeclarationStatement, Object)
47051=ASTTest:CheckPositionsMatcher:match(MethodDeclaration, Object)
47052=ASTTest:CheckPositionsMatcher:match(TextElement, Object)
47053=ASTTest:tAnnotationName(Annotation)
47054=ASTTest:testConstructorInvocation()
47055=ASTTest:CheckPositionsMatcher:match(TypeParameter, Object)
47056=ASTTest:tAlternateRoot(Comment)
47057=ASTTest:tearDown()
47058=ASTTest:testSwitchCase()
47059=ASTTest:CheckPositionsMatcher:match(IfStatement, Object)
47060=ASTTest:CheckPositionsMatcher:match(NormalAnnotation, Object)
47061=ASTTest:tModifiers(BodyDeclaration)
47062=ASTTest:testWellKnownBindings()
47063=ASTTest:testPostfixExpression()
47064=ASTTest:testEmptyStatement()
47065=ASTTest:CheckPositionsMatcher:match(ArrayInitializer, Object)
47066=ASTTest:testBreakStatement()
47067=ASTTest:testBlockComment()
47068=ASTTest:testTypeLiteral()
47069=ASTTest:CheckPositionsMatcher:match(AssertStatement, Object)
47070=ASTTest:testBooleanLiteral()
47071=ASTTest:testIfStatement()
47072=ASTTest:CheckPositionsMatcher:match(SingleMemberAnnotation, Object)
47073=ASTTest:testArrayCreation()
47074=ASTTest:CheckPositionsMatcher:match(QualifiedName, Object)
47075=ASTTest:ASTTest(String, int)
47076=ASTTest:Property:Property(String, boolean, Class)
47077=ASTTest:testVariableDeclarationStatement()
47078=ASTTest:testTypeDeclarationStatement()
47079=ASTTest:CheckPositionsMatcher:match(SuperFieldAccess, Object)
47080=ASTTest:testStringLiteralUnicode()
47081=ASTTest:CheckPositionsMatcher:match(SwitchCase, Object)
47082=ASTTest:CheckPositionsMatcher:match(MemberValuePair, Object)
47083=ASTTest:testCatchClause()
47084=ASTTest:CheckPositionsMatcher:match(SimpleName, Object)
47085=ASTTest:testSuperMethodInvocation()
47086=ASTTest:testNameFactories()
47087=ASTTest:Property:wrap()
47088=ASTTest:testTagElement()
47089=ASTTest:CheckPositionsMatcher:match(SynchronizedStatement, Object)
47090=ASTTest:testSingleVariableDeclaration()
47091=ASTTest:testNodeTypeConstants()
47092=ASTTest:testTextElement()
47093=ASTTest:testLineComment()
47094=ASTTest:testLabeledStatement()
47095=ASTTest:CheckPositionsMatcher:match(SuperConstructorInvocation, Object)
47096=ASTTest:testTypeDeclaration()
47097=ASTTest:testMethodDeclaration()
47098=ASTTest:CheckPositionsMatcher:match(Assignment, Object)
47099=ASTTest:Property:unwrap()
47100=ASTTest:testForStatement()
47101=ASTTest:testCompilationUnitLineNumberTable()
47102=ASTTest:testClassInstanceCreation()
47103=ASTTest:testSimpleName()
47104=ASTTest:testSubtreeBytes()
47105=ASTTest:Property:isCompulsory()
47106=ASTTest:CheckPositionsMatcher:match(MemberRef, Object)
47107=ASTTest:CheckPositionsMatcher:match(ArrayCreation, Object)
47108=ASTTest:CheckPositionsMatcher:match(SuperMethodInvocation, Object)
47109=ASTTest:setArrayComponentType(ArrayType, Type)
47110=ASTTest:CheckPositionsMatcher:match(TypeDeclaration, Object)
47111=ASTTest:CheckPositionsMatcher:match(PrefixExpression, Object)
47112=ASTTest:tJavadocComment(BodyDeclaration)
47113=ASTTest:CheckPositionsMatcher:match(SwitchStatement, Object)
47114=ASTTest:CheckPositionsMatcher:match(EnumConstantDeclaration, Object)
47115=ASTTest:CheckPositionsMatcher:match(ExpressionStatement, Object)
47116=ASTTest:testArrayAccess()
47117=ASTTest:testParenthesizedExpression()
47118=ASTTest:testExpressionStatement()
47119=ASTTest:testMethodRef()
47120=ASTTest:testQualifiedType()
47121=ASTTest:testBlock()
47122=ASTTest:CheckPositionsMatcher:match(CompilationUnit, Object)
47123=ASTTest:testJavadoc()
47124=ASTTest:testImportDeclaration()
47125=ASTTest:tLeadingComment(Statement)
47126=ASTTest:CheckPositionsMatcher:match(Block, Object)
47127=ASTTest:testClone()
47128=ASTTest:CheckPositionsMatcher:match(AnnotationTypeMemberDeclaration, Object)
47129=ASTTest:genericPropertyListTest(ASTNode, List, Property)
47130=ASTTest:testSynchronizedStatement()
47131=ASTTest:testParameterizedType()
47132=ASTTest:testInitializer()
47133=ASTTest:CheckPositionsMatcher:match(FieldAccess, Object)
47134=ASTTest:testCompilationUnit()
47135=ASTTest:CheckPositionsMatcher:match(DoStatement, Object)
47136=ASTTest:testFieldDeclaration()
47137=ASTTest:CheckPositionsMatcher:match(BreakStatement, Object)
47138=ASTTest:testFieldAccess()
47139=ASTTest:CheckPositionsMatcher:match(Modifier, Object)
47140=ASTTest:testAssignment()
47141=ASTTest:CheckPositionsMatcher:match(ConditionalExpression, Object)
47142=ASTTest:testNormalAnnotation()
47143=ASTTest:CheckPositionsMatcher:match(VariableDeclarationExpression, Object)
47144=ASTTest:testMarkerAnnotation()
47145=ASTTest:testExampleSnippets()
47146=ASTTest:testNumberLiteral()
47147=ASTTest:testInstanceofExpression()
47148=ASTTest:CheckPositionsMatcher:match(TagElement, Object)
47149=ASTTest:CheckPositionsMatcher:match(AnnotationTypeDeclaration, Object)
47150=ASTTest:CheckPositionsMatcher:match(QualifiedType, Object)
47151=ASTTest:ASTTest(String)
47152=X:bar(int, String)
47153=X:X()
47154=VariableBinding:toString()
47155=VariableBinding:constant()
47156=VariableBinding:isFinal()
47157=VariableBinding:isConstantValue()
47158=VariableBinding:setConstant(Constant)
47159=VariableBinding:isBlankFinal()
47160=VariableBinding:VariableBinding(char[], TypeBinding, int, Constant)
47161=VariableBinding:readableName()
47162=Test:gee(String)
47163=A:A()
47164=NameReferenceCompletionTest:testUnicode()
47165=NameReferenceCompletionTest:test1FVRQQA_2()
47166=NameReferenceCompletionTest:test1G8DE30()
47167=NameReferenceCompletionTest:testQualifiedNameReferenceShrinkNone2()
47168=NameReferenceCompletionTest:testEmptyNameReference()
47169=NameReferenceCompletionTest:testQualifiedNameReferenceShrinkAllButOne2()
47170=NameReferenceCompletionTest:testEmptyNameReferenceInArrayDim()
47171=NameReferenceCompletionTest:testQualifiedNameReferenceShrinkOne2()
47172=NameReferenceCompletionTest:testInvocationFieldInitializer()
47173=NameReferenceCompletionTest:testInIfThenStatement()
47174=NameReferenceCompletionTest:test1FVT66Q_2()
47175=NameReferenceCompletionTest:testQualifiedNameReferenceShrinkAll()
47176=NameReferenceCompletionTest:testMethodInvocationAnonymousInnerClass()
47177=NameReferenceCompletionTest:testEmptyNameReferenceAfterPlus()
47178=NameReferenceCompletionTest:test1FVRQQA_1()
47179=NameReferenceCompletionTest:testQualifiedNameReferenceShrinkOne()
47180=NameReferenceCompletionTest:testEmptyNameReferenceAfterCast()
47181=NameReferenceCompletionTest:suite()
47182=NameReferenceCompletionTest:test1FVT66Q_1()
47183=NameReferenceCompletionTest:NameReferenceCompletionTest(String)
47184=NameReferenceCompletionTest:testQualifiedNameReferenceShrinkNone()
47185=NameReferenceCompletionTest:testQualifiedNameReferenceShrinkAllButOne()
47186=NameReferenceCompletionTest:testInnerClassFieldInitializer()
47187=NameReferenceCompletionTest:test1FTZ849()
47188=NameReferenceCompletionTest:test1FUUP73()
47189=NameReferenceCompletionTest:testEmptyNameReferenceInInnerClass()
47190=X01:foo()
47191=IConstantPool:decodeEntry(int)
47192=IConstantPool:getConstantPoolCount()
47193=IConstantPool:getEntryKind(int)
47194=IProblem:setSourceEnd(int)
47195=IProblem:getOriginatingFileName()
47196=IProblem:getArguments()
47197=IProblem:isWarning()
47198=IProblem:getSourceEnd()
47199=IProblem:setSourceStart(int)
47200=IProblem:getSourceLineNumber()
47201=IProblem:getSourceStart()
47202=IProblem:setSourceLineNumber(int)
47203=IProblem:getID()
47204=IProblem:isError()
47205=IProblem:getMessage()
47206=I:id(int, int)
47207=I:foo(int, int)
47208=J:id(int, int)
47209=J:foo(int, int)
47210=Negative7:method1(int)
47211=Negative7A:method1(int)
47212=PackageFragment:toStringChildren(int, StringBuffer, Object)
47213=PackageFragment:hasChildren()
47214=PackageFragment:getClassFile(String)
47215=PackageFragment:getElementType()
47216=PackageFragment:hasSubpackages()
47217=PackageFragment:buildStructure(OpenableElementInfo, IProgressMonitor, Map, IResource)
47218=PackageFragment:createElementInfo()
47219=PackageFragment:getCompilationUnit(String)
47220=PackageFragment:getHandleFromMemento(String, MementoTokenizer, WorkingCopyOwner)
47221=PackageFragment:delete(boolean, IProgressMonitor)
47222=PackageFragment:internalIsValidPackageName()
47223=PackageFragment:hashCode()
47224=PackageFragment:containsJavaResources()
47225=PackageFragment:equals(Object)
47226=PackageFragment:copy(IJavaElement, IJavaElement, String, boolean, IProgressMonitor)
47227=PackageFragment:getElementName()
47228=PackageFragment:move(IJavaElement, IJavaElement, String, boolean, IProgressMonitor)
47229=PackageFragment:getKind()
47230=PackageFragment:getAttachedJavadoc(IProgressMonitor)
47231=PackageFragment:getPath()
47232=PackageFragment:PackageFragment(PackageFragmentRoot, String[])
47233=PackageFragment:getCompilationUnits(WorkingCopyOwner)
47234=PackageFragment:getCompilationUnits()
47235=PackageFragment:getHandleMementoDelimiter()
47236=PackageFragment:rename(String, boolean, IProgressMonitor)
47237=PackageFragment:getClassFiles()
47238=PackageFragment:getNonJavaResources()
47239=PackageFragment:exists()
47240=PackageFragment:isValidPackageName()
47241=PackageFragment:isDefaultPackage()
47242=PackageFragment:toStringInfo(int, StringBuffer, Object, boolean)
47243=PackageFragment:resource(PackageFragmentRoot)
47244=PackageFragment:getUnderlyingResource()
47245=PackageFragment:createCompilationUnit(String, String, boolean, IProgressMonitor)
47246=PackageFragment:validateExistence(IResource)
47247=ASTRewrite:internalRewriteAST(char[], LineInformation, String, List, Map, ASTNode, RecoveryScannerData)
47248=ASTRewrite:setTargetSourceRangeComputer(TargetSourceRangeComputer)
47249=ASTRewrite:createStringPlaceholder(String, int)
47250=ASTRewrite:ASTRewrite(AST)
47251=ASTRewrite:createCopyTarget(ASTNode)
47252=ASTRewrite:validatePropertyType(StructuralPropertyDescriptor, Object)
47253=ASTRewrite:rewriteAST(IDocument, Map)
47254=ASTRewrite:set(ASTNode, StructuralPropertyDescriptor, Object, TextEditGroup)
47255=ASTRewrite:remove(ASTNode, TextEditGroup)
47256=ASTRewrite:create(AST)
47257=ASTRewrite:setProperty(String, Object)
47258=ASTRewrite:getAST()
47259=ASTRewrite:track(ASTNode)
47260=ASTRewrite:validateIsExistingNode(ASTNode)
47261=ASTRewrite:replace(ASTNode, ASTNode, TextEditGroup)
47262=ASTRewrite:getRewriteEventStore()
47263=ASTRewrite:getListRewrite(ASTNode, ChildListPropertyDescriptor)
47264=ASTRewrite:rewriteAST()
47265=ASTRewrite:getRootNode()
47266=ASTRewrite:createMoveTarget(ASTNode)
47267=ASTRewrite:validateIsListProperty(StructuralPropertyDescriptor)
47268=ASTRewrite:getProperty(String)
47269=ASTRewrite:createTargetNode(ASTNode, boolean)
47270=ASTRewrite:getExtendedSourceRangeComputer()
47271=ASTRewrite:getNodeStore()
47272=ASTRewrite:validateIsCorrectAST(ASTNode)
47273=ASTRewrite:validateIsPropertyOfNode(StructuralPropertyDescriptor, ASTNode)
47274=ASTRewrite:get(ASTNode, StructuralPropertyDescriptor)
47275=ASTRewrite:toString()
47276=ASTRewrite:createGroupNode(ASTNode[])
47277=firstClass:myMethod()
47278=X:setFoo(String, int, int, int)
47279=ParameterizedSingleTypeReference:resolveType(ClassScope)
47280=ParameterizedSingleTypeReference:checkBounds(Scope)
47281=ParameterizedSingleTypeReference:ParameterizedSingleTypeReference(char[], TypeReference[], int, long)
47282=ParameterizedSingleTypeReference:resolveTypeEnclosing(BlockScope, ReferenceBinding)
47283=ParameterizedSingleTypeReference:printExpression(int, StringBuffer)
47284=ParameterizedSingleTypeReference:traverse(ASTVisitor, BlockScope)
47285=ParameterizedSingleTypeReference:getTypeBinding(Scope)
47286=ParameterizedSingleTypeReference:traverse(ASTVisitor, ClassScope)
47287=ParameterizedSingleTypeReference:copyDims(int)
47288=ParameterizedSingleTypeReference:resolveType(BlockScope)
47289=ParameterizedSingleTypeReference:getParameterizedTypeName()
47290=ParameterizedSingleTypeReference:internalResolveType(Scope, ReferenceBinding)
47291=X:foo()
47292=X:X(String)
47293=HashtableOfPackage:HashtableOfPackage()
47294=HashtableOfPackage:HashtableOfPackage(int)
47295=HashtableOfPackage:size()
47296=HashtableOfPackage:get(char[])
47297=HashtableOfPackage:containsKey(char[])
47298=HashtableOfPackage:rehash()
47299=HashtableOfPackage:toString()
47300=HashtableOfPackage:put(char[], PackageBinding)
47301=Util:EncodingErrorCollector:EncodingErrorCollector(FileObject, String)
47302=Util:EncodingErrorCollector:collect(int, int)
47303=Util:getInputStreamAsCharArray(InputStream, int, String)
47304=Util:EncodingError:EncodingError(int, int)
47305=Util:reportEncodingError(EncodingErrorCollector, int, int)
47306=Util:EncodingError:getSource(char[])
47307=Util:EncodingErrorCollector:reportAllEncodingErrors(String)
47308=Util:getCharContents(FileObject, boolean, byte[], String)
47309=A:setBorderType(JComponent, int)
47310=BaseConfigurationBlock:Key:getName()
47311=BaseConfigurationBlock:ControlData:getKey()
47312=BaseConfigurationBlock:getTextModifyListener()
47313=BaseConfigurationBlock:ControlData:getSelection(String)
47314=BaseConfigurationBlock:Key:getStoredValue(IScopeContext, IWorkingCopyManager)
47315=BaseConfigurationBlock:controlChanged(Widget)
47316=BaseConfigurationBlock:ControlData:getValue(boolean)
47317=BaseConfigurationBlock:setValue(Key, String)
47318=BaseConfigurationBlock:getTextControl(Key)
47319=BaseConfigurationBlock:saveSettings()
47320=BaseConfigurationBlock:BaseConfigurationBlock(IStatusChangeListener, IProject, Key[], IWorkbenchPreferenceContainer)
47321=BaseConfigurationBlock:initContents()
47322=BaseConfigurationBlock:ControlData:ControlData(Key, String[])
47323=BaseConfigurationBlock:setComboEnabled(Key, boolean)
47324=BaseConfigurationBlock:createStyleSection(Composite, String, int)
47325=BaseConfigurationBlock:storeSectionExpansionStates(IDialogSettings)
47326=BaseConfigurationBlock:addComboBox(Composite, String, Key, String[], String[], int)
47327=BaseConfigurationBlock:processChanges(IWorkbenchPreferenceContainer)
47328=BaseConfigurationBlock:Key:getNode(IScopeContext, IWorkingCopyManager)
47329=BaseConfigurationBlock:newComboControl(Composite, Key, String[], String[])
47330=BaseConfigurationBlock:addTextField(Composite, String, Key, int, int)
47331=BaseConfigurationBlock:getParentScrolledComposite(Control)
47332=BaseConfigurationBlock:Key:getQualifier()
47333=BaseConfigurationBlock:performApply()
47334=BaseConfigurationBlock:updateModel(DialogField)
47335=BaseConfigurationBlock:addCheckBox(Composite, String, Key, String[], int)
47336=BaseConfigurationBlock:settingsChanged(IScopeContext)
47337=BaseConfigurationBlock:updateText(Text)
47338=BaseConfigurationBlock:selectOption(Key)
47339=BaseConfigurationBlock:textChanged(Text)
47340=BaseConfigurationBlock:getParentExpandableComposite(Control)
47341=BaseConfigurationBlock:getComboBox(Key)
47342=BaseConfigurationBlock:getTokens(String, String)
47343=BaseConfigurationBlock:performOk()
47344=BaseConfigurationBlock:updateControls()
47345=BaseConfigurationBlock:createContents(Composite)
47346=BaseConfigurationBlock:dispose()
47347=BaseConfigurationBlock:updateCombo(Combo)
47348=BaseConfigurationBlock:getValue(Key)
47349=BaseConfigurationBlock:validateSettings(Key, String, String)
47350=BaseConfigurationBlock:performDefaults()
47351=BaseConfigurationBlock:Key:setStoredValue(IScopeContext, String, IWorkingCopyManager)
47352=BaseConfigurationBlock:getCheckBox(Key)
47353=BaseConfigurationBlock:getBooleanValue(Key)
47354=BaseConfigurationBlock:ControlData:getValue(int)
47355=BaseConfigurationBlock:getShell()
47356=BaseConfigurationBlock:settingsUpdated()
47357=BaseConfigurationBlock:expandedStateChanged(ExpandableComposite)
47358=BaseConfigurationBlock:cacheOriginalValues()
47359=BaseConfigurationBlock:hasProjectSpecificOptionsNoCache(IProject)
47360=BaseConfigurationBlock:setValue(Key, boolean)
47361=BaseConfigurationBlock:makeScrollableCompositeAware(Control)
47362=BaseConfigurationBlock:Key:Key(String, String)
47363=BaseConfigurationBlock:selectOption(String, String)
47364=BaseConfigurationBlock:restoreSectionExpansionStates(IDialogSettings)
47365=BaseConfigurationBlock:createPreferenceContent(Composite)
47366=BaseConfigurationBlock:addInversedComboBox(Composite, String, Key, String[], String[], int)
47367=BaseConfigurationBlock:getPreferenceContainer()
47368=BaseConfigurationBlock:useProjectSpecificSettings(boolean)
47369=BaseConfigurationBlock:findControl(Key)
47370=BaseConfigurationBlock:updateCheckBox(Button)
47371=BaseConfigurationBlock:Key:getStoredValue(IScopeContext[], boolean, IWorkingCopyManager)
47372=BaseConfigurationBlock:getStoredValue(Key)
47373=BaseConfigurationBlock:checkValue(Key, String)
47374=BaseConfigurationBlock:getKey(String, String)
47375=BaseConfigurationBlock:testIfOptionsComplete(Key[])
47376=BaseConfigurationBlock:getFullBuildDialogStrings(boolean)
47377=BaseConfigurationBlock:performRevert()
47378=BaseConfigurationBlock:Key:toString()
47379=BaseConfigurationBlock:UpdateAdapter:dialogFieldChanged(DialogField)
47380=BaseConfigurationBlock:setShell(Shell)
47381=BaseConfigurationBlock:getSelectionListener()
47382=Test:foo(java.util.Vector[], java.util.Vector[][][])
47383=Test:foo(Object[], String[][][])
47384=Test:foo(int[], char[][][])
47385=A:A()
47386=CompletionJavadocParser:pushParamName(boolean)
47387=CompletionJavadocParser:CompletionJavadocParser(CompletionParser)
47388=CompletionJavadocParser:parseTag(int)
47389=CompletionJavadocParser:parseThrows()
47390=CompletionJavadocParser:readToken()
47391=CompletionJavadocParser:possibleTags(char[], boolean)
47392=CompletionJavadocParser:verifySpaceOrEndComment()
47393=CompletionJavadocParser:parseReference()
47394=CompletionJavadocParser:parseParam()
47395=CompletionJavadocParser:pushText(int, int)
47396=CompletionJavadocParser:createMethodReference(Object, List)
47397=CompletionJavadocParser:checkDeprecation(int)
47398=CompletionJavadocParser:syntaxRecoverEmptyArgumentType(Object)
47399=CompletionJavadocParser:createTypeReference(int)
47400=CompletionJavadocParser:commentParse()
47401=CompletionJavadocParser:syntaxRecoverQualifiedName(int)
47402=CompletionJavadocParser:getCompletionParser()
47403=CompletionJavadocParser:updateDocComment()
47404=CompletionJavadocParser:syntaxRecoverArgumentType(Object, List, Object)
47405=CompletionJavadocParser:createArgumentReference(char[], int, boolean, Object, long[], long)
47406=CompletionJavadocParser:parseArguments(Object)
47407=CompletionJavadocParser:getCompletionJavadoc()
47408=CompletionJavadocParser:initLevelTags()
47409=CompletionJavadocParser:createFieldReference(Object)
47410=TestSuiteLoader:reload(Class)
47411=TestSuiteLoader:load(String)
47412=X03:foo()
47413=TypeDeclaration:hasErrors()
47414=TypeDeclaration:analyseCode(ClassScope)
47415=TypeDeclaration:updateMaxFieldCount()
47416=TypeDeclaration:printBody(int, StringBuffer)
47417=TypeDeclaration:analyseCode(BlockScope, FlowContext, FlowInfo)
47418=TypeDeclaration:addMissingAbstractMethodFor(MethodBinding)
47419=TypeDeclaration:compilationResult()
47420=TypeDeclaration:declarationOf(MethodBinding)
47421=TypeDeclaration:analyseCode(ClassScope, FlowContext, FlowInfo)
47422=TypeDeclaration:internalAnalyseCode(FlowContext, FlowInfo)
47423=TypeDeclaration:needClassInitMethod()
47424=TypeDeclaration:checkConstructors(Parser)
47425=TypeDeclaration:declarationOf(MemberTypeBinding)
47426=TypeDeclaration:manageEnclosingInstanceAccessIfNecessary(BlockScope, FlowInfo)
47427=TypeDeclaration:generateCode(CompilationUnitScope)
47428=TypeDeclaration:createsInternalConstructorWithBinding(MethodBinding)
47429=TypeDeclaration:resolve(CompilationUnitScope)
47430=TypeDeclaration:resolve(ClassScope)
47431=TypeDeclaration:printStatement(int, StringBuffer)
47432=TypeDeclaration:declarationOf(FieldBinding)
47433=TypeDeclaration:traverse(ASTVisitor, BlockScope)
47434=TypeDeclaration:TypeDeclaration(CompilationResult)
47435=TypeDeclaration:isInterface()
47436=TypeDeclaration:addClinit()
47437=TypeDeclaration:resolve(BlockScope)
47438=TypeDeclaration:declarationOfType(char[][])
47439=TypeDeclaration:abort(int, IProblem)
47440=TypeDeclaration:printHeader(int, StringBuffer)
47441=TypeDeclaration:print(int, StringBuffer)
47442=TypeDeclaration:createsInternalConstructor(boolean, boolean)
47443=TypeDeclaration:generateCode(ClassFile)
47444=TypeDeclaration:resolve()
47445=TypeDeclaration:traverse(ASTVisitor, ClassScope)
47446=TypeDeclaration:generateCode(ClassScope, ClassFile)
47447=TypeDeclaration:generateCode(BlockScope, CodeStream)
47448=TypeDeclaration:traverse(ASTVisitor, CompilationUnitScope)
47449=TypeDeclaration:parseMethod(Parser, CompilationUnitDeclaration)
47450=TypeDeclaration:analyseCode(CompilationUnitScope)
47451=TypeDeclaration:manageEnclosingInstanceAccessIfNecessary(ClassScope, FlowInfo)
47452=TypeDeclaration:tagAsHavingErrors()
47453=X:getStrings()
47454=ResolveLocalField:foo()
47455=TypeVariableImpl:getUpperBound()
47456=TypeVariableImpl:TypeVariableImpl(BaseProcessingEnvImpl, TypeVariableBinding)
47457=TypeVariableImpl:accept(TypeVisitor<R, P>, P)
47458=TypeVariableImpl:getLowerBound()
47459=TypeVariableImpl:getKind()
47460=TypeVariableImpl:asElement()
47461=Test:foo()
47462=SyntheticFactoryMethodBinding:getConstructor()
47463=SyntheticFactoryMethodBinding:SyntheticFactoryMethodBinding(MethodBinding, LookupEnvironment, ReferenceBinding)
47464=SyntheticFactoryMethodBinding:applyTypeArgumentsOnConstructor(TypeBinding[], TypeBinding[], boolean)
47465=X03:test()
47466=JavadocTest:writeFiles(String[])
47467=JavadocTest:suite()
47468=JavadocTest:runNegativeReferenceTest(String[], String, JavacTestOptions)
47469=JavadocTest:printJavacResultsSummary()
47470=JavadocTest:setUp()
47471=JavadocTest:runConformReferenceTest(String[])
47472=JavadocTest:tearDown()
47473=JavadocTest:suiteForComplianceLevel(long, Class)
47474=JavadocTest:getDefaultClassPaths()
47475=JavadocTest:getCompilerOptions()
47476=JavadocTest:JavadocTest(String)
47477=JavadocTest:runJavac(String[], String, String, boolean)
47478=JavadocTest:runNegativeReferenceTest(String[], String)
47479=JavadocTest:addTest(TestSuite, Class)
47480=X:foo(String[])
47481=AbstractGenericProcessor:_process()
47482=AbstractGenericProcessor:setEnv(AnnotationProcessorEnvironment)
47483=AbstractGenericProcessor:process()
47484=Test:main(String[])
47485=X:foo()
47486=X:X(String)
47487=SelectionEngine:getCorrectMethodBinding(MethodBinding)
47488=SelectionEngine:InheritDocVisitor:visit(ReferenceBinding)
47489=SelectionEngine:selectMemberTypeFromImport(CompilationUnitDeclaration, char[], ReferenceBinding, boolean)
47490=SelectionEngine:selectFrom(Binding, CompilationUnitDeclaration, boolean)
47491=SelectionEngine:findOverriddenMethodInType(ReferenceBinding, MethodBinding)
47492=SelectionEngine:SelectionEngine(SearchableEnvironment, ISelectionRequestor, Map, WorkingCopyOwner)
47493=SelectionEngine:checkTypeArgument(Scanner)
47494=SelectionEngine:selectDeclaration(TypeDeclaration, char[], char[])
47495=SelectionEngine:acceptQualifiedTypes()
47496=SelectionEngine:SelectionTypeNameMatchRequestorWrapper:SelectionTypeNameMatchRequestorWrapper(TypeNameMatchRequestor, IJavaSearchScope, ImportReference[])
47497=SelectionEngine:selectType(char[], IType)
47498=SelectionEngine:SelectionTypeNameMatchRequestorWrapper:acceptType(int, char[], char[], char[][], String, AccessRestriction)
47499=SelectionEngine:SelectionTypeNameMatchRequestorWrapper:initializeImportNodeCaches()
47500=SelectionEngine:getParser()
47501=SelectionEngine:selectDeclaration(CompilationUnitDeclaration)
47502=SelectionEngine:InheritDocVisitor:visitInheritDoc(ReferenceBinding)
47503=SelectionEngine:acceptPackage(char[])
47504=SelectionEngine:selectLocalDeclaration(ASTNode)
47505=SelectionEngine:findMethodWithAttachedDocInHierarchy(MethodBinding)
47506=SelectionEngine:acceptConstructor(int, char[], int, char[], char[][], char[][], int, char[], int, String, AccessRestriction)
47507=SelectionEngine:isLocal(ReferenceBinding)
47508=SelectionEngine:checkSelection(char[], int, int)
47509=SelectionEngine:acceptType(char[], char[], char[][], int, AccessRestriction)
47510=SelectionEngine:selectStaticMethodFromStaticImport(CompilationUnitDeclaration, char[], ReferenceBinding)
47511=SelectionEngine:SelectionTypeNameMatchRequestorWrapper:acceptNotImported()
47512=SelectionEngine:findAllTypes(char[])
47513=SelectionEngine:selectStaticFieldFromStaticImport(CompilationUnitDeclaration, char[], ReferenceBinding)
47514=SelectionEngine:select(ICompilationUnit, int, int)
47515=SelectionEngine:InheritDocVisitor:visitInheritDocInterfaces(ArrayList, ReferenceBinding)
47516=SelectionEngine:selectFrom(Binding, CompilationUnitDeclaration, ICompilationUnit, boolean)
47517=Foo:foo()
47518=ResolveDuplicateMethodDeclaration9:Inner:foo(Zork)
47519=Test:bar()
47520=Test:foo(int)
47521=ProblemMethodBinding:original()
47522=ProblemMethodBinding:isParameterizedGeneric()
47523=ProblemMethodBinding:computeSubstitutedMethod(MethodBinding, LookupEnvironment)
47524=ProblemMethodBinding:genericMethod()
47525=ProblemMethodBinding:findOriginalInheritedMethod(MethodBinding)
47526=ProblemMethodBinding:problemId()
47527=ProblemMethodBinding:shallowOriginal()
47528=ProblemMethodBinding:ProblemMethodBinding(MethodBinding, char[], TypeBinding[], int)
47529=ProblemMethodBinding:ProblemMethodBinding(char[], TypeBinding[], ReferenceBinding, int)
47530=ProblemMethodBinding:ProblemMethodBinding(char[], TypeBinding[], int)
47531=ProblemMethodBinding:tiebreakMethod()
47532=ProblemMethodBinding:hasSubstitutedParameters()
47533=LocalVariableReferenceMatch:isReadAccess()
47534=LocalVariableReferenceMatch:LocalVariableReferenceMatch(IJavaElement, int, int, int, boolean, boolean, boolean, SearchParticipant, IResource)
47535=LocalVariableReferenceMatch:isWriteAccess()
47536=AnnotationInfo:toString()
47537=AnnotationInfo:getElementValuePairs()
47538=AnnotationInfo:readTargetValue(int)
47539=AnnotationInfo:AnnotationInfo(byte[], int[], int)
47540=AnnotationInfo:scanElementValue(int)
47541=AnnotationInfo:initialize()
47542=AnnotationInfo:hashCode()
47543=AnnotationInfo:decodeDefaultValue()
47544=AnnotationInfo:readRetentionPolicy(int)
47545=AnnotationInfo:getTypeName()
47546=AnnotationInfo:decodeAnnotation()
47547=AnnotationInfo:AnnotationInfo(byte[], int[], int, boolean, boolean)
47548=AnnotationInfo:equals(Object)
47549=AnnotationInfo:scanAnnotation(int, boolean, boolean)
47550=ReconcileFilerImpl:NoOpWriter:flush()
47551=ReconcileFilerImpl:getEnv()
47552=ReconcileFilerImpl:NoOpWriter:write(char[], int, int)
47553=ReconcileFilerImpl:createBinaryFile(Filer.Location, String, File)
47554=ReconcileFilerImpl:createTextFile(Filer.Location, String, File, String)
47555=ReconcileFilerImpl:NoOpWriter:close()
47556=ReconcileFilerImpl:ReconcileFilerImpl(ReconcileEnv)
47557=ReconcileFilerImpl:createClassFile(String)
47558=IStackMapFrame:getNumberOfLocals()
47559=IStackMapFrame:getLocals()
47560=IStackMapFrame:getOffsetDelta()
47561=IStackMapFrame:getFrameType()
47562=IStackMapFrame:getNumberOfStackItems()
47563=IStackMapFrame:getStackItems()
47564=F:foo()
47565=Test:main(String[])
47566=ASTRewritingModifyingTest:displayActual(String, int)
47567=ASTRewritingModifyingTest:tearDownSuite()
47568=ASTRewritingModifyingTest:evaluateRewrite(String, CompilationUnit, Map)
47569=ASTRewritingModifyingTest:setUpSuite()
47570=ASTRewritingModifyingTest:evaluateRewrite(String, CompilationUnit)
47571=ASTRewritingModifyingTest:suite()
47572=ASTRewritingModifyingTest:createCU(ICompilationUnit, boolean)
47573=ASTRewritingModifyingTest:ASTRewritingModifyingTest(String)
47574=ASTRewritingModifyingTest:getJLS3()
47575=ASTRewritingModifyingTest:createCU(char[])
47576=ASTRewritingModifyingTest:createCU(ICompilationUnit, boolean, int)
47577=ASTRewritingModifyingTest:assertEqualString(String, String)
47578=ASTRewritingModifyingTest:evaluateRewrite(ICompilationUnit, CompilationUnit)
47579=Test:m(int)
47580=PatternSearchJob:getJobFamily()
47581=PatternSearchJob:ensureReadyToRun()
47582=PatternSearchJob:cancel()
47583=PatternSearchJob:toString()
47584=PatternSearchJob:execute(IProgressMonitor)
47585=PatternSearchJob:belongsTo(String)
47586=PatternSearchJob:getIndexes(IProgressMonitor)
47587=PatternSearchJob:search(Index, IProgressMonitor)
47588=PatternSearchJob:PatternSearchJob(SearchPattern, SearchParticipant, IJavaSearchScope, IndexQueryRequestor)
47589=JavaModel:getJavaProject(String)
47590=JavaModel:getWorkspace()
47591=JavaModel:getJavaProjects()
47592=JavaModel:equals(Object)
47593=JavaModel:getElementType()
47594=JavaModel:getWorkspaceTarget(IPath)
47595=JavaModel:getExternalTarget(IPath, boolean)
47596=JavaModel:getNonJavaResources()
47597=JavaModel:resource(PackageFragmentRoot)
47598=JavaModel:getJavaProject(IResource)
47599=JavaModel:buildStructure(OpenableElementInfo, IProgressMonitor, Map, IResource)
47600=JavaModel:getUnderlyingResource()
47601=JavaModel:move(IJavaElement[], IJavaElement[], IJavaElement[], String[], boolean, IProgressMonitor)
47602=JavaModel:getFile(Object)
47603=JavaModel:runOperation(MultiOperation, IJavaElement[], IJavaElement[], String[], IProgressMonitor)
47604=JavaModel:getPath()
47605=JavaModel:isFile(Object)
47606=JavaModel:getHandleFromMemento(String, MementoTokenizer, WorkingCopyOwner)
47607=JavaModel:getHandleMementoDelimiter()
47608=JavaModel:contains(IResource)
47609=JavaModel:copy(IJavaElement[], IJavaElement[], IJavaElement[], String[], boolean, IProgressMonitor)
47610=JavaModel:createElementInfo()
47611=JavaModel:isExternalFile(IPath)
47612=JavaModel:delete(IJavaElement[], boolean, IProgressMonitor)
47613=JavaModel:refreshExternalArchives(IJavaElement[], IProgressMonitor)
47614=JavaModel:validateExistence(IResource)
47615=JavaModel:getHandleMemento(StringBuffer)
47616=JavaModel:rename(IJavaElement[], IJavaElement[], String[], boolean, IProgressMonitor)
47617=JavaModel:JavaModel()
47618=JavaModel:getTarget(IPath, boolean)
47619=JavaModel:toStringInfo(int, StringBuffer, Object, boolean)
47620=Test:main(String[])
47621=X:main(String[])
47622=X:foo()
47623=A:foo()
47624=AbortCompilationUnit:AbortCompilationUnit(CompilationResult, CategorizedProblem)
47625=AbortCompilationUnit:AbortCompilationUnit(CompilationResult, IOException, String)
47626=A108088:subroutine(float)
47627=A108088:subsub()
47628=ResolveQualifiedType:foo()
47629=CombinedBinaryExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
47630=CombinedBinaryExpression:generateOptimizedStringConcatenationCreation(BlockScope, CodeStream, int)
47631=CombinedBinaryExpression:CombinedBinaryExpression(CombinedBinaryExpression)
47632=CombinedBinaryExpression:resolveType(BlockScope)
47633=CombinedBinaryExpression:printExpressionNoParenthesis(int, StringBuffer)
47634=CombinedBinaryExpression:tuneArityMax()
47635=CombinedBinaryExpression:initArity(Expression, int)
47636=CombinedBinaryExpression:generateOptimizedStringConcatenation(BlockScope, CodeStream, int)
47637=CombinedBinaryExpression:traverse(ASTVisitor, BlockScope)
47638=CombinedBinaryExpression:CombinedBinaryExpression(Expression, Expression, int, int)
47639=A:foo(boolean)
47640=Test:service()
47641=Test:main(String[])
47642=ConditionalFlowInfo:toString()
47643=ConditionalFlowInfo:isDefinitelyNonNull(LocalVariableBinding)
47644=ConditionalFlowInfo:markAsDefinitelyAssigned(LocalVariableBinding)
47645=ConditionalFlowInfo:resetAssignmentInfo(LocalVariableBinding)
47646=ConditionalFlowInfo:safeInitsWhenTrue()
47647=ConditionalFlowInfo:markPotentiallyNullBit(LocalVariableBinding)
47648=ConditionalFlowInfo:isPotentiallyAssigned(FieldBinding)
47649=ConditionalFlowInfo:markPotentiallyUnknownBit(LocalVariableBinding)
47650=ConditionalFlowInfo:isPotentiallyAssigned(LocalVariableBinding)
47651=ConditionalFlowInfo:isPotentiallyNull(LocalVariableBinding)
47652=ConditionalFlowInfo:setReachMode(int)
47653=ConditionalFlowInfo:isPotentiallyNonNull(LocalVariableBinding)
47654=ConditionalFlowInfo:unconditionalInits()
47655=ConditionalFlowInfo:markAsDefinitelyNonNull(LocalVariableBinding)
47656=ConditionalFlowInfo:mergedWith(UnconditionalFlowInfo)
47657=ConditionalFlowInfo:unconditionalInitsWithoutSideEffect()
47658=ConditionalFlowInfo:ConditionalFlowInfo(FlowInfo, FlowInfo)
47659=ConditionalFlowInfo:initsWhenTrue()
47660=ConditionalFlowInfo:markAsComparedEqualToNull(LocalVariableBinding)
47661=ConditionalFlowInfo:nullInfoLessUnconditionalCopy()
47662=ConditionalFlowInfo:markAsDefinitelyNull(LocalVariableBinding)
47663=ConditionalFlowInfo:copy()
47664=ConditionalFlowInfo:resetNullInfo(LocalVariableBinding)
47665=ConditionalFlowInfo:markAsDefinitelyUnknown(LocalVariableBinding)
47666=ConditionalFlowInfo:isProtectedNonNull(LocalVariableBinding)
47667=ConditionalFlowInfo:addPotentialInitializationsFrom(FlowInfo)
47668=ConditionalFlowInfo:addNullInfoFrom(FlowInfo)
47669=ConditionalFlowInfo:markAsComparedEqualToNonNull(LocalVariableBinding)
47670=ConditionalFlowInfo:initsWhenFalse()
47671=ConditionalFlowInfo:unconditionalFieldLessCopy()
47672=ConditionalFlowInfo:isPotentiallyUnknown(LocalVariableBinding)
47673=ConditionalFlowInfo:addInitializationsFrom(FlowInfo)
47674=ConditionalFlowInfo:isDefinitelyAssigned(FieldBinding)
47675=ConditionalFlowInfo:markPotentiallyNonNullBit(LocalVariableBinding)
47676=ConditionalFlowInfo:isDefinitelyAssigned(LocalVariableBinding)
47677=ConditionalFlowInfo:isDefinitelyUnknown(LocalVariableBinding)
47678=ConditionalFlowInfo:asNegatedCondition()
47679=ConditionalFlowInfo:hasNullInfoFor(LocalVariableBinding)
47680=ConditionalFlowInfo:isProtectedNull(LocalVariableBinding)
47681=ConditionalFlowInfo:unconditionalCopy()
47682=ConditionalFlowInfo:markAsDefinitelyAssigned(FieldBinding)
47683=ConditionalFlowInfo:isDefinitelyNull(LocalVariableBinding)
47684=Test:foo()
47685=A:foo()
47686=Test:test()
47687=AB:methodIAString(int)
47688=Parser:foo()
47689=X02:foo()
47690=RunFormatterMassiveTests:suite()
47691=RunFormatterMassiveTests:RunFormatterMassiveTests(String)
47692=RunFormatterMassiveTests:addClass(TestSuite, File, String, Map)
47693=ClassFormatException:ClassFormatException(String, Throwable)
47694=ClassFormatException:ClassFormatException(int)
47695=ClassFormatException:ClassFormatException(String)
47696=HashtableOfObject:rehash()
47697=HashtableOfObject:get(char[])
47698=HashtableOfObject:HashtableOfObject()
47699=HashtableOfObject:size()
47700=HashtableOfObject:removeKey(char[])
47701=HashtableOfObject:containsKey(char[])
47702=HashtableOfObject:clone()
47703=HashtableOfObject:toString()
47704=HashtableOfObject:put(char[], Object)
47705=HashtableOfObject:HashtableOfObject(int)
47706=ASTBinaryExpressionCollector:endVisit(SingleNameReference, BlockScope)
47707=ASTImplTests:test0008_combined_binary_expression()
47708=ASTImplTests:test0014_combined_binary_expression()
47709=ASTBinaryExpressionCollector:endVisit(BinaryExpression, BlockScope)
47710=AnnotationCollector:visit(JavadocSingleTypeReference, ClassScope)
47711=ASTImplTests:test0017()
47712=AnnotationCollector:endVisit(LocalDeclaration, BlockScope)
47713=ASTBinaryExpressionCollector:visit(StringLiteral, BlockScope)
47714=AnnotationCollector:visit(MemberValuePair, BlockScope)
47715=AnnotationCollector:visit(SingleMemberAnnotation, BlockScope)
47716=ASTImplTests:suite()
47717=ASTImplTests:test0019()
47718=ASTImplTests:test0011_combined_binary_expression()
47719=AnnotationCollector:endVisit(MarkerAnnotation, BlockScope)
47720=ASTImplTests:test0005_combined_binary_expression()
47721=ASTImplTests:test0002_combined_binary_expression()
47722=ASTBinaryExpressionCollector:cut(String)
47723=ASTImplTests:test0003_combined_binary_expression()
47724=ASTBinaryExpressionCollector:endVisit(ExtendedStringLiteral, BlockScope)
47725=ASTBinaryExpressionCollector:visit(StringLiteralConcatenation, BlockScope)
47726=AnnotationCollector:endVisit(JavadocSingleTypeReference, BlockScope)
47727=AnnotationCollector:endVisit(NormalAnnotation, BlockScope)
47728=ASTImplTests:test0012_combined_binary_expression()
47729=ASTImplTests:ASTImplTests(String)
47730=AnnotationCollector:endVisit(Argument, ClassScope)
47731=ASTImplTests:test0009_combined_binary_expression()
47732=ASTImplTests:test0007_combined_binary_expression()
47733=AnnotationCollector:endVisit(JavadocSingleTypeReference, ClassScope)
47734=ASTImplTests:test0016_combined_binary_expression()
47735=AnnotationCollector:endVisit(MemberValuePair, BlockScope)
47736=AnnotationCollector:endVisit(Argument, BlockScope)
47737=ASTBinaryExpressionCollector:visit(BinaryExpression, BlockScope)
47738=ASTBinaryExpressionCollector:visit(ExtendedStringLiteral, BlockScope)
47739=ASTImplTests:test0004_combined_binary_expression()
47740=ASTImplTests:test0010_combined_binary_expression()
47741=ASTBinaryExpressionCollector:endVisit(StringLiteralConcatenation, BlockScope)
47742=ASTImplTests:test0013_combined_binary_expression()
47743=ASTBinaryExpressionCollector:visit(SingleNameReference, BlockScope)
47744=ASTImplTests:testClass()
47745=AnnotationCollector:visit(Argument, ClassScope)
47746=ASTImplTests:test0018()
47747=AnnotationCollector:visit(NormalAnnotation, BlockScope)
47748=AnnotationCollector:visit(LocalDeclaration, BlockScope)
47749=ASTImplTests:test0001_regular_binary_expression()
47750=AnnotationCollector:endVisit(SingleMemberAnnotation, BlockScope)
47751=ASTBinaryExpressionCollector:visit(CharLiteral, BlockScope)
47752=ASTImplTests:runConformTest(String, String, Parser, ASTCollector, String)
47753=AnnotationCollector:visit(MarkerAnnotation, BlockScope)
47754=AnnotationCollector:visit(Argument, BlockScope)
47755=ASTImplTests:test0006_combined_binary_expression()
47756=ASTCollector:result()
47757=ASTBinaryExpressionCollector:endVisit(StringLiteral, BlockScope)
47758=ASTBinaryExpressionCollector:endVisit(CharLiteral, BlockScope)
47759=ASTImplTests:test0015_combined_binary_expression()
47760=AnnotationCollector:visit(JavadocSingleTypeReference, BlockScope)
47761=WhileStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
47762=WhileStatement:WhileStatement(Expression, Statement, int, int)
47763=WhileStatement:traverse(ASTVisitor, BlockScope)
47764=WhileStatement:resolve(BlockScope)
47765=WhileStatement:printStatement(int, StringBuffer)
47766=WhileStatement:generateCode(BlockScope, CodeStream)
47767=ttt:main()
47768=PublicScanner:atEnd()
47769=PublicScanner:getLineStart(int)
47770=PublicScanner:optimizedCurrentTokenSource2()
47771=PublicScanner:parseTags()
47772=PublicScanner:checkTaskTag(int, int)
47773=PublicScanner:getCurrentTokenSourceString()
47774=PublicScanner:PublicScanner()
47775=PublicScanner:getLineNumber(int)
47776=PublicScanner:getLineEnd(int)
47777=PublicScanner:getCurrentStringLiteral()
47778=PublicScanner:getNextCharAsDigit()
47779=PublicScanner:optimizedCurrentTokenSource4()
47780=PublicScanner:recordComment(int)
47781=PublicScanner:getNextCharAsJavaIdentifierPart()
47782=PublicScanner:getNextChar(char)
47783=PublicScanner:getSource()
47784=PublicScanner:unicodeStore()
47785=PublicScanner:getNextCharAsDigit(int)
47786=PublicScanner:getRawTokenSourceEnd()
47787=PublicScanner:unicodeStore(char)
47788=PublicScanner:getCurrentTokenStartPosition()
47789=PublicScanner:scanNumber(boolean)
47790=PublicScanner:unicodeInitializeBuffer(int)
47791=PublicScanner:optimizedCurrentTokenSource5()
47792=PublicScanner:toString()
47793=PublicScanner:jumpOverMethodBody()
47794=PublicScanner:isIdentifier(int)
47795=PublicScanner:getCurrentTokenSource()
47796=PublicScanner:optimizedCurrentTokenSource1()
47797=PublicScanner:getNextUnicodeChar()
47798=PublicScanner:getCurrentTokenString()
47799=PublicScanner:PublicScanner(boolean, boolean, boolean, long, long, char[][], char[][], boolean)
47800=PublicScanner:getNextCharAsJavaIdentifierPartWithBoundCheck()
47801=PublicScanner:getNextChar()
47802=PublicScanner:pushLineSeparator()
47803=PublicScanner:pushUnicodeLineSeparator()
47804=PublicScanner:optimizedCurrentTokenSource3()
47805=PublicScanner:isKeyword(int)
47806=PublicScanner:getNextCharWithBoundChecks()
47807=PublicScanner:internalScanIdentifierOrKeyword(int, int, char[])
47808=PublicScanner:scanEscapeCharacter()
47809=PublicScanner:getCurrentTokenEndPosition()
47810=PublicScanner:getCurrentIdentifierSource()
47811=PublicScanner:scanIdentifier()
47812=PublicScanner:setSource(char[])
47813=PublicScanner:extractInt(char[], int, int)
47814=PublicScanner:consumeDigits0(int, int, int, boolean)
47815=PublicScanner:consumeDigits(int)
47816=PublicScanner:resetTo(int, int)
47817=PublicScanner:isFirstTag()
47818=PublicScanner:consumeDigits(int, boolean)
47819=PublicScanner:PublicScanner(boolean, boolean, boolean, long, char[][], char[][], boolean)
47820=PublicScanner:jumpOverUnicodeWhiteSpace()
47821=PublicScanner:setSource(CompilationResult)
47822=PublicScanner:getNextToken()
47823=PublicScanner:getNextChar(char, char)
47824=PublicScanner:scanIdentifierOrKeyword()
47825=PublicScanner:toStringAction(int)
47826=PublicScanner:scanIdentifierOrKeywordWithBoundCheck()
47827=PublicScanner:getNLSTags()
47828=PublicScanner:isLiteral(int)
47829=PublicScanner:optimizedCurrentTokenSource6()
47830=PublicScanner:getLineEnds()
47831=PublicScanner:getRawTokenSource()
47832=PublicScanner:setSource(char[], CompilationResult)
47833=A:foo()
47834=DoStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
47835=DoStatement:printStatement(int, StringBuffer)
47836=DoStatement:completesByContinue()
47837=DoStatement:doesNotCompleteNormally()
47838=DoStatement:generateCode(BlockScope, CodeStream)
47839=DoStatement:traverse(ASTVisitor, BlockScope)
47840=DoStatement:resolve(BlockScope)
47841=DoStatement:DoStatement(Expression, Statement, int, int)
47842=Test:main(String[])
47843=X01:foo()
47844=QualifiedNameReference:reportError(BlockScope)
47845=QualifiedNameReference:analyseCode(BlockScope, FlowContext, FlowInfo, boolean)
47846=QualifiedNameReference:getGenericCast(int)
47847=QualifiedNameReference:traverse(ASTVisitor, BlockScope)
47848=QualifiedNameReference:generateAssignment(BlockScope, CodeStream, Assignment, boolean)
47849=QualifiedNameReference:getCodegenBinding(int)
47850=QualifiedNameReference:analyseAssignment(BlockScope, FlowContext, FlowInfo, Assignment, boolean)
47851=QualifiedNameReference:printExpression(int, StringBuffer)
47852=QualifiedNameReference:setFieldIndex(int)
47853=QualifiedNameReference:manageEnclosingInstanceAccessIfNecessary(BlockScope, FlowInfo)
47854=QualifiedNameReference:computeConversion(Scope, TypeBinding, TypeBinding)
47855=QualifiedNameReference:genericTypeArguments()
47856=QualifiedNameReference:checkFieldAccess(BlockScope)
47857=QualifiedNameReference:manageSyntheticAccessIfNecessary(BlockScope, FieldBinding, TypeBinding, int, FlowInfo)
47858=QualifiedNameReference:generateCompoundAssignment(BlockScope, CodeStream, Expression, int, int, boolean)
47859=QualifiedNameReference:generateReadSequence(BlockScope, CodeStream)
47860=QualifiedNameReference:generateCode(BlockScope, CodeStream, boolean)
47861=QualifiedNameReference:generatePostIncrement(BlockScope, CodeStream, CompoundAssignment, boolean)
47862=QualifiedNameReference:setCodegenBinding(int, FieldBinding)
47863=QualifiedNameReference:unboundReferenceErrorName()
47864=QualifiedNameReference:setSyntheticAccessor(FieldBinding, int, SyntheticAccessMethodBinding)
47865=QualifiedNameReference:QualifiedNameReference(char[][], long[], int, int)
47866=QualifiedNameReference:generateReceiver(CodeStream)
47867=QualifiedNameReference:getOtherFieldBindings(BlockScope)
47868=QualifiedNameReference:analyseCode(BlockScope, FlowContext, FlowInfo)
47869=QualifiedNameReference:resolveType(BlockScope)
47870=QualifiedNameReference:setGenericCast(int, TypeBinding)
47871=A:f()
47872=X09:foo(Object, int)
47873=Test:foo()
47874=C:foo()
47875=A:foo()
47876=X:getStrings()
47877=AnnotationTypeElementDeclaration:getDeclaringType()
47878=AnnotationTypeElementDeclaration:getDefaultValue()
47879=A:foo()
47880=A:b()
47881=A:goo()
47882=A:bar()
47883=A:foo(int, int)
47884=ReadAnnotationTests2:getSourcePath()
47885=ReadAnnotationTests2:getTypeBinding(String, IJavaProject)
47886=ReadAnnotationTests2:addAllSources()
47887=ReadAnnotationTests2:suite()
47888=ReadAnnotationTests2:getUniqueProjectName()
47889=ReadAnnotationTests2:ReadAnnotationTests2(String)
47890=ReadAnnotationTests2:testBinaryAnnotation()
47891=ReadAnnotationTests2:getOutputPath()
47892=ReadAnnotationTests2:assertAnnotation(String[], IAnnotationBinding[])
47893=ReadAnnotationTests2:setupTest()
47894=ReadAnnotationTests2:_testAnnotations()
47895=ReadAnnotationTests2:testSourceAnnotation()
47896=ReadAnnotationTests2:getBinaryPath()
47897=ReadAnnotationTests2:getProjectName()
47898=X09:bar()
47899=X02:foo(int, int)
47900=X03b:foo()
47901=StackMapAttribute:StackMapAttribute(byte[], IConstantPool, int)
47902=StackMapAttribute:getStackMapFrame()
47903=StackMapAttribute:getBytes()
47904=StackMapAttribute:getNumberOfEntries()
47905=CompletionOnClassLiteralAccess:CompletionOnClassLiteralAccess(long, TypeReference)
47906=CompletionOnClassLiteralAccess:resolveType(BlockScope)
47907=CompletionOnClassLiteralAccess:printExpression(int, StringBuffer)
47908=MirroredTypesException:MirroredTypesException(Collection<TypeMirror>)
47909=MirroredTypesException:getQualifiedNames()
47910=MirroredTypesException:getTypeMirrors()
47911=Test2:m1(int, int[])
47912=Test2:m(int, int)
47913=ProcessorTestStatus:assertEquals(String, int, int)
47914=ProcessorTestStatus:reset()
47915=ProcessorTestStatus:assertEquals(String, Object, Object)
47916=ProcessorTestStatus:assertTrue(String, boolean)
47917=ProcessorTestStatus:setProcessorRan()
47918=ProcessorTestStatus:failWithoutException(String)
47919=ProcessorTestStatus:processorRan()
47920=ProcessorTestStatus:fail(String)
47921=ProcessorTestStatus:getErrors()
47922=ProcessorTestStatus:hasErrors()
47923=ProcessorTestStatus:assertEquals(String, String, String)
47924=ProcessorTestStatus:ProcessorTestStatus()
47925=EclipseCompilerRequestor:reportProblems(CompilationResult)
47926=EclipseCompilerRequestor:EclipseCompilerRequestor(Main, DiagnosticListener<? super JavaFileObject>, DefaultProblemFactory)
47927=SomeClass:foo()
47928=PrefixExpression:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
47929=PrefixExpression:memSize()
47930=PrefixExpression:accept0(ASTVisitor)
47931=PrefixExpression:getNodeType0()
47932=PrefixExpression:Operator:toString()
47933=PrefixExpression:internalStructuralPropertiesForType(int)
47934=PrefixExpression:internalGetSetObjectProperty(SimplePropertyDescriptor, boolean, Object)
47935=PrefixExpression:Operator:toOperator(String)
47936=PrefixExpression:treeSize()
47937=PrefixExpression:propertyDescriptors(int)
47938=PrefixExpression:PrefixExpression(AST)
47939=PrefixExpression:getOperator()
47940=PrefixExpression:setOperand(Expression)
47941=PrefixExpression:clone0(AST)
47942=PrefixExpression:Operator:Operator(String)
47943=PrefixExpression:getOperand()
47944=PrefixExpression:subtreeMatch0(ASTMatcher, Object)
47945=PrefixExpression:setOperator(PrefixExpression.Operator)
47946=X08:bar()
47947=ParserTest1_7:checkParse(char[], String, String, String, String, String, String, String)
47948=ParserTest1_7:test0010()
47949=ParserTest1_7:test0012()
47950=ParserTest1_7:test0002()
47951=ParserTest1_7:suite()
47952=ParserTest1_7:test0004()
47953=ParserTest1_7:test0006()
47954=ParserTest1_7:getCompilerOptions()
47955=ParserTest1_7:test0008()
47956=ParserTest1_7:test0009()
47957=ParserTest1_7:test0011()
47958=ParserTest1_7:testClass()
47959=ParserTest1_7:test0001()
47960=ParserTest1_7:test0003()
47961=ParserTest1_7:test0005()
47962=ParserTest1_7:ParserTest1_7(String)
47963=ParserTest1_7:test0007()
47964=X05:foo()
47965=X:x(int)
47966=X:set(T)
47967=X:get()
47968=RecoveredStatement:updateSourceEndIfNecessary(int, int)
47969=RecoveredStatement:RecoveredStatement(Statement, RecoveredElement, int)
47970=RecoveredStatement:updatedStatement(int, Set<TypeDeclaration>)
47971=RecoveredStatement:parseTree()
47972=RecoveredStatement:sourceEnd()
47973=RecoveredStatement:toString(int)
47974=RecoveredStatement:updateOnClosingBrace(int, int)
47975=RecoveredStatement:updateParseTree()
47976=StaticConflictingSimpleNameFinder:StaticConflictingSimpleNameFinder(IJavaProject)
47977=StaticConflictingSimpleNameFinder:extractStaticMemberNames(IType)
47978=StaticConflictingSimpleNameFinder:findConflictingSimpleNames(Set<String>, Set<String>, IProgressMonitor)
47979=StaticConflictingSimpleNameFinder:isStaticImportableMember(int)
47980=LexStream:readTokenFromScanner()
47981=LexStream:token(int)
47982=LexStream:badtoken()
47983=LexStream:isInsideStream(int)
47984=LexStream:getToken()
47985=LexStream:kind(int)
47986=LexStream:previous(int)
47987=LexStream:start(int)
47988=LexStream:reset()
47989=LexStream:line(int)
47990=LexStream:LexStream(int, Scanner, int[], int[], int[], int, int, int)
47991=LexStream:toString()
47992=LexStream:flags(int)
47993=LexStream:name(int)
47994=LexStream:next(int)
47995=LexStream:afterEol(int)
47996=LexStream:end(int)
47997=LexStream:Token:toString()
47998=LexStream:reset(int)
47999=CT47209:CT47209(String)
48000=CT47209:m47209(int)
48001=Main:main(String[])
48002=InferenceContext18:allOutputVariables(Set<ConstraintFormula>)
48003=InferenceContext18:getSmallestVariableSet(BoundSet, InferenceVariable[])
48004=InferenceContext18:inferInvocationApplicability(MethodBinding, TypeBinding[], boolean)
48005=InferenceContext18:addConstraintsToC_OneExpr(Expression, Set<ConstraintFormula>, TypeBinding, TypeBinding, MethodBinding, boolean)
48006=InferenceContext18:isReachable(Map<ConstraintFormula, Set<ConstraintFormula>>, ConstraintFormula, ConstraintFormula, Set<ConstraintFormula>, Set<ConstraintFormula>)
48007=InferenceContext18:enterPolyInvocation(InvocationSite, Expression[])
48008=InferenceContext18:sortTypes(TypeBinding[])
48009=InferenceContext18:pickFromCycle(Set<ConstraintFormula>)
48010=InferenceContext18:canInfluenceAnyOf(InferenceVariable, Set<InferenceVariable>, List<Set<InferenceVariable>>)
48011=InferenceContext18:inferInvocationType(TypeBinding, InvocationSite, MethodBinding)
48012=InferenceContext18:getFunctionInterfaceArgumentSolutions(TypeBinding[])
48013=InferenceContext18:isResolved(BoundSet)
48014=InferenceContext18:getInferenceVariable(TypeBinding, int, InvocationSite)
48015=InferenceContext18:varArgTypes(TypeBinding[], int)
48016=InferenceContext18:parameterizedWithWildcard(TypeBinding)
48017=InferenceContext18:addConstraintsToC(Expression[], Set<ConstraintFormula>, MethodBinding, int, boolean, InvocationSite)
48018=InferenceContext18:inferFunctionalInterfaceParameterization(LambdaExpression, BlockScope, ParameterizedTypeBinding)
48019=InferenceContext18:moreSpecificMain(TypeBinding, TypeBinding, Expression)
48020=InferenceContext18:toString()
48021=InferenceContext18:doesExpressionContain(Expression, Expression)
48022=InferenceContext18:createInitialConstraintsForParameters(TypeBinding[], boolean, TypeBinding, MethodBinding)
48023=InferenceContext18:solve(boolean)
48024=InferenceContext18:getParameter(TypeBinding[], int, boolean)
48025=InferenceContext18:siSuperI(TypeBinding, TypeBinding)
48026=InferenceContext18:InferenceContext18(Scope)
48027=InferenceContext18:recordUncheckedConversion(ConstraintTypeFormula)
48028=InferenceContext18:dependsOn(Collection<InferenceVariable>, Collection<InferenceVariable>)
48029=InferenceContext18:solve()
48030=InferenceContext18:isMoreSpecificThan(MethodBinding, MethodBinding, boolean, boolean)
48031=InferenceContext18:reduceAndIncorporate(ConstraintFormula)
48032=InferenceContext18:substitute(TypeBinding)
48033=InferenceContext18:enterLambda(LambdaExpression)
48034=InferenceContext18:isTypeVariableOfCandidate(TypeBinding, MethodBinding)
48035=InferenceContext18:getSolutions(TypeVariableBinding[], InvocationSite, BoundSet)
48036=InferenceContext18:usesUncheckedConversion()
48037=InferenceContext18:freshCapture(InferenceVariable)
48038=InferenceContext18:isVarArgs()
48039=InferenceContext18:createInitialBoundSet(TypeVariableBinding[])
48040=InferenceContext18:checkExpression(Expression, TypeBinding[], TypeBinding, TypeBinding[], TypeBinding)
48041=InferenceContext18:missingImplementation(String)
48042=InferenceContext18:findBottomSet(Set<ConstraintFormula>, Set<InferenceVariable>, List<Set<InferenceVariable>>)
48043=InferenceContext18:addDependencies(BoundSet, Set<InferenceVariable>, InferenceVariable)
48044=InferenceContext18:createBoundsForFunctionalInterfaceParameterizationInference(ParameterizedTypeBinding)
48045=InferenceContext18:integrateInnerInferenceB2(InferenceContext18)
48046=InferenceContext18:cleanUp()
48047=InferenceContext18:isSameSite(InvocationSite, InvocationSite)
48048=InferenceContext18:reportUncheckedConversions(BoundSet)
48049=InferenceContext18:reduce()
48050=InferenceContext18:SuspendedInferenceRecord:SuspendedInferenceRecord(InvocationSite, Expression[], InferenceVariable[], int, boolean)
48051=InferenceContext18:getResultSubstitution(BoundSet, boolean)
48052=InferenceContext18:addTypeVariableSubstitutions(TypeBinding[])
48053=InferenceContext18:getReturnProblemMethodIfNeeded(TypeBinding, MethodBinding)
48054=InferenceContext18:forwardResults(BoundSet, Invocation, ParameterizedMethodBinding, TypeBinding)
48055=InferenceContext18:siSubI(TypeBinding, TypeBinding)
48056=InferenceContext18:resumeSuspendedInference(SuspendedInferenceRecord)
48057=InferenceContext18:getInferenceKind(MethodBinding, TypeBinding[])
48058=InferenceContext18:resolve(InferenceVariable[])
48059=InferenceContext18:InferenceContext18(Scope, Expression[], InvocationSite, InferenceContext18)
48060=InferenceContext18:addThrowsContraints(TypeBinding[], InferenceVariable[], ReferenceBinding[])
48061=InferenceContext18:rankNode(ConstraintExpressionFormula, Map<ConstraintExpressionFormula, ConstraintExpressionFormula>, Map<ConstraintExpressionFormula, Set<ConstraintExpressionFormula>>)
48062=InferenceContext18:reduceWithEqualityConstraints(TypeBinding[], TypeBinding[])
48063=InferenceContext18:setUpperBounds(CaptureBinding18, TypeBinding[])
48064=InferenceContext18:solve(InferenceVariable[])
48065=InferenceContext18:addInitialTypeVariableSubstitutions(TypeBinding[])
48066=SearchTests:testSearchPatternValidMatchRule43()
48067=SearchTests:testSearchPatternValidMatchRule32()
48068=SearchTests:testSearchPatternCreation28()
48069=SearchTests:WaitingJob:runAndSuspend(IWorkspaceRunnable)
48070=SearchTests:testSearchPatternCreation15()
48071=SearchTests:SearchMethodNameRequestor:toString()
48072=SearchTests:testSearchPatternCreation04()
48073=SearchTests:WaitUntilReadyMonitor:isCanceled()
48074=SearchTests:testSearchPatternValidMatchRule41()
48075=SearchTests:testSearchPatternCreation37()
48076=SearchTests:assertValidMatchRule(String, int)
48077=SearchTests:testSearchPatternValidMatchRule30()
48078=SearchTests:testSearchPatternCreation26()
48079=SearchTests:testSearchPatternCreation13()
48080=SearchTests:testSearchPatternCreation02()
48081=SearchTests:testSearchPatternValidMatchRule01()
48082=SearchTests:testSearchPatternValidMatchRule47()
48083=SearchTests:testSearchPatternValidMatchRule36()
48084=SearchTests:testSearchPatternValidMatchRule23()
48085=SearchTests:testSearchPatternCreation19()
48086=SearchTests:testSearchPatternValidMatchRule12()
48087=SearchTests:WaitUntilReadyMonitor:beginTask(String, int)
48088=SearchTests:WaitUntilReadyMonitor:internalWorked(double)
48089=SearchTests:testSearchPatternCreation08()
48090=SearchTests:testSearchPatternValidMatchRule45()
48091=SearchTests:testSearchPatternValidMatchRule34()
48092=SearchTests:testNullProgressMonitor()
48093=SearchTests:testSearchPatternValidMatchRule21()
48094=SearchTests:testSearchPatternCreation17()
48095=SearchTests:SearchTypeNameRequestor:toString()
48096=SearchTests:testConcurrentJob()
48097=SearchTests:testSearchPatternValidMatchRule10()
48098=SearchTests:WaitingJob:execute(IProgressMonitor)
48099=SearchTests:testSearchPatternCreation06()
48100=SearchTests:assertAllTypes(int, IProgressMonitor, String)
48101=SearchTests:WaitUntilReadyMonitor:setCanceled(boolean)
48102=SearchTests:testSearchPatternValidMatchRule06()
48103=SearchTests:tearDownSuite()
48104=SearchTests:testSearchPatternValidMatchRule04()
48105=SearchTests:testSearchPatternCreation30()
48106=SearchTests:assertValidMatchRule(String, int, int)
48107=SearchTests:WaitingJob:ensureReadyToRun()
48108=SearchTests:testSearchPatternValidMatchRule15()
48109=SearchTests:testSearchPatternValidMatchRule02()
48110=SearchTests:assertAllTypes(String)
48111=SearchTests:testChangeClasspath2()
48112=SearchTests:testSearchPatternCreation12()
48113=SearchTests:testSearchPatternCreation01()
48114=SearchTests:testSearchPatternCreation34()
48115=SearchTests:assertAllTypes(String, IJavaProject, String)
48116=SearchTests:testSearchPatternCreation23()
48117=SearchTests:WaitingJob:getJobFamily()
48118=SearchTests:testSearchPatternCreation10()
48119=SearchTests:testSearchPatternCreation32()
48120=SearchTests:WaitUntilReadyMonitor:done()
48121=SearchTests:testSearchPatternCreation21()
48122=SearchTests:testSearchPatternValidMatchRule20()
48123=SearchTests:testSearchPatternCreation16()
48124=SearchTests:SearchTests(String)
48125=SearchTests:WaitingJob:cancel()
48126=SearchTests:testSearchPatternCreation05()
48127=SearchTests:assertPattern(String, SearchPattern)
48128=SearchTests:testSearchPatternValidMatchRule42()
48129=SearchTests:testChangeClasspath()
48130=SearchTests:testSearchPatternValidMatchRule31()
48131=SearchTests:testSearchPatternCreation27()
48132=SearchTests:testSearchPatternCreation14()
48133=SearchTests:WaitingJob:belongsTo(String)
48134=SearchTests:WaitUntilReadyMonitor:subTask(String)
48135=SearchTests:SearchMethodNameRequestor:checkAndAddtoBuffer(StringBuffer, char[], char)
48136=SearchTests:testSearchPatternCreation03()
48137=SearchTests:testSearchPatternValidMatchRule40()
48138=SearchTests:testSearchPatternCreation36()
48139=SearchTests:testSearchPatternCreation25()
48140=SearchTests:testSearchPatternValidMatchRule24()
48141=SearchTests:testSearchPatternValidMatchRule13()
48142=SearchTests:suite()
48143=SearchTests:testSearchPatternValidMatchRule46()
48144=SearchTests:testProjectLib()
48145=SearchTests:testSearchPatternValidMatchRule35()
48146=SearchTests:testSearchPatternValidMatchRule22()
48147=SearchTests:testSearchPatternCreation18()
48148=SearchTests:setUpSuite()
48149=SearchTests:testSearchPatternValidMatchRule11()
48150=SearchTests:testSearchPatternCreation07()
48151=SearchTests:testRemoveOuterFolder()
48152=SearchTests:SearchTypeNameRequestor:size()
48153=SearchTests:testSearchPatternValidMatchRule44()
48154=SearchTests:SearchMethodNameRequestor:acceptMethod(char[], int, char[], char[], int, char[], char[], char[][], char[][], char[], int, String, int)
48155=SearchTests:WaitUntilReadyMonitor:setTaskName(String)
48156=SearchTests:testSearchPatternValidMatchRule33()
48157=SearchTests:testSearchPatternCreation29()
48158=SearchTests:assertAllTypes(String, IJavaProject, int, IProgressMonitor, String)
48159=SearchTests:testSearchPatternCreation31()
48160=SearchTests:testSearchPatternCreation20()
48161=SearchTests:WaitingJob:suspend()
48162=SearchTests:testSearchPatternValidMatchRule05()
48163=SearchTests:WaitingJob:resume()
48164=SearchTests:testSearchPatternValidMatchRule03()
48165=SearchTests:SearchTypeNameRequestor:unsortedString()
48166=SearchTests:testSearchPatternValidMatchRule14()
48167=SearchTests:WaitUntilReadyMonitor:worked(int)
48168=SearchTests:testSearchPatternCreation35()
48169=SearchTests:testSearchPatternCreation24()
48170=SearchTests:SearchMethodNameRequestor:size()
48171=SearchTests:testSearchPatternCreation33()
48172=SearchTests:testSearchPatternCreation22()
48173=SearchTests:SearchTypeNameRequestor:acceptType(int, char[], char[], char[][], String)
48174=ResolveTests18:test0017()
48175=ResolveTests18:test417935a()
48176=ResolveTests18:test0028()
48177=ResolveTests18:test429812()
48178=ResolveTests18:testBug408230k()
48179=ResolveTests18:test0006()
48180=ResolveTests18:test0015()
48181=ResolveTests18:test0026()
48182=ResolveTests18:testBug408230i()
48183=ResolveTests18:test429845()
48184=ResolveTests18:test424071()
48185=ResolveTests18:test0004()
48186=ResolveTests18:test430307()
48187=ResolveTests18:test417935()
48188=ResolveTests18:test0013()
48189=ResolveTests18:test0024()
48190=ResolveTests18:test0002()
48191=ResolveTests18:test429934()
48192=ResolveTests18:test0011()
48193=ResolveTests18:test0022()
48194=ResolveTests18:tearDown()
48195=ResolveTests18:test429262b()
48196=ResolveTests18:testBug487791()
48197=ResolveTests18:setUpSuite()
48198=ResolveTests18:testBug408230m()
48199=ResolveTests18:testBug408230d()
48200=ResolveTests18:test429262d()
48201=ResolveTests18:test0020()
48202=ResolveTests18:test0033()
48203=ResolveTests18:test422468()
48204=ResolveTests18:testBug408230b()
48205=ResolveTests18:test0031()
48206=ResolveTests18:testBug408230h()
48207=ResolveTests18:test428968a()
48208=ResolveTests18:test0009()
48209=ResolveTests18:test422468d()
48210=ResolveTests18:testBug408230f()
48211=ResolveTests18:test0007()
48212=ResolveTests18:test422468b()
48213=ResolveTests18:test424198b()
48214=ResolveTests18:test425064a()
48215=ResolveTests18:testBug408230l()
48216=ResolveTests18:test424198c()
48217=ResolveTests18:test0005()
48218=ResolveTests18:test0018()
48219=ResolveTests18:test440731()
48220=ResolveTests18:test430572()
48221=ResolveTests18:test0029()
48222=ResolveTests18:test430136()
48223=ResolveTests18:testBug408230j()
48224=ResolveTests18:test0003()
48225=ResolveTests18:test0016()
48226=ResolveTests18:testParser()
48227=ResolveTests18:test0027()
48228=ResolveTests18:ResolveTests18(String)
48229=ResolveTests18:test429948()
48230=ResolveTests18:test0001()
48231=ResolveTests18:test0014()
48232=ResolveTests18:test0025()
48233=ResolveTests18:test429262a()
48234=ResolveTests18:testBug408230n()
48235=ResolveTests18:test0012()
48236=ResolveTests18:test0023()
48237=ResolveTests18:test429262c()
48238=ResolveTests18:test0032()
48239=ResolveTests18:test425064()
48240=ResolveTests18:test422468a()
48241=ResolveTests18:test424110a()
48242=ResolveTests18:testBug408230c()
48243=ResolveTests18:test439234()
48244=ResolveTests18:test0010()
48245=ResolveTests18:test0021()
48246=ResolveTests18:test429262e()
48247=ResolveTests18:test424110()
48248=ResolveTests18:test430307a()
48249=ResolveTests18:setUp()
48250=ResolveTests18:test0030()
48251=ResolveTests18:getWorkingCopy(String, String)
48252=ResolveTests18:suite()
48253=ResolveTests18:testBug408230a()
48254=ResolveTests18:testFieldInit()
48255=ResolveTests18:tearDownSuite()
48256=ResolveTests18:test429262()
48257=ResolveTests18:test422468e()
48258=ResolveTests18:testBug408230g()
48259=ResolveTests18:test424198()
48260=ResolveTests18:test0019()
48261=ResolveTests18:test422468c()
48262=ResolveTests18:test424198a()
48263=ResolveTests18:test428968()
48264=ResolveTests18:testBug408230e()
48265=ResolveTests18:testBug487791b()
48266=ResolveTests18:test0008()
48267=IProcessorProvider:reportProcessorException(Processor, Exception)
48268=IProcessorProvider:getDiscoveredProcessors()
48269=IProcessorProvider:discoverNextProcessor()
48270=TestValid2:foo(String)
48271=Test:combineScriptsExist()
48272=LambdaFactory:getTypeSignature(JavaModelManager, TypeBinding)
48273=LambdaFactory:createLambdaMethod(JavaElement, org.eclipse.jdt.internal.compiler.ast.LambdaExpression)
48274=LambdaFactory:createLambdaExpression(JavaElement, String, int, int, int)
48275=LambdaFactory:createLambdaMethod(JavaElement, String, String, int, int, int, String[], String[], String)
48276=LambdaFactory:isBinaryMember(JavaElement)
48277=LambdaFactory:createLambdaExpression(JavaElement, org.eclipse.jdt.internal.compiler.ast.LambdaExpression)
48278=Test:foo()
48279=CompletionOnJavadoc:addCompletionFlags(int)
48280=CompletionOnJavadoc:getCompletionFlags()
48281=X28b:foo()
48282=LexStream:readTokenFromScanner()
48283=LexStream:token(int)
48284=LexStream:badtoken()
48285=LexStream:isInsideStream(int)
48286=LexStream:getToken()
48287=LexStream:awaitingColonColon()
48288=LexStream:kind(int)
48289=LexStream:previous(int)
48290=LexStream:start(int)
48291=LexStream:reset()
48292=LexStream:line(int)
48293=LexStream:LexStream(int, Scanner, int[], int[], int[], int, int, int)
48294=LexStream:toString()
48295=LexStream:flags(int)
48296=LexStream:name(int)
48297=LexStream:next(int)
48298=LexStream:afterEol(int)
48299=LexStream:end(int)
48300=LexStream:Token:toString()
48301=LexStream:reset(int)
48302=Example:foo()
48303=ReorderingImportAdder:ReorderingImportAdder(Comparator<ImportName>)
48304=ReorderingImportAdder:addImports(Collection<ImportName>, Collection<ImportName>)
48305=SomeClass:classifySetTwo(Set<?>, int, long, int)
48306=RecoveredStatement:updateSourceEndIfNecessary(int, int)
48307=RecoveredStatement:RecoveredStatement(Statement, RecoveredElement, int)
48308=RecoveredStatement:parseTree()
48309=RecoveredStatement:sourceEnd()
48310=RecoveredStatement:toString(int)
48311=RecoveredStatement:updatedStatement()
48312=RecoveredStatement:updateParseTree()
48313=ExpressionStatement:clone0(AST)
48314=ExpressionStatement:subtreeMatch0(ASTMatcher, Object)
48315=ExpressionStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
48316=ExpressionStatement:accept0(ASTVisitor)
48317=ExpressionStatement:memSize()
48318=ExpressionStatement:propertyDescriptors(int)
48319=ExpressionStatement:getExpression()
48320=ExpressionStatement:setExpression(Expression)
48321=ExpressionStatement:treeSize()
48322=ExpressionStatement:ExpressionStatement(AST)
48323=ExpressionStatement:getNodeType0()
48324=ExpressionStatement:internalStructuralPropertiesForType(int)
48325=LongCache:hash(long)
48326=LongCache:put(long, int)
48327=LongCache:rehash()
48328=LongCache:size()
48329=LongCache:containsKey(long)
48330=LongCache:toString()
48331=LongCache:LongCache()
48332=LongCache:LongCache(int)
48333=LongCache:get(long)
48334=LongCache:clear()
48335=ClassFileReader:getName()
48336=ClassFileReader:initialize()
48337=ClassFileReader:read(String)
48338=ClassFileReader:getFields()
48339=ClassFileReader:isBinaryType()
48340=ClassFileReader:getGenericSignature()
48341=ClassFileReader:toString()
48342=ClassFileReader:read(File, boolean)
48343=ClassFileReader:isInterface()
48344=ClassFileReader:read(File)
48345=ClassFileReader:getEnclosingTypeName()
48346=ClassFileReader:getConstantClassNameAt(int)
48347=ClassFileReader:hasStructuralChanges(byte[])
48348=ClassFileReader:isMember()
48349=ClassFileReader:getInnerSourceName()
48350=ClassFileReader:read(String, boolean)
48351=ClassFileReader:hasStructuralChanges(byte[], boolean, boolean)
48352=ClassFileReader:hasNonSyntheticMethodChanges(MethodInfo[], MethodInfo[])
48353=ClassFileReader:getModifiers()
48354=ClassFileReader:getFileName()
48355=ClassFileReader:hasStructuralMethodChanges(MethodInfo, MethodInfo)
48356=ClassFileReader:getSuperclassName()
48357=ClassFileReader:getConstantPoolOffsets()
48358=ClassFileReader:read(java.util.zip.ZipFile, String)
48359=ClassFileReader:getMemberTypes()
48360=ClassFileReader:read(java.util.zip.ZipFile, String, boolean)
48361=ClassFileReader:getMethods()
48362=ClassFileReader:hasNonSyntheticFieldChanges(FieldInfo[], FieldInfo[])
48363=ClassFileReader:getInterfaceNames()
48364=ClassFileReader:accessFlags()
48365=ClassFileReader:isNestedType()
48366=ClassFileReader:isLocal()
48367=ClassFileReader:ClassFileReader(byte, char[])
48368=ClassFileReader:isAnonymous()
48369=ClassFileReader:ClassFileReader(byte[], char[], boolean)
48370=ClassFileReader:reset()
48371=ClassFileReader:getVersion()
48372=ClassFileReader:hasStructuralFieldChanges(FieldInfo, FieldInfo)
48373=ClassFileReader:sourceFileName()
48374=ClassFileReader:isClass()
48375=PackageDeclarationPattern:print(StringBuffer)
48376=PackageDeclarationPattern:queryIn(Index)
48377=PackageDeclarationPattern:PackageDeclarationPattern(char[], int)
48378=AbortCompilation:updateContext(InvocationSite, CompilationResult)
48379=AbortCompilation:AbortCompilation(boolean, RuntimeException)
48380=AbortCompilation:AbortCompilation()
48381=AbortCompilation:AbortCompilation(CompilationResult, IProblem)
48382=AbortCompilation:updateContext(ASTNode, CompilationResult)
48383=AbortCompilation:AbortCompilation(CompilationResult, Throwable)
48384=FileSystemUtil:mkdirs(File)
48385=FileSystemUtil:FileSystemUtil()
48386=FileSystemUtil:compareStreams(InputStream, InputStream)
48387=FileSystemUtil:deleteResource(IResource)
48388=FileSystemUtil:writeStringToFile(File, String)
48389=FileSystemUtil:getContentsOfFile(File)
48390=FileSystemUtil:deleteDerivedResources(IResource)
48391=FileSystemUtil:getContents(InputStream)
48392=FileSystemUtil:getContentsOfIFile(IFile)
48393=FileSystemUtil:makeDerivedParentFolders(IContainer)
48394=FileSystemUtil:writeStringToIFile(IFile, String)
48395=RecoveredTypeBinding:getInterfaces()
48396=RecoveredTypeBinding:getTypeArguments()
48397=RecoveredTypeBinding:getPackage()
48398=RecoveredTypeBinding:isWildcardType()
48399=RecoveredTypeBinding:isSubTypeCompatible(ITypeBinding)
48400=RecoveredTypeBinding:getBinaryName()
48401=RecoveredTypeBinding:getDeclaringMethod()
48402=RecoveredTypeBinding:getType()
48403=RecoveredTypeBinding:getJavaElement()
48404=RecoveredTypeBinding:getModifiers()
48405=RecoveredTypeBinding:isUpperbound()
48406=RecoveredTypeBinding:isClass()
48407=RecoveredTypeBinding:getComponentType()
48408=RecoveredTypeBinding:getDeclaredTypes()
48409=RecoveredTypeBinding:getFunctionalInterfaceMethod()
48410=RecoveredTypeBinding:isCastCompatible(ITypeBinding)
48411=RecoveredTypeBinding:getWildcard()
48412=RecoveredTypeBinding:getTypeDeclaration()
48413=RecoveredTypeBinding:isDeprecated()
48414=RecoveredTypeBinding:getElementType()
48415=RecoveredTypeBinding:isNullType()
48416=RecoveredTypeBinding:isEnum()
48417=RecoveredTypeBinding:getTypeParameters()
48418=RecoveredTypeBinding:getBound()
48419=RecoveredTypeBinding:getSuperclass()
48420=RecoveredTypeBinding:RecoveredTypeBinding(BindingResolver, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
48421=RecoveredTypeBinding:isInterface()
48422=RecoveredTypeBinding:getQualifiedName()
48423=RecoveredTypeBinding:getAnnotations()
48424=RecoveredTypeBinding:getDeclaredModifiers()
48425=RecoveredTypeBinding:RecoveredTypeBinding(BindingResolver, Type)
48426=RecoveredTypeBinding:isIntersectionType()
48427=RecoveredTypeBinding:getInternalName()
48428=RecoveredTypeBinding:getDeclaredMethods()
48429=RecoveredTypeBinding:getErasure()
48430=RecoveredTypeBinding:getRank()
48431=RecoveredTypeBinding:RecoveredTypeBinding(BindingResolver, VariableDeclaration)
48432=RecoveredTypeBinding:isRecovered()
48433=RecoveredTypeBinding:isParameterizedType()
48434=RecoveredTypeBinding:isRawType()
48435=RecoveredTypeBinding:isAnnotation()
48436=RecoveredTypeBinding:getDeclaringMember()
48437=RecoveredTypeBinding:getDeclaringClass()
48438=RecoveredTypeBinding:getTypeNameFrom(Type)
48439=RecoveredTypeBinding:isMember()
48440=RecoveredTypeBinding:isNested()
48441=RecoveredTypeBinding:isAssignmentCompatible(ITypeBinding)
48442=RecoveredTypeBinding:isTypeVariable()
48443=RecoveredTypeBinding:isArray()
48444=RecoveredTypeBinding:isLocal()
48445=RecoveredTypeBinding:getTypeBounds()
48446=RecoveredTypeBinding:getGenericTypeOfWildcardType()
48447=RecoveredTypeBinding:getKey()
48448=RecoveredTypeBinding:isEqualTo(IBinding)
48449=RecoveredTypeBinding:createArrayType(int)
48450=RecoveredTypeBinding:RecoveredTypeBinding(BindingResolver, RecoveredTypeBinding, int)
48451=RecoveredTypeBinding:isSynthetic()
48452=RecoveredTypeBinding:getKind()
48453=RecoveredTypeBinding:isFromSource()
48454=RecoveredTypeBinding:getReferenceBinding()
48455=RecoveredTypeBinding:isAnonymous()
48456=RecoveredTypeBinding:getName()
48457=RecoveredTypeBinding:isGenericType()
48458=RecoveredTypeBinding:isPrimitive()
48459=RecoveredTypeBinding:isCapture()
48460=RecoveredTypeBinding:getTypeAnnotations()
48461=RecoveredTypeBinding:isTopLevel()
48462=RecoveredTypeBinding:getDeclaredFields()
48463=RecoveredTypeBinding:getDimensions()
48464=CodeSnippetEnvironment:isPackage(char[][], char[])
48465=CodeSnippetEnvironment:findType(char[], char[][])
48466=CodeSnippetEnvironment:CodeSnippetEnvironment(INameEnvironment, EvaluationContext)
48467=CodeSnippetEnvironment:cleanup()
48468=CodeSnippetEnvironment:findType(char[][])
48469=Scanner:getNextUnicodeChar()
48470=Scanner:getNextToken()
48471=Scanner:pushUnicodeLineSeparator()
48472=Scanner:getSource()
48473=Scanner:optimizedCurrentTokenSource4()
48474=Scanner:getLineEnds()
48475=Scanner:atEnd()
48476=Scanner:getLineNumber(int)
48477=Scanner:setSource(CompilationResult)
48478=Scanner:jumpOverMethodBody()
48479=Scanner:optimizedCurrentTokenSource2()
48480=Scanner:getNextCharAsJavaIdentifierPart()
48481=Scanner:jumpOverUnicodeWhiteSpace()
48482=Scanner:getCurrentTokenStartPosition()
48483=Scanner:getNextCharAsDigit(int)
48484=Scanner:scanIdentifierOrKeyword()
48485=Scanner:recordComment(int)
48486=Scanner:scanNumber(boolean)
48487=Scanner:getCurrentTokenEndPosition()
48488=Scanner:optimizedCurrentTokenSource1()
48489=Scanner:scanEscapeCharacter()
48490=Scanner:getNextCharAsDigit()
48491=Scanner:unicodeInitializeBuffer(int)
48492=Scanner:getCurrentIdentifierSource()
48493=Scanner:toString()
48494=Scanner:getNextChar(char, char)
48495=Scanner:getNextChar()
48496=Scanner:getLineStart(int)
48497=Scanner:checkNonExternalizedString()
48498=Scanner:parseTags(NLSLine)
48499=Scanner:getRawTokenSourceEnd()
48500=Scanner:optimizedCurrentTokenSource5()
48501=Scanner:getCurrentTokenSourceString()
48502=Scanner:optimizedCurrentTokenSource3()
48503=Scanner:Scanner(boolean, boolean, boolean, long, char[][], char[][], boolean)
48504=Scanner:getRawTokenSource()
48505=Scanner:checkTaskTag(int, int)
48506=Scanner:pushLineSeparator()
48507=Scanner:getNextChar(char)
48508=Scanner:getCurrentTokenSource()
48509=Scanner:isDigit(char)
48510=Scanner:toStringAction(int)
48511=Scanner:resetTo(int, int)
48512=Scanner:setSource(char[])
48513=Scanner:optimizedCurrentTokenSource6()
48514=Scanner:getLineEnd(int)
48515=Scanner:unicodeStoreAt(int)
48516=Scanner:Scanner()
48517=Engine:accept(IBinaryType, PackageBinding, AccessRestriction)
48518=Engine:initializeImportCaches()
48519=Engine:initializePackageCache()
48520=Engine:Engine(Map<String, String>)
48521=Engine:getSignature(MethodBinding)
48522=Engine:getTypeSignature(TypeBinding)
48523=Engine:accept(ICompilationUnit, AccessRestriction)
48524=Engine:mustQualifyType(char[], char[], char[], int)
48525=Engine:reset(boolean)
48526=Engine:getParser()
48527=Engine:parseBlockStatements(CompilationUnitDeclaration, int)
48528=Engine:getSignature(TypeBinding)
48529=Engine:accept(ISourceType[], PackageBinding, AccessRestriction)
48530=Engine:parseBlockStatements(TypeDeclaration, CompilationUnitDeclaration, int)
48531=DOMFactory:createImport(String)
48532=DOMFactory:createField()
48533=DOMFactory:createCompilationUnit(char[], String)
48534=DOMFactory:createMethod(String)
48535=DOMFactory:createField(String)
48536=DOMFactory:createCompilationUnit(String, String)
48537=DOMFactory:createImport()
48538=DOMFactory:createCompilationUnit()
48539=DOMFactory:createInterface()
48540=DOMFactory:createType()
48541=DOMFactory:createMethod()
48542=DOMFactory:createInitializer()
48543=DOMFactory:DOMFactory()
48544=DOMFactory:createPackage()
48545=DOMFactory:createClass()
48546=DOMFactory:createType(String)
48547=DOMFactory:createPackage(String)
48548=DOMFactory:createInitializer(String)
48549=X:foo()
48550=Test:test(String)
48551=X02:foo()
48552=AnnotationValueImpl:toString()
48553=AnnotationValueImpl:getCompilationUnit()
48554=AnnotationValueImpl:isFromSource()
48555=AnnotationValueImpl:getResource()
48556=AnnotationValueImpl:getValue()
48557=AnnotationValueImpl:kind()
48558=AnnotationValueImpl:AnnotationValueImpl(Object, int, AnnotationElementDeclarationImpl, BaseProcessorEnv)
48559=AnnotationValueImpl:getEnvironment()
48560=AnnotationValueImpl:getPosition()
48561=AnnotationValueImpl:AnnotationValueImpl(Object, String, int, AnnotationMirrorImpl, BaseProcessorEnv)
48562=Test:main(String[])
48563=A:thisIsAMethodWithAVeryLongName(long, int, String, Object)
48564=SimpleLookupTable:SimpleLookupTable(int)
48565=SimpleLookupTable:toString()
48566=SimpleLookupTable:containsKey(Object)
48567=SimpleLookupTable:removeKey(Object)
48568=SimpleLookupTable:clone()
48569=SimpleLookupTable:rehash()
48570=SimpleLookupTable:get(Object)
48571=SimpleLookupTable:keyForValue(Object)
48572=SimpleLookupTable:SimpleLookupTable()
48573=SimpleLookupTable:getKey(Object)
48574=SimpleLookupTable:put(Object, Object)
48575=SimpleLookupTable:removeValue(Object)
48576=UtilTest:test28()
48577=UtilTest:test17()
48578=UtilTest:test70()
48579=UtilTest:test04()
48580=UtilTest:test39()
48581=UtilTest:test26()
48582=UtilTest:test15()
48583=UtilTest:test48()
48584=UtilTest:test02()
48585=UtilTest:test37()
48586=UtilTest:test24()
48587=UtilTest:test59()
48588=UtilTest:test13()
48589=UtilTest:test46()
48590=UtilTest:test35()
48591=UtilTest:test22()
48592=UtilTest:test68()
48593=UtilTest:test11()
48594=UtilTest:test57()
48595=UtilTest:test44()
48596=UtilTest:test33()
48597=UtilTest:test43()
48598=UtilTest:test32()
48599=UtilTest:test65()
48600=UtilTest:test54()
48601=UtilTest:test41()
48602=UtilTest:test73b()
48603=UtilTest:test30()
48604=UtilTest:test63()
48605=UtilTest:suite()
48606=UtilTest:test52()
48607=UtilTest:test61()
48608=UtilTest:assertCamelCase(String, String, boolean)
48609=UtilTest:test50()
48610=UtilTest:test19()
48611=UtilTest:test72()
48612=UtilTest:test08()
48613=UtilTest:test06()
48614=UtilTest:test71b()
48615=UtilTest:test05()
48616=UtilTest:UtilTest(String)
48617=UtilTest:checkPathMatch(char[], char[], boolean)
48618=UtilTest:test29()
48619=UtilTest:test27()
48620=UtilTest:test16()
48621=UtilTest:testClass()
48622=UtilTest:test03()
48623=UtilTest:test49()
48624=UtilTest:test38()
48625=UtilTest:test25()
48626=UtilTest:assertCamelCase(String, String, boolean, boolean)
48627=UtilTest:test14()
48628=UtilTest:test47()
48629=UtilTest:test01()
48630=UtilTest:test36()
48631=UtilTest:test69()
48632=UtilTest:test23()
48633=UtilTest:setUp()
48634=UtilTest:test58()
48635=UtilTest:test12()
48636=UtilTest:test45()
48637=UtilTest:test34()
48638=UtilTest:test21()
48639=UtilTest:test67()
48640=UtilTest:test10()
48641=UtilTest:test56()
48642=UtilTest:test66()
48643=UtilTest:test20()
48644=UtilTest:test42()
48645=UtilTest:test31()
48646=UtilTest:test64()
48647=UtilTest:test53()
48648=UtilTest:test40()
48649=UtilTest:test62()
48650=UtilTest:test72b()
48651=UtilTest:test51()
48652=UtilTest:test73()
48653=UtilTest:test09()
48654=UtilTest:test60()
48655=UtilTest:test18()
48656=UtilTest:test71()
48657=UtilTest:test07()
48658=X21:createSearchPattern()
48659=SimpleDocument:addPrenotifiedDocumentListener(IDocumentListener)
48660=SimpleDocument:search(int, String, boolean, boolean, boolean)
48661=SimpleDocument:getLineLength(int)
48662=SimpleDocument:removeDocumentListener(IDocumentListener)
48663=SimpleDocument:setDocumentPartitioner(IDocumentPartitioner)
48664=SimpleDocument:getLineInformation(int)
48665=SimpleDocument:addPositionCategory(String)
48666=SimpleDocument:getPositionCategories()
48667=SimpleDocument:get(int, int)
48668=SimpleDocument:containsPositionCategory(String)
48669=SimpleDocument:removeDocumentPartitioningListener(IDocumentPartitioningListener)
48670=SimpleDocument:getPartition(int)
48671=SimpleDocument:computeIndexInCategory(String, int)
48672=SimpleDocument:addPositionUpdater(IPositionUpdater)
48673=SimpleDocument:getPositions(String)
48674=SimpleDocument:getNumberOfLines()
48675=SimpleDocument:addPosition(String, Position)
48676=SimpleDocument:addPosition(Position)
48677=SimpleDocument:get()
48678=SimpleDocument:addDocumentListener(IDocumentListener)
48679=SimpleDocument:getLineDelimiter(int)
48680=SimpleDocument:SimpleDocument(String)
48681=SimpleDocument:removePositionCategory(String)
48682=SimpleDocument:removePositionUpdater(IPositionUpdater)
48683=SimpleDocument:getLineOffset(int)
48684=SimpleDocument:replace(int, int, String)
48685=SimpleDocument:getLineInformationOfOffset(int)
48686=SimpleDocument:computePartitioning(int, int)
48687=SimpleDocument:containsPosition(String, int, int)
48688=SimpleDocument:removePosition(Position)
48689=SimpleDocument:getNumberOfLines(int, int)
48690=SimpleDocument:set(String)
48691=SimpleDocument:getLegalLineDelimiters()
48692=SimpleDocument:removePosition(String, Position)
48693=SimpleDocument:getLineOfOffset(int)
48694=SimpleDocument:getChar(int)
48695=SimpleDocument:addDocumentPartitioningListener(IDocumentPartitioningListener)
48696=SimpleDocument:insertPositionUpdater(IPositionUpdater, int)
48697=SimpleDocument:computeNumberOfLines(String)
48698=SimpleDocument:getContentType(int)
48699=SimpleDocument:getLegalContentTypes()
48700=SimpleDocument:getPositionUpdaters()
48701=SimpleDocument:getDocumentPartitioner()
48702=SimpleDocument:removePrenotifiedDocumentListener(IDocumentListener)
48703=SimpleDocument:getLength()
48704=Invocation:binding()
48705=Invocation:arguments()
48706=Invocation:getInferenceContext(ParameterizedMethodBinding)
48707=Invocation:registerResult(TypeBinding, MethodBinding)
48708=Invocation:registerInferenceContext(ParameterizedGenericMethodBinding, InferenceContext18)
48709=Invocation:cleanUpInferenceContexts()
48710=PackageDeclarationMatch:PackageDeclarationMatch(IJavaElement, int, int, int, SearchParticipant, IResource)
48711=A:Example(boolean)
48712=JavadocBugsTest:testBug191322b()
48713=JavadocBugsTest:testBug47215()
48714=JavadocBugsTest:testBug69272fieldValid()
48715=JavadocBugsTest:testBug69275negative()
48716=JavadocBugsTest:testBug222900b()
48717=JavadocBugsTest:testBug68017javadocWarning2()
48718=JavadocBugsTest:testBug87404()
48719=JavadocBugsTest:testBug168849i()
48720=JavadocBugsTest:testBug45592()
48721=JavadocBugsTest:testBug247037d()
48722=JavadocBugsTest:testBug129241a()
48723=JavadocBugsTest:testBug73348conform()
48724=JavadocBugsTest:testBug76324string()
48725=JavadocBugsTest:testBug86769_Fields2()
48726=JavadocBugsTest:testBug51606b()
48727=JavadocBugsTest:testBug47339b()
48728=JavadocBugsTest:testBug191322d()
48729=JavadocBugsTest:testBug52216()
48730=JavadocBugsTest:testBug149013_Public03()
48731=JavadocBugsTest:testBug68726conform1()
48732=JavadocBugsTest:testBug69272methodInvalid()
48733=JavadocBugsTest:testBug190970b()
48734=JavadocBugsTest:testBug83285b()
48735=JavadocBugsTest:testBug258798_2b()
48736=JavadocBugsTest:testBug168849g()
48737=JavadocBugsTest:testBug166436()
48738=JavadocBugsTest:testBug247037b()
48739=JavadocBugsTest:testBug65180e()
48740=JavadocBugsTest:testBug45958b()
48741=JavadocBugsTest:testBug227730b()
48742=JavadocBugsTest:testBug222188b()
48743=JavadocBugsTest:testBug153399a()
48744=JavadocBugsTest:testBug45596b()
48745=JavadocBugsTest:testBug69272methodValid()
48746=JavadocBugsTest:suite()
48747=JavadocBugsTest:testBug221539a()
48748=JavadocBugsTest:testBug50695b()
48749=JavadocBugsTest:testBug90302()
48750=JavadocBugsTest:testBug191322f()
48751=JavadocBugsTest:testBug176027h_private()
48752=JavadocBugsTest:testBug149013_Public01()
48753=JavadocBugsTest:testBug65253()
48754=JavadocBugsTest:testBug65180c()
48755=JavadocBugsTest:testBug267833_2()
48756=JavadocBugsTest:testBug45596()
48757=JavadocBugsTest:testBug50695()
48758=JavadocBugsTest:testBug103304d()
48759=JavadocBugsTest:testBug125518b()
48760=JavadocBugsTest:testBug316782()
48761=JavadocBugsTest:testBug51911b()
48762=JavadocBugsTest:testBug246715()
48763=JavadocBugsTest:testBug191322h()
48764=JavadocBugsTest:testBug70892a()
48765=JavadocBugsTest:testBug65180a()
48766=JavadocBugsTest:testBug103304f()
48767=JavadocBugsTest:testBug176027b()
48768=JavadocBugsTest:testBug45737()
48769=JavadocBugsTest:JavadocBugsTest(String)
48770=JavadocBugsTest:testBug125518d()
48771=JavadocBugsTest:testBug77260nested()
48772=JavadocBugsTest:testBug51911()
48773=JavadocBugsTest:testBug73352a()
48774=JavadocBugsTest:testBug51606()
48775=JavadocBugsTest:testBug267833()
48776=JavadocBugsTest:testBug195374()
48777=JavadocBugsTest:testBug68017negative()
48778=JavadocBugsTest:testBug46901()
48779=JavadocBugsTest:testBug86769_Classes2()
48780=JavadocBugsTest:testBug82088()
48781=JavadocBugsTest:testBug170637b()
48782=JavadocBugsTest:testBug149013_Private01()
48783=JavadocBugsTest:testBug48523()
48784=JavadocBugsTest:testBug53279b()
48785=JavadocBugsTest:testBug233187b()
48786=JavadocBugsTest:testBug47132()
48787=JavadocBugsTest:testBug176027d()
48788=JavadocBugsTest:testBug68726negative1()
48789=JavadocBugsTest:testBug66551b()
48790=JavadocBugsTest:testBug103304c()
48791=JavadocBugsTest:testBug48385a()
48792=JavadocBugsTest:testBug281609b()
48793=JavadocBugsTest:testBug51626()
48794=JavadocBugsTest:testBug149013_Private03()
48795=JavadocBugsTest:testBug191322()
48796=JavadocBugsTest:testBug166365()
48797=JavadocBugsTest:testBug69302negative1()
48798=JavadocBugsTest:testBug176027f()
48799=JavadocBugsTest:testBug78091()
48800=JavadocBugsTest:testBug45596a()
48801=JavadocBugsTest:testBug49260()
48802=JavadocBugsTest:testBug65174c()
48803=JavadocBugsTest:javadocTestClass()
48804=JavadocBugsTest:testBug103304a_private()
48805=JavadocBugsTest:testBug51529b()
48806=JavadocBugsTest:testBug153399c()
48807=JavadocBugsTest:testBug68025conform()
48808=JavadocBugsTest:testBug77602()
48809=JavadocBugsTest:testBug86769_Methods2()
48810=JavadocBugsTest:testBug53290()
48811=JavadocBugsTest:testBug237937()
48812=JavadocBugsTest:testBug168849d()
48813=JavadocBugsTest:testBug65180()
48814=JavadocBugsTest:testBug73479()
48815=JavadocBugsTest:testBug52216a()
48816=JavadocBugsTest:testBug90302b()
48817=JavadocBugsTest:testBug132813()
48818=JavadocBugsTest:testBug73352c()
48819=JavadocBugsTest:testBug73995()
48820=JavadocBugsTest:testBug45669a()
48821=JavadocBugsTest:testBug65174a()
48822=JavadocBugsTest:testBug49491()
48823=JavadocBugsTest:testBug66551()
48824=JavadocBugsTest:testBug49491a()
48825=JavadocBugsTest:testBug129241c()
48826=JavadocBugsTest:testBug153399e()
48827=JavadocBugsTest:testBug47339()
48828=JavadocBugsTest:testBug222900c()
48829=JavadocBugsTest:testBug66573()
48830=JavadocBugsTest:testBug69272classValid()
48831=JavadocBugsTest:testBug177009a()
48832=JavadocBugsTest:testBug50644()
48833=JavadocBugsTest:testBug168849b()
48834=JavadocBugsTest:testBug125903()
48835=JavadocBugsTest:testBug292510()
48836=JavadocBugsTest:testBug233887()
48837=JavadocBugsTest:testBug51606c()
48838=JavadocBugsTest:testBug77510disabled()
48839=JavadocBugsTest:testBug176027h_public()
48840=JavadocBugsTest:testBug53279()
48841=JavadocBugsTest:testBug47339a()
48842=JavadocBugsTest:setUp()
48843=JavadocBugsTest:testBug191322c()
48844=JavadocBugsTest:testBug382606()
48845=JavadocBugsTest:testBug222900a()
48846=JavadocBugsTest:testBug77260nested_disabled()
48847=JavadocBugsTest:testBug68017javadocWarning1()
48848=JavadocBugsTest:testBug68025negative()
48849=JavadocBugsTest:testBug168849h()
48850=JavadocBugsTest:testBug48376()
48851=JavadocBugsTest:testBug160015()
48852=JavadocBugsTest:testBug247037c()
48853=JavadocBugsTest:testBug65180f()
48854=JavadocBugsTest:testBug62812a()
48855=JavadocBugsTest:testBug45958a()
48856=JavadocBugsTest:testBug227730a()
48857=JavadocBugsTest:testBug62812()
48858=JavadocBugsTest:testBug222188a()
48859=JavadocBugsTest:testBug153399b()
48860=JavadocBugsTest:testBug77510enabled()
48861=JavadocBugsTest:testBug221539b()
48862=JavadocBugsTest:testBug125518a()
48863=JavadocBugsTest:testBug191322e()
48864=JavadocBugsTest:testBug76324()
48865=JavadocBugsTest:testBug149013_Public02()
48866=JavadocBugsTest:testBug86769_Field1()
48867=JavadocBugsTest:testBug68726conform2()
48868=JavadocBugsTest:testBug83285a()
48869=JavadocBugsTest:testBug190970a()
48870=JavadocBugsTest:testBug68017javadocWarning3()
48871=JavadocBugsTest:testBug48385()
48872=JavadocBugsTest:testBug258798_2c()
48873=JavadocBugsTest:testBug168849f()
48874=JavadocBugsTest:testBug45669()
48875=JavadocBugsTest:testBug65180d()
48876=JavadocBugsTest:testBug45958()
48877=JavadocBugsTest:testBug45958c()
48878=JavadocBugsTest:testBug207765()
48879=JavadocBugsTest:testBug103304a_public()
48880=JavadocBugsTest:testBug103304e()
48881=JavadocBugsTest:testBug176027a()
48882=JavadocBugsTest:testBug48711()
48883=JavadocBugsTest:testBug125518c()
48884=JavadocBugsTest:testBug191322g()
48885=JavadocBugsTest:testBug77602_Public()
48886=JavadocBugsTest:testBug51911a()
48887=JavadocBugsTest:testBug258798_2a()
48888=JavadocBugsTest:testBug48385And49620()
48889=JavadocBugsTest:testBug83285c()
48890=JavadocBugsTest:testBug190970c()
48891=JavadocBugsTest:testBug74369()
48892=JavadocBugsTest:testBug65180b()
48893=JavadocBugsTest:testBug47341()
48894=JavadocBugsTest:testBug69302conform1()
48895=JavadocBugsTest:testBug267833_3()
48896=JavadocBugsTest:testBug73348negative()
48897=JavadocBugsTest:testBug51606a()
48898=JavadocBugsTest:testBug128954()
48899=JavadocBugsTest:testBug233187a()
48900=JavadocBugsTest:testBug125518e()
48901=JavadocBugsTest:testBug47339c()
48902=JavadocBugsTest:testBug176027c()
48903=JavadocBugsTest:testBug246712b()
48904=JavadocBugsTest:testBug51911c()
48905=JavadocBugsTest:_testBug165794()
48906=JavadocBugsTest:testBug191322i()
48907=JavadocBugsTest:testBug70892b()
48908=JavadocBugsTest:testBug168849j()
48909=JavadocBugsTest:testBug86769_Classes1()
48910=JavadocBugsTest:testBug48064()
48911=JavadocBugsTest:testBug170637a()
48912=JavadocBugsTest:testBug77260()
48913=JavadocBugsTest:testBug65174()
48914=JavadocBugsTest:testBug149013_Private02()
48915=JavadocBugsTest:testBug53279c()
48916=JavadocBugsTest:testBug233187c()
48917=JavadocBugsTest:testBug168849a()
48918=JavadocBugsTest:testBug254825()
48919=JavadocBugsTest:testBug69275conform()
48920=JavadocBugsTest:testBug246712()
48921=JavadocBugsTest:testBug73352b()
48922=JavadocBugsTest:testBug86769_Metthods1()
48923=JavadocBugsTest:testBug76324url()
48924=JavadocBugsTest:testBug254825b()
48925=JavadocBugsTest:testBug51529()
48926=JavadocBugsTest:testBug163659()
48927=JavadocBugsTest:testBug128954a()
48928=JavadocBugsTest:testBug48064a()
48929=JavadocBugsTest:testBug53279a()
48930=JavadocBugsTest:testBug176027g()
48931=JavadocBugsTest:testBug68726negative2()
48932=JavadocBugsTest:testBug45782()
48933=JavadocBugsTest:testBug66551a()
48934=JavadocBugsTest:testBug65174d()
48935=JavadocBugsTest:testBug80910()
48936=JavadocBugsTest:testBug103304b()
48937=JavadocBugsTest:testBug281609a()
48938=JavadocBugsTest:testBug45782a()
48939=JavadocBugsTest:testBug68017conform()
48940=JavadocBugsTest:testBug74369deprecated()
48941=JavadocBugsTest:testBug129241d()
48942=JavadocBugsTest:testBug170637()
48943=JavadocBugsTest:testBug153399d()
48944=JavadocBugsTest:testBug69272classInvalid()
48945=JavadocBugsTest:testBug69302negative2()
48946=JavadocBugsTest:testBug168849e()
48947=JavadocBugsTest:testBug177009b()
48948=JavadocBugsTest:testBug258798_3()
48949=JavadocBugsTest:testBug66551c()
48950=JavadocBugsTest:testBug65174b()
48951=JavadocBugsTest:testBug221539c()
48952=JavadocBugsTest:testBug247037()
48953=JavadocBugsTest:testBug129241b()
48954=JavadocBugsTest:testBug222902()
48955=JavadocBugsTest:testBug69272fieldInvalid()
48956=JavadocBugsTest:testBug51529a()
48957=JavadocBugsTest:testBug73352d()
48958=JavadocBugsTest:testBug258798_1()
48959=JavadocBugsTest:testBug168849c()
48960=JavadocBugsTest:testBug48376a()
48961=JavadocBugsTest:getCompilerOptions()
48962=JavadocBugsTest:testBug116464()
48963=JavadocBugsTest:testBug52216b()
48964=Test:foo()
48965=AptCorePreferenceInitializer:initializeDefaultPreferences()
48966=Test:Test()
48967=Annotation:traverse(ASTVisitor, BlockScope)
48968=Annotation:traverse(ASTVisitor, ClassScope)
48969=Annotation:traverse(ASTVisitor, CompilationUnitScope)
48970=Annotation:printExpression(int, StringBuffer)
48971=AccessRestriction:getProblemId()
48972=AccessRestriction:ignoreIfBetter()
48973=AccessRestriction:AccessRestriction(AccessRule, byte, String)
48974=X01:foo(int, int)
48975=Test:n()
48976=Test:Test(int)
48977=TestB1:foo()
48978=TestB1:bar()
48979=A:B:foo()
48980=CompletionUnitStructureRequestor:createField(JavaElement, FieldInfo)
48981=CompletionUnitStructureRequestor:createImportContainer(ICompilationUnit)
48982=CompletionUnitStructureRequestor:createMethodHandle(JavaElement, MethodInfo)
48983=CompletionUnitStructureRequestor:createAnnotation(JavaElement, String)
48984=CompletionUnitStructureRequestor:getMemberValue(org.eclipse.jdt.internal.core.MemberValuePair, Expression)
48985=CompletionUnitStructureRequestor:createTypeHandle(JavaElement, TypeInfo)
48986=CompletionUnitStructureRequestor:getMemberValuePairs(MemberValuePair[])
48987=CompletionUnitStructureRequestor:acceptAnnotation(org.eclipse.jdt.internal.compiler.ast.Annotation, AnnotatableInfo, JavaElement)
48988=CompletionUnitStructureRequestor:createImportDeclaration(ImportContainer, String, boolean)
48989=CompletionUnitStructureRequestor:createTypeParameter(JavaElement, String)
48990=CompletionUnitStructureRequestor:createPackageDeclaration(JavaElement, String)
48991=CompletionUnitStructureRequestor:createInitializer(JavaElement)
48992=CompletionUnitStructureRequestor:CompletionUnitStructureRequestor(ICompilationUnit, CompilationUnitElementInfo, Parser, ASTNode, Map, Map, Map, Map)
48993=CompletionUnitStructureRequestor:hasEmptyName(TypeReference, ASTNode)
48994=B:foo(int)
48995=CompletionFlags:isStaticImport(int)
48996=CompletionFlags:CompletionFlags()
48997=A:launch(ILaunchConfiguration, String, ILaunch, IProgressMonitor)
48998=TestAll:TestAll(String)
48999=TestAll:suite()
49000=IBinaryField:getTypeName()
49001=IBinaryField:getGenericSignature()
49002=IBinaryField:getConstant()
49003=ClasspathJar:PackageCacheEntry:PackageCacheEntry(long, long, SimpleSet)
49004=ClasspathJar:findPackageSet(ClasspathJar)
49005=ClasspathJar:ClasspathJar(IFile, AccessRuleSet, IPath)
49006=ClasspathJar:ClasspathJar(ZipFile, AccessRuleSet, IPath)
49007=ClasspathJar:ClasspathJar(String, long, AccessRuleSet, IPath)
49008=ClasspathJar:isPackage(String)
49009=ClasspathJar:debugPathString()
49010=ClasspathJar:hashCode()
49011=ClasspathJar:lastModified()
49012=ClasspathJar:equals(Object)
49013=ClasspathJar:cleanup()
49014=ClasspathJar:toString()
49015=ClasspathJar:findClass(String, String, String)
49016=ClasspathJar:getProjectRelativePath()
49017=X:getStrings()
49018=Test:main(String[])
49019=A:foo()
49020=SubstringCompletionTests:testLocalVariable()
49021=SubstringCompletionTests:testClassTypeParamDeclaration()
49022=SubstringCompletionTests:setUpSuite()
49023=SubstringCompletionTests:testInnerClassTypeThrowsDeclaration()
49024=SubstringCompletionTests:tearDownSuite()
49025=SubstringCompletionTests:testStaticNestedClassTypeParamDeclaration()
49026=SubstringCompletionTests:testInnerClassTypeParamDeclaration()
49027=SubstringCompletionTests:testInnerClassTypeImplements()
49028=SubstringCompletionTests:testInnerClassTypeInstantiation()
49029=SubstringCompletionTests:testUnqualifiedNonStaticMethod()
49030=SubstringCompletionTests:testLocalClassTypeExtends()
49031=SubstringCompletionTests:testClassTypeLocalVarDeclaration()
49032=SubstringCompletionTests:testStaticNestedClassTypeThrowsDeclaration()
49033=SubstringCompletionTests:testClassTypeImplements()
49034=SubstringCompletionTests:testClassTypeInstantiation()
49035=SubstringCompletionTests:testQualifiedStaticField()
49036=SubstringCompletionTests:testBug488441_4()
49037=SubstringCompletionTests:testStaticNestedClassTypeLocalVarDeclaration()
49038=SubstringCompletionTests:testUnqualifiedStaticField()
49039=SubstringCompletionTests:testStaticNestedClassTypeFieldDeclaration()
49040=SubstringCompletionTests:testClassTypeFieldDeclaration()
49041=SubstringCompletionTests:testBug488441_2()
49042=SubstringCompletionTests:testMethodParamVariable()
49043=SubstringCompletionTests:testBug488441_8()
49044=SubstringCompletionTests:testStaticNestedClassTypeInstantiation()
49045=SubstringCompletionTests:testInnerClassTypeLocalVarDeclaration()
49046=SubstringCompletionTests:testBug488441_6()
49047=SubstringCompletionTests:testQualifiedNonStaticField()
49048=SubstringCompletionTests:testUnqualifiedNonStaticField()
49049=SubstringCompletionTests:SubstringCompletionTests(String)
49050=SubstringCompletionTests:suite()
49051=SubstringCompletionTests:testQualifiedNonStaticMethod()
49052=SubstringCompletionTests:testInnerClassTypeFieldDeclaration()
49053=SubstringCompletionTests:testLocalClassTypeInstantiation()
49054=SubstringCompletionTests:testInnerClassTypeExtends()
49055=SubstringCompletionTests:testLocalClassTypeLocalVarDeclaration()
49056=SubstringCompletionTests:testUnqualifiedStaticMethod()
49057=SubstringCompletionTests:testClassTypeThrowsDeclaration()
49058=SubstringCompletionTests:testStaticNestedClassTypeImplements()
49059=SubstringCompletionTests:testBug488441_3()
49060=SubstringCompletionTests:testBug488441_1()
49061=SubstringCompletionTests:testStaticNestedClassTypeExtends()
49062=SubstringCompletionTests:testClassTypeExtends()
49063=SubstringCompletionTests:testBug488441_7()
49064=SubstringCompletionTests:testQualifiedStaticMethod()
49065=SubstringCompletionTests:testBug488441_5()
49066=CompletionUnaryOperator2:foo()
49067=MethodNameRequestorWrapper:MethodNameRequestorWrapper(MethodNameRequestor)
49068=MethodNameRequestorWrapper:acceptMethod(char[], int, char[], char[], int, char[], char[], char[][], char[][], char[], int, String, AccessRestriction, int)
49069=PrimitiveTypeImpl:getKind(BaseTypeBinding)
49070=PrimitiveTypeImpl:PrimitiveTypeImpl(BaseTypeBinding)
49071=PrimitiveTypeImpl:PrimitiveTypeImpl(BaseProcessingEnvImpl, BaseTypeBinding)
49072=PrimitiveTypeImpl:accept(TypeVisitor<R, P>, P)
49073=PrimitiveTypeImpl:getKind()
49074=A:foo()
49075=Semaphore:acquire(long)
49076=Semaphore:Semaphore(String, int)
49077=Semaphore:release()
49078=Semaphore:acquire()
49079=Semaphore:Semaphore()
49080=Semaphore:Semaphore(int)
49081=Semaphore:getCurrentPemissions()
49082=X:foo()
49083=CompilationUnit:getContents()
49084=CompilationUnit:toString()
49085=CompilationUnit:getPackageName()
49086=CompilationUnit:CompilationUnit(char[], String, String)
49087=CompilationUnit:CompilationUnit(char[], String, String, String, boolean)
49088=CompilationUnit:getMainTypeName()
49089=CompilationUnit:CompilationUnit(char[], String, String, String)
49090=CompilationUnit:getFileName()
49091=CompilationUnit:ignoreOptionalProblems()
49092=CopyElementsOperation:getSourceFor(IJavaElement)
49093=CopyElementsOperation:getMainTaskName()
49094=CopyElementsOperation:resolveRenameAnchor(IJavaElement)
49095=CopyElementsOperation:getNestedOperation(IJavaElement)
49096=CopyElementsOperation:CopyElementsOperation(IJavaElement[], IJavaElement[], boolean)
49097=CopyElementsOperation:processElement(IJavaElement)
49098=CopyElementsOperation:CopyElementsOperation(IJavaElement[], IJavaElement, boolean)
49099=CopyElementsOperation:isRenamingMainType(IJavaElement, IJavaElement)
49100=CopyElementsOperation:verify(IJavaElement)
49101=CopyElementsOperation:verify()
49102=A:theMethod()
49103=Example:foo()
49104=X03:foo()
49105=X:foo(String, Object)
49106=X:foo(String, String)
49107=X:foo(String, String[])
49108=X:foo()
49109=Y31985:foo()
49110=CachedIndexEntry:CachedIndexEntry(char[], int)
49111=PostfixExpression:subtreeMatch0(ASTMatcher, Object)
49112=PostfixExpression:setOperator(PostfixExpression.Operator)
49113=PostfixExpression:Operator:toOperator(String)
49114=PostfixExpression:setOperand(Expression)
49115=PostfixExpression:internalStructuralPropertiesForType(int)
49116=PostfixExpression:clone0(AST)
49117=PostfixExpression:getOperand()
49118=PostfixExpression:treeSize()
49119=PostfixExpression:getNodeType0()
49120=PostfixExpression:internalGetSetObjectProperty(SimplePropertyDescriptor, boolean, Object)
49121=PostfixExpression:accept0(ASTVisitor)
49122=PostfixExpression:Operator:Operator(String)
49123=PostfixExpression:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
49124=PostfixExpression:propertyDescriptors(int)
49125=PostfixExpression:memSize()
49126=PostfixExpression:getOperator()
49127=PostfixExpression:Operator:toString()
49128=PostfixExpression:PostfixExpression(AST)
49129=Test:foo()
49130=ExpressionContextTests:test011()
49131=ExpressionContextTests:test022()
49132=ExpressionContextTests:test020()
49133=ExpressionContextTests:test015()
49134=ExpressionContextTests:test002()
49135=ExpressionContextTests:test013()
49136=ExpressionContextTests:test019()
49137=ExpressionContextTests:test006()
49138=ExpressionContextTests:test017()
49139=ExpressionContextTests:test004()
49140=ExpressionContextTests:testClass()
49141=ExpressionContextTests:test008()
49142=ExpressionContextTests:test010()
49143=ExpressionContextTests:ExpressionContextTests(String)
49144=ExpressionContextTests:test021()
49145=ExpressionContextTests:test003()
49146=ExpressionContextTests:test014()
49147=ExpressionContextTests:test001()
49148=ExpressionContextTests:test012()
49149=ExpressionContextTests:test007()
49150=ExpressionContextTests:test018()
49151=ExpressionContextTests:suite()
49152=ExpressionContextTests:test005()
49153=ExpressionContextTests:getCompilerOptions()
49154=ExpressionContextTests:test016()
49155=ExpressionContextTests:test009()
49156=X28d:foo(String)
49157=X14d:foo()
49158=A:method(String)
49159=TypeUtilsProc:process(Set<? extends TypeElement>, RoundEnvironment)
49160=TypeUtilsProc:examineTypesAsMemberOfSubclass()
49161=TypeUtilsProc:examineGetArrayTypeParameterized()
49162=TypeUtilsProc:examineNoType()
49163=TypeUtilsProc:examineTypesAsMemberOf()
49164=TypeUtilsProc:examineGetDeclaredTypeParameterized()
49165=TypeUtilsProc:examinePrimitives()
49166=TypeUtilsProc:examineGetDeclaredType()
49167=TypeUtilsProc:examineGetDeclaredTypeNested()
49168=TypeUtilsProc:innerTestAsMemberOf(String, DeclaredType, TypeElement)
49169=JavadocImportReference:JavadocImportReference(char[][], long[], int, int)
49170=NonEclipseImplementationException:NonEclipseImplementationException()
49171=NonEclipseImplementationException:NonEclipseImplementationException(String)
49172=Test:junk3()
49173=Test:Test(int)
49174=Test:junk2()
49175=Test:junk1(int)
49176=Test:foo()
49177=X:foo()
49178=X:X(String)
49179=A:main(String[])
49180=ErrorsTests:test0101()
49181=ErrorsTests:test0103()
49182=ErrorsTests:test0105()
49183=ErrorsTests:test0107()
49184=ErrorsTests:getResourceOuput(IResource[])
49185=ErrorsTests:test0109()
49186=ErrorsTests:suite()
49187=ErrorsTests:testErrors()
49188=ErrorsTests:test0111()
49189=ErrorsTests:test0100()
49190=ErrorsTests:ErrorsTests(String)
49191=ErrorsTests:test0102()
49192=ErrorsTests:test0104()
49193=ErrorsTests:test0106()
49194=ErrorsTests:test0108()
49195=ErrorsTests:testRenameToNonJava()
49196=ErrorsTests:test0110()
49197=ErrorsTests:test0112()
49198=ObjectVector:size()
49199=ObjectVector:add(Object)
49200=ObjectVector:removeAll()
49201=ObjectVector:toString()
49202=ObjectVector:ObjectVector(int)
49203=ObjectVector:find(Object)
49204=ObjectVector:contains(Object)
49205=ObjectVector:copyInto(Object[])
49206=ObjectVector:ObjectVector()
49207=ObjectVector:containsIdentical(Object)
49208=ObjectVector:remove(Object)
49209=ObjectVector:addAll(Object[])
49210=ObjectVector:addAll(ObjectVector)
49211=ObjectVector:elementAt(int)
49212=ObjectVector:copyInto(Object[], int)
49213=DietCompletionTest:test31()
49214=DietCompletionTest:test20()
49215=DietCompletionTest:test53()
49216=DietCompletionTest:suite()
49217=DietCompletionTest:test42()
49218=DietCompletionTest:DietCompletionTest(String)
49219=DietCompletionTest:test51()
49220=DietCompletionTest:test40()
49221=DietCompletionTest:test09()
49222=DietCompletionTest:test18()
49223=DietCompletionTest:test07()
49224=DietCompletionTest:test29()
49225=DietCompletionTest:test16()
49226=DietCompletionTest:test34c()
49227=DietCompletionTest:test05()
49228=DietCompletionTest:test38()
49229=DietCompletionTest:test27()
49230=DietCompletionTest:test14()
49231=DietCompletionTest:test03()
49232=DietCompletionTest:test49()
49233=DietCompletionTest:test36()
49234=DietCompletionTest:test25()
49235=DietCompletionTest:test12()
49236=DietCompletionTest:test47()
49237=DietCompletionTest:test01()
49238=DietCompletionTest:test34()
49239=DietCompletionTest:test23()
49240=DietCompletionTest:test10()
49241=DietCompletionTest:test45()
49242=DietCompletionTest:test32()
49243=DietCompletionTest:test21()
49244=DietCompletionTest:test54()
49245=DietCompletionTest:test43()
49246=DietCompletionTest:test30()
49247=DietCompletionTest:test52()
49248=DietCompletionTest:test41()
49249=DietCompletionTest:test50()
49250=DietCompletionTest:test19()
49251=DietCompletionTest:test08()
49252=DietCompletionTest:test34a()
49253=DietCompletionTest:test17()
49254=DietCompletionTest:test06()
49255=DietCompletionTest:test39()
49256=DietCompletionTest:test28()
49257=DietCompletionTest:test15()
49258=DietCompletionTest:test04()
49259=DietCompletionTest:test34b()
49260=DietCompletionTest:test37()
49261=DietCompletionTest:test26()
49262=DietCompletionTest:test13()
49263=DietCompletionTest:test02()
49264=DietCompletionTest:test48()
49265=DietCompletionTest:test35()
49266=DietCompletionTest:test24()
49267=DietCompletionTest:test11()
49268=DietCompletionTest:test46()
49269=DietCompletionTest:test33()
49270=DietCompletionTest:test22()
49271=DietCompletionTest:test55()
49272=DietCompletionTest:test44()
49273=Protectable:protect()
49274=InvalidInputException:InvalidInputException(String)
49275=InvalidInputException:InvalidInputException()
49276=Round2GenAnnotationFactory:supportedOptions()
49277=Round2GenAnnotationFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
49278=Round2GenAnnotationFactory:supportedAnnotationTypes()
49279=AbstractCompletionTest:checkParse(String, String, String, String, String, String, CompletionParser, CompilationUnitDeclaration)
49280=AbstractCompletionTest:runTestCheckMethodParse(String, String, String, String, String, String, String[], String)
49281=AbstractCompletionTest:checkDietParse(char[], int, String, String, String, String, String, String)
49282=AbstractCompletionTest:concatResults(String, String, String, String, String)
49283=AbstractCompletionTest:checkMethodParse(char[], int, String, String, String, String, String, String)
49284=AbstractCompletionTest:checkMethodParse(char[], int, String, String, String, String, String, String[], String)
49285=AbstractCompletionTest:checkMethodParse(char[], int, String, String, String, String, String)
49286=AbstractCompletionTest:runTestCheckDietParse(String, String, String, String, String, String, String)
49287=AbstractCompletionTest:checkMethodParse(char[], int, String, String, String, String, String[], String)
49288=AbstractCompletionTest:runTestCheckMethodParse(String, String, String, String, String, String, String)
49289=AbstractCompletionTest:AbstractCompletionTest(String)
49290=AbstractCompletionTest:checkDietParse(char[], int, String, String, String, String, String)
49291=AbstractCompletionTest:findMethod(TypeDeclaration, int)
49292=ArrayBinding:kind()
49293=ArrayBinding:problemId()
49294=ArrayBinding:closestMatch()
49295=ArrayBinding:setTypeAnnotations(AnnotationBinding[], boolean)
49296=ArrayBinding:elementsType()
49297=ArrayBinding:leafComponentType()
49298=ArrayBinding:getPackage()
49299=ArrayBinding:swapUnresolved(UnresolvedReferenceBinding, ReferenceBinding, LookupEnvironment)
49300=ArrayBinding:debugName()
49301=ArrayBinding:substituteInferenceVariable(InferenceVariable, TypeBinding)
49302=ArrayBinding:hashCode()
49303=ArrayBinding:shortReadableName()
49304=ArrayBinding:isArrayClone(TypeBinding, MethodBinding)
49305=ArrayBinding:mentionsAny(TypeBinding[], int)
49306=ArrayBinding:annotatedDebugName()
49307=ArrayBinding:sourceName()
49308=ArrayBinding:collectInferenceVariables(Set<InferenceVariable>)
49309=ArrayBinding:isSubtypeOf(TypeBinding)
49310=ArrayBinding:isProperType(boolean)
49311=ArrayBinding:acceptsNonNullDefault()
49312=ArrayBinding:computeUniqueKey(boolean)
49313=ArrayBinding:dimensions()
49314=ArrayBinding:qualifiedSourceName()
49315=ArrayBinding:unannotated()
49316=ArrayBinding:getCloneMethod(MethodBinding)
49317=ArrayBinding:isCompatibleWith(TypeBinding, Scope)
49318=ArrayBinding:erasure()
49319=ArrayBinding:genericTypeSignature()
49320=ArrayBinding:ArrayBinding(TypeBinding, int, LookupEnvironment)
49321=ArrayBinding:readableName()
49322=ArrayBinding:uncapture(Scope)
49323=ArrayBinding:constantPoolName()
49324=ArrayBinding:withoutToplevelNullAnnotation()
49325=ArrayBinding:collectMissingTypes(List<TypeBinding>)
49326=ArrayBinding:updateTagBits()
49327=ArrayBinding:toString()
49328=ArrayBinding:collectSubstitutes(Scope, TypeBinding, InferenceContext, int)
49329=ArrayBinding:nullAnnotatedReadableName(CompilerOptions, boolean)
49330=ArrayBinding:environment()
49331=IndexBinaryFolder:toString()
49332=IndexBinaryFolder:IndexBinaryFolder(IContainer, IndexManager)
49333=IndexBinaryFolder:hashCode()
49334=IndexBinaryFolder:updatedIndexState()
49335=IndexBinaryFolder:execute(IProgressMonitor)
49336=IndexBinaryFolder:equals(Object)
49337=X28b:foo()
49338=RunOnly335CompilerTests:tearDown()
49339=RunOnly335CompilerTests:getCompilerClasses()
49340=RunOnly335CompilerTests:suite()
49341=RunOnly335CompilerTests:RunOnly335CompilerTests(String)
49342=RunOnly335CompilerTests:addTestsToSuite(TestSuite, Class[])
49343=RunOnly335CompilerTests:getAllTestClasses()
49344=AnnotationMirrorProc:examineEscaping()
49345=AnnotationMirrorProc:examineToString()
49346=AnnotationMirrorProc:process(Set<? extends TypeElement>, RoundEnvironment)
49347=JavaSearchGenericTypeExactTests:JavaSearchGenericTypeExactTests(String)
49348=JavaSearchGenericTypeExactTests:addResultLine(StringBuffer, char[])
49349=JavaSearchGenericTypeExactTests:suite()
49350=JavaSearchGenericTypeExactTests:removeLastTypeArgument(char[])
49351=RoundCompleteEvent:getSource()
49352=RoundCompleteEvent:getRoundState()
49353=RoundCompleteEvent:RoundCompleteEvent(AnnotationProcessorEnvironment, RoundState)
49354=ElementsImpl:getElementValuesWithDefaults(AnnotationMirror)
49355=ElementsImpl:isDeprecated(Element)
49356=ElementsImpl:getUnparsedDocComment(Element)
49357=ElementsImpl:formatJavadoc(char[])
49358=ElementsImpl:getTypeElement(CharSequence)
49359=ElementsImpl:getStars(char[])
49360=ElementsImpl:printElements(Writer, Element)
49361=ElementsImpl:getPackageElement(CharSequence)
49362=ElementsImpl:getBinaryName(TypeElement)
49363=ElementsImpl:getDocComment(Element)
49364=ElementsImpl:getName(CharSequence)
49365=ElementsImpl:overrides(ExecutableElement, ExecutableElement, TypeElement)
49366=ElementsImpl:getConstantExpression(Object)
49367=ElementsImpl:addMembers(ReferenceBinding, boolean, Map<String, ReferenceBinding>, List<FieldBinding>, Map<String, Set<MethodBinding>>)
49368=ElementsImpl:isFunctionalInterface(TypeElement)
49369=ElementsImpl:collectSuperInterfaces(ReferenceBinding, Set<ReferenceBinding>, Set<ReferenceBinding>)
49370=ElementsImpl:getPackageOf(Element)
49371=ElementsImpl:getAllAnnotationMirrors(Element)
49372=ElementsImpl:getAllMembers(TypeElement)
49373=ElementsImpl:ElementsImpl(BaseProcessingEnvImpl)
49374=ElementsImpl:hides(Element, Element)
49375=X09:foo()
49376=EnumSelectionTest:EnumSelectionTest(String)
49377=EnumSelectionTest:test0001()
49378=Test:foo()
49379=JarIndexLocation:getInputStream()
49380=JarIndexLocation:close()
49381=JarIndexLocation:createNewFile()
49382=JarIndexLocation:equals(Object)
49383=JarIndexLocation:delete()
49384=JarIndexLocation:getIndexFile()
49385=JarIndexLocation:length()
49386=JarIndexLocation:lastModified()
49387=JarIndexLocation:fileName()
49388=JarIndexLocation:JarIndexLocation(URL, URL)
49389=JarIndexLocation:exists()
49390=JarIndexLocation:startsWith(IPath)
49391=JarIndexLocation:getCanonicalFilePath()
49392=A:bar()
49393=A:foo()
49394=TypeMethodReference:setName(SimpleName)
49395=TypeMethodReference:typeArguments()
49396=TypeMethodReference:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
49397=TypeMethodReference:getName()
49398=TypeMethodReference:accept0(ASTVisitor)
49399=TypeMethodReference:getType()
49400=TypeMethodReference:treeSize()
49401=TypeMethodReference:getNodeType0()
49402=TypeMethodReference:memSize()
49403=TypeMethodReference:clone0(AST)
49404=TypeMethodReference:setType(Type)
49405=TypeMethodReference:propertyDescriptors(int)
49406=TypeMethodReference:internalTypeArgumentsProperty()
49407=TypeMethodReference:internalGetChildListProperty(ChildListPropertyDescriptor)
49408=TypeMethodReference:subtreeMatch0(ASTMatcher, Object)
49409=TypeMethodReference:internalStructuralPropertiesForType(int)
49410=TypeMethodReference:TypeMethodReference(AST)
49411=X:foo()
49412=X:foo()
49413=X:X(String)
49414=TestBase:setUp()
49415=TestBase:disableJava5Factories(IJavaProject)
49416=TestBase:TestBase(String)
49417=TestBase:createJavaProject(String)
49418=TestBase:expectingNoFile(IProject, String)
49419=TestBase:addAnnotationJar(IJavaProject)
49420=TestBase:createJava8Project(String)
49421=TestBase:suite()
49422=TestBase:expectingFile(IProject, String)
49423=Reference:fieldBinding()
49424=Reference:analyseAssignment(BlockScope, FlowContext, FlowInfo, Assignment, boolean)
49425=Reference:generateCompoundAssignment(BlockScope, CodeStream, Expression, int, int, boolean)
49426=Reference:generateAssignment(BlockScope, CodeStream, Assignment, boolean)
49427=Reference:analyseCode(BlockScope, FlowContext, FlowInfo)
49428=Reference:generatePostIncrement(BlockScope, CodeStream, CompoundAssignment, boolean)
49429=Reference:fieldStore(CodeStream, FieldBinding, MethodBinding, boolean)
49430=Reference:Reference()
49431=A:bar()
49432=A:A(String)
49433=A:bar(int)
49434=A:bar(String)
49435=A:A()
49436=A:foo()
49437=Test:service()
49438=Test:main(String[])
49439=AbortMethod:AbortMethod(CompilationResult, IProblem)
49440=Test:foo()
49441=Test:foo(Exception)
49442=A:foo()
49443=A:foo(java.lang.String)
49444=Test:foo(Object)
49445=Test:m(int, int)
49446=A:Inner:Inner()
49447=I2:I2()
49448=FormaterBug:method2()
49449=FormaterBug:method6()
49450=FormaterBug:voidmethod4()
49451=FormaterBug:main(String[])
49452=FormaterBug:method1()
49453=FormaterBug:method5()
49454=FormaterBug:method3()
49455=FormaterBug:method7()
49456=X02:foo(int, int)
49457=ASTBasedExecutableDeclarationImpl:getThrownTypes()
49458=ASTBasedExecutableDeclarationImpl:getMethodAstNode()
49459=ASTBasedExecutableDeclarationImpl:getSimpleName()
49460=ASTBasedExecutableDeclarationImpl:isVarArgs()
49461=ASTBasedExecutableDeclarationImpl:accept(DeclarationVisitor)
49462=ASTBasedExecutableDeclarationImpl:toString()
49463=ASTBasedExecutableDeclarationImpl:getParameters()
49464=ASTBasedExecutableDeclarationImpl:ASTBasedExecutableDeclarationImpl(org.eclipse.jdt.core.dom.BodyDeclaration, IFile, BaseProcessorEnv)
49465=ASTBasedExecutableDeclarationImpl:getFormalTypeParameters()
49466=SuperReference:isImplicitThis()
49467=SuperReference:traverse(ASTVisitor, BlockScope)
49468=SuperReference:implicitSuperConstructorCall()
49469=SuperReference:SuperReference(int, int)
49470=SuperReference:isThis()
49471=SuperReference:isUnqualifiedSuper()
49472=SuperReference:resolveType(BlockScope)
49473=SuperReference:isSuper()
49474=SuperReference:printExpression(int, StringBuffer)
49475=EfficiencyTests:testLocalTypeAddition()
49476=EfficiencyTests:testProjectAsClassFolder()
49477=EfficiencyTests:testEfficiency()
49478=EfficiencyTests:EfficiencyTests(String)
49479=EfficiencyTests:testMethodAddition()
49480=EfficiencyTests:testLocalTypeRemoval2()
49481=EfficiencyTests:testMissingType001()
49482=EfficiencyTests:suite()
49483=EfficiencyTests:testLocalTypeRemoval()
49484=EfficiencyTests:testLocalTypeAddition2()
49485=MessageSend:printExpression(int, StringBuffer)
49486=MessageSend:isSuperAccess()
49487=MessageSend:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo)
49488=MessageSend:setDepth(int)
49489=MessageSend:setActualReceiverType(ReferenceBinding)
49490=MessageSend:setFieldIndex(int)
49491=MessageSend:analyseCode(BlockScope, FlowContext, FlowInfo)
49492=MessageSend:generateCode(BlockScope, CodeStream, boolean)
49493=MessageSend:resolveType(BlockScope)
49494=MessageSend:isTypeAccess()
49495=MessageSend:setExpectedType(TypeBinding)
49496=MessageSend:traverse(ASTVisitor, BlockScope)
49497=MessageSend:genericTypeArguments()
49498=MessageSend:computeConversion(Scope, TypeBinding, TypeBinding)
49499=ImportEntry:ImportEntry(ImportName)
49500=ImportEntry:isOriginal()
49501=ImportEntry:asOriginalImportEntry()
49502=Default:foo()
49503=FloatUtil:valueOfHexFloatLiteral(char[])
49504=FloatUtil:convertHexFloatingPointLiteralToBits(char[])
49505=FloatUtil:valueOfHexDoubleLiteral(char[])
49506=X:caller()
49507=X:method(Map<String, String>)
49508=X:foo()
49509=AttachSourceTests:testRootPath3()
49510=AttachSourceTests:testLibFolder()
49511=AttachSourceTests:testGetSourceRangeInnerClass()
49512=AttachSourceTests:testInnerClass9()
49513=AttachSourceTests:testClassFileGetElementAt03()
49514=AttachSourceTests:testRootPath5()
49515=AttachSourceTests:testZIPArchive3()
49516=AttachSourceTests:testPersistence()
49517=AttachSourceTests:testInnerClass7()
49518=AttachSourceTests:testZIPArchive1()
49519=AttachSourceTests:testExternalFolder5()
49520=AttachSourceTests:setUpSuite()
49521=AttachSourceTests:testChangeSourceAttachmentFile()
49522=AttachSourceTests:testBug153133()
49523=AttachSourceTests:testGeneric8()
49524=AttachSourceTests:testBug336046()
49525=AttachSourceTests:testExternalFolder3()
49526=AttachSourceTests:AttachSourceTests(String)
49527=AttachSourceTests:testInnerClass10()
49528=AttachSourceTests:testInnerClass2()
49529=AttachSourceTests:testBug110172()
49530=AttachSourceTests:testGeneric6()
49531=AttachSourceTests:testClassFileBuffer()
49532=AttachSourceTests:testProjectAsSourceAttachment()
49533=AttachSourceTests:tearDownSuite()
49534=AttachSourceTests:testProjectAsClassFolder1()
49535=AttachSourceTests:testGeneric4()
49536=AttachSourceTests:testRootPath13()
49537=AttachSourceTests:testInnerClass6()
49538=AttachSourceTests:testGeneric2()
49539=AttachSourceTests:testRootPath6()
49540=AttachSourceTests:testGetNameRange01()
49541=AttachSourceTests:testRootPath11()
49542=AttachSourceTests:testInnerClass4()
49543=AttachSourceTests:setUpGenericJar()
49544=AttachSourceTests:testRootPath8()
49545=AttachSourceTests:test267046()
49546=AttachSourceTests:testASTParsing2()
49547=AttachSourceTests:testGetNameRange03()
49548=AttachSourceTests:testGetSourceRange()
49549=AttachSourceTests:testClassFileGetElementAt04()
49550=AttachSourceTests:testRootPath2()
49551=AttachSourceTests:testConstructorAccess()
49552=AttachSourceTests:runConversion(IClassFile, boolean)
49553=AttachSourceTests:setUp()
49554=AttachSourceTests:testClassFileInOutput()
49555=AttachSourceTests:testInnerClass8()
49556=AttachSourceTests:testClassFileGetElementAt02()
49557=AttachSourceTests:tearDown()
49558=AttachSourceTests:testGetSourceAttachmentPath()
49559=AttachSourceTests:testRootPath4()
49560=AttachSourceTests:testZIPArchive4()
49561=AttachSourceTests:testExternalFolder4()
49562=AttachSourceTests:testZIPArchive2()
49563=AttachSourceTests:testGeneric7()
49564=AttachSourceTests:testASTParsing()
49565=AttachSourceTests:testExternalFolder2()
49566=AttachSourceTests:test88265()
49567=AttachSourceTests:testGeneric5()
49568=AttachSourceTests:testRootPath()
49569=AttachSourceTests:testClassRetrieval()
49570=AttachSourceTests:testInnerClass1()
49571=AttachSourceTests:testExternalFolder1()
49572=AttachSourceTests:testRestart()
49573=AttachSourceTests:testGeneric3()
49574=AttachSourceTests:testProjectAsClassFolder2()
49575=AttachSourceTests:testMethodRetrieval()
49576=AttachSourceTests:suite()
49577=AttachSourceTests:testClassFileGetElementAt01()
49578=AttachSourceTests:testGeneric1()
49579=AttachSourceTests:testRootPath7()
49580=AttachSourceTests:testGetNameRange02()
49581=AttachSourceTests:testRootPath12()
49582=AttachSourceTests:getExternalFolder()
49583=AttachSourceTests:test264301()
49584=AttachSourceTests:setUpInnerClassesJar()
49585=AttachSourceTests:testInnerClass5()
49586=AttachSourceTests:testDetachSource()
49587=AttachSourceTests:testRootPath9()
49588=AttachSourceTests:testGetNameRange04()
49589=AttachSourceTests:setupExternalLibrary()
49590=AttachSourceTests:testRootPath10()
49591=AttachSourceTests:testInnerClass3()
49592=ConditionalFlowInfo:toString()
49593=ConditionalFlowInfo:markAsDefinitelyAssigned(LocalVariableBinding)
49594=ConditionalFlowInfo:isPotentiallyAssigned(FieldBinding)
49595=ConditionalFlowInfo:reachMode()
49596=ConditionalFlowInfo:isPotentiallyAssigned(LocalVariableBinding)
49597=ConditionalFlowInfo:setReachMode(int)
49598=ConditionalFlowInfo:unconditionalInits()
49599=ConditionalFlowInfo:isReachable()
49600=ConditionalFlowInfo:mergedWith(UnconditionalFlowInfo)
49601=ConditionalFlowInfo:ConditionalFlowInfo(FlowInfo, FlowInfo)
49602=ConditionalFlowInfo:initsWhenTrue()
49603=ConditionalFlowInfo:markAsDefinitelyNotAssigned(FieldBinding)
49604=ConditionalFlowInfo:markAsDefinitelyNotAssigned(LocalVariableBinding)
49605=ConditionalFlowInfo:copy()
49606=ConditionalFlowInfo:addPotentialInitializationsFrom(FlowInfo)
49607=ConditionalFlowInfo:initsWhenFalse()
49608=ConditionalFlowInfo:addInitializationsFrom(FlowInfo)
49609=ConditionalFlowInfo:isDefinitelyAssigned(FieldBinding)
49610=ConditionalFlowInfo:isDefinitelyAssigned(LocalVariableBinding)
49611=ConditionalFlowInfo:asNegatedCondition()
49612=ConditionalFlowInfo:markAsDefinitelyAssigned(FieldBinding)
49613=X:foo()
49614=IDOMMember:getFlags()
49615=IDOMMember:setComment(String)
49616=IDOMMember:getComment()
49617=IDOMMember:setFlags(int)
49618=TestCase:run()
49619=TestCase:countTestCases()
49620=TestCase:run(TestResult)
49621=TestCase:runTest()
49622=TestCase:createResult()
49623=TestCase:setName(String)
49624=TestCase:TestCase(String)
49625=TestCase:getName()
49626=TestCase:setUp()
49627=TestCase:tearDown()
49628=TestCase:TestCase()
49629=TestCase:toString()
49630=TestCase:runBare()
49631=ElementImpl:getFileName()
49632=ElementImpl:asType()
49633=ElementImpl:getAnnotationsByType(Class<A>)
49634=ElementImpl:equals(Object)
49635=ElementImpl:hides(Element)
49636=ElementImpl:getSimpleName()
49637=ElementImpl:getPackedAnnotationBindings()
49638=ElementImpl:hashCode()
49639=ElementImpl:getModifiers()
49640=ElementImpl:getAnnotationMirrors()
49641=ElementImpl:getAnnotationBindings()
49642=ElementImpl:ElementImpl(BaseProcessingEnvImpl, Binding)
49643=ElementImpl:getAnnotation(Class<A>)
49644=ElementImpl:getPackage()
49645=ElementImpl:toString()
49646=Test:foo()
49647=Test:foo(Vector)
49648=X:foo(E)
49649=X:X(E)
49650=X:X()
49651=FieldDeclarationMatch:FieldDeclarationMatch(IJavaElement, int, int, int, SearchParticipant, IResource)
49652=GenericsRegressionTest_1_7:test001f()
49653=GenericsRegressionTest_1_7:test428220()
49654=GenericsRegressionTest_1_7:test0015()
49655=GenericsRegressionTest_1_7:test0026()
49656=GenericsRegressionTest_1_7:test0016a()
49657=GenericsRegressionTest_1_7:testBug469653()
49658=GenericsRegressionTest_1_7:test0037()
49659=GenericsRegressionTest_1_7:test007a()
49660=GenericsRegressionTest_1_7:test001h()
49661=GenericsRegressionTest_1_7:test0017()
49662=GenericsRegressionTest_1_7:test0028()
49663=GenericsRegressionTest_1_7:test0016c()
49664=GenericsRegressionTest_1_7:test0039()
49665=GenericsRegressionTest_1_7:test0046()
49666=GenericsRegressionTest_1_7:test001b()
49667=GenericsRegressionTest_1_7:test0057()
49668=GenericsRegressionTest_1_7:test449619()
49669=GenericsRegressionTest_1_7:test0022()
49670=GenericsRegressionTest_1_7:test0052d()
49671=GenericsRegressionTest_1_7:test0033()
49672=GenericsRegressionTest_1_7:test0048()
49673=GenericsRegressionTest_1_7:test001d()
49674=GenericsRegressionTest_1_7:test0059()
49675=GenericsRegressionTest_1_7:test0024()
49676=GenericsRegressionTest_1_7:testBug462083()
49677=GenericsRegressionTest_1_7:test0052b()
49678=GenericsRegressionTest_1_7:test0035()
49679=GenericsRegressionTest_1_7:test008()
49680=GenericsRegressionTest_1_7:test004c()
49681=GenericsRegressionTest_1_7:test0042()
49682=GenericsRegressionTest_1_7:test0053()
49683=GenericsRegressionTest_1_7:test0034b()
49684=GenericsRegressionTest_1_7:test427728b()
49685=GenericsRegressionTest_1_7:test006()
49686=GenericsRegressionTest_1_7:testBug456508()
49687=GenericsRegressionTest_1_7:test0044()
49688=GenericsRegressionTest_1_7:test0055()
49689=GenericsRegressionTest_1_7:test0020()
49690=GenericsRegressionTest_1_7:test375394a()
49691=GenericsRegressionTest_1_7:test0031()
49692=GenericsRegressionTest_1_7:test0060a()
49693=GenericsRegressionTest_1_7:test442929()
49694=GenericsRegressionTest_1_7:test0060()
49695=GenericsRegressionTest_1_7:test001i()
49696=GenericsRegressionTest_1_7:test0056b()
49697=GenericsRegressionTest_1_7:test0018()
49698=GenericsRegressionTest_1_7:test002()
49699=GenericsRegressionTest_1_7:test0035a()
49700=GenericsRegressionTest_1_7:test0051()
49701=GenericsRegressionTest_1_7:GenericsRegressionTest_1_7(String)
49702=GenericsRegressionTest_1_7:test001h_2()
49703=GenericsRegressionTest_1_7:test0027()
49704=GenericsRegressionTest_1_7:test0038()
49705=GenericsRegressionTest_1_7:test448028()
49706=GenericsRegressionTest_1_7:test0049()
49707=GenericsRegressionTest_1_7:test001e()
49708=GenericsRegressionTest_1_7:test001c_1()
49709=GenericsRegressionTest_1_7:test0014()
49710=GenericsRegressionTest_1_7:test0029()
49711=GenericsRegressionTest_1_7:test0016b()
49712=GenericsRegressionTest_1_7:test001b_1()
49713=GenericsRegressionTest_1_7:test429733()
49714=GenericsRegressionTest_1_7:test001g()
49715=GenericsRegressionTest_1_7:test0016()
49716=GenericsRegressionTest_1_7:test0023()
49717=GenericsRegressionTest_1_7:testClass()
49718=GenericsRegressionTest_1_7:test0034()
49719=GenericsRegressionTest_1_7:test0045()
49720=GenericsRegressionTest_1_7:test001a()
49721=GenericsRegressionTest_1_7:test0056()
49722=GenericsRegressionTest_1_7:test0029a()
49723=GenericsRegressionTest_1_7:test0025()
49724=GenericsRegressionTest_1_7:test0052c()
49725=GenericsRegressionTest_1_7:test0036()
49726=GenericsRegressionTest_1_7:test0017a()
49727=GenericsRegressionTest_1_7:test0047()
49728=GenericsRegressionTest_1_7:test0018b()
49729=GenericsRegressionTest_1_7:test001c()
49730=GenericsRegressionTest_1_7:test0058()
49731=GenericsRegressionTest_1_7:test001g_1()
49732=GenericsRegressionTest_1_7:test0034a()
49733=GenericsRegressionTest_1_7:test0030()
49734=GenericsRegressionTest_1_7:test004b()
49735=GenericsRegressionTest_1_7:testBug488649_JDK6791481_ex1()
49736=GenericsRegressionTest_1_7:test0052()
49737=GenericsRegressionTest_1_7:test001f_1()
49738=GenericsRegressionTest_1_7:test0021()
49739=GenericsRegressionTest_1_7:test0032()
49740=GenericsRegressionTest_1_7:test007()
49741=GenericsRegressionTest_1_7:test0043()
49742=GenericsRegressionTest_1_7:test0054()
49743=GenericsRegressionTest_1_7:test0061()
49744=GenericsRegressionTest_1_7:test0014a()
49745=GenericsRegressionTest_1_7:test0056c()
49746=GenericsRegressionTest_1_7:test0019()
49747=GenericsRegressionTest_1_7:test0036a()
49748=GenericsRegressionTest_1_7:test429733a()
49749=GenericsRegressionTest_1_7:suite()
49750=GenericsRegressionTest_1_7:test001h_1()
49751=GenericsRegressionTest_1_7:test001()
49752=GenericsRegressionTest_1_7:test428220a()
49753=GenericsRegressionTest_1_7:test003()
49754=GenericsRegressionTest_1_7:test0050()
49755=A:Inner1:i()
49756=A:Inner2:xy()
49757=B:foo()
49758=A:Inner1:bar()
49759=EclipseMessager:printFixableError(String, String, String)
49760=EclipseMessager:printFixableWarning(SourcePosition, String, String, String)
49761=EclipseMessager:printFixableWarning(String, String, String)
49762=EclipseMessager:printError(ASTNode, String)
49763=EclipseMessager:printNotice(ASTNode, String)
49764=EclipseMessager:printFixableNotice(SourcePosition, String, String, String)
49765=EclipseMessager:printWarning(ASTNode, String)
49766=EclipseMessager:printFixableNotice(String, String, String)
49767=EclipseMessager:printFixableError(SourcePosition, String, String, String)
49768=TestValid1:foo2()
49769=TestValid1:foo1()
49770=A:A()
49771=IInnerClassesAttribute:getNumberOfClasses()
49772=IInnerClassesAttribute:getInnerClassAttributesEntries()
49773=X:main(String[])
49774=X:foo()
49775=A:lambdas()
49776=A:run()
49777=A:foo()
49778=EnumConstant:EnumConstant(CompilationResult)
49779=EnumConstant:traverse(ASTVisitor, CompilationUnitScope)
49780=EnumConstant:traverse(ASTVisitor, BlockScope)
49781=EnumConstant:print(int, StringBuffer)
49782=EnumConstant:traverse(ASTVisitor, ClassScope)
49783=BaseFactory:supportedOptions()
49784=BaseFactory:supportedAnnotationTypes()
49785=BaseFactory:BaseFactory(String, String)
49786=X21:createSearchPattern()
49787=Modifier:isTransient(int)
49788=Modifier:isPublic()
49789=Modifier:ModifierKeyword:fromFlagValue(int)
49790=Modifier:isVolatile(int)
49791=Modifier:isTransient()
49792=Modifier:isPrivate()
49793=Modifier:ModifierKeyword:toString()
49794=Modifier:isStrictfp()
49795=Modifier:getKeyword()
49796=Modifier:clone0(AST)
49797=Modifier:isProtected()
49798=Modifier:isFinal()
49799=Modifier:ModifierKeyword:toKeyword(String)
49800=Modifier:treeSize()
49801=Modifier:setKeyword(ModifierKeyword)
49802=Modifier:isStatic(int)
49803=Modifier:isFinal(int)
49804=Modifier:isDefault(int)
49805=Modifier:accept0(ASTVisitor)
49806=Modifier:internalGetSetObjectProperty(SimplePropertyDescriptor, boolean, Object)
49807=Modifier:isModifier()
49808=Modifier:Modifier(AST)
49809=Modifier:isAbstract(int)
49810=Modifier:isDefault()
49811=Modifier:isAbstract()
49812=Modifier:ModifierKeyword:ModifierKeyword(String, int)
49813=Modifier:isVolatile()
49814=Modifier:getNodeType0()
49815=Modifier:isStrictfp(int)
49816=Modifier:subtreeMatch0(ASTMatcher, Object)
49817=Modifier:isNative()
49818=Modifier:isSynchronized()
49819=Modifier:isStatic()
49820=Modifier:isAnnotation()
49821=Modifier:isProtected(int)
49822=Modifier:ModifierKeyword:toFlagValue()
49823=Modifier:isPrivate(int)
49824=Modifier:isNative(int)
49825=Modifier:isSynchronized(int)
49826=Modifier:isPublic(int)
49827=Modifier:propertyDescriptors(int)
49828=Modifier:memSize()
49829=Modifier:internalStructuralPropertiesForType(int)
49830=X10:bar()
49831=ttt:main()
49832=Scope:mostSpecificClassMethodBinding(MethodBinding[], int, InvocationSite)
49833=Scope:getBaseType(char[])
49834=Scope:getType(char[], PackageBinding)
49835=Scope:mostSpecificCommonType(TypeBinding[])
49836=Scope:connectTypeVariables(TypeParameter[])
49837=Scope:compareUncheckedException(ReferenceBinding)
49838=Scope:getMemberType(char[], ReferenceBinding)
49839=Scope:getConstructor(ReferenceBinding, TypeBinding[], InvocationSite)
49840=Scope:enclosingClassScope()
49841=Scope:getTypeOrPackage(char[], int)
49842=Scope:computeCompatibleMethod(MethodBinding, TypeBinding[], InvocationSite)
49843=Scope:greaterLowerBound(TypeBinding[])
49844=Scope:getJavaLangRuntimeException()
49845=Scope:findMethod(ReferenceBinding, char[], TypeBinding[], InvocationSite)
49846=Scope:getDeclarationModifiers()
49847=Scope:findVariable(char[])
49848=Scope:findExactMethod(ReferenceBinding, char[], TypeBinding[], InvocationSite)
49849=Scope:getJavaLangIterable()
49850=Scope:findMemberType(char[], ReferenceBinding)
49851=Scope:isDefinedInSameUnit(ReferenceBinding)
49852=Scope:getBinding(char[], int, InvocationSite, boolean)
49853=Scope:substitute(Substitution, TypeBinding[])
49854=Scope:mostSpecificInterfaceMethodBinding(MethodBinding[], int, InvocationSite)
49855=Scope:getMethod(TypeBinding, char[], TypeBinding[], InvocationSite)
49856=Scope:getField(TypeBinding, char[], InvocationSite)
49857=Scope:isInsideDeprecatedCode()
49858=Scope:convertToRawType(TypeBinding)
49859=Scope:getJavaIoSerializable()
49860=Scope:createTypeVariables(TypeParameter[], Binding)
49861=Scope:Scope(int, Scope)
49862=Scope:classScope()
49863=Scope:unboxing(int)
49864=Scope:leastContainingTypeArgument(TypeBinding, TypeBinding, ReferenceBinding, int)
49865=Scope:getJavaUtilIterator()
49866=Scope:isDefinedInMethod(MethodBinding)
49867=Scope:getJavaLangAssertionError()
49868=Scope:leastContainingInvocation(TypeBinding, List)
49869=Scope:getJavaLangClass()
49870=Scope:getJavaLangThrowable()
49871=Scope:getJavaLangError()
49872=Scope:mostSpecificMethodBinding(MethodBinding[], int, InvocationSite)
49873=Scope:findField(TypeBinding, char[], InvocationSite, boolean)
49874=Scope:methodScope()
49875=Scope:environment()
49876=Scope:getPackage(char[][])
49877=Scope:findType(char[], PackageBinding, PackageBinding)
49878=Scope:compilationUnitScope()
49879=Scope:getType(char[])
49880=Scope:enclosingMethodScope()
49881=Scope:lowerUpperBound(TypeBinding[])
49882=Scope:createArrayType(TypeBinding, int)
49883=Scope:minimalErasedCandidate(TypeBinding[], List)
49884=Scope:getType(char[][], int)
49885=Scope:getJavaLangString()
49886=Scope:findDirectMemberType(char[], ReferenceBinding)
49887=Scope:outerMostClassScope()
49888=Scope:substitute(Substitution, ReferenceBinding[])
49889=Scope:getJavaLangCloneable()
49890=Scope:problemReporter()
49891=Scope:getTypeOrPackage(char[][])
49892=Scope:getJavaLangObject()
49893=Scope:boxing(TypeBinding)
49894=Scope:enclosingSourceType()
49895=Scope:detectCycle(ReferenceBinding)
49896=Scope:findMethodForArray(ArrayBinding, char[], TypeBinding[], InvocationSite)
49897=Scope:getImplicitMethod(char[], TypeBinding[], InvocationSite)
49898=Scope:getCurrentPackage()
49899=Scope:findMethodInSuperInterfaces(ReferenceBinding, char[], ObjectVector, MethodBinding)
49900=Scope:startIndex()
49901=Scope:switchCase()
49902=Scope:isDefinedInType(ReferenceBinding)
49903=Scope:findDefaultAbstractMethod(ReferenceBinding, char[], TypeBinding[], InvocationSite, ReferenceBinding, MethodBinding, ObjectVector)
49904=Scope:unboxing(TypeBinding)
49905=Scope:outerMostMethodScope()
49906=Scope:boxing(int)
49907=Scope:createParameterizedType(ReferenceBinding, TypeBinding[], ReferenceBinding)
49908=Scope:isDefinedInField(FieldBinding)
49909=Scope:compareTypes(TypeBinding, TypeBinding)
49910=Scope:referenceCompilationUnit()
49911=A:outerMethod()
49912=A:C()
49913=IntegerCache:toString()
49914=IntegerCache:rehash()
49915=IntegerCache:size()
49916=IntegerCache:IntegerCache()
49917=IntegerCache:containsKey(int)
49918=IntegerCache:clear()
49919=IntegerCache:putIfAbsent(int, int)
49920=IntegerCache:hash(int)
49921=IntegerCache:IntegerCache(int)
49922=IntegerCache:put(int, int)
49923=ASTRewritingGroupNodeTest:ASTRewritingGroupNodeTest(String, int)
49924=ASTRewritingGroupNodeTest:suite()
49925=ASTRewritingGroupNodeTest:testCollapsedTargetNodes2()
49926=ASTRewritingGroupNodeTest:ASTRewritingGroupNodeTest(String)
49927=ASTRewritingGroupNodeTest:testCollapsedTargetNodes()
49928=Block:Block(AST)
49929=Block:accept0(ASTVisitor)
49930=Block:internalStructuralPropertiesForType(int)
49931=Block:treeSize()
49932=Block:clone0(AST)
49933=Block:subtreeMatch0(ASTMatcher, Object)
49934=Block:statements()
49935=Block:memSize()
49936=Block:getNodeType0()
49937=Block:propertyDescriptors(int)
49938=Block:internalGetChildListProperty(ChildListPropertyDescriptor)
49939=Test:main(String[])
49940=C:main(String[])
49941=A:goo(C)
49942=Multiple:Multiple(U1, U2, U3, Multiple<T1, T2, T3>)
49943=Multiple:Multiple(Multiple<T1, T2, T3>, U1, U2, U3)
49944=Multiple:Multiple(Multiple<T1, T2, T3>)
49945=Multiple:Multiple(T1, T2, T3)
49946=ImportComment:ImportComment(IRegion, int)
49947=Test:main(String[])
49948=ImportReference:print(int, StringBuffer)
49949=ImportReference:isStatic()
49950=ImportReference:ImportReference(char[][], long[], boolean, int)
49951=ImportReference:getImportName()
49952=ImportReference:print(int, StringBuffer, boolean)
49953=ImportReference:traverse(ASTVisitor, CompilationUnitScope)
49954=MethodInfoWithParameterAnnotations:toStringContent(StringBuffer)
49955=MethodInfoWithParameterAnnotations:initialize()
49956=MethodInfoWithParameterAnnotations:MethodInfoWithParameterAnnotations(MethodInfo, AnnotationInfo[], AnnotationInfo[][])
49957=MethodInfoWithParameterAnnotations:reset()
49958=MethodInfoWithParameterAnnotations:getAnnotatedParametersCount()
49959=MethodInfoWithParameterAnnotations:getParameterAnnotations(int, char[])
49960=IndexRequest:belongsTo(String)
49961=IndexRequest:ensureReadyToRun()
49962=IndexRequest:cancel()
49963=IndexRequest:updatedIndexState()
49964=IndexRequest:IndexRequest(IPath, IndexManager)
49965=IndexRequest:getJobFamily()
49966=AptConfigurationBlock:ProcessorOptionSorter:compare(Viewer, Object, Object)
49967=AptConfigurationBlock:saveProcessorOptions(List<ProcessorOption>)
49968=AptConfigurationBlock:createContents(Composite)
49969=AptConfigurationBlock:ProcessorOptionsAdapter:canEdit(DialogField, List<ProcessorOption>)
49970=AptConfigurationBlock:getFullBuildDialogStrings(boolean)
49971=AptConfigurationBlock:cacheOriginalValues()
49972=AptConfigurationBlock:settingsChanged(IScopeContext)
49973=AptConfigurationBlock:updateControls()
49974=AptConfigurationBlock:ProcessorOptionsAdapter:selectionChanged(ListDialogField<ProcessorOption>)
49975=AptConfigurationBlock:validateProcessorOptions()
49976=AptConfigurationBlock:ProcessorOptionsAdapter:tryToEdit(ListDialogField<ProcessorOption>)
49977=AptConfigurationBlock:ProcessorOptionsAdapter:dialogFieldChanged(DialogField)
49978=AptConfigurationBlock:saveSettings()
49979=AptConfigurationBlock:ProcessorOptionsAdapter:customButtonPressed(ListDialogField<ProcessorOption>, int)
49980=AptConfigurationBlock:performDefaults()
49981=AptConfigurationBlock:getAllKeys()
49982=AptConfigurationBlock:updateModel(DialogField)
49983=AptConfigurationBlock:ProcessorOptionsLabelProvider:getColumnImage(Object, int)
49984=AptConfigurationBlock:validateSettings(Key, String, String)
49985=AptConfigurationBlock:getListSelection()
49986=AptConfigurationBlock:loadProcessorOptions(IJavaProject)
49987=AptConfigurationBlock:AptConfigurationBlock(IStatusChangeListener, IProject, IWorkbenchPreferenceContainer)
49988=AptConfigurationBlock:useProjectSpecificSettings(boolean)
49989=AptConfigurationBlock:procOptionsChanged()
49990=AptConfigurationBlock:ProcessorOptionsAdapter:doubleClicked(ListDialogField<ProcessorOption>)
49991=AptConfigurationBlock:validateGenSrcDir()
49992=AptConfigurationBlock:ProcessorOptionsLabelProvider:getColumnText(Object, int)
49993=AptConfigurationBlock:initContents()
49994=AptConfigurationBlock:editOrAddProcessorOption(ProcessorOption)
49995=AptConfigurationBlock:getListElements()
49996=AptConfigurationBlock:setJDTProcessAnnotationsSetting(boolean)
49997=CompilationUnitResolver:createBinding(String)
49998=CompilationUnitResolver:resolve(org.eclipse.jdt.internal.compiler.env.ICompilationUnit, boolean, boolean, boolean)
49999=CompilationUnitResolver:resolve(ICompilationUnit[], String[], ASTRequestor, int, Map, WorkingCopyOwner, int)
50000=CompilationUnitResolver:reportBinding(Object, FileASTRequestor, CompilationUnitDeclaration)
50001=CompilationUnitResolver:removeUnresolvedBindings(CompilationUnitDeclaration)
50002=CompilationUnitResolver:CompilationUnitResolver(INameEnvironment, IErrorHandlingPolicy, CompilerOptions, ICompilerRequestor, IProblemFactory, IProgressMonitor, boolean)
50003=CompilationUnitResolver:parse(org.eclipse.jdt.internal.compiler.env.ICompilationUnit, NodeSearcher, Map, int)
50004=CompilationUnitResolver:resolve(ICompilationUnit[], String[], ASTRequestor, int, Map, IJavaProject, WorkingCopyOwner, int, IProgressMonitor)
50005=CompilationUnitResolver:removeUnresolvedBindings(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
50006=CompilationUnitResolver:resolvedRequestedSourcesAndKeys(int)
50007=CompilationUnitResolver:IntArrayList:add(int)
50008=CompilationUnitResolver:parse(ICompilationUnit[], ASTRequestor, int, Map, int, IProgressMonitor)
50009=CompilationUnitResolver:accept(org.eclipse.jdt.internal.compiler.env.ICompilationUnit, AccessRestriction)
50010=CompilationUnitResolver:getRequestor()
50011=CompilationUnitResolver:getHandlingPolicy()
50012=CompilationUnitResolver:convert(CompilationUnitDeclaration, char[], int, Map, boolean, WorkingCopyOwner, DefaultBindingResolver.BindingTables, int, IProgressMonitor, boolean)
50013=CompilationUnitResolver:resolve(CompilationUnitDeclaration, org.eclipse.jdt.internal.compiler.env.ICompilationUnit, boolean, boolean, boolean)
50014=CompilationUnitResolver:worked(int)
50015=CompilationUnitResolver:reportBinding(Object, ASTRequestor, WorkingCopyOwner, CompilationUnitDeclaration)
50016=CompilationUnitResolver:parse(String[], String[], FileASTRequestor, int, Map, int, IProgressMonitor)
50017=CompilationUnitResolver:accept(ISourceType[], PackageBinding, AccessRestriction)
50018=CompilationUnitResolver:process(CompilationUnitDeclaration, int)
50019=CompilationUnitResolver:resolve(String[], String[], String[], FileASTRequestor, int, Map, List, int, IProgressMonitor)
50020=CompilationUnitResolver:initializeParser()
50021=CompilationUnitResolver:beginToCompile(org.eclipse.jdt.internal.compiler.env.ICompilationUnit[], String[])
50022=CompilationUnitResolver:getCompilerOptions(Map, boolean)
50023=CompilationUnitResolver:resolve(org.eclipse.jdt.internal.compiler.env.ICompilationUnit, IJavaProject, List, NodeSearcher, Map, WorkingCopyOwner, int, IProgressMonitor)
50024=CompilationUnitResolver:resolve(IJavaElement[], int, Map, IJavaProject, WorkingCopyOwner, int, IProgressMonitor)
50025=CompilationUnitResolver:handleInternalException(AbortCompilation, CompilationUnitDeclaration)
50026=CompilationUnitResolver:handleInternalException(Throwable, CompilationUnitDeclaration, CompilationResult)
50027=CompilationUnitResolver:resolve(String[], String[], String[], FileASTRequestor, int, Map, int)
50028=CompilationUnitResolver:resolve(CompilationUnitDeclaration, org.eclipse.jdt.internal.compiler.env.ICompilationUnit, NodeSearcher, boolean, boolean, boolean)
50029=CompilationUnit:treeSize()
50030=CompilationUnit:subtreeMatch0(ASTMatcher, Object)
50031=CompilationUnit:clone0(AST)
50032=CompilationUnit:imports()
50033=CompilationUnit:initCommentMapper(Scanner)
50034=CompilationUnit:findDeclaringNode(String)
50035=CompilationUnit:setPackage(PackageDeclaration)
50036=CompilationUnit:setLineEndTable(int[])
50037=CompilationUnit:getMessages()
50038=CompilationUnit:lastTrailingCommentIndex(ASTNode)
50039=CompilationUnit:getNodeType0()
50040=CompilationUnit:propertyDescriptors(int)
50041=CompilationUnit:internalStructuralPropertiesForType(int)
50042=CompilationUnit:getExtendedLength(ASTNode)
50043=CompilationUnit:accept0(ASTVisitor)
50044=CompilationUnit:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
50045=CompilationUnit:getPackage()
50046=CompilationUnit:getColumnNumber(int)
50047=CompilationUnit:recordModifications()
50048=CompilationUnit:getCommentMapper()
50049=CompilationUnit:setStatementsRecoveryData(Object)
50050=CompilationUnit:getLineNumber(int)
50051=CompilationUnit:firstLeadingCommentIndex(ASTNode)
50052=CompilationUnit:getCommentList()
50053=CompilationUnit:internalGetChildListProperty(ChildListPropertyDescriptor)
50054=CompilationUnit:getPosition(int, int)
50055=CompilationUnit:setProblems(IProblem[])
50056=CompilationUnit:lineNumber(int)
50057=CompilationUnit:getTypeRoot()
50058=CompilationUnit:getStatementsRecoveryData()
50059=CompilationUnit:rewrite(IDocument, Map)
50060=CompilationUnit:setTypeRoot(ITypeRoot)
50061=CompilationUnit:getProblems()
50062=CompilationUnit:memSize()
50063=CompilationUnit:findDeclaringNode(IBinding)
50064=CompilationUnit:setCommentTable(Comment[])
50065=CompilationUnit:CompilationUnit(AST)
50066=CompilationUnit:getExtendedStartPosition(ASTNode)
50067=CompilationUnit:getJavaElement()
50068=CompilationUnit:types()
50069=X08:test()
50070=AssistImportDeclaration:getElementInfo(IProgressMonitor)
50071=AssistImportDeclaration:AssistImportDeclaration(ImportContainer, String, boolean, Map)
50072=NullTypeBinding:setTypeAnnotations(AnnotationBinding[], boolean)
50073=NullTypeBinding:clone(TypeBinding)
50074=NullTypeBinding:NullTypeBinding()
50075=NullTypeBinding:unannotated()
50076=A:B:test()
50077=BinaryMethod:getTypeParameterSignatures()
50078=BinaryMethod:splitParameters(char[], int)
50079=BinaryMethod:isConstructor()
50080=BinaryMethod:toStringName(StringBuffer)
50081=BinaryMethod:BinaryMethod(JavaElement, String, String[])
50082=BinaryMethod:getParameterNames()
50083=BinaryMethod:toStringInfo(int, StringBuffer, Object, boolean)
50084=BinaryMethod:getNumberOfParameters()
50085=BinaryMethod:getParameterTypes()
50086=BinaryMethod:getHandleMementoDelimiter()
50087=BinaryMethod:getFlags()
50088=BinaryMethod:readableName()
50089=BinaryMethod:isSimilar(IMethod)
50090=BinaryMethod:getTypeParameter(String)
50091=BinaryMethod:getErasedParameterType(int)
50092=BinaryMethod:getKey(boolean)
50093=BinaryMethod:getDefaultValue()
50094=BinaryMethod:getRawParameterNames()
50095=BinaryMethod:getParameters()
50096=BinaryMethod:getRawParameterNames(int)
50097=BinaryMethod:isMainMethod()
50098=BinaryMethod:getAttachedJavadoc(IProgressMonitor)
50099=BinaryMethod:resolved(Binding)
50100=BinaryMethod:getErasedParameterTypes()
50101=BinaryMethod:getReturnType(IBinaryMethod)
50102=BinaryMethod:getElementType()
50103=BinaryMethod:isLambdaMethod()
50104=BinaryMethod:hashCode()
50105=BinaryMethod:getExceptionTypes()
50106=BinaryMethod:getHandleMemento(StringBuffer)
50107=BinaryMethod:getSignature()
50108=BinaryMethod:toStringName(StringBuffer, int)
50109=BinaryMethod:isOpenParenForMethod(String, String, int)
50110=BinaryMethod:getAnnotations(JavaElement, IBinaryAnnotation[])
50111=BinaryMethod:isResolved()
50112=BinaryMethod:getTypeParameters()
50113=BinaryMethod:getReturnType()
50114=BinaryMethod:equals(Object)
50115=BinaryMethod:getAnnotations()
50116=CodeSnippetTypeDeclaration:generateCode(ClassFile)
50117=CodeSnippetTypeDeclaration:CodeSnippetTypeDeclaration(CompilationResult)
50118=Z17:getBinding(String, String, X14, boolean)
50119=X14:foo(Z17)
50120=LongCache:hash(long)
50121=LongCache:put(long, int)
50122=LongCache:rehash()
50123=LongCache:size()
50124=LongCache:containsKey(long)
50125=LongCache:putIfAbsent(long, int)
50126=LongCache:toString()
50127=LongCache:LongCache()
50128=LongCache:LongCache(int)
50129=LongCache:clear()
50130=SelectionParser:dietParse(ICompilationUnit, CompilationResult, int, int)
50131=SelectionParser:createParameterizedSingleAssistTypeReference(TypeReference[], char[], long)
50132=SelectionParser:createSingleAssistNameReference(char[], long)
50133=SelectionParser:consumeFormalParameter(boolean)
50134=SelectionParser:SelectionParser(ProblemReporter)
50135=SelectionParser:consumeEnterVariable()
50136=SelectionParser:consumeMarkerAnnotation(boolean)
50137=SelectionParser:toString()
50138=SelectionParser:consumeStaticImportOnDemandDeclarationName()
50139=SelectionParser:createSnapShotParser()
50140=SelectionParser:initializeScanner()
50141=SelectionParser:consumeInsideCastExpressionLL1WithBounds()
50142=SelectionParser:checkRecoveredType()
50143=SelectionParser:consumeMethodInvocationName()
50144=SelectionParser:consumeInsideCastExpressionWithQualifiedGenerics()
50145=SelectionParser:setAssistIdentifier(char[])
50146=SelectionParser:consumeToken(int)
50147=SelectionParser:createQualifiedAssistTypeReference(char[][], char[], long[])
50148=SelectionParser:consumeInstanceOfExpression()
50149=SelectionParser:consumeCastExpressionWithQualifiedGenericsArray()
50150=SelectionParser:createParameterizedQualifiedAssistTypeReference(char[][], TypeReference[][], char[], TypeReference[], long[])
50151=SelectionParser:consumeMethodInvocationPrimary()
50152=SelectionParser:buildMoreCompletionContext(Expression)
50153=SelectionParser:newMessageSendWithTypeArguments()
50154=SelectionParser:createAssistImportReference(char[][], long[], int)
50155=SelectionParser:consumeClassInstanceCreationExpressionWithTypeArguments()
50156=SelectionParser:getUnspecifiedReference(boolean)
50157=SelectionParser:createJavadocParser()
50158=SelectionParser:consumeInstanceOfExpressionWithName()
50159=SelectionParser:assistIdentifier()
50160=SelectionParser:typeElidedArgument()
50161=SelectionParser:consumeCastExpressionLL1()
50162=SelectionParser:consumeCastExpressionWithGenericsArray()
50163=SelectionParser:consumeMemberValuePair()
50164=SelectionParser:consumeLambdaExpression()
50165=SelectionParser:consumeArrayCreationExpressionWithInitializer()
50166=SelectionParser:consumeTypeImportOnDemandDeclarationName()
50167=SelectionParser:attachOrphanCompletionNode()
50168=SelectionParser:consumeAssignment()
50169=SelectionParser:resumeAfterRecovery()
50170=SelectionParser:consumeExitVariableWithInitialization()
50171=SelectionParser:consumeBlockStatement()
50172=SelectionParser:consumeReferenceExpression(ReferenceExpression)
50173=SelectionParser:consumeSingleMemberAnnotation(boolean)
50174=SelectionParser:consumeEnterAnonymousClassBody(boolean)
50175=SelectionParser:createSingleAssistTypeReference(char[], long)
50176=SelectionParser:consumeCastExpressionLL1WithBounds()
50177=SelectionParser:consumeCatchFormalParameter()
50178=SelectionParser:consumeCastExpressionWithNameArray()
50179=SelectionParser:consumeArrayCreationExpressionWithoutInitializer()
50180=SelectionParser:newReferenceExpression()
50181=SelectionParser:consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()
50182=SelectionParser:createQualifiedAssistNameReference(char[][], char[], long[])
50183=SelectionParser:consumeLocalVariableDeclarationStatement()
50184=SelectionParser:parse(ICompilationUnit, CompilationResult, int, int)
50185=SelectionParser:updateRecoveryState()
50186=SelectionParser:newMessageSend()
50187=SelectionParser:getUnspecifiedReferenceOptimized()
50188=SelectionParser:consumeInsideCastExpressionLL1()
50189=SelectionParser:consumeInsideCastExpression()
50190=SelectionParser:selectionIdentifierCheck()
50191=SelectionParser:consumeCastExpressionWithPrimitiveType()
50192=SelectionParser:consumeNormalAnnotation(boolean)
50193=SelectionParser:classInstanceCreation(boolean)
50194=SelectionParser:createLocalDeclaration(char[], int, int)
50195=SelectionParser:createAssistPackageReference(char[][], long[])
50196=SelectionParser:consumeFieldAccess(boolean)
50197=AnnotatableInfo:getNameSourceEnd()
50198=AnnotatableInfo:getNameRange()
50199=AnnotatableInfo:setNameSourceEnd(int)
50200=AnnotatableInfo:getNameSourceStart()
50201=AnnotatableInfo:setNameSourceStart(int)
50202=CF47209:m47209(int)
50203=CF47209:CF47209(String)
50204=X28:foo()
50205=SnippetCompletionTests_1_5:SnippetCompletionTests_1_5(String)
50206=SnippetCompletionTests_1_5:testCodeSnippetAssistForBug132665()
50207=SnippetCompletionTests_1_5:tearDownSuite()
50208=SnippetCompletionTests_1_5:suite()
50209=SnippetCompletionTests_1_5:setUpSuite()
50210=SnippetCompletionTests_1_5:assertResults(String, String)
50211=SnippetCompletionTests_1_5:testCodeSnippetAssistForBug223878()
50212=X13:foo()
50213=Negative2:m1()
50214=Negative2:m4()
50215=Negative2:m2()
50216=Negative2:m3()
50217=X:x()
50218=X:main(String[])
50219=X05:Y05:foo()
50220=DOMInitializer:DOMInitializer(char[], int[], int)
50221=DOMInitializer:appendSimpleContents(CharArrayBuffer)
50222=DOMInitializer:appendMemberDeclarationContents(CharArrayBuffer)
50223=DOMInitializer:newDOMNode()
50224=DOMInitializer:shareContents(DOMNode)
50225=DOMInitializer:appendMemberBodyContents(CharArrayBuffer)
50226=DOMInitializer:getBody()
50227=DOMInitializer:getDetailedNode()
50228=DOMInitializer:setBody(String)
50229=DOMInitializer:getMemberDeclarationStartPosition()
50230=DOMInitializer:setName(String)
50231=DOMInitializer:toString()
50232=DOMInitializer:DOMInitializer()
50233=DOMInitializer:DOMInitializer(char[], int[], int[], int, int[], int)
50234=DOMInitializer:isSignatureEqual(IDOMNode)
50235=DOMInitializer:getNodeType()
50236=DOMInitializer:getJavaElement(IJavaElement)
50237=DOMInitializer:offset(int)
50238=CorrectLocalVariable1:foo()
50239=A:foo()
50240=A:run()
50241=Example:foo()
50242=HashSetOfInt:rehash()
50243=HashSetOfInt:toString()
50244=HashSetOfInt:contains(int)
50245=HashSetOfInt:HashSetOfInt()
50246=HashSetOfInt:size()
50247=HashSetOfInt:add(int)
50248=HashSetOfInt:remove(int)
50249=HashSetOfInt:clone()
50250=HashSetOfInt:HashSetOfInt(int)
50251=X02:foo()
50252=JSR335ClassFileTest:test008()
50253=JSR335ClassFileTest:test007a()
50254=JSR335ClassFileTest:test004()
50255=JSR335ClassFileTest:test015()
50256=JSR335ClassFileTest:test006()
50257=JSR335ClassFileTest:test017()
50258=JSR335ClassFileTest:test430571()
50259=JSR335ClassFileTest:test430015a()
50260=JSR335ClassFileTest:test011()
50261=JSR335ClassFileTest:test002()
50262=JSR335ClassFileTest:test013()
50263=JSR335ClassFileTest:testClass()
50264=JSR335ClassFileTest:test424444c()
50265=JSR335ClassFileTest:test007()
50266=JSR335ClassFileTest:suite()
50267=JSR335ClassFileTest:test424444a()
50268=JSR335ClassFileTest:test009()
50269=JSR335ClassFileTest:JSR335ClassFileTest(String)
50270=JSR335ClassFileTest:test003()
50271=JSR335ClassFileTest:test014()
50272=JSR335ClassFileTest:test005()
50273=JSR335ClassFileTest:test016()
50274=JSR335ClassFileTest:test435869()
50275=JSR335ClassFileTest:verifyClassFile(String, String, int)
50276=JSR335ClassFileTest:test424444()
50277=JSR335ClassFileTest:test430035()
50278=JSR335ClassFileTest:test010()
50279=JSR335ClassFileTest:test001()
50280=JSR335ClassFileTest:test012()
50281=JSR335ClassFileTest:test430015()
50282=JSR335ClassFileTest:test424444d()
50283=JSR335ClassFileTest:test424444b()
50284=AndPattern:combinedMatchRule(int, int)
50285=AndPattern:resetQuery()
50286=AndPattern:currentPattern()
50287=AndPattern:AndPattern(SearchPattern, SearchPattern)
50288=AndPattern:hasNextQuery()
50289=X03:foo()
50290=X01e:foo()
50291=VariablesInitializer:initialize(String)
50292=VariablesInitializer:ITestInitializer:initialize(String)
50293=VariablesInitializer:setInitializer(ITestInitializer)
50294=VariablesInitializer:reset()
50295=ImportDeclaration:setName(Name)
50296=ImportDeclaration:setStatic(boolean)
50297=ImportDeclaration:isOnDemand()
50298=ImportDeclaration:propertyDescriptors(int)
50299=ImportDeclaration:accept0(ASTVisitor)
50300=ImportDeclaration:getName()
50301=ImportDeclaration:internalStructuralPropertiesForType(int)
50302=ImportDeclaration:getNodeType0()
50303=ImportDeclaration:subtreeMatch0(ASTMatcher, Object)
50304=ImportDeclaration:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
50305=ImportDeclaration:setOnDemand(boolean)
50306=ImportDeclaration:treeSize()
50307=ImportDeclaration:memSize()
50308=ImportDeclaration:resolveBinding()
50309=ImportDeclaration:internalGetSetBooleanProperty(SimplePropertyDescriptor, boolean, boolean)
50310=ImportDeclaration:isStatic()
50311=ImportDeclaration:ImportDeclaration(AST)
50312=ImportDeclaration:clone0(AST)
50313=A:foo()
50314=Test:test()
50315=FalseLiteral:FalseLiteral(int, int)
50316=FalseLiteral:literalType(BlockScope)
50317=FalseLiteral:generateCode(BlockScope, CodeStream, boolean)
50318=FalseLiteral:traverse(ASTVisitor, BlockScope)
50319=FalseLiteral:computeConstant()
50320=FalseLiteral:source()
50321=FalseLiteral:generateOptimizedBoolean(BlockScope, CodeStream, Label, Label, boolean)
50322=ForStatement:generateCode(BlockScope, CodeStream)
50323=ForStatement:resolve(BlockScope)
50324=ForStatement:traverse(ASTVisitor, BlockScope)
50325=ForStatement:ForStatement(Statement[], Expression, Statement[], Statement, boolean, int, int)
50326=ForStatement:doesNotCompleteNormally()
50327=ForStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
50328=ForStatement:completesByContinue()
50329=ForStatement:printStatement(int, StringBuffer)
50330=RecoveredImport:sourceEnd()
50331=RecoveredImport:updateSourceEndIfNecessary(int, int)
50332=RecoveredImport:toString(int)
50333=RecoveredImport:updatedImportReference()
50334=RecoveredImport:parseTree()
50335=RecoveredImport:updateParseTree()
50336=RecoveredImport:RecoveredImport(ImportReference, RecoveredElement, int)
50337=IJob:execute(IProgressMonitor)
50338=IJob:belongsTo(String)
50339=IJob:getJobFamily()
50340=IJob:cancel()
50341=IJob:ensureReadyToRun()
50342=BinaryType:sourceFileName(IBinaryType)
50343=BinaryType:toStringInfo(int, StringBuffer, Object, boolean)
50344=BinaryType:getSourceFileName(IBinaryType)
50345=BinaryType:getTypeParameter(String)
50346=BinaryType:findMethods(IMethod)
50347=BinaryType:getPackageFragment()
50348=BinaryType:getSuperInterfaceTypeSignatures()
50349=BinaryType:isAnnotation()
50350=BinaryType:isMember()
50351=BinaryType:getTypeQualifiedName(char)
50352=BinaryType:getTypeParameterSignatures()
50353=BinaryType:getMethods()
50354=BinaryType:getFields()
50355=BinaryType:getChildren()
50356=BinaryType:getSuperclassName()
50357=BinaryType:BinaryType(JavaElement, String)
50358=BinaryType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, CompletionRequestor, IProgressMonitor)
50359=BinaryType:createInitializer(String, IJavaElement, IProgressMonitor)
50360=BinaryType:getFullyQualifiedParameterizedName()
50361=BinaryType:getTypeQualifiedName()
50362=BinaryType:getMethod(String, String[])
50363=BinaryType:getInitializer(int)
50364=BinaryType:getSuperInterfaceNames()
50365=BinaryType:getTypes()
50366=BinaryType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, CompletionRequestor, WorkingCopyOwner, IProgressMonitor)
50367=BinaryType:getFlags()
50368=BinaryType:isLambda()
50369=BinaryType:loadTypeHierachy(InputStream, WorkingCopyOwner, IProgressMonitor)
50370=BinaryType:createMethod(String, IJavaElement, boolean, IProgressMonitor)
50371=BinaryType:getClassFileInfo()
50372=BinaryType:getElementType()
50373=BinaryType:getElementInfo(IProgressMonitor)
50374=BinaryType:loadTypeHierachy(InputStream, IProgressMonitor)
50375=BinaryType:newTypeHierarchy(WorkingCopyOwner, IProgressMonitor)
50376=BinaryType:getHandleFromMemento(String, MementoTokenizer, WorkingCopyOwner)
50377=BinaryType:getChildrenForCategory(String)
50378=BinaryType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, CompletionRequestor, WorkingCopyOwner)
50379=BinaryType:newTypeHierarchy(IJavaProject, IProgressMonitor)
50380=BinaryType:toStringName(StringBuffer)
50381=BinaryType:getType(String)
50382=BinaryType:newTypeHierarchy(ICompilationUnit[], IProgressMonitor)
50383=BinaryType:isClass()
50384=BinaryType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, ICompletionRequestor)
50385=BinaryType:isEnum()
50386=BinaryType:createField(String, IJavaElement, boolean, IProgressMonitor)
50387=BinaryType:resolved(Binding)
50388=BinaryType:isAnonymous()
50389=BinaryType:getInitializers()
50390=BinaryType:getDeclaringType()
50391=BinaryType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, ICompletionRequestor, WorkingCopyOwner)
50392=BinaryType:newTypeHierarchy(IWorkingCopy[], IProgressMonitor)
50393=BinaryType:codeComplete(char[], int, int, char[][], char[][], int[], boolean, CompletionRequestor)
50394=BinaryType:isResolved()
50395=BinaryType:closing(Object)
50396=BinaryType:getTypeParameters()
50397=BinaryType:newTypeHierarchy(IJavaProject, WorkingCopyOwner, IProgressMonitor)
50398=BinaryType:isInterface()
50399=BinaryType:newTypeHierarchy(IProgressMonitor)
50400=BinaryType:getAttachedJavadoc(IProgressMonitor)
50401=BinaryType:equals(Object)
50402=BinaryType:getFullyQualifiedName(char)
50403=BinaryType:newSupertypeHierarchy(IWorkingCopy[], IProgressMonitor)
50404=BinaryType:getAnnotations()
50405=BinaryType:getKey(boolean)
50406=BinaryType:createType(String, IJavaElement, boolean, IProgressMonitor)
50407=BinaryType:newSupertypeHierarchy(ICompilationUnit[], IProgressMonitor)
50408=BinaryType:getSuperclassTypeSignature()
50409=BinaryType:newSupertypeHierarchy(IProgressMonitor)
50410=BinaryType:getField(String)
50411=BinaryType:isLocal()
50412=BinaryType:getFullyQualifiedName()
50413=BinaryType:getJavadocContents(IProgressMonitor)
50414=BinaryType:newSupertypeHierarchy(WorkingCopyOwner, IProgressMonitor)
50415=Test:main(String[])
50416=A:foo()
50417=A:A(String)
50418=Test:main(String[])
50419=X16a:foo()
50420=X:main(String[])
50421=X:foo()
50422=Test:foo(int)
50423=A:foo()
50424=Y:bar()
50425=Y:Y()
50426=Y:Y(boolean)
50427=Y:Y(int)
50428=DOMFinder:visit(Initializer)
50429=DOMFinder:visit(TypeDeclaration)
50430=DOMFinder:visit(EnumDeclaration)
50431=DOMFinder:visit(PackageDeclaration)
50432=DOMFinder:found(ASTNode, ASTNode)
50433=DOMFinder:visit(AnnotationTypeDeclaration)
50434=DOMFinder:visit(MarkerAnnotation)
50435=DOMFinder:visit(TypeParameter)
50436=DOMFinder:DOMFinder(CompilationUnit, SourceRefElement, boolean)
50437=DOMFinder:search()
50438=DOMFinder:visit(VariableDeclarationFragment)
50439=DOMFinder:visit(AnonymousClassDeclaration)
50440=DOMFinder:visit(ImportDeclaration)
50441=DOMFinder:visit(SingleVariableDeclaration)
50442=DOMFinder:visit(MethodDeclaration)
50443=DOMFinder:visit(AnnotationTypeMemberDeclaration)
50444=DOMFinder:visit(SingleMemberAnnotation)
50445=DOMFinder:visit(LambdaExpression)
50446=DOMFinder:visit(EnumConstantDeclaration)
50447=DOMFinder:visit(NormalAnnotation)
50448=A:make()
50449=MethodInfo:getAnnotatedParametersCount()
50450=MethodInfo:isSynthetic()
50451=MethodInfo:getMethodDescriptor()
50452=MethodInfo:getParameterAnnotations(int, char[])
50453=MethodInfo:createMethod(byte, int, int)
50454=MethodInfo:equals(Object)
50455=MethodInfo:decodeParamAnnotations(int, boolean, MethodInfo)
50456=MethodInfo:decodeAnnotations(int, boolean, int, MethodInfo)
50457=MethodInfo:toStringContent(StringBuffer)
50458=MethodInfo:getArgumentNames()
50459=MethodInfo:decodeMethodAnnotations(int, boolean, MethodInfo)
50460=MethodInfo:sizeInBytes()
50461=MethodInfo:hashCode()
50462=MethodInfo:getTagBits()
50463=MethodInfo:compareTo(Object)
50464=MethodInfo:getGenericSignature()
50465=MethodInfo:getDefaultValue()
50466=MethodInfo:decodeLocalVariableAttribute(int, int)
50467=MethodInfo:isClinit()
50468=MethodInfo:getTypeAnnotations()
50469=MethodInfo:MethodInfo(byte, int, int)
50470=MethodInfo:decodeMethodParameters(int, MethodInfo)
50471=MethodInfo:readCodeAttribute()
50472=MethodInfo:initialize()
50473=MethodInfo:decodeTypeAnnotations(int, boolean, MethodInfo)
50474=MethodInfo:getSelector()
50475=MethodInfo:readExceptionAttributes()
50476=MethodInfo:getAnnotations()
50477=MethodInfo:readModifierRelatedAttributes()
50478=MethodInfo:getExceptionTypeNames()
50479=MethodInfo:decodeCodeAttribute(int)
50480=MethodInfo:isConstructor()
50481=MethodInfo:toString(StringBuffer)
50482=MethodInfo:toString()
50483=MethodInfo:getModifiers()
50484=OrPattern:findIndexMatches(Index, IndexQueryRequestor, SearchParticipant, IJavaSearchScope, IProgressMonitor)
50485=OrPattern:isPolymorphicSearch()
50486=OrPattern:OrPattern(SearchPattern, SearchPattern)
50487=OrPattern:getBlankPattern()
50488=OrPattern:hasPackageDeclaration()
50489=OrPattern:toString()
50490=OrPattern:isErasureMatch()
50491=OrPattern:hasSignatures()
50492=QualifiedSuperReference:traverse(ASTVisitor, BlockScope)
50493=QualifiedSuperReference:isQualifiedSuper()
50494=QualifiedSuperReference:printExpression(int, StringBuffer)
50495=QualifiedSuperReference:isSuper()
50496=QualifiedSuperReference:findCompatibleEnclosing(ReferenceBinding, TypeBinding, BlockScope)
50497=QualifiedSuperReference:traverse(ASTVisitor, ClassScope)
50498=QualifiedSuperReference:resolveType(BlockScope)
50499=QualifiedSuperReference:isThis()
50500=QualifiedSuperReference:QualifiedSuperReference(TypeReference, int, int)
50501=Example:foo()
50502=SelectionJavadocTest:JavadocSelectionVisitor:visit(TypeDeclaration, CompilationUnitScope)
50503=SelectionJavadocTest:test20()
50504=SelectionJavadocTest:setUp()
50505=SelectionJavadocTest:JavadocSelectionVisitor:visit(FieldDeclaration, MethodScope)
50506=SelectionJavadocTest:test22()
50507=SelectionJavadocTest:test09()
50508=SelectionJavadocTest:test05()
50509=SelectionJavadocTest:test16()
50510=SelectionJavadocTest:JavadocSelectionVisitor:visit(TypeDeclaration, ClassScope)
50511=SelectionJavadocTest:test07()
50512=SelectionJavadocTest:test18()
50513=SelectionJavadocTest:test23()
50514=SelectionJavadocTest:test01()
50515=SelectionJavadocTest:test12()
50516=SelectionJavadocTest:test25()
50517=SelectionJavadocTest:test03()
50518=SelectionJavadocTest:test14()
50519=SelectionJavadocTest:JavadocSelectionVisitor:visit(TypeDeclaration, BlockScope)
50520=SelectionJavadocTest:findJavadoc(String, int)
50521=SelectionJavadocTest:findJavadoc(String)
50522=SelectionJavadocTest:test21()
50523=SelectionJavadocTest:setUnit(String, String)
50524=SelectionJavadocTest:test10()
50525=SelectionJavadocTest:test08()
50526=SelectionJavadocTest:JavadocSelectionVisitor:visit(ConstructorDeclaration, ClassScope)
50527=SelectionJavadocTest:test19()
50528=SelectionJavadocTest:test04()
50529=SelectionJavadocTest:test15()
50530=SelectionJavadocTest:JavadocSelectionVisitor:visit(MethodDeclaration, ClassScope)
50531=SelectionJavadocTest:suite()
50532=SelectionJavadocTest:SelectionJavadocTest(String)
50533=SelectionJavadocTest:test06()
50534=SelectionJavadocTest:test17()
50535=SelectionJavadocTest:getCompilerOptions()
50536=SelectionJavadocTest:test11()
50537=SelectionJavadocTest:test24()
50538=SelectionJavadocTest:test02()
50539=SelectionJavadocTest:test13()
50540=SelectionJavadocTest:test26()
50541=SelectionJavadocTest:assertValid(String)
50542=Bug443769Proc:process(Set<? extends TypeElement>, RoundEnvironment)
50543=ExternalAnnotations18Test:testProjectDependencyReconcile2()
50544=ExternalAnnotations18Test:test1FullBuildWithVariable()
50545=ExternalAnnotations18Test:getSourceWorkspacePathBase()
50546=ExternalAnnotations18Test:testProjectDependencyFullBuild()
50547=ExternalAnnotations18Test:testBug471352()
50548=ExternalAnnotations18Test:testLibsWithWildcards()
50549=ExternalAnnotations18Test:myCreateJavaProject(String)
50550=ExternalAnnotations18Test:suite()
50551=ExternalAnnotations18Test:assertNoMarkers(IMarker[])
50552=ExternalAnnotations18Test:testLibsWithFieldsZipped()
50553=ExternalAnnotations18Test:testLibsWithArrays()
50554=ExternalAnnotations18Test:hasJRE18()
50555=ExternalAnnotations18Test:testBug470666a()
50556=ExternalAnnotations18Test:setupJavaProject(String)
50557=ExternalAnnotations18Test:test3()
50558=ExternalAnnotations18Test:getAnnotationBundles()
50559=ExternalAnnotations18Test:LogListener:logging(IStatus, String)
50560=ExternalAnnotations18Test:getSourceWorkspacePath()
50561=ExternalAnnotations18Test:addProjectDependencyWithExternalAnnotations(IJavaProject, String, String, Map)
50562=ExternalAnnotations18Test:testLibsWithTypeArgOfSuper()
50563=ExternalAnnotations18Test:testLibsWithFieldsExternalZipped()
50564=ExternalAnnotations18Test:testLibs1()
50565=ExternalAnnotations18Test:testBug471034a()
50566=ExternalAnnotations18Test:assertProblems(IProblem[], String[], int[], int[])
50567=ExternalAnnotations18Test:testBug471034c()
50568=ExternalAnnotations18Test:testBug490343()
50569=ExternalAnnotations18Test:test1FullBuild()
50570=ExternalAnnotations18Test:ExternalAnnotations18Test(String, String, String)
50571=ExternalAnnotations18Test:testProjectDependencyReconcile3()
50572=ExternalAnnotations18Test:testLibsWithFields()
50573=ExternalAnnotations18Test:testBrokenConfig1()
50574=ExternalAnnotations18Test:ExternalAnnotations18Test(String)
50575=ExternalAnnotations18Test:testBug470666b()
50576=ExternalAnnotations18Test:assertProblems(IProblem[], String[], int[])
50577=ExternalAnnotations18Test:tearDown()
50578=ExternalAnnotations18Test:assertNoProblems(IProblem[])
50579=ExternalAnnotations18Test:testFreeTypeVariableReturn()
50580=ExternalAnnotations18Test:TestContainerInitializer:allowFailureContainer()
50581=ExternalAnnotations18Test:test2()
50582=ExternalAnnotations18Test:createFileInProject(String, String, String)
50583=ExternalAnnotations18Test:readFully(IFile)
50584=ExternalAnnotations18Test:testAnnotateFieldWithParameterizedType()
50585=ExternalAnnotations18Test:testBug464081()
50586=ExternalAnnotations18Test:testFreeTypeVariableReturnSeverities()
50587=ExternalAnnotations18Test:setUpSuite()
50588=ExternalAnnotations18Test:tearDownSuite()
50589=ExternalAnnotations18Test:testAnnotateConstructorParameter()
50590=ExternalAnnotations18Test:addLibraryWithExternalAnnotations(IJavaProject, String, String, String[], Map)
50591=ExternalAnnotations18Test:testBug471034b()
50592=ExternalAnnotations18Test:testLibsWithTypeParameters()
50593=ExternalAnnotations18Test:TestContainerInitializer:initialize(IPath, IJavaProject)
50594=ExternalAnnotations18Test:test1Reconcile()
50595=ExternalAnnotations18Test:testAnnotateMethodParameter()
50596=ExternalAnnotations18Test:testProjectDependencyReconcile1()
50597=TryStatement17Test:test004()
50598=TryStatement17Test:test028()
50599=TryStatement17Test:test006()
50600=TryStatement17Test:test017()
50601=TryStatement17Test:test008()
50602=TryStatement17Test:test019()
50603=TryStatement17Test:suite()
50604=TryStatement17Test:test020()
50605=TryStatement17Test:test031()
50606=TryStatement17Test:test022()
50607=TryStatement17Test:testClass()
50608=TryStatement17Test:test011()
50609=TryStatement17Test:test024()
50610=TryStatement17Test:test002()
50611=TryStatement17Test:testBug391092()
50612=TryStatement17Test:test013()
50613=TryStatement17Test:test026()
50614=TryStatement17Test:test027()
50615=TryStatement17Test:test005()
50616=TryStatement17Test:test016()
50617=TryStatement17Test:test029()
50618=TryStatement17Test:test024a()
50619=TryStatement17Test:test007()
50620=TryStatement17Test:test018()
50621=TryStatement17Test:TryStatement17Test(String)
50622=TryStatement17Test:test009()
50623=TryStatement17Test:test030()
50624=TryStatement17Test:test021()
50625=TryStatement17Test:testBug404146()
50626=TryStatement17Test:test032()
50627=TryStatement17Test:test010()
50628=TryStatement17Test:test023()
50629=TryStatement17Test:test001()
50630=TryStatement17Test:test012()
50631=TryStatement17Test:test025()
50632=TryStatement17Test:test026a()
50633=TryStatement17Test:test003()
50634=TryStatement17Test:test014()
50635=ASTVisitor:visit(PostfixExpression)
50636=ASTVisitor:visit(NormalAnnotation)
50637=ASTVisitor:endVisit(Assignment)
50638=ASTVisitor:endVisit(ExpressionMethodReference)
50639=ASTVisitor:endVisit(SuperFieldAccess)
50640=ASTVisitor:endVisit(ReturnStatement)
50641=ASTVisitor:visit(IntersectionType)
50642=ASTVisitor:endVisit(ConstructorInvocation)
50643=ASTVisitor:visit(CharacterLiteral)
50644=ASTVisitor:endVisit(SuperMethodInvocation)
50645=ASTVisitor:visit(PrimitiveType)
50646=ASTVisitor:visit(EnumDeclaration)
50647=ASTVisitor:endVisit(TypeDeclaration)
50648=ASTVisitor:visit(InstanceofExpression)
50649=ASTVisitor:endVisit(AssertStatement)
50650=ASTVisitor:visit(Javadoc)
50651=ASTVisitor:visit(Modifier)
50652=ASTVisitor:visit(TryStatement)
50653=ASTVisitor:endVisit(FieldDeclaration)
50654=ASTVisitor:ASTVisitor(boolean)
50655=ASTVisitor:visit(SwitchCase)
50656=ASTVisitor:visit(BreakStatement)
50657=ASTVisitor:visit(SuperConstructorInvocation)
50658=ASTVisitor:endVisit(SimpleType)
50659=ASTVisitor:endVisit(Modifier)
50660=ASTVisitor:preVisit(ASTNode)
50661=ASTVisitor:endVisit(MemberRef)
50662=ASTVisitor:endVisit(Block)
50663=ASTVisitor:visit(TagElement)
50664=ASTVisitor:endVisit(MethodRef)
50665=ASTVisitor:endVisit(BooleanLiteral)
50666=ASTVisitor:visit(FieldDeclaration)
50667=ASTVisitor:visit(AssertStatement)
50668=ASTVisitor:visit(ThisExpression)
50669=ASTVisitor:endVisit(PackageDeclaration)
50670=ASTVisitor:visit(AnnotationTypeDeclaration)
50671=ASTVisitor:endVisit(NullLiteral)
50672=ASTVisitor:visit(InfixExpression)
50673=ASTVisitor:endVisit(ParameterizedType)
50674=ASTVisitor:endVisit(PrefixExpression)
50675=ASTVisitor:visit(ImportDeclaration)
50676=ASTVisitor:visit(NullLiteral)
50677=ASTVisitor:visit(MarkerAnnotation)
50678=ASTVisitor:endVisit(PrimitiveType)
50679=ASTVisitor:endVisit(ForStatement)
50680=ASTVisitor:endVisit(CharacterLiteral)
50681=ASTVisitor:visit(ParenthesizedExpression)
50682=ASTVisitor:endVisit(MarkerAnnotation)
50683=ASTVisitor:visit(ThrowStatement)
50684=ASTVisitor:visit(ArrayAccess)
50685=ASTVisitor:endVisit(ContinueStatement)
50686=ASTVisitor:endVisit(VariableDeclarationExpression)
50687=ASTVisitor:endVisit(CatchClause)
50688=ASTVisitor:visit(TypeDeclaration)
50689=ASTVisitor:visit(ForStatement)
50690=ASTVisitor:endVisit(SuperConstructorInvocation)
50691=ASTVisitor:visit(EnhancedForStatement)
50692=ASTVisitor:endVisit(VariableDeclarationStatement)
50693=ASTVisitor:visit(ParameterizedType)
50694=ASTVisitor:endVisit(CreationReference)
50695=ASTVisitor:endVisit(AnnotationTypeMemberDeclaration)
50696=ASTVisitor:endVisit(AnnotationTypeDeclaration)
50697=ASTVisitor:visit(EnumConstantDeclaration)
50698=ASTVisitor:visit(IfStatement)
50699=ASTVisitor:endVisit(TypeDeclarationStatement)
50700=ASTVisitor:endVisit(SingleVariableDeclaration)
50701=ASTVisitor:endVisit(SwitchStatement)
50702=ASTVisitor:preVisit2(ASTNode)
50703=ASTVisitor:endVisit(NormalAnnotation)
50704=ASTVisitor:visit(SuperFieldAccess)
50705=ASTVisitor:visit(ConstructorInvocation)
50706=ASTVisitor:visit(VariableDeclarationExpression)
50707=ASTVisitor:endVisit(TagElement)
50708=ASTVisitor:endVisit(IfStatement)
50709=ASTVisitor:endVisit(IntersectionType)
50710=ASTVisitor:visit(SingleVariableDeclaration)
50711=ASTVisitor:visit(SimpleName)
50712=ASTVisitor:visit(SwitchStatement)
50713=ASTVisitor:visit(Dimension)
50714=ASTVisitor:visit(AnonymousClassDeclaration)
50715=ASTVisitor:endVisit(MethodDeclaration)
50716=ASTVisitor:endVisit(Javadoc)
50717=ASTVisitor:visit(NameQualifiedType)
50718=ASTVisitor:endVisit(ThrowStatement)
50719=ASTVisitor:visit(EmptyStatement)
50720=ASTVisitor:visit(ArrayCreation)
50721=ASTVisitor:ASTVisitor()
50722=ASTVisitor:endVisit(NameQualifiedType)
50723=ASTVisitor:visit(ExpressionStatement)
50724=ASTVisitor:endVisit(InstanceofExpression)
50725=ASTVisitor:endVisit(SingleMemberAnnotation)
50726=ASTVisitor:endVisit(ArrayType)
50727=ASTVisitor:endVisit(AnonymousClassDeclaration)
50728=ASTVisitor:visit(FieldAccess)
50729=ASTVisitor:visit(AnnotationTypeMemberDeclaration)
50730=ASTVisitor:visit(BlockComment)
50731=ASTVisitor:endVisit(ImportDeclaration)
50732=ASTVisitor:visit(ArrayInitializer)
50733=ASTVisitor:visit(MethodDeclaration)
50734=ASTVisitor:visit(MemberRef)
50735=ASTVisitor:endVisit(LambdaExpression)
50736=ASTVisitor:visit(BooleanLiteral)
50737=ASTVisitor:visit(WildcardType)
50738=ASTVisitor:visit(SingleMemberAnnotation)
50739=ASTVisitor:endVisit(ExpressionStatement)
50740=ASTVisitor:visit(UnionType)
50741=ASTVisitor:endVisit(Dimension)
50742=ASTVisitor:endVisit(LabeledStatement)
50743=ASTVisitor:endVisit(MethodRefParameter)
50744=ASTVisitor:visit(LineComment)
50745=ASTVisitor:visit(MemberValuePair)
50746=ASTVisitor:visit(Assignment)
50747=ASTVisitor:visit(ContinueStatement)
50748=ASTVisitor:visit(SynchronizedStatement)
50749=ASTVisitor:visit(ConditionalExpression)
50750=ASTVisitor:endVisit(FieldAccess)
50751=ASTVisitor:visit(LabeledStatement)
50752=ASTVisitor:endVisit(SuperMethodReference)
50753=ASTVisitor:visit(TypeLiteral)
50754=ASTVisitor:visit(LambdaExpression)
50755=ASTVisitor:visit(ExpressionMethodReference)
50756=ASTVisitor:visit(TypeDeclarationStatement)
50757=ASTVisitor:visit(CreationReference)
50758=ASTVisitor:endVisit(PostfixExpression)
50759=ASTVisitor:endVisit(MethodInvocation)
50760=ASTVisitor:endVisit(TryStatement)
50761=ASTVisitor:visit(VariableDeclarationStatement)
50762=ASTVisitor:visit(NumberLiteral)
50763=ASTVisitor:postVisit(ASTNode)
50764=ASTVisitor:visit(TextElement)
50765=ASTVisitor:visit(VariableDeclarationFragment)
50766=ASTVisitor:visit(StringLiteral)
50767=ASTVisitor:visit(SimpleType)
50768=ASTVisitor:endVisit(ParenthesizedExpression)
50769=ASTVisitor:endVisit(VariableDeclarationFragment)
50770=ASTVisitor:endVisit(QualifiedType)
50771=ASTVisitor:endVisit(SwitchCase)
50772=ASTVisitor:endVisit(TypeLiteral)
50773=ASTVisitor:visit(PrefixExpression)
50774=ASTVisitor:endVisit(ClassInstanceCreation)
50775=ASTVisitor:endVisit(EmptyStatement)
50776=ASTVisitor:endVisit(WhileStatement)
50777=ASTVisitor:visit(MethodInvocation)
50778=ASTVisitor:visit(TypeMethodReference)
50779=ASTVisitor:endVisit(NumberLiteral)
50780=ASTVisitor:endVisit(DoStatement)
50781=ASTVisitor:visit(Block)
50782=ASTVisitor:visit(DoStatement)
50783=ASTVisitor:endVisit(ArrayCreation)
50784=ASTVisitor:endVisit(ThisExpression)
50785=ASTVisitor:visit(QualifiedName)
50786=ASTVisitor:endVisit(Initializer)
50787=ASTVisitor:endVisit(EnumConstantDeclaration)
50788=ASTVisitor:visit(MethodRef)
50789=ASTVisitor:endVisit(ArrayAccess)
50790=ASTVisitor:visit(WhileStatement)
50791=ASTVisitor:endVisit(QualifiedName)
50792=ASTVisitor:endVisit(CompilationUnit)
50793=ASTVisitor:endVisit(TypeParameter)
50794=ASTVisitor:endVisit(WildcardType)
50795=ASTVisitor:visit(ArrayType)
50796=ASTVisitor:visit(Initializer)
50797=ASTVisitor:visit(PackageDeclaration)
50798=ASTVisitor:endVisit(TextElement)
50799=ASTVisitor:endVisit(EnumDeclaration)
50800=ASTVisitor:endVisit(CastExpression)
50801=ASTVisitor:visit(CompilationUnit)
50802=ASTVisitor:endVisit(ArrayInitializer)
50803=ASTVisitor:visit(SuperMethodReference)
50804=ASTVisitor:endVisit(InfixExpression)
50805=ASTVisitor:endVisit(ConditionalExpression)
50806=ASTVisitor:endVisit(SynchronizedStatement)
50807=ASTVisitor:visit(QualifiedType)
50808=ASTVisitor:endVisit(BlockComment)
50809=ASTVisitor:visit(CatchClause)
50810=ASTVisitor:visit(MethodRefParameter)
50811=ASTVisitor:endVisit(UnionType)
50812=ASTVisitor:endVisit(BreakStatement)
50813=ASTVisitor:visit(ReturnStatement)
50814=ASTVisitor:endVisit(SimpleName)
50815=ASTVisitor:visit(SuperMethodInvocation)
50816=ASTVisitor:endVisit(LineComment)
50817=ASTVisitor:endVisit(EnhancedForStatement)
50818=ASTVisitor:visit(TypeParameter)
50819=ASTVisitor:visit(CastExpression)
50820=ASTVisitor:endVisit(TypeMethodReference)
50821=ASTVisitor:visit(ClassInstanceCreation)
50822=ASTVisitor:endVisit(MemberValuePair)
50823=ASTVisitor:endVisit(StringLiteral)
50824=X:main(String[])
50825=A:updateAnnotation()
50826=Util:EncodingErrorCollector:EncodingErrorCollector(FileObject, String)
50827=Util:EncodingErrorCollector:collect(int, int)
50828=Util:getInputStreamAsCharArray(InputStream, int, String)
50829=Util:EncodingError:EncodingError(int, int)
50830=Util:reportEncodingError(EncodingErrorCollector, int, int)
50831=Util:EncodingError:getSource(char[])
50832=Util:EncodingErrorCollector:reportAllEncodingErrors(String)
50833=Util:getCharContents(FileObject, boolean, byte[], String)
50834=BatchDispatchTests:internalTestGenerateClass(JavaCompiler)
50835=BatchDispatchTests:testProcessorArgumentsWithSystemCompiler()
50836=BatchDispatchTests:testCompilerOneClassWithEclipseCompiler()
50837=BatchDispatchTests:testProcessorArgumentsWithEclipseCompiler()
50838=BatchDispatchTests:test209961()
50839=BatchDispatchTests:internalTestProcessorArguments(JavaCompiler)
50840=BatchDispatchTests:BatchDispatchTests(String)
50841=BatchDispatchTests:tearDown()
50842=BatchDispatchTests:internalTestInheritance(JavaCompiler, String)
50843=BatchDispatchTests:testTwoAnnotations()
50844=BatchDispatchTests:testCheckOptions()
50845=BatchDispatchTests:setUp()
50846=BatchDispatchTests:testInheritedAnnosWithSystemCompiler()
50847=BatchDispatchTests:suite()
50848=BatchDispatchTests:testInheritedAnnosWithEclipseCompiler()
50849=BatchDispatchTests:testCompilerOneClassWithSystemCompiler()
50850=A:launch()
50851=DOMBuilder:enterAbstractMethod(int, int[], int, int, char[], int, int, int, char[], int, int, char[][], int[], int[], char[][], int[], int[], int, int, int, char[][], int[], int[], int, boolean)
50852=DOMBuilder:createCompilationUnit(ICompilationUnit)
50853=DOMBuilder:createCompilationUnit()
50854=DOMBuilder:createMethod(char[])
50855=DOMBuilder:createPackage(char[])
50856=DOMBuilder:createImport(char[])
50857=DOMBuilder:createFields(char[])
50858=DOMBuilder:createPackage()
50859=DOMBuilder:enterInterface(int, int[], int, int, int, char[], int, int, char[][], int[], int[], int)
50860=DOMBuilder:enterType(int, int[], int, int, int, char[], int, int, char[], int, int, char[][], int[], int[], int, boolean)
50861=DOMBuilder:getParser(Map)
50862=DOMBuilder:exitMethod(int, int)
50863=DOMBuilder:acceptImport(int, int, int[], char[], int, boolean, int)
50864=DOMBuilder:createType(char[])
50865=DOMBuilder:enterClass(int, int[], int, int, int, char[], int, int, char[], int, int, char[][], int[], int[], int)
50866=DOMBuilder:enterMethod(int, int[], int, int, char[], int, int, int, char[], int, int, char[][], int[], int[], char[][], int[], int[], int, int, int, char[][], int[], int[], int)
50867=DOMBuilder:addChild(IDOMNode)
50868=DOMBuilder:acceptPackage(int, int, int[], char[], int)
50869=DOMBuilder:exitAbstractMethod(int, int)
50870=DOMBuilder:createInitializer(char[])
50871=DOMBuilder:exitConstructor(int, int)
50872=DOMBuilder:exitField(int, int)
50873=DOMBuilder:acceptInitializer(int, int, int[], int, int, int, int)
50874=DOMBuilder:exitInterface(int, int)
50875=DOMBuilder:enterConstructor(int, int[], int, int, char[], int, int, char[][], int[], int[], char[][], int[], int[], int, char[][], int[], int[], int)
50876=DOMBuilder:enterField(int, int[], int, int, char[], int, int, int, char[], int, int, int, int)
50877=DOMBuilder:createImport()
50878=DOMBuilder:acceptProblem(CategorizedProblem)
50879=DOMBuilder:exitClass(int, int)
50880=DOMBuilder:initializeBuild(char[], boolean, boolean, boolean)
50881=DOMBuilder:createField(char[])
50882=DOMBuilder:DOMBuilder()
50883=X19:foo()
50884=Example:bar()
50885=Example:foo()
50886=Example:foo2()
50887=EncodedFileOutputStream:EncodedFileOutputStream(IFile, BuildEnv, String)
50888=EncodedFileOutputStream:close()
50889=LabeledStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
50890=LabeledStatement:generateCode(BlockScope, CodeStream)
50891=LabeledStatement:resolve(BlockScope)
50892=LabeledStatement:concreteStatement()
50893=LabeledStatement:printStatement(int, StringBuffer)
50894=LabeledStatement:traverse(ASTVisitor, BlockScope)
50895=LabeledStatement:LabeledStatement(char[], Statement, int, int)
50896=A:foo(int)
50897=CommentWrapExecutor:getLinesCount()
50898=CommentWrapExecutor:CommentWrapExecutor(TokenManager, DefaultCodeFormatterOptions)
50899=CommentWrapExecutor:token(Token, int)
50900=CommentWrapExecutor:wrapMultiLineComment(Token, int, boolean, boolean)
50901=CommentWrapExecutor:wrapLineComment(Token, int)
50902=CommentWrapExecutor:shouldWrap()
50903=Test1:test1(MyMap<String, Test1>)
50904=ASTConverter15JLS8Test:test0134()
50905=ASTConverter15JLS8Test:test0289()
50906=ASTConverter15JLS8Test:test0243()
50907=ASTConverter15JLS8Test:replaceNodeInParent(Expression, Expression)
50908=ASTConverter15JLS8Test:test0036()
50909=ASTConverter15JLS8Test:test0330()
50910=ASTConverter15JLS8Test:test0145()
50911=ASTConverter15JLS8Test:test342()
50912=ASTConverter15JLS8Test:test0278()
50913=ASTConverter15JLS8Test:test0001()
50914=ASTConverter15JLS8Test:test0232()
50915=ASTConverter15JLS8Test:test0047()
50916=ASTConverter15JLS8Test:test0112()
50917=ASTConverter15JLS8Test:test0158()
50918=ASTConverter15JLS8Test:test0014()
50919=ASTConverter15JLS8Test:test0267()
50920=ASTConverter15JLS8Test:test0221()
50921=ASTConverter15JLS8Test:test0123()
50922=ASTConverter15JLS8Test:test0169()
50923=ASTConverter15JLS8Test:test0210()
50924=ASTConverter15JLS8Test:test0256()
50925=ASTConverter15JLS8Test:test0025()
50926=ASTConverter15JLS8Test:testBug187430()
50927=ASTConverter15JLS8Test:test0132()
50928=ASTConverter15JLS8Test:test0178()
50929=ASTConverter15JLS8Test:test0241()
50930=ASTConverter15JLS8Test:test0287()
50931=ASTConverter15JLS8Test:test0034()
50932=ASTConverter15JLS8Test:test0143()
50933=ASTConverter15JLS8Test:test0189()
50934=ASTConverter15JLS8Test:test344()
50935=ASTConverter15JLS8Test:test0230()
50936=ASTConverter15JLS8Test:test0276()
50937=ASTConverter15JLS8Test:test0045()
50938=ASTConverter15JLS8Test:test0156()
50939=ASTConverter15JLS8Test:test0110()
50940=ASTConverter15JLS8Test:test0012()
50941=ASTConverter15JLS8Test:test0265()
50942=ASTConverter15JLS8Test:test0058()
50943=ASTConverter15JLS8Test:test0121()
50944=ASTConverter15JLS8Test:test0167()
50945=ASTConverter15JLS8Test:test0254()
50946=ASTConverter15JLS8Test:test0023()
50947=ASTConverter15JLS8Test:test0069()
50948=ASTConverter15JLS8Test:test0130()
50949=ASTConverter15JLS8Test:test0176()
50950=ASTConverter15JLS8Test:test0239_2()
50951=ASTConverter15JLS8Test:test0285()
50952=ASTConverter15JLS8Test:test0032()
50953=ASTConverter15JLS8Test:test0078()
50954=ASTConverter15JLS8Test:_test0348()
50955=ASTConverter15JLS8Test:test0141()
50956=ASTConverter15JLS8Test:test0187()
50957=ASTConverter15JLS8Test:test0319()
50958=ASTConverter15JLS8Test:test0274()
50959=ASTConverter15JLS8Test:test0043()
50960=ASTConverter15JLS8Test:test0089()
50961=ASTConverter15JLS8Test:_test0270()
50962=ASTConverter15JLS8Test:test0154()
50963=ASTConverter15JLS8Test:test0308()
50964=ASTConverter15JLS8Test:test0010()
50965=ASTConverter15JLS8Test:test0263()
50966=ASTConverter15JLS8Test:test0056()
50967=ASTConverter15JLS8Test:test0165()
50968=ASTConverter15JLS8Test:ASTConverter15JLS8Test(String)
50969=ASTConverter15JLS8Test:test0252()
50970=ASTConverter15JLS8Test:test0298()
50971=ASTConverter15JLS8Test:test0021()
50972=ASTConverter15JLS8Test:test0067()
50973=ASTConverter15JLS8Test:test0030()
50974=ASTConverter15JLS8Test:test0174()
50975=ASTConverter15JLS8Test:test0283()
50976=ASTConverter15JLS8Test:test0328()
50977=ASTConverter15JLS8Test:test0076()
50978=ASTConverter15JLS8Test:test0238_2()
50979=ASTConverter15JLS8Test:test0041()
50980=ASTConverter15JLS8Test:test0185()
50981=ASTConverter15JLS8Test:test0272()
50982=ASTConverter15JLS8Test:test0317()
50983=ASTConverter15JLS8Test:test0087()
50984=ASTConverter15JLS8Test:test0219()
50985=ASTConverter15JLS8Test:test0152()
50986=ASTConverter15JLS8Test:test0261()
50987=ASTConverter15JLS8Test:test0306()
50988=ASTConverter15JLS8Test:test0198()
50989=ASTConverter15JLS8Test:test0054()
50990=ASTConverter15JLS8Test:test0208()
50991=ASTConverter15JLS8Test:test0163()
50992=ASTConverter15JLS8Test:test0250()
50993=ASTConverter15JLS8Test:test0296()
50994=ASTConverter15JLS8Test:test0065()
50995=ASTConverter15JLS8Test:test0051()
50996=ASTConverter15JLS8Test:test0303()
50997=ASTConverter15JLS8Test:test0349()
50998=ASTConverter15JLS8Test:test0195()
50999=ASTConverter15JLS8Test:test0205()
51000=ASTConverter15JLS8Test:test0097()
51001=ASTConverter15JLS8Test:test0062()
51002=ASTConverter15JLS8Test:test0338()
51003=ASTConverter15JLS8Test:test0293()
51004=ASTConverter15JLS8Test:test0107()
51005=ASTConverter15JLS8Test:test0160()
51006=ASTConverter15JLS8Test:test0009()
51007=ASTConverter15JLS8Test:suite()
51008=ASTConverter15JLS8Test:test0282()
51009=ASTConverter15JLS8Test:test0327()
51010=ASTConverter15JLS8Test:test0173()
51011=ASTConverter15JLS8Test:test0075()
51012=ASTConverter15JLS8Test:test0229()
51013=ASTConverter15JLS8Test:test0040()
51014=ASTConverter15JLS8Test:test0316()
51015=ASTConverter15JLS8Test:test0184()
51016=ASTConverter15JLS8Test:test0218()
51017=ASTConverter15JLS8Test:test0086()
51018=ASTConverter15JLS8Test:test0095()
51019=ASTConverter15JLS8Test:test0301()
51020=ASTConverter15JLS8Test:test0347()
51021=ASTConverter15JLS8Test:test0193()
51022=ASTConverter15JLS8Test:test0203()
51023=ASTConverter15JLS8Test:test0249()
51024=ASTConverter15JLS8Test:test0060()
51025=ASTConverter15JLS8Test:test0336()
51026=ASTConverter15JLS8Test:test0291()
51027=ASTConverter15JLS8Test:test0105()
51028=ASTConverter15JLS8Test:test0238()
51029=ASTConverter15JLS8Test:test0007()
51030=ASTConverter15JLS8Test:test0073()
51031=ASTConverter15JLS8Test:test0280()
51032=ASTConverter15JLS8Test:test0325()
51033=ASTConverter15JLS8Test:test0118()
51034=ASTConverter15JLS8Test:test0171()
51035=ASTConverter15JLS8Test:test0227()
51036=ASTConverter15JLS8Test:test0084()
51037=ASTConverter15JLS8Test:test0314()
51038=ASTConverter15JLS8Test:test0129()
51039=ASTConverter15JLS8Test:test0182()
51040=ASTConverter15JLS8Test:test0216()
51041=ASTConverter15JLS8Test:test0345()
51042=ASTConverter15JLS8Test:test0093()
51043=ASTConverter15JLS8Test:test0138()
51044=ASTConverter15JLS8Test:test0191()
51045=ASTConverter15JLS8Test:test0247()
51046=ASTConverter15JLS8Test:test0201()
51047=ASTConverter15JLS8Test:test0103()
51048=ASTConverter15JLS8Test:test0334()
51049=ASTConverter15JLS8Test:test0149()
51050=ASTConverter15JLS8Test:test0005()
51051=ASTConverter15JLS8Test:test0236()
51052=ASTConverter15JLS8Test:test234609()
51053=ASTConverter15JLS8Test:test0323()
51054=ASTConverter15JLS8Test:test0071()
51055=ASTConverter15JLS8Test:test0116()
51056=ASTConverter15JLS8Test:test0225()
51057=ASTConverter15JLS8Test:test0018()
51058=ASTConverter15JLS8Test:test0082()
51059=ASTConverter15JLS8Test:test0312()
51060=ASTConverter15JLS8Test:test0127()
51061=ASTConverter15JLS8Test:test0029()
51062=ASTConverter15JLS8Test:test0180()
51063=ASTConverter15JLS8Test:test0214()
51064=ASTConverter15JLS8Test:test0136()
51065=ASTConverter15JLS8Test:test0091()
51066=ASTConverter15JLS8Test:test0245()
51067=ASTConverter15JLS8Test:test0348a()
51068=ASTConverter15JLS8Test:test0038()
51069=ASTConverter15JLS8Test:test0101()
51070=ASTConverter15JLS8Test:test0147()
51071=ASTConverter15JLS8Test:test0332()
51072=ASTConverter15JLS8Test:test0234()
51073=ASTConverter15JLS8Test:test0003()
51074=ASTConverter15JLS8Test:test0049()
51075=ASTConverter15JLS8Test:test0114()
51076=ASTConverter15JLS8Test:test0016()
51077=ASTConverter15JLS8Test:test0223()
51078=ASTConverter15JLS8Test:test0269()
51079=ASTConverter15JLS8Test:test0080()
51080=ASTConverter15JLS8Test:test0125()
51081=ASTConverter15JLS8Test:test0310()
51082=ASTConverter15JLS8Test:test0258()
51083=ASTConverter15JLS8Test:test0212()
51084=ASTConverter15JLS8Test:test0027()
51085=ASTConverter15JLS8Test:test0157()
51086=ASTConverter15JLS8Test:test0111()
51087=ASTConverter15JLS8Test:test0266()
51088=ASTConverter15JLS8Test:test0013()
51089=ASTConverter15JLS8Test:test0220()
51090=ASTConverter15JLS8Test:test0059()
51091=ASTConverter15JLS8Test:test0122()
51092=ASTConverter15JLS8Test:test0168()
51093=ASTConverter15JLS8Test:_test0321()
51094=ASTConverter15JLS8Test:test0255()
51095=ASTConverter15JLS8Test:test0024()
51096=ASTConverter15JLS8Test:test0090()
51097=ASTConverter15JLS8Test:test0135()
51098=ASTConverter15JLS8Test:test0244()
51099=ASTConverter15JLS8Test:test0037()
51100=ASTConverter15JLS8Test:test0331()
51101=ASTConverter15JLS8Test:test0146()
51102=ASTConverter15JLS8Test:test0100()
51103=ASTConverter15JLS8Test:test0233()
51104=ASTConverter15JLS8Test:test0279()
51105=ASTConverter15JLS8Test:test343()
51106=ASTConverter15JLS8Test:test0002()
51107=ASTConverter15JLS8Test:test0048()
51108=ASTConverter15JLS8Test:test0155()
51109=ASTConverter15JLS8Test:test0309()
51110=ASTConverter15JLS8Test:test0264()
51111=ASTConverter15JLS8Test:test0011()
51112=ASTConverter15JLS8Test:tearDown()
51113=ASTConverter15JLS8Test:test0057()
51114=ASTConverter15JLS8Test:test0166()
51115=ASTConverter15JLS8Test:test0120()
51116=ASTConverter15JLS8Test:test0299()
51117=ASTConverter15JLS8Test:test0253()
51118=ASTConverter15JLS8Test:test0022()
51119=ASTConverter15JLS8Test:test0068()
51120=ASTConverter15JLS8Test:test0340()
51121=ASTConverter15JLS8Test:test0133()
51122=ASTConverter15JLS8Test:test0179()
51123=ASTConverter15JLS8Test:test0288()
51124=ASTConverter15JLS8Test:test0242()
51125=ASTConverter15JLS8Test:test0035()
51126=ASTConverter15JLS8Test:test0144()
51127=ASTConverter15JLS8Test:test0277()
51128=ASTConverter15JLS8Test:test0231()
51129=ASTConverter15JLS8Test:test0046()
51130=ASTConverter15JLS8Test:test0153()
51131=ASTConverter15JLS8Test:test0199()
51132=ASTConverter15JLS8Test:test0307()
51133=ASTConverter15JLS8Test:test0262()
51134=ASTConverter15JLS8Test:test0055()
51135=ASTConverter15JLS8Test:test0209()
51136=ASTConverter15JLS8Test:test0164()
51137=ASTConverter15JLS8Test:test0251()
51138=ASTConverter15JLS8Test:test0297()
51139=ASTConverter15JLS8Test:test0020()
51140=ASTConverter15JLS8Test:test0066()
51141=ASTConverter15JLS8Test:test0131()
51142=ASTConverter15JLS8Test:test0177()
51143=ASTConverter15JLS8Test:test0286()
51144=ASTConverter15JLS8Test:test0240()
51145=ASTConverter15JLS8Test:test0033()
51146=ASTConverter15JLS8Test:test0079()
51147=ASTConverter15JLS8Test:test234609b()
51148=ASTConverter15JLS8Test:test0142()
51149=ASTConverter15JLS8Test:test0188()
51150=ASTConverter15JLS8Test:test0275()
51151=ASTConverter15JLS8Test:test0044()
51152=ASTConverter15JLS8Test:_test0271()
51153=ASTConverter15JLS8Test:test0197()
51154=ASTConverter15JLS8Test:test0260()
51155=ASTConverter15JLS8Test:test0305()
51156=ASTConverter15JLS8Test:test0151()
51157=ASTConverter15JLS8Test:test0207()
51158=ASTConverter15JLS8Test:test0053()
51159=ASTConverter15JLS8Test:test0099()
51160=ASTConverter15JLS8Test:test0109()
51161=ASTConverter15JLS8Test:test0295()
51162=ASTConverter15JLS8Test:test0162()
51163=ASTConverter15JLS8Test:test0064()
51164=ASTConverter15JLS8Test:test0204c()
51165=ASTConverter15JLS8Test:test0175()
51166=ASTConverter15JLS8Test:test0329()
51167=ASTConverter15JLS8Test:test0284()
51168=ASTConverter15JLS8Test:test0031()
51169=ASTConverter15JLS8Test:test0077()
51170=ASTConverter15JLS8Test:test0186()
51171=ASTConverter15JLS8Test:test0318()
51172=ASTConverter15JLS8Test:test341()
51173=ASTConverter15JLS8Test:test0273()
51174=ASTConverter15JLS8Test:test0042()
51175=ASTConverter15JLS8Test:test0088()
51176=ASTConverter15JLS8Test:test0140()
51177=ASTConverter15JLS8Test:test0204b()
51178=ASTConverter15JLS8Test:test0074()
51179=ASTConverter15JLS8Test:test0281()
51180=ASTConverter15JLS8Test:test0326()
51181=ASTConverter15JLS8Test:test0119()
51182=ASTConverter15JLS8Test:test0172()
51183=ASTConverter15JLS8Test:test0228()
51184=ASTConverter15JLS8Test:test0085()
51185=ASTConverter15JLS8Test:test0315()
51186=ASTConverter15JLS8Test:test0183()
51187=ASTConverter15JLS8Test:test0217()
51188=ASTConverter15JLS8Test:test0052()
51189=ASTConverter15JLS8Test:test0304()
51190=ASTConverter15JLS8Test:test0196()
51191=ASTConverter15JLS8Test:test0150()
51192=ASTConverter15JLS8Test:test0206()
51193=ASTConverter15JLS8Test:test0098()
51194=ASTConverter15JLS8Test:test0063()
51195=ASTConverter15JLS8Test:test0294()
51196=ASTConverter15JLS8Test:test0339()
51197=ASTConverter15JLS8Test:test0108()
51198=ASTConverter15JLS8Test:test0161()
51199=ASTConverter15JLS8Test:test0324()
51200=ASTConverter15JLS8Test:test0072()
51201=ASTConverter15JLS8Test:test0117()
51202=ASTConverter15JLS8Test:setUpSuite()
51203=ASTConverter15JLS8Test:test0170()
51204=ASTConverter15JLS8Test:test0226()
51205=ASTConverter15JLS8Test:test0019()
51206=ASTConverter15JLS8Test:test0313()
51207=ASTConverter15JLS8Test:test0083()
51208=ASTConverter15JLS8Test:test0128()
51209=ASTConverter15JLS8Test:test0181()
51210=ASTConverter15JLS8Test:test0215()
51211=ASTConverter15JLS8Test:test0050()
51212=ASTConverter15JLS8Test:test0096()
51213=ASTConverter15JLS8Test:test0302()
51214=ASTConverter15JLS8Test:test0194()
51215=ASTConverter15JLS8Test:test0204()
51216=ASTConverter15JLS8Test:test0061()
51217=ASTConverter15JLS8Test:test0292()
51218=ASTConverter15JLS8Test:test0337()
51219=ASTConverter15JLS8Test:test0106()
51220=ASTConverter15JLS8Test:test0008()
51221=ASTConverter15JLS8Test:test0239()
51222=ASTConverter15JLS8Test:test0070()
51223=ASTConverter15JLS8Test:test0115()
51224=ASTConverter15JLS8Test:test0322()
51225=ASTConverter15JLS8Test:test0224()
51226=ASTConverter15JLS8Test:test0017()
51227=ASTConverter15JLS8Test:test0081()
51228=ASTConverter15JLS8Test:test0126()
51229=ASTConverter15JLS8Test:test0311()
51230=ASTConverter15JLS8Test:test0028()
51231=ASTConverter15JLS8Test:test0213()
51232=ASTConverter15JLS8Test:test0259()
51233=ASTConverter15JLS8Test:test0300()
51234=ASTConverter15JLS8Test:test0346()
51235=ASTConverter15JLS8Test:test0094()
51236=ASTConverter15JLS8Test:test0139()
51237=ASTConverter15JLS8Test:testBug348024()
51238=ASTConverter15JLS8Test:test0192()
51239=ASTConverter15JLS8Test:test0202()
51240=ASTConverter15JLS8Test:test0248()
51241=ASTConverter15JLS8Test:test0104()
51242=ASTConverter15JLS8Test:test0335()
51243=ASTConverter15JLS8Test:test0290()
51244=ASTConverter15JLS8Test:test0237()
51245=ASTConverter15JLS8Test:test0006()
51246=ASTConverter15JLS8Test:test0113()
51247=ASTConverter15JLS8Test:test0159()
51248=ASTConverter15JLS8Test:test0320()
51249=ASTConverter15JLS8Test:test0222()
51250=ASTConverter15JLS8Test:test0268()
51251=ASTConverter15JLS8Test:test0015()
51252=ASTConverter15JLS8Test:test0124()
51253=ASTConverter15JLS8Test:test0257()
51254=ASTConverter15JLS8Test:test0211()
51255=ASTConverter15JLS8Test:test0026()
51256=ASTConverter15JLS8Test:test0092()
51257=ASTConverter15JLS8Test:test0137()
51258=ASTConverter15JLS8Test:test0039()
51259=ASTConverter15JLS8Test:test0190()
51260=ASTConverter15JLS8Test:test0246()
51261=ASTConverter15JLS8Test:test0200()
51262=ASTConverter15JLS8Test:test0348b()
51263=ASTConverter15JLS8Test:test0102()
51264=ASTConverter15JLS8Test:test0148()
51265=ASTConverter15JLS8Test:test0333()
51266=ASTConverter15JLS8Test:test0004()
51267=ASTConverter15JLS8Test:test0235()
51268=SourceAnnotationMethodInfo:isAnnotationMethod()
51269=JavaIndexTests:testIndexInJar()
51270=JavaIndexTests:testPlatformJarIndexFile()
51271=JavaIndexTests:testEditClasspath()
51272=JavaIndexTests:suite()
51273=JavaIndexTests:testChangeClasspath()
51274=JavaIndexTests:setContainerPath(IJavaProject, IPath, String)
51275=JavaIndexTests:testUseIndex()
51276=JavaIndexTests:testNonExistentIndexAfterRestart()
51277=JavaIndexTests:testChangeClasspathForInternalJar()
51278=JavaIndexTests:testGenerateIndex()
51279=JavaIndexTests:JavaIndexTests(String)
51280=JavaIndexTests:testPlatformIndexFile()
51281=JavaIndexTests:testUserLibraryIndex()
51282=JavaIndexTests:testUseIndexInternalJarAfterRestart()
51283=JavaIndexTests:testNonExistentIndexRestart()
51284=JavaIndexTests:testUseIndexAfterRestart()
51285=JavaIndexTests:testExistentIndexAfterRestart()
51286=JavaIndexTests:testNonExistentIndex()
51287=JavaIndexTests:testDeleteProject()
51288=JavaIndexTests:testDeleteIndexedFile()
51289=JavaIndexTests:testModifyJarAfterIndex()
51290=JavaIndexTests:testMultipleProjects()
51291=IGenericField:getModifiers()
51292=Messages:Messages()
51293=BadFormattingSample:foo()
51294=TypeDeclarationLocator:match(TypeDeclaration, MatchingNodeSet)
51295=TypeDeclarationLocator:resolveLevel(Binding)
51296=TypeDeclarationLocator:toString()
51297=TypeDeclarationLocator:resolveLevelForType(char[], char[], char[], TypeBinding)
51298=TypeDeclarationLocator:TypeDeclarationLocator(TypeDeclarationPattern)
51299=TypeDeclarationLocator:resolveLevel(ASTNode)
51300=ASTConverter:getOperatorFor(int)
51301=ASTConverter:retrieveStartingCatchPosition(int, int)
51302=ASTConverter:retrieveStartBlockPosition(int, int)
51303=ASTConverter:setModifiers(EnumDeclaration, org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
51304=ASTConverter:setModifiers(TypeDeclaration, org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
51305=ASTConverter:setModifiers(MethodDeclaration, AbstractMethodDeclaration)
51306=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.LambdaExpression)
51307=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.TypeParameter)
51308=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.LongLiteral)
51309=ASTConverter:convertToParenthesizedExpression(org.eclipse.jdt.internal.compiler.ast.Expression)
51310=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.LabeledStatement)
51311=ASTConverter:setTypeAnnotationsOnDimension(Dimension, org.eclipse.jdt.internal.compiler.ast.Annotation[][], int)
51312=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.DoStatement)
51313=ASTConverter:setQualifiedNameNameAndSourceRanges(char[][], long[], int, org.eclipse.jdt.internal.compiler.ast.TypeReference)
51314=ASTConverter:convert(boolean, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
51315=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.Expression)
51316=ASTConverter:setExtraAnnotatedDimensions(int, int, TypeReference, List, int)
51317=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.Argument)
51318=ASTConverter:setTypeForSingleVariableDeclaration(SingleVariableDeclaration, Type, int)
51319=ASTConverter:convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
51320=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.IfStatement)
51321=ASTConverter:setQualifiedNameNameAndSourceRanges(char[][], long[], org.eclipse.jdt.internal.compiler.ast.ASTNode)
51322=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.SwitchStatement)
51323=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression)
51324=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess)
51325=ASTConverter:setModifiers(FieldDeclaration, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
51326=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.ArrayInitializer)
51327=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference)
51328=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression)
51329=ASTConverter:retrieveProperRightBracketPosition(int, int)
51330=ASTConverter:buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, AbstractTypeDeclaration, boolean)
51331=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.MemberValuePair)
51332=ASTConverter:createSimpleType(Name, TypeReference, long[], int, int)
51333=ASTConverter:convertToVariableDeclarationStatement(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration)
51334=ASTConverter:retrieveRightBraceOrSemiColonPosition(int, int)
51335=ASTConverter:updateInnerPositions(Type, int)
51336=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.TypeReference)
51337=ASTConverter:removeLeadingAndTrailingCommentsFromLiteral(ASTNode)
51338=ASTConverter:convertToArray(Type, int, int, int, org.eclipse.jdt.internal.compiler.ast.Annotation[][])
51339=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.FloatLiteral)
51340=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue)
51341=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.ReturnStatement)
51342=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.WhileStatement)
51343=ASTConverter:setTypeNameForAnnotation(org.eclipse.jdt.internal.compiler.ast.Annotation, Annotation)
51344=ASTConverter:recordPendingThisExpressionScopeResolution(ThisExpression)
51345=ASTConverter:internalThownExceptions(MethodDeclaration)
51346=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.UnaryExpression)
51347=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.Block)
51348=ASTConverter:setSourceRangeAnnotationsAndRecordNodes(TypeReference, AnnotatableType, long[], org.eclipse.jdt.internal.compiler.ast.Annotation[][], int, int, int)
51349=ASTConverter:convert(MessageSend)
51350=ASTConverter:checkCanceled()
51351=ASTConverter:setTypeForField(FieldDeclaration, Type, int)
51352=ASTConverter:convertImport(org.eclipse.jdt.internal.compiler.ast.ImportReference)
51353=ASTConverter:convert(StringLiteralConcatenation)
51354=ASTConverter:setModifiers(AnnotationTypeDeclaration, org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
51355=ASTConverter:buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, AnonymousClassDeclaration)
51356=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.PostfixExpression)
51357=ASTConverter:retrieveClosingAngleBracketPosition(int)
51358=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.IntLiteral)
51359=ASTConverter:checkAndSetMalformed(ASTNode, ASTNode)
51360=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.SingleNameReference)
51361=ASTConverter:retrieveEndOfElementTypeNamePosition(int, int)
51362=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.NormalAnnotation)
51363=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.DoubleLiteral)
51364=ASTConverter:retrieveEllipsisStartPosition(int, int)
51365=ASTConverter:retrieveEndOfPotentialExtendedDimensions(int, int, int)
51366=ASTConverter:setModifiers(EnumConstantDeclaration, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
51367=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.NameReference)
51368=ASTConverter:setAST(AST)
51369=ASTConverter:createFakeEmptyStatement(org.eclipse.jdt.internal.compiler.ast.Statement)
51370=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.BinaryExpression)
51371=ASTConverter:setTypeForMethodDeclaration(MethodDeclaration, Type, int)
51372=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.Reference)
51373=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference)
51374=ASTConverter:setTypeForVariableDeclarationExpression(VariableDeclarationExpression, Type, int)
51375=ASTConverter:setTypeAnnotationsAndSourceRangeOnArray(ArrayType, org.eclipse.jdt.internal.compiler.ast.Annotation[][])
51376=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.TryStatement)
51377=ASTConverter:recordPendingNameScopeResolution(Name)
51378=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.ContinueStatement)
51379=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.ReferenceExpression)
51380=ASTConverter:completeRecord(ArrayType, org.eclipse.jdt.internal.compiler.ast.ASTNode)
51381=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
51382=ASTConverter:adjustSourcePositionsForParent(org.eclipse.jdt.internal.compiler.ast.Expression)
51383=ASTConverter:lookupForScopes()
51384=ASTConverter:convertToDimensions(int, int, org.eclipse.jdt.internal.compiler.ast.Annotation[])
51385=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral)
51386=ASTConverter:recordNodes(ASTNode, org.eclipse.jdt.internal.compiler.ast.ASTNode)
51387=ASTConverter:retrieveColonPosition(ASTNode)
51388=ASTConverter:recordName(Name, org.eclipse.jdt.internal.compiler.ast.ASTNode)
51389=ASTConverter:createBaseType(TypeReference, long[], org.eclipse.jdt.internal.compiler.ast.Annotation[][], char[][], int, int, boolean)
51390=ASTConverter:checkLength(int, int)
51391=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.ThrowStatement)
51392=ASTConverter:retrieveProperRightBracketPosition(int, int, int)
51393=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.BreakStatement)
51394=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.ThisReference)
51395=ASTConverter:setSourceRangeAnnotationsAndRecordNodes(TypeReference, AnnotatableType, org.eclipse.jdt.internal.compiler.ast.Annotation[][], int, int, int)
51396=ASTConverter:retrieveRightBrace(int, int)
51397=ASTConverter:setModifiers(AnnotationTypeMemberDeclaration, org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration)
51398=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
51399=ASTConverter:internalSetExtraDimensions(VariableDeclarationFragment, int)
51400=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.EmptyStatement)
51401=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.TrueLiteral)
51402=ASTConverter:setModifiers(SingleVariableDeclaration, Argument)
51403=ASTConverter:internalSetExtraDimensions(MethodDeclaration, int)
51404=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.EqualExpression)
51405=ASTConverter:convertPackage(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration)
51406=ASTConverter:convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration)
51407=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.FieldReference)
51408=ASTConverter:trimWhiteSpacesAndComments(org.eclipse.jdt.internal.compiler.ast.Expression)
51409=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.CharLiteral)
51410=ASTConverter:convertToVariableDeclarationExpression(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration)
51411=ASTConverter:setModifiers(VariableDeclarationStatement, LocalDeclaration)
51412=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement)
51413=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.Javadoc, BodyDeclaration)
51414=ASTConverter:ASTConverter(Map<String, String>, boolean, IProgressMonitor)
51415=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference)
51416=ASTConverter:annotateTypeParameter(TypeParameter, org.eclipse.jdt.internal.compiler.ast.Annotation[])
51417=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.ConditionalExpression)
51418=ASTConverter:getPrimitiveTypeCode(char[])
51419=ASTConverter:trimWhiteSpacesAndComments(int, int)
51420=ASTConverter:recordNodes(org.eclipse.jdt.internal.compiler.ast.Javadoc, TagElement)
51421=ASTConverter:retrieveInitAndSetPositions(int, int, Name)
51422=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.Assignment)
51423=ASTConverter:setTypeForVariableDeclarationStatement(VariableDeclarationStatement, Type, int)
51424=ASTConverter:setModifiers(BodyDeclaration, org.eclipse.jdt.internal.compiler.ast.Annotation[], int)
51425=ASTConverter:isPrimitiveType(char[])
51426=ASTConverter:createComment(int[])
51427=ASTConverter:retrieveIdentifierAndSetPositions(int, int, Name)
51428=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.CastExpression)
51429=ASTConverter:convertAndSetReceiver(AbstractMethodDeclaration, MethodDeclaration)
51430=ASTConverter:convertToExpression(org.eclipse.jdt.internal.compiler.ast.Statement)
51431=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.NullLiteral)
51432=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression)
51433=ASTConverter:convertToFieldDeclaration(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
51434=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression)
51435=ASTConverter:lookupScope(ASTNode)
51436=ASTConverter:createQualifiedType(TypeReference, long[], org.eclipse.jdt.internal.compiler.ast.Annotation[][], char[][], int, Type)
51437=ASTConverter:setModifiers(VariableDeclarationExpression, LocalDeclaration)
51438=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.CompoundAssignment)
51439=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.ArrayReference)
51440=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.Javadoc, PackageDeclaration)
51441=ASTConverter:trimWhiteSpacesAndComments(ASTNode)
51442=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.AssertStatement)
51443=ASTConverter:setInfixSourcePositions(InfixExpression, int)
51444=ASTConverter:retrieveIdentifierEndPosition(int, int)
51445=ASTConverter:checkAndAddMultipleFieldDeclaration(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[], int, List)
51446=ASTConverter:buildCommentsTable(CompilationUnit, int[][])
51447=ASTConverter:convert(ForeachStatement)
51448=ASTConverter:checkAndAddMultipleLocalDeclaration(org.eclipse.jdt.internal.compiler.ast.Statement[], int, List)
51449=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation)
51450=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.StringLiteral)
51451=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall)
51452=ASTConverter:buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, EnumDeclaration)
51453=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration)
51454=ASTConverter:convertToAnnotationDeclaration(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
51455=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.AllocationExpression)
51456=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.Annotation)
51457=ASTConverter:setTypeForMethodDeclaration(AnnotationTypeMemberDeclaration, Type, int)
51458=ASTConverter:convertToEnumDeclaration(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
51459=ASTConverter:componentType(ArrayType)
51460=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.ASTNode[])
51461=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration, char[])
51462=ASTConverter:retrieveEndOfRightParenthesisPosition(int, int)
51463=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.PrefixExpression)
51464=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.Statement)
51465=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.ForStatement)
51466=ASTConverter:internalSetExtraDimensions(SingleVariableDeclaration, int)
51467=ASTConverter:setModifiers(Initializer, org.eclipse.jdt.internal.compiler.ast.Initializer)
51468=ASTConverter:retrieveSemiColonPosition(Expression)
51469=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.FalseLiteral)
51470=ASTConverter:setModifiers(SingleVariableDeclaration, LocalDeclaration)
51471=ASTConverter:extractSubArrayType(ArrayType, int, int)
51472=ASTConverter:convertType(TypeReference)
51473=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue)
51474=ASTConverter:convertToSingleVariableDeclaration(LocalDeclaration)
51475=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression)
51476=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.CaseStatement)
51477=ASTConverter:annotateType(AnnotatableType, org.eclipse.jdt.internal.compiler.ast.Annotation[])
51478=ASTConverter:convert(org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation)
51479=ASTConverter:retrieveDimensionAndSetPositions(int, int, Dimension)
51480=ASTConverter:createSimpleName(TypeReference, long[], char[][], int)
51481=ASTConverter:createModifier(ModifierKeyword)
51482=ASTConverter:createFakeNullLiteral(org.eclipse.jdt.internal.compiler.ast.FunctionalExpression)
51483=Test:bar()
51484=Test:foo(int)
51485=Test:foo(long)
51486=A:foo(String)
51487=IProblem:isInfo()
51488=IProblem:setSourceEnd(int)
51489=IProblem:getOriginatingFileName()
51490=IProblem:getArguments()
51491=IProblem:isWarning()
51492=IProblem:getSourceEnd()
51493=IProblem:setSourceStart(int)
51494=IProblem:getSourceLineNumber()
51495=IProblem:getSourceStart()
51496=IProblem:setSourceLineNumber(int)
51497=IProblem:getID()
51498=IProblem:isError()
51499=IProblem:getMessage()
51500=RecipeDocumentProvider:setupDocument(Object, IDocument)
51501=RecipeDocumentProvider:createRecipePartitioner()
51502=AbstractJavaSearchScope:getAccessRuleSet(String, String)
51503=AbstractJavaSearchScope:packageFragmentRoot(String, int, String)
51504=A:foo(String[])
51505=F:foo()
51506=FieldDeclarationImpl:getType()
51507=FieldDeclarationImpl:getDeclaringType()
51508=FieldDeclarationImpl:getConstantExpression()
51509=FieldDeclarationImpl:getSimpleName()
51510=FieldDeclarationImpl:getConstantValue()
51511=FieldDeclarationImpl:isFromSource()
51512=FieldDeclarationImpl:getDeclarationBinding()
51513=FieldDeclarationImpl:toString()
51514=FieldDeclarationImpl:kind()
51515=FieldDeclarationImpl:accept(DeclarationVisitor)
51516=FieldDeclarationImpl:FieldDeclarationImpl(IVariableBinding, BaseProcessorEnv)
51517=Format:temp()
51518=Test:foo(String)
51519=AssertionFailedError:AssertionFailedError()
51520=AssertionFailedError:AssertionFailedError(String)
51521=A:main(String[])
51522=ASTParser:createBindings(IJavaElement[], IProgressMonitor)
51523=ASTParser:setCompilerOptions(Map<String, String>)
51524=ASTParser:setProject(IJavaProject)
51525=ASTParser:initializeDefaults()
51526=ASTParser:internalCreateASTForKind()
51527=ASTParser:rootNodeToCompilationUnit(AST, CompilationUnit, ASTNode, RecordedParsingInformation, RecoveryScannerData)
51528=ASTParser:setEnvironment(String[], String[], String[], boolean)
51529=ASTParser:propagateErrors(ASTNode, CategorizedProblem[], RecoveryScannerData)
51530=ASTParser:createASTs(String[], String[], String[], FileASTRequestor, IProgressMonitor)
51531=ASTParser:setWorkingCopyOwner(WorkingCopyOwner)
51532=ASTParser:setFocalPosition(int)
51533=ASTParser:setSource(IClassFile)
51534=ASTParser:setSource(char[])
51535=ASTParser:setBindingsRecovery(boolean)
51536=ASTParser:setStatementsRecovery(boolean)
51537=ASTParser:getClasspath()
51538=ASTParser:setUnitName(String)
51539=ASTParser:setIgnoreMethodBodies(boolean)
51540=ASTParser:ASTParser(int)
51541=ASTParser:setSourceRange(int, int)
51542=ASTParser:setSource(ITypeRoot)
51543=ASTParser:createAST(IProgressMonitor)
51544=ASTParser:newParser(int)
51545=ASTParser:internalCreateAST(IProgressMonitor)
51546=ASTParser:setSource(ICompilationUnit)
51547=ASTParser:setKind(int)
51548=ASTParser:createASTs(ICompilationUnit[], String[], ASTRequestor, IProgressMonitor)
51549=ASTParser:setResolveBindings(boolean)
51550=Java8ElementProcessor:testTypeAnnotations7()
51551=Java8ElementProcessor:testRepeatedAnnotations25()
51552=Java8ElementProcessor:testTypeAnnotations23()
51553=Java8ElementProcessor:testSE8Specifics()
51554=Java8ElementProcessor:AssertionFailedError:AssertionFailedError(String)
51555=Java8ElementProcessor:testTypeAnnotations12()
51556=Java8ElementProcessor:testTypeAnnotations9()
51557=Java8ElementProcessor:assertEquals(String, int, int)
51558=Java8ElementProcessor:testTypeAnnotations10()
51559=Java8ElementProcessor:assertModifiers(Set<Modifier>, String[])
51560=Java8ElementProcessor:testRepeatedAnnotations21()
51561=Java8ElementProcessor:testTypeAnnotations27()
51562=Java8ElementProcessor:testTypeAnnotations16()
51563=Java8ElementProcessor:assertEquals(String, Object, Object, Object)
51564=Java8ElementProcessor:equalsRegardingNull(Object, Object)
51565=Java8ElementProcessor:assertSame(String, Object, Object)
51566=Java8ElementProcessor:testTypeAnnotations14()
51567=Java8ElementProcessor:verifyAnnotations(AnnotatedConstruct, String[])
51568=Java8ElementProcessor:process(Set<? extends TypeElement>, RoundEnvironment)
51569=Java8ElementProcessor:testPackageAnnotations()
51570=Java8ElementProcessor:testTypeAnnotations2()
51571=Java8ElementProcessor:getAnnotationString(AnnotationMirror)
51572=Java8ElementProcessor:testRepeatedAnnotations17()
51573=Java8ElementProcessor:testTypeAnnotations4()
51574=Java8ElementProcessor:assertNotSame(String, Object, Object)
51575=Java8ElementProcessor:testRepeatedAnnotations19()
51576=Java8ElementProcessor:testTypeAnnotations6()
51577=Java8ElementProcessor:createPackageBinary()
51578=Java8ElementProcessor:testTypeAnnotations13()
51579=Java8ElementProcessor:assertEquals(Object, Object)
51580=Java8ElementProcessor:testTypeAnnotations8()
51581=Java8ElementProcessor:testRepeatedAnnotations24()
51582=Java8ElementProcessor:verifyAnnotations(AnnotatedConstruct, String[], String[])
51583=Java8ElementProcessor:testTypeAnnotations11()
51584=Java8ElementProcessor:getExceptionStackTrace(Throwable)
51585=Java8ElementProcessor:assertNotNull(String, Object)
51586=Java8ElementProcessor:testRepeatedAnnotations20()
51587=Java8ElementProcessor:assertEquals(String, Object, Object)
51588=Java8ElementProcessor:testTypeAnnotations15()
51589=Java8ElementProcessor:testRepeatedAnnotations22()
51590=Java8ElementProcessor:testTypeAnnotations26()
51591=Java8ElementProcessor:testLambdaSpecifics()
51592=Java8ElementProcessor:testAll()
51593=Java8ElementProcessor:assertFalse(String, boolean)
51594=Java8ElementProcessor:assertNull(String, Object)
51595=Java8ElementProcessor:testTypeAnnotations1()
51596=Java8ElementProcessor:testTypeAnnotations()
51597=Java8ElementProcessor:assertTrue(String, boolean)
51598=Java8ElementProcessor:testRepeatedAnnotations18()
51599=Java8ElementProcessor:testTypeAnnotations3()
51600=Java8ElementProcessor:invokeTestMethods(Map<String, String>)
51601=Java8ElementProcessor:reportError(String)
51602=Java8ElementProcessor:testTypeAnnotations5()
51603=Java8ElementProcessor:examineSE8AnnotationMethods(String, AnnotatedConstruct, String)
51604=X:someMethod(String, String, String)
51605=ITypeHierarchyChangedListener:typeHierarchyChanged(ITypeHierarchy)
51606=Test:main(String[])
51607=MethodParametersAttribute:getAccessFlags(int)
51608=MethodParametersAttribute:getParameterName(int)
51609=MethodParametersAttribute:MethodParametersAttribute(byte[], IConstantPool, int)
51610=MethodParametersAttribute:getMethodParameterLength()
51611=X02:foo()
51612=TestSuite:runTest(Test, TestResult)
51613=TestSuite:addTest(Test)
51614=TestSuite:countTestCases()
51615=TestSuite:TestSuite(String)
51616=TestSuite:TestSuite(Class, String)
51617=TestSuite:createTest(Class, String)
51618=TestSuite:toString()
51619=TestSuite:getTestConstructor(Class)
51620=TestSuite:isPublicTestMethod(Method)
51621=TestSuite:tests()
51622=TestSuite:testCount()
51623=TestSuite:isTestMethod(Method)
51624=TestSuite:run(TestResult)
51625=TestSuite:setName(String)
51626=TestSuite:exceptionToString(Throwable)
51627=TestSuite:TestSuite()
51628=TestSuite:addTestSuite(Class)
51629=TestSuite:testAt(int)
51630=TestSuite:TestSuite(Class)
51631=TestSuite:addTestMethod(Method, Vector, Class)
51632=TestSuite:warning(String)
51633=TestSuite:getName()
51634=AnnotationTypeDeclaration:AnnotationTypeDeclaration(AST)
51635=AnnotationTypeDeclaration:subtreeMatch0(ASTMatcher, Object)
51636=AnnotationTypeDeclaration:internalBodyDeclarationsProperty()
51637=AnnotationTypeDeclaration:getNodeType0()
51638=AnnotationTypeDeclaration:internalModifiersProperty()
51639=AnnotationTypeDeclaration:treeSize()
51640=AnnotationTypeDeclaration:clone0(AST)
51641=AnnotationTypeDeclaration:internalNameProperty()
51642=AnnotationTypeDeclaration:internalJavadocProperty()
51643=AnnotationTypeDeclaration:internalModifiers2Property()
51644=AnnotationTypeDeclaration:propertyDescriptors(int)
51645=AnnotationTypeDeclaration:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
51646=AnnotationTypeDeclaration:internalGetChildListProperty(ChildListPropertyDescriptor)
51647=AnnotationTypeDeclaration:internalStructuralPropertiesForType(int)
51648=AnnotationTypeDeclaration:internalResolveBinding()
51649=AnnotationTypeDeclaration:memSize()
51650=AnnotationTypeDeclaration:accept0(ASTVisitor)
51651=Test:foo()
51652=X06:runTest()
51653=X06:runBare()
51654=Example:foo()
51655=TypeAnnotationTest:test042_methodReturnType()
51656=TypeAnnotationTest:test068_codeblocks_methodReferenceTypeArgument()
51657=TypeAnnotationTest:test103d_atr()
51658=TypeAnnotationTest:test012_classExtends_reflection()
51659=TypeAnnotationTest:test047_methodParameterArray()
51660=TypeAnnotationTest:test100f_pqtr()
51661=TypeAnnotationTest:test015_classExtends_interfaces_reflection()
51662=TypeAnnotationTest:test006_classTypeParameter()
51663=TypeAnnotationTest:testBug415911()
51664=TypeAnnotationTest:test007_methodTypeParameter()
51665=TypeAnnotationTest:test027_classTypeParameterBound_complex()
51666=TypeAnnotationTest:test060e_codeblocks_new_arraysWithNestedTypes()
51667=TypeAnnotationTest:test055f_codeblocks_exceptionParameterComplex()
51668=TypeAnnotationTest:test060a_codeblocks_new_newArrayWithInitializer()
51669=TypeAnnotationTest:testBug426616a()
51670=TypeAnnotationTest:test041_field()
51671=TypeAnnotationTest:test009_classExtends()
51672=TypeAnnotationTest:test100a_pqtr()
51673=TypeAnnotationTest:test421148()
51674=TypeAnnotationTest:test016_classExtends()
51675=TypeAnnotationTest:test100i_pqtr()
51676=TypeAnnotationTest:test101b_qtr()
51677=TypeAnnotationTest:test078_codeblocks_methodInvocationTypeArgument()
51678=TypeAnnotationTest:test038_field()
51679=TypeAnnotationTest:test004_classTypeParameter_reflection()
51680=TypeAnnotationTest:test044_methodReceiver()
51681=TypeAnnotationTest:test081_multiuseAnnotations()
51682=TypeAnnotationTest:test033_field()
51683=TypeAnnotationTest:test010_classExtends()
51684=TypeAnnotationTest:test100k_pqtr()
51685=TypeAnnotationTest:test018_classExtends()
51686=TypeAnnotationTest:testBug492322readFromClassWithGenericBase()
51687=TypeAnnotationTest:test103c_atr()
51688=TypeAnnotationTest:test057_codeblocks_new()
51689=TypeAnnotationTest:test056_codeblocks_instanceof()
51690=TypeAnnotationTest:test080_multiuseAnnotations()
51691=TypeAnnotationTest:testBug492322WithOldBinary()
51692=TypeAnnotationTest:test039_field()
51693=TypeAnnotationTest:test106a_wtr()
51694=TypeAnnotationTest:test106b_wtr()
51695=TypeAnnotationTest:test067_codeblocks_constructorReferenceTypeArgument()
51696=TypeAnnotationTest:test421620()
51697=TypeAnnotationTest:test062_codeblocks_newArrayWithInitializer()
51698=TypeAnnotationTest:test103e_atr()
51699=TypeAnnotationTest:test062_codeblocks_newArray()
51700=TypeAnnotationTest:test025_classTypeParameterBound()
51701=TypeAnnotationTest:test102a_str()
51702=TypeAnnotationTest:test060f_codeblocks_new_arraysWithQualifiedNestedTypes()
51703=TypeAnnotationTest:test100_pqtr()
51704=TypeAnnotationTest:test100h_pqtr()
51705=TypeAnnotationTest:test046_methodParameter()
51706=TypeAnnotationTest:test070b_codeblocks_castWithIntersectionCast()
51707=TypeAnnotationTest:test418347b()
51708=TypeAnnotationTest:test019_classExtends()
51709=TypeAnnotationTest:testTypeVariable()
51710=TypeAnnotationTest:test049_codeblocks_localVariable()
51711=TypeAnnotationTest:test026_classTypeParameterBound()
51712=TypeAnnotationTest:testBug485386()
51713=TypeAnnotationTest:test105b_aqtr()
51714=TypeAnnotationTest:test070_codeblocks_cast_complex()
51715=TypeAnnotationTest:test079_codeblocks_methodInvocationTypeArgument()
51716=TypeAnnotationTest:testBug492322readFromClass()
51717=TypeAnnotationTest:test077_codeblocks_methodInvocationTypeArgument()
51718=TypeAnnotationTest:test043_methodReceiver()
51719=TypeAnnotationTest:test055a_codeblocks_exceptionParameterNestedType()
51720=TypeAnnotationTest:test064_codeblocks_constructorReference()
51721=TypeAnnotationTest:test100c_pqtr()
51722=TypeAnnotationTest:test060d_codeblocks_new_arraysWithNestedTypes()
51723=TypeAnnotationTest:test074_codeblocks_constructorInvocationTypeArgument()
51724=TypeAnnotationTest:test072_codeblocks_constructorInvocationTypeArgument()
51725=TypeAnnotationTest:test417660b()
51726=TypeAnnotationTest:test036_field()
51727=TypeAnnotationTest:test055c_codeblocks_exceptionParameterMultiCatch()
51728=TypeAnnotationTest:test055e_codeblocks_exceptionParameterMultiCatch()
51729=TypeAnnotationTest:testHybridTargets()
51730=TypeAnnotationTest:testClass()
51731=TypeAnnotationTest:test104b_pstr()
51732=TypeAnnotationTest:test045_methodParameter()
51733=TypeAnnotationTest:test052_codeblocks_exceptionParameter()
51734=TypeAnnotationTest:test070a_codeblocks_castWithIntersectionCast()
51735=TypeAnnotationTest:testForwardReference()
51736=TypeAnnotationTest:testConstructorResult()
51737=TypeAnnotationTest:testPQTRArray2()
51738=TypeAnnotationTest:test034_field()
51739=TypeAnnotationTest:test417660()
51740=TypeAnnotationTest:test005_classTypeParameter()
51741=TypeAnnotationTest:test070d_codeblocks_castDoubleIntersectionCastInExpression()
51742=TypeAnnotationTest:test069_codeblocks_cast()
51743=TypeAnnotationTest:test003_classTypeParameter()
51744=TypeAnnotationTest:test028_methodTypeParameterBound()
51745=TypeAnnotationTest:test100j_pqtr()
51746=TypeAnnotationTest:test038a_field()
51747=TypeAnnotationTest:test100b_pqtr()
51748=TypeAnnotationTest:test037_field()
51749=TypeAnnotationTest:testAnnotatedExtendedDimensions()
51750=TypeAnnotationTest:test051_codeblocks_resourceVariable()
51751=TypeAnnotationTest:test013_classExtends_interfaces()
51752=TypeAnnotationTest:test020_classExtends()
51753=TypeAnnotationTest:test014_classExtends_interfaces_reflection()
51754=TypeAnnotationTest:test059_codeblocks_new_newArray()
51755=TypeAnnotationTest:test102b_str()
51756=TypeAnnotationTest:testDeprecated()
51757=TypeAnnotationTest:test048_throws()
51758=TypeAnnotationTest:test103a_atr()
51759=TypeAnnotationTest:test061_codeblocks_new_newArrayWithInitializer()
51760=TypeAnnotationTest:test103b_atr()
51761=TypeAnnotationTest:test065_codeblocks_methodReference()
51762=TypeAnnotationTest:test058_codeblocks_new2()
51763=TypeAnnotationTest:test002_classTypeParameter_reflection()
51764=TypeAnnotationTest:test060_codeblocks_new_multiNewArray()
51765=TypeAnnotationTest:test017_classExtends()
51766=TypeAnnotationTest:test057_codeblocks_new3_415821()
51767=TypeAnnotationTest:test100e_pqtr()
51768=TypeAnnotationTest:test053_codeblocks_exceptionParameter()
51769=TypeAnnotationTest:test029_methodTypeParameterBound()
51770=TypeAnnotationTest:testAnnotatedRedundantCast2()
51771=TypeAnnotationTest:test001_classTypeParameter()
51772=TypeAnnotationTest:test030_methodTypeParameterBound()
51773=TypeAnnotationTest:testPQTRArray()
51774=TypeAnnotationTest:test418347a()
51775=TypeAnnotationTest:testBug426616()
51776=TypeAnnotationTest:test101a_qtr()
51777=TypeAnnotationTest:test055_codeblocks_exceptionParameterMultiCatch()
51778=TypeAnnotationTest:getCompilerOptions()
51779=TypeAnnotationTest:test066_codeblocks_methodReference()
51780=TypeAnnotationTest:test418347()
51781=TypeAnnotationTest:test071_codeblocks_constructorInvocationTypeArgument()
51782=TypeAnnotationTest:testHybridTargets2()
51783=TypeAnnotationTest:test070c_codeblocks_castTwiceInExpression()
51784=TypeAnnotationTest:test032_field()
51785=TypeAnnotationTest:test082_multiuseAnnotations()
51786=TypeAnnotationTest:test060c_codeblocks_new_multiNewArray()
51787=TypeAnnotationTest:test040_field_complex()
51788=TypeAnnotationTest:test060b_codeblocks_new_multiNewArray()
51789=TypeAnnotationTest:test075_codeblocks_constructorInvocationTypeArgument()
51790=TypeAnnotationTest:test100d_pqtr()
51791=TypeAnnotationTest:test050_codeblocks_localVariable()
51792=TypeAnnotationTest:test035_field()
51793=TypeAnnotationTest:test101c_qtr()
51794=TypeAnnotationTest:test024_classExtends()
51795=TypeAnnotationTest:test076_codeblocks_methodInvocationTypeArgument()
51796=TypeAnnotationTest:test054_codeblocks_exceptionParameter()
51797=TypeAnnotationTest:test104a_pstr()
51798=TypeAnnotationTest:test055d_codeblocks_exceptionParameterMultiCatch()
51799=TypeAnnotationTest:test055b_codeblocks_exceptionParameterMultiCatchNestedType()
51800=TypeAnnotationTest:test021_classExtends()
51801=TypeAnnotationTest:test105a_aqtr()
51802=TypeAnnotationTest:testAnnotatedRedundantCast()
51803=TypeAnnotationTest:test023_classExtends()
51804=TypeAnnotationTest:test100g_pqtr()
51805=TypeAnnotationTest:test031_methodTypeParameterBound_complex()
51806=TypeAnnotationTest:test011_classExtends_reflection()
51807=TypeAnnotationTest:test057_codeblocks_new4_415821()
51808=TypeAnnotationTest:test073_codeblocks_constructorInvocationTypeArgument()
51809=TypeAnnotationTest:_test425599()
51810=TypeAnnotationTest:suite()
51811=TypeAnnotationTest:TypeAnnotationTest(String)
51812=TypeAnnotationTest:test008_methodTypeParameter()
51813=TypeAnnotationTest:test063_codeblocks_new_instanceof()
51814=TypeAnnotationTest:test022_classExtends()
51815=IBootstrapMethodsEntry:getBootstrapArguments()
51816=IBootstrapMethodsEntry:getBootstrapMethodReference()
51817=A:foo(Object, A)
51818=X32:foo()
51819=DiagnoseParser:toString()
51820=DiagnoseParser:misspell(int, int)
51821=DiagnoseParser:getTermIndex(int, int, int, int)
51822=DiagnoseParser:secondaryDiagnosis(SecondaryRepairInfo)
51823=DiagnoseParser:displayEscapeCharacters(char[], int, int)
51824=DiagnoseParser:getNtermIndex(int, int, int)
51825=DiagnoseParser:DiagnoseParser(Parser, int, int, int, int[], int[], int[], CompilerOptions)
51826=DiagnoseParser:DiagnoseParser(Parser, int, int, int, CompilerOptions)
51827=DiagnoseParser:PrimaryRepairInfo:copy()
51828=DiagnoseParser:scopeTrialCheck(int, int, PrimaryRepairInfo, int)
51829=DiagnoseParser:getNTermTemplate(int)
51830=DiagnoseParser:diagnoseParse(boolean)
51831=DiagnoseParser:atConflictScenario(int)
51832=DiagnoseParser:primaryDiagnosis(PrimaryRepairInfo)
51833=DiagnoseParser:PrimaryRepairInfo:PrimaryRepairInfo()
51834=DiagnoseParser:problemReporter()
51835=DiagnoseParser:RepairCandidate:RepairCandidate()
51836=DiagnoseParser:reallocateStacks()
51837=DiagnoseParser:checkPrimaryDistance(int, int, PrimaryRepairInfo)
51838=DiagnoseParser:misplacementRecovery(int, int, int, SecondaryRepairInfo, boolean)
51839=DiagnoseParser:secondaryPhase(int)
51840=DiagnoseParser:mergeCandidate(int, int)
51841=DiagnoseParser:scopeTrial(int, int, PrimaryRepairInfo)
51842=DiagnoseParser:reportPrimaryError(int, int, int, int)
51843=DiagnoseParser:reportSecondaryError(int, int, int, int, int)
51844=DiagnoseParser:errorRecovery(int, boolean)
51845=DiagnoseParser:reportError(int, int, int, int, int)
51846=DiagnoseParser:secondaryCheck(int, int, int, int)
51847=DiagnoseParser:primaryPhase(int)
51848=DiagnoseParser:secondaryRecovery(int, int, int, SecondaryRepairInfo, boolean)
51849=DiagnoseParser:StateInfo:StateInfo(int, int)
51850=DiagnoseParser:parseCheck(int, int, int, int)
51851=DiagnoseParser:reportError(int, int, int, int)
51852=A:foob()
51853=ASTRewriteFlattener:visit(FieldAccess)
51854=ASTRewriteFlattener:visit(AnnotationTypeMemberDeclaration)
51855=ASTRewriteFlattener:visit(PrefixExpression)
51856=ASTRewriteFlattener:visit(EnhancedForStatement)
51857=ASTRewriteFlattener:visit(SynchronizedStatement)
51858=ASTRewriteFlattener:visit(Modifier)
51859=ASTRewriteFlattener:reset()
51860=ASTRewriteFlattener:visit(MethodRefParameter)
51861=ASTRewriteFlattener:visit(BooleanLiteral)
51862=ASTRewriteFlattener:visit(QualifiedType)
51863=ASTRewriteFlattener:visit(Javadoc)
51864=ASTRewriteFlattener:visit(MemberRef)
51865=ASTRewriteFlattener:visit(SimpleType)
51866=ASTRewriteFlattener:visit(TypeDeclarationStatement)
51867=ASTRewriteFlattener:visit(ExpressionStatement)
51868=ASTRewriteFlattener:printModifiers(int, StringBuffer)
51869=ASTRewriteFlattener:visit(ArrayCreation)
51870=ASTRewriteFlattener:visit(UnionType)
51871=ASTRewriteFlattener:visit(InstanceofExpression)
51872=ASTRewriteFlattener:visitExtraDimensions(ASTNode, SimplePropertyDescriptor, ChildListPropertyDescriptor)
51873=ASTRewriteFlattener:visit(LineComment)
51874=ASTRewriteFlattener:visit(ConstructorInvocation)
51875=ASTRewriteFlattener:visit(ConditionalExpression)
51876=ASTRewriteFlattener:visit(NumberLiteral)
51877=ASTRewriteFlattener:internalVisitDimensionAnnotations(ArrayType, int, boolean)
51878=ASTRewriteFlattener:visit(StringLiteral)
51879=ASTRewriteFlattener:visit(MemberValuePair)
51880=ASTRewriteFlattener:visit(FieldDeclaration)
51881=ASTRewriteFlattener:visit(SuperFieldAccess)
51882=ASTRewriteFlattener:visit(Block)
51883=ASTRewriteFlattener:visit(TextElement)
51884=ASTRewriteFlattener:visit(VariableDeclarationStatement)
51885=ASTRewriteFlattener:visit(Initializer)
51886=ASTRewriteFlattener:visit(MethodRef)
51887=ASTRewriteFlattener:visit(TypeLiteral)
51888=ASTRewriteFlattener:visit(SwitchStatement)
51889=ASTRewriteFlattener:visit(MethodDeclaration)
51890=ASTRewriteFlattener:getAttribute(ASTNode, StructuralPropertyDescriptor)
51891=ASTRewriteFlattener:asString(ASTNode, RewriteEventStore)
51892=ASTRewriteFlattener:visit(InfixExpression)
51893=ASTRewriteFlattener:visit(MarkerAnnotation)
51894=ASTRewriteFlattener:visit(BlockComment)
51895=ASTRewriteFlattener:visit(ParenthesizedExpression)
51896=ASTRewriteFlattener:getResult()
51897=ASTRewriteFlattener:visit(CreationReference)
51898=ASTRewriteFlattener:visit(SuperMethodReference)
51899=ASTRewriteFlattener:visit(DoStatement)
51900=ASTRewriteFlattener:visit(SuperConstructorInvocation)
51901=ASTRewriteFlattener:visit(ParameterizedType)
51902=ASTRewriteFlattener:visit(VariableDeclarationFragment)
51903=ASTRewriteFlattener:visitList(ASTNode, StructuralPropertyDescriptor, String)
51904=ASTRewriteFlattener:visit(WildcardType)
51905=ASTRewriteFlattener:visit(Assignment)
51906=ASTRewriteFlattener:visit(TryStatement)
51907=ASTRewriteFlattener:visit(AssertStatement)
51908=ASTRewriteFlattener:visit(BreakStatement)
51909=ASTRewriteFlattener:visit(VariableDeclarationExpression)
51910=ASTRewriteFlattener:visit(Dimension)
51911=ASTRewriteFlattener:visitList(ASTNode, StructuralPropertyDescriptor, String, String, String)
51912=ASTRewriteFlattener:visit(ThisExpression)
51913=ASTRewriteFlattener:visit(ReturnStatement)
51914=ASTRewriteFlattener:visit(LambdaExpression)
51915=ASTRewriteFlattener:visit(EnumDeclaration)
51916=ASTRewriteFlattener:visit(SingleVariableDeclaration)
51917=ASTRewriteFlattener:visit(EmptyStatement)
51918=ASTRewriteFlattener:visit(CatchClause)
51919=ASTRewriteFlattener:visit(PrimitiveType)
51920=ASTRewriteFlattener:visit(LabeledStatement)
51921=ASTRewriteFlattener:visit(TagElement)
51922=ASTRewriteFlattener:ASTRewriteFlattener(RewriteEventStore)
51923=ASTRewriteFlattener:visit(MethodInvocation)
51924=ASTRewriteFlattener:visit(EnumConstantDeclaration)
51925=ASTRewriteFlattener:visit(AnnotationTypeDeclaration)
51926=ASTRewriteFlattener:visit(ClassInstanceCreation)
51927=ASTRewriteFlattener:getIntAttribute(ASTNode, StructuralPropertyDescriptor)
51928=ASTRewriteFlattener:visit(ExpressionMethodReference)
51929=ASTRewriteFlattener:visit(NameQualifiedType)
51930=ASTRewriteFlattener:visit(NullLiteral)
51931=ASTRewriteFlattener:visit(ThrowStatement)
51932=ASTRewriteFlattener:visit(PackageDeclaration)
51933=ASTRewriteFlattener:visit(ArrayType)
51934=ASTRewriteFlattener:visit(SwitchCase)
51935=ASTRewriteFlattener:visit(IntersectionType)
51936=ASTRewriteFlattener:getBooleanAttribute(ASTNode, StructuralPropertyDescriptor)
51937=ASTRewriteFlattener:visit(NormalAnnotation)
51938=ASTRewriteFlattener:visit(CharacterLiteral)
51939=ASTRewriteFlattener:visit(WhileStatement)
51940=ASTRewriteFlattener:visit(ArrayAccess)
51941=ASTRewriteFlattener:visit(ArrayInitializer)
51942=ASTRewriteFlattener:visit(TypeMethodReference)
51943=ASTRewriteFlattener:getChildList(ASTNode, StructuralPropertyDescriptor)
51944=ASTRewriteFlattener:visit(QualifiedName)
51945=ASTRewriteFlattener:visit(ForStatement)
51946=ASTRewriteFlattener:visit(SuperMethodInvocation)
51947=ASTRewriteFlattener:visit(CompilationUnit)
51948=ASTRewriteFlattener:visit(SingleMemberAnnotation)
51949=ASTRewriteFlattener:visit(CastExpression)
51950=ASTRewriteFlattener:visit(ContinueStatement)
51951=ASTRewriteFlattener:visit(TypeParameter)
51952=ASTRewriteFlattener:visit(AnonymousClassDeclaration)
51953=ASTRewriteFlattener:visit(ImportDeclaration)
51954=ASTRewriteFlattener:visit(SimpleName)
51955=ASTRewriteFlattener:visit(IfStatement)
51956=ASTRewriteFlattener:visit(PostfixExpression)
51957=ASTRewriteFlattener:visit(TypeDeclaration)
51958=ASTRewriteFlattener:getChildNode(ASTNode, StructuralPropertyDescriptor)
51959=ClassDeclaration:getSuperclass()
51960=ClassDeclaration:getConstructors()
51961=ClassDeclaration:getMethods()
51962=R1:qualified_name()
51963=R1:simple_name(Generic<Object>, Generic<Exception>, Generic<? extends Throwable>, Generic<? super RuntimeException>)
51964=RefRaw:testMultiple()
51965=RefRaw:testSingle()
51966=ConstraintExceptionFormula:toString()
51967=ConstraintExceptionFormula:reduce(InferenceContext18)
51968=ConstraintExceptionFormula:inputVariables(InferenceContext18)
51969=ConstraintExceptionFormula:ConstraintExceptionFormula(FunctionalExpression, TypeBinding)
51970=X03:test()
51971=ParticipantBuildTests:ParticipantProblem:getID()
51972=ParticipantBuildTests:test1002()
51973=ParticipantBuildTests:buildCompilationUnit(BuildContext)
51974=ParticipantBuildTests:BuildTestParticipant:BuildTestParticipant()
51975=ParticipantBuildTests:testResolvedMethod()
51976=ParticipantBuildTests:ParticipantProblem:getMarkerType()
51977=ParticipantBuildTests:ParticipantProblem:setSourceEnd(int)
51978=ParticipantBuildTests:testDefaultValue()
51979=ParticipantBuildTests:ParticipantProblem:getOriginatingFileName()
51980=ParticipantBuildTests:testParticipantProblems()
51981=ParticipantBuildTests:ParticipantProblem:setSourceLineNumber(int)
51982=ParticipantBuildTests:tearDown()
51983=ParticipantBuildTests:ParticipantProblem:getSourceLineNumber()
51984=ParticipantBuildTests:ParticipantProblem:isInfo()
51985=ParticipantBuildTests:test1001()
51986=ParticipantBuildTests:testBuildStarting()
51987=ParticipantBuildTests:ParticipantProblem:getArguments()
51988=ParticipantBuildTests:ParticipantProblem:getSourceStart()
51989=ParticipantBuildTests:ParticipantProblem:isWarning()
51990=ParticipantBuildTests:ParticipantProblem:isError()
51991=ParticipantBuildTests:ParticipantBuildTests(String)
51992=ParticipantBuildTests:testProcessAnnotationQualifiedReferences()
51993=ParticipantBuildTests:ParticipantProblem:getCategoryID()
51994=ParticipantBuildTests:ParticipantProblem:setSourceStart(int)
51995=ParticipantBuildTests:suite()
51996=ParticipantBuildTests:testProcessAnnotationDeclarations()
51997=ParticipantBuildTests:ParticipantProblem:getMessage()
51998=ParticipantBuildTests:ParticipantProblem:getSourceEnd()
51999=ParticipantBuildTests:testProcessAnnotationReferences()
52000=ParticipantBuildTests:ParticipantProblem:ParticipantProblem(String, String)
52001=FieldInitsFakingFlowContext:FieldInitsFakingFlowContext(FlowContext, ASTNode, ReferenceBinding[], FlowContext, BlockScope, UnconditionalFlowInfo)
52002=JavaSearchMethodNameMatch:setAccessibility(int)
52003=JavaSearchMethodNameMatch:getModifiers()
52004=JavaSearchMethodNameMatch:getAccessibility()
52005=JavaSearchMethodNameMatch:getMethod()
52006=JavaSearchMethodNameMatch:JavaSearchMethodNameMatch(IMethod, int)
52007=JavaSearchMethodNameMatch:toString()
52008=TypeLiteral:subtreeMatch0(ASTMatcher, Object)
52009=TypeLiteral:treeSize()
52010=TypeLiteral:clone0(AST)
52011=TypeLiteral:accept0(ASTVisitor)
52012=TypeLiteral:getType()
52013=TypeLiteral:setType(Type)
52014=TypeLiteral:internalStructuralPropertiesForType(int)
52015=TypeLiteral:memSize()
52016=TypeLiteral:propertyDescriptors(int)
52017=TypeLiteral:getNodeType0()
52018=TypeLiteral:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
52019=TypeLiteral:TypeLiteral(AST)
52020=X15:foo()
52021=ISourceType:getName()
52022=ISourceType:getImports()
52023=ISourceType:getMethods()
52024=ISourceType:getSuperclassName()
52025=ISourceType:getInterfaceNames()
52026=ISourceType:getNameSourceEnd()
52027=ISourceType:getDeclarationSourceEnd()
52028=ISourceType:getMemberTypes()
52029=ISourceType:getDeclarationSourceStart()
52030=ISourceType:getFields()
52031=ISourceType:getPackageName()
52032=ISourceType:getTypeParameterNames()
52033=ISourceType:getTypeParameterBounds()
52034=ISourceType:getNameSourceStart()
52035=ISourceType:getEnclosingType()
52036=X17b:findPackageFragmentRoots(String)
52037=CompletionEngine:getTypeName(TypeReference)
52038=CompletionEngine:findUnresolvedReferenceAfter(int, BlockScope, char[][])
52039=CompletionEngine:findFieldsAndMethodsFromAnotherReceiver(char[], TypeReference, Scope, ObjectVector, ObjectVector, InvocationSite, Scope, boolean, boolean, Binding[], int[], int[], boolean, char[][], int, int)
52040=CompletionEngine:findTypesFromExpectedTypes(char[], Scope, ObjectVector, boolean, boolean)
52041=CompletionEngine:findLocalMethodsFromFavorites(char[], MethodBinding[], Scope, ObjectVector, ObjectVector, ReferenceBinding, InvocationSite, Scope)
52042=CompletionEngine:findMemberTypes(char[], ReferenceBinding[], ObjectVector, ReferenceBinding, SourceTypeBinding, boolean, boolean, boolean, boolean, Scope, Binding[], int[], int[], boolean)
52043=CompletionEngine:computeRelevanceForInterestingProposal()
52044=CompletionEngine:findConstructors(ReferenceBinding, TypeBinding[], Scope, InvocationSite, boolean, Binding[], int[], int[], boolean)
52045=CompletionEngine:computeAlreadyDefinedName(SourceTypeBinding, ClassScope, boolean, InvocationSite, ArrayList)
52046=CompletionEngine:accept(ICompilationUnit, AccessRestriction)
52047=CompletionEngine:isValidPackageName(char[])
52048=CompletionEngine:AcceptedConstructor:toString()
52049=CompletionEngine:computeRelevanceForCaseMatching(char[], char[])
52050=CompletionEngine:CompletionEngine(SearchableEnvironment, CompletionRequestor, Map, IJavaProject, WorkingCopyOwner, IProgressMonitor)
52051=CompletionEngine:reset()
52052=CompletionEngine:createNonGenericTypeSignature(char[], char[])
52053=CompletionEngine:printDebug(CompletionProposal, int, StringBuffer)
52054=CompletionEngine:findTrueOrFalseKeywords(char[][])
52055=CompletionEngine:findFieldsAndMethodsFromFavorites(char[], Scope, InvocationSite, Scope, ObjectVector, ObjectVector, ObjectVector)
52056=CompletionEngine:computeTypesIfCorrect(Expression[])
52057=CompletionEngine:completionOnSingleNameReference(ASTNode, ASTNode, Scope, boolean)
52058=CompletionEngine:findLabels(char[], char[][])
52059=CompletionEngine:findLocalMethods(char[], TypeBinding[], TypeBinding[], MethodBinding[], Scope, ObjectVector, boolean, boolean, ReferenceBinding, InvocationSite, Scope, boolean, boolean, boolean, Binding[], int[], int[], boolean, char[], int, int)
52060=CompletionEngine:completionOnSingleTypeReference(ASTNode, ASTNode, Binding, Scope)
52061=CompletionEngine:completionOnMemberAccess(ASTNode, ASTNode, Binding, Scope, boolean)
52062=CompletionEngine:AcceptedConstructor:AcceptedConstructor(int, char[], int, char[], char[][], char[][], int, char[], int, int)
52063=CompletionEngine:printDebugTab(int, StringBuffer)
52064=CompletionEngine:computeRelevanceForInheritance(ReferenceBinding, ReferenceBinding)
52065=CompletionEngine:findPackages(CompletionOnPackageReference)
52066=CompletionEngine:completionOnClassLiteralAccess(ASTNode, Binding, Scope)
52067=CompletionEngine:createDefaultParameterNames(int)
52068=CompletionEngine:acceptType(char[], char[], char[][], int, AccessRestriction)
52069=CompletionEngine:completionOnJavadocAllocationExpression(ASTNode, Binding, Scope)
52070=CompletionEngine:createMethod(MethodBinding, char[][], char[][], char[][], Scope, StringBuffer)
52071=CompletionEngine:findFieldsAndMethodsFromMissingType(TypeReference, Scope, InvocationSite, Scope)
52072=CompletionEngine:computeExpectedTypesForAllocationExpression(ReferenceBinding, Expression[], Scope, InvocationSite)
52073=CompletionEngine:computeRelevanceForSuper(MethodBinding, Scope, InvocationSite)
52074=CompletionEngine:findMemberTypes(char[], ReferenceBinding, Scope, SourceTypeBinding, boolean, boolean, boolean, boolean, boolean, SourceTypeBinding, ObjectVector, Binding[], int[], int[], boolean)
52075=CompletionEngine:computeRelevanceForStatic(boolean, boolean)
52076=CompletionEngine:findConstructorsOrAnonymousTypes(ReferenceBinding, Scope, InvocationSite, boolean, int)
52077=CompletionEngine:findFields(char[], ReferenceBinding, Scope, ObjectVector, ObjectVector, boolean, InvocationSite, Scope, boolean, boolean, Binding[], int[], int[], boolean, char[], int, int)
52078=CompletionEngine:findMemberTypes(char[], ReferenceBinding, Scope, SourceTypeBinding, boolean, boolean, ObjectVector, Binding[], int[], int[], boolean)
52079=CompletionEngine:complete(IType, char[], int, char[][], char[][], int[], boolean)
52080=CompletionEngine:inlineTagCompletion(char[], char[])
52081=CompletionEngine:AcceptedType:AcceptedType(char[], char[], char[][], int, int)
52082=CompletionEngine:createProposal(int, int)
52083=CompletionEngine:proposeConstructor(AcceptedConstructor, Scope)
52084=CompletionEngine:computeTargetedElement(CompletionOnAnnotationOfType)
52085=CompletionEngine:computeRelevanceForFinal(boolean, boolean)
52086=CompletionEngine:computeRelevanceForConstructor()
52087=CompletionEngine:findTypesAndSubpackages(char[], PackageBinding, Scope)
52088=CompletionEngine:findTypeParameters(char[], Scope)
52089=CompletionEngine:isIgnored(int, int)
52090=CompletionEngine:computeRelevanceForEnumConstant(TypeBinding)
52091=CompletionEngine:findMembers(char[], ReferenceBinding, Scope, InvocationSite, boolean, Binding[], int[], int[], boolean)
52092=CompletionEngine:computeRelevanceForAnnotation()
52093=CompletionEngine:setSourceAndTokenRange(int, int, boolean)
52094=CompletionEngine:computeRelevanceForExpectingType(TypeBinding)
52095=CompletionEngine:findKeywordsForMember(char[], int, ASTNode)
52096=CompletionEngine:CompletionProblemFactory:stopCheckingProblems()
52097=CompletionEngine:parseSnippeInitializer(char[], int, char[][], char[][], int[], boolean)
52098=CompletionEngine:findUnresolvedReference(int, int, BlockScope, char[][])
52099=CompletionEngine:AcceptedType:toString()
52100=CompletionEngine:hasMemberTypesInEnclosingScope(SourceTypeBinding, Scope)
52101=CompletionEngine:completionOnQualifiedTypeReference(ASTNode, ASTNode, Binding, Scope)
52102=CompletionEngine:mustQualifyType(ReferenceBinding, char[], Scope)
52103=CompletionEngine:completionOnFieldType(ASTNode, Scope)
52104=CompletionEngine:findLocalMethodsFromStaticImports(char[], Scope, InvocationSite, Scope, boolean, ObjectVector, boolean)
52105=CompletionEngine:computeExpectedTypes(ASTNode, ASTNode, Scope)
52106=CompletionEngine:acceptConstructors(Scope)
52107=CompletionEngine:completionOnParameterizedQualifiedTypeReference(ASTNode, ASTNode, Binding, Scope)
52108=CompletionEngine:computeExpectedTypesForMessageSendForInterface(ReferenceBinding, char[], Expression[], ReferenceBinding, Scope, InvocationSite, boolean)
52109=CompletionEngine:findImportsOfStaticMethods(char[], ReferenceBinding)
52110=CompletionEngine:computeExpectedTypesForMessageSend(ReferenceBinding, char[], Expression[], ReferenceBinding, Scope, InvocationSite, boolean)
52111=CompletionEngine:completionOnLocalOrArgumentName(ASTNode, Scope)
52112=CompletionEngine:isIgnored(int, boolean)
52113=CompletionEngine:completionOnKeyword(ASTNode)
52114=CompletionEngine:computeRelevanceForException(char[])
52115=CompletionEngine:substituteMethodTypeParameterName(char[], char[][], char[][])
52116=CompletionEngine:completionOnMethodReturnType(ASTNode, Scope)
52117=CompletionEngine:getParser()
52118=CompletionEngine:findTypesFromImports(char[], Scope, boolean, ObjectVector)
52119=CompletionEngine:completionOnMethodName(ASTNode, Scope)
52120=CompletionEngine:createTypeVariable(TypeVariableBinding, Scope, StringBuffer)
52121=CompletionEngine:findAnonymousType(ReferenceBinding, TypeBinding[], Scope, InvocationSite, Binding[], int[], int[], boolean)
52122=CompletionEngine:computeRelevanceForException()
52123=CompletionEngine:completionOnQualifiedNameReference(ASTNode, ASTNode, Binding, Scope, boolean)
52124=CompletionEngine:acceptUnresolvedName(char[])
52125=CompletionEngine:createVargsType(TypeBinding, Scope, StringBuffer)
52126=CompletionEngine:findFieldsAndMethodsFromCastedReceiver(ASTNode, Binding, Scope, ObjectVector, ObjectVector, InvocationSite, Scope, Expression)
52127=CompletionEngine:createRequiredTypeProposal(Binding, int, int, int)
52128=CompletionEngine:findConstructorsFromMissingType(TypeReference, TypeBinding[], Scope, InvocationSite)
52129=CompletionEngine:findLocalMethodsFromStaticImports(char[], MethodBinding[], Scope, boolean, ObjectVector, ReferenceBinding, InvocationSite)
52130=CompletionEngine:computeRelevanceForResolution(boolean)
52131=CompletionEngine:computeRelevanceForEnum()
52132=CompletionEngine:findFieldsAndMethodsFromMissingReturnType(char[], TypeBinding[], Scope, InvocationSite, boolean)
52133=CompletionEngine:findFieldsAndMethodsFromStaticImports(char[], Scope, InvocationSite, Scope, boolean, boolean, ObjectVector, ObjectVector, ObjectVector, boolean, boolean)
52134=CompletionEngine:computeRelevanceForInterestingProposal(Binding)
52135=CompletionEngine:findJavadocParamNames(char[], char[][], boolean)
52136=CompletionEngine:CompletionProblemFactory:checkProblem(CategorizedProblem, char[], int, int)
52137=CompletionEngine:buildContext(ASTNode, ASTNode, CompilationUnitDeclaration, Binding, Scope)
52138=CompletionEngine:findFieldsFromFavorites(char[], FieldBinding[], Scope, ObjectVector, ObjectVector, ReferenceBinding, InvocationSite, Scope)
52139=CompletionEngine:findEnclosingTypeNames(Scope)
52140=CompletionEngine:computeRelevanceForQualification(boolean)
52141=CompletionEngine:findTypesAndPackages(char[], Scope, boolean, boolean, ObjectVector)
52142=CompletionEngine:findMethodDeclarations(char[], ReferenceBinding, Scope, ObjectVector, Binding[], int[], int[], boolean)
52143=CompletionEngine:computeRelevanceForResolution()
52144=CompletionEngine:findAnonymousType(ReferenceBinding, TypeBinding[], Scope, InvocationSite, Binding[], int[], int[], boolean, boolean, boolean, int)
52145=CompletionEngine:CompletionProblemFactory:startCheckingProblems()
52146=CompletionEngine:findKeywords(char[], char[][], boolean, boolean)
52147=CompletionEngine:addUninterestingBindings(Binding)
52148=CompletionEngine:addExpectedType(TypeBinding, Scope)
52149=CompletionEngine:getCompletedTypeSignature(ReferenceBinding)
52150=CompletionEngine:findFieldsAndMethods(char[], TypeBinding, Scope, ObjectVector, ObjectVector, InvocationSite, Scope, boolean, boolean, Binding[], int[], int[], boolean, char[], int, int)
52151=CompletionEngine:findConstructors(ReferenceBinding, TypeBinding[], Scope, InvocationSite, boolean, Binding[], int[], int[], boolean, boolean, boolean, int)
52152=CompletionEngine:isValidParent(ASTNode, ASTNode, Scope)
52153=CompletionEngine:hasPossibleAnnotationTarget(TypeBinding, Scope)
52154=CompletionEngine:findEnumConstantsFromExpectedTypes(char[], Scope, ObjectVector)
52155=CompletionEngine:findMemberTypesFromMissingType(TypeReference, long, Scope)
52156=CompletionEngine:hasArrayTypeAsExpectedSuperTypes()
52157=CompletionEngine:computeRelevanceForClass()
52158=CompletionEngine:printDebug(CompletionProposal)
52159=CompletionEngine:findImportsOfMemberTypes(char[], ReferenceBinding, boolean)
52160=CompletionEngine:completionOnJavadocParamNameReference(ASTNode)
52161=CompletionEngine:createMethodSignature(char[][], char[][], char[])
52162=CompletionEngine:findMethodParameterNames(MethodBinding, char[][])
52163=CompletionEngine:computeRelevanceForMissingElements(boolean)
52164=CompletionEngine:assistNodeIsExtendedType(ASTNode, ASTNode)
52165=CompletionEngine:proposeType(char[], char[], int, int, char[], char[], boolean, Scope)
52166=CompletionEngine:completionOnJavadocMessageSend(ASTNode, Binding, Scope)
52167=CompletionEngine:createImportCharArray(char[], boolean, boolean)
52168=CompletionEngine:findInterfacesMethodDeclarations(char[], ReferenceBinding, ReferenceBinding[], Scope, ObjectVector, Binding[], int[], int[], boolean)
52169=CompletionEngine:substituteMethodTypeParameterName(char, char, char, char[][], char[][])
52170=CompletionEngine:computeForbiddenBindings(ASTNode, ASTNode, Scope)
52171=CompletionEngine:setSourceRange(int, int, boolean)
52172=CompletionEngine:proposeNewMethod(char[], ReferenceBinding)
52173=CompletionEngine:completionOnJavadocTag(ASTNode)
52174=CompletionEngine:findMembersFromMissingType(char[], long, TypeBinding, Scope, InvocationSite, boolean)
52175=CompletionEngine:acceptTypes(Scope)
52176=CompletionEngine:computeAlreadyDefinedName(BlockScope, InvocationSite)
52177=CompletionEngine:completionOnFieldName(ASTNode, Scope)
52178=CompletionEngine:completionOnMessageSend(ASTNode, Binding, Scope)
52179=CompletionEngine:findVariablesAndMethods(char[], Scope, InvocationSite, Scope, boolean, boolean)
52180=CompletionEngine:completionOnJavadocQualifiedTypeReference(ASTNode, Binding, Scope)
52181=CompletionEngine:complete(ICompilationUnit, int, int, ITypeRoot)
52182=CompletionEngine:findVariableName(char[], char[], char[], char[], TypeBinding, char[][], char[][], boolean, int, int)
52183=CompletionEngine:getFavoriteReferenceBindings(Scope)
52184=CompletionEngine:getNoCacheNameEnvironment()
52185=CompletionEngine:createTypeParameterProposal(TypeParameter, int)
52186=CompletionEngine:computeRelevanceForInterestingProposal(char[], char[])
52187=CompletionEngine:findParameterizedType(TypeReference, Scope)
52188=CompletionEngine:createBindingKey(char[], char[])
52189=CompletionEngine:areParametersCompatibleWith(TypeBinding[], TypeBinding[], boolean)
52190=CompletionEngine:computeBaseRelevance()
52191=CompletionEngine:findVariableName(char[], char[], char[], char[], TypeBinding, char[][], char[][], int, int)
52192=CompletionEngine:findExceptionFromTryStatement(char[], ReferenceBinding, SourceTypeBinding, BlockScope, ObjectVector)
52193=CompletionEngine:assistNodeIsInsideCase(ASTNode, ASTNode)
52194=CompletionEngine:findVariableNames(char[], TypeReference, char[][], char[][], int)
52195=CompletionEngine:findMemberTypesFromMissingType(char[], long, Scope)
52196=CompletionEngine:computePrefix(SourceTypeBinding, SourceTypeBinding, boolean)
52197=CompletionEngine:findExplicitConstructors(char[], ReferenceBinding, MethodScope, InvocationSite)
52198=CompletionEngine:computeRelevanceForRestrictions(int)
52199=CompletionEngine:findVariableFromUnresolvedReference(LocalDeclaration, BlockScope, char[][])
52200=CompletionEngine:completionOnExplicitConstructorCall(ASTNode, Binding, Scope)
52201=CompletionEngine:addForbiddenBindingsForMemberTypes(TypeDeclaration)
52202=CompletionEngine:findInterfacesMethods(char[], TypeBinding[], TypeBinding[], ReferenceBinding, ReferenceBinding[], Scope, ObjectVector, boolean, boolean, InvocationSite, Scope, boolean, boolean, boolean, Binding[], int[], int[], boolean, char[], int, int)
52203=CompletionEngine:findFieldsAndMethodsFromMissingFieldType(char[], Scope, InvocationSite, boolean)
52204=CompletionEngine:findMethods(char[], TypeBinding[], TypeBinding[], ReferenceBinding, Scope, ObjectVector, boolean, boolean, InvocationSite, Scope, boolean, boolean, boolean, Binding[], int[], int[], boolean, char[], int, int)
52205=CompletionEngine:findTypesFromStaticImports(char[], Scope, boolean, ObjectVector)
52206=CompletionEngine:computeUninterestingBindings(ASTNode, ASTNode, Scope)
52207=CompletionEngine:findFields(char[], FieldBinding[], Scope, ObjectVector, ObjectVector, boolean, ReferenceBinding, InvocationSite, Scope, boolean, boolean, Binding[], int[], int[], boolean, char[], int, int)
52208=CompletionEngine:findNestedTypes(char[], SourceTypeBinding, Scope, boolean, ObjectVector)
52209=CompletionEngine:CompletionProblemFactory:createProblem(char[], int, String[], String[], int, int, int, int, int)
52210=CompletionEngine:isForbidden(char[], char[], char[][])
52211=CompletionEngine:setTokenRange(int, int)
52212=CompletionEngine:addForbiddenBindings(Binding)
52213=CompletionEngine:findJavadocInlineTags(CompletionOnJavadocTag)
52214=CompletionEngine:computeAlreadyDefinedName(FieldBinding[], Scope, boolean, ReferenceBinding, InvocationSite, ArrayList)
52215=CompletionEngine:computeRelevanceForExpectingType(char[], char[])
52216=CompletionEngine:completionOnMemberValueName(ASTNode, ASTNode, Scope, boolean)
52217=CompletionEngine:findClassField(char[], TypeBinding, Scope, Binding[], int[], int[], boolean)
52218=CompletionEngine:setTokenRange(int, int, boolean)
52219=CompletionEngine:isForbidden(ReferenceBinding)
52220=CompletionEngine:getResolvedSignature(char[][], char[], int, Scope)
52221=CompletionEngine:printDebug(CategorizedProblem)
52222=CompletionEngine:getRequiredTypeSignature(TypeBinding)
52223=CompletionEngine:CompletionProblemFactory:createProblem(char[], int, String[], int, String[], int, int, int, int, int)
52224=CompletionEngine:completionOnJavadocFieldReference(ASTNode, Scope)
52225=CompletionEngine:findImportsOfStaticFields(char[], ReferenceBinding)
52226=CompletionEngine:substituteMethodTypeParameterNames(TypeVariableBinding[], char[][])
52227=CompletionEngine:completionOnJavadocSingleTypeReference(ASTNode, Scope)
52228=CompletionEngine:findExceptionFromTryStatement(char[], ReferenceBinding, ReferenceBinding, SourceTypeBinding, BlockScope, ObjectVector, boolean)
52229=CompletionEngine:completionOnMarkerAnnotationName(ASTNode, Binding, Scope)
52230=CompletionEngine:computeRelevanceForAnnotationTarget(TypeBinding)
52231=CompletionEngine:computeTypes(Expression[])
52232=CompletionEngine:findJavadocBlockTags(CompletionOnJavadocTag)
52233=CompletionEngine:hasStaticMemberTypes(ReferenceBinding, SourceTypeBinding, CompilationUnitScope)
52234=CompletionEngine:CompletionProblemFactory:CompletionProblemFactory(Locale)
52235=CompletionEngine:findEnumConstants(char[], ReferenceBinding, Scope, ObjectVector, char[][], int, boolean)
52236=CompletionEngine:findLocalMethodDeclarations(char[], MethodBinding[], Scope, ObjectVector, boolean, ReferenceBinding)
52237=CompletionEngine:completionOnReferenceExpressionName(ASTNode, Binding, Scope)
52238=CompletionEngine:checkCancel()
52239=CompletionEngine:createTypeProposal(char[], char[], int, int, char[], int)
52240=CompletionEngine:complete(ASTNode, ASTNode, ASTNode, CompilationUnitDeclaration, Binding, Scope, boolean)
52241=CompletionEngine:acceptPackage(char[])
52242=CompletionEngine:findImports(CompletionOnImportReference, boolean)
52243=CompletionEngine:setSourceAndTokenRange(int, int)
52244=CompletionEngine:findUnresolvedReferenceBefore(int, int, BlockScope, char[][])
52245=CompletionEngine:completionOnBranchStatementLabel(ASTNode)
52246=CompletionEngine:computeRelevanceForInterface()
52247=CompletionEngine:setSourceRange(int, int)
52248=CompletionEngine:createTypeSignature(char[], char[])
52249=CompletionEngine:completionOnMessageSendName(ASTNode, Binding, Scope)
52250=CompletionEngine:isIgnored(int)
52251=CompletionEngine:isFailedMatch(char[], char[])
52252=CompletionEngine:assistNodeIsInterfaceExcludingAnnotation(ASTNode, ASTNode)
52253=CompletionEngine:proposeConstructor(char[], int, char[], char[][], char[][], int, char[], int, int, char[], char[], boolean, Scope, int)
52254=CompletionEngine:completionOnQualifiedAllocationExpression(ASTNode, Binding, Scope)
52255=CompletionEngine:acceptConstructor(int, char[], int, char[], char[][], char[][], int, char[], int, String, AccessRestriction)
52256=CompletionEngine:findSubMemberTypes(char[], ReferenceBinding, Scope, SourceTypeBinding, boolean, boolean, boolean, ObjectVector)
52257=CompletionEngine:findEnumConstantsFromSwithStatement(char[], SwitchStatement)
52258=CompletionEngine:createTypeProposal(ReferenceBinding, char[], int, char[], int, Binding[], int[], int[], boolean)
52259=CompletionEngine:isAllowingLongComputationProposals()
52260=CompletionEngine:findVariableNameForCollection(char[], char[], char[], char[], TypeBinding, char[][], char[][], int)
52261=CompletionEngine:createMethodSignature(char[][], char[][], char[], char[])
52262=CompletionEngine:buildTokenLocationContext(InternalCompletionContext, Scope, ASTNode, ASTNode)
52263=CompletionEngine:findAnnotationAttributes(char[], MemberValuePair[], ReferenceBinding)
52264=CompletionEngine:completionOnJavadocTypeParamReference(ASTNode)
52265=CompletionEngine:createType(TypeBinding, Scope, StringBuffer)
52266=CompletionEngine:findImplicitMessageSends(char[], TypeBinding[], Scope, InvocationSite, Scope, ObjectVector)
52267=JavaSearchGenericMethodTests:testMethodDeclarationsStringPatternSingleParamArguments06()
52268=JavaSearchGenericMethodTests:testMethodDeclarationsStringPatternMultipleParamArguments07()
52269=JavaSearchGenericMethodTests:testMethodReferencesElementPatternSingleParamArguments05()
52270=JavaSearchGenericMethodTests:testMethodDeclarationsElementPatternSingleParamArguments04()
52271=JavaSearchGenericMethodTests:testMethodReferencesStringPatternSingleParamArguments05()
52272=JavaSearchGenericMethodTests:removeFirstTypeArgument(char[])
52273=JavaSearchGenericMethodTests:testMethodReferencesStringPatternMultipleParamArguments04()
52274=JavaSearchGenericMethodTests:testMethodDeclarationsStringPatternSingleParamArguments04()
52275=JavaSearchGenericMethodTests:testMethodReferencesElementPatternSingleParamArguments03()
52276=JavaSearchGenericMethodTests:testMethodDeclarationsElementPatternSingleParamArguments06()
52277=JavaSearchGenericMethodTests:testMethodReferencesStringPatternSingleParamArguments07()
52278=JavaSearchGenericMethodTests:testMethodReferencesStringPatternMultipleParamArguments06()
52279=JavaSearchGenericMethodTests:testMethodReferencesElementPatternSingleTypeParameter01()
52280=JavaSearchGenericMethodTests:testMethodDeclarationsElementPatternMultipleParamArguments04()
52281=JavaSearchGenericMethodTests:testMethodDeclarationsStringPatternSingleParamArguments02()
52282=JavaSearchGenericMethodTests:testMethodDeclarationsStringPatternMultipleParamArguments03()
52283=JavaSearchGenericMethodTests:suite()
52284=JavaSearchGenericMethodTests:testMethodReferencesStringPatternSingleParamArguments01()
52285=JavaSearchGenericMethodTests:testMethodReferencesElementPatternMultipleParamArguments06()
52286=JavaSearchGenericMethodTests:testMethodReferencesStringPatternMultipleParamArguments08()
52287=JavaSearchGenericMethodTests:testMethodDeclarationsStringPatternMultipleParamArguments05()
52288=JavaSearchGenericMethodTests:testMethodDeclarationsElementPatternMultipleParamArguments06()
52289=JavaSearchGenericMethodTests:testMethodReferencesStringPatternSingleParamArguments03()
52290=JavaSearchGenericMethodTests:testMethodReferencesElementPatternMultipleParamArguments04()
52291=JavaSearchGenericMethodTests:testMethodReferencesElementPatternSingleTypeParameter05()
52292=JavaSearchGenericMethodTests:testMethodReferencesStringPatternSingleParamArguments10()
52293=JavaSearchGenericMethodTests:testMethodReferencesElementPatternMultipleTypeParameter02()
52294=JavaSearchGenericMethodTests:testMethodReferencesElementPatternMultipleParamArguments02()
52295=JavaSearchGenericMethodTests:testMethodReferencesElementPatternSingleTypeParameter03()
52296=JavaSearchGenericMethodTests:testMethodDeclarationsElementPatternMultipleParamArguments02()
52297=JavaSearchGenericMethodTests:testMethodReferencesElementPatternMultipleTypeParameter04()
52298=JavaSearchGenericMethodTests:testMethodDeclarationsElementPatternSingleParamArguments01()
52299=JavaSearchGenericMethodTests:JavaSearchGenericMethodTests(String)
52300=JavaSearchGenericMethodTests:testMethodDeclarationsElementPatternSingleParamArguments03()
52301=JavaSearchGenericMethodTests:testMethodDeclarationsStringPatternSingleParamArguments08()
52302=JavaSearchGenericMethodTests:testMethodReferencesStringPatternMultipleParamArguments02()
52303=JavaSearchGenericMethodTests:testMethodReferencesElementPatternSingleParamArguments04()
52304=JavaSearchGenericMethodTests:testMethodDeclarationsElementPatternSingleParamArguments05()
52305=JavaSearchGenericMethodTests:testMethodReferencesStringPatternSingleParamArguments06()
52306=JavaSearchGenericMethodTests:addResultLine(StringBuffer, char[])
52307=JavaSearchGenericMethodTests:testMethodDeclarationsStringPatternSingleParamArguments05()
52308=JavaSearchGenericMethodTests:testMethodDeclarationsStringPatternMultipleParamArguments06()
52309=JavaSearchGenericMethodTests:testMethodReferencesElementPatternSingleParamArguments02()
52310=JavaSearchGenericMethodTests:testMethodReferencesStringPatternSingleParamArguments08()
52311=JavaSearchGenericMethodTests:testMethodReferencesStringPatternMultipleParamArguments05()
52312=JavaSearchGenericMethodTests:testMethodDeclarationsStringPatternSingleParamArguments03()
52313=JavaSearchGenericMethodTests:testMethodReferencesStringPatternSingleParamArguments02()
52314=JavaSearchGenericMethodTests:testMethodReferencesElementPatternMultipleParamArguments05()
52315=JavaSearchGenericMethodTests:testMethodReferencesStringPatternMultipleParamArguments07()
52316=JavaSearchGenericMethodTests:testMethodReferencesStringPatternMultipleParamArguments09()
52317=JavaSearchGenericMethodTests:testMethodReferencesElementPatternSingleTypeParameter02()
52318=JavaSearchGenericMethodTests:testMethodDeclarationsStringPatternSingleParamArguments01()
52319=JavaSearchGenericMethodTests:testMethodDeclarationsElementPatternMultipleParamArguments05()
52320=JavaSearchGenericMethodTests:testMethodDeclarationsStringPatternMultipleParamArguments02()
52321=JavaSearchGenericMethodTests:testMethodReferencesElementPatternSingleParamArguments06()
52322=JavaSearchGenericMethodTests:testMethodReferencesStringPatternSingleParamArguments04()
52323=JavaSearchGenericMethodTests:JavaSearchGenericMethodTests(String, int)
52324=JavaSearchGenericMethodTests:testMethodReferencesElementPatternMultipleParamArguments03()
52325=JavaSearchGenericMethodTests:testMethodDeclarationsStringPatternMultipleParamArguments04()
52326=JavaSearchGenericMethodTests:testMethodReferencesElementPatternMultipleTypeParameter03()
52327=JavaSearchGenericMethodTests:testMethodReferencesElementPatternMultipleParamArguments01()
52328=JavaSearchGenericMethodTests:testMethodDeclarationsElementPatternMultipleParamArguments01()
52329=JavaSearchGenericMethodTests:testMethodReferencesElementPatternMultipleTypeParameter05()
52330=JavaSearchGenericMethodTests:testMethodDeclarationsStringPatternMultipleParamArguments01()
52331=JavaSearchGenericMethodTests:testMethodReferencesElementPatternSingleTypeParameter04()
52332=JavaSearchGenericMethodTests:testMethodReferencesStringPatternMultipleParamArguments10()
52333=JavaSearchGenericMethodTests:testMethodReferencesStringPatternSingleParamArguments11()
52334=JavaSearchGenericMethodTests:testMethodDeclarationsElementPatternMultipleParamArguments03()
52335=JavaSearchGenericMethodTests:testMethodReferencesElementPatternSingleParamArguments01()
52336=JavaSearchGenericMethodTests:testMethodReferencesStringPatternSingleParamArguments09()
52337=JavaSearchGenericMethodTests:testMethodReferencesElementPatternMultipleTypeParameter01()
52338=JavaSearchGenericMethodTests:testMethodReferencesStringPatternMultipleParamArguments01()
52339=JavaSearchGenericMethodTests:testMethodDeclarationsElementPatternSingleParamArguments02()
52340=JavaSearchGenericMethodTests:testMethodDeclarationsStringPatternSingleParamArguments07()
52341=Test:foo()
52342=Test:bar()
52343=Single:standard(T)
52344=Single:paramTypesArgs(Single<T>)
52345=Single:complete(U, Single<T>)
52346=Single:returnParamType()
52347=Single:generic(U)
52348=AnnotationMethodInfoWithAnnotations:initialize()
52349=AnnotationMethodInfoWithAnnotations:toStringContent(StringBuffer)
52350=AnnotationMethodInfoWithAnnotations:getAnnotations()
52351=AnnotationMethodInfoWithAnnotations:AnnotationMethodInfoWithAnnotations(MethodInfo, Object, AnnotationInfo[])
52352=AnnotationMethodInfoWithAnnotations:reset()
52353=X:foo(String)
52354=A:foo(int)
52355=E:foo(int)
52356=A:foo(int)
52357=Test:foo()
52358=X:vargs(int, int)
52359=X:bar()
52360=X:vargs(String)
52361=X:vargs(String, boolean)
52362=DefaultBytecodeVisitor:_new(int, int, IConstantPoolEntry)
52363=DefaultBytecodeVisitor:_aload_1(int)
52364=DefaultBytecodeVisitor:_fdiv(int)
52365=DefaultBytecodeVisitor:_invokestatic(int, int, IConstantPoolEntry)
52366=DefaultBytecodeVisitor:_lshl(int)
52367=DefaultBytecodeVisitor:_ldc_w(int, int, IConstantPoolEntry)
52368=DefaultBytecodeVisitor:_dup2_x1(int)
52369=DefaultBytecodeVisitor:_dload_2(int)
52370=DefaultBytecodeVisitor:_anewarray(int, int, IConstantPoolEntry)
52371=DefaultBytecodeVisitor:_wide(int, int, int, int)
52372=DefaultBytecodeVisitor:_ifle(int, int)
52373=DefaultBytecodeVisitor:_pop2(int)
52374=DefaultBytecodeVisitor:_fcmpl(int)
52375=DefaultBytecodeVisitor:_lconst_0(int)
52376=DefaultBytecodeVisitor:_invokeinterface(int, int, byte, IConstantPoolEntry)
52377=DefaultBytecodeVisitor:_ishl(int)
52378=DefaultBytecodeVisitor:_dconst_0(int)
52379=DefaultBytecodeVisitor:_fconst_0(int)
52380=DefaultBytecodeVisitor:_dsub(int)
52381=DefaultBytecodeVisitor:_fneg(int)
52382=DefaultBytecodeVisitor:_invokedynamic(int, int, IConstantPoolEntry, IConstantPoolEntry)
52383=DefaultBytecodeVisitor:_i2f(int)
52384=DefaultBytecodeVisitor:returnMethodSignature(IConstantPoolEntry)
52385=DefaultBytecodeVisitor:_ldiv(int)
52386=DefaultBytecodeVisitor:_idiv(int)
52387=DefaultBytecodeVisitor:_ineg(int)
52388=DefaultBytecodeVisitor:_l2f(int)
52389=DefaultBytecodeVisitor:_d2f(int)
52390=DefaultBytecodeVisitor:_d2l(int)
52391=DefaultBytecodeVisitor:_ireturn(int)
52392=DefaultBytecodeVisitor:_aload_0(int)
52393=DefaultBytecodeVisitor:_astore_0(int)
52394=DefaultBytecodeVisitor:_fstore_0(int)
52395=DefaultBytecodeVisitor:_ifeq(int, int)
52396=DefaultBytecodeVisitor:_putfield(int, int, IConstantPoolEntry)
52397=DefaultBytecodeVisitor:_lshr(int)
52398=DefaultBytecodeVisitor:_dcmpl(int)
52399=DefaultBytecodeVisitor:_dload(int, int)
52400=DefaultBytecodeVisitor:_iconst_1(int)
52401=DefaultBytecodeVisitor:_freturn(int)
52402=DefaultBytecodeVisitor:_baload(int)
52403=DefaultBytecodeVisitor:_ixor(int)
52404=DefaultBytecodeVisitor:returnConstantClassName(IConstantPoolEntry)
52405=DefaultBytecodeVisitor:_lrem(int)
52406=DefaultBytecodeVisitor:_wide(int, int, int)
52407=DefaultBytecodeVisitor:_lload_0(int)
52408=DefaultBytecodeVisitor:_dadd(int)
52409=DefaultBytecodeVisitor:_aload(int, int)
52410=DefaultBytecodeVisitor:_astore(int, int)
52411=DefaultBytecodeVisitor:_if_icmpge(int, int)
52412=DefaultBytecodeVisitor:_impdep2(int)
52413=DefaultBytecodeVisitor:_istore_0(int)
52414=DefaultBytecodeVisitor:_dup_x2(int)
52415=DefaultBytecodeVisitor:_invokevirtual(int, int, IConstantPoolEntry)
52416=DefaultBytecodeVisitor:_swap(int)
52417=DefaultBytecodeVisitor:_fcmpg(int)
52418=DefaultBytecodeVisitor:_lor(int)
52419=DefaultBytecodeVisitor:_frem(int)
52420=DefaultBytecodeVisitor:_laload(int)
52421=DefaultBytecodeVisitor:_dload_0(int)
52422=DefaultBytecodeVisitor:_tableswitch(int, int, int, int, int[])
52423=DefaultBytecodeVisitor:_aload_3(int)
52424=DefaultBytecodeVisitor:_goto_w(int, int)
52425=DefaultBytecodeVisitor:writeNewLine()
52426=DefaultBytecodeVisitor:_invokespecial(int, int, IConstantPoolEntry)
52427=DefaultBytecodeVisitor:_bipush(int, byte)
52428=DefaultBytecodeVisitor:_dconst_1(int)
52429=DefaultBytecodeVisitor:_sipush(int, short)
52430=DefaultBytecodeVisitor:_fstore(int, int)
52431=DefaultBytecodeVisitor:_i2l(int)
52432=DefaultBytecodeVisitor:_lconst_1(int)
52433=DefaultBytecodeVisitor:_lload_2(int)
52434=DefaultBytecodeVisitor:_breakpoint(int)
52435=DefaultBytecodeVisitor:_lneg(int)
52436=DefaultBytecodeVisitor:_castore(int)
52437=DefaultBytecodeVisitor:_faload(int)
52438=DefaultBytecodeVisitor:_i2s(int)
52439=DefaultBytecodeVisitor:_lstore_0(int)
52440=DefaultBytecodeVisitor:_athrow(int)
52441=DefaultBytecodeVisitor:_iload(int, int)
52442=DefaultBytecodeVisitor:_dstore_0(int)
52443=DefaultBytecodeVisitor:_ishr(int)
52444=DefaultBytecodeVisitor:_aload_2(int)
52445=DefaultBytecodeVisitor:_if_acmpeq(int, int)
52446=DefaultBytecodeVisitor:_dload_3(int)
52447=DefaultBytecodeVisitor:_lookupswitch(int, int, int, int[][])
52448=DefaultBytecodeVisitor:_fadd(int)
52449=DefaultBytecodeVisitor:_fload_2(int)
52450=DefaultBytecodeVisitor:_lsub(int)
52451=DefaultBytecodeVisitor:_drem(int)
52452=DefaultBytecodeVisitor:_dstore(int, int)
52453=DefaultBytecodeVisitor:_fstore_2(int)
52454=DefaultBytecodeVisitor:_goto(int, int)
52455=DefaultBytecodeVisitor:_instanceof(int, int, IConstantPoolEntry)
52456=DefaultBytecodeVisitor:_dmul(int)
52457=DefaultBytecodeVisitor:_iaload(int)
52458=DefaultBytecodeVisitor:_ifnull(int, int)
52459=DefaultBytecodeVisitor:_f2d(int)
52460=DefaultBytecodeVisitor:_iconst_0(int)
52461=DefaultBytecodeVisitor:_getstatic(int, int, IConstantPoolEntry)
52462=DefaultBytecodeVisitor:_checkcast(int, int, IConstantPoolEntry)
52463=DefaultBytecodeVisitor:_dstore_3(int)
52464=DefaultBytecodeVisitor:_sastore(int)
52465=DefaultBytecodeVisitor:getLocalVariableName(int, int)
52466=DefaultBytecodeVisitor:_ldc(int, int, IConstantPoolEntry)
52467=DefaultBytecodeVisitor:writeExtraTabs(int)
52468=DefaultBytecodeVisitor:_ior(int)
52469=DefaultBytecodeVisitor:_lstore_3(int)
52470=DefaultBytecodeVisitor:_iflt(int, int)
52471=DefaultBytecodeVisitor:_l2i(int)
52472=DefaultBytecodeVisitor:_irem(int)
52473=DefaultBytecodeVisitor:_iinc(int, int, int)
52474=DefaultBytecodeVisitor:_ifgt(int, int)
52475=DefaultBytecodeVisitor:_fmul(int)
52476=DefaultBytecodeVisitor:_pop(int)
52477=DefaultBytecodeVisitor:_lload_3(int)
52478=DefaultBytecodeVisitor:_iload_2(int)
52479=DefaultBytecodeVisitor:_lload(int, int)
52480=DefaultBytecodeVisitor:_imul(int)
52481=DefaultBytecodeVisitor:_invokedynamic(int, int, IConstantPoolEntry)
52482=DefaultBytecodeVisitor:_ifne(int, int)
52483=DefaultBytecodeVisitor:_lastore(int)
52484=DefaultBytecodeVisitor:_lcmp(int)
52485=DefaultBytecodeVisitor:_iastore(int)
52486=DefaultBytecodeVisitor:_iconst_4(int)
52487=DefaultBytecodeVisitor:_dcmpg(int)
52488=DefaultBytecodeVisitor:_getfield(int, int, IConstantPoolEntry)
52489=DefaultBytecodeVisitor:_iconst_3(int)
52490=DefaultBytecodeVisitor:_astore_3(int)
52491=DefaultBytecodeVisitor:_istore_3(int)
52492=DefaultBytecodeVisitor:_isub(int)
52493=DefaultBytecodeVisitor:_iadd(int)
52494=DefaultBytecodeVisitor:_arraylength(int)
52495=DefaultBytecodeVisitor:_iushr(int)
52496=DefaultBytecodeVisitor:_f2l(int)
52497=DefaultBytecodeVisitor:_jsr_w(int, int)
52498=DefaultBytecodeVisitor:_lstore_2(int)
52499=DefaultBytecodeVisitor:_istore_2(int)
52500=DefaultBytecodeVisitor:_dneg(int)
52501=DefaultBytecodeVisitor:_daload(int)
52502=DefaultBytecodeVisitor:_dstore_2(int)
52503=DefaultBytecodeVisitor:DefaultBytecodeVisitor(ICodeAttribute, char[][], char[], boolean, StringBuffer, String, int, int)
52504=DefaultBytecodeVisitor:_iload_1(int)
52505=DefaultBytecodeVisitor:_astore_2(int)
52506=DefaultBytecodeVisitor:_fconst_2(int)
52507=DefaultBytecodeVisitor:_i2b(int)
52508=DefaultBytecodeVisitor:_land(int)
52509=DefaultBytecodeVisitor:_i2d(int)
52510=DefaultBytecodeVisitor:_dup2(int)
52511=DefaultBytecodeVisitor:_lmul(int)
52512=DefaultBytecodeVisitor:_bastore(int)
52513=DefaultBytecodeVisitor:_fload_1(int)
52514=DefaultBytecodeVisitor:_putstatic(int, int, IConstantPoolEntry)
52515=DefaultBytecodeVisitor:_fstore_3(int)
52516=DefaultBytecodeVisitor:_newarray(int, int)
52517=DefaultBytecodeVisitor:_if_icmplt(int, int)
52518=DefaultBytecodeVisitor:_fastore(int)
52519=DefaultBytecodeVisitor:_if_acmpne(int, int)
52520=DefaultBytecodeVisitor:_caload(int)
52521=DefaultBytecodeVisitor:_iload_3(int)
52522=DefaultBytecodeVisitor:_d2i(int)
52523=DefaultBytecodeVisitor:_lushr(int)
52524=DefaultBytecodeVisitor:_aastore(int)
52525=DefaultBytecodeVisitor:_nop(int)
52526=DefaultBytecodeVisitor:_aconst_null(int)
52527=DefaultBytecodeVisitor:_fload_3(int)
52528=DefaultBytecodeVisitor:_istore_1(int)
52529=DefaultBytecodeVisitor:_fstore_1(int)
52530=DefaultBytecodeVisitor:_astore_1(int)
52531=DefaultBytecodeVisitor:_dstore_1(int)
52532=DefaultBytecodeVisitor:_istore(int, int)
52533=DefaultBytecodeVisitor:_ifnonnull(int, int)
52534=DefaultBytecodeVisitor:_dup(int)
52535=DefaultBytecodeVisitor:getLocalVariableName(int, int, boolean)
52536=DefaultBytecodeVisitor:_lstore_1(int)
52537=DefaultBytecodeVisitor:_iconst_m1(int)
52538=DefaultBytecodeVisitor:_lload_1(int)
52539=DefaultBytecodeVisitor:_areturn(int)
52540=DefaultBytecodeVisitor:returnDeclaringClassName(IConstantPoolEntry)
52541=DefaultBytecodeVisitor:_monitorexit(int)
52542=DefaultBytecodeVisitor:_if_icmpne(int, int)
52543=DefaultBytecodeVisitor:_monitorenter(int)
52544=DefaultBytecodeVisitor:_f2i(int)
52545=DefaultBytecodeVisitor:_iconst_5(int)
52546=DefaultBytecodeVisitor:_jsr(int, int)
52547=DefaultBytecodeVisitor:_ddiv(int)
52548=DefaultBytecodeVisitor:_aaload(int)
52549=DefaultBytecodeVisitor:_return(int)
52550=DefaultBytecodeVisitor:_fconst_1(int)
52551=DefaultBytecodeVisitor:_fload(int, int)
52552=DefaultBytecodeVisitor:_dup2_x2(int)
52553=DefaultBytecodeVisitor:_if_icmpgt(int, int)
52554=DefaultBytecodeVisitor:_ldc2_w(int, int, IConstantPoolEntry)
52555=DefaultBytecodeVisitor:_multianewarray(int, int, int, IConstantPoolEntry)
52556=DefaultBytecodeVisitor:_iload_0(int)
52557=DefaultBytecodeVisitor:_ret(int, int)
52558=DefaultBytecodeVisitor:writeTabs()
52559=DefaultBytecodeVisitor:_dastore(int)
52560=DefaultBytecodeVisitor:_dload_1(int)
52561=DefaultBytecodeVisitor:dumpPcNumber(int)
52562=DefaultBytecodeVisitor:_dreturn(int)
52563=DefaultBytecodeVisitor:_saload(int)
52564=DefaultBytecodeVisitor:_if_icmple(int, int)
52565=DefaultBytecodeVisitor:_impdep1(int)
52566=DefaultBytecodeVisitor:_iconst_2(int)
52567=DefaultBytecodeVisitor:_lxor(int)
52568=DefaultBytecodeVisitor:_i2c(int)
52569=DefaultBytecodeVisitor:_iand(int)
52570=DefaultBytecodeVisitor:_dup_x1(int)
52571=DefaultBytecodeVisitor:_fload_0(int)
52572=DefaultBytecodeVisitor:_l2d(int)
52573=DefaultBytecodeVisitor:isCompact()
52574=DefaultBytecodeVisitor:_if_icmpeq(int, int)
52575=DefaultBytecodeVisitor:_lreturn(int)
52576=DefaultBytecodeVisitor:returnClassName(char[])
52577=DefaultBytecodeVisitor:_fsub(int)
52578=DefaultBytecodeVisitor:_lstore(int, int)
52579=DefaultBytecodeVisitor:_ladd(int)
52580=DefaultBytecodeVisitor:_ifge(int, int)
52581=INameEnvironment:findType(char[], char[][])
52582=INameEnvironment:findType(char[][])
52583=INameEnvironment:cleanup()
52584=INameEnvironment:isPackage(char[][], char[])
52585=VariableElementImpl:getSimpleName()
52586=VariableElementImpl:getEnclosedElements()
52587=VariableElementImpl:getEnclosingElement()
52588=VariableElementImpl:getPackage()
52589=VariableElementImpl:VariableElementImpl(BaseProcessingEnvImpl, VariableBinding)
52590=VariableElementImpl:getAnnotationBindings()
52591=VariableElementImpl:toString()
52592=VariableElementImpl:getConstantValue()
52593=VariableElementImpl:hides(Element)
52594=VariableElementImpl:accept(ElementVisitor<R, P>, P)
52595=VariableElementImpl:getKind()
52596=VariableElementImpl:getModifiers()
52597=OnDemandComputer:maybeReduce(ImportName, Collection<ImportName>, int, Set<String>)
52598=OnDemandComputer:identifyPossibleReductions(Set<ImportName>, Set<ImportName>, Set<String>, Set<String>)
52599=OnDemandComputer:OnDemandComputer(int, int)
52600=OnDemandComputer:mapByContainer(Collection<ImportName>)
52601=A:m()
52602=CreateTypeMemberOperation:setAlteredName(String)
52603=CreateTypeMemberOperation:CreateTypeMemberOperation(IJavaElement, String, boolean)
52604=CreateTypeMemberOperation:verifyNameCollision()
52605=CreateTypeMemberOperation:generateSyntaxIncorrectAST()
52606=CreateTypeMemberOperation:rename(ASTNode, SimpleName)
52607=CreateTypeMemberOperation:getChildPropertyDescriptor(ASTNode)
52608=CreateTypeMemberOperation:verify()
52609=CreateTypeMemberOperation:generateElementAST(ASTRewrite, ICompilationUnit)
52610=CreateTypeMemberOperation:removeIndentAndNewLines(String, ICompilationUnit)
52611=CreateTypeMemberOperation:getType()
52612=ChildListPropertyDescriptor:getElementType()
52613=ChildListPropertyDescriptor:ChildListPropertyDescriptor(Class, String, Class, boolean)
52614=ChildListPropertyDescriptor:cycleRisk()
52615=Test:main(String[])
52616=Test:main(String[])
52617=SyntheticFieldBinding:SyntheticFieldBinding(char[], TypeBinding, int, ReferenceBinding, Constant, int)
52618=JavaElementRequestor:acceptMemberType(IType)
52619=JavaElementRequestor:getMemberTypes()
52620=JavaElementRequestor:getPackageFragments()
52621=JavaElementRequestor:getTypes()
52622=JavaElementRequestor:acceptInitializer(IInitializer)
52623=JavaElementRequestor:acceptPackageFragment(IPackageFragment)
52624=JavaElementRequestor:getMethods()
52625=JavaElementRequestor:acceptMethod(IMethod)
52626=JavaElementRequestor:getFields()
52627=JavaElementRequestor:acceptType(IType)
52628=JavaElementRequestor:getInitializers()
52629=JavaElementRequestor:isCanceled()
52630=JavaElementRequestor:acceptField(IField)
52631=JavaElementRequestor:setCanceled(boolean)
52632=JavaElementRequestor:reset()
52633=LocalVariableDeclarationMatch:LocalVariableDeclarationMatch(IJavaElement, int, int, int, SearchParticipant, IResource)
52634=TestValid:foo1()
52635=TestValid:foo2()
52636=firstClass:myMethod()
52637=A:A(int)
52638=A:foo(java.lang.String, long)
52639=CompletionOnJavadocFieldReference:CompletionOnJavadocFieldReference(JavadocMessageSend, int)
52640=CompletionOnJavadocFieldReference:addCompletionFlags(int)
52641=CompletionOnJavadocFieldReference:getCompletionFlags()
52642=CompletionOnJavadocFieldReference:internalResolveType(Scope)
52643=CompletionOnJavadocFieldReference:completeAnException()
52644=CompletionOnJavadocFieldReference:CompletionOnJavadocFieldReference(JavadocFieldReference, int, char[])
52645=CompletionOnJavadocFieldReference:CompletionOnJavadocFieldReference(Expression, int, int, int, char[])
52646=CompletionOnJavadocFieldReference:completeFormalReference()
52647=CompletionOnJavadocFieldReference:printExpression(int, StringBuffer)
52648=CompletionOnJavadocFieldReference:completeBaseTypes()
52649=CompletionOnJavadocFieldReference:completeInText()
52650=FactoryPathUtil:newExtJarFactoryContainer(File)
52651=FactoryPathUtil:encodeFactoryPath(Map<FactoryContainer, FactoryPath.Attributes>)
52652=FactoryPathUtil:FactoryPathUtil()
52653=FactoryPathUtil:doesFactoryPathFileExist(IJavaProject)
52654=FactoryPathUtil:updatePluginContainers(Map<FactoryContainer, FactoryPath.Attributes>, boolean)
52655=FactoryPathUtil:setFactoryPath(IJavaProject, FactoryPath)
52656=FactoryPathUtil:calculatePath(IJavaProject)
52657=FactoryPathUtil:getFileForWorkspace()
52658=FactoryPathUtil:readFactoryPathFile(IJavaProject)
52659=FactoryPathUtil:decodeFactoryPath(String)
52660=FactoryPathUtil:newWkspJarFactoryContainer(IPath)
52661=FactoryPathUtil:getIFileForProject(IJavaProject)
52662=FactoryPathUtil:getDefaultFactoryPath(IJavaProject)
52663=FactoryPathUtil:saveFactoryPathFile(IJavaProject, Map<FactoryContainer, FactoryPath.Attributes>)
52664=FactoryPathUtil:newVarJarFactoryContainer(IPath)
52665=FactoryPathUtil:isFactoryPathFile(IResource)
52666=FactoryPathUtil:getFactoryPath(IJavaProject)
52667=RunModelTests:suite()
52668=RunModelTests:RunModelTests(String)
52669=X14a:foo()
52670=A:A(A)
52671=Type:isNameQualifiedType()
52672=Type:isWildcardType()
52673=Type:isQualifiedType()
52674=Type:Type(AST)
52675=Type:isUnionType()
52676=Type:isSimpleType()
52677=Type:resolveBinding()
52678=Type:isArrayType()
52679=Type:isParameterizedType()
52680=Type:isIntersectionType()
52681=Type:isAnnotatable()
52682=Type:isPrimitiveType()
52683=JSR308SpecSnippetTests:test022()
52684=JSR308SpecSnippetTests:test033()
52685=JSR308SpecSnippetTests:test044()
52686=JSR308SpecSnippetTests:test020()
52687=JSR308SpecSnippetTests:test031()
52688=JSR308SpecSnippetTests:test042()
52689=JSR308SpecSnippetTests:test026()
52690=JSR308SpecSnippetTests:test037()
52691=JSR308SpecSnippetTests:test002()
52692=JSR308SpecSnippetTests:test048()
52693=JSR308SpecSnippetTests:test013()
52694=JSR308SpecSnippetTests:test024()
52695=JSR308SpecSnippetTests:test035()
52696=JSR308SpecSnippetTests:test046()
52697=JSR308SpecSnippetTests:getCompilerOptions()
52698=JSR308SpecSnippetTests:test011()
52699=JSR308SpecSnippetTests:test007()
52700=JSR308SpecSnippetTests:test018()
52701=JSR308SpecSnippetTests:test029()
52702=JSR308SpecSnippetTests:test005()
52703=JSR308SpecSnippetTests:test016()
52704=JSR308SpecSnippetTests:test027()
52705=JSR308SpecSnippetTests:test034b()
52706=JSR308SpecSnippetTests:test038()
52707=JSR308SpecSnippetTests:test030b()
52708=JSR308SpecSnippetTests:test040()
52709=JSR308SpecSnippetTests:JSR308SpecSnippetTests(String)
52710=JSR308SpecSnippetTests:test009()
52711=JSR308SpecSnippetTests:test045()
52712=JSR308SpecSnippetTests:test010()
52713=JSR308SpecSnippetTests:test021()
52714=JSR308SpecSnippetTests:test032()
52715=JSR308SpecSnippetTests:test030c()
52716=JSR308SpecSnippetTests:test043()
52717=JSR308SpecSnippetTests:test030()
52718=JSR308SpecSnippetTests:test003()
52719=JSR308SpecSnippetTests:test049()
52720=JSR308SpecSnippetTests:test014()
52721=JSR308SpecSnippetTests:test025()
52722=JSR308SpecSnippetTests:suite()
52723=JSR308SpecSnippetTests:test036()
52724=JSR308SpecSnippetTests:test001()
52725=JSR308SpecSnippetTests:test047()
52726=JSR308SpecSnippetTests:test012()
52727=JSR308SpecSnippetTests:test023()
52728=JSR308SpecSnippetTests:test034()
52729=JSR308SpecSnippetTests:test006()
52730=JSR308SpecSnippetTests:test017()
52731=JSR308SpecSnippetTests:test028()
52732=JSR308SpecSnippetTests:testClass()
52733=JSR308SpecSnippetTests:test039()
52734=JSR308SpecSnippetTests:test004()
52735=JSR308SpecSnippetTests:test015()
52736=JSR308SpecSnippetTests:test030a()
52737=JSR308SpecSnippetTests:test041()
52738=JSR308SpecSnippetTests:test008()
52739=JSR308SpecSnippetTests:test019()
52740=Test:foo()
52741=WeakHashSetOfCharArray:HashableWeakReference:toString()
52742=WeakHashSetOfCharArray:HashableWeakReference:hashCode()
52743=WeakHashSetOfCharArray:HashableWeakReference:equals(Object)
52744=WeakHashSetOfCharArray:WeakHashSetOfCharArray()
52745=WeakHashSetOfCharArray:HashableWeakReference:HashableWeakReference(char[], ReferenceQueue)
52746=WeakHashSetOfCharArray:add(char[])
52747=WeakHashSetOfCharArray:remove(char[])
52748=WeakHashSetOfCharArray:addValue(HashableWeakReference)
52749=WeakHashSetOfCharArray:cleanupGarbageCollectedValues()
52750=WeakHashSetOfCharArray:get(char[])
52751=WeakHashSetOfCharArray:size()
52752=WeakHashSetOfCharArray:WeakHashSetOfCharArray(int)
52753=WeakHashSetOfCharArray:toString()
52754=WeakHashSetOfCharArray:contains(char[])
52755=WeakHashSetOfCharArray:rehash()
52756=TypeMirrorProc:examineGetEnclosingType()
52757=TypeMirrorProc:process(Set<? extends TypeElement>, RoundEnvironment)
52758=TypeMirrorProc:collectElements()
52759=TypeMirrorProc:examineGetTypeArguments()
52760=X10:bar()
52761=MirrorUtilTestAnnotationProcessorFactory:MirrorUtilTestAnnotationProcessorFactory()
52762=MirrorUtilTestAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
52763=X15c:foo()
52764=Example:foo(int, int)
52765=ResolveLocalClass1:foo()
52766=X06:runTest()
52767=X06:runBare()
52768=_IAttributeDefinitionDescriptor:getQueryId()
52769=_IAttributeDefinitionDescriptor:setReadOnly(boolean)
52770=_IAttributeDefinitionDescriptor:isReadOnly()
52771=_IAttributeDefinitionDescriptor:setId(String)
52772=_IAttributeDefinitionDescriptor:setInternal(boolean)
52773=_IAttributeDefinitionDescriptor:setImplementation2(String)
52774=_IAttributeDefinitionDescriptor:setImplementationName(String)
52775=_IAttributeDefinitionDescriptor:setQueryId(String)
52776=_IAttributeDefinitionDescriptor:isInternal()
52777=_IAttributeDefinitionDescriptor:setDisplayName(String)
52778=_IAttributeDefinitionDescriptor:setImplementationD(String)
52779=IDOMNode:getChild(String)
52780=IDOMNode:setName(String)
52781=IDOMNode:getJavaElement(IJavaElement)
52782=IDOMNode:getPreviousNode()
52783=IDOMNode:getChildren()
52784=IDOMNode:canHaveChildren()
52785=IDOMNode:remove()
52786=IDOMNode:getNodeType()
52787=IDOMNode:getParent()
52788=IDOMNode:isAllowableChild(IDOMNode)
52789=IDOMNode:getCharacters()
52790=IDOMNode:insertSibling(IDOMNode)
52791=IDOMNode:getName()
52792=IDOMNode:isSignatureEqual(IDOMNode)
52793=IDOMNode:clone()
52794=IDOMNode:getContents()
52795=IDOMNode:getNextNode()
52796=IDOMNode:addChild(IDOMNode)
52797=IDOMNode:getFirstChild()
52798=X12:foo()
52799=SynchronizedStatement:isSubRoutineEscaping()
52800=SynchronizedStatement:generateCode(BlockScope, CodeStream)
52801=SynchronizedStatement:traverse(ASTVisitor, BlockScope)
52802=SynchronizedStatement:generateSubRoutineInvocation(BlockScope, CodeStream)
52803=SynchronizedStatement:SynchronizedStatement(Expression, Block, int, int)
52804=SynchronizedStatement:resolve(BlockScope)
52805=SynchronizedStatement:printStatement(int, StringBuffer)
52806=SynchronizedStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
52807=G:foo(p3.p2.p.X)
52808=ByteConstant:stringValue()
52809=ByteConstant:hashCode()
52810=ByteConstant:charValue()
52811=ByteConstant:longValue()
52812=ByteConstant:floatValue()
52813=ByteConstant:ByteConstant(byte)
52814=ByteConstant:intValue()
52815=ByteConstant:shortValue()
52816=ByteConstant:doubleValue()
52817=ByteConstant:toString()
52818=ByteConstant:fromValue(byte)
52819=ByteConstant:byteValue()
52820=ByteConstant:equals(Object)
52821=ByteConstant:typeID()
52822=Y:bar()
52823=Y:Y()
52824=Y:Y(boolean)
52825=Y:Y(int)
52826=NaiveASTFlattener:visit(ArrayCreation)
52827=NaiveASTFlattener:visit(TypeParameter)
52828=NaiveASTFlattener:visit(SingleVariableDeclaration)
52829=NaiveASTFlattener:visit(LabeledStatement)
52830=NaiveASTFlattener:visit(QualifiedName)
52831=NaiveASTFlattener:visit(AnonymousClassDeclaration)
52832=NaiveASTFlattener:visit(SuperMethodReference)
52833=NaiveASTFlattener:visit(MethodInvocation)
52834=NaiveASTFlattener:visit(AnnotationTypeDeclaration)
52835=NaiveASTFlattener:visit(Javadoc)
52836=NaiveASTFlattener:visit(ArrayInitializer)
52837=NaiveASTFlattener:getResult()
52838=NaiveASTFlattener:visit(EnumConstantDeclaration)
52839=NaiveASTFlattener:visit(IfStatement)
52840=NaiveASTFlattener:visit(NameQualifiedType)
52841=NaiveASTFlattener:visit(SuperConstructorInvocation)
52842=NaiveASTFlattener:visit(ThrowStatement)
52843=NaiveASTFlattener:visit(InfixExpression)
52844=NaiveASTFlattener:visit(VariableDeclarationStatement)
52845=NaiveASTFlattener:superInterfaces(TypeDeclaration)
52846=NaiveASTFlattener:visit(DoStatement)
52847=NaiveASTFlattener:visit(FieldAccess)
52848=NaiveASTFlattener:visit(StringLiteral)
52849=NaiveASTFlattener:visit(SwitchCase)
52850=NaiveASTFlattener:visit(ConstructorInvocation)
52851=NaiveASTFlattener:visit(MethodRef)
52852=NaiveASTFlattener:visit(NumberLiteral)
52853=NaiveASTFlattener:visit(MethodDeclaration)
52854=NaiveASTFlattener:visit(EnumDeclaration)
52855=NaiveASTFlattener:visit(SingleMemberAnnotation)
52856=NaiveASTFlattener:visit(ThisExpression)
52857=NaiveASTFlattener:visit(InstanceofExpression)
52858=NaiveASTFlattener:visit(Modifier)
52859=NaiveASTFlattener:thrownExceptions(MethodDeclaration)
52860=NaiveASTFlattener:visit(WildcardType)
52861=NaiveASTFlattener:visit(MemberRef)
52862=NaiveASTFlattener:visit(BreakStatement)
52863=NaiveASTFlattener:visit(CastExpression)
52864=NaiveASTFlattener:visit(TypeLiteral)
52865=NaiveASTFlattener:printModifiers(int)
52866=NaiveASTFlattener:visit(SuperMethodInvocation)
52867=NaiveASTFlattener:visit(ArrayType)
52868=NaiveASTFlattener:visit(VariableDeclarationExpression)
52869=NaiveASTFlattener:visit(BooleanLiteral)
52870=NaiveASTFlattener:visit(NormalAnnotation)
52871=NaiveASTFlattener:visit(PrimitiveType)
52872=NaiveASTFlattener:visit(CreationReference)
52873=NaiveASTFlattener:visit(TryStatement)
52874=NaiveASTFlattener:visit(QualifiedType)
52875=NaiveASTFlattener:visit(LambdaExpression)
52876=NaiveASTFlattener:visit(Assignment)
52877=NaiveASTFlattener:visit(SynchronizedStatement)
52878=NaiveASTFlattener:visit(Block)
52879=NaiveASTFlattener:visit(SwitchStatement)
52880=NaiveASTFlattener:visit(CharacterLiteral)
52881=NaiveASTFlattener:visit(ParenthesizedExpression)
52882=NaiveASTFlattener:visit(WhileStatement)
52883=NaiveASTFlattener:visit(TypeMethodReference)
52884=NaiveASTFlattener:visit(CatchClause)
52885=NaiveASTFlattener:visit(FieldDeclaration)
52886=NaiveASTFlattener:visit(TypeDeclarationStatement)
52887=NaiveASTFlattener:visit(PostfixExpression)
52888=NaiveASTFlattener:visit(TypeDeclaration)
52889=NaiveASTFlattener:getReturnType(MethodDeclaration)
52890=NaiveASTFlattener:visit(BlockComment)
52891=NaiveASTFlattener:visit(AnnotationTypeMemberDeclaration)
52892=NaiveASTFlattener:getTypeDeclaration(TypeDeclarationStatement)
52893=NaiveASTFlattener:visit(IntersectionType)
52894=NaiveASTFlattener:visit(SuperFieldAccess)
52895=NaiveASTFlattener:visit(ClassInstanceCreation)
52896=NaiveASTFlattener:visit(TagElement)
52897=NaiveASTFlattener:visit(AssertStatement)
52898=NaiveASTFlattener:visit(ConditionalExpression)
52899=NaiveASTFlattener:visit(ParameterizedType)
52900=NaiveASTFlattener:visitAnnotationsList(List)
52901=NaiveASTFlattener:NaiveASTFlattener()
52902=NaiveASTFlattener:visit(ImportDeclaration)
52903=NaiveASTFlattener:getName(ClassInstanceCreation)
52904=NaiveASTFlattener:reset()
52905=NaiveASTFlattener:visit(PackageDeclaration)
52906=NaiveASTFlattener:visit(ExpressionMethodReference)
52907=NaiveASTFlattener:visit(ArrayAccess)
52908=NaiveASTFlattener:visit(Initializer)
52909=NaiveASTFlattener:visit(MemberValuePair)
52910=NaiveASTFlattener:getSuperclass(TypeDeclaration)
52911=NaiveASTFlattener:visit(SimpleType)
52912=NaiveASTFlattener:visit(MethodRefParameter)
52913=NaiveASTFlattener:visitTypeAnnotations(AnnotatableType)
52914=NaiveASTFlattener:visit(ExpressionStatement)
52915=NaiveASTFlattener:visit(Dimension)
52916=NaiveASTFlattener:visit(CompilationUnit)
52917=NaiveASTFlattener:visit(ContinueStatement)
52918=NaiveASTFlattener:visit(SimpleName)
52919=NaiveASTFlattener:visit(EnhancedForStatement)
52920=NaiveASTFlattener:visit(LineComment)
52921=NaiveASTFlattener:printIndent()
52922=NaiveASTFlattener:visit(PrefixExpression)
52923=NaiveASTFlattener:visit(ForStatement)
52924=NaiveASTFlattener:visit(NullLiteral)
52925=NaiveASTFlattener:visitReferenceTypeArguments(List)
52926=NaiveASTFlattener:visit(VariableDeclarationFragment)
52927=NaiveASTFlattener:printModifiers(List)
52928=NaiveASTFlattener:visit(TextElement)
52929=NaiveASTFlattener:visit(EmptyStatement)
52930=NaiveASTFlattener:visit(UnionType)
52931=NaiveASTFlattener:visit(ReturnStatement)
52932=NaiveASTFlattener:visitComponentType(ArrayType)
52933=NaiveASTFlattener:visit(MarkerAnnotation)
52934=ClassLiteralAccess:analyseCode(BlockScope, FlowContext, FlowInfo)
52935=ClassLiteralAccess:generateCode(BlockScope, CodeStream, boolean)
52936=ClassLiteralAccess:resolveType(BlockScope)
52937=ClassLiteralAccess:printExpression(int, StringBuffer)
52938=ClassLiteralAccess:ClassLiteralAccess(int, TypeReference)
52939=ClassLiteralAccess:traverse(ASTVisitor, BlockScope)
52940=Disassembler:disassemble(int, IParameterAnnotation, StringBuffer, String, int, int)
52941=Disassembler:disassembleAsModifier(IRuntimeInvisibleAnnotationsAttribute, StringBuffer, String, int, int)
52942=Disassembler:disassembleAsModifier(IParameterAnnotation, StringBuffer, String, int, int)
52943=Disassembler:decodeModifiersForField(StringBuffer, int)
52944=Disassembler:disassemble(IExtendedAnnotation, StringBuffer, String, int, int)
52945=Disassembler:disassemble(IAnnotationComponent, StringBuffer, String, int, int)
52946=Disassembler:decodeModifiersForInnerClasses(StringBuffer, int, boolean)
52947=Disassembler:disassembleEnumConstructor(IClassFileReader, char[], IMethodInfo, StringBuffer, String, int, int)
52948=Disassembler:getLocalIndex(int, int, char[])
52949=Disassembler:disassembleAsModifier(IRuntimeVisibleAnnotationsAttribute, StringBuffer, String, int, int)
52950=Disassembler:decodeModifiers(StringBuffer, int, boolean, boolean, int[])
52951=Disassembler:disassembleTargetTypeContents(boolean, int, IExtendedAnnotation, StringBuffer, String, int, int)
52952=Disassembler:getConstructorArgumentsForEnum(IMethodInfo[])
52953=Disassembler:disassemble(IClassFileReader, String, int)
52954=Disassembler:disassemble(IClassFileReader, char[], IMethodInfo, StringBuffer, String, int, int)
52955=Disassembler:disassemble(byte[], String, int)
52956=Disassembler:getReferenceKind(int)
52957=Disassembler:getTargetType(int)
52958=Disassembler:isVarArgs(IMethodInfo)
52959=Disassembler:decodeStringValue(String)
52960=Disassembler:dumpTab(int, StringBuffer)
52961=Disassembler:bootstrapArgumentsDescription(IBootstrapMethodsEntry, IConstantPool)
52962=Disassembler:disassemble(IRuntimeInvisibleTypeAnnotationsAttribute, StringBuffer, String, int, int)
52963=Disassembler:disassembleAsModifier(IAnnotationComponent, StringBuffer, String, int, int)
52964=Disassembler:disassemble(IAnnotation, StringBuffer, String, int, int)
52965=Disassembler:disassemble(IMethodParametersAttribute, StringBuffer, String, int, int)
52966=Disassembler:returnClassName(char[], char, int)
52967=Disassembler:disassembleGenericSignature(int, StringBuffer, char[])
52968=Disassembler:disassemble(IStackMapTableAttribute, StringBuffer, String, int, int)
52969=Disassembler:disassembleAsModifier(IAnnotation, StringBuffer, String, int, int)
52970=Disassembler:isJavaLangObject(char[])
52971=Disassembler:getEntryFor(int, ILocalVariableTableEntry[])
52972=Disassembler:getDescription()
52973=Disassembler:decodeStringValue(char[])
52974=Disassembler:disassembleAsModifier(IAnnotationDefaultAttribute, StringBuffer, String, int, int)
52975=Disassembler:disassemble(IVerificationTypeInfo[], int)
52976=Disassembler:disassembleTypeMembers(IClassFileReader, char[], StringBuffer, String, int, int, boolean)
52977=Disassembler:disassemble(IInnerClassesAttribute, StringBuffer, String, int)
52978=Disassembler:disassemble(IRuntimeInvisibleParameterAnnotationsAttribute, StringBuffer, String, int, int)
52979=Disassembler:isDeprecated(IClassFileReader)
52980=Disassembler:disassemble(IStackMapAttribute, StringBuffer, String, int, int)
52981=Disassembler:writeNewLine(StringBuffer, String, int)
52982=Disassembler:getAttribute(char[], ICodeAttribute)
52983=Disassembler:disassemble(IRuntimeVisibleTypeAnnotationsAttribute, StringBuffer, String, int, int)
52984=Disassembler:decodeModifiersForType(StringBuffer, int)
52985=Disassembler:decodeModifiersForMethodParameters(StringBuffer, int)
52986=Disassembler:disassemble(IAnnotationComponentValue, StringBuffer, String, int, int)
52987=Disassembler:toTypePathString(int[][])
52988=Disassembler:isSynthetic(IClassFileReader)
52989=Disassembler:disassemble(IAnnotationDefaultAttribute, StringBuffer, String, int, int)
52990=Disassembler:disassembleAsModifier(IAnnotationComponentValue, StringBuffer, String, int, int)
52991=Disassembler:bootstrapMethodDescription(IBootstrapMethodsEntry, IConstantPool)
52992=Disassembler:getParameterNames(char[], ICodeAttribute, IMethodParametersAttribute, int)
52993=Disassembler:disassembleAsModifier(IParameterAnnotation[], StringBuffer, int, String, int, int)
52994=Disassembler:getEnclosingMethodAttribute(IClassFileReader)
52995=Disassembler:disassembleTypePathContents(int, IExtendedAnnotation, StringBuffer, String, int, int)
52996=Disassembler:disassemble(ICodeAttribute, char[][], char[], boolean, StringBuffer, String, int, int)
52997=Disassembler:decodeModifiers(StringBuffer, int, int[])
52998=Disassembler:dumpNewLineWithTabs(String, int)
52999=Disassembler:disassemble(IClassFileAttribute, StringBuffer, String, int, int)
53000=Disassembler:appendModifier(StringBuffer, int, int, String, boolean)
53001=Disassembler:disassemble(IRuntimeVisibleAnnotationsAttribute, StringBuffer, String, int, int)
53002=Disassembler:disassemble(IFieldInfo, StringBuffer, String, int, int)
53003=Disassembler:disassemble(IClassFileReader, String)
53004=Disassembler:disassemble(IConstantPool, StringBuffer, String, int)
53005=Disassembler:disassemble(byte[], String)
53006=Disassembler:getArguments(int[], String[])
53007=Disassembler:methodDescription(IConstantPoolEntry)
53008=Disassembler:getSignatureForField(char[])
53009=Disassembler:decodeModifiersForMethod(StringBuffer, int)
53010=Disassembler:isCompact(int)
53011=Disassembler:disassemble(IEnclosingMethodAttribute, StringBuffer, String, int)
53012=Disassembler:checkMode(int, int)
53013=Disassembler:escapeString(String)
53014=Disassembler:decodeModifiersForFieldForWorkingCopy(StringBuffer, int)
53015=Disassembler:escapeChar(StringBuffer, char)
53016=Disassembler:disassemble(IBootstrapMethodsAttribute, StringBuffer, String, int, IConstantPool)
53017=Disassembler:disassemble(IRuntimeVisibleParameterAnnotationsAttribute, StringBuffer, String, int, int)
53018=Disassembler:disassembleEnumConstants(IFieldInfo, StringBuffer, String, int, char[][], int)
53019=Disassembler:disassemble(IRuntimeInvisibleAnnotationsAttribute, StringBuffer, String, int, int)
53020=CodeCorrectionTests:testCorrectMethod1()
53021=CodeCorrectionTests:testCorrectImport1()
53022=CodeCorrectionTests:testCorrectArgument1()
53023=CodeCorrectionTests:testCorrectSuperInterface1()
53024=CodeCorrectionTests:testCorrectLocalVariableType2()
53025=CodeCorrectionTests:testCorrectSuperClass2()
53026=CodeCorrectionTests:testCorrectImport3()
53027=CodeCorrectionTests:testCorrectFieldType2()
53028=CodeCorrectionTests:testCorrectReturnType1()
53029=CodeCorrectionTests:setUpSuite()
53030=CodeCorrectionTests:getMarker(ICompilationUnit, String)
53031=CodeCorrectionTests:CodeCorrectionTests(String)
53032=CodeCorrectionTests:testCorrectException2()
53033=CodeCorrectionTests:testCorrectLocalVariable1()
53034=CodeCorrectionTests:testCorrectField1()
53035=CodeCorrectionTests:testCorrectImport2()
53036=CodeCorrectionTests:testCorrectFieldType3()
53037=CodeCorrectionTests:testCorrectSuperClass1()
53038=CodeCorrectionTests:testCorrectFieldType1()
53039=CodeCorrectionTests:testCorrectReturnType2()
53040=CodeCorrectionTests:testCorrectSuperInterface2()
53041=CodeCorrectionTests:tearDownSuite()
53042=CodeCorrectionTests:getMarkers(ICompilationUnit)
53043=CodeCorrectionTests:testCorrectMethod2()
53044=CodeCorrectionTests:getProjectNames()
53045=CodeCorrectionTests:testCorrectException1()
53046=CodeCorrectionTests:suite()
53047=CodeCorrectionTests:testWarningTokens()
53048=CodeCorrectionTests:testCorrectLocalVariable2()
53049=CodeCorrectionTests:testCorrectLocalVariableType1()
53050=CodeCorrectionTests:testCorrectField2()
53051=AboutDialog:createLogo()
53052=AboutDialog:AboutDialog(JFrame)
53053=AbstractMethodTests:AbstractMethodTests(String)
53054=AbstractMethodTests:test002()
53055=AbstractMethodTests:test001()
53056=AbstractMethodTests:suite()
53057=AbstractMethodTests:getResourceOuput(IResource[])
53058=AbstractMethodTests:test003()
53059=X19:foo()
53060=X01:foo()
53061=FullSourceWorkspaceBuildTests:testCompileJDTCoreProjectJavadoc()
53062=FullSourceWorkspaceBuildTests:testScanner()
53063=FullSourceWorkspaceBuildTests:compile(String, String, String, String, boolean, String)
53064=FullSourceWorkspaceBuildTests:testCompileJDTCoreProjectDefault()
53065=FullSourceWorkspaceBuildTests:tearDown()
53066=FullSourceWorkspaceBuildTests:testBatchCompilerNoWarning()
53067=FullSourceWorkspaceBuildTests:testParser()
53068=FullSourceWorkspaceBuildTests:testCompileJDTCoreProjectAllWarnings()
53069=FullSourceWorkspaceBuildTests:testCompileJDTCoreProjectNoWarning()
53070=FullSourceWorkspaceBuildTests:testFullBuildDefault()
53071=FullSourceWorkspaceBuildTests:FullSourceWorkspaceBuildTests(String)
53072=FullSourceWorkspaceBuildTests:compile(String[], String, String, boolean)
53073=FullSourceWorkspaceBuildTests:testFullBuildProjectAllWarnings()
53074=FullSourceWorkspaceBuildTests:testBuildGenericType()
53075=FullSourceWorkspaceBuildTests:testCompileSWTProjectDefault()
53076=FullSourceWorkspaceBuildTests:compile(String, String, boolean, String[])
53077=FullSourceWorkspaceBuildTests:testFullBuildProjectNoWarning()
53078=FullSourceWorkspaceBuildTests:testClass()
53079=FullSourceWorkspaceBuildTests:parseParserFile(int)
53080=FullSourceWorkspaceBuildTests:suite()
53081=FullSourceWorkspaceBuildTests:compile(String, String, String, boolean, String[])
53082=FullSourceWorkspaceBuildTests:scanFile(String, int)
53083=FullSourceWorkspaceBuildTests:parseFile(String, int, int)
53084=FullSourceWorkspaceBuildTests:_testSourceParser()
53085=FullSourceWorkspaceBuildTests:testFullBuildProjectDefault()
53086=FullSourceWorkspaceBuildTests:build(IJavaProject, Hashtable, boolean)
53087=FullSourceWorkspaceBuildTests:testBug434326()
53088=X03b:foo1()
53089=X03b:foo0()
53090=X03b:foo2()
53091=PackageBinding:getTypeOrPackage(char[])
53092=PackageBinding:toString()
53093=PackageBinding:readableName()
53094=PackageBinding:PackageBinding(LookupEnvironment)
53095=PackageBinding:PackageBinding(char[][], PackageBinding, LookupEnvironment)
53096=PackageBinding:kind()
53097=PackageBinding:checkIfNullAnnotationPackage()
53098=PackageBinding:clearMissingTagBit()
53099=PackageBinding:addType(ReferenceBinding)
53100=PackageBinding:getType(char[])
53101=PackageBinding:computeUniqueKey(boolean)
53102=PackageBinding:addPackage(PackageBinding)
53103=PackageBinding:addNotFoundType(char[])
53104=PackageBinding:getPackage0(char[])
53105=PackageBinding:PackageBinding(char[], LookupEnvironment)
53106=PackageBinding:checkIfNullAnnotationType(ReferenceBinding)
53107=PackageBinding:PackageBinding()
53108=PackageBinding:findPackage(char[])
53109=PackageBinding:getType0(char[])
53110=PackageBinding:isViewedAsDeprecated()
53111=PackageBinding:problemId()
53112=PackageBinding:isPackageOfQualifiedTypeName(char[][], char[][])
53113=PackageBinding:addNotFoundPackage(char[])
53114=PackageBinding:getPackage(char[])
53115=ClassScope:connectTypeHierarchyWithoutMembers()
53116=ClassScope:buildFields()
53117=ClassScope:buildType(SourceTypeBinding, PackageBinding, AccessRestriction)
53118=ClassScope:detectHierarchyCycle(TypeBinding, TypeReference)
53119=ClassScope:checkAndSetModifiers()
53120=ClassScope:checkAndSetModifiersForField(FieldBinding, FieldDeclaration)
53121=ClassScope:connectTypeHierarchy()
53122=ClassScope:buildTypeVariables()
53123=ClassScope:buildMemberTypes(AccessRestriction)
53124=ClassScope:connectMemberTypes()
53125=ClassScope:buildFieldsAndMethods()
53126=ClassScope:checkForInheritedMemberTypes(SourceTypeBinding)
53127=ClassScope:connectEnumSuperclass()
53128=ClassScope:findSupertype(TypeReference)
53129=ClassScope:buildLocalType(SourceTypeBinding, PackageBinding)
53130=ClassScope:toString()
53131=ClassScope:buildAnonymousTypeBinding(SourceTypeBinding, ReferenceBinding)
53132=ClassScope:buildLocalTypeBinding(SourceTypeBinding)
53133=ClassScope:referenceType()
53134=ClassScope:connectSuperInterfaces()
53135=ClassScope:checkParameterizedTypeBounds()
53136=ClassScope:checkParameterizedSuperTypeCollisions()
53137=ClassScope:buildMethods()
53138=ClassScope:deferCheck(Runnable)
53139=ClassScope:ClassScope(Scope, TypeDeclaration)
53140=ClassScope:hasDefaultNullnessFor(int)
53141=ClassScope:detectHierarchyCycle(SourceTypeBinding, ReferenceBinding, TypeReference)
53142=ClassScope:connectSuperclass()
53143=ClassScope:problemReporter()
53144=ClassScope:resolveTypeParameter(TypeParameter)
53145=A:launch()
53146=InitializationFlowContext:getInitializationContext()
53147=InitializationFlowContext:InitializationFlowContext(FlowContext, ASTNode, FlowInfo, FlowContext, BlockScope)
53148=InitializationFlowContext:recordHandlingException(ReferenceBinding, UnconditionalFlowInfo, TypeBinding, TypeBinding, ASTNode, boolean)
53149=InitializationFlowContext:checkInitializerExceptions(BlockScope, FlowContext, FlowInfo)
53150=InitializationFlowContext:individualToString()
53151=ImportDeclarationElementInfo:setNameSourceStart(int)
53152=ImportDeclarationElementInfo:getNameRange()
53153=ImportDeclarationElementInfo:setNameSourceEnd(int)
53154=A:foo(java.lang.String)
53155=Example:bar(int)
53156=X:bar()
53157=X:foo()
53158=DefaultProblem:DefaultProblem(char[], String, int, String[], int, int, int, int, int)
53159=DefaultProblem:setSourceLineNumber(int)
53160=DefaultProblem:getSourceColumnNumber()
53161=DefaultProblem:getMessage()
53162=DefaultProblem:getSourceLineNumber()
53163=DefaultProblem:getCategoryID()
53164=DefaultProblem:setSourceEnd(int)
53165=DefaultProblem:getInternalCategoryMessage()
53166=DefaultProblem:isWarning()
53167=DefaultProblem:isInfo()
53168=DefaultProblem:getOriginatingFileName()
53169=DefaultProblem:getArguments()
53170=DefaultProblem:getID()
53171=DefaultProblem:errorReportSource(char[])
53172=DefaultProblem:isError()
53173=DefaultProblem:setOriginatingFileName(char[])
53174=DefaultProblem:getSourceEnd()
53175=DefaultProblem:getSourceStart()
53176=DefaultProblem:toString()
53177=DefaultProblem:setSourceStart(int)
53178=DefaultProblem:getMarkerType()
53179=TestInvalid:foo3()
53180=TestInvalid:foo1()
53181=TestInvalid:foo4()
53182=TestInvalid:foo2()
53183=Test:f()
53184=APIAnnotationProcessorFactory:APIAnnotationProcessor:getTypeValue(AnnotationMirror)
53185=APIAnnotationProcessorFactory:APIAnnotationProcessor:checkAssignableTo()
53186=APIAnnotationProcessorFactory:APIAnnotationProcessor:process()
53187=APIAnnotationProcessorFactory:APIAnnotationProcessor:checkCommon()
53188=APIAnnotationProcessorFactory:APIAnnotationProcessorFactory()
53189=APIAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
53190=APIAnnotationProcessorFactory:APIAnnotationProcessor:APIAnnotationProcessor(AnnotationProcessorEnvironment)
53191=APIAnnotationProcessorFactory:APIAnnotationProcessor:checkSubtypeOf()
53192=APIAnnotationProcessorFactory:APIAnnotationProcessor:findMirror(Declaration, AnnotationTypeDeclaration)
53193=SuperClass:SuperClass(int)
53194=A:launch()
53195=A:getString(String)
53196=DefaultContainerInitializer:DefaultContainer:DefaultContainer(char[][])
53197=DefaultContainerInitializer:DefaultContainer:getPath()
53198=DefaultContainerInitializer:DefaultContainer:getKind()
53199=DefaultContainerInitializer:newContainer(char[][])
53200=DefaultContainerInitializer:DefaultContainerInitializer(String[])
53201=DefaultContainerInitializer:DefaultContainer:getDescription()
53202=DefaultContainerInitializer:initialize(IPath, IJavaProject)
53203=DefaultContainerInitializer:DefaultContainer:getClasspathEntries()
53204=DefaultContainerInitializer:allowFailureContainer()
53205=X:foo(Class<? super Object>)
53206=X:foo()
53207=NonJavaResource:getParent()
53208=NonJavaResource:getFullPath()
53209=NonJavaResource:isReadOnly()
53210=NonJavaResource:hashCode()
53211=NonJavaResource:NonJavaResource(Object, IResource)
53212=NonJavaResource:isFile()
53213=NonJavaResource:getName()
53214=NonJavaResource:equals(Object)
53215=NonJavaResource:toString()
53216=NonJavaResource:getPackageFragmentRoot()
53217=NonJavaResource:getEntryName()
53218=NonJavaResource:getContents()
53219=NonJavaResource:getChildren()
53220=IDocumentElementRequestor:acceptInitializer(int, int, int[], int, int, int, int)
53221=IDocumentElementRequestor:exitConstructor(int, int)
53222=IDocumentElementRequestor:enterClass(int, int[], int, int, int, char[], int, int, char[], int, int, char[][], int[], int[], int)
53223=IDocumentElementRequestor:exitField(int, int)
53224=IDocumentElementRequestor:acceptLineSeparatorPositions(int[])
53225=IDocumentElementRequestor:enterField(int, int[], int, int, char[], int, int, int, char[], int, int, int, int)
53226=IDocumentElementRequestor:exitMethod(int, int)
53227=IDocumentElementRequestor:exitClass(int, int)
53228=IDocumentElementRequestor:acceptProblem(CategorizedProblem)
53229=IDocumentElementRequestor:enterCompilationUnit()
53230=IDocumentElementRequestor:acceptImport(int, int, int[], char[], int, boolean, int)
53231=IDocumentElementRequestor:acceptPackage(int, int, int[], char[], int)
53232=IDocumentElementRequestor:enterInterface(int, int[], int, int, int, char[], int, int, char[][], int[], int[], int)
53233=IDocumentElementRequestor:exitInterface(int, int)
53234=IDocumentElementRequestor:enterConstructor(int, int[], int, int, char[], int, int, char[][], int[], int[], char[][], int[], int[], int, char[][], int[], int[], int)
53235=IDocumentElementRequestor:exitCompilationUnit(int)
53236=IDocumentElementRequestor:enterMethod(int, int[], int, int, char[], int, int, int, char[], int, int, char[][], int[], int[], char[][], int[], int[], int, int, int, char[][], int[], int[], int)
53237=ASTConverterBugsTestJLS3:testBug130778b()
53238=ASTConverterBugsTestJLS3:testBug130778s()
53239=ASTConverterBugsTestJLS3:testBug130778d()
53240=ASTConverterBugsTestJLS3:testBug130778u()
53241=ASTConverterBugsTestJLS3:testBug130778f()
53242=ASTConverterBugsTestJLS3:testBug130778h()
53243=ASTConverterBugsTestJLS3:testBug405908()
53244=ASTConverterBugsTestJLS3:testBug130778k()
53245=ASTConverterBugsTestJLS3:testBug130778m()
53246=ASTConverterBugsTestJLS3:suite()
53247=ASTConverterBugsTestJLS3:testBug130778o()
53248=ASTConverterBugsTestJLS3:testBug130778q()
53249=ASTConverterBugsTestJLS3:testBug130778r()
53250=ASTConverterBugsTestJLS3:testBug130778a()
53251=ASTConverterBugsTestJLS3:testBug130778c()
53252=ASTConverterBugsTestJLS3:testBug130778t()
53253=ASTConverterBugsTestJLS3:testBug130778e()
53254=ASTConverterBugsTestJLS3:testBug130778v()
53255=ASTConverterBugsTestJLS3:testBug130778g()
53256=ASTConverterBugsTestJLS3:testBug130778x()
53257=ASTConverterBugsTestJLS3:testBug130778i()
53258=ASTConverterBugsTestJLS3:testBug130778j()
53259=ASTConverterBugsTestJLS3:testBug130778l()
53260=ASTConverterBugsTestJLS3:testbug388137()
53261=ASTConverterBugsTestJLS3:testBug130778n()
53262=ASTConverterBugsTestJLS3:ASTConverterBugsTestJLS3(String)
53263=ASTConverterBugsTestJLS3:testBug130778p()
53264=Reference:reportOnlyUselesslyReadPrivateField(BlockScope, FieldBinding, boolean)
53265=Reference:checkNullableFieldDereference(Scope, FieldBinding, long, FlowContext, int)
53266=Reference:fieldBinding()
53267=Reference:isEquivalent(Reference)
53268=Reference:checkNPE(BlockScope, FlowContext, FlowInfo, int)
53269=Reference:analyseAssignment(BlockScope, FlowContext, FlowInfo, Assignment, boolean)
53270=Reference:generateCompoundAssignment(BlockScope, CodeStream, Expression, int, int, boolean)
53271=Reference:fieldStore(Scope, CodeStream, FieldBinding, MethodBinding, TypeBinding, boolean, boolean)
53272=Reference:generateAssignment(BlockScope, CodeStream, Assignment, boolean)
53273=Reference:nullStatus(FlowInfo, FlowContext)
53274=Reference:analyseCode(BlockScope, FlowContext, FlowInfo)
53275=Reference:generatePostIncrement(BlockScope, CodeStream, CompoundAssignment, boolean)
53276=Reference:reportOnlyUselesslyReadLocal(BlockScope, LocalVariableBinding, boolean)
53277=Reference:Reference()
53278=Reference:lastFieldBinding()
53279=ASTConverterJavadocFlattener:componentType(ArrayType)
53280=ASTConverterJavadocFlattener:visit(PrimitiveType)
53281=ASTConverterJavadocFlattener:visit(MemberRef)
53282=ASTConverterJavadocFlattener:getResult()
53283=ASTConverterJavadocFlattener:visit(QualifiedName)
53284=ASTConverterJavadocFlattener:visit(Javadoc)
53285=ASTConverterJavadocFlattener:visit(ArrayType)
53286=ASTConverterJavadocFlattener:visit(BlockComment)
53287=ASTConverterJavadocFlattener:visit(TextElement)
53288=ASTConverterJavadocFlattener:visit(MethodRef)
53289=ASTConverterJavadocFlattener:visit(TagElement)
53290=ASTConverterJavadocFlattener:visit(SimpleType)
53291=ASTConverterJavadocFlattener:visit(LineComment)
53292=ASTConverterJavadocFlattener:printIndent()
53293=ASTConverterJavadocFlattener:visit(SimpleName)
53294=ASTConverterJavadocFlattener:ASTConverterJavadocFlattener(String)
53295=ASTConverterJavadocFlattener:visit(MethodRefParameter)
53296=ASTConverterJavadocFlattener:reset()
53297=StringOperation:getCamelCaseMatchingRegions(String, int, int, String, int, int, boolean)
53298=StringOperation:getPatternMatchingRegions(String, int, int, String, int, int, boolean)
53299=SimpleWordSet:includes(char[])
53300=SimpleWordSet:add(char[])
53301=SimpleWordSet:SimpleWordSet(int)
53302=SimpleWordSet:rehash()
53303=X16a:foo()
53304=LabelStatementCompletionTest:LabelStatementCompletionTest(String)
53305=LabelStatementCompletionTest:testInLabeledInnerClassWithErrorBefore()
53306=LabelStatementCompletionTest:testSecondLabel()
53307=LabelStatementCompletionTest:testInLabeledInnerClass()
53308=LabelStatementCompletionTest:testInCaseWithNumberConstant()
53309=LabelStatementCompletionTest:testOneLevelDeep()
53310=LabelStatementCompletionTest:testTwoLevelDeep()
53311=LabelStatementCompletionTest:testInCaseWithIdentifier()
53312=LabelStatementCompletionTest:suite()
53313=LabelStatementCompletionTest:test1FTEO9L()
53314=ResolveLocalMemberTypeDeclaration1:foo()
53315=Test:foo()
53316=Test:bar()
53317=A:actionPerformed(ActionEvent)
53318=CompilationUnitScope:CompilationUnitScope(CompilationUnitDeclaration, LookupEnvironment)
53319=CompilationUnitScope:faultInTypes()
53320=CompilationUnitScope:toString()
53321=CompilationUnitScope:registerInferredInvocation(Invocation)
53322=CompilationUnitScope:buildFieldsAndMethods()
53323=CompilationUnitScope:checkMoreStaticBindings(char[][], HashtableOfType, int, ImportReference)
53324=CompilationUnitScope:getDefaultImports()
53325=CompilationUnitScope:buildTypeBindings(AccessRestriction)
53326=CompilationUnitScope:checkAndSetImports()
53327=CompilationUnitScope:recordReference(char[][], char[])
53328=CompilationUnitScope:findSingleStaticImport(char[][], int)
53329=CompilationUnitScope:problemReporter()
53330=CompilationUnitScope:recordSuperTypeReference(TypeBinding)
53331=CompilationUnitScope:findImport(char[][], boolean, boolean)
53332=CompilationUnitScope:checkAndRecordImportBinding(Binding, HashtableOfType, ImportReference, char[][])
53333=CompilationUnitScope:recordTypeConversion(TypeBinding, TypeBinding)
53334=CompilationUnitScope:findSingleImport(char[][], int, boolean)
53335=CompilationUnitScope:recordTypeReferences(TypeBinding[])
53336=CompilationUnitScope:computeConstantPoolName(LocalTypeBinding)
53337=CompilationUnitScope:faultInImports()
53338=CompilationUnitScope:verifyMethods(MethodVerifier)
53339=CompilationUnitScope:recordSimpleReference(char[])
53340=CompilationUnitScope:recordRootReference(char[])
53341=CompilationUnitScope:nextCaptureID()
53342=CompilationUnitScope:resolveSingleImport(ImportBinding, int)
53343=CompilationUnitScope:findImport(char[][], int)
53344=CompilationUnitScope:typeToRecord(TypeBinding)
53345=CompilationUnitScope:connectTypeHierarchy()
53346=CompilationUnitScope:checkParameterizedTypes()
53347=CompilationUnitScope:recordImportBinding(ImportBinding)
53348=CompilationUnitScope:storeDependencyInfo()
53349=CompilationUnitScope:hasDefaultNullnessFor(int)
53350=CompilationUnitScope:recordQualifiedReference(char[][])
53351=CompilationUnitScope:recordReference(ReferenceBinding, char[])
53352=CompilationUnitScope:recordTypeReference(TypeBinding)
53353=CompilationUnitScope:findStaticMethod(ReferenceBinding, char[])
53354=CompilationUnitScope:getImport(char[][], boolean, boolean)
53355=CompilationUnitScope:cleanUpInferenceContexts()
53356=FactoryLoaderTests:tearDown()
53357=FactoryLoaderTests:testExternalJarLoader()
53358=FactoryLoaderTests:setUp()
53359=FactoryLoaderTests:testNonexistentEntry()
53360=FactoryLoaderTests:suite()
53361=FactoryLoaderTests:FactoryLoaderTests(String)
53362=TestB1:foo()
53363=TestB1:bar()
53364=JdtCorePerformanceMeter:JdtCorePerformanceMeter(String)
53365=JdtCorePerformanceMeter:getReadableName()
53366=JdtCorePerformanceMeter:commit()
53367=JdtCorePerformanceMeter:storeDataPoints(Sample)
53368=JdtCorePerformanceMeter:getShortName()
53369=ConditionalExpressionTest:suite()
53370=ConditionalExpressionTest:test005()
53371=ConditionalExpressionTest:test007()
53372=ConditionalExpressionTest:test014()
53373=ConditionalExpressionTest:test001()
53374=ConditionalExpressionTest:test003()
53375=ConditionalExpressionTest:test010()
53376=ConditionalExpressionTest:test012()
53377=ConditionalExpressionTest:testBug432487()
53378=ConditionalExpressionTest:testClass()
53379=ConditionalExpressionTest:test006()
53380=ConditionalExpressionTest:test008()
53381=ConditionalExpressionTest:test427625()
53382=ConditionalExpressionTest:test002()
53383=ConditionalExpressionTest:test013()
53384=ConditionalExpressionTest:test004()
53385=ConditionalExpressionTest:test015()
53386=ConditionalExpressionTest:test437444_c113()
53387=ConditionalExpressionTest:test011()
53388=ConditionalExpressionTest:ConditionalExpressionTest(String)
53389=ConditionalExpressionTest:test009()
53390=ConditionalExpressionTest:test484425()
53391=J:fieldInt()
53392=J:staticMethod()
53393=WeakHashSet:HashableWeakReference:toString()
53394=WeakHashSet:HashableWeakReference:hashCode()
53395=WeakHashSet:size()
53396=WeakHashSet:WeakHashSet()
53397=WeakHashSet:addValue(HashableWeakReference)
53398=WeakHashSet:rehash()
53399=WeakHashSet:WeakHashSet(int)
53400=WeakHashSet:remove(Object)
53401=WeakHashSet:contains(Object)
53402=WeakHashSet:HashableWeakReference:equals(Object)
53403=WeakHashSet:toString()
53404=WeakHashSet:cleanupGarbageCollectedValues()
53405=WeakHashSet:get(Object)
53406=WeakHashSet:add(Object)
53407=WeakHashSet:HashableWeakReference:HashableWeakReference(Object, ReferenceQueue)
53408=X09:foo(Object, int)
53409=FieldAccessTest:test020()
53410=FieldAccessTest:test007()
53411=FieldAccessTest:test018()
53412=FieldAccessTest:test009()
53413=FieldAccessTest:test003()
53414=FieldAccessTest:test014()
53415=FieldAccessTest:test025()
53416=FieldAccessTest:test005()
53417=FieldAccessTest:FieldAccessTest(String)
53418=FieldAccessTest:test016()
53419=FieldAccessTest:test010()
53420=FieldAccessTest:test021()
53421=FieldAccessTest:test001()
53422=FieldAccessTest:test012()
53423=FieldAccessTest:test023()
53424=FieldAccessTest:testBug361039()
53425=FieldAccessTest:suite()
53426=FieldAccessTest:test019()
53427=FieldAccessTest:test006()
53428=FieldAccessTest:getCompilerOptions()
53429=FieldAccessTest:test008()
53430=FieldAccessTest:test015()
53431=FieldAccessTest:test002()
53432=FieldAccessTest:test017()
53433=FieldAccessTest:testClass()
53434=FieldAccessTest:test004()
53435=FieldAccessTest:test011()
53436=FieldAccessTest:test022()
53437=FieldAccessTest:test013()
53438=FieldAccessTest:test024()
53439=Util:toBoolean(boolean)
53440=Util:getFileCharContent(File, String)
53441=Util:bind(String)
53442=Util:toString(Object[])
53443=Util:isJavaFileName(char[])
53444=Util:bind(String, String)
53445=Util:getInputStreamAsCharArray(InputStream, int, String)
53446=Util:toString(Object[], Displayable)
53447=Util:isClassFileName(String)
53448=Util:getFileByteContent(File)
53449=Util:Displayable:displayString(Object)
53450=Util:bind(String, String, String)
53451=Util:relocalize()
53452=Util:isJavaFileName(String)
53453=Util:getInputStreamAsByteArray(InputStream, int)
53454=Util:isClassFileName(char[])
53455=Util:bind(String, String[])
53456=Util:getZipEntryByteContent(ZipEntry, ZipFile)
53457=Util:bytesToChar(byte[], String)
53458=Util:isArchiveFileName(String)
53459=SourceMethodWithChildrenInfo:SourceMethodWithChildrenInfo(IJavaElement[])
53460=SourceMethodWithChildrenInfo:getChildren()
53461=A:foo(int)
53462=X:main(String[])
53463=X:X()
53464=ExceptionAttribute:getExceptionNames()
53465=ExceptionAttribute:getExceptionIndexes()
53466=ExceptionAttribute:ExceptionAttribute(byte[], IConstantPool, int)
53467=ExceptionAttribute:getExceptionsNumber()
53468=Test:foo(Object)
53469=Test:foo(String[])
53470=Test:bar()
53471=APTProblem:getMarkerType()
53472=APTProblem:setSourceStart(int)
53473=APTProblem:getCategoryID()
53474=APTProblem:getArguments()
53475=APTProblem:setSourceLineNumber(int)
53476=APTProblem:getID()
53477=APTProblem:APTProblem(String, Severity, IFile, int, int, int, String[], boolean)
53478=APTProblem:isInfo()
53479=APTProblem:getMessage()
53480=APTProblem:isError()
53481=APTProblem:getSourceEnd()
53482=APTProblem:toString()
53483=APTProblem:getSourceStart()
53484=APTProblem:getOriginatingFileName()
53485=APTProblem:setSourceEnd(int)
53486=APTProblem:isWarning()
53487=APTProblem:getSourceLineNumber()
53488=IntegerCache:toString()
53489=IntegerCache:rehash()
53490=IntegerCache:get(int)
53491=IntegerCache:size()
53492=IntegerCache:IntegerCache()
53493=IntegerCache:containsKey(int)
53494=IntegerCache:clear()
53495=IntegerCache:hash(int)
53496=IntegerCache:IntegerCache(int)
53497=IntegerCache:put(int, int)
53498=X:main(String[])
53499=ISourceMethod:getTypeParameterBounds()
53500=ISourceMethod:getDeclarationSourceEnd()
53501=ISourceMethod:getNameSourceStart()
53502=ISourceMethod:getExceptionTypeNames()
53503=ISourceMethod:getNameSourceEnd()
53504=ISourceMethod:getReturnTypeName()
53505=ISourceMethod:getDeclarationSourceStart()
53506=ISourceMethod:getTypeParameterNames()
53507=A:foo(int)
53508=Test:foo()
53509=A:launch(ILaunchConfiguration, String, ILaunch, IProgressMonitor)
53510=X04:foo(int, int)
53511=X04:foo2()
53512=X29:foo()
53513=A:foo()
53514=FieldDeclaration:internalModifiers2Property()
53515=FieldDeclaration:fragments()
53516=FieldDeclaration:internalStructuralPropertiesForType(int)
53517=FieldDeclaration:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
53518=FieldDeclaration:propertyDescriptors(int)
53519=FieldDeclaration:setType(Type)
53520=FieldDeclaration:treeSize()
53521=FieldDeclaration:memSize()
53522=FieldDeclaration:internalJavadocProperty()
53523=FieldDeclaration:clone0(AST)
53524=FieldDeclaration:getNodeType0()
53525=FieldDeclaration:internalGetChildListProperty(ChildListPropertyDescriptor)
53526=FieldDeclaration:internalGetSetIntProperty(SimplePropertyDescriptor, boolean, int)
53527=FieldDeclaration:subtreeMatch0(ASTMatcher, Object)
53528=FieldDeclaration:getType()
53529=FieldDeclaration:FieldDeclaration(AST)
53530=FieldDeclaration:accept0(ASTVisitor)
53531=FieldDeclaration:internalModifiersProperty()
53532=InnerEmulationDependency:InnerEmulationDependency(BlockScope, boolean)
53533=AbstractReader:stop()
53534=AbstractReader:AbstractReader(String)
53535=AbstractReader:readerLoop()
53536=AbstractReader:start()
53537=X09:foo()
53538=SingleLineTestCase:testCommentSpace2()
53539=SingleLineTestCase:testClearBlankLines3()
53540=SingleLineTestCase:testCommentBegin1()
53541=SingleLineTestCase:SingleLineTestCase(String)
53542=SingleLineTestCase:testClearBlankLines1()
53543=SingleLineTestCase:testIndentedComment3()
53544=SingleLineTestCase:testNeverJoin2()
53545=SingleLineTestCase:testNoFormat1()
53546=SingleLineTestCase:testIndentedComment1()
53547=SingleLineTestCase:testCommentWrapping5()
53548=SingleLineTestCase:testMultipleComments1()
53549=SingleLineTestCase:testCommentNls4()
53550=SingleLineTestCase:getCommentKind()
53551=SingleLineTestCase:testCommentWrapping3()
53552=SingleLineTestCase:testNoChange1()
53553=SingleLineTestCase:testCommentNls2()
53554=SingleLineTestCase:testCommentWrapping1()
53555=SingleLineTestCase:testEmptyComment()
53556=SingleLineTestCase:testIllegalLineLength2()
53557=SingleLineTestCase:testCommentBegin3()
53558=SingleLineTestCase:testCommentDelimiter1()
53559=SingleLineTestCase:testCommentSpace3()
53560=SingleLineTestCase:test109581()
53561=SingleLineTestCase:testCommentSpace1()
53562=SingleLineTestCase:testIndentedComment2()
53563=SingleLineTestCase:testClearBlankLines2()
53564=SingleLineTestCase:testNeverJoin1()
53565=SingleLineTestCase:testMultipleComments3()
53566=SingleLineTestCase:testCommentWrapping4()
53567=SingleLineTestCase:testCommentNls5()
53568=SingleLineTestCase:testCommentWrapping2()
53569=SingleLineTestCase:testMultipleComments2()
53570=SingleLineTestCase:testCommentNls3()
53571=SingleLineTestCase:testIllegalLineLength1()
53572=SingleLineTestCase:testCommentBegin2()
53573=SingleLineTestCase:suite()
53574=SingleLineTestCase:testCommentNls1()
53575=SingleLineTestCase:testCommentDelimiter2()
53576=ExpectedProblem:getLocation()
53577=ExpectedProblem:ExpectedProblem(String, String, IPath)
53578=ExpectedProblem:toString()
53579=ExpectedProblem:ExpectedProblem(String, String, IPath, int, int)
53580=ExpectedProblem:equalsProblem(Problem)
53581=NegativeLambdaExpressionsTest:test016()
53582=NegativeLambdaExpressionsTest:test423429()
53583=NegativeLambdaExpressionsTest:test384750k()
53584=NegativeLambdaExpressionsTest:test005()
53585=NegativeLambdaExpressionsTest:test423129c()
53586=NegativeLambdaExpressionsTest:test437444()
53587=NegativeLambdaExpressionsTest:_test432605()
53588=NegativeLambdaExpressionsTest:test401847a()
53589=NegativeLambdaExpressionsTest:test093()
53590=NegativeLambdaExpressionsTest:test406614()
53591=NegativeLambdaExpressionsTest:test406859a()
53592=NegativeLambdaExpressionsTest:test400556a()
53593=NegativeLambdaExpressionsTest:test401610f()
53594=NegativeLambdaExpressionsTest:test428300a()
53595=NegativeLambdaExpressionsTest:test421927()
53596=NegativeLambdaExpressionsTest:test029()
53597=NegativeLambdaExpressionsTest:test082()
53598=NegativeLambdaExpressionsTest:test401939c()
53599=NegativeLambdaExpressionsTest:testSuperReference01()
53600=NegativeLambdaExpressionsTest:test014()
53601=NegativeLambdaExpressionsTest:test401845a()
53602=NegativeLambdaExpressionsTest:test428300()
53603=NegativeLambdaExpressionsTest:test384750i()
53604=NegativeLambdaExpressionsTest:test049()
53605=NegativeLambdaExpressionsTest:test410114()
53606=NegativeLambdaExpressionsTest:test003()
53607=NegativeLambdaExpressionsTest:test433458()
53608=NegativeLambdaExpressionsTest:test402609b()
53609=NegativeLambdaExpressionsTest:test422801a()
53610=NegativeLambdaExpressionsTest:test038()
53611=NegativeLambdaExpressionsTest:test404657_final()
53612=NegativeLambdaExpressionsTest:test384750z()
53613=NegativeLambdaExpressionsTest:test091()
53614=NegativeLambdaExpressionsTest:test429934()
53615=NegativeLambdaExpressionsTest:test400556c()
53616=NegativeLambdaExpressionsTest:test401610d()
53617=NegativeLambdaExpressionsTest:test438945()
53618=NegativeLambdaExpressionsTest:test027()
53619=NegativeLambdaExpressionsTest:test422801()
53620=NegativeLambdaExpressionsTest:testSuperReference03()
53621=NegativeLambdaExpressionsTest:test401939a()
53622=NegativeLambdaExpressionsTest:test384750z9()
53623=NegativeLambdaExpressionsTest:test429969()
53624=NegativeLambdaExpressionsTest:test080()
53625=NegativeLambdaExpressionsTest:test401939()
53626=NegativeLambdaExpressionsTest:test425278()
53627=NegativeLambdaExpressionsTest:test401845c()
53628=NegativeLambdaExpressionsTest:test058()
53629=NegativeLambdaExpressionsTest:test384750o()
53630=NegativeLambdaExpressionsTest:test012()
53631=NegativeLambdaExpressionsTest:test001()
53632=NegativeLambdaExpressionsTest:test047()
53633=NegativeLambdaExpressionsTest:test432531a()
53634=NegativeLambdaExpressionsTest:test431514()
53635=NegativeLambdaExpressionsTest:test036()
53636=NegativeLambdaExpressionsTest:test422489b()
53637=NegativeLambdaExpressionsTest:test401610b()
53638=NegativeLambdaExpressionsTest:test400556e()
53639=NegativeLambdaExpressionsTest:test025()
53640=NegativeLambdaExpressionsTest:test401789_401790a()
53641=NegativeLambdaExpressionsTest:test427265()
53642=NegativeLambdaExpressionsTest:test401845e()
53643=NegativeLambdaExpressionsTest:test384750m()
53644=NegativeLambdaExpressionsTest:testUnderScoreParameter()
53645=NegativeLambdaExpressionsTest:test010()
53646=NegativeLambdaExpressionsTest:test056()
53647=NegativeLambdaExpressionsTest:test401939e()
53648=NegativeLambdaExpressionsTest:test425512b()
53649=NegativeLambdaExpressionsTest:test045()
53650=NegativeLambdaExpressionsTest:test384750()
53651=NegativeLambdaExpressionsTest:test433588a()
53652=NegativeLambdaExpressionsTest:testBug487390()
53653=NegativeLambdaExpressionsTest:test034()
53654=NegativeLambdaExpressionsTest:test412453()
53655=NegativeLambdaExpressionsTest:test402261c()
53656=NegativeLambdaExpressionsTest:test400556g()
53657=NegativeLambdaExpressionsTest:test422489d()
53658=NegativeLambdaExpressionsTest:test069()
53659=NegativeLambdaExpressionsTest:test023()
53660=NegativeLambdaExpressionsTest:test384750s()
53661=NegativeLambdaExpressionsTest:test054()
53662=NegativeLambdaExpressionsTest:test439707()
53663=NegativeLambdaExpressionsTest:test400556j()
53664=NegativeLambdaExpressionsTest:testGroundTargetTypeWithWithWildcards()
53665=NegativeLambdaExpressionsTest:test043()
53666=NegativeLambdaExpressionsTest:test089()
53667=NegativeLambdaExpressionsTest:test428857()
53668=NegativeLambdaExpressionsTest:test384750z2()
53669=NegativeLambdaExpressionsTest:test421927a()
53670=NegativeLambdaExpressionsTest:test032()
53671=NegativeLambdaExpressionsTest:test078()
53672=NegativeLambdaExpressionsTest:test400745a()
53673=NegativeLambdaExpressionsTest:test384750d()
53674=NegativeLambdaExpressionsTest:test425512c()
53675=NegativeLambdaExpressionsTest:test_bug399770_1()
53676=NegativeLambdaExpressionsTest:test428857b()
53677=NegativeLambdaExpressionsTest:test021()
53678=NegativeLambdaExpressionsTest:test067()
53679=NegativeLambdaExpressionsTest:test406588()
53680=NegativeLambdaExpressionsTest:test406773()
53681=NegativeLambdaExpressionsTest:test384750q()
53682=NegativeLambdaExpressionsTest:test423803()
53683=NegativeLambdaExpressionsTest:testClass()
53684=NegativeLambdaExpressionsTest:test412284b()
53685=NegativeLambdaExpressionsTest:test052()
53686=NegativeLambdaExpressionsTest:test098()
53687=NegativeLambdaExpressionsTest:test425512()
53688=NegativeLambdaExpressionsTest:test041()
53689=NegativeLambdaExpressionsTest:test087()
53690=NegativeLambdaExpressionsTest:test442983()
53691=NegativeLambdaExpressionsTest:getCompilerOptions()
53692=NegativeLambdaExpressionsTest:test030()
53693=NegativeLambdaExpressionsTest:test076()
53694=NegativeLambdaExpressionsTest:test384750b()
53695=NegativeLambdaExpressionsTest:testBug458332()
53696=NegativeLambdaExpressionsTest:test428857d()
53697=NegativeLambdaExpressionsTest:test065()
53698=NegativeLambdaExpressionsTest:testBug487390b()
53699=NegativeLambdaExpressionsTest:test406586()
53700=NegativeLambdaExpressionsTest:test096()
53701=NegativeLambdaExpressionsTest:test050()
53702=NegativeLambdaExpressionsTest:test384750w()
53703=NegativeLambdaExpressionsTest:test425512ce()
53704=NegativeLambdaExpressionsTest:test085()
53705=NegativeLambdaExpressionsTest:test384750z6()
53706=NegativeLambdaExpressionsTest:testIntersectionCast()
53707=NegativeLambdaExpressionsTest:test074()
53708=NegativeLambdaExpressionsTest:test415844b()
53709=NegativeLambdaExpressionsTest:test424154a()
53710=NegativeLambdaExpressionsTest:test384750h()
53711=NegativeLambdaExpressionsTest:test422516()
53712=NegativeLambdaExpressionsTest:test428857f()
53713=NegativeLambdaExpressionsTest:test063()
53714=NegativeLambdaExpressionsTest:test425621()
53715=NegativeLambdaExpressionsTest:test402219a()
53716=NegativeLambdaExpressionsTest:test094()
53717=NegativeLambdaExpressionsTest:test384750u()
53718=NegativeLambdaExpressionsTest:test421926b()
53719=NegativeLambdaExpressionsTest:test406859d()
53720=NegativeLambdaExpressionsTest:test401610i()
53721=NegativeLambdaExpressionsTest:test083()
53722=NegativeLambdaExpressionsTest:test384750z4()
53723=NegativeLambdaExpressionsTest:test440643a()
53724=NegativeLambdaExpressionsTest:test019()
53725=NegativeLambdaExpressionsTest:test072()
53726=NegativeLambdaExpressionsTest:test401610ee()
53727=NegativeLambdaExpressionsTest:test384750f()
53728=NegativeLambdaExpressionsTest:test008()
53729=NegativeLambdaExpressionsTest:test061()
53730=NegativeLambdaExpressionsTest:test433588()
53731=NegativeLambdaExpressionsTest:test401939ca()
53732=NegativeLambdaExpressionsTest:test039()
53733=NegativeLambdaExpressionsTest:test406859b()
53734=NegativeLambdaExpressionsTest:test092()
53735=NegativeLambdaExpressionsTest:test400556b()
53736=NegativeLambdaExpressionsTest:test401610g()
53737=NegativeLambdaExpressionsTest:test421926()
53738=NegativeLambdaExpressionsTest:test028()
53739=NegativeLambdaExpressionsTest:test474522()
53740=NegativeLambdaExpressionsTest:test401939b()
53741=NegativeLambdaExpressionsTest:test081()
53742=NegativeLambdaExpressionsTest:test433458a()
53743=NegativeLambdaExpressionsTest:test430310()
53744=NegativeLambdaExpressionsTest:test017()
53745=NegativeLambdaExpressionsTest:test401939d()
53746=NegativeLambdaExpressionsTest:test070()
53747=NegativeLambdaExpressionsTest:test384750l()
53748=NegativeLambdaExpressionsTest:test424400()
53749=NegativeLambdaExpressionsTest:test429969a()
53750=NegativeLambdaExpressionsTest:test006()
53751=NegativeLambdaExpressionsTest:test423129b()
53752=NegativeLambdaExpressionsTest:test402609a()
53753=NegativeLambdaExpressionsTest:_test007()
53754=NegativeLambdaExpressionsTest:test037()
53755=NegativeLambdaExpressionsTest:test384750y()
53756=NegativeLambdaExpressionsTest:test422489a()
53757=NegativeLambdaExpressionsTest:test090()
53758=NegativeLambdaExpressionsTest:test400556d()
53759=NegativeLambdaExpressionsTest:test401610e()
53760=NegativeLambdaExpressionsTest:test423803b()
53761=NegativeLambdaExpressionsTest:test026()
53762=NegativeLambdaExpressionsTest:test384750z8()
53763=NegativeLambdaExpressionsTest:testSuperReference02()
53764=NegativeLambdaExpressionsTest:test015()
53765=NegativeLambdaExpressionsTest:test402609c()
53766=NegativeLambdaExpressionsTest:test405134a()
53767=NegativeLambdaExpressionsTest:test384750j()
53768=NegativeLambdaExpressionsTest:test426965()
53769=NegativeLambdaExpressionsTest:test004()
53770=NegativeLambdaExpressionsTest:NegativeLambdaExpressionsTest(String)
53771=NegativeLambdaExpressionsTest:test035()
53772=NegativeLambdaExpressionsTest:test401610c()
53773=NegativeLambdaExpressionsTest:test400556f()
53774=NegativeLambdaExpressionsTest:test422489c()
53775=NegativeLambdaExpressionsTest:test024()
53776=NegativeLambdaExpressionsTest:test412650()
53777=NegativeLambdaExpressionsTest:test013()
53778=NegativeLambdaExpressionsTest:test059()
53779=NegativeLambdaExpressionsTest:test442446()
53780=NegativeLambdaExpressionsTest:test401845b()
53781=NegativeLambdaExpressionsTest:test384750p()
53782=NegativeLambdaExpressionsTest:test422489()
53783=NegativeLambdaExpressionsTest:test048()
53784=NegativeLambdaExpressionsTest:test002()
53785=NegativeLambdaExpressionsTest:test427749()
53786=NegativeLambdaExpressionsTest:test425712()
53787=NegativeLambdaExpressionsTest:test079()
53788=NegativeLambdaExpressionsTest:test402609()
53789=NegativeLambdaExpressionsTest:test401789_401790()
53790=NegativeLambdaExpressionsTest:test033()
53791=NegativeLambdaExpressionsTest:test401610a()
53792=NegativeLambdaExpressionsTest:test402261b()
53793=NegativeLambdaExpressionsTest:test400556h()
53794=NegativeLambdaExpressionsTest:test068()
53795=NegativeLambdaExpressionsTest:test022()
53796=NegativeLambdaExpressionsTest:test401845d()
53797=NegativeLambdaExpressionsTest:test057()
53798=NegativeLambdaExpressionsTest:test384750n()
53799=NegativeLambdaExpressionsTest:test401939f()
53800=NegativeLambdaExpressionsTest:test011()
53801=NegativeLambdaExpressionsTest:test425512a()
53802=NegativeLambdaExpressionsTest:test435397()
53803=NegativeLambdaExpressionsTest:testExplicitTypeArgument()
53804=NegativeLambdaExpressionsTest:test046()
53805=NegativeLambdaExpressionsTest:test424444()
53806=NegativeLambdaExpressionsTest:test444665()
53807=NegativeLambdaExpressionsTest:test433735()
53808=NegativeLambdaExpressionsTest:test031()
53809=NegativeLambdaExpressionsTest:test077()
53810=NegativeLambdaExpressionsTest:_test424400()
53811=NegativeLambdaExpressionsTest:test384750c()
53812=NegativeLambdaExpressionsTest:test_bug399770_2()
53813=NegativeLambdaExpressionsTest:test428857a()
53814=NegativeLambdaExpressionsTest:test020()
53815=NegativeLambdaExpressionsTest:test066()
53816=NegativeLambdaExpressionsTest:test401610()
53817=NegativeLambdaExpressionsTest:test384750t()
53818=NegativeLambdaExpressionsTest:suite()
53819=NegativeLambdaExpressionsTest:test055()
53820=NegativeLambdaExpressionsTest:test426206()
53821=NegativeLambdaExpressionsTest:test402261a()
53822=NegativeLambdaExpressionsTest:test400556i()
53823=NegativeLambdaExpressionsTest:testGenericArrayCreation()
53824=NegativeLambdaExpressionsTest:test044()
53825=NegativeLambdaExpressionsTest:test384750z3()
53826=NegativeLambdaExpressionsTest:test075()
53827=NegativeLambdaExpressionsTest:test384750a()
53828=NegativeLambdaExpressionsTest:test402259()
53829=NegativeLambdaExpressionsTest:test428177()
53830=NegativeLambdaExpressionsTest:test428857c()
53831=NegativeLambdaExpressionsTest:test064()
53832=NegativeLambdaExpressionsTest:test384750r()
53833=NegativeLambdaExpressionsTest:test053()
53834=NegativeLambdaExpressionsTest:test412284c()
53835=NegativeLambdaExpressionsTest:test400556k()
53836=NegativeLambdaExpressionsTest:test423129()
53837=NegativeLambdaExpressionsTest:test383096()
53838=NegativeLambdaExpressionsTest:test400745()
53839=NegativeLambdaExpressionsTest:test042()
53840=NegativeLambdaExpressionsTest:test088()
53841=NegativeLambdaExpressionsTest:test404657_loop()
53842=NegativeLambdaExpressionsTest:test384750z1()
53843=NegativeLambdaExpressionsTest:test409544()
53844=NegativeLambdaExpressionsTest:test401769()
53845=NegativeLambdaExpressionsTest:test073()
53846=NegativeLambdaExpressionsTest:test409544b()
53847=NegativeLambdaExpressionsTest:test401845()
53848=NegativeLambdaExpressionsTest:test424154b()
53849=NegativeLambdaExpressionsTest:test401989()
53850=NegativeLambdaExpressionsTest:test384750g()
53851=NegativeLambdaExpressionsTest:test422516a()
53852=NegativeLambdaExpressionsTest:test429833()
53853=NegativeLambdaExpressionsTest:test009()
53854=NegativeLambdaExpressionsTest:test062()
53855=NegativeLambdaExpressionsTest:test402219()
53856=NegativeLambdaExpressionsTest:test428857e()
53857=NegativeLambdaExpressionsTest:test401610j()
53858=NegativeLambdaExpressionsTest:test402219b()
53859=NegativeLambdaExpressionsTest:test412284a()
53860=NegativeLambdaExpressionsTest:test051()
53861=NegativeLambdaExpressionsTest:test384750x()
53862=NegativeLambdaExpressionsTest:test097()
53863=NegativeLambdaExpressionsTest:test421926c()
53864=NegativeLambdaExpressionsTest:test432759()
53865=NegativeLambdaExpressionsTest:setUpTest(Test)
53866=NegativeLambdaExpressionsTest:test040()
53867=NegativeLambdaExpressionsTest:test086()
53868=NegativeLambdaExpressionsTest:test384750z7()
53869=NegativeLambdaExpressionsTest:test440643()
53870=NegativeLambdaExpressionsTest:test402261()
53871=NegativeLambdaExpressionsTest:test427207()
53872=NegativeLambdaExpressionsTest:test018()
53873=NegativeLambdaExpressionsTest:test415844a()
53874=NegativeLambdaExpressionsTest:test071()
53875=NegativeLambdaExpressionsTest:test428795()
53876=NegativeLambdaExpressionsTest:test401847()
53877=NegativeLambdaExpressionsTest:test384750e()
53878=NegativeLambdaExpressionsTest:test428857g()
53879=NegativeLambdaExpressionsTest:test060()
53880=NegativeLambdaExpressionsTest:testBug426563()
53881=NegativeLambdaExpressionsTest:test095()
53882=NegativeLambdaExpressionsTest:test425512cd()
53883=NegativeLambdaExpressionsTest:test384750v()
53884=NegativeLambdaExpressionsTest:test406859c()
53885=NegativeLambdaExpressionsTest:test400556()
53886=NegativeLambdaExpressionsTest:test401610h()
53887=NegativeLambdaExpressionsTest:test084()
53888=NegativeLambdaExpressionsTest:test384750z5()
53889=NegativeLambdaExpressionsTest:test440643b()
53890=ReadAnnotationTypeProcessor:process()
53891=ReadAnnotationTypeProcessor:ReadAnnotationTypeProcessor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
53892=LocalVariableLocator:referenceType()
53893=LocalVariableLocator:resolveLevel(NameReference)
53894=LocalVariableLocator:matchContainer()
53895=LocalVariableLocator:match(LocalDeclaration, MatchingNodeSet)
53896=LocalVariableLocator:matchReportReference(ASTNode, IJavaElement, Binding, int, MatchLocator)
53897=LocalVariableLocator:matchLocalVariable(LocalVariableBinding, boolean)
53898=LocalVariableLocator:resolveLevel(ASTNode)
53899=LocalVariableLocator:resolveLevel(Binding)
53900=LocalVariableLocator:LocalVariableLocator(LocalVariablePattern)
53901=LocalVariableLocator:getLocalVariable()
53902=IfStatement:traverse(ASTVisitor, BlockScope)
53903=IfStatement:IfStatement(Expression, Statement, Statement, int, int)
53904=IfStatement:generateCode(BlockScope, CodeStream)
53905=IfStatement:resolve(BlockScope)
53906=IfStatement:printStatement(int, StringBuffer)
53907=IfStatement:IfStatement(Expression, Statement, int, int)
53908=IfStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
53909=Example:foo()
53910=ParameterAnnotation:getAnnotations()
53911=ParameterAnnotation:ParameterAnnotation(byte[], IConstantPool, int)
53912=ParameterAnnotation:getAnnotationsNumber()
53913=ParameterAnnotation:sizeInBytes()
53914=PackageDeclaration:resolveBinding()
53915=PackageDeclaration:propertyDescriptors(int)
53916=PackageDeclaration:internalStructuralPropertiesForType(int)
53917=PackageDeclaration:treeSize()
53918=PackageDeclaration:memSize()
53919=PackageDeclaration:PackageDeclaration(AST)
53920=PackageDeclaration:clone0(AST)
53921=PackageDeclaration:accept0(ASTVisitor)
53922=PackageDeclaration:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
53923=PackageDeclaration:getNodeType0()
53924=PackageDeclaration:getJavadoc()
53925=PackageDeclaration:getName()
53926=PackageDeclaration:subtreeMatch0(ASTMatcher, Object)
53927=PackageDeclaration:setJavadoc(Javadoc)
53928=PackageDeclaration:internalGetChildListProperty(ChildListPropertyDescriptor)
53929=PackageDeclaration:annotations()
53930=PackageDeclaration:setName(Name)
53931=Test:main(String[])
53932=DefaultASTVisitor:endVisit(PrefixExpression)
53933=DefaultASTVisitor:visit(ThisExpression)
53934=DefaultASTVisitor:endVisit(EmptyStatement)
53935=DefaultASTVisitor:endVisit(CatchClause)
53936=DefaultASTVisitor:visit(QualifiedType)
53937=DefaultASTVisitor:endVisit(Dimension)
53938=DefaultASTVisitor:DefaultASTVisitor(boolean)
53939=DefaultASTVisitor:visit(EmptyStatement)
53940=DefaultASTVisitor:endVisit(MemberValuePair)
53941=DefaultASTVisitor:visit(WildcardType)
53942=DefaultASTVisitor:visit(ConditionalExpression)
53943=DefaultASTVisitor:endVisit(BreakStatement)
53944=DefaultASTVisitor:endVisit(QualifiedType)
53945=DefaultASTVisitor:endVisit(ArrayType)
53946=DefaultASTVisitor:visit(AssertStatement)
53947=DefaultASTVisitor:visit(NumberLiteral)
53948=DefaultASTVisitor:endVisit(NullLiteral)
53949=DefaultASTVisitor:visit(CastExpression)
53950=DefaultASTVisitor:visit(TypeLiteral)
53951=DefaultASTVisitor:visit(ContinueStatement)
53952=DefaultASTVisitor:visit(Initializer)
53953=DefaultASTVisitor:visit(ArrayCreation)
53954=DefaultASTVisitor:visit(Dimension)
53955=DefaultASTVisitor:endVisit(FieldDeclaration)
53956=DefaultASTVisitor:endVisit(ParenthesizedExpression)
53957=DefaultASTVisitor:visit(TypeDeclaration)
53958=DefaultASTVisitor:endVisit(AnnotationTypeDeclaration)
53959=DefaultASTVisitor:visit(QualifiedName)
53960=DefaultASTVisitor:endVisit(NumberLiteral)
53961=DefaultASTVisitor:visit(TagElement)
53962=DefaultASTVisitor:endVisit(StringLiteral)
53963=DefaultASTVisitor:endVisit(EnhancedForStatement)
53964=DefaultASTVisitor:endVisit(ThrowStatement)
53965=DefaultASTVisitor:endVisit(SuperMethodInvocation)
53966=DefaultASTVisitor:endVisit(ConstructorInvocation)
53967=DefaultASTVisitor:visit(ExpressionStatement)
53968=DefaultASTVisitor:endVisit(SingleMemberAnnotation)
53969=DefaultASTVisitor:endVisit(SuperFieldAccess)
53970=DefaultASTVisitor:visit(TypeParameter)
53971=DefaultASTVisitor:endVisit(ExpressionStatement)
53972=DefaultASTVisitor:endVisit(InstanceofExpression)
53973=DefaultASTVisitor:visit(ClassInstanceCreation)
53974=DefaultASTVisitor:visit(ArrayInitializer)
53975=DefaultASTVisitor:endVisit(ThisExpression)
53976=DefaultASTVisitor:endVisit(SwitchStatement)
53977=DefaultASTVisitor:visit(EnumDeclaration)
53978=DefaultASTVisitor:visit(InfixExpression)
53979=DefaultASTVisitor:endVisit(ForStatement)
53980=DefaultASTVisitor:endVisit(ExpressionMethodReference)
53981=DefaultASTVisitor:visit(MethodRef)
53982=DefaultASTVisitor:endVisit(WhileStatement)
53983=DefaultASTVisitor:endVisit(ArrayInitializer)
53984=DefaultASTVisitor:visit(CompilationUnit)
53985=DefaultASTVisitor:endVisit(TypeDeclarationStatement)
53986=DefaultASTVisitor:endVisit(IntersectionType)
53987=DefaultASTVisitor:endVisit(CharacterLiteral)
53988=DefaultASTVisitor:visit(TypeDeclarationStatement)
53989=DefaultASTVisitor:endVisit(ArrayAccess)
53990=DefaultASTVisitor:visit(WhileStatement)
53991=DefaultASTVisitor:endVisit(VariableDeclarationFragment)
53992=DefaultASTVisitor:visit(MethodInvocation)
53993=DefaultASTVisitor:visit(AnnotationTypeDeclaration)
53994=DefaultASTVisitor:visit(LambdaExpression)
53995=DefaultASTVisitor:visit(AnonymousClassDeclaration)
53996=DefaultASTVisitor:visit(SimpleType)
53997=DefaultASTVisitor:visit(SingleVariableDeclaration)
53998=DefaultASTVisitor:visit(ArrayType)
53999=DefaultASTVisitor:endVisit(Initializer)
54000=DefaultASTVisitor:DefaultASTVisitor()
54001=DefaultASTVisitor:visit(BlockComment)
54002=DefaultASTVisitor:visit(SuperMethodInvocation)
54003=DefaultASTVisitor:visit(VariableDeclarationFragment)
54004=DefaultASTVisitor:endVisit(MethodInvocation)
54005=DefaultASTVisitor:visit(NullLiteral)
54006=DefaultASTVisitor:endVisit(NormalAnnotation)
54007=DefaultASTVisitor:endVisit(NameQualifiedType)
54008=DefaultASTVisitor:endVisit(TypeDeclaration)
54009=DefaultASTVisitor:endVisit(MemberRef)
54010=DefaultASTVisitor:endVisit(CastExpression)
54011=DefaultASTVisitor:endVisit(MethodRef)
54012=DefaultASTVisitor:endVisit(WildcardType)
54013=DefaultASTVisitor:visit(SynchronizedStatement)
54014=DefaultASTVisitor:visit(StringLiteral)
54015=DefaultASTVisitor:endVisit(LambdaExpression)
54016=DefaultASTVisitor:endVisit(ArrayCreation)
54017=DefaultASTVisitor:visit(CharacterLiteral)
54018=DefaultASTVisitor:visit(IntersectionType)
54019=DefaultASTVisitor:endVisit(Javadoc)
54020=DefaultASTVisitor:endVisit(AnonymousClassDeclaration)
54021=DefaultASTVisitor:endVisit(SuperMethodReference)
54022=DefaultASTVisitor:endVisit(SingleVariableDeclaration)
54023=DefaultASTVisitor:endVisit(LineComment)
54024=DefaultASTVisitor:visit(NormalAnnotation)
54025=DefaultASTVisitor:visit(LineComment)
54026=DefaultASTVisitor:endVisit(ParameterizedType)
54027=DefaultASTVisitor:endVisit(MethodDeclaration)
54028=DefaultASTVisitor:visit(BreakStatement)
54029=DefaultASTVisitor:endVisit(BooleanLiteral)
54030=DefaultASTVisitor:visit(ReturnStatement)
54031=DefaultASTVisitor:visit(SingleMemberAnnotation)
54032=DefaultASTVisitor:visit(ParenthesizedExpression)
54033=DefaultASTVisitor:endVisit(TextElement)
54034=DefaultASTVisitor:visit(FieldDeclaration)
54035=DefaultASTVisitor:endVisit(BlockComment)
54036=DefaultASTVisitor:visit(SimpleName)
54037=DefaultASTVisitor:endVisit(TagElement)
54038=DefaultASTVisitor:visit(PostfixExpression)
54039=DefaultASTVisitor:visit(SuperFieldAccess)
54040=DefaultASTVisitor:visit(TextElement)
54041=DefaultASTVisitor:endVisit(EnumDeclaration)
54042=DefaultASTVisitor:visit(Block)
54043=DefaultASTVisitor:visit(ArrayAccess)
54044=DefaultASTVisitor:endVisit(VariableDeclarationStatement)
54045=DefaultASTVisitor:visit(ImportDeclaration)
54046=DefaultASTVisitor:visit(MemberRef)
54047=DefaultASTVisitor:visit(InstanceofExpression)
54048=DefaultASTVisitor:endVisit(ConditionalExpression)
54049=DefaultASTVisitor:visit(Javadoc)
54050=DefaultASTVisitor:visit(EnhancedForStatement)
54051=DefaultASTVisitor:visit(PrimitiveType)
54052=DefaultASTVisitor:visit(ExpressionMethodReference)
54053=DefaultASTVisitor:endVisit(CreationReference)
54054=DefaultASTVisitor:endVisit(PrimitiveType)
54055=DefaultASTVisitor:endVisit(TryStatement)
54056=DefaultASTVisitor:endVisit(LabeledStatement)
54057=DefaultASTVisitor:endVisit(ClassInstanceCreation)
54058=DefaultASTVisitor:visit(MemberValuePair)
54059=DefaultASTVisitor:visit(BooleanLiteral)
54060=DefaultASTVisitor:endVisit(IfStatement)
54061=DefaultASTVisitor:endVisit(ReturnStatement)
54062=DefaultASTVisitor:endVisit(DoStatement)
54063=DefaultASTVisitor:endVisit(VariableDeclarationExpression)
54064=DefaultASTVisitor:visit(NameQualifiedType)
54065=DefaultASTVisitor:endVisit(UnionType)
54066=DefaultASTVisitor:endVisit(ContinueStatement)
54067=DefaultASTVisitor:visit(TryStatement)
54068=DefaultASTVisitor:visit(ForStatement)
54069=DefaultASTVisitor:endVisit(SuperConstructorInvocation)
54070=DefaultASTVisitor:endVisit(Assignment)
54071=DefaultASTVisitor:visit(DoStatement)
54072=DefaultASTVisitor:endVisit(AnnotationTypeMemberDeclaration)
54073=DefaultASTVisitor:visit(VariableDeclarationStatement)
54074=DefaultASTVisitor:visit(AnnotationTypeMemberDeclaration)
54075=DefaultASTVisitor:visit(SwitchCase)
54076=DefaultASTVisitor:visit(ConstructorInvocation)
54077=DefaultASTVisitor:endVisit(SimpleName)
54078=DefaultASTVisitor:endVisit(CompilationUnit)
54079=DefaultASTVisitor:visit(SuperMethodReference)
54080=DefaultASTVisitor:endVisit(FieldAccess)
54081=DefaultASTVisitor:visit(IfStatement)
54082=DefaultASTVisitor:endVisit(PackageDeclaration)
54083=DefaultASTVisitor:endVisit(Block)
54084=DefaultASTVisitor:endVisitNode(ASTNode)
54085=DefaultASTVisitor:visit(MethodRefParameter)
54086=DefaultASTVisitor:visit(EnumConstantDeclaration)
54087=DefaultASTVisitor:visit(FieldAccess)
54088=DefaultASTVisitor:visit(LabeledStatement)
54089=DefaultASTVisitor:endVisit(Modifier)
54090=DefaultASTVisitor:visit(CatchClause)
54091=DefaultASTVisitor:visit(Modifier)
54092=DefaultASTVisitor:endVisit(MethodRefParameter)
54093=DefaultASTVisitor:endVisit(EnumConstantDeclaration)
54094=DefaultASTVisitor:visit(TypeMethodReference)
54095=DefaultASTVisitor:endVisit(SynchronizedStatement)
54096=DefaultASTVisitor:visit(SuperConstructorInvocation)
54097=DefaultASTVisitor:visit(PackageDeclaration)
54098=DefaultASTVisitor:visit(ThrowStatement)
54099=DefaultASTVisitor:endVisit(AssertStatement)
54100=DefaultASTVisitor:visit(MethodDeclaration)
54101=DefaultASTVisitor:endVisit(TypeLiteral)
54102=DefaultASTVisitor:endVisit(QualifiedName)
54103=DefaultASTVisitor:visit(VariableDeclarationExpression)
54104=DefaultASTVisitor:visit(MarkerAnnotation)
54105=DefaultASTVisitor:endVisit(SwitchCase)
54106=DefaultASTVisitor:endVisit(SimpleType)
54107=DefaultASTVisitor:visit(ParameterizedType)
54108=DefaultASTVisitor:endVisit(TypeMethodReference)
54109=DefaultASTVisitor:endVisit(MarkerAnnotation)
54110=DefaultASTVisitor:endVisit(PostfixExpression)
54111=DefaultASTVisitor:visit(PrefixExpression)
54112=DefaultASTVisitor:visit(CreationReference)
54113=DefaultASTVisitor:visit(Assignment)
54114=DefaultASTVisitor:endVisit(InfixExpression)
54115=DefaultASTVisitor:visit(SwitchStatement)
54116=DefaultASTVisitor:endVisit(TypeParameter)
54117=DefaultASTVisitor:visitNode(ASTNode)
54118=DefaultASTVisitor:visit(UnionType)
54119=DefaultASTVisitor:endVisit(ImportDeclaration)
54120=ASTParserTest:ASTParserTest(String, int)
54121=ASTParserTest:tearDown()
54122=ASTParserTest:getName()
54123=ASTParserTest:setUp()
54124=ASTParserTest:testKConstants()
54125=ASTParserTest:testSetting()
54126=ASTParserTest:suite()
54127=ParameterizedGenericMethodBinding:substitute(TypeVariableBinding)
54128=ParameterizedGenericMethodBinding:inferFromExpectedType(Scope, InferenceContext)
54129=ParameterizedGenericMethodBinding:ParameterizedGenericMethodBinding(MethodBinding, TypeBinding[], LookupEnvironment, boolean, boolean)
54130=ParameterizedGenericMethodBinding:hasSubstitutedReturnType()
54131=ParameterizedGenericMethodBinding:LingeringTypeVariableEliminator:isRawSubstitution()
54132=ParameterizedGenericMethodBinding:LingeringTypeVariableEliminator:substitute(TypeVariableBinding)
54133=ParameterizedGenericMethodBinding:getErasure18_5_2(TypeBinding, LookupEnvironment, boolean)
54134=ParameterizedGenericMethodBinding:isRawSubstitution()
54135=ParameterizedGenericMethodBinding:environment()
54136=ParameterizedGenericMethodBinding:computeUniqueKey(boolean)
54137=ParameterizedGenericMethodBinding:ParameterizedGenericMethodBinding(MethodBinding, RawTypeBinding, LookupEnvironment)
54138=ParameterizedGenericMethodBinding:resolveSubstituteConstraints(Scope, TypeVariableBinding[], InferenceContext, boolean)
54139=ParameterizedGenericMethodBinding:computeCompatibleMethod18(MethodBinding, TypeBinding[], Scope, InvocationSite)
54140=ParameterizedGenericMethodBinding:computeCompatibleMethod(MethodBinding, TypeBinding[], Scope, InvocationSite)
54141=ParameterizedGenericMethodBinding:boundCheck18(Scope, TypeBinding[], InvocationSite)
54142=ParameterizedGenericMethodBinding:LingeringTypeVariableEliminator:LingeringTypeVariableEliminator(TypeVariableBinding[], TypeBinding[], Scope)
54143=ParameterizedGenericMethodBinding:tiebreakMethod()
54144=ParameterizedGenericMethodBinding:genericMethod()
54145=ParameterizedGenericMethodBinding:inferFromArgumentTypes(Scope, MethodBinding, TypeBinding[], TypeBinding[], InferenceContext)
54146=ParameterizedGenericMethodBinding:hasSubstitutedParameters()
54147=ParameterizedGenericMethodBinding:LingeringTypeVariableEliminator:environment()
54148=ParameterizedGenericMethodBinding:isParameterizedGeneric()
54149=Bug493837Proc:process(Set<? extends TypeElement>, RoundEnvironment)
54150=IBinaryMethod:isClinit()
54151=IBinaryMethod:getExceptionTypeNames()
54152=IBinaryMethod:getGenericSignature()
54153=IBinaryMethod:getMethodDescriptor()
54154=NodeEventHandler:preAddChildEvent(ASTNode, ASTNode, StructuralPropertyDescriptor)
54155=NodeEventHandler:preValueChangeEvent(ASTNode, SimplePropertyDescriptor)
54156=NodeEventHandler:NodeEventHandler()
54157=NodeEventHandler:postValueChangeEvent(ASTNode, SimplePropertyDescriptor)
54158=NodeEventHandler:postRemoveChildEvent(ASTNode, ASTNode, StructuralPropertyDescriptor)
54159=NodeEventHandler:preCloneNodeEvent(ASTNode)
54160=NodeEventHandler:postAddChildEvent(ASTNode, ASTNode, StructuralPropertyDescriptor)
54161=NodeEventHandler:postCloneNodeEvent(ASTNode, ASTNode)
54162=NodeEventHandler:postReplaceChildEvent(ASTNode, ASTNode, ASTNode, StructuralPropertyDescriptor)
54163=NodeEventHandler:preReplaceChildEvent(ASTNode, ASTNode, ASTNode, StructuralPropertyDescriptor)
54164=NodeEventHandler:preRemoveChildEvent(ASTNode, ASTNode, StructuralPropertyDescriptor)
54165=TypeAnnotationInfo:getTypePath()
54166=TypeAnnotationInfo:equals(Object)
54167=TypeAnnotationInfo:initialize()
54168=TypeAnnotationInfo:TypeAnnotationInfo(byte[], int[], int)
54169=TypeAnnotationInfo:getThrowsTypeIndex()
54170=TypeAnnotationInfo:reset()
54171=TypeAnnotationInfo:toString()
54172=TypeAnnotationInfo:TypeAnnotationInfo(byte[], int[], int, boolean, boolean)
54173=TypeAnnotationInfo:getSupertypeIndex()
54174=TypeAnnotationInfo:getTypeParameterIndex()
54175=TypeAnnotationInfo:getMethodFormalParameterIndex()
54176=TypeAnnotationInfo:getAnnotation()
54177=TypeAnnotationInfo:getBoundIndex()
54178=TypeAnnotationInfo:hashCode()
54179=TypeAnnotationInfo:getTargetType()
54180=FloatConstant:typeID()
54181=FloatConstant:byteValue()
54182=FloatConstant:intValue()
54183=FloatConstant:stringValue()
54184=FloatConstant:charValue()
54185=FloatConstant:FloatConstant(float)
54186=FloatConstant:floatValue()
54187=FloatConstant:doubleValue()
54188=FloatConstant:toString()
54189=FloatConstant:longValue()
54190=FloatConstant:shortValue()
54191=E:foo1(int)
54192=E:foo1()
54193=Example:foo()
54194=X:main(String[])
54195=Test:foo()
54196=Initializer:clone0(AST)
54197=Initializer:internalGetSetIntProperty(SimplePropertyDescriptor, boolean, int)
54198=Initializer:internalJavadocProperty()
54199=Initializer:internalModifiers2Property()
54200=Initializer:accept0(ASTVisitor)
54201=Initializer:Initializer(AST)
54202=Initializer:getNodeType0()
54203=Initializer:memSize()
54204=Initializer:subtreeMatch0(ASTMatcher, Object)
54205=Initializer:propertyDescriptors(int)
54206=Initializer:treeSize()
54207=Initializer:internalModifiersProperty()
54208=Initializer:getBody()
54209=Initializer:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
54210=Initializer:internalStructuralPropertiesForType(int)
54211=Initializer:setBody(Block)
54212=Initializer:internalGetChildListProperty(ChildListPropertyDescriptor)
54213=ArrayQualifiedTypeReference:ArrayQualifiedTypeReference(char[][], int, long[])
54214=ArrayQualifiedTypeReference:traverse(ASTVisitor, BlockScope)
54215=ArrayQualifiedTypeReference:getParameterizedTypeName()
54216=ArrayQualifiedTypeReference:printExpression(int, StringBuffer)
54217=ArrayQualifiedTypeReference:getTypeBinding(Scope)
54218=ArrayQualifiedTypeReference:traverse(ASTVisitor, ClassScope)
54219=ArrayQualifiedTypeReference:dimensions()
54220=A:foo(int)
54221=Example:foo()
54222=Visitors:AnnotationVisitor:reset()
54223=Visitors:AnnotatedNodeVisitor:visit(AnnotationTypeMemberDeclaration)
54224=Visitors:AnnotatedNodeVisitor:visit(org.eclipse.jdt.core.dom.AnnotationTypeDeclaration)
54225=Visitors:EndingOffsetFinder:getEndingOffset(int)
54226=Visitors:AnnotationVisitor:AnnotationVisitor(List<Annotation>)
54227=Visitors:AnnotationVisitor:visit(Block)
54228=Visitors:EndingOffsetFinder:preVisit(ASTNode)
54229=Visitors:DeclarationFinder:getAnnotatedNode()
54230=Visitors:DeclarationFinder:visit(Block)
54231=Visitors:AnnotatedNodeVisitor:AnnotatedNodeVisitor(Map<ASTNode, List<Annotation>>)
54232=Visitors:DeclarationFinder:internalVisit(ASTNode)
54233=Visitors:DeclarationFinder:DeclarationFinder(Annotation)
54234=Visitors:EndingOffsetFinder:EndingOffsetFinder(int[])
54235=Visitors:AnnotationVisitor:visit(MarkerAnnotation)
54236=Visitors:AnnotatedNodeVisitor:visit(SingleVariableDeclaration)
54237=Visitors:AnnotatedNodeVisitor:visitBodyDeclaration(BodyDeclaration)
54238=Visitors:AnnotatedNodeVisitor:visit(org.eclipse.jdt.core.dom.EnumConstantDeclaration)
54239=Visitors:AnnotationVisitor:visit(ForStatement)
54240=Visitors:DeclarationFinder:visit(MarkerAnnotation)
54241=Visitors:AnnotatedNodeVisitor:visit(Block)
54242=Visitors:AnnotatedNodeVisitor:visit(MarkerAnnotation)
54243=Visitors:DeclarationFinder:visit(SingleMemberAnnotation)
54244=Visitors:DeclarationFinder:visit(EnumDeclaration)
54245=Visitors:DeclarationFinder:visit(AnnotationTypeDeclaration)
54246=Visitors:DeclarationFinder:visit(NormalAnnotation)
54247=Visitors:AnnotatedNodeVisitor:visit(SingleMemberAnnotation)
54248=Visitors:DeclarationFinder:visit(TypeDeclaration)
54249=Visitors:AnnotatedNodeVisitor:visit(org.eclipse.jdt.core.dom.TypeDeclaration)
54250=Visitors:AnnotationVisitor:visit(DoStatement)
54251=Visitors:AnnotatedNodeVisitor:visit(MethodDeclaration)
54252=Visitors:DeclarationFinder:visit(SingleVariableDeclaration)
54253=Visitors:AnnotationVisitor:visit(IfStatement)
54254=Visitors:AnnotationVisitor:visit(NormalAnnotation)
54255=Visitors:DeclarationFinder:visit(MethodDeclaration)
54256=Visitors:AnnotatedNodeVisitor:visit(org.eclipse.jdt.core.dom.PackageDeclaration)
54257=Visitors:AnnotationVisitor:visit(SingleMemberAnnotation)
54258=Visitors:DeclarationFinder:visit(AnnotationTypeMemberDeclaration)
54259=Visitors:AnnotatedNodeVisitor:visit(org.eclipse.jdt.core.dom.EnumDeclaration)
54260=Visitors:AnnotatedNodeVisitor:visit(org.eclipse.jdt.core.dom.FieldDeclaration)
54261=Visitors:DeclarationFinder:visit(EnumConstantDeclaration)
54262=Visitors:AnnotatedNodeVisitor:visit(NormalAnnotation)
54263=Visitors:AnnotationVisitor:visit(TryStatement)
54264=Visitors:DeclarationFinder:visit(FieldDeclaration)
54265=CompletionOnPackageReference:CompletionOnPackageReference(char[][], long[])
54266=CompletionOnPackageReference:print(int, StringBuffer, boolean)
54267=ContinueStatement:traverse(ASTVisitor, BlockScope)
54268=ContinueStatement:completesByContinue()
54269=ContinueStatement:doesNotCompleteNormally()
54270=ContinueStatement:printStatement(int, StringBuffer)
54271=ContinueStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
54272=ContinueStatement:ContinueStatement(char[], int, int)
54273=ReconcilerTests:testBug60689()
54274=ReconcilerTests:testBroadcastAST1()
54275=ReconcilerTests:testAnnotations2()
54276=ReconcilerTests:testBug410207d()
54277=ReconcilerTests:testAddImports()
54278=ReconcilerTests:testAddMethod1()
54279=ReconcilerTests:testMethodWithError04()
54280=ReconcilerTests:assertNoProblem(char[], ICompilationUnit)
54281=ReconcilerTests:testIncludePartOfAnotherProject1()
54282=ReconcilerTests:testBroadcastAST3()
54283=ReconcilerTests:testExcludePartOfAnotherProject2()
54284=ReconcilerTests:testRenameMethod1()
54285=ReconcilerTests:testIgnoreIfBetterNonAccessibleRule3()
54286=ReconcilerTests:ReconcileParticipant2:reconcile(ReconcileContext)
54287=ReconcilerTests:testBug410207b()
54288=ReconcilerTests:testCancel()
54289=ReconcilerTests:assertProblemsInclude(String, String)
54290=ReconcilerTests:testMethodWithError06()
54291=ReconcilerTests:testCategories1()
54292=ReconcilerTests:testBug374176()
54293=ReconcilerTests:testBug36032c()
54294=ReconcilerTests:testIgnoreIfBetterNonAccessibleRule1()
54295=ReconcilerTests:tearDown()
54296=ReconcilerTests:setUp()
54297=ReconcilerTests:ReconcileParticipant:isActive(IJavaProject)
54298=ReconcilerTests:testAddDuplicateMember()
54299=ReconcilerTests:testReconcileParticipant08()
54300=ReconcilerTests:testCategories3()
54301=ReconcilerTests:testMethodWithError08()
54302=ReconcilerTests:testAccessRestriction3()
54303=ReconcilerTests:testBug36032a()
54304=ReconcilerTests:testAnnotations4()
54305=ReconcilerTests:testGenericAPIUsageFromA14Project3()
54306=ReconcilerTests:testReconcileParticipant06()
54307=ReconcilerTests:testSuppressWarnings2()
54308=ReconcilerTests:ReconcileParticipant:ReconcileParticipant()
54309=ReconcilerTests:testAccessRestriction5()
54310=ReconcilerTests:testTypeWithDollarName3()
54311=ReconcilerTests:ReconcileParticipant:reconcile(ReconcileContext)
54312=ReconcilerTests:testGenericAPIUsageFromA14Project5()
54313=ReconcilerTests:testIgnoreMethodBodies3()
54314=ReconcilerTests:testBug374176b()
54315=ReconcilerTests:testBug118823b()
54316=ReconcilerTests:testReconcileParticipant04()
54317=ReconcilerTests:testSuppressWarnings4()
54318=ReconcilerTests:testDeleteMethod1()
54319=ReconcilerTests:testCloseWorkingCopy()
54320=ReconcilerTests:test1001()
54321=ReconcilerTests:testExternal3()
54322=ReconcilerTests:testGenericAPIUsageFromA14Project7()
54323=ReconcilerTests:testIgnoreMethodBodies1()
54324=ReconcilerTests:testReconcileParticipant02()
54325=ReconcilerTests:testTypeParameterWithBound()
54326=ReconcilerTests:setUp15WorkingCopy(String, WorkingCopyOwner)
54327=ReconcilerTests:testBroadcastAST5()
54328=ReconcilerTests:testGenericAPIUsageFromA14Project9()
54329=ReconcilerTests:testSecondaryTypeDeletion()
54330=ReconcilerTests:testNoChanges2()
54331=ReconcilerTests:testChangeMethodTypeParameters()
54332=ReconcilerTests:assertProblems(String, String)
54333=ReconcilerTests:testMoveMember()
54334=ReconcilerTests:testReconcileParticipant11()
54335=ReconcilerTests:testBufferClosed1()
54336=ReconcilerTests:testRenameClasspathFile()
54337=ReconcilerTests:testMethodWithError11()
54338=ReconcilerTests:addClasspathEntries(IClasspathEntry[], boolean)
54339=ReconcilerTests:setUpWorkingCopy(String, String)
54340=ReconcilerTests:testChangeSourceLevel2()
54341=ReconcilerTests:ReconcileParticipant2:ReconcileParticipant2()
54342=ReconcilerTests:testMethodWithError02()
54343=ReconcilerTests:testExternal1()
54344=ReconcilerTests:setWorkingCopyContents(String)
54345=ReconcilerTests:testGenericAPIUsageFromA14Project()
54346=ReconcilerTests:testMethodWithError13()
54347=ReconcilerTests:testBug114338()
54348=ReconcilerTests:testMethodWithError03()
54349=ReconcilerTests:testChangeTypeTypeParameters()
54350=ReconcilerTests:testMethodWithError14()
54351=ReconcilerTests:testBroadcastAST2()
54352=ReconcilerTests:testExcludePartOfAnotherProject1()
54353=ReconcilerTests:testAnnotations3()
54354=ReconcilerTests:testBug410207c()
54355=ReconcilerTests:ReconcilerTests(String)
54356=ReconcilerTests:testFallthroughDiagnosis()
54357=ReconcilerTests:testReconcileParticipant09()
54358=ReconcilerTests:testMethodWithError05()
54359=ReconcilerTests:testAddFieldAndConstructor()
54360=ReconcilerTests:ReconcileParticipant3:isActive(IJavaProject)
54361=ReconcilerTests:testBroadcastAST4()
54362=ReconcilerTests:testIgnoreIfBetterNonAccessibleRule4()
54363=ReconcilerTests:testAnnotations1()
54364=ReconcilerTests:testRenameWithSyntaxError()
54365=ReconcilerTests:testVarargs()
54366=ReconcilerTests:testBug410207a()
54367=ReconcilerTests:testReconcileParticipant07()
54368=ReconcilerTests:testAddPartialMethod1and2()
54369=ReconcilerTests:testCategories2()
54370=ReconcilerTests:testMethodWithError07()
54371=ReconcilerTests:ReconcileParticipant3:ReconcileParticipant3()
54372=ReconcilerTests:testAccessRestriction2()
54373=ReconcilerTests:testIncludePartOfAnotherProject2()
54374=ReconcilerTests:testIgnoreIfBetterNonAccessibleRule2()
54375=ReconcilerTests:testTypeParameterStartingWithDollar()
54376=ReconcilerTests:testTwoProjectsWithDifferentCompliances()
54377=ReconcilerTests:testChangeExternalJar()
54378=ReconcilerTests:testSuppressWarnings1()
54379=ReconcilerTests:testReconcileParticipant05()
54380=ReconcilerTests:testCategories4()
54381=ReconcilerTests:testMethodWithError09()
54382=ReconcilerTests:testBug485092()
54383=ReconcilerTests:testBufferOpenAfterReconcile()
54384=ReconcilerTests:testAccessRestriction4()
54385=ReconcilerTests:testMethodWithError01a()
54386=ReconcilerTests:testAnnotations5()
54387=ReconcilerTests:testBug36032b()
54388=ReconcilerTests:testGenericAPIUsageFromA14Project2()
54389=ReconcilerTests:tearDownSuite()
54390=ReconcilerTests:suite()
54391=ReconcilerTests:testBug118823c()
54392=ReconcilerTests:testChangeClassFolder()
54393=ReconcilerTests:testReconcileParticipant03()
54394=ReconcilerTests:testSuppressWarnings3()
54395=ReconcilerTests:testMakeConsistentFoolingReconciler()
54396=ReconcilerTests:testChangeMethodVisibility()
54397=ReconcilerTests:testAddPartialMethod1()
54398=ReconcilerTests:testBug118823()
54399=ReconcilerTests:testTypeWithDollarName2()
54400=ReconcilerTests:testGenericAPIUsageFromA14Project4()
54401=ReconcilerTests:testIgnoreMethodBodies4()
54402=ReconcilerTests:testConvertPrimitiveTypeArrayTypeArgument()
54403=ReconcilerTests:testChangeSourceLevel1()
54404=ReconcilerTests:testConstantReference()
54405=ReconcilerTests:testReconcileParticipant01()
54406=ReconcilerTests:testDeleteTwoMethods()
54407=ReconcilerTests:testReconcileParticipant12()
54408=ReconcilerTests:setUp15WorkingCopy()
54409=ReconcilerTests:test1002()
54410=ReconcilerTests:testJsr14TargetProjectWith14JRE()
54411=ReconcilerTests:testBufferClosed2()
54412=ReconcilerTests:testAccessRestriction()
54413=ReconcilerTests:testGenericAPIUsageFromA14Project6()
54414=ReconcilerTests:testIgnoreMethodBodies2()
54415=ReconcilerTests:removeClasspathEntries(IClasspathEntry[])
54416=ReconcilerTests:ReconcileParticipant3:reconcile(ReconcileContext)
54417=ReconcilerTests:testNoChanges1()
54418=ReconcilerTests:testGrowImports()
54419=ReconcilerTests:testUnhandledException()
54420=ReconcilerTests:testBug440592()
54421=ReconcilerTests:testTypeWithDollarName()
54422=ReconcilerTests:testReconcileParticipant10()
54423=ReconcilerTests:test14ProjectWith15JRE()
54424=ReconcilerTests:testMethodWithError10()
54425=ReconcilerTests:testGenericAPIUsageFromA14Project8()
54426=ReconcilerTests:CancelingProblemRequestor:acceptProblem(IProblem)
54427=ReconcilerTests:setUpWorkingCopy(String, String, WorkingCopyOwner)
54428=ReconcilerTests:testNoChanges3()
54429=ReconcilerTests:testMethodWithError01()
54430=ReconcilerTests:setUpSuite()
54431=ReconcilerTests:testExternal2()
54432=ReconcilerTests:testMethodWithError12()
54433=ReconcilerTests:testRawUsage()
54434=ReconcilerTests:ReconcileParticipant2:isActive(IJavaProject)
54435=ReconcilerTests:testChangeInternalJar()
54436=MethodReference:resolveMethodBinding()
54437=MethodReference:internalTypeArgumentsFactory(Class)
54438=MethodReference:MethodReference(AST)
54439=MethodReference:internalTypeArgumentsProperty()
54440=MethodReference:typeArguments()
54441=MethodReference:getTypeArgumentsProperty()
54442=X05:foo(int, int)
54443=AbortMethod:AbortMethod(CompilationResult, CategorizedProblem)
54444=AnnotationTypeDeclaration:getMethods()
54445=Foo:foo1()
54446=Foo:foo3()
54447=Foo:foo2()
54448=IdeNonSourceOutputStream:closeInputStream(InputStream)
54449=IdeNonSourceOutputStream:IdeNonSourceOutputStream(IdeProcessingEnvImpl, IFile, Collection<IFile>)
54450=IdeNonSourceOutputStream:saveToDisk(InputStream, boolean)
54451=IdeNonSourceOutputStream:close()
54452=X03:foo()
54453=Foo:Foo()
54454=Foo:blowup()
54455=LambdaMethod:getReturnType()
54456=LambdaMethod:hashCode()
54457=LambdaMethod:closing(Object)
54458=LambdaMethod:getSignature()
54459=LambdaMethod:getKey()
54460=LambdaMethod:isResolved()
54461=LambdaMethod:equals(Object)
54462=LambdaMethod:getHandleMemento(StringBuffer)
54463=LambdaMethod:LambdaMethod(JavaElement, String, String, int, String[], String[], String, SourceMethodElementInfo)
54464=LambdaMethod:resolved(Binding)
54465=LambdaMethod:getHandleMementoDelimiter()
54466=LambdaMethod:getElementInfo(IProgressMonitor)
54467=LambdaMethod:getHandleMemento(StringBuffer, boolean)
54468=LambdaMethod:isLambdaMethod()
54469=X:foo()
54470=X:X(String)
54471=Test:main(String[])
54472=IEnclosingMethodAttribute:getEnclosingClass()
54473=IEnclosingMethodAttribute:getMethodDescriptorIndex()
54474=IEnclosingMethodAttribute:getMethodName()
54475=IEnclosingMethodAttribute:getMethodNameAndTypeIndex()
54476=IEnclosingMethodAttribute:getMethodNameIndex()
54477=IEnclosingMethodAttribute:getMethodDescriptor()
54478=IEnclosingMethodAttribute:getEnclosingClassIndex()
54479=AnnotationElementDeclarationImpl:AnnotationElementDeclarationImpl(IMethodBinding, BaseProcessorEnv)
54480=AnnotationElementDeclarationImpl:getDefaultValue()
54481=AnnotationElementDeclarationImpl:getParameters()
54482=AnnotationElementDeclarationImpl:getDeclaringType()
54483=AnnotationElementDeclarationImpl:kind()
54484=AnnotationElementDeclarationImpl:getAstNodeForDefault()
54485=AnnotationElementDeclarationImpl:accept(DeclarationVisitor)
54486=IRestrictedAccessTypeRequestor:acceptType(int, char[], char[], char[][], String, AccessRestriction)
54487=TestA:foo5()
54488=TestA:foo3()
54489=TestA:foo1()
54490=TestA:foo4()
54491=TestA:foo2()
54492=ModifyingResourceTests:createExternalFolder(String)
54493=ModifyingResourceTests:moveFile(String, String)
54494=ModifyingResourceTests:getFolder(String)
54495=ModifyingResourceTests:createFile(String, byte[])
54496=ModifyingResourceTests:createFile(String, String, String)
54497=ModifyingResourceTests:ModifyingResourceTests(String)
54498=ModifyingResourceTests:createClasspath(String[], boolean, boolean)
54499=ModifyingResourceTests:assertElementDescendants(String, String, IJavaElement)
54500=ModifyingResourceTests:createExternalFile(String, String)
54501=ModifyingResourceTests:getPackageFragmentRoot(String)
54502=ModifyingResourceTests:deleteExternalResource(String)
54503=ModifyingResourceTests:createFile(String, InputStream)
54504=ModifyingResourceTests:ModifyingResourceTests(String, int)
54505=ModifyingResourceTests:createFile(String, String)
54506=ModifyingResourceTests:expandAll(IJavaElement, int, StringBuffer)
54507=ModifyingResourceTests:deleteFile(String)
54508=ModifyingResourceTests:expandAll(IJavaElement)
54509=ModifyingResourceTests:deleteExternalFile(String)
54510=ModifyingResourceTests:createFolder(String)
54511=ModifyingResourceTests:getPackage(String)
54512=ModifyingResourceTests:assertStatus(String, IStatus)
54513=ModifyingResourceTests:deleteFolder(String)
54514=ModifyingResourceTests:assertStatus(String, String, IStatus)
54515=ModifyingResourceTests:generateClassFile(String, String)
54516=ModifyingResourceTests:editFile(String, String)
54517=ModifyingResourceTests:renameProject(String, String)
54518=ModifyingResourceTests:createFolder(File, String)
54519=ModifyingResourceTests:createSourceEntry(String, String, String)
54520=ModifyingResourceTests:swapFiles(String, String)
54521=ModifyingResourceTests:createClassFile(String, String, String)
54522=ModifyingResourceTests:createClasspath(String, String[])
54523=ModifyingResourceTests:getClassFile(String)
54524=ModifyingResourceTests:moveFolder(String, String)
54525=A:launch()
54526=NLSLine:size()
54527=NLSLine:set(int, StringLiteral)
54528=NLSLine:add(StringLiteral)
54529=NLSLine:get(int)
54530=NLSLine:exists(int)
54531=NLSLine:iterator()
54532=NLSLine:NLSLine()
54533=NLSLine:toString()
54534=FormatTest2:testMethod()
54535=FormatTest2:AccountAccessGroupBean:AccountAccessGroupBean(String, String, String, String)
54536=VariableTest:testSeveralVariableInstallations()
54537=VariableTest:testAllKindOfValues()
54538=VariableTest:testCodeSnippetVarRetrieval()
54539=VariableTest:testCodeSnippetVarAssign()
54540=VariableTest:suite()
54541=VariableTest:testImports()
54542=VariableTest:testClass()
54543=VariableTest:VariableTest(String)
54544=Test:main(String[])
54545=CompatibilityRulesTests:test039()
54546=CompatibilityRulesTests:test028()
54547=CompatibilityRulesTests:test015()
54548=CompatibilityRulesTests:test004()
54549=CompatibilityRulesTests:test037()
54550=CompatibilityRulesTests:test026()
54551=CompatibilityRulesTests:test013()
54552=CompatibilityRulesTests:test002()
54553=CompatibilityRulesTests:test035()
54554=CompatibilityRulesTests:test024()
54555=CompatibilityRulesTests:test022()
54556=CompatibilityRulesTests:test011()
54557=CompatibilityRulesTests:test044()
54558=CompatibilityRulesTests:test033()
54559=CompatibilityRulesTests:test020()
54560=CompatibilityRulesTests:test041()
54561=CompatibilityRulesTests:tearDownSuite()
54562=CompatibilityRulesTests:test030()
54563=CompatibilityRulesTests:setUpSuite()
54564=CompatibilityRulesTests:test019()
54565=CompatibilityRulesTests:test008()
54566=CompatibilityRulesTests:test017()
54567=CompatibilityRulesTests:test006()
54568=CompatibilityRulesTests:test016()
54569=CompatibilityRulesTests:test005()
54570=CompatibilityRulesTests:test038()
54571=CompatibilityRulesTests:test027()
54572=CompatibilityRulesTests:test014()
54573=CompatibilityRulesTests:test003()
54574=CompatibilityRulesTests:test036()
54575=CompatibilityRulesTests:test025()
54576=CompatibilityRulesTests:test012()
54577=CompatibilityRulesTests:test001()
54578=CompatibilityRulesTests:test034()
54579=CompatibilityRulesTests:suite()
54580=CompatibilityRulesTests:test023()
54581=CompatibilityRulesTests:test021()
54582=CompatibilityRulesTests:test045()
54583=CompatibilityRulesTests:CompatibilityRulesTests(String)
54584=CompatibilityRulesTests:test010()
54585=CompatibilityRulesTests:test043()
54586=CompatibilityRulesTests:test032()
54587=CompatibilityRulesTests:test042()
54588=CompatibilityRulesTests:test031()
54589=CompatibilityRulesTests:test040()
54590=CompatibilityRulesTests:test009()
54591=CompatibilityRulesTests:test018()
54592=CompatibilityRulesTests:test007()
54593=CompatibilityRulesTests:test029()
54594=SecondGenAnnotationProcessorFactory:SecondGenAnnotationProcessorFactory()
54595=SecondGenAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
54596=TestA:foo()
54597=Logo:loadImage(String)
54598=Logo:paintBackground(java.awt.Graphics)
54599=Logo:Logo()
54600=Logo:paint(Graphics)
54601=SelectionJavadoc:print(int, StringBuffer)
54602=SelectionJavadoc:internalResolve(Scope)
54603=SelectionJavadoc:resolve(ClassScope)
54604=SelectionJavadoc:SelectionJavadoc(int, int)
54605=SelectionJavadoc:resolve(MethodScope)
54606=TC47209:TC47209(String)
54607=TC47209:m47209(int)
54608=IntConstant:equals(Object)
54609=IntConstant:shortValue()
54610=IntConstant:IntConstant(int)
54611=IntConstant:byteValue()
54612=IntConstant:intValue()
54613=IntConstant:doubleValue()
54614=IntConstant:toString()
54615=IntConstant:typeID()
54616=IntConstant:longValue()
54617=IntConstant:hashCode()
54618=IntConstant:stringValue()
54619=IntConstant:fromValue(int)
54620=IntConstant:charValue()
54621=IntConstant:floatValue()
54622=TypeBound:TypeBound(InferenceVariable, TypeBinding, int, boolean)
54623=TypeBound:hashCode()
54624=TypeBound:isBound()
54625=TypeBound:TypeBound(InferenceVariable, TypeBinding, int)
54626=TypeBound:equals(Object)
54627=TypeBound:safeType(TypeBinding)
54628=TypeBound:toString()
54629=TypeBound:createBoundOrDependency(InferenceSubstitution, TypeBinding, InferenceVariable)
54630=A:foo()
54631=A:fooooooo()
54632=A:baz()
54633=Z:Z(int)
54634=Z:foo(int, String, X)
54635=Z:Z()
54636=ContinueStatement:accept0(ASTVisitor)
54637=ContinueStatement:propertyDescriptors(int)
54638=ContinueStatement:internalStructuralPropertiesForType(int)
54639=ContinueStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
54640=ContinueStatement:subtreeMatch0(ASTMatcher, Object)
54641=ContinueStatement:getLabel()
54642=ContinueStatement:clone0(AST)
54643=ContinueStatement:getNodeType0()
54644=ContinueStatement:ContinueStatement(AST)
54645=ContinueStatement:memSize()
54646=ContinueStatement:setLabel(SimpleName)
54647=ContinueStatement:treeSize()
54648=LongLiteral:computeValue(char[], int, int, int)
54649=LongLiteral:literalType(BlockScope)
54650=LongLiteral:convertToMinValue()
54651=LongLiteral:buildLongLiteral(char[], int, int)
54652=LongLiteral:traverse(ASTVisitor, BlockScope)
54653=LongLiteral:computeConstant()
54654=LongLiteral:LongLiteral(char[], char[], int, int)
54655=LongLiteral:generateCode(BlockScope, CodeStream, boolean)
54656=SwitchStatement:generateCodeForStringSwitch(BlockScope, CodeStream)
54657=SwitchStatement:printStatement(int, StringBuffer)
54658=SwitchStatement:resolve(BlockScope)
54659=SwitchStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
54660=SwitchStatement:reportDuplicateCase(CaseStatement, CaseStatement, int)
54661=SwitchStatement:branchChainTo(BranchLabel)
54662=SwitchStatement:doesNotCompleteNormally()
54663=SwitchStatement:generateCode(BlockScope, CodeStream)
54664=SwitchStatement:traverse(ASTVisitor, BlockScope)
54665=SwitchStatement:completesByContinue()
54666=Test:foo()
54667=RewriteEvent:isListRewrite()
54668=RewriteEvent:getChildren()
54669=RewriteEvent:getOriginalValue()
54670=RewriteEvent:getNewValue()
54671=RewriteEvent:getChangeKind()
54672=Example:foo(int, int, int, int, int, int)
54673=Example:foo()
54674=ClassFileReaderTest_1_4:test005()
54675=ClassFileReaderTest_1_4:test016()
54676=ClassFileReaderTest_1_4:test080()
54677=ClassFileReaderTest_1_4:test027()
54678=ClassFileReaderTest_1_4:test038()
54679=ClassFileReaderTest_1_4:test003()
54680=ClassFileReaderTest_1_4:test049()
54681=ClassFileReaderTest_1_4:test014()
54682=ClassFileReaderTest_1_4:test025()
54683=ClassFileReaderTest_1_4:test036()
54684=ClassFileReaderTest_1_4:test001()
54685=ClassFileReaderTest_1_4:test047()
54686=ClassFileReaderTest_1_4:test012()
54687=ClassFileReaderTest_1_4:test058()
54688=ClassFileReaderTest_1_4:test023()
54689=ClassFileReaderTest_1_4:test069()
54690=ClassFileReaderTest_1_4:test034()
54691=ClassFileReaderTest_1_4:test045()
54692=ClassFileReaderTest_1_4:test010()
54693=ClassFileReaderTest_1_4:test056()
54694=ClassFileReaderTest_1_4:test021()
54695=ClassFileReaderTest_1_4:test067()
54696=ClassFileReaderTest_1_4:test032()
54697=ClassFileReaderTest_1_4:test078()
54698=ClassFileReaderTest_1_4:test066()
54699=ClassFileReaderTest_1_4:test020()
54700=ClassFileReaderTest_1_4:test077()
54701=ClassFileReaderTest_1_4:test031()
54702=ClassFileReaderTest_1_4:test042()
54703=ClassFileReaderTest_1_4:test053()
54704=ClassFileReaderTest_1_4:test064()
54705=ClassFileReaderTest_1_4:test075()
54706=ClassFileReaderTest_1_4:test040()
54707=ClassFileReaderTest_1_4:test051()
54708=ClassFileReaderTest_1_4:test062()
54709=ClassFileReaderTest_1_4:test009()
54710=ClassFileReaderTest_1_4:test073()
54711=ClassFileReaderTest_1_4:test060()
54712=ClassFileReaderTest_1_4:test007()
54713=ClassFileReaderTest_1_4:test018()
54714=ClassFileReaderTest_1_4:test029()
54715=ClassFileReaderTest_1_4:test028()
54716=ClassFileReaderTest_1_4:test039()
54717=ClassFileReaderTest_1_4:test004()
54718=ClassFileReaderTest_1_4:test015()
54719=ClassFileReaderTest_1_4:test026()
54720=ClassFileReaderTest_1_4:suite()
54721=ClassFileReaderTest_1_4:test037()
54722=ClassFileReaderTest_1_4:test002()
54723=ClassFileReaderTest_1_4:test048()
54724=ClassFileReaderTest_1_4:test013()
54725=ClassFileReaderTest_1_4:test059()
54726=ClassFileReaderTest_1_4:test024()
54727=ClassFileReaderTest_1_4:testClass()
54728=ClassFileReaderTest_1_4:test035()
54729=ClassFileReaderTest_1_4:test046()
54730=ClassFileReaderTest_1_4:test011()
54731=ClassFileReaderTest_1_4:test057()
54732=ClassFileReaderTest_1_4:test022()
54733=ClassFileReaderTest_1_4:test068()
54734=ClassFileReaderTest_1_4:ClassFileReaderTest_1_4(String)
54735=ClassFileReaderTest_1_4:test033()
54736=ClassFileReaderTest_1_4:test079()
54737=ClassFileReaderTest_1_4:test044()
54738=ClassFileReaderTest_1_4:test055()
54739=ClassFileReaderTest_1_4:test043()
54740=ClassFileReaderTest_1_4:test054()
54741=ClassFileReaderTest_1_4:test065()
54742=ClassFileReaderTest_1_4:test076()
54743=ClassFileReaderTest_1_4:test030()
54744=ClassFileReaderTest_1_4:test041()
54745=ClassFileReaderTest_1_4:test052()
54746=ClassFileReaderTest_1_4:test063()
54747=ClassFileReaderTest_1_4:test074()
54748=ClassFileReaderTest_1_4:test050()
54749=ClassFileReaderTest_1_4:test061()
54750=ClassFileReaderTest_1_4:test008()
54751=ClassFileReaderTest_1_4:test072()
54752=ClassFileReaderTest_1_4:test019()
54753=ClassFileReaderTest_1_4:test006()
54754=ClassFileReaderTest_1_4:test017()
54755=Test:bar()
54756=Test:foo(int)
54757=TypeConflictingSimpleNameFinder:findConflictingSimpleNames(Set<String>, Set<String>, IProgressMonitor)
54758=TypeConflictingSimpleNameFinder:ConflictAccumulatingTypeRequestor:acceptType(int, char[], char[], char[][], String)
54759=TypeConflictingSimpleNameFinder:ConflictAccumulatingTypeRequestor:getNamesFoundInMultipleContainers()
54760=TypeConflictingSimpleNameFinder:ConflictAccumulatingTypeRequestor:buildContainerName(char[], char[][])
54761=TypeConflictingSimpleNameFinder:TypeConflictingSimpleNameFinder(IJavaProject, SearchEngine)
54762=TypeConflictingSimpleNameFinder:stringsToCharArrays(Collection<String>)
54763=TypeConflictingSimpleNameFinder:ConflictAccumulatingTypeRequestor:ConflictAccumulatingTypeRequestor()
54764=Test:main(String[])
54765=AMap:createAMap(String, String)
54766=B:B(M, N)
54767=AMethod:getMap(String, String)
54768=A:A(M, N)
54769=B:getMap(M, N)
54770=A:getMap(M, N)
54771=A:A()
54772=AMap:AMap(String, String)
54773=EvaluationContextWrapper:evaluateVariable(IGlobalVariable, ICodeSnippetRequestor, IProgressMonitor)
54774=EvaluationContextWrapper:getProblemFactory()
54775=EvaluationContextWrapper:getProject()
54776=EvaluationContextWrapper:newVariable(String, String, String)
54777=EvaluationContextWrapper:getBuildNameEnvironment()
54778=EvaluationContextWrapper:codeSelect(String, int, int)
54779=EvaluationContextWrapper:codeComplete(String, int, CompletionRequestor, IProgressMonitor)
54780=EvaluationContextWrapper:codeComplete(String, int, org.eclipse.jdt.core.ICodeCompletionRequestor)
54781=EvaluationContextWrapper:codeComplete(String, int, CompletionRequestor, WorkingCopyOwner, IProgressMonitor)
54782=EvaluationContextWrapper:codeComplete(String, int, ICompletionRequestor, WorkingCopyOwner)
54783=EvaluationContextWrapper:setPackageName(String)
54784=EvaluationContextWrapper:handleInstallException(InstallException)
54785=EvaluationContextWrapper:validateImports(ICodeSnippetRequestor)
54786=EvaluationContextWrapper:EvaluationContextWrapper(EvaluationContext, JavaProject)
54787=EvaluationContextWrapper:getInfrastructureEvaluationContext()
54788=EvaluationContextWrapper:getPackageName()
54789=EvaluationContextWrapper:setImports(String[])
54790=EvaluationContextWrapper:codeComplete(String, int, CompletionRequestor, WorkingCopyOwner)
54791=EvaluationContextWrapper:codeSelect(String, int, int, WorkingCopyOwner)
54792=EvaluationContextWrapper:evaluateCodeSnippet(String, String[], String[], int[], IType, boolean, boolean, ICodeSnippetRequestor, IProgressMonitor)
54793=EvaluationContextWrapper:getInfrastructureEvaluationRequestor(ICodeSnippetRequestor)
54794=EvaluationContextWrapper:getImports()
54795=EvaluationContextWrapper:codeComplete(String, int, ICompletionRequestor)
54796=EvaluationContextWrapper:getVarClassName()
54797=EvaluationContextWrapper:deleteVariable(IGlobalVariable)
54798=EvaluationContextWrapper:checkBuilderState()
54799=EvaluationContextWrapper:codeComplete(String, int, CompletionRequestor)
54800=EvaluationContextWrapper:evaluateCodeSnippet(String, ICodeSnippetRequestor, IProgressMonitor)
54801=EvaluationContextWrapper:allVariables()
54802=X05:foo(String)
54803=ASTConverter18Test:test399793e()
54804=ASTConverter18Test:testBug412726()
54805=ASTConverter18Test:test417017b()
54806=ASTConverter18Test:testBug425743()
54807=ASTConverter18Test:testBug460186()
54808=ASTConverter18Test:testBug417669()
54809=ASTConverter18Test:testBug403132()
54810=ASTConverter18Test:test399793a()
54811=ASTConverter18Test:testBug425741()
54812=ASTConverter18Test:test416559()
54813=ASTConverter18Test:test0006()
54814=ASTConverter18Test:test399793c()
54815=ASTConverter18Test:testBug420458()
54816=ASTConverter18Test:testBug418979_002()
54817=ASTConverter18Test:test0008()
54818=ASTConverter18Test:test406805a()
54819=ASTConverter18Test:testBug433879d()
54820=ASTConverter18Test:setUpSuite()
54821=ASTConverter18Test:test0001()
54822=ASTConverter18Test:testBug425601_001()
54823=ASTConverter18Test:testBug399791()
54824=ASTConverter18Test:testBug426459a()
54825=ASTConverter18Test:testExtendedDimensions()
54826=ASTConverter18Test:test0014()
54827=ASTConverter18Test:testBug459344_001()
54828=ASTConverter18Test:testBug424138_002()
54829=ASTConverter18Test:test0003()
54830=ASTConverter18Test:testBug404489b()
54831=ASTConverter18Test:testBug433879b()
54832=ASTConverter18Test:test399794()
54833=ASTConverter18Test:testBug403410()
54834=ASTConverter18Test:test0021()
54835=ASTConverter18Test:testBug416560_003()
54836=ASTConverter18Test:ASTConverter18Test(String)
54837=ASTConverter18Test:test0010()
54838=ASTConverter18Test:test417017e()
54839=ASTConverter18Test:tearDown()
54840=ASTConverter18Test:testBug416560_001()
54841=ASTConverter18Test:testBug414113()
54842=ASTConverter18Test:test0012()
54843=ASTConverter18Test:test406805()
54844=ASTConverter18Test:testBug418979_003()
54845=ASTConverter18Test:testBug433879()
54846=ASTConverter18Test:test417017c()
54847=ASTConverter18Test:test0009()
54848=ASTConverter18Test:testBug426459()
54849=ASTConverter18Test:test406805b()
54850=ASTConverter18Test:test429813a()
54851=ASTConverter18Test:testBug435348()
54852=ASTConverter18Test:test402674()
54853=ASTConverter18Test:testBug427357()
54854=ASTConverter18Test:test417017a()
54855=ASTConverter18Test:test428526()
54856=ASTConverter18Test:test406805d()
54857=ASTConverter18Test:testBug420660()
54858=ASTConverter18Test:testBug423872()
54859=ASTConverter18Test:test0005()
54860=ASTConverter18Test:test399793b()
54861=ASTConverter18Test:testBug418979_001()
54862=ASTConverter18Test:test0007()
54863=ASTConverter18Test:testBug440000_001()
54864=ASTConverter18Test:testBug432051()
54865=ASTConverter18Test:test399793d()
54866=ASTConverter18Test:test402665a()
54867=ASTConverter18Test:test423584()
54868=ASTConverter18Test:testBug447062()
54869=ASTConverter18Test:testBug432175()
54870=ASTConverter18Test:test0013()
54871=ASTConverter18Test:testBug433879c()
54872=ASTConverter18Test:testBug406505()
54873=ASTConverter18Test:testBug424138_003()
54874=ASTConverter18Test:test0002()
54875=ASTConverter18Test:testBug404489a()
54876=ASTConverter18Test:testBug426977()
54877=ASTConverter18Test:testBug399792()
54878=ASTConverter18Test:testBug443232()
54879=ASTConverter18Test:testBug420660a()
54880=ASTConverter18Test:test0015()
54881=ASTConverter18Test:testBug433879a()
54882=ASTConverter18Test:testBug432614()
54883=ASTConverter18Test:testBug470794_001()
54884=ASTConverter18Test:testBug424138_001()
54885=ASTConverter18Test:test0004()
54886=ASTConverter18Test:testBug425601_002()
54887=ASTConverter18Test:testParameterizedReceiverType()
54888=ASTConverter18Test:test436347()
54889=ASTConverter18Test:test417017f()
54890=ASTConverter18Test:testBug413942()
54891=ASTConverter18Test:suite()
54892=ASTConverter18Test:testBug409586()
54893=ASTConverter18Test:testBug416560_002()
54894=ASTConverter18Test:test428526a()
54895=ASTConverter18Test:test0011()
54896=ASTConverter18Test:test413569()
54897=ASTConverter18Test:testBug425183a()
54898=ASTConverter18Test:test429813()
54899=ASTConverter18Test:test417017d()
54900=Options:processOptionsFileManager(String)
54901=Options:processOptions(String)
54902=IdeReconcileProcessingEnvImpl:getPhase()
54903=IdeReconcileProcessingEnvImpl:IdeReconcileProcessingEnvImpl(IdeAnnotationProcessorManager, IJavaProject, Compiler)
54904=A:f()
54905=VarargsTest:test001()
54906=VarargsTest:test047()
54907=VarargsTest:test036()
54908=VarargsTest:test068e()
54909=VarargsTest:test069()
54910=VarargsTest:test023()
54911=VarargsTest:test012()
54912=VarargsTest:test058()
54913=VarargsTest:test070b_tolerate()
54914=VarargsTest:test045()
54915=VarargsTest:test034()
54916=VarargsTest:test070_tolerate2()
54917=VarargsTest:test067()
54918=VarargsTest:test021()
54919=VarargsTest:test056()
54920=VarargsTest:test010()
54921=VarargsTest:test043()
54922=VarargsTest:test032()
54923=VarargsTest:test065()
54924=VarargsTest:test054()
54925=VarargsTest:test041()
54926=VarargsTest:test030()
54927=VarargsTest:test063()
54928=VarargsTest:test052()
54929=VarargsTest:test062()
54930=VarargsTest:test073()
54931=VarargsTest:test051()
54932=VarargsTest:test009()
54933=VarargsTest:test426678()
54934=VarargsTest:test060()
54935=VarargsTest:test071()
54936=VarargsTest:test033_tolerate()
54937=VarargsTest:test018()
54938=VarargsTest:test070b()
54939=VarargsTest:test007()
54940=VarargsTest:testBug382469()
54941=VarargsTest:test015_tolerate()
54942=VarargsTest:test029()
54943=VarargsTest:test437973b()
54944=VarargsTest:test070a_tolerate()
54945=VarargsTest:test016()
54946=VarargsTest:VarargsTest(String)
54947=VarargsTest:test070d()
54948=VarargsTest:test005()
54949=VarargsTest:test003()
54950=VarargsTest:test038()
54951=VarargsTest:_test443596()
54952=VarargsTest:test068c()
54953=VarargsTest:test027()
54954=VarargsTest:test025()
54955=VarargsTest:test437973d()
54956=VarargsTest:test014()
54957=VarargsTest:test067b()
54958=VarargsTest:test049()
54959=VarargsTest:test024()
54960=VarargsTest:test470370()
54961=VarargsTest:test013()
54962=VarargsTest:test059()
54963=VarargsTest:suite()
54964=VarargsTest:test046()
54965=VarargsTest:test035()
54966=VarargsTest:test068()
54967=VarargsTest:test022()
54968=VarargsTest:test437973a()
54969=VarargsTest:test057()
54970=VarargsTest:test011()
54971=VarargsTest:test044()
54972=VarargsTest:test033()
54973=VarargsTest:testClass()
54974=VarargsTest:test066()
54975=VarargsTest:test020()
54976=VarargsTest:test437973()
54977=VarargsTest:test055()
54978=VarargsTest:testBug386361()
54979=VarargsTest:test042()
54980=VarargsTest:test436474()
54981=VarargsTest:test031()
54982=VarargsTest:test070_tolerate()
54983=VarargsTest:test064()
54984=VarargsTest:test053()
54985=VarargsTest:test040()
54986=VarargsTest:test061()
54987=VarargsTest:test071_tolerate()
54988=VarargsTest:test074()
54989=VarargsTest:test050()
54990=VarargsTest:test019()
54991=VarargsTest:test070a()
54992=VarargsTest:test008()
54993=VarargsTest:test072()
54994=VarargsTest:test437973c()
54995=VarargsTest:test017()
54996=VarargsTest:test070c()
54997=VarargsTest:test006()
54998=VarargsTest:test004()
54999=VarargsTest:test070()
55000=VarargsTest:test039()
55001=VarargsTest:test068b()
55002=VarargsTest:test028()
55003=VarargsTest:test026()
55004=VarargsTest:test015()
55005=VarargsTest:test002()
55006=VarargsTest:test048()
55007=VarargsTest:test037()
55008=VarargsTest:test068d()
55009=X:foo()
55010=X:X(String)
55011=X:foo()
55012=EvaluationTest:stop()
55013=EvaluationTest:Requestor:acceptProblem(CategorizedProblem, char[], int)
55014=EvaluationTest:failNotEquals(String, char[], char[])
55015=EvaluationTest:evaluateWithExpectedWarningAndDisplayString(char[], CategorizedProblem[], char[])
55016=EvaluationTest:Requestor:acceptClassFiles(ClassFile[], char[])
55017=EvaluationTest:getProblemFactory()
55018=EvaluationTest:evaluateWithExpectedImportProblem(char[], char[], CategorizedProblem)
55019=EvaluationTest:evaluateWithExpectedProblem(char[], CategorizedProblem)
55020=EvaluationTest:evaluateWithExpectedProblem(char[], String)
55021=EvaluationTest:evaluateWithExpectedValue(GlobalVariable, char[], char[])
55022=EvaluationTest:initialize(CompilerTestSetup)
55023=EvaluationTest:assertEquals(String, char[], char[])
55024=EvaluationTest:setupSuite(Class)
55025=EvaluationTest:buildCharArray(String[])
55026=EvaluationTest:resetEnv()
55027=EvaluationTest:evaluateWithExpectedType(char[], char[])
55028=EvaluationTest:installVariables(int)
55029=EvaluationTest:evaluateWithExpectedImportProblem(char[], char[], Map, CategorizedProblem)
55030=EvaluationTest:Requestor:acceptResult(EvaluationResult)
55031=EvaluationTest:evaluateWithExpectedDisplayString(char[], char[])
55032=EvaluationTest:newProblem(int, int, int, int, int)
55033=EvaluationTest:EvaluationTest(String)
55034=EvaluationTest:evaluateWithExpectedProblem(GlobalVariable, CategorizedProblem)
55035=EvaluationTest:equals(CategorizedProblem, CategorizedProblem)
55036=EvaluationTest:getCompilerOptions()
55037=EvaluationTest:evaluateWithExpectedValue(char[], char[], char[])
55038=EvaluationTest:getEnv()
55039=EvaluationTest:isJRockitVM()
55040=EvaluationTest:evaluateWithExpectedDisplayString(Map, char[], char[])
55041=EvaluationTest:suite(Class)
55042=Test:foo()
55043=FileASTRequestor:acceptAST(String, CompilationUnit)
55044=FileASTRequestor:acceptBinding(String, IBinding)
55045=FileASTRequestor:createBindings(String[])
55046=FilerTests:testElementWithSystemCompiler()
55047=FilerTests:setUp()
55048=FilerTests:internalTestCreateResource(JavaCompiler, boolean)
55049=FilerTests:tearDown()
55050=FilerTests:testElementWithEclipseCompiler()
55051=NonNullDefaultAwareTypeAnnotationWalker:getNonNullAnnotation(LookupEnvironment)
55052=NonNullDefaultAwareTypeAnnotationWalker:getAnnotationsAtCursor(int)
55053=NonNullDefaultAwareTypeAnnotationWalker:toMethodReturn()
55054=NonNullDefaultAwareTypeAnnotationWalker:toWildcardBound()
55055=NonNullDefaultAwareTypeAnnotationWalker:toTypeParameter(boolean, int)
55056=NonNullDefaultAwareTypeAnnotationWalker:NonNullDefaultAwareTypeAnnotationWalker(IBinaryTypeAnnotation[], long, int, int, IBinaryAnnotation, boolean, boolean, LookupEnvironment)
55057=NonNullDefaultAwareTypeAnnotationWalker:toMethodParameter(short)
55058=NonNullDefaultAwareTypeAnnotationWalker:toSupertype(short, char[])
55059=NonNullDefaultAwareTypeAnnotationWalker:toField()
55060=NonNullDefaultAwareTypeAnnotationWalker:toTypeArgument(int)
55061=NonNullDefaultAwareTypeAnnotationWalker:toTypeBound(short)
55062=NonNullDefaultAwareTypeAnnotationWalker:NonNullDefaultAwareTypeAnnotationWalker(int, IBinaryAnnotation, boolean, boolean, LookupEnvironment)
55063=NonNullDefaultAwareTypeAnnotationWalker:NonNullDefaultAwareTypeAnnotationWalker(int, LookupEnvironment)
55064=NonNullDefaultAwareTypeAnnotationWalker:toTypeParameterBounds(boolean, int)
55065=NonNullDefaultAwareTypeAnnotationWalker:NonNullDefaultAwareTypeAnnotationWalker(IBinaryTypeAnnotation[], int, LookupEnvironment)
55066=NonNullDefaultAwareTypeAnnotationWalker:toNextDetail(int)
55067=NonNullDefaultAwareTypeAnnotationWalker:restrict(long, int)
55068=Test:main(String[])
55069=Assignment:checkAssignmentEffect(BlockScope)
55070=Assignment:resolveTypeExpecting(BlockScope, TypeBinding)
55071=Assignment:printExpression(int, StringBuffer)
55072=Assignment:checkAssignment(BlockScope, TypeBinding, TypeBinding)
55073=Assignment:print(int, StringBuffer)
55074=Assignment:resolveType(BlockScope)
55075=Assignment:Assignment(Expression, Expression, int)
55076=Assignment:generateCode(BlockScope, CodeStream, boolean)
55077=Assignment:analyseCode(BlockScope, FlowContext, FlowInfo)
55078=Assignment:getLastField(Expression)
55079=Assignment:printExpressionNoParenthesis(int, StringBuffer)
55080=Assignment:printStatement(int, StringBuffer)
55081=Assignment:getDirectBinding(Expression)
55082=Assignment:traverse(ASTVisitor, BlockScope)
55083=X07:foo()
55084=Test:foo(String[])
55085=X14:foo(String)
55086=ConstantValueAttribute:getConstantValueIndex()
55087=ConstantValueAttribute:getConstantValue()
55088=ConstantValueAttribute:ConstantValueAttribute(byte[], IConstantPool, int)
55089=X03:foo(int, int)
55090=X06:foo(Object, boolean)
55091=FullSourceWorkspaceCompleteSearchTests:search(IJavaElement, int, JavaSearchResultCollector)
55092=FullSourceWorkspaceCompleteSearchTests:cleanCategoryTableCache(boolean, JavaSearchResultCollector)
55093=FullSourceWorkspaceCompleteSearchTests:testSearchStringConstructorDeclarations()
55094=FullSourceWorkspaceCompleteSearchTests:testSearchJavaElementConstructorReferences()
55095=FullSourceWorkspaceCompleteSearchTests:testSearchJavaElementMethodDeclarations()
55096=FullSourceWorkspaceCompleteSearchTests:Measuring:Measuring(boolean)
55097=FullSourceWorkspaceCompleteSearchTests:testSearchStringConstructorReferences()
55098=FullSourceWorkspaceCompleteSearchTests:Measuring:ensureReadyToRun()
55099=FullSourceWorkspaceCompleteSearchTests:testSearchJavaElementTypeReferences()
55100=FullSourceWorkspaceCompleteSearchTests:testSearchJavaElementConstructorDeclarations()
55101=FullSourceWorkspaceCompleteSearchTests:FullSourceWorkspaceCompleteSearchTests(String)
55102=FullSourceWorkspaceCompleteSearchTests:testSearchStringMethodReferences()
55103=FullSourceWorkspaceCompleteSearchTests:testSearchJavaElementMethodReferences()
55104=FullSourceWorkspaceCompleteSearchTests:search(String, int, int, JavaSearchResultCollector)
55105=FullSourceWorkspaceCompleteSearchTests:JavaSearchResultCollector:acceptSearchMatch(SearchMatch)
55106=FullSourceWorkspaceCompleteSearchTests:testSearchStringTypeReferences()
55107=FullSourceWorkspaceCompleteSearchTests:testSearchStringFieldReferences()
55108=FullSourceWorkspaceCompleteSearchTests:testSearchJavaElementFieldDeclarations()
55109=FullSourceWorkspaceCompleteSearchTests:tearDown()
55110=FullSourceWorkspaceCompleteSearchTests:Measuring:belongsTo(String)
55111=FullSourceWorkspaceCompleteSearchTests:testSearchJavaElementFieldReferences()
55112=FullSourceWorkspaceCompleteSearchTests:testSearchStringMethodDeclarations()
55113=FullSourceWorkspaceCompleteSearchTests:Measuring:execute(IProgressMonitor)
55114=FullSourceWorkspaceCompleteSearchTests:Measuring:getJobFamily()
55115=FullSourceWorkspaceCompleteSearchTests:verifyVmArguments()
55116=FullSourceWorkspaceCompleteSearchTests:Measuring:cancel()
55117=FullSourceWorkspaceCompleteSearchTests:testSearchStringFieldDeclarations()
55118=FullSourceWorkspaceCompleteSearchTests:testClass()
55119=FullSourceWorkspaceCompleteSearchTests:testSearchStringTypeDeclarations()
55120=FullSourceWorkspaceCompleteSearchTests:testSearchJavaElementTypeDeclarations()
55121=FullSourceWorkspaceCompleteSearchTests:suite()
55122=FullSourceWorkspaceCompleteSearchTests:setUp()
55123=E:foo1(int)
55124=E:foo1()
55125=StringLiteral:setLiteralValue(String)
55126=StringLiteral:propertyDescriptors(int)
55127=StringLiteral:subtreeMatch0(ASTMatcher, Object)
55128=StringLiteral:setEscapedValue(String)
55129=StringLiteral:getLiteralValue()
55130=StringLiteral:clone0(AST)
55131=StringLiteral:StringLiteral(AST)
55132=StringLiteral:memSize()
55133=StringLiteral:accept0(ASTVisitor)
55134=StringLiteral:internalStructuralPropertiesForType(int)
55135=StringLiteral:internalSetEscapedValue(String)
55136=StringLiteral:getEscapedValue()
55137=StringLiteral:getNodeType0()
55138=StringLiteral:internalGetSetObjectProperty(SimplePropertyDescriptor, boolean, Object)
55139=StringLiteral:treeSize()
55140=X23:foo()
55141=TestClass:main(String[])
55142=JavadocPackageCompletionModelTest:test040()
55143=JavadocPackageCompletionModelTest:test031()
55144=JavadocPackageCompletionModelTest:test005()
55145=JavadocPackageCompletionModelTest:test007()
55146=JavadocPackageCompletionModelTest:setUp()
55147=JavadocPackageCompletionModelTest:test002()
55148=JavadocPackageCompletionModelTest:test024()
55149=JavadocPackageCompletionModelTest:test013()
55150=JavadocPackageCompletionModelTest:test004()
55151=JavadocPackageCompletionModelTest:test015()
55152=JavadocPackageCompletionModelTest:test020()
55153=JavadocPackageCompletionModelTest:test022()
55154=JavadocPackageCompletionModelTest:test011()
55155=JavadocPackageCompletionModelTest:test041()
55156=JavadocPackageCompletionModelTest:test030()
55157=JavadocPackageCompletionModelTest:test006()
55158=JavadocPackageCompletionModelTest:writeFiles(String[])
55159=JavadocPackageCompletionModelTest:suite()
55160=JavadocPackageCompletionModelTest:test025()
55161=JavadocPackageCompletionModelTest:test014()
55162=JavadocPackageCompletionModelTest:test001()
55163=JavadocPackageCompletionModelTest:test003()
55164=JavadocPackageCompletionModelTest:JavadocPackageCompletionModelTest(String)
55165=JavadocPackageCompletionModelTest:test021()
55166=JavadocPackageCompletionModelTest:test010()
55167=JavadocPackageCompletionModelTest:test023()
55168=JavadocPackageCompletionModelTest:test012()
55169=DRLVMLauncher:getCommandLine()
55170=DRLVMLauncher:buildBootClassPath()
55171=A:foo()
55172=A:A()
55173=Convertible:convert()
55174=A:foo()
55175=Second:Test:Test(int)
55176=Second:Second()
55177=X13:foo()
55178=JarPackageFragment:internalIsValidPackageName()
55179=JarPackageFragment:buildStructure(OpenableElementInfo, IProgressMonitor, Map, IResource)
55180=JarPackageFragment:createCompilationUnit(String, String, boolean, IProgressMonitor)
55181=JarPackageFragment:getNonJavaResources()
55182=JarPackageFragment:JarPackageFragment(PackageFragmentRoot, String[])
55183=JarPackageFragment:getCorrespondingResource()
55184=JarPackageFragment:createElementInfo()
55185=JarPackageFragment:storedNonJavaResources()
55186=JarPackageFragment:getClassFiles()
55187=JarPackageFragment:getCompilationUnits()
55188=JarPackageFragment:containsJavaResources()
55189=JarPackageFragment:computeChildren(ArrayList)
55190=JarPackageFragment:isReadOnly()
55191=JarPackageFragment:computeNonJavaResources(ArrayList)
55192=A:getDocument()
55193=Test:main(String[])
55194=A:useFile(File)
55195=Test:foo()
55196=A:getFile()
55197=IntersectionTypeBinding18:IntersectionTypeBinding18(IntersectionTypeBinding18)
55198=IntersectionTypeBinding18:canBeSeenBy(ReferenceBinding, ReferenceBinding)
55199=IntersectionTypeBinding18:getSAMType(Scope)
55200=IntersectionTypeBinding18:updateTagBits()
55201=IntersectionTypeBinding18:IntersectionTypeBinding18(ReferenceBinding[], LookupEnvironment)
55202=IntersectionTypeBinding18:isSubtypeOf(TypeBinding)
55203=IntersectionTypeBinding18:kind()
55204=IntersectionTypeBinding18:qualifiedSourceName()
55205=IntersectionTypeBinding18:isBoxedPrimitiveType()
55206=IntersectionTypeBinding18:readableName()
55207=IntersectionTypeBinding18:constantPoolName()
55208=IntersectionTypeBinding18:getPackage()
55209=IntersectionTypeBinding18:isCompatibleWith(TypeBinding, Scope)
55210=IntersectionTypeBinding18:sourceName()
55211=IntersectionTypeBinding18:toString()
55212=IntersectionTypeBinding18:debugName()
55213=IntersectionTypeBinding18:hasTypeBit(int)
55214=IntersectionTypeBinding18:getIntersectingTypes()
55215=IntersectionTypeBinding18:isIntersectionType18()
55216=IntersectionTypeBinding18:canBeInstantiated()
55217=IntersectionTypeBinding18:getInterfaceAbstractContracts(Scope, boolean)
55218=IntersectionTypeBinding18:shortReadableName()
55219=IntersectionTypeBinding18:clone(TypeBinding)
55220=IntersectionTypeBinding18:canBeSeenBy(Scope)
55221=IntersectionTypeBinding18:superInterfaces()
55222=IntersectionTypeBinding18:mentionsAny(TypeBinding[], int)
55223=IntersectionTypeBinding18:canBeSeenBy(PackageBinding)
55224=IntersectionTypeBinding18:superclass()
55225=IntersectionTypeBinding18:collectInferenceVariables(Set<InferenceVariable>)
55226=X05:foo()
55227=ParameterizedFieldBinding:ParameterizedFieldBinding(ParameterizedTypeBinding, FieldBinding)
55228=ParameterizedFieldBinding:constant()
55229=ParameterizedFieldBinding:original()
55230=ParameterizedFieldBinding:setConstant(Constant)
55231=ParameterizedFieldBinding:isConstantValue()
55232=DefaultConstantProcessor:DefaultConstantProcessor(AnnotationProcessorEnvironment)
55233=DefaultConstantProcessor:process()
55234=SetVariablesOperation:executeOperation()
55235=SetVariablesOperation:verbose_failure(String[])
55236=SetVariablesOperation:verbose_set_variables()
55237=SetVariablesOperation:verbose_update_project(String[], JavaProject)
55238=SetVariablesOperation:SetVariablesOperation(String[], IPath[], boolean)
55239=A:main(String[])
55240=InnerClassInfo:getSourceName()
55241=InnerClassInfo:InnerClassInfo(byte, int, int)
55242=InnerClassInfo:initialize()
55243=InnerClassInfo:toString()
55244=InnerClassInfo:getEnclosingTypeName()
55245=InnerClassInfo:reset()
55246=InnerClassInfo:getName()
55247=InnerClassInfo:getModifiers()
55248=X:foo2()
55249=X:foo1()
55250=CompilationUnit:createElementInfo()
55251=CompilationUnit:getOriginalElement()
55252=CompilationUnit:getOwner()
55253=CompilationUnit:move(IJavaElement, IJavaElement, String, boolean, IProgressMonitor)
55254=CompilationUnit:getPrimaryElement(boolean)
55255=CompilationUnit:makeConsistent(int, boolean, int, HashMap, IProgressMonitor)
55256=CompilationUnit:getCompilationUnit()
55257=CompilationUnit:getPerWorkingCopyInfo()
55258=CompilationUnit:codeComplete(int, CompletionRequestor)
55259=CompilationUnit:findPrimaryType()
55260=CompilationUnit:copy(IJavaElement, IJavaElement, String, boolean, IProgressMonitor)
55261=CompilationUnit:openAncestors(HashMap, IProgressMonitor)
55262=CompilationUnit:isConsistent()
55263=CompilationUnit:getPackageDeclarations()
55264=CompilationUnit:getPackageDeclaration(String)
55265=CompilationUnit:getTypes()
55266=CompilationUnit:getContents()
55267=CompilationUnit:isSourceElement()
55268=CompilationUnit:getType(String)
55269=CompilationUnit:getPrimary()
55270=CompilationUnit:createImport(String, IJavaElement, int, IProgressMonitor)
55271=CompilationUnit:getAllTypes()
55272=CompilationUnit:findWorkingCopy(WorkingCopyOwner)
55273=CompilationUnit:makeConsistent(IProgressMonitor)
55274=CompilationUnit:codeComplete(int, CompletionRequestor, WorkingCopyOwner, IProgressMonitor)
55275=CompilationUnit:codeComplete(int, CompletionRequestor, IProgressMonitor)
55276=CompilationUnit:codeSelect(int, int)
55277=CompilationUnit:reconcile(int, boolean, boolean, WorkingCopyOwner, IProgressMonitor)
55278=CompilationUnit:validateCompilationUnit(IResource)
55279=CompilationUnit:getWorkingCopy(WorkingCopyOwner, IProblemRequestor, IProgressMonitor)
55280=CompilationUnit:getHandleMementoDelimiter()
55281=CompilationUnit:validateExistence(IResource)
55282=CompilationUnit:codeSelect(int, int, WorkingCopyOwner)
55283=CompilationUnit:getOriginal(IJavaElement)
55284=CompilationUnit:canBeRemovedFromCache()
55285=CompilationUnit:originalFromClone()
55286=CompilationUnit:cloneCachingContents()
55287=CompilationUnit:getPath()
55288=CompilationUnit:discardWorkingCopy()
55289=CompilationUnit:codeComplete(int, ICodeCompletionRequestor)
55290=CompilationUnit:openBuffer(IProgressMonitor, Object)
55291=CompilationUnit:updateTimeStamp(CompilationUnit)
55292=CompilationUnit:isBasedOn(IResource)
55293=CompilationUnit:getWorkingCopy()
55294=CompilationUnit:toStringInfo(int, StringBuffer, Object, boolean)
55295=CompilationUnit:hasBuffer()
55296=CompilationUnit:getImportContainer()
55297=CompilationUnit:becomeWorkingCopy(IProgressMonitor)
55298=CompilationUnit:reconcile(int, int, WorkingCopyOwner, IProgressMonitor)
55299=CompilationUnit:applyTextEdit(TextEdit, IProgressMonitor)
55300=CompilationUnit:getNameRange()
55301=CompilationUnit:reconcile()
55302=CompilationUnit:findElements(IJavaElement)
55303=CompilationUnit:getPackageName()
55304=CompilationUnit:findSharedWorkingCopy(IBufferFactory)
55305=CompilationUnit:getWorkingCopy(IProgressMonitor)
55306=CompilationUnit:close()
55307=CompilationUnit:reconcile(int, boolean, WorkingCopyOwner, IProgressMonitor)
55308=CompilationUnit:buildStructure(OpenableElementInfo, IProgressMonitor, Map, IResource)
55309=CompilationUnit:commitWorkingCopy(boolean, IProgressMonitor)
55310=CompilationUnit:createImport(String, IJavaElement, IProgressMonitor)
55311=CompilationUnit:isWorkingCopy()
55312=CompilationUnit:isPrimary()
55313=CompilationUnit:restore()
55314=CompilationUnit:hasResourceChanged()
55315=CompilationUnit:codeComplete(int, ICompletionRequestor)
55316=CompilationUnit:getTypeRoot()
55317=CompilationUnit:createType(String, IJavaElement, boolean, IProgressMonitor)
55318=CompilationUnit:commit(boolean, IProgressMonitor)
55319=CompilationUnit:rename(String, boolean, IProgressMonitor)
55320=CompilationUnit:getSource()
55321=CompilationUnit:getCorrespondingResource()
55322=CompilationUnit:getElementAt(int)
55323=CompilationUnit:getMainTypeName()
55324=CompilationUnit:reconcile(boolean, IProgressMonitor)
55325=CompilationUnit:codeComplete(int, CompletionRequestor, WorkingCopyOwner)
55326=CompilationUnit:equals(Object)
55327=CompilationUnit:getSharedWorkingCopy(IProgressMonitor, IBufferFactory, IProblemRequestor)
55328=CompilationUnit:getImports()
55329=CompilationUnit:getElementName()
55330=CompilationUnit:getImport(String)
55331=CompilationUnit:getWorkingCopy(WorkingCopyOwner, IProgressMonitor)
55332=CompilationUnit:save(IProgressMonitor, boolean)
55333=CompilationUnit:resource(PackageFragmentRoot)
55334=CompilationUnit:getUnderlyingResource()
55335=CompilationUnit:getFileName()
55336=CompilationUnit:CompilationUnit(PackageFragment, String, WorkingCopyOwner)
55337=CompilationUnit:getElementType()
55338=CompilationUnit:createPackageDeclaration(String, IProgressMonitor)
55339=CompilationUnit:codeComplete(int, ICompletionRequestor, WorkingCopyOwner)
55340=CompilationUnit:ignoreOptionalProblems()
55341=CompilationUnit:canBufferBeRemovedFromCache(IBuffer)
55342=CompilationUnit:getWorkingCopy(IProgressMonitor, IBufferFactory, IProblemRequestor)
55343=CompilationUnit:getHandleFromMemento(String, MementoTokenizer, WorkingCopyOwner)
55344=CompilationUnit:becomeWorkingCopy(IProblemRequestor, IProgressMonitor)
55345=CompilationUnit:delete(boolean, IProgressMonitor)
55346=CompilationUnit:destroy()
55347=CompilationUnit:getSourceRange()
55348=CompilationUnit:closing(Object)
55349=GenerateBuildScript:dumpAllClassFiles(Writer, File, ArrayList, String, String)
55350=GenerateBuildScript:main(String[])
55351=GenerateBuildScript:collectAllFiles(File, ArrayList, FileFilter)
55352=GenerateBuildScript:getObjectName(String)
55353=GenerateBuildScript:dumpAllProperties(Writer, File, ArrayList, String, String)
55354=JavaSourceFilePrintWriter:JavaSourceFilePrintWriter(String, StringWriter, AbstractCompilationEnv)
55355=JavaSourceFilePrintWriter:close()
55356=WorkingCopySearchTests:testAddNewType()
55357=WorkingCopySearchTests:tearDown()
55358=WorkingCopySearchTests:testHierarchyScopeOnWorkingCopy()
55359=WorkingCopySearchTests:testBug483650_dirtyWC_004()
55360=WorkingCopySearchTests:testRemoveType()
55361=WorkingCopySearchTests:suite()
55362=WorkingCopySearchTests:testMoveType()
55363=WorkingCopySearchTests:testBug483650_dirtyWC_003()
55364=WorkingCopySearchTests:testBug478042_dirtyWC_003()
55365=WorkingCopySearchTests:testBug483650_dirtyWC_001()
55366=WorkingCopySearchTests:testDeclarationOfReferencedTypes()
55367=WorkingCopySearchTests:testAllTypeNames2()
55368=WorkingCopySearchTests:testAllTypeNames4()
55369=WorkingCopySearchTests:testAllTypeNamesBug99915()
55370=WorkingCopySearchTests:setUp()
55371=WorkingCopySearchTests:WorkingCopySearchTests(String)
55372=WorkingCopySearchTests:testBug478042_dirtyWC_001()
55373=WorkingCopySearchTests:testBug483650_dirtyWC_002()
55374=WorkingCopySearchTests:testBug478042_dirtyWC_002()
55375=WorkingCopySearchTests:testAllTypeNamesBug98684()
55376=WorkingCopySearchTests:testBug478042_dirtyWC_004()
55377=WorkingCopySearchTests:testAllTypeNames1()
55378=WorkingCopySearchTests:testAllTypeNames3()
55379=SearchDocument:getEncoding()
55380=SearchDocument:removeAllIndexEntries()
55381=SearchDocument:getParticipant()
55382=SearchDocument:getByteContents()
55383=SearchDocument:getCharContents()
55384=SearchDocument:setIndex(Index)
55385=SearchDocument:getContainerRelativePath()
55386=SearchDocument:addIndexEntry(char[], char[])
55387=SearchDocument:shouldIndexResolvedDocument()
55388=SearchDocument:getPath()
55389=SearchDocument:getParser()
55390=SearchDocument:SearchDocument(String, SearchParticipant)
55391=SearchDocument:requireIndexingResolvedDocument()
55392=SearchDocument:setParser(SourceElementParser)
55393=FormatterJSR335Tests:getOut(String)
55394=FormatterJSR335Tests:setUp()
55395=FormatterJSR335Tests:testLambda()
55396=FormatterJSR335Tests:testBug402818()
55397=FormatterJSR335Tests:suite()
55398=FormatterJSR335Tests:testLambdaOptions()
55399=FormatterJSR335Tests:runTest(String, String)
55400=FormatterJSR335Tests:runTest(CodeFormatter, String, String, int, int)
55401=FormatterJSR335Tests:runFormatter(CodeFormatter, String, int, int, int, int, String, boolean)
55402=FormatterJSR335Tests:FormatterJSR335Tests(String)
55403=FormatterJSR335Tests:runTest(String, String, DefaultCodeFormatterOptions)
55404=FormatterJSR335Tests:setPageWidth80()
55405=FormatterJSR335Tests:setUpSuite()
55406=FormatterJSR335Tests:testBug402819()
55407=FormatterJSR335Tests:setPageWidth80(DefaultCodeFormatterOptions)
55408=FormatterJSR335Tests:getIn(String)
55409=FormatterJSR335Tests:runTest(CodeFormatter, String, String, int, int, boolean, int, int, String)
55410=FormatterJSR335Tests:tearDownSuite()
55411=FormatterJSR335Tests:assertLineEquals(String, String, String, boolean)
55412=FormatterJSR335Tests:testMethodReference()
55413=TypeReference:analyseCode(BlockScope, FlowContext, FlowInfo)
55414=TypeReference:TypeReference()
55415=TypeReference:checkBounds(Scope)
55416=TypeReference:resolveSuperType(ClassScope)
55417=TypeReference:baseTypeReference(int, int)
55418=TypeReference:aboutToResolve(Scope)
55419=TypeReference:resolveTypeArgument(BlockScope, ReferenceBinding, int)
55420=TypeReference:getParameterizedTypeName()
55421=TypeReference:resolveType(ClassScope)
55422=TypeReference:traverse(ASTVisitor, ClassScope)
55423=TypeReference:reportInvalidType(Scope)
55424=TypeReference:getTypeName()
55425=TypeReference:resolveType(BlockScope)
55426=TypeReference:copyDims(int)
55427=TypeReference:traverse(ASTVisitor, BlockScope)
55428=TypeReference:getTypeBinding(Scope)
55429=TypeReference:resolveTypeArgument(ClassScope, ReferenceBinding, int)
55430=TypeReference:dimensions()
55431=TypeReference:isTypeReference()
55432=TypeReference:reportDeprecatedType(Scope)
55433=X02:foo()
55434=TestingMyClass:test_method()
55435=Test:main(String[])
55436=X:main(String[])
55437=X04:foo()
55438=TestVerifier:shutDown()
55439=TestVerifier:checkBuffers(String, String, String, String, String)
55440=TestVerifier:verifyClassFilesThrowingError(String, String, String, String[], String[], String[])
55441=TestVerifier:verifyClassFiles(String, String, String, String, String[], String[], String[])
55442=TestVerifier:execute(String, String[])
55443=TestVerifier:verifyClassFiles(String, String, String, String[])
55444=TestVerifier:checkBuffersThrowingError(String, String, String)
55445=TestVerifier:TestVerifier(boolean)
55446=TestVerifier:verifyClassFiles(String, String, String, String[], String[], String[])
55447=TestVerifier:getExecutionError()
55448=TestVerifier:getExecutionOutput()
55449=TestVerifier:getVerifyTestsCode()
55450=TestVerifier:waitForFullBuffers()
55451=TestVerifier:launchAndRun(String, String[], String[], String[])
55452=TestVerifier:launchVerifyTestsIfNeeded(String[], String[])
55453=TestVerifier:compileVerifyTests(String)
55454=TestVerifier:loadAndRun(String)
55455=TestVerifier:finalize()
55456=Test:foo()
55457=X04:foo(int, int)
55458=X04:foo2()
55459=WrapExecutor:NLSTagHandler:NLSTagHandler()
55460=WrapExecutor:checkSeparateLinesOnWrap(int)
55461=WrapExecutor:NLSTagHandler:token(Token, int)
55462=WrapExecutor:WrapInfo:hashCode()
55463=WrapExecutor:WrapInfo:WrapInfo(int, int)
55464=WrapExecutor:LineAnalyzer:token(Token, int)
55465=WrapExecutor:findWraps(int, int)
55466=WrapExecutor:checkTopPriorityWraps(int)
55467=WrapExecutor:executeWraps()
55468=WrapExecutor:getPenalty(WrapPolicy)
55469=WrapExecutor:WrapInfo:WrapInfo()
55470=WrapExecutor:handleOnColumnIndent(int, WrapPolicy)
55471=WrapExecutor:WrapResult:WrapResult(double, int, WrapInfo)
55472=WrapExecutor:checkForceWrap(Token, int, int)
55473=WrapExecutor:LineAnalyzer:getLastPosition()
55474=WrapExecutor:getWrapPenalty(int, int, int, int, WrapResult)
55475=WrapExecutor:WrapInfo:equals(Object)
55476=WrapExecutor:findWrapsCached(int, int)
55477=WrapExecutor:LineAnalyzer:analyzeLine(int, int)
55478=WrapExecutor:getWrapIndent(Token)
55479=WrapExecutor:WrapRestartThrowable:WrapRestartThrowable(int)
55480=WrapExecutor:handleTopPriorityWraps(WrapRestartThrowable)
55481=WrapExecutor:toArray(List<Integer>)
55482=WrapExecutor:WrapExecutor(TokenManager, DefaultCodeFormatterOptions)
55483=WrapExecutor:applyWraps(int, int)
55484=WrapExecutor:LineAnalyzer:LineAnalyzer(TokenManager, DefaultCodeFormatterOptions)
55485=IParameterAnnotation:getAnnotationsNumber()
55486=IParameterAnnotation:getAnnotations()
55487=Y:foo()
55488=Y:Y(int)
55489=BaseProcessor:reportSuccess(Class<? extends AnnotationProcessor>)
55490=BaseProcessor:assertEqual(int, int, String)
55491=BaseProcessor:assertEqual(Object, Object, String)
55492=BaseProcessor:getPropertyName(Class<? extends AnnotationProcessor>)
55493=BaseProcessor:assertEqual(String, String, String)
55494=BaseProcessor:BaseProcessor(AnnotationProcessorEnvironment)
55495=BaseProcessor:assertNonNull(Object, String)
55496=BaseProcessor:reportError(Class<? extends AnnotationProcessor>, String)
55497=ExternalizeStringLiterals15Test:test002()
55498=ExternalizeStringLiterals15Test:suite()
55499=ExternalizeStringLiterals15Test:test006()
55500=ExternalizeStringLiterals15Test:test004()
55501=ExternalizeStringLiterals15Test:test003()
55502=ExternalizeStringLiterals15Test:test001()
55503=ExternalizeStringLiterals15Test:testClass()
55504=ExternalizeStringLiterals15Test:ExternalizeStringLiterals15Test(String)
55505=ExternalizeStringLiterals15Test:test007()
55506=ExternalizeStringLiterals15Test:test005()
55507=A:foo(int, int, int, int, int, int, int, int, int)
55508=Test:foo()
55509=ImportContainer:equals(Object)
55510=ImportContainer:ImportContainer(CompilationUnit)
55511=ImportContainer:getImport(String)
55512=ImportContainer:toString(int, StringBuffer)
55513=ImportContainer:getNameRange()
55514=ImportContainer:getHandleMementoDelimiter()
55515=ImportContainer:getElementType()
55516=ImportContainer:getSourceRange()
55517=ImportContainer:readableName()
55518=ImportContainer:toStringInfo(int, StringBuffer, Object, boolean)
55519=ImportContainer:getImport(String, boolean)
55520=ImportContainer:getHandleFromMemento(String, MementoTokenizer, WorkingCopyOwner)
55521=ImportContainer:getPrimaryElement(boolean)
55522=X14d:foo()
55523=CompletionOnKeyword1:printExpression(int, StringBuffer)
55524=CompletionOnKeyword1:getPossibleKeywords()
55525=CompletionOnKeyword1:CompletionOnKeyword1(char[], long, char[])
55526=CompletionOnKeyword1:aboutToResolve(Scope)
55527=CompletionOnKeyword1:CompletionOnKeyword1(char[], long, char[][])
55528=CompletionOnKeyword1:getToken()
55529=CompletionOnKeyword1:getTypeBinding(Scope)
55530=TestAll:getTestSuite(boolean)
55531=TestAll:TestAll(String)
55532=TestAll:suite()
55533=X:foo()
55534=DeclarationFilter:or(DeclarationFilter)
55535=DeclarationFilter:AccessFilter:AccessFilter(Modifier, Modifier)
55536=DeclarationFilter:DeclarationFilter()
55537=DeclarationFilter:getFilter(Class<? extends Declaration>)
55538=DeclarationFilter:AccessFilter:matches(Declaration)
55539=DeclarationFilter:AccessFilter:AccessFilter(Modifier)
55540=DeclarationFilter:matches(Declaration)
55541=DeclarationFilter:AccessFilter:AccessFilter()
55542=DeclarationFilter:and(DeclarationFilter)
55543=DeclarationFilter:getFilter(Collection<Modifier>)
55544=DeclarationFilter:filter(Collection<? extends Declaration>, Class<D>)
55545=DeclarationFilter:not()
55546=DeclarationFilter:filter(Collection<D>)
55547=A:foo(boolean)
55548=IntLiteral:resolveType(BlockScope)
55549=IntLiteral:mayRepresentMIN_VALUE()
55550=IntLiteral:IntLiteral(char[], int, int, int)
55551=IntLiteral:IntLiteral(char[], int, int)
55552=IntLiteral:printExpression(int, StringBuffer)
55553=IntLiteral:generateCode(BlockScope, CodeStream, boolean)
55554=IntLiteral:literalType(BlockScope)
55555=IntLiteral:IntLiteral(int)
55556=IntLiteral:traverse(ASTVisitor, BlockScope)
55557=IntLiteral:computeConstant()
55558=ICodeAttribute:getMaxStack()
55559=ICodeAttribute:getCodeLength()
55560=ICodeAttribute:getMaxLocals()
55561=ICodeAttribute:getLineNumberAttribute()
55562=ICodeAttribute:getExceptionTableLength()
55563=ICodeAttribute:getAttributesCount()
55564=ICodeAttribute:traverse(IBytecodeVisitor)
55565=ICodeAttribute:getBytecodes()
55566=ICodeAttribute:getLocalVariableAttribute()
55567=ICodeAttribute:getExceptionTable()
55568=ICodeAttribute:getAttributes()
55569=Java50Tests:testMissingRequiredBinaries()
55570=Java50Tests:testHierarchyCycleInstanceof()
55571=Java50Tests:testHierarchyCycle()
55572=Java50Tests:testAnnotation()
55573=Java50Tests:testParameterizedMemberType()
55574=Java50Tests:testParameterizedType2()
55575=Java50Tests:testHierarchyNonCycle()
55576=Java50Tests:testHierarchyNonCycle2()
55577=Java50Tests:suite()
55578=Java50Tests:testParameterizedType1()
55579=Java50Tests:Java50Tests(String)
55580=Example:foo()
55581=X06:foo()
55582=BuildFilerImpl:getEnv()
55583=BuildFilerImpl:hasGeneratedClassFile()
55584=BuildFilerImpl:createClassFile(String)
55585=BuildFilerImpl:BuildFilerImpl(BuildEnv)
55586=BuildFilerImpl:createBinaryFile(Filer.Location, String, File)
55587=BuildFilerImpl:createTextFile(Filer.Location, String, File, String)
55588=BuildFilerImpl:validateFile(IFile)
55589=TypeParameter:getNodeType0()
55590=TypeParameter:modifiers()
55591=TypeParameter:resolveBinding()
55592=TypeParameter:internalGetChildListProperty(ChildListPropertyDescriptor)
55593=TypeParameter:propertyDescriptors(int)
55594=TypeParameter:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
55595=TypeParameter:TypeParameter(AST)
55596=TypeParameter:getName()
55597=TypeParameter:internalStructuralPropertiesForType(int)
55598=TypeParameter:typeBounds()
55599=TypeParameter:accept0(ASTVisitor)
55600=TypeParameter:memSize()
55601=TypeParameter:clone0(AST)
55602=TypeParameter:setName(SimpleName)
55603=TypeParameter:treeSize()
55604=TypeParameter:subtreeMatch0(ASTMatcher, Object)
55605=ColorAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
55606=ColorAnnotationProcessorFactory:supportedOptions()
55607=ColorAnnotationProcessorFactory:supportedAnnotationTypes()
55608=AbstractCommentParser:getTokenEndPosition()
55609=AbstractCommentParser:createArgumentReference(char[], int, boolean, Object, long[], long)
55610=AbstractCommentParser:createFakeReference(int)
55611=AbstractCommentParser:pushIdentifier(boolean, boolean)
55612=AbstractCommentParser:consumeToken()
55613=AbstractCommentParser:createReturnStatement()
55614=AbstractCommentParser:createMethodReference(Object, List)
55615=AbstractCommentParser:pushParamName(boolean)
55616=AbstractCommentParser:parseParam()
55617=AbstractCommentParser:verifyEndLine(int)
55618=AbstractCommentParser:AbstractCommentParser(Parser)
55619=AbstractCommentParser:getLineNumber(int)
55620=AbstractCommentParser:updateDocComment()
55621=AbstractCommentParser:getIndexPosition()
55622=AbstractCommentParser:parseThrows()
55623=AbstractCommentParser:readToken()
55624=AbstractCommentParser:pushSeeRef(Object)
55625=AbstractCommentParser:pushThrowName(Object)
55626=AbstractCommentParser:refreshReturnStatement()
55627=AbstractCommentParser:toString()
55628=AbstractCommentParser:updateLineEnd()
55629=AbstractCommentParser:pushOnAstStack(Object, boolean)
55630=AbstractCommentParser:parseArguments(Object)
55631=AbstractCommentParser:readChar()
55632=AbstractCommentParser:parseHtmlTag(int, int)
55633=AbstractCommentParser:parseIdentifierTag(boolean)
55634=AbstractCommentParser:getCurrentTokenType()
55635=AbstractCommentParser:commentParse()
55636=AbstractCommentParser:verifySpaceOrEndComment()
55637=AbstractCommentParser:readTokenSafely()
55638=AbstractCommentParser:setInlineTagStarted(boolean)
55639=AbstractCommentParser:syntaxRecoverQualifiedName(int)
55640=AbstractCommentParser:refreshInlineTagPosition(int)
55641=AbstractCommentParser:parseReference()
55642=AbstractCommentParser:parseHref()
55643=AbstractCommentParser:peekChar()
55644=AbstractCommentParser:createTag()
55645=AbstractCommentParser:pushText(int, int)
55646=AbstractCommentParser:parseQualifiedName(boolean)
55647=AbstractCommentParser:createTypeReference(int)
55648=AbstractCommentParser:recordInheritedPosition(long)
55649=AbstractCommentParser:createFieldReference(Object)
55650=AbstractCommentParser:parseTag(int)
55651=AbstractCommentParser:parseMember(Object)
55652=AbstractCommentParser:readTokenAndConsume()
55653=CompletionContextTests_1_5:test0017()
55654=CompletionContextTests_1_5:test0006()
55655=CompletionContextTests_1_5:test0019()
55656=CompletionContextTests_1_5:test0008()
55657=CompletionContextTests_1_5:test0037()
55658=CompletionContextTests_1_5:test0026()
55659=CompletionContextTests_1_5:test0013()
55660=CompletionContextTests_1_5:test0002()
55661=CompletionContextTests_1_5:test0039()
55662=CompletionContextTests_1_5:test0028()
55663=CompletionContextTests_1_5:test0015()
55664=CompletionContextTests_1_5:test0004()
55665=CompletionContextTests_1_5:test0033()
55666=CompletionContextTests_1_5:testBug311022a()
55667=CompletionContextTests_1_5:test0022()
55668=CompletionContextTests_1_5:test0035()
55669=CompletionContextTests_1_5:test0024()
55670=CompletionContextTests_1_5:test0011()
55671=CompletionContextTests_1_5:test0040()
55672=CompletionContextTests_1_5:test0031()
55673=CompletionContextTests_1_5:test0020()
55674=CompletionContextTests_1_5:test0042()
55675=CompletionContextTests_1_5:test0018()
55676=CompletionContextTests_1_5:test0007()
55677=CompletionContextTests_1_5:test0029()
55678=CompletionContextTests_1_5:test0009()
55679=CompletionContextTests_1_5:setUpSuite()
55680=CompletionContextTests_1_5:test0014()
55681=CompletionContextTests_1_5:test0003()
55682=CompletionContextTests_1_5:test0036()
55683=CompletionContextTests_1_5:test0025()
55684=CompletionContextTests_1_5:test0016()
55685=CompletionContextTests_1_5:test0005()
55686=CompletionContextTests_1_5:test0038()
55687=CompletionContextTests_1_5:test0027()
55688=CompletionContextTests_1_5:test0010()
55689=CompletionContextTests_1_5:test0032()
55690=CompletionContextTests_1_5:test0021()
55691=CompletionContextTests_1_5:test0012()
55692=CompletionContextTests_1_5:test0001()
55693=CompletionContextTests_1_5:test0034()
55694=CompletionContextTests_1_5:test0023()
55695=CompletionContextTests_1_5:test0041()
55696=CompletionContextTests_1_5:suite()
55697=CompletionContextTests_1_5:CompletionContextTests_1_5(String)
55698=CompletionContextTests_1_5:test0030()
55699=CompletionContextTests_1_5:testBug311022b()
55700=SuperInterface:foo()
55701=X:foo()
55702=ISourceType:getName()
55703=ISourceType:getMethods()
55704=ISourceType:getSuperclassName()
55705=ISourceType:getInterfaceNames()
55706=ISourceType:getNameSourceEnd()
55707=ISourceType:getDeclarationSourceEnd()
55708=ISourceType:getMemberTypes()
55709=ISourceType:getDeclarationSourceStart()
55710=ISourceType:getFields()
55711=ISourceType:getTypeParameterNames()
55712=ISourceType:getTypeParameterBounds()
55713=ISourceType:getNameSourceStart()
55714=ISourceType:getEnclosingType()
55715=ISourceType:isAnonymous()
55716=IPathRequestor:acceptPath(String, boolean)
55717=DirectoryComparator:compare()
55718=X:foo()
55719=X:X(String)
55720=CompletionOnReferenceExpressionName:resolveType(BlockScope)
55721=CompletionOnReferenceExpressionName:printExpression(int, StringBuffer)
55722=MemberValuePair:MemberValuePair(String)
55723=MemberValuePair:getMemberName()
55724=MemberValuePair:MemberValuePair(String, Object, int)
55725=MemberValuePair:getValue()
55726=MemberValuePair:getValueKind()
55727=MemberValuePair:hashCode()
55728=MemberValuePair:equals(Object)
55729=Test:main(String[])
55730=A:foo()
55731=JavadocArgumentExpression:internalResolveType(Scope)
55732=JavadocArgumentExpression:resolveType(ClassScope)
55733=JavadocArgumentExpression:JavadocArgumentExpression(char[], int, int, TypeReference)
55734=JavadocArgumentExpression:printExpression(int, StringBuffer)
55735=JavadocArgumentExpression:traverse(ASTVisitor, BlockScope)
55736=JavadocArgumentExpression:resolveType(BlockScope)
55737=JavadocArgumentExpression:resolve(BlockScope)
55738=ASTRequestor:acceptAST(ICompilationUnit, CompilationUnit)
55739=ASTRequestor:ASTRequestor()
55740=ASTRequestor:createBindings(String[])
55741=ASTRequestor:acceptBinding(String, IBinding)
55742=LabeledStatement:doesNotCompleteNormally()
55743=LabeledStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
55744=LabeledStatement:generateCode(BlockScope, CodeStream)
55745=LabeledStatement:completesByContinue()
55746=LabeledStatement:resolve(BlockScope)
55747=LabeledStatement:LabeledStatement(char[], Statement, long, int)
55748=LabeledStatement:concreteStatement()
55749=LabeledStatement:printStatement(int, StringBuffer)
55750=LabeledStatement:traverse(ASTVisitor, BlockScope)
55751=X05:foo(int, int)
55752=BatchTestUtils:compileTreeWithErrors(JavaCompiler, List<String>, File, DiagnosticListener<? super JavaFileObject>)
55753=BatchTestUtils:getEclipseCompiler()
55754=BatchTestUtils:compileTreeWithErrors(JavaCompiler, List<String>, File, DiagnosticListener<? super JavaFileObject>, boolean)
55755=BatchTestUtils:compileOneClass(JavaCompiler, List<String>, File)
55756=BatchTestUtils:addProcessorPaths(List<String>, boolean, boolean)
55757=BatchTestUtils:init()
55758=BatchTestUtils:getBinFolderName()
55759=BatchTestUtils:compileTree(JavaCompiler, List<String>, File, DiagnosticListener<? super JavaFileObject>)
55760=BatchTestUtils:read(java.io.File)
55761=BatchTestUtils:tearDown()
55762=BatchTestUtils:getResourceFolderName()
55763=BatchTestUtils:setupProcessorJar(String, String)
55764=BatchTestUtils:getPluginDirectoryPath()
55765=BatchTestUtils:compileOneClass(JavaCompiler, List<String>, File, boolean)
55766=BatchTestUtils:copyResource(String, File)
55767=BatchTestUtils:shouldConvertToIndependentLineDelimiter(File)
55768=BatchTestUtils:getSrcFolderName()
55769=BatchTestUtils:fileContentsEqualText(File, String)
55770=BatchTestUtils:compileTree(JavaCompiler, List<String>, File)
55771=BatchTestUtils:getGenFolderName()
55772=BatchTestUtils:copyResources(String, File)
55773=BatchTestUtils:copyResource(File, File)
55774=BatchTestUtils:compileTreeWithErrors(JavaCompiler, List<String>, File, DiagnosticListener<? super JavaFileObject>, boolean, boolean)
55775=BatchTestUtils:compileTree(JavaCompiler, List<String>, File, boolean, DiagnosticListener<? super JavaFileObject>)
55776=BatchTestUtils:compileTree(JavaCompiler, List<String>, File, boolean)
55777=BatchTestUtils:findFilesUnder(File, List<File>)
55778=BatchTestUtils:deleteTree(File)
55779=BatchTestUtils:copyResources(File, File)
55780=IExtendedModifier:isModifier()
55781=IExtendedModifier:isAnnotation()
55782=DeclarationOfReferencedMethodsPattern:DeclarationOfReferencedMethodsPattern(IJavaElement)
55783=X05:foo()
55784=Test:m(int)
55785=WildcardType:getLowerBounds()
55786=WildcardType:getUpperBounds()
55787=FieldBinding:canBeSeenBy(TypeBinding, InvocationSite, Scope)
55788=FieldBinding:FieldBinding(FieldBinding, ReferenceBinding)
55789=FieldBinding:FieldBinding(char[], TypeBinding, int, ReferenceBinding, Constant)
55790=FieldBinding:isPrivateUsed()
55791=FieldBinding:isViewedAsDeprecated()
55792=FieldBinding:isTransient()
55793=FieldBinding:isProtected()
55794=FieldBinding:genericSignature()
55795=FieldBinding:isPrivate()
55796=FieldBinding:FieldBinding()
55797=FieldBinding:isSynthetic()
55798=FieldBinding:FieldBinding(FieldDeclaration, TypeBinding, int, ReferenceBinding)
55799=FieldBinding:isVolatile()
55800=FieldBinding:isPublic()
55801=FieldBinding:original()
55802=FieldBinding:isDefault()
55803=FieldBinding:isStatic()
55804=FieldBinding:bindingType()
55805=FieldBinding:isDeprecated()
55806=FieldBinding:getAccessFlags()
55807=A:foo()
55808=EmptyStatement:complainIfUnreachable(FlowInfo, BlockScope, boolean)
55809=EmptyStatement:traverse(ASTVisitor, BlockScope)
55810=EmptyStatement:printStatement(int, StringBuffer)
55811=EmptyStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
55812=EmptyStatement:generateCode(BlockScope, CodeStream)
55813=EmptyStatement:EmptyStatement(int, int)
55814=EmptyStatement:resolve(BlockScope)
55815=Expression:generateOptimizedStringConcatenationCreation(BlockScope, CodeStream, int)
55816=Expression:getAllInheritedMethods(ReferenceBinding)
55817=Expression:isCompactableOperation()
55818=Expression:traverse(ASTVisitor, ClassScope)
55819=Expression:print(int, StringBuffer)
55820=Expression:analyseCode(BlockScope, FlowContext, FlowInfo, boolean)
55821=Expression:setExpectedType(TypeBinding)
55822=Expression:generateCode(BlockScope, CodeStream)
55823=Expression:generateOptimizedBoolean(BlockScope, CodeStream, Label, Label, boolean)
55824=Expression:checkCastTypesCompatibility(BlockScope, TypeBinding, TypeBinding, Expression)
55825=Expression:resolveType(ClassScope)
55826=Expression:isConstantValueOfTypeAssignableToType(TypeBinding, TypeBinding)
55827=Expression:traverse(ASTVisitor, CompilationUnitScope)
55828=Expression:resolveType(BlockScope)
55829=Expression:resolveTypeExpecting(BlockScope, TypeBinding)
55830=Expression:isConstantValueRepresentable(Constant, int, int)
55831=Expression:isTypeReference()
55832=Expression:toTypeReference()
55833=Expression:optimizedBooleanConstant()
55834=Expression:tagAsNeedCheckCast()
55835=Expression:generateOptimizedStringConcatenation(BlockScope, CodeStream, int)
55836=Expression:generateCode(BlockScope, CodeStream, boolean)
55837=Expression:checkUnsafeCast(Scope, TypeBinding, TypeBinding, TypeBinding, boolean)
55838=Expression:analyseCode(BlockScope, FlowContext, FlowInfo)
55839=Expression:computeConversion(Scope, TypeBinding, TypeBinding)
55840=Expression:printExpression(int, StringBuffer)
55841=Expression:tagAsUnnecessaryCast(Scope, TypeBinding)
55842=Expression:printStatement(int, StringBuffer)
55843=Expression:Expression()
55844=Expression:traverse(ASTVisitor, BlockScope)
55845=Expression:getAllInheritedMethods0(ReferenceBinding, ArrayList)
55846=Expression:resolve(BlockScope)
55847=Expression:reportIllegalCast(Scope, TypeBinding, TypeBinding)
55848=ProcessTaskManager:removeNextUnit()
55849=ProcessTaskManager:shutdown()
55850=ProcessTaskManager:run()
55851=ProcessTaskManager:addNextUnit(CompilationUnitDeclaration)
55852=ProcessTaskManager:ProcessTaskManager(Compiler, int)
55853=A:foo()
55854=X03:foo2()
55855=X03:foo(int, int)
55856=WildcardTypeImpl:WildcardTypeImpl(BaseProcessingEnvImpl, WildcardBinding)
55857=WildcardTypeImpl:getKind()
55858=WildcardTypeImpl:getSuperBound()
55859=WildcardTypeImpl:getExtendsBound()
55860=WildcardTypeImpl:accept(TypeVisitor<R, P>, P)
55861=FailureRunView:FailureListCellRenderer:getListCellRendererComponent(JList, Object, int, boolean, boolean)
55862=FailureRunView:FailureListCellRenderer:FailureListCellRenderer()
55863=FailureRunView:FailureListCellRenderer:loadIcons()
55864=FailureRunView:runFinished(Test, TestResult)
55865=FailureRunView:aboutToStart(Test, TestResult)
55866=FailureRunView:FailureRunView(TestRunContext)
55867=FailureRunView:activate()
55868=FailureRunView:revealFailure(Test)
55869=FailureRunView:getSelectedTest()
55870=FailureRunView:testSelected()
55871=FailureRunView:addTab(JTabbedPane)
55872=Overriding:A:g()
55873=Overriding:B:g()
55874=Overriding:D:g()
55875=Overriding:A:f()
55876=Overriding:A:h()
55877=Overriding:B:f()
55878=Overriding:A:j()
55879=Overriding:B:h()
55880=Overriding:D:f()
55881=Overriding:C:h()
55882=Overriding:C:j()
55883=Overriding:D:j()
55884=A:foo()
55885=AnnotationProcessorFactory:supportedAnnotationTypes()
55886=AnnotationProcessorFactory:supportedOptions()
55887=AnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
55888=ExternalPackageFragmentRoot:isExternal()
55889=ExternalPackageFragmentRoot:internalKind()
55890=ExternalPackageFragmentRoot:equals(Object)
55891=ExternalPackageFragmentRoot:getPath()
55892=ExternalPackageFragmentRoot:resource(PackageFragmentRoot)
55893=ExternalPackageFragmentRoot:resourceExists(IResource)
55894=ExternalPackageFragmentRoot:hashCode()
55895=ExternalPackageFragmentRoot:ExternalPackageFragmentRoot(IPath, JavaProject)
55896=ExternalPackageFragmentRoot:determineKind(IResource)
55897=ExternalPackageFragmentRoot:getElementName()
55898=ExternalPackageFragmentRoot:toStringAncestors(StringBuffer)
55899=ExternalPackageFragmentRoot:ExternalPackageFragmentRoot(IResource, IPath, JavaProject)
55900=ExternalPackageFragmentRoot:getUnderlyingResource()
55901=ExternalPackageFragmentRoot:getKind()
55902=X24:foo()
55903=ClassFile:completeMethodInfo(int, int)
55904=ClassFile:addInnerClasses(ReferenceBinding)
55905=ClassFile:addProblemConstructor(AbstractMethodDeclaration, MethodBinding, IProblem[], int)
55906=ClassFile:completeCodeAttributeForSyntheticAccessMethod(SyntheticAccessMethodBinding, int, int[])
55907=ClassFile:generateMethodInfoHeader(MethodBinding)
55908=ClassFile:ClassFile(SourceTypeBinding, ClassFile, boolean)
55909=ClassFile:generateCodeAttributeHeader()
55910=ClassFile:buildAllDirectoriesInto(String, String)
55911=ClassFile:addFieldInfos()
55912=ClassFile:recordEnclosingTypeAttributes(ReferenceBinding)
55913=ClassFile:addProblemMethod(AbstractMethodDeclaration, MethodBinding, IProblem[], int)
55914=ClassFile:recordNestedLocalAttribute(ReferenceBinding)
55915=ClassFile:addAbstractMethod(AbstractMethodDeclaration, MethodBinding)
55916=ClassFile:completeCodeAttributeForMissingAbstractProblemMethod(MethodBinding, int, int[], int)
55917=ClassFile:setForMethodInfos()
55918=ClassFile:addFieldInfo(FieldBinding)
55919=ClassFile:ClassFile()
55920=ClassFile:addSyntheticFieldReadAccessMethod(SyntheticAccessMethodBinding)
55921=ClassFile:completeCodeAttribute(int)
55922=ClassFile:searchLineNumber(int[], int)
55923=ClassFile:completeCodeAttributeForProblemMethod(AbstractMethodDeclaration, MethodBinding, int, int[], int)
55924=ClassFile:addAttributes()
55925=ClassFile:addProblemMethod(AbstractMethodDeclaration, MethodBinding, IProblem[])
55926=ClassFile:addSyntheticConstructorAccessMethod(SyntheticAccessMethodBinding)
55927=ClassFile:addProblemClinit(IProblem[])
55928=ClassFile:completeCodeAttributeForClinit(int, int[], int)
55929=ClassFile:initByteArrays()
55930=ClassFile:addSyntheticFieldWriteAccessMethod(SyntheticAccessMethodBinding)
55931=ClassFile:addMissingAbstractProblemMethod(MethodDeclaration, MethodBinding, IProblem, CompilationResult)
55932=ClassFile:generateMethodInfoAttribute(MethodBinding)
55933=ClassFile:generateMethodInfoHeaderForClinit()
55934=ClassFile:addSyntheticMethodAccessMethod(SyntheticAccessMethodBinding)
55935=ClassFile:addProblemConstructor(AbstractMethodDeclaration, MethodBinding, IProblem[])
55936=ClassFile:generateMissingAbstractMethods(MethodDeclaration[], CompilationResult)
55937=ClassFile:addSpecialMethods()
55938=ClassFile:createProblemType(TypeDeclaration, CompilationResult)
55939=ClassFile:getBytes()
55940=ClassFile:completeCodeAttributeForClinit(int)
55941=ClassFile:fileName()
55942=ClassFile:outerMostEnclosingClassFile()
55943=ClassFile:resizeContents(int)
55944=ClassFile:generateMethodInfoHeader(MethodBinding, int)
55945=ClassFile:getCompoundName()
55946=ClassFile:recordNestedMemberAttribute(ReferenceBinding)
55947=ClassFile:writeToDisk(boolean, String, String, byte[])
55948=ClassFile:addDefaultAbstractMethods()
55949=RecoveredField:add(Statement, int)
55950=RecoveredField:add(TypeDeclaration, int)
55951=RecoveredField:updateParseTree()
55952=RecoveredField:sourceEnd()
55953=RecoveredField:updateOnClosingBrace(int, int)
55954=RecoveredField:toString(int)
55955=RecoveredField:RecoveredField(FieldDeclaration, RecoveredElement, int)
55956=RecoveredField:updatedFieldDeclaration()
55957=RecoveredField:updateSourceEndIfNecessary(int, int)
55958=RecoveredField:RecoveredField(FieldDeclaration, RecoveredElement, int, Parser)
55959=RecoveredField:parseTree()
55960=RecoveredField:updateOnOpeningBrace(int, int)
55961=CA:CB:f()
55962=CA:m()
55963=StackMapFrame:getOffsetDelta(StackMapFrame)
55964=StackMapFrame:addLocal(int, VerificationTypeInfo)
55965=StackMapFrame:addStackItem(VerificationTypeInfo)
55966=StackMapFrame:putLocal(int, VerificationTypeInfo)
55967=StackMapFrame:equals(VerificationTypeInfo, VerificationTypeInfo)
55968=StackMapFrame:print(VerificationTypeInfo[], int)
55969=StackMapFrame:toString()
55970=StackMapFrame:getNumberOfLocals()
55971=StackMapFrame:StackMapFrame(int)
55972=StackMapFrame:duplicate()
55973=StackMapFrame:getIndexOfDifferentLocals(int)
55974=StackMapFrame:getFrameType(StackMapFrame)
55975=StackMapFrame:addStackItem(TypeBinding)
55976=StackMapFrame:numberOfDifferentLocals(StackMapFrame)
55977=StackMapFrame:replaceWithElementType()
55978=StackMapFrame:printFrame(StringBuffer, StackMapFrame)
55979=ReadWriteMonitor:exitRead()
55980=ReadWriteMonitor:exitReadEnterWrite()
55981=ReadWriteMonitor:enterWrite()
55982=ReadWriteMonitor:exitWrite()
55983=ReadWriteMonitor:exitWriteEnterRead()
55984=ReadWriteMonitor:toString()
55985=ReadWriteMonitor:enterRead()
55986=FileGenerationResult:getFile()
55987=FileGenerationResult:isModified()
55988=FileGenerationResult:FileGenerationResult(IFile, boolean)
55989=AnnotationValueTests:suite()
55990=AnnotationValueTests:setupTest()
55991=AnnotationValueTests:addTriggerSource()
55992=AnnotationValueTests:AnnotationValueTests(String)
55993=AnnotationValueTests:testAnnotationValueProcessor()
55994=X05:foo(Object)
55995=F:foo()
55996=TestingEnvironment:waitForAutoBuild()
55997=TestingEnvironment:deleteTmpDirectory()
55998=TestingEnvironment:cleanBuild()
55999=TestingEnvironment:getProblemsFor(IPath, String)
56000=TestingEnvironment:addRequiredProject(IPath, IPath, IPath[], IPath[], boolean)
56001=TestingEnvironment:close()
56002=TestingEnvironment:removePackageFragmentRoot(IPath, String)
56003=TestingEnvironment:addExternalJar(IPath, String, boolean)
56004=TestingEnvironment:handle(Exception)
56005=TestingEnvironment:addClass(IPath, String, String, String)
56006=TestingEnvironment:addRequiredProject(IPath, IPath)
56007=TestingEnvironment:addExternalJar(IPath, String)
56008=TestingEnvironment:getClasspath(IPath)
56009=TestingEnvironment:openWorkspace()
56010=TestingEnvironment:removePackage(IPath, String)
56011=TestingEnvironment:addFolder(IPath, String)
56012=TestingEnvironment:addExternalFolders(IPath, String[])
56013=TestingEnvironment:getTmpDirectory()
56014=TestingEnvironment:addFile(IPath, String, String)
56015=TestingEnvironment:addExternalFolders(IPath, String[], boolean)
56016=TestingEnvironment:getProblems()
56017=TestingEnvironment:getJarRootPath(IPath)
56018=TestingEnvironment:removeProject(IPath)
56019=TestingEnvironment:resetWorkspace()
56020=TestingEnvironment:addProject(IProject)
56021=TestingEnvironment:removeRequiredProject(IPath, IPath)
56022=TestingEnvironment:addLibrary(IPath, IPath, IPath, IPath)
56023=TestingEnvironment:getJavaProject(IPath)
56024=TestingEnvironment:createFolder(IPath)
56025=TestingEnvironment:getWorkspaceRootPath()
56026=TestingEnvironment:addClass(IPath, String, String)
56027=TestingEnvironment:setAutoBuilding(boolean)
56028=TestingEnvironment:createProject(String)
56029=TestingEnvironment:addBinaryClass(IPath, String, String, byte[])
56030=TestingEnvironment:waitForManualRefresh()
56031=TestingEnvironment:addPackage(IPath, String)
56032=TestingEnvironment:addPackageFragmentRoot(IPath, String, IPath[], String)
56033=TestingEnvironment:addRequiredProject(IPath, IPath, boolean)
56034=TestingEnvironment:openEmptyWorkspace()
56035=TestingEnvironment:closeWorkspace()
56036=TestingEnvironment:incrementalBuild()
56037=TestingEnvironment:cleanBuild(String)
56038=TestingEnvironment:removeInternalJar(IPath, String)
56039=TestingEnvironment:setOutputFolder(IPath, String)
56040=TestingEnvironment:addExternalJars(IPath, String[], boolean)
56041=TestingEnvironment:createFile(IPath, byte[])
56042=TestingEnvironment:fullBuild(IPath)
56043=TestingEnvironment:addRequiredProject(IPath, IPath, IPath, int)
56044=TestingEnvironment:removeFile(IPath)
56045=TestingEnvironment:setClasspath(IPath, IClasspathEntry[])
56046=TestingEnvironment:getTaskMarkersFor(IPath)
56047=TestingEnvironment:setup()
56048=TestingEnvironment:addInternalJar(IPath, String, byte[])
56049=TestingEnvironment:getPackagePath(IPath, String)
56050=TestingEnvironment:removeBinaryClass(IPath, String)
56051=TestingEnvironment:getWorkspace()
56052=TestingEnvironment:getPackageFragmentRootPath(IPath, String)
56053=TestingEnvironment:renameCU(IPath, String, String)
56054=TestingEnvironment:fullBuild(String)
56055=TestingEnvironment:addBuilderSpecs(String)
56056=TestingEnvironment:closeProject(IPath)
56057=TestingEnvironment:setExternalOutputFolder(IPath, String, IPath)
56058=TestingEnvironment:addProject(String)
56059=TestingEnvironment:removeExternalJar(IPath, IPath)
56060=TestingEnvironment:deleteResource(IResource)
56061=TestingEnvironment:addExternalJars(IPath, String[])
56062=TestingEnvironment:addClassFolder(IPath, IPath, boolean)
56063=TestingEnvironment:addProject(String, String)
56064=TestingEnvironment:removeEntry(IPath, IPath)
56065=TestingEnvironment:fullBuild()
56066=TestingEnvironment:getProject(IPath)
56067=TestingEnvironment:isAutoBuilding()
56068=TestingEnvironment:checkAssertion(String, boolean)
56069=TestingEnvironment:addEntry(IPath, IClasspathEntry)
56070=TestingEnvironment:addInternalJar(IPath, String, byte[], boolean)
56071=TestingEnvironment:setBuildOrder(String[])
56072=TestingEnvironment:removeFolder(IPath)
56073=TestingEnvironment:openProject(IPath)
56074=TestingEnvironment:incrementalBuild(IPath)
56075=TestingEnvironment:getOutputLocation(IPath)
56076=TestingEnvironment:addBinaryClass(IPath, String, byte[])
56077=TestingEnvironment:removeClass(IPath, String)
56078=TestingEnvironment:addPackageFragmentRoot(IPath, String, IPath[], IPath[], String)
56079=TestingEnvironment:getJavaProject(String)
56080=TestingEnvironment:getProblemsFor(IPath)
56081=TestingEnvironment:addPackageFragmentRoot(IPath, String)
56082=TestingEnvironment:getProject(String)
56083=TestingEnvironment:handleCoreException(CoreException)
56084=SourceField:SourceField(JavaElement, String)
56085=SourceField:isEnumConstant()
56086=SourceField:toStringInfo(int, StringBuffer, Object, boolean)
56087=SourceField:getPrimaryElement(boolean)
56088=SourceField:getKey()
56089=SourceField:getTypeSignature()
56090=SourceField:getHandleMementoDelimiter()
56091=SourceField:equals(Object)
56092=SourceField:resolved(Binding)
56093=SourceField:findNode(org.eclipse.jdt.core.dom.CompilationUnit)
56094=SourceField:getElementType()
56095=SourceField:getConstant()
56096=SourceField:isResolved()
56097=AbortCompilation:updateContext(InvocationSite, CompilationResult)
56098=AbortCompilation:AbortCompilation(boolean, RuntimeException)
56099=AbortCompilation:AbortCompilation(CompilationResult, CategorizedProblem)
56100=AbortCompilation:AbortCompilation()
56101=AbortCompilation:getKey()
56102=AbortCompilation:getMessage()
56103=AbortCompilation:updateContext(ASTNode, CompilationResult)
56104=AbortCompilation:AbortCompilation(CompilationResult, Throwable)
56105=NameQualifiedType:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
56106=NameQualifiedType:getName()
56107=NameQualifiedType:internalAnnotationsProperty()
56108=NameQualifiedType:getNodeType0()
56109=NameQualifiedType:setName(SimpleName)
56110=NameQualifiedType:internalStructuralPropertiesForType(int)
56111=NameQualifiedType:memSize()
56112=NameQualifiedType:subtreeMatch0(ASTMatcher, Object)
56113=NameQualifiedType:getQualifier()
56114=NameQualifiedType:clone0(AST)
56115=NameQualifiedType:setQualifier(Name)
56116=NameQualifiedType:treeSize()
56117=NameQualifiedType:propertyDescriptors(int)
56118=NameQualifiedType:internalGetChildListProperty(ChildListPropertyDescriptor)
56119=NameQualifiedType:NameQualifiedType(AST)
56120=NameQualifiedType:accept0(ASTVisitor)
56121=A:goo()
56122=A:foo(int, int)
56123=StandardVMLauncher:getCommandLine()
56124=StandardVMLauncher:getBatchFileName()
56125=StandardVMLauncher:writeBatchFile(String, Vector)
56126=StandardVMLauncher:buildBootClassPath()
56127=StandardVMLauncher:setBatchFileName(String)
56128=StandardVMLauncher:StandardVMLauncher()
56129=IndexQueryRequestor:acceptIndexMatch(String, SearchPattern, SearchParticipant, AccessRuleSet)
56130=Substitution:substitute(TypeBinding)
56131=X04:test()
56132=AssignmentTest_1_7:AssignmentTest_1_7(String)
56133=AssignmentTest_1_7:testClass()
56134=AssignmentTest_1_7:test001()
56135=AssignmentTest_1_7:getCompilerOptions()
56136=AssignmentTest_1_7:suite()
56137=IConstantPoolEntry:getNameAndTypeIndex()
56138=IConstantPoolEntry:getDoubleValue()
56139=IConstantPoolEntry:getMethodDescriptor()
56140=IConstantPoolEntry:getFloatValue()
56141=IConstantPoolEntry:getMethodName()
56142=IConstantPoolEntry:getStringIndex()
56143=IConstantPoolEntry:getClassInfoName()
56144=IConstantPoolEntry:getNameAndTypeInfoNameIndex()
56145=IConstantPoolEntry:getLongValue()
56146=IConstantPoolEntry:getIntegerValue()
56147=IConstantPoolEntry:getUtf8Length()
56148=IConstantPoolEntry:getUtf8Value()
56149=IConstantPoolEntry:getClassIndex()
56150=IConstantPoolEntry:getStringValue()
56151=IConstantPoolEntry:getKind()
56152=IConstantPoolEntry:getFieldDescriptor()
56153=IConstantPoolEntry:getClassName()
56154=IConstantPoolEntry:getClassInfoNameIndex()
56155=IConstantPoolEntry:getNameAndTypeInfoDescriptorIndex()
56156=IConstantPoolEntry:getFieldName()
56157=X06:foo(int, int)
56158=IDOMType:setSuperclass(String)
56159=IDOMType:getName()
56160=IDOMType:getSuperclass()
56161=IDOMType:getSuperInterfaces()
56162=IDOMType:getTypeParameters()
56163=IDOMType:setEnum(boolean)
56164=IDOMType:addSuperInterface(String)
56165=IDOMType:setSuperInterfaces(String[])
56166=IDOMType:isAnnotation()
56167=IDOMType:setName(String)
56168=IDOMType:setTypeParameters(String[])
56169=IDOMType:isEnum()
56170=IDOMType:isClass()
56171=IDOMType:setClass(boolean)
56172=IDOMType:setAnnotation(boolean)
56173=X:main(String[])
56174=ImportContainerInfo:getChildren()
56175=ShouldNotImplement:ShouldNotImplement(String)
56176=IRuntimeInvisibleAnnotationsAttribute:getAnnotationsNumber()
56177=IRuntimeInvisibleAnnotationsAttribute:getAnnotations()
56178=InternalCompletionContext:getExpectedTypesSignatures()
56179=InternalCompletionContext:getTokenEnd()
56180=InternalCompletionContext:setJavadoc(int)
56181=InternalCompletionContext:isExtended()
56182=InternalCompletionContext:setToken(char[])
56183=InternalCompletionContext:getTokenStart()
56184=InternalCompletionContext:setTokenLocation(int)
56185=InternalCompletionContext:setExpectedTypesKeys(char[][])
56186=InternalCompletionContext:getExpectedTypesKeys()
56187=InternalCompletionContext:isInJavadocFormalReference()
56188=InternalCompletionContext:getVisibleFields()
56189=InternalCompletionContext:getCompletionNodeParent()
56190=InternalCompletionContext:setTokenKind(int)
56191=InternalCompletionContext:isInJavadoc()
56192=InternalCompletionContext:getTokenLocation()
56193=InternalCompletionContext:getEnclosingElement()
56194=InternalCompletionContext:getToken()
56195=InternalCompletionContext:setExpectedTypesSignatures(char[][])
56196=InternalCompletionContext:setTokenRange(int, int, int)
56197=InternalCompletionContext:setExtendedData(ITypeRoot, CompilationUnitDeclaration, LookupEnvironment, Scope, ASTNode, ASTNode, WorkingCopyOwner, CompletionParser)
56198=InternalCompletionContext:getVisibleMethods()
56199=InternalCompletionContext:getVisibleLocalVariables()
56200=InternalCompletionContext:setOffset(int)
56201=InternalCompletionContext:setExtended()
56202=InternalCompletionContext:getOffset()
56203=InternalCompletionContext:getVisibleElements(String)
56204=InternalCompletionContext:isInJavadocText()
56205=InternalCompletionContext:setTokenRange(int, int)
56206=InternalCompletionContext:getTokenKind()
56207=InternalCompletionContext:getCompletionNode()
56208=ImportRewriteTest:testBug194358()
56209=ImportRewriteTest:testOrganizeNoImportsWithTwoLineDelims()
56210=ImportRewriteTest:testRenameImportedClassWithImportedNestedClass()
56211=ImportRewriteTest:newImportsRewrite(CompilationUnit, String[], int, int, boolean)
56212=ImportRewriteTest:testBug376930_5a()
56213=ImportRewriteTest:testFloatingCommentDoesntCauseImportsToMove()
56214=ImportRewriteTest:testBug376930_2()
56215=ImportRewriteTest:testAddImports_bug121428()
56216=ImportRewriteTest:testBug378024i()
56217=ImportRewriteTest:testAddedRemovedImportsAPI()
56218=ImportRewriteTest:testBug376930_5c()
56219=ImportRewriteTest:testAddImportsInVaryingOrder()
56220=ImportRewriteTest:testBug376930_4()
56221=ImportRewriteTest:testBug376930_3a()
56222=ImportRewriteTest:testBug378024g()
56223=ImportRewriteTest:testBug376930()
56224=ImportRewriteTest:testImplicitImportFiltering()
56225=ImportRewriteTest:testAddImports_bug42637()
56226=ImportRewriteTest:testBug376930_5e()
56227=ImportRewriteTest:testNeedsExplicitImport()
56228=ImportRewriteTest:testBug430108_001()
56229=ImportRewriteTest:testBug378024e()
56230=ImportRewriteTest:testBug378024c_1()
56231=ImportRewriteTest:testOrganizeNoImportsWithJavadoc()
56232=ImportRewriteTest:testAddImports6()
56233=ImportRewriteTest:allTests()
56234=ImportRewriteTest:testDuplicateImportsDoNotCountTowardOnDemandThreshold()
56235=ImportRewriteTest:testBug378024b()
56236=ImportRewriteTest:testAddImports4()
56237=ImportRewriteTest:testBug378024()
56238=ImportRewriteTest:testAddStaticImports2()
56239=ImportRewriteTest:testNoEdits()
56240=ImportRewriteTest:testPackageInfo()
56241=ImportRewriteTest:testAddImports2()
56242=ImportRewriteTest:testBug378024e_1()
56243=ImportRewriteTest:testOnDemandWithinType()
56244=ImportRewriteTest:testRemoveImports3()
56245=ImportRewriteTest:testBug378024f_1()
56246=ImportRewriteTest:tearDown()
56247=ImportRewriteTest:testAddImportsMoreEmptyLines()
56248=ImportRewriteTest:testAddAdjacentImportWithCommonPrefixButLongerInitialSegment()
56249=ImportRewriteTest:testOnDemandConflictBetweenTypeAndNestedStaticType()
56250=ImportRewriteTest:testAddWithDuplicateOnDemandImports()
56251=ImportRewriteTest:testRemoveImports1()
56252=ImportRewriteTest:testOtherDuplicateImportsNotDisturbed()
56253=ImportRewriteTest:testOnDemandConflictBetweenStaticFields()
56254=ImportRewriteTest:testAddImportsWithGroupsOfUnmatched2()
56255=ImportRewriteTest:testBug378024h_1()
56256=ImportRewriteTest:createClassStub(String, String, String)
56257=ImportRewriteTest:assertEqualStringIgnoreDelim(String, String)
56258=ImportRewriteTest:assertEqualString(String, String)
56259=ImportRewriteTest:testFloatingCommentPreservedWhenReducingOnDemandAbove()
56260=ImportRewriteTest:testBug378024j()
56261=ImportRewriteTest:createCompilationUnit(String, String)
56262=ImportRewriteTest:testOrganizeNoImportsWithOneLineDelim()
56263=ImportRewriteTest:testBug376930_5b()
56264=ImportRewriteTest:testRemoveImportsWithPackageDocComment()
56265=ImportRewriteTest:createCompilationUnit(String, String, String)
56266=ImportRewriteTest:assertEqualStringsIgnoreOrder(String[], String[])
56267=ImportRewriteTest:testExpandOnDemand()
56268=ImportRewriteTest:testImportStructureWithSignatures()
56269=ImportRewriteTest:testCommentWithinImportDeclaration()
56270=ImportRewriteTest:testBug376930_3()
56271=ImportRewriteTest:testStaticAndNonStaticUnmatchedImports()
56272=ImportRewriteTest:testBug378024h()
56273=ImportRewriteTest:testBug376930_4a()
56274=ImportRewriteTest:testConflictsBetweenOriginalOnDemands()
56275=ImportRewriteTest:testAddWithDuplicateSingleImports()
56276=ImportRewriteTest:testBug376930_5d()
56277=ImportRewriteTest:testImportStructureWithSignatures2()
56278=ImportRewriteTest:testAddImports7()
56279=ImportRewriteTest:testBug378024f()
56280=ImportRewriteTest:testAddImportWithPackageAndTypeOnSameLine()
56281=ImportRewriteTest:testAddImportToCuNotOnClasspath()
56282=ImportRewriteTest:assertAddedAndRemoved(ImportRewrite, String[], String[], String[], String[])
56283=ImportRewriteTest:testUnmatchedImports()
56284=ImportRewriteTest:testBug378024c_2()
56285=ImportRewriteTest:testAddImports5()
56286=ImportRewriteTest:testAddImportIntoMatchAllImportGroup()
56287=ImportRewriteTest:testBug430108_002()
56288=ImportRewriteTest:testBug378024d()
56289=ImportRewriteTest:testBug194358a()
56290=ImportRewriteTest:testBug378024c()
56291=ImportRewriteTest:testAddImports_bug25113()
56292=ImportRewriteTest:testBug252379()
56293=ImportRewriteTest:testAddImports3()
56294=ImportRewriteTest:testAddStaticImports1()
56295=ImportRewriteTest:testAddImportsWithGroupsOfUnmatched1()
56296=ImportRewriteTest:testAddImports_bug23078_usingContext()
56297=ImportRewriteTest:testImportGroupMatchingQualifiedName()
56298=ImportRewriteTest:testAddImports_bug23078()
56299=ImportRewriteTest:newImportsRewrite(ICompilationUnit, String[], int, int, boolean)
56300=ImportRewriteTest:testAddImports1()
56301=ImportRewriteTest:testAddImports_bug24804()
56302=ImportRewriteTest:testDuplicateImportOmittedWhenRestoreExistingImportsIsFalse()
56303=ImportRewriteTest:testAddImportWithCommentBetweenImportsAndType()
56304=ImportRewriteTest:apply(ImportRewrite)
56305=ImportRewriteTest:testFloatingCommentWithBlankLine()
56306=ImportRewriteTest:testReduceExistingOnDemand()
56307=ImportRewriteTest:testBug376930_5()
56308=ImportRewriteTest:ImportRewriteTest(String)
56309=ImportRewriteTest:testAddImportsFromUnnamedPackage()
56310=ImportRewriteTest:testRemoveImports2()
56311=ImportRewriteTest:testBug235253()
56312=ImportRewriteTest:testRemovedImportCommentsAreRemoved()
56313=ImportRewriteTest:testAddImportsNoEmptyLines()
56314=ImportRewriteTest:testReduceNewOnDemand()
56315=ImportRewriteTest:testAddStaticImports3()
56316=ImportRewriteTest:setUp()
56317=ImportRewriteTest:testCuInDefaultPackageWithNoExistingImports()
56318=ImportRewriteTest:suite()
56319=ImportRewriteTest:testPackageDeclarationTrailingComment()
56320=firstClass:firstClass()
56321=Foo:bar()
56322=A:foo()
56323=A:A()
56324=ResolveMethod:foo(int)
56325=ResolveMethod:foo(String)
56326=ResolveMethod:bar()
56327=IDOMPackage:getName()
56328=IDOMPackage:setName(String)
56329=ASTConverterAST3Test:test0180()
56330=ASTConverterAST3Test:internalThrownExceptions(MethodDeclaration)
56331=ASTConverterAST3Test:test0323()
56332=ASTConverterAST3Test:test0369()
56333=ASTConverterAST3Test:test0116()
56334=ASTConverterAST3Test:test0071()
56335=ASTConverterAST3Test:test0018()
56336=ASTConverterAST3Test:test0225()
56337=ASTConverterAST3Test:test0191()
56338=ASTConverterAST3Test:test0334()
56339=ASTConverterAST3Test:test0105()
56340=ASTConverterAST3Test:test0060()
56341=ASTConverterAST3Test:test0007()
56342=ASTConverterAST3Test:test0201()
56343=ASTConverterAST3Test:test0345()
56344=ASTConverterAST3Test:test0095()
56345=ASTConverterAST3Test:test0247()
56346=ASTConverterAST3Test:test0212()
56347=ASTConverterAST3Test:test0129()
56348=ASTConverterAST3Test:test0356()
56349=ASTConverterAST3Test:test0310()
56350=ASTConverterAST3Test:test0084()
56351=ASTConverterAST3Test:test0258()
56352=ASTConverterAST3Test:test0223()
56353=ASTConverterAST3Test:test0118()
56354=ASTConverterAST3Test:test0367()
56355=ASTConverterAST3Test:test0321()
56356=ASTConverterAST3Test:test0073()
56357=ASTConverterAST3Test:test0269()
56358=ASTConverterAST3Test:test0234()
56359=ASTConverterAST3Test:test0107()
56360=ASTConverterAST3Test:test0378()
56361=ASTConverterAST3Test:test0332()
56362=ASTConverterAST3Test:test0160()
56363=ASTConverterAST3Test:test0062()
56364=ASTConverterAST3Test:test0009()
56365=ASTConverterAST3Test:test0245()
56366=ASTConverterAST3Test:test0389()
56367=ASTConverterAST3Test:test0343()
56368=ASTConverterAST3Test:test0051()
56369=ASTConverterAST3Test:test0097()
56370=ASTConverterAST3Test:test0256()
56371=ASTConverterAST3Test:test0210()
56372=ASTConverterAST3Test:test0354()
56373=ASTConverterAST3Test:test0040()
56374=ASTConverterAST3Test:test0086()
56375=ASTConverterAST3Test:test0221()
56376=ASTConverterAST3Test:test0267()
56377=ASTConverterAST3Test:test0365()
56378=ASTConverterAST3Test:test0075()
56379=ASTConverterAST3Test:test0232()
56380=ASTConverterAST3Test:test0278()
56381=ASTConverterAST3Test:test0109()
56382=ASTConverterAST3Test:test0376()
56383=ASTConverterAST3Test:test0162()
56384=ASTConverterAST3Test:test0330()
56385=ASTConverterAST3Test:test0064()
56386=ASTConverterAST3Test:test0243()
56387=ASTConverterAST3Test:test0289()
56388=ASTConverterAST3Test:test0387()
56389=ASTConverterAST3Test:test0151()
56390=ASTConverterAST3Test:test0341()
56391=ASTConverterAST3Test:test0053()
56392=ASTConverterAST3Test:test0099()
56393=ASTConverterAST3Test:test0254()
56394=ASTConverterAST3Test:test0398()
56395=ASTConverterAST3Test:test0140()
56396=ASTConverterAST3Test:test0352()
56397=ASTConverterAST3Test:test0042()
56398=ASTConverterAST3Test:test0088()
56399=ASTConverterAST3Test:test0265()
56400=ASTConverterAST3Test:test0363()
56401=ASTConverterAST3Test:test0031()
56402=ASTConverterAST3Test:test0077()
56403=ASTConverterAST3Test:test0276()
56404=ASTConverterAST3Test:test0020()
56405=ASTConverterAST3Test:test0230()
56406=ASTConverterAST3Test:test0178()
56407=ASTConverterAST3Test:test0374()
56408=ASTConverterAST3Test:test0164()
56409=ASTConverterAST3Test:test0066()
56410=ASTConverterAST3Test:test0287()
56411=ASTConverterAST3Test:test0241()
56412=ASTConverterAST3Test:test0189()
56413=ASTConverterAST3Test:test0385()
56414=ASTConverterAST3Test:test0153()
56415=ASTConverterAST3Test:test0055()
56416=ASTConverterAST3Test:test0298()
56417=ASTConverterAST3Test:test0252()
56418=ASTConverterAST3Test:test0350()
56419=ASTConverterAST3Test:test0396()
56420=ASTConverterAST3Test:test0142()
56421=ASTConverterAST3Test:test0044()
56422=ASTConverterAST3Test:test0286()
56423=ASTConverterAST3Test:test0010()
56424=ASTConverterAST3Test:test0240()
56425=ASTConverterAST3Test:test0188()
56426=ASTConverterAST3Test:test0154()
56427=ASTConverterAST3Test:test0384()
56428=ASTConverterAST3Test:test0056()
56429=ASTConverterAST3Test:test0297()
56430=ASTConverterAST3Test:test0251()
56431=ASTConverterAST3Test:test0199()
56432=ASTConverterAST3Test:test0143()
56433=ASTConverterAST3Test:test0395()
56434=ASTConverterAST3Test:test0045()
56435=ASTConverterAST3Test:test0262()
56436=ASTConverterAST3Test:test0307()
56437=ASTConverterAST3Test:test0132()
56438=ASTConverterAST3Test:test0360()
56439=ASTConverterAST3Test:test0209()
56440=ASTConverterAST3Test:test0034()
56441=ASTConverterAST3Test:test0023()
56442=ASTConverterAST3Test:test0273()
56443=ASTConverterAST3Test:test0175()
56444=ASTConverterAST3Test:test0318()
56445=ASTConverterAST3Test:test0121()
56446=ASTConverterAST3Test:test0167()
56447=ASTConverterAST3Test:test0371()
56448=ASTConverterAST3Test:test0069()
56449=ASTConverterAST3Test:test0012()
56450=ASTConverterAST3Test:test0284()
56451=ASTConverterAST3Test:test0186()
56452=ASTConverterAST3Test:test0329()
56453=ASTConverterAST3Test:test0110()
56454=ASTConverterAST3Test:test0156()
56455=ASTConverterAST3Test:test0382()
56456=ASTConverterAST3Test:test0058()
56457=ASTConverterAST3Test:test0001()
56458=ASTConverterAST3Test:test0295()
56459=ASTConverterAST3Test:test0197()
56460=ASTConverterAST3Test:test0145()
56461=ASTConverterAST3Test:test0393()
56462=ASTConverterAST3Test:test0047()
56463=ASTConverterAST3Test:test0260()
56464=ASTConverterAST3Test:test0305()
56465=ASTConverterAST3Test:test0134()
56466=ASTConverterAST3Test:test0207()
56467=ASTConverterAST3Test:test0036()
56468=ASTConverterAST3Test:test0025()
56469=ASTConverterAST3Test:test0271()
56470=ASTConverterAST3Test:test0173()
56471=ASTConverterAST3Test:test0316()
56472=ASTConverterAST3Test:test0169()
56473=ASTConverterAST3Test:test0123()
56474=ASTConverterAST3Test:test0218()
56475=ASTConverterAST3Test:test0014()
56476=ASTConverterAST3Test:test0282()
56477=ASTConverterAST3Test:test0184()
56478=ASTConverterAST3Test:test0327()
56479=ASTConverterAST3Test:test0158()
56480=ASTConverterAST3Test:test0234_2()
56481=ASTConverterAST3Test:test0112()
56482=ASTConverterAST3Test:test0229()
56483=ASTConverterAST3Test:test0380()
56484=ASTConverterAST3Test:test0003()
56485=ASTConverterAST3Test:test0049()
56486=ASTConverterAST3Test:test0293()
56487=ASTConverterAST3Test:test0195()
56488=ASTConverterAST3Test:test0147()
56489=ASTConverterAST3Test:test0338()
56490=ASTConverterAST3Test:test0101()
56491=ASTConverterAST3Test:test0391()
56492=ASTConverterAST3Test:test0038()
56493=ASTConverterAST3Test:suite()
56494=ASTConverterAST3Test:test0303()
56495=ASTConverterAST3Test:test0136()
56496=ASTConverterAST3Test:test0349()
56497=ASTConverterAST3Test:test0091()
56498=ASTConverterAST3Test:test0205()
56499=ASTConverterAST3Test:test0171()
56500=ASTConverterAST3Test:test0314()
56501=ASTConverterAST3Test:test0125()
56502=ASTConverterAST3Test:test0080()
56503=ASTConverterAST3Test:test0216()
56504=ASTConverterAST3Test:test0027()
56505=ASTConverterAST3Test:test0182()
56506=ASTConverterAST3Test:test0280()
56507=ASTConverterAST3Test:test0325()
56508=ASTConverterAST3Test:test0114()
56509=ASTConverterAST3Test:test0016()
56510=ASTConverterAST3Test:test0227()
56511=ASTConverterAST3Test:test0193()
56512=ASTConverterAST3Test:test0336()
56513=ASTConverterAST3Test:test0291()
56514=ASTConverterAST3Test:test0149()
56515=ASTConverterAST3Test:test0103()
56516=ASTConverterAST3Test:test0005()
56517=ASTConverterAST3Test:test0238()
56518=ASTConverterAST3Test:test0301()
56519=ASTConverterAST3Test:test0347()
56520=ASTConverterAST3Test:test0138()
56521=ASTConverterAST3Test:test0093()
56522=ASTConverterAST3Test:test0203()
56523=ASTConverterAST3Test:test0249()
56524=ASTConverterAST3Test:test0312()
56525=ASTConverterAST3Test:test0358()
56526=ASTConverterAST3Test:test0127()
56527=ASTConverterAST3Test:test0082()
56528=ASTConverterAST3Test:test0214()
56529=ASTConverterAST3Test:test0029()
56530=ASTConverterAST3Test:test0346()
56531=ASTConverterAST3Test:test0139()
56532=ASTConverterAST3Test:test0094()
56533=ASTConverterAST3Test:test0300()
56534=ASTConverterAST3Test:test0202()
56535=ASTConverterAST3Test:test0248()
56536=ASTConverterAST3Test:test0357()
56537=ASTConverterAST3Test:test0128()
56538=ASTConverterAST3Test:test0083()
56539=ASTConverterAST3Test:test0311()
56540=ASTConverterAST3Test:test0213()
56541=ASTConverterAST3Test:test0259()
56542=ASTConverterAST3Test:test0368()
56543=ASTConverterAST3Test:test0117()
56544=ASTConverterAST3Test:test0072()
56545=ASTConverterAST3Test:test0322()
56546=ASTConverterAST3Test:test0019()
56547=ASTConverterAST3Test:test0224()
56548=ASTConverterAST3Test:test0190()
56549=ASTConverterAST3Test:test0379()
56550=ASTConverterAST3Test:test0106()
56551=ASTConverterAST3Test:test0333()
56552=ASTConverterAST3Test:test0061()
56553=ASTConverterAST3Test:test0008()
56554=ASTConverterAST3Test:test0235()
56555=ASTConverterAST3Test:ASTConverterAST3Test(String)
56556=ASTConverterAST3Test:test0200()
56557=ASTConverterAST3Test:test0344()
56558=ASTConverterAST3Test:test0050()
56559=ASTConverterAST3Test:test0096()
56560=ASTConverterAST3Test:test0246()
56561=ASTConverterAST3Test:test0211()
56562=ASTConverterAST3Test:test0355()
56563=ASTConverterAST3Test:test0085()
56564=ASTConverterAST3Test:test0257()
56565=ASTConverterAST3Test:test0222()
56566=ASTConverterAST3Test:test0119()
56567=ASTConverterAST3Test:test0366()
56568=ASTConverterAST3Test:test0320()
56569=ASTConverterAST3Test:test0074()
56570=ASTConverterAST3Test:test0268()
56571=ASTConverterAST3Test:test0233()
56572=ASTConverterAST3Test:test0108()
56573=ASTConverterAST3Test:test0377()
56574=ASTConverterAST3Test:test0161()
56575=ASTConverterAST3Test:test0331()
56576=ASTConverterAST3Test:test0063()
56577=ASTConverterAST3Test:test0279()
56578=ASTConverterAST3Test:test0244()
56579=ASTConverterAST3Test:test0388()
56580=ASTConverterAST3Test:test0342()
56581=ASTConverterAST3Test:test0150()
56582=ASTConverterAST3Test:test0052()
56583=ASTConverterAST3Test:test0098()
56584=ASTConverterAST3Test:test0255()
56585=ASTConverterAST3Test:test0399()
56586=ASTConverterAST3Test:test0353()
56587=ASTConverterAST3Test:test0041()
56588=ASTConverterAST3Test:test0087()
56589=ASTConverterAST3Test:test0220()
56590=ASTConverterAST3Test:test0266()
56591=ASTConverterAST3Test:test0364()
56592=ASTConverterAST3Test:test0030()
56593=ASTConverterAST3Test:test0076()
56594=ASTConverterAST3Test:test0231()
56595=ASTConverterAST3Test:test0277()
56596=ASTConverterAST3Test:test0179()
56597=ASTConverterAST3Test:test0375()
56598=ASTConverterAST3Test:test0163()
56599=ASTConverterAST3Test:test0065()
56600=ASTConverterAST3Test:test0242()
56601=ASTConverterAST3Test:test0288()
56602=ASTConverterAST3Test:test0340()
56603=ASTConverterAST3Test:test0386()
56604=ASTConverterAST3Test:test0152()
56605=ASTConverterAST3Test:test0054()
56606=ASTConverterAST3Test:test0253()
56607=ASTConverterAST3Test:test0299()
56608=ASTConverterAST3Test:test0351()
56609=ASTConverterAST3Test:test0397()
56610=ASTConverterAST3Test:test0141()
56611=ASTConverterAST3Test:test0043()
56612=ASTConverterAST3Test:test0089()
56613=ASTConverterAST3Test:test0264()
56614=ASTConverterAST3Test:test0309()
56615=ASTConverterAST3Test:test0362()
56616=ASTConverterAST3Test:test0130()
56617=ASTConverterAST3Test:test0032()
56618=ASTConverterAST3Test:test0078()
56619=ASTConverterAST3Test:test0275()
56620=ASTConverterAST3Test:test0021()
56621=ASTConverterAST3Test:test0177()
56622=ASTConverterAST3Test:test0165()
56623=ASTConverterAST3Test:test0373()
56624=ASTConverterAST3Test:test0067()
56625=ASTConverterAST3Test:test0263()
56626=ASTConverterAST3Test:test0308()
56627=ASTConverterAST3Test:test0361()
56628=ASTConverterAST3Test:test0131()
56629=ASTConverterAST3Test:test0033()
56630=ASTConverterAST3Test:test0079()
56631=ASTConverterAST3Test:test0022()
56632=ASTConverterAST3Test:test0274()
56633=ASTConverterAST3Test:test0176()
56634=ASTConverterAST3Test:test0319()
56635=ASTConverterAST3Test:test0166()
56636=ASTConverterAST3Test:test0120()
56637=ASTConverterAST3Test:test0372()
56638=ASTConverterAST3Test:test0068()
56639=ASTConverterAST3Test:test0011()
56640=ASTConverterAST3Test:test0285()
56641=ASTConverterAST3Test:test0187()
56642=ASTConverterAST3Test:test0155()
56643=ASTConverterAST3Test:test0383()
56644=ASTConverterAST3Test:test0057()
56645=ASTConverterAST3Test:test0250()
56646=ASTConverterAST3Test:test0296()
56647=ASTConverterAST3Test:test0198()
56648=ASTConverterAST3Test:test0144()
56649=ASTConverterAST3Test:test0394()
56650=ASTConverterAST3Test:test0046()
56651=ASTConverterAST3Test:test0261()
56652=ASTConverterAST3Test:test0306()
56653=ASTConverterAST3Test:test0133()
56654=ASTConverterAST3Test:test0208()
56655=ASTConverterAST3Test:test0035()
56656=ASTConverterAST3Test:test0024()
56657=ASTConverterAST3Test:test0272()
56658=ASTConverterAST3Test:test0174()
56659=ASTConverterAST3Test:test0317()
56660=ASTConverterAST3Test:test0122()
56661=ASTConverterAST3Test:test0168()
56662=ASTConverterAST3Test:test0370()
56663=ASTConverterAST3Test:test0219()
56664=ASTConverterAST3Test:test0013()
56665=ASTConverterAST3Test:test0059()
56666=ASTConverterAST3Test:test0283()
56667=ASTConverterAST3Test:test0185()
56668=ASTConverterAST3Test:test0328()
56669=ASTConverterAST3Test:test0111()
56670=ASTConverterAST3Test:test0157()
56671=ASTConverterAST3Test:test0381()
56672=ASTConverterAST3Test:setUpSuite()
56673=ASTConverterAST3Test:test0002()
56674=ASTConverterAST3Test:test0048()
56675=ASTConverterAST3Test:test0294()
56676=ASTConverterAST3Test:test0196()
56677=ASTConverterAST3Test:test0339()
56678=ASTConverterAST3Test:test0100()
56679=ASTConverterAST3Test:test0146()
56680=ASTConverterAST3Test:test0392()
56681=ASTConverterAST3Test:test0037()
56682=ASTConverterAST3Test:test0304()
56683=ASTConverterAST3Test:test0090()
56684=ASTConverterAST3Test:test0135()
56685=ASTConverterAST3Test:test0206()
56686=ASTConverterAST3Test:test0172()
56687=ASTConverterAST3Test:test0270()
56688=ASTConverterAST3Test:test0315()
56689=ASTConverterAST3Test:test0124()
56690=ASTConverterAST3Test:test0026()
56691=ASTConverterAST3Test:test0217()
56692=ASTConverterAST3Test:test0183()
56693=ASTConverterAST3Test:test0281()
56694=ASTConverterAST3Test:test0326()
56695=ASTConverterAST3Test:test0159()
56696=ASTConverterAST3Test:test0113()
56697=ASTConverterAST3Test:componentType(ArrayType)
56698=ASTConverterAST3Test:test0228()
56699=ASTConverterAST3Test:test0015()
56700=ASTConverterAST3Test:test0292()
56701=ASTConverterAST3Test:test0194()
56702=ASTConverterAST3Test:test0337()
56703=ASTConverterAST3Test:test0148()
56704=ASTConverterAST3Test:test0102()
56705=ASTConverterAST3Test:test0239()
56706=ASTConverterAST3Test:test0390()
56707=ASTConverterAST3Test:test0004()
56708=ASTConverterAST3Test:test0039()
56709=ASTConverterAST3Test:test0302()
56710=ASTConverterAST3Test:test0348()
56711=ASTConverterAST3Test:test0137()
56712=ASTConverterAST3Test:test0092()
56713=ASTConverterAST3Test:test0204()
56714=ASTConverterAST3Test:test0170()
56715=ASTConverterAST3Test:test0313()
56716=ASTConverterAST3Test:test0359()
56717=ASTConverterAST3Test:test0126()
56718=ASTConverterAST3Test:test0081()
56719=ASTConverterAST3Test:test0400()
56720=ASTConverterAST3Test:internalSetExtraDimensions(VariableDeclarationFragment, int)
56721=ASTConverterAST3Test:test0215()
56722=ASTConverterAST3Test:test0028()
56723=ASTConverterAST3Test:test0181()
56724=ASTConverterAST3Test:test0324()
56725=ASTConverterAST3Test:test0115()
56726=ASTConverterAST3Test:test0070()
56727=ASTConverterAST3Test:test0017()
56728=ASTConverterAST3Test:test0226()
56729=ASTConverterAST3Test:test0192()
56730=ASTConverterAST3Test:test0290()
56731=ASTConverterAST3Test:test0335()
56732=ASTConverterAST3Test:test0104()
56733=ASTConverterAST3Test:test0006()
56734=ASTConverterAST3Test:test0237()
56735=InnerClassInfo:getSourceName()
56736=InnerClassInfo:InnerClassInfo(byte, int, int)
56737=InnerClassInfo:initialize()
56738=InnerClassInfo:toString()
56739=InnerClassInfo:getEnclosingTypeName()
56740=InnerClassInfo:getName()
56741=InnerClassInfo:getModifiers()
56742=CompilationParticipantResult:hasAnnotations()
56743=CompilationParticipantResult:getContents()
56744=CompilationParticipantResult:recordNewProblems(CategorizedProblem[])
56745=CompilationParticipantResult:toString()
56746=CompilationParticipantResult:getFile()
56747=CompilationParticipantResult:recordDependencies(String[])
56748=CompilationParticipantResult:CompilationParticipantResult(SourceFile)
56749=CompilationParticipantResult:reset(boolean)
56750=CompilationParticipantResult:recordDeletedGeneratedFiles(IFile[])
56751=CompilationParticipantResult:recordAddedGeneratedFiles(IFile[])
56752=A:thisIsAMethodWithAVeryLongName(long, int, String, Object)
56753=Test:bar(String)
56754=Test:foo(int[])
56755=Test:main(String[])
56756=A:foo()
56757=JavadocReturnStatement:resolve(BlockScope)
56758=JavadocReturnStatement:traverse(ASTVisitor, BlockScope)
56759=JavadocReturnStatement:JavadocReturnStatement(int, int, char[])
56760=Foo:m1()
56761=firstClass:myMethod()
56762=Jsr14Test:getCompilerOptions()
56763=Jsr14Test:testClass()
56764=Jsr14Test:suite()
56765=Jsr14Test:test1()
56766=Jsr14Test:Jsr14Test(String)
56767=CancelCounter:setCanceled(boolean)
56768=CancelCounter:isCanceled()
56769=CancelCounter:subTask(String)
56770=CancelCounter:worked(int)
56771=CancelCounter:done()
56772=CancelCounter:internalWorked(double)
56773=CancelCounter:beginTask(String, int)
56774=CancelCounter:setTaskName(String)
56775=TypeDeclaration:hasErrors()
56776=TypeDeclaration:analyseCode(ClassScope)
56777=TypeDeclaration:updateMaxFieldCount()
56778=TypeDeclaration:printBody(int, StringBuffer)
56779=TypeDeclaration:analyseCode(BlockScope, FlowContext, FlowInfo)
56780=TypeDeclaration:addMissingAbstractMethodFor(MethodBinding)
56781=TypeDeclaration:compilationResult()
56782=TypeDeclaration:declarationOf(MethodBinding)
56783=TypeDeclaration:analyseCode(ClassScope, FlowContext, FlowInfo)
56784=TypeDeclaration:internalAnalyseCode(FlowContext, FlowInfo)
56785=TypeDeclaration:record(FunctionalExpression)
56786=TypeDeclaration:needClassInitMethod()
56787=TypeDeclaration:checkConstructors(Parser)
56788=TypeDeclaration:createDefaultConstructorWithBinding(MethodBinding, boolean)
56789=TypeDeclaration:getCompilationUnitDeclaration()
56790=TypeDeclaration:declarationOf(MemberTypeBinding)
56791=TypeDeclaration:manageEnclosingInstanceAccessIfNecessary(BlockScope, FlowInfo)
56792=TypeDeclaration:generateCode(CompilationUnitScope)
56793=TypeDeclaration:isPackageInfo()
56794=TypeDeclaration:resolve(CompilationUnitScope)
56795=TypeDeclaration:resolve(ClassScope)
56796=TypeDeclaration:printStatement(int, StringBuffer)
56797=TypeDeclaration:declarationOf(FieldBinding)
56798=TypeDeclaration:traverse(ASTVisitor, BlockScope)
56799=TypeDeclaration:TypeDeclaration(CompilationResult)
56800=TypeDeclaration:tagAsHavingIgnoredMandatoryErrors(int)
56801=TypeDeclaration:createDefaultConstructor(boolean, boolean)
56802=TypeDeclaration:addClinit()
56803=TypeDeclaration:resolve(BlockScope)
56804=TypeDeclaration:declarationOfType(char[][])
56805=TypeDeclaration:parseMethods(Parser, CompilationUnitDeclaration)
56806=TypeDeclaration:printHeader(int, StringBuffer)
56807=TypeDeclaration:print(int, StringBuffer)
56808=TypeDeclaration:abort(int, CategorizedProblem)
56809=TypeDeclaration:generateCode(ClassFile)
56810=TypeDeclaration:resolve()
56811=TypeDeclaration:kind(int)
56812=TypeDeclaration:traverse(ASTVisitor, ClassScope)
56813=TypeDeclaration:generateCode(ClassScope, ClassFile)
56814=TypeDeclaration:generateCode(BlockScope, CodeStream)
56815=TypeDeclaration:traverse(ASTVisitor, CompilationUnitScope)
56816=TypeDeclaration:analyseCode(CompilationUnitScope)
56817=TypeDeclaration:manageEnclosingInstanceAccessIfNecessary(ClassScope, FlowInfo)
56818=TypeDeclaration:tagAsHavingErrors()
56819=TypeDeclaration:isSecondary()
56820=ASTConverterAST8Test:test0306()
56821=ASTConverterAST8Test:test0261()
56822=ASTConverterAST8Test:test0054()
56823=ASTConverterAST8Test:test0208()
56824=ASTConverterAST8Test:test0152()
56825=ASTConverterAST8Test:test0198()
56826=ASTConverterAST8Test:test0250()
56827=ASTConverterAST8Test:test0065()
56828=ASTConverterAST8Test:test0296()
56829=ASTConverterAST8Test:test0394()
56830=ASTConverterAST8Test:test0163()
56831=ASTConverterAST8Test:test0078()
56832=ASTConverterAST8Test:test0285()
56833=ASTConverterAST8Test:test0032()
56834=ASTConverterAST8Test:test0130()
56835=ASTConverterAST8Test:test0383()
56836=ASTConverterAST8Test:test0176()
56837=ASTConverterAST8Test:test0274()
56838=ASTConverterAST8Test:test0319()
56839=ASTConverterAST8Test:test0089()
56840=ASTConverterAST8Test:test0043()
56841=ASTConverterAST8Test:test0372()
56842=ASTConverterAST8Test:test0141()
56843=ASTConverterAST8Test:test0187()
56844=ASTConverterAST8Test:test0308()
56845=ASTConverterAST8Test:test0263()
56846=ASTConverterAST8Test:test0056()
56847=ASTConverterAST8Test:test0010()
56848=ASTConverterAST8Test:test0361()
56849=ASTConverterAST8Test:test0154()
56850=ASTConverterAST8Test:test0252()
56851=ASTConverterAST8Test:test0298()
56852=ASTConverterAST8Test:test0067()
56853=ASTConverterAST8Test:test0021()
56854=ASTConverterAST8Test:test0350()
56855=ASTConverterAST8Test:test0396()
56856=ASTConverterAST8Test:test0165()
56857=ASTConverterAST8Test:test0241()
56858=ASTConverterAST8Test:test0287()
56859=ASTConverterAST8Test:test0034()
56860=ASTConverterAST8Test:test0132()
56861=ASTConverterAST8Test:test0178()
56862=ASTConverterAST8Test:test0385()
56863=ASTConverterAST8Test:test0045()
56864=ASTConverterAST8Test:test0230()
56865=ASTConverterAST8Test:test0400()
56866=ASTConverterAST8Test:test0276()
56867=ASTConverterAST8Test:test0374()
56868=ASTConverterAST8Test:test0189()
56869=ASTConverterAST8Test:test0143()
56870=ASTConverterAST8Test:test0012()
56871=ASTConverterAST8Test:test0058()
56872=ASTConverterAST8Test:test0265()
56873=ASTConverterAST8Test:test0110()
56874=ASTConverterAST8Test:test0156()
56875=ASTConverterAST8Test:test0363()
56876=ASTConverterAST8Test:test0023()
56877=ASTConverterAST8Test:test0069()
56878=ASTConverterAST8Test:test0254()
56879=ASTConverterAST8Test:test0121()
56880=ASTConverterAST8Test:test0167()
56881=ASTConverterAST8Test:test0352()
56882=ASTConverterAST8Test:test0398()
56883=ASTConverterAST8Test:test0289()
56884=ASTConverterAST8Test:test0036()
56885=ASTConverterAST8Test:test0243()
56886=ASTConverterAST8Test:test0341()
56887=ASTConverterAST8Test:test0134()
56888=ASTConverterAST8Test:test0387()
56889=ASTConverterAST8Test:test0001()
56890=ASTConverterAST8Test:test0047()
56891=ASTConverterAST8Test:test0232()
56892=ASTConverterAST8Test:test0278()
56893=ASTConverterAST8Test:test0145()
56894=ASTConverterAST8Test:test0330()
56895=ASTConverterAST8Test:test0376()
56896=ASTConverterAST8Test:test0014()
56897=ASTConverterAST8Test:test0221()
56898=ASTConverterAST8Test:test0267()
56899=ASTConverterAST8Test:setUpSuite()
56900=ASTConverterAST8Test:test0158()
56901=ASTConverterAST8Test:test0365()
56902=ASTConverterAST8Test:test0112()
56903=ASTConverterAST8Test:test0025()
56904=ASTConverterAST8Test:test0210()
56905=ASTConverterAST8Test:test0256()
56906=ASTConverterAST8Test:test0169()
56907=ASTConverterAST8Test:test0354()
56908=ASTConverterAST8Test:test0123()
56909=ASTConverterAST8Test:test0038()
56910=ASTConverterAST8Test:test0245()
56911=ASTConverterAST8Test:test0136()
56912=ASTConverterAST8Test:test0343()
56913=ASTConverterAST8Test:test0389()
56914=ASTConverterAST8Test:test0003()
56915=ASTConverterAST8Test:test0049()
56916=ASTConverterAST8Test:test0234()
56917=ASTConverterAST8Test:test0147()
56918=ASTConverterAST8Test:test0332()
56919=ASTConverterAST8Test:test0378()
56920=ASTConverterAST8Test:test0101()
56921=ASTConverterAST8Test:test0039()
56922=ASTConverterAST8Test:test0092()
56923=ASTConverterAST8Test:test0200()
56924=ASTConverterAST8Test:test0246()
56925=ASTConverterAST8Test:test0137()
56926=ASTConverterAST8Test:test0344()
56927=ASTConverterAST8Test:test0004()
56928=ASTConverterAST8Test:test0235()
56929=ASTConverterAST8Test:test0148()
56930=ASTConverterAST8Test:test0333()
56931=ASTConverterAST8Test:test0379()
56932=ASTConverterAST8Test:test0102()
56933=ASTConverterAST8Test:test0017()
56934=ASTConverterAST8Test:test0070()
56935=ASTConverterAST8Test:test0224()
56936=ASTConverterAST8Test:test0322()
56937=ASTConverterAST8Test:test0368()
56938=ASTConverterAST8Test:test0115()
56939=ASTConverterAST8Test:test0028()
56940=ASTConverterAST8Test:test0190()
56941=ASTConverterAST8Test:test0081()
56942=ASTConverterAST8Test:test0259()
56943=ASTConverterAST8Test:test0213()
56944=ASTConverterAST8Test:test0357()
56945=ASTConverterAST8Test:test0311()
56946=ASTConverterAST8Test:test0126()
56947=ASTConverterAST8Test:test0248()
56948=ASTConverterAST8Test:test0094()
56949=ASTConverterAST8Test:test0202()
56950=ASTConverterAST8Test:test0300()
56951=ASTConverterAST8Test:test0346()
56952=ASTConverterAST8Test:test0139()
56953=ASTConverterAST8Test:test0192()
56954=ASTConverterAST8Test:test0006()
56955=ASTConverterAST8Test:test0237()
56956=ASTConverterAST8Test:test0290()
56957=ASTConverterAST8Test:test0104()
56958=ASTConverterAST8Test:test0335()
56959=ASTConverterAST8Test:test0019()
56960=ASTConverterAST8Test:test0226()
56961=ASTConverterAST8Test:test0072()
56962=ASTConverterAST8Test:test0117()
56963=ASTConverterAST8Test:test0170()
56964=ASTConverterAST8Test:test0324()
56965=ASTConverterAST8Test:test0083()
56966=ASTConverterAST8Test:test0215()
56967=ASTConverterAST8Test:test0128()
56968=ASTConverterAST8Test:test0359()
56969=ASTConverterAST8Test:test0181()
56970=ASTConverterAST8Test:test0313()
56971=ASTConverterAST8Test:test0050()
56972=ASTConverterAST8Test:test0096()
56973=ASTConverterAST8Test:test0204()
56974=ASTConverterAST8Test:test0194()
56975=ASTConverterAST8Test:test0348()
56976=ASTConverterAST8Test:test0302()
56977=ASTConverterAST8Test:test0008()
56978=ASTConverterAST8Test:test0061()
56979=ASTConverterAST8Test:test0239()
56980=ASTConverterAST8Test:test0292()
56981=ASTConverterAST8Test:test0390()
56982=ASTConverterAST8Test:test0106()
56983=ASTConverterAST8Test:test0337()
56984=ASTConverterAST8Test:test0119()
56985=ASTConverterAST8Test:test0228()
56986=ASTConverterAST8Test:test0281()
56987=ASTConverterAST8Test:test0074()
56988=ASTConverterAST8Test:test0172()
56989=ASTConverterAST8Test:suite()
56990=ASTConverterAST8Test:test0326()
56991=ASTConverterAST8Test:test0270()
56992=ASTConverterAST8Test:test0217()
56993=ASTConverterAST8Test:test0085()
56994=ASTConverterAST8Test:test0183()
56995=ASTConverterAST8Test:test0315()
56996=ASTConverterAST8Test:test0098()
56997=ASTConverterAST8Test:test0206()
56998=ASTConverterAST8Test:test0052()
56999=ASTConverterAST8Test:ASTConverterAST8Test(String)
57000=ASTConverterAST8Test:test0150()
57001=ASTConverterAST8Test:test0304()
57002=ASTConverterAST8Test:test0196()
57003=ASTConverterAST8Test:test0339()
57004=ASTConverterAST8Test:test0108()
57005=ASTConverterAST8Test:test0294()
57006=ASTConverterAST8Test:test0063()
57007=ASTConverterAST8Test:test0392()
57008=ASTConverterAST8Test:test0161()
57009=ASTConverterAST8Test:test0328()
57010=ASTConverterAST8Test:test0283()
57011=ASTConverterAST8Test:test0030()
57012=ASTConverterAST8Test:test0076()
57013=ASTConverterAST8Test:test0381()
57014=ASTConverterAST8Test:test0174()
57015=ASTConverterAST8Test:test0272()
57016=ASTConverterAST8Test:test0317()
57017=ASTConverterAST8Test:test0087()
57018=ASTConverterAST8Test:test0041()
57019=ASTConverterAST8Test:test0219()
57020=ASTConverterAST8Test:test0370()
57021=ASTConverterAST8Test:test0185()
57022=ASTConverterAST8Test:test0329()
57023=ASTConverterAST8Test:test0031()
57024=ASTConverterAST8Test:test0077()
57025=ASTConverterAST8Test:test0284()
57026=ASTConverterAST8Test:test0382()
57027=ASTConverterAST8Test:test0175()
57028=ASTConverterAST8Test:test0273()
57029=ASTConverterAST8Test:test0318()
57030=ASTConverterAST8Test:test0088()
57031=ASTConverterAST8Test:test0042()
57032=ASTConverterAST8Test:test0371()
57033=ASTConverterAST8Test:test0140()
57034=ASTConverterAST8Test:test0186()
57035=ASTConverterAST8Test:test0262()
57036=ASTConverterAST8Test:test0307()
57037=ASTConverterAST8Test:test0055()
57038=ASTConverterAST8Test:test0360()
57039=ASTConverterAST8Test:test0199()
57040=ASTConverterAST8Test:internalThrownExceptions(MethodDeclaration)
57041=ASTConverterAST8Test:test0209()
57042=ASTConverterAST8Test:test0153()
57043=ASTConverterAST8Test:test0251()
57044=ASTConverterAST8Test:test0020()
57045=ASTConverterAST8Test:test0066()
57046=ASTConverterAST8Test:test0297()
57047=ASTConverterAST8Test:test0395()
57048=ASTConverterAST8Test:test0164()
57049=ASTConverterAST8Test:test0079()
57050=ASTConverterAST8Test:test0240()
57051=ASTConverterAST8Test:test0033()
57052=ASTConverterAST8Test:test0286()
57053=ASTConverterAST8Test:test0384()
57054=ASTConverterAST8Test:test0131()
57055=ASTConverterAST8Test:test0177()
57056=ASTConverterAST8Test:test0275()
57057=ASTConverterAST8Test:test0401()
57058=ASTConverterAST8Test:test0044()
57059=ASTConverterAST8Test:test0188()
57060=ASTConverterAST8Test:test0373()
57061=ASTConverterAST8Test:test0234_2()
57062=ASTConverterAST8Test:test0142()
57063=ASTConverterAST8Test:test0264()
57064=ASTConverterAST8Test:test0309()
57065=ASTConverterAST8Test:test0057()
57066=ASTConverterAST8Test:test0011()
57067=ASTConverterAST8Test:test0155()
57068=ASTConverterAST8Test:test0362()
57069=ASTConverterAST8Test:test0253()
57070=ASTConverterAST8Test:test0299()
57071=ASTConverterAST8Test:test0068()
57072=ASTConverterAST8Test:test0022()
57073=ASTConverterAST8Test:test0120()
57074=ASTConverterAST8Test:test0166()
57075=ASTConverterAST8Test:test0351()
57076=ASTConverterAST8Test:test0397()
57077=ASTConverterAST8Test:test0035()
57078=ASTConverterAST8Test:test0242()
57079=ASTConverterAST8Test:test0288()
57080=ASTConverterAST8Test:test0340()
57081=ASTConverterAST8Test:test0179()
57082=ASTConverterAST8Test:test0386()
57083=ASTConverterAST8Test:test0133()
57084=ASTConverterAST8Test:test0231()
57085=ASTConverterAST8Test:test0046()
57086=ASTConverterAST8Test:test0277()
57087=ASTConverterAST8Test:test0144()
57088=ASTConverterAST8Test:test0375()
57089=ASTConverterAST8Test:test0013()
57090=ASTConverterAST8Test:test0059()
57091=ASTConverterAST8Test:test0220()
57092=ASTConverterAST8Test:test0266()
57093=ASTConverterAST8Test:test0157()
57094=ASTConverterAST8Test:test0364()
57095=ASTConverterAST8Test:test0111()
57096=ASTConverterAST8Test:test0024()
57097=ASTConverterAST8Test:test0255()
57098=ASTConverterAST8Test:test0168()
57099=ASTConverterAST8Test:test0353()
57100=ASTConverterAST8Test:test0399()
57101=ASTConverterAST8Test:test0122()
57102=ASTConverterAST8Test:test0037()
57103=ASTConverterAST8Test:test0244()
57104=ASTConverterAST8Test:test0342()
57105=ASTConverterAST8Test:test0388()
57106=ASTConverterAST8Test:test0135()
57107=ASTConverterAST8Test:test0002()
57108=ASTConverterAST8Test:test0048()
57109=ASTConverterAST8Test:test0233()
57110=ASTConverterAST8Test:test0279()
57111=ASTConverterAST8Test:test0146()
57112=ASTConverterAST8Test:test0331()
57113=ASTConverterAST8Test:test0100()
57114=ASTConverterAST8Test:test0377()
57115=ASTConverterAST8Test:test0015()
57116=ASTConverterAST8Test:test0222()
57117=ASTConverterAST8Test:test0268()
57118=ASTConverterAST8Test:test0159()
57119=ASTConverterAST8Test:test0320()
57120=ASTConverterAST8Test:test0113()
57121=ASTConverterAST8Test:test0366()
57122=ASTConverterAST8Test:test0026()
57123=ASTConverterAST8Test:test0211()
57124=ASTConverterAST8Test:test0257()
57125=ASTConverterAST8Test:test0090()
57126=ASTConverterAST8Test:test0124()
57127=ASTConverterAST8Test:test0355()
57128=ASTConverterAST8Test:test0016()
57129=ASTConverterAST8Test:test0269()
57130=ASTConverterAST8Test:test0223()
57131=ASTConverterAST8Test:test0080()
57132=ASTConverterAST8Test:test0321()
57133=ASTConverterAST8Test:test0114()
57134=ASTConverterAST8Test:test0367()
57135=ASTConverterAST8Test:test0027()
57136=ASTConverterAST8Test:test0258()
57137=ASTConverterAST8Test:test0212()
57138=ASTConverterAST8Test:test0091()
57139=ASTConverterAST8Test:test0310()
57140=ASTConverterAST8Test:test0125()
57141=ASTConverterAST8Test:test0356()
57142=ASTConverterAST8Test:test0247()
57143=ASTConverterAST8Test:test0093()
57144=ASTConverterAST8Test:test0201()
57145=ASTConverterAST8Test:test0138()
57146=ASTConverterAST8Test:test0191()
57147=ASTConverterAST8Test:test0345()
57148=ASTConverterAST8Test:test0005()
57149=ASTConverterAST8Test:test0149()
57150=ASTConverterAST8Test:test0334()
57151=ASTConverterAST8Test:test0103()
57152=ASTConverterAST8Test:test0018()
57153=ASTConverterAST8Test:test0225()
57154=ASTConverterAST8Test:test0071()
57155=ASTConverterAST8Test:test0323()
57156=ASTConverterAST8Test:test0369()
57157=ASTConverterAST8Test:test0116()
57158=ASTConverterAST8Test:test0029()
57159=ASTConverterAST8Test:test0214()
57160=ASTConverterAST8Test:test0082()
57161=ASTConverterAST8Test:test0312()
57162=ASTConverterAST8Test:test0180()
57163=ASTConverterAST8Test:test0358()
57164=ASTConverterAST8Test:test0127()
57165=ASTConverterAST8Test:test0203()
57166=ASTConverterAST8Test:test0249()
57167=ASTConverterAST8Test:test0095()
57168=ASTConverterAST8Test:test0193()
57169=ASTConverterAST8Test:test0301()
57170=ASTConverterAST8Test:test0347()
57171=ASTConverterAST8Test:test0007()
57172=ASTConverterAST8Test:test0291()
57173=ASTConverterAST8Test:test0060()
57174=ASTConverterAST8Test:test0238()
57175=ASTConverterAST8Test:test0105()
57176=ASTConverterAST8Test:test0336()
57177=ASTConverterAST8Test:test0073()
57178=ASTConverterAST8Test:test0280()
57179=ASTConverterAST8Test:test0227()
57180=ASTConverterAST8Test:test0118()
57181=ASTConverterAST8Test:test0171()
57182=ASTConverterAST8Test:test0325()
57183=ASTConverterAST8Test:test0084()
57184=ASTConverterAST8Test:test0216()
57185=ASTConverterAST8Test:test0129()
57186=ASTConverterAST8Test:test0182()
57187=ASTConverterAST8Test:test0314()
57188=ASTConverterAST8Test:test0051()
57189=ASTConverterAST8Test:test0097()
57190=ASTConverterAST8Test:test0205()
57191=ASTConverterAST8Test:test0349()
57192=ASTConverterAST8Test:test0195()
57193=ASTConverterAST8Test:test0303()
57194=ASTConverterAST8Test:test0062()
57195=ASTConverterAST8Test:test0293()
57196=ASTConverterAST8Test:test0391()
57197=ASTConverterAST8Test:test0009()
57198=ASTConverterAST8Test:test0107()
57199=ASTConverterAST8Test:test0160()
57200=ASTConverterAST8Test:test0338()
57201=ASTConverterAST8Test:test0282()
57202=ASTConverterAST8Test:test0075()
57203=ASTConverterAST8Test:test0380()
57204=ASTConverterAST8Test:test0229()
57205=ASTConverterAST8Test:test0327()
57206=ASTConverterAST8Test:test0173()
57207=ASTConverterAST8Test:test0271()
57208=ASTConverterAST8Test:test0040()
57209=ASTConverterAST8Test:test0086()
57210=ASTConverterAST8Test:test0218()
57211=ASTConverterAST8Test:test0316()
57212=ASTConverterAST8Test:test0184()
57213=ASTConverterAST8Test:test0260()
57214=ASTConverterAST8Test:test0099()
57215=ASTConverterAST8Test:test0053()
57216=ASTConverterAST8Test:test0207()
57217=ASTConverterAST8Test:test0151()
57218=ASTConverterAST8Test:test0197()
57219=ASTConverterAST8Test:test0305()
57220=ASTConverterAST8Test:test0109()
57221=ASTConverterAST8Test:test0295()
57222=ASTConverterAST8Test:test0064()
57223=ASTConverterAST8Test:test0393()
57224=ASTConverterAST8Test:test0162()
57225=InferenceVariable:updateSourceName(int)
57226=InferenceVariable:substituteInferenceVariable(InferenceVariable, TypeBinding)
57227=InferenceVariable:debugName()
57228=InferenceVariable:InferenceVariable(TypeBinding, int, InvocationSite, char[], LookupEnvironment, ReferenceBinding)
57229=InferenceVariable:qualifiedSourceName()
57230=InferenceVariable:hashCode()
57231=InferenceVariable:collectInferenceVariables(Set<InferenceVariable>)
57232=InferenceVariable:equals(Object)
57233=InferenceVariable:sourceName()
57234=InferenceVariable:toString()
57235=InferenceVariable:constantPoolName()
57236=InferenceVariable:getPackage()
57237=InferenceVariable:isProperType(boolean)
57238=InferenceVariable:clone(TypeBinding)
57239=InferenceVariable:InferenceVariable(TypeBinding, int, int, InvocationSite, LookupEnvironment, ReferenceBinding)
57240=InferenceVariable:isCompatibleWith(TypeBinding, Scope)
57241=InferenceVariable:superInterfaces()
57242=InferenceVariable:prototype()
57243=InferenceVariable:hasTypeBit(int)
57244=InferenceVariable:erasure()
57245=InferenceVariable:readableName()
57246=A:foo()
57247=ShortConstant:shortValue()
57248=ShortConstant:ShortConstant(short)
57249=ShortConstant:intValue()
57250=ShortConstant:longValue()
57251=ShortConstant:doubleValue()
57252=ShortConstant:floatValue()
57253=ShortConstant:byteValue()
57254=ShortConstant:charValue()
57255=ShortConstant:stringValue()
57256=ShortConstant:toString()
57257=ShortConstant:typeID()
57258=X02:foo()
57259=X04:foo(String)
57260=BasicCompilationUnit:ignoreOptionalProblems()
57261=BasicCompilationUnit:BasicCompilationUnit(char[], char[][], String, String)
57262=BasicCompilationUnit:getPackageName()
57263=BasicCompilationUnit:initEncoding(IJavaElement)
57264=BasicCompilationUnit:BasicCompilationUnit(char[], char[][], String)
57265=BasicCompilationUnit:toString()
57266=BasicCompilationUnit:getContents()
57267=BasicCompilationUnit:BasicCompilationUnit(char[], char[][], String, IJavaElement)
57268=BasicCompilationUnit:getFileName()
57269=BasicCompilationUnit:getMainTypeName()
57270=EnumDeclarationImpl:EnumDeclarationImpl(ITypeBinding, BaseProcessorEnv)
57271=EnumDeclarationImpl:accept(DeclarationVisitor)
57272=EnumDeclarationImpl:kind()
57273=EnumDeclarationImpl:getDeclaration()
57274=EnumDeclarationImpl:getEnumConstants()
57275=EnumDeclarationImpl:accept(TypeVisitor)
57276=X:foo()
57277=X:X(String)
57278=Try:hello()
57279=TargetSourceRangeComputer:SourceRange:getLength()
57280=TargetSourceRangeComputer:computeSourceRange(ASTNode)
57281=TargetSourceRangeComputer:SourceRange:SourceRange(int, int)
57282=TargetSourceRangeComputer:TargetSourceRangeComputer()
57283=TargetSourceRangeComputer:SourceRange:getStartPosition()
57284=ProcessorUtil:annoMirrorToString(AnnotationMirror)
57285=ProcessorUtil:annoValueToString(AnnotationValue)
57286=ProcessorUtil:annoValuePairToString(AnnotationTypeElementDeclaration, AnnotationValue)
57287=X01c:foo()
57288=CodeSnippetMessageSend:generateCode(BlockScope, CodeStream, boolean)
57289=CodeSnippetMessageSend:resolveType(BlockScope)
57290=CodeSnippetMessageSend:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo)
57291=CodeSnippetMessageSend:CodeSnippetMessageSend(EvaluationContext)
57292=Test:foo()
57293=BaseProcessor:init(ProcessingEnvironment)
57294=BaseProcessor:reportSuccess()
57295=BaseProcessor:reportError(String)
57296=BaseProcessor:reportFailure()
57297=SimpleLookupTable:SimpleLookupTable(int)
57298=SimpleLookupTable:toString()
57299=SimpleLookupTable:containsKey(Object)
57300=SimpleLookupTable:removeKey(Object)
57301=SimpleLookupTable:clone()
57302=SimpleLookupTable:rehash()
57303=SimpleLookupTable:get(Object)
57304=SimpleLookupTable:keyForValue(Object)
57305=SimpleLookupTable:SimpleLookupTable()
57306=SimpleLookupTable:put(Object, Object)
57307=SimpleLookupTable:removeValue(Object)
57308=SyntaxErrorTest:SyntaxErrorTest(String)
57309=SyntaxErrorTest:test12()
57310=SyntaxErrorTest:test01()
57311=SyntaxErrorTest:test14()
57312=SyntaxErrorTest:test10()
57313=SyntaxErrorTest:test08()
57314=SyntaxErrorTest:test15()
57315=SyntaxErrorTest:test04()
57316=SyntaxErrorTest:test06()
57317=SyntaxErrorTest:test11()
57318=SyntaxErrorTest:test13()
57319=SyntaxErrorTest:test02()
57320=SyntaxErrorTest:checkParse(char[], String, String)
57321=SyntaxErrorTest:test07()
57322=SyntaxErrorTest:test09()
57323=SyntaxErrorTest:test03()
57324=SyntaxErrorTest:test05()
57325=SingleTypeReference:copyDims(int)
57326=SingleTypeReference:resolveTypeEnclosing(BlockScope, ReferenceBinding)
57327=SingleTypeReference:getTypeBinding(Scope)
57328=SingleTypeReference:printExpression(int, StringBuffer)
57329=SingleTypeReference:traverse(ASTVisitor, BlockScope)
57330=SingleTypeReference:traverse(ASTVisitor, ClassScope)
57331=SingleTypeReference:getTypeName()
57332=SingleTypeReference:SingleTypeReference(char[], long)
57333=BindingKeyTests:test052()
57334=BindingKeyTests:test063()
57335=BindingKeyTests:test019()
57336=BindingKeyTests:test050()
57337=BindingKeyTests:test008()
57338=BindingKeyTests:test061()
57339=BindingKeyTests:test017()
57340=BindingKeyTests:test028()
57341=BindingKeyTests:test006()
57342=BindingKeyTests:test015()
57343=BindingKeyTests:assertBindingKeyEquals(String, String)
57344=BindingKeyTests:test026()
57345=BindingKeyTests:BindingKeyTests(String)
57346=BindingKeyTests:test039()
57347=BindingKeyTests:test004()
57348=BindingKeyTests:test059()
57349=BindingKeyTests:test013()
57350=BindingKeyTests:test024()
57351=BindingKeyTests:test037()
57352=BindingKeyTests:test048()
57353=BindingKeyTests:test002()
57354=BindingKeyTests:suite()
57355=BindingKeyTests:test011()
57356=BindingKeyTests:test057()
57357=BindingKeyTests:test022()
57358=BindingKeyTests:test068()
57359=BindingKeyTests:test035()
57360=BindingKeyTests:test046()
57361=BindingKeyTests:test055()
57362=BindingKeyTests:test020()
57363=BindingKeyTests:test066()
57364=BindingKeyTests:test033()
57365=BindingKeyTests:test044()
57366=BindingKeyTests:test053()
57367=BindingKeyTests:test064()
57368=BindingKeyTests:test031()
57369=BindingKeyTests:test042()
57370=BindingKeyTests:assertBindingKeySignatureEquals(String, String)
57371=BindingKeyTests:test051()
57372=BindingKeyTests:test009()
57373=BindingKeyTests:test062()
57374=BindingKeyTests:test040()
57375=BindingKeyTests:test007()
57376=BindingKeyTests:test060()
57377=BindingKeyTests:test005()
57378=BindingKeyTests:test018()
57379=BindingKeyTests:test029()
57380=BindingKeyTests:test038()
57381=BindingKeyTests:test049()
57382=BindingKeyTests:test003()
57383=BindingKeyTests:test016()
57384=BindingKeyTests:test027()
57385=BindingKeyTests:test036()
57386=BindingKeyTests:test001()
57387=BindingKeyTests:test047()
57388=BindingKeyTests:test014()
57389=BindingKeyTests:test025()
57390=BindingKeyTests:test034()
57391=BindingKeyTests:test045()
57392=BindingKeyTests:test012()
57393=BindingKeyTests:test058()
57394=BindingKeyTests:test023()
57395=BindingKeyTests:test069()
57396=BindingKeyTests:test032()
57397=BindingKeyTests:test043()
57398=BindingKeyTests:getWildcardBindingKey(String, char)
57399=BindingKeyTests:assertBindingKeyDeclaringTypesEqual(String, String)
57400=BindingKeyTests:test010()
57401=BindingKeyTests:test056()
57402=BindingKeyTests:test021()
57403=BindingKeyTests:test067()
57404=BindingKeyTests:test030()
57405=BindingKeyTests:assertBindingKeyTypeArgumentsEqual(String, String)
57406=BindingKeyTests:test041()
57407=BindingKeyTests:test054()
57408=BindingKeyTests:test065()
57409=DiagnoseParser:toString()
57410=DiagnoseParser:misspell(int, int)
57411=DiagnoseParser:getTermIndex(int, int, int, int)
57412=DiagnoseParser:secondaryDiagnosis(SecondaryRepairInfo)
57413=DiagnoseParser:getNtermIndex(int, int, int)
57414=DiagnoseParser:DiagnoseParser(Parser, int, int, int, int[], int[], int[], CompilerOptions)
57415=DiagnoseParser:DiagnoseParser(Parser, int, int, int, CompilerOptions)
57416=DiagnoseParser:PrimaryRepairInfo:copy()
57417=DiagnoseParser:scopeTrialCheck(int, int, PrimaryRepairInfo, int)
57418=DiagnoseParser:primaryDiagnosis(PrimaryRepairInfo)
57419=DiagnoseParser:PrimaryRepairInfo:PrimaryRepairInfo()
57420=DiagnoseParser:problemReporter()
57421=DiagnoseParser:RepairCandidate:RepairCandidate()
57422=DiagnoseParser:diagnoseParse()
57423=DiagnoseParser:reallocateStacks()
57424=DiagnoseParser:checkPrimaryDistance(int, int, PrimaryRepairInfo)
57425=DiagnoseParser:misplacementRecovery(int, int, int, SecondaryRepairInfo, boolean)
57426=DiagnoseParser:isBetterSymbol(int, int)
57427=DiagnoseParser:secondaryPhase(int)
57428=DiagnoseParser:mergeCandidate(int, int)
57429=DiagnoseParser:scopeTrial(int, int, PrimaryRepairInfo)
57430=DiagnoseParser:reportPrimaryError(int, int, int, int)
57431=DiagnoseParser:reportSecondaryError(int, int, int, int, int)
57432=DiagnoseParser:errorRecovery(int, boolean)
57433=DiagnoseParser:reportError(int, int, int, int, int)
57434=DiagnoseParser:secondaryCheck(int, int, int, int)
57435=DiagnoseParser:primaryPhase(int)
57436=DiagnoseParser:secondaryRecovery(int, int, int, SecondaryRepairInfo, boolean)
57437=DiagnoseParser:StateInfo:StateInfo(int, int)
57438=DiagnoseParser:parseCheck(int, int, int, int)
57439=DiagnoseParser:reportError(int, int, int, int)
57440=SomeClass:foo()
57441=DefaultErrorHandlingPolicies:proceedWithAllProblems()
57442=DefaultErrorHandlingPolicies:proceedOnFirstError()
57443=DefaultErrorHandlingPolicies:ignoreAllProblems()
57444=DefaultErrorHandlingPolicies:exitAfterAllProblems()
57445=DefaultErrorHandlingPolicies:exitOnFirstError()
57446=FormatTest:method_one()
57447=Example:foo()
57448=PrefixExpression:PrefixExpression(Expression, Expression, int, int)
57449=PrefixExpression:checkCastCompatibility()
57450=PrefixExpression:operatorToString()
57451=PrefixExpression:restrainUsageToNumericTypes()
57452=PrefixExpression:traverse(ASTVisitor, BlockScope)
57453=PrefixExpression:printExpressionNoParenthesis(int, StringBuffer)
57454=GeneratedResourceChangeListener:addGeneratedSrcFolderTo(Set<IProject>)
57455=GeneratedResourceChangeListener:GeneratedResourceChangeListener()
57456=GeneratedResourceChangeListener:PostChangeVisitor:visit(IResourceDelta)
57457=GeneratedResourceChangeListener:resourceChanged(IResourceChangeEvent)
57458=GeneratedResourceChangeListener:PreBuildVisitor:canUpdate(IProject)
57459=GeneratedResourceChangeListener:PreBuildVisitor:getProjectsThatNeedGenSrcFolder()
57460=GeneratedResourceChangeListener:PreBuildVisitor:handleDeletion(IResource)
57461=GeneratedResourceChangeListener:PreBuildVisitor:visit(IResourceDelta)
57462=Q:Q()
57463=Test:main(String[])
57464=CorrectSuperInterface2:foo()
57465=IndexManager:savePreBuiltIndex(Index)
57466=IndexManager:processName()
57467=IndexManager:remove(String, IPath)
57468=IndexManager:rebuildIndex(IndexLocation, IPath)
57469=IndexManager:removeIndexFamily(IPath)
57470=IndexManager:indexAll(IProject)
57471=IndexManager:recreateIndex(IPath)
57472=IndexManager:getIndex(IndexLocation)
57473=IndexManager:updateIndexState(IndexLocation, Integer)
57474=IndexManager:getIndexes(IndexLocation[], IProgressMonitor)
57475=IndexManager:getIndexForUpdate(IPath, boolean, boolean)
57476=IndexManager:getIndexStates()
57477=IndexManager:getParticipantsContainer(IndexLocation)
57478=IndexManager:indexSourceFolder(JavaProject, IPath, char[][], char[][])
57479=IndexManager:removeIndex(IPath)
57480=IndexManager:addSource(IFile, IPath, SourceElementParser)
57481=IndexManager:indexLibrary(IPath, IProject, URL, boolean)
57482=IndexManager:notifyIdle(long)
57483=IndexManager:aboutToUpdateIndex(IPath, Integer)
57484=IndexManager:jobWasCancelled(IPath)
57485=IndexManager:saveIndexes()
57486=IndexManager:toString()
57487=IndexManager:indexLibrary(IPath, IProject, URL)
57488=IndexManager:readJavaLikeNamesFile()
57489=IndexManager:getIndex(IPath, IndexLocation, boolean, boolean)
57490=IndexManager:saveIndex(Index)
57491=IndexManager:cleanUpIndexes()
57492=IndexManager:ensureIndexExists(IndexLocation, IPath)
57493=IndexManager:writeJavaLikeNamesFile()
57494=IndexManager:getSavedIndexesDirectory()
57495=IndexManager:addBinary(IFile, IPath)
57496=IndexManager:scheduleDocumentIndexing(SearchDocument, IPath, IndexLocation, SearchParticipant)
57497=IndexManager:writeIndexMapFile()
57498=IndexManager:deleteIndexFiles()
57499=IndexManager:removeIndexesState(IndexLocation[])
57500=IndexManager:deleteIndexFiles(SimpleSet)
57501=IndexManager:getJavaPluginWorkingLocation()
57502=IndexManager:readParticipantsIndexNamesFile()
57503=IndexManager:removeSourceFolderFromIndex(JavaProject, IPath, char[][], char[][])
57504=IndexManager:reset()
57505=IndexManager:removeIndexPath(IPath)
57506=IndexManager:getIndex(IPath, boolean, boolean)
57507=IndexManager:indexDocument(SearchDocument, SearchParticipant, Index, IPath)
57508=IndexManager:getSourceElementParser(IJavaProject, ISourceElementRequestor)
57509=IndexManager:resetIndex(IPath)
57510=IndexManager:updateParticipant(IPath, IPath)
57511=IndexManager:addIndex(IPath, IndexLocation)
57512=IndexManager:readIndexState(String)
57513=IndexManager:writeSavedIndexNamesFile()
57514=IndexManager:indexResolvedDocument(SearchDocument, SearchParticipant, Index, IPath)
57515=IndexManager:readIndexMap()
57516=IndexManager:computeIndexLocation(IPath)
57517=IndexManager:computeIndexLocation(IPath, URL)
57518=IndexManager:rebuildIndex(IndexLocation, IPath, boolean)
57519=IndexManager:hasJavaLikeNamesChanged()
57520=IndexManager:writeParticipantsIndexNamesFile()
57521=IndexManager:moveToNextJob()
57522=CatchClause:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
57523=CatchClause:setException(SingleVariableDeclaration)
57524=CatchClause:clone0(AST)
57525=CatchClause:internalStructuralPropertiesForType(int)
57526=CatchClause:getException()
57527=CatchClause:subtreeMatch0(ASTMatcher, Object)
57528=CatchClause:treeSize()
57529=CatchClause:getNodeType0()
57530=CatchClause:propertyDescriptors(int)
57531=CatchClause:getBody()
57532=CatchClause:accept0(ASTVisitor)
57533=CatchClause:memSize()
57534=CatchClause:setBody(Block)
57535=CatchClause:CatchClause(AST)
57536=Archive:flush()
57537=Archive:initialize()
57538=Archive:getTypes(String)
57539=Archive:contains(String)
57540=Archive:allPackages()
57541=Archive:toString()
57542=Archive:Archive(File)
57543=Archive:getArchiveFileObject(String, Charset)
57544=Archive:Archive()
57545=Archive:close()
57546=IAccessRule:getPattern()
57547=IAccessRule:ignoreIfBetter()
57548=IAccessRule:getKind()
57549=Test:foo()
57550=CompletionSameClass:foo(CompletionSameClas)
57551=X11:bar()
57552=ReconcileContext:getDelta()
57553=ReconcileContext:getAST8()
57554=ReconcileContext:getAST4()
57555=ReconcileContext:resetAST()
57556=ReconcileContext:putProblems(String, CategorizedProblem[])
57557=ReconcileContext:getAST3()
57558=ReconcileContext:isResolvingBindings()
57559=ReconcileContext:getProblems(String)
57560=ReconcileContext:ReconcileContext(ReconcileWorkingCopyOperation, CompilationUnit)
57561=ReconcileContext:getReconcileFlags()
57562=ReconcileContext:getASTLevel()
57563=ReconcileContext:getWorkingCopy()
57564=X:main(String[])
57565=X:bar(int, String)
57566=X:X()
57567=CompilationUnitSorter:sort(ICompilationUnit, int[], Comparator, int, IProgressMonitor)
57568=CompilationUnitSorter:checkASTLevel(int)
57569=CompilationUnitSorter:CompilationUnitSorter()
57570=CompilationUnitSorter:sort(int, ICompilationUnit, int[], Comparator, int, IProgressMonitor)
57571=CompilationUnitSorter:sort(CompilationUnit, Comparator, int, TextEditGroup, IProgressMonitor)
57572=TestB2:bar()
57573=TestB2:foo()
57574=Compliance_1_5:test051()
57575=Compliance_1_5:test097()
57576=Compliance_1_5:test086()
57577=Compliance_1_5:test040()
57578=Compliance_1_5:test075()
57579=Compliance_1_5:test064()
57580=Compliance_1_5:test095()
57581=Compliance_1_5:test084()
57582=Compliance_1_5:test073()
57583=Compliance_1_5:test062()
57584=Compliance_1_5:test107()
57585=Compliance_1_5:test093()
57586=Compliance_1_5:suite()
57587=Compliance_1_5:test029()
57588=Compliance_1_5:test082()
57589=Compliance_1_5:test018()
57590=Compliance_1_5:test071()
57591=Compliance_1_5:test060()
57592=Compliance_1_5:test105()
57593=Compliance_1_5:test038()
57594=Compliance_1_5:test091()
57595=Compliance_1_5:testClass()
57596=Compliance_1_5:test027()
57597=Compliance_1_5:test080()
57598=Compliance_1_5:test016()
57599=Compliance_1_5:test103()
57600=Compliance_1_5:test013()
57601=Compliance_1_5:test059()
57602=Compliance_1_5:test048()
57603=Compliance_1_5:test100()
57604=Compliance_1_5:test037()
57605=Compliance_1_5:getCompilerOptions()
57606=Compliance_1_5:test026()
57607=Compliance_1_5:test090()
57608=Compliance_1_5:test011()
57609=Compliance_1_5:test057()
57610=Compliance_1_5:test046()
57611=Compliance_1_5:test035()
57612=Compliance_1_5:test024()
57613=Compliance_1_5:setUp()
57614=Compliance_1_5:test055()
57615=Compliance_1_5:test044()
57616=Compliance_1_5:test033()
57617=Compliance_1_5:test079()
57618=Compliance_1_5:test022()
57619=Compliance_1_5:test068()
57620=Compliance_1_5:test099()
57621=Compliance_1_5:test053()
57622=Compliance_1_5:test088()
57623=Compliance_1_5:test042()
57624=Compliance_1_5:test077()
57625=Compliance_1_5:test031()
57626=Compliance_1_5:test066()
57627=Compliance_1_5:test020()
57628=Compliance_1_5:test074()
57629=Compliance_1_5:test063()
57630=Compliance_1_5:test052()
57631=Compliance_1_5:test098()
57632=Compliance_1_5:test087()
57633=Compliance_1_5:test041()
57634=Compliance_1_5:test072()
57635=Compliance_1_5:test019()
57636=Compliance_1_5:test061()
57637=Compliance_1_5:test106()
57638=Compliance_1_5:test096()
57639=Compliance_1_5:test050()
57640=Compliance_1_5:test085()
57641=Compliance_1_5:test017()
57642=Compliance_1_5:test070()
57643=Compliance_1_5:test104()
57644=Compliance_1_5:test094()
57645=Compliance_1_5:test083()
57646=Compliance_1_5:test015()
57647=Compliance_1_5:test102()
57648=Compliance_1_5:test039()
57649=Compliance_1_5:test092()
57650=Compliance_1_5:test028()
57651=Compliance_1_5:test081()
57652=Compliance_1_5:test036()
57653=Compliance_1_5:test025()
57654=Compliance_1_5:test014()
57655=Compliance_1_5:test049()
57656=Compliance_1_5:test101()
57657=Compliance_1_5:test034()
57658=Compliance_1_5:test023()
57659=Compliance_1_5:test069()
57660=Compliance_1_5:test012()
57661=Compliance_1_5:test058()
57662=Compliance_1_5:Compliance_1_5(String)
57663=Compliance_1_5:test047()
57664=Compliance_1_5:_test043()
57665=Compliance_1_5:test078()
57666=Compliance_1_5:test032()
57667=Compliance_1_5:test067()
57668=Compliance_1_5:test021()
57669=Compliance_1_5:test056()
57670=Compliance_1_5:test010()
57671=Compliance_1_5:test045()
57672=Compliance_1_5:test076()
57673=Compliance_1_5:test030()
57674=Compliance_1_5:test065()
57675=Compliance_1_5:test054()
57676=Compliance_1_5:test020a()
57677=Compliance_1_5:test089()
57678=CharacterLiteral:internalSetEscapedValue(String)
57679=CharacterLiteral:subtreeMatch0(ASTMatcher, Object)
57680=CharacterLiteral:charValue()
57681=CharacterLiteral:setEscapedValue(String)
57682=CharacterLiteral:getNodeType0()
57683=CharacterLiteral:treeSize()
57684=CharacterLiteral:getEscapedValue()
57685=CharacterLiteral:internalStructuralPropertiesForType(int)
57686=CharacterLiteral:accept0(ASTVisitor)
57687=CharacterLiteral:memSize()
57688=CharacterLiteral:propertyDescriptors(int)
57689=CharacterLiteral:internalGetSetObjectProperty(SimplePropertyDescriptor, boolean, Object)
57690=CharacterLiteral:setCharValue(char)
57691=CharacterLiteral:CharacterLiteral(AST)
57692=CharacterLiteral:clone0(AST)
57693=X:foo()
57694=Message:getMessage()
57695=Message:Message(String, int)
57696=Message:getStartPosition()
57697=Message:Message(String, int, int)
57698=Message:getLength()
57699=Message:getSourcePosition()
57700=IElementInfo:getFileName()
57701=SourceIndexerRequestor:enterClass(TypeInfo)
57702=SourceIndexerRequestor:getMoreExtraFlags(int)
57703=SourceIndexerRequestor:enterInitializer(int, int)
57704=SourceIndexerRequestor:acceptConstructorReference(char[], int, int)
57705=SourceIndexerRequestor:enterAnnotationType(TypeInfo)
57706=SourceIndexerRequestor:acceptUnknownReference(char[], int)
57707=SourceIndexerRequestor:exitInitializer(int)
57708=SourceIndexerRequestor:acceptTypeReference(char[][], int, int)
57709=SourceIndexerRequestor:getSimpleName(char[])
57710=SourceIndexerRequestor:enterMethod(MethodInfo)
57711=SourceIndexerRequestor:enterConstructor(MethodInfo)
57712=SourceIndexerRequestor:exitField(int, int, int)
57713=SourceIndexerRequestor:acceptImport(int, int, int, int, char[][], boolean, int)
57714=SourceIndexerRequestor:acceptLineSeparatorPositions(int[])
57715=SourceIndexerRequestor:popTypeName()
57716=SourceIndexerRequestor:exitCompilationUnit(int)
57717=SourceIndexerRequestor:acceptAnnotationTypeReference(char[], int)
57718=SourceIndexerRequestor:enclosingTypeNames()
57719=SourceIndexerRequestor:getDeclaringQualification(TypeDeclaration)
57720=SourceIndexerRequestor:enterField(FieldInfo)
57721=SourceIndexerRequestor:exitType(int)
57722=SourceIndexerRequestor:enterEnum(TypeInfo)
57723=SourceIndexerRequestor:acceptPackage(ImportReference)
57724=SourceIndexerRequestor:acceptAnnotationTypeReference(char[][], int, int)
57725=SourceIndexerRequestor:pushTypeName(char[])
57726=SourceIndexerRequestor:acceptUnknownReference(char[][], int, int)
57727=SourceIndexerRequestor:exitMethod(int, Expression)
57728=SourceIndexerRequestor:acceptMethodReference(char[], int, int)
57729=SourceIndexerRequestor:enterInterface(TypeInfo)
57730=SourceIndexerRequestor:addDefaultConstructorIfNecessary(TypeInfo)
57731=SourceIndexerRequestor:SourceIndexerRequestor(SourceIndexer)
57732=SourceIndexerRequestor:acceptProblem(CategorizedProblem)
57733=SourceIndexerRequestor:acceptFieldReference(char[], int)
57734=SourceIndexerRequestor:enterType(TypeInfo)
57735=SourceIndexerRequestor:acceptTypeReference(char[], int)
57736=SourceIndexerRequestor:exitConstructor(int)
57737=SourceIndexerRequestor:enterCompilationUnit()
57738=X18:setKind(int)
57739=TestFieldValid:foo5()
57740=TestFieldValid:foo3()
57741=TestFieldValid:foo1()
57742=TestFieldValid:foo4()
57743=TestFieldValid:foo2()
57744=X13:foo(String)
57745=NoReferenceH:foo()
57746=Test:foo()
57747=CompletionOnFieldType:printStatement(int, StringBuffer)
57748=CompletionOnFieldType:CompletionOnFieldType(TypeReference, boolean)
57749=TestA:foo3()
57750=TestA:foo1()
57751=TestA:foo2()
57752=ResolveLocalMethodDeclaration:bar()
57753=StringConstant:toString()
57754=StringConstant:typeID()
57755=StringConstant:StringConstant(String)
57756=StringConstant:compileTimeEqual(StringConstant)
57757=StringConstant:stringValue()
57758=X:foo()
57759=A:test()
57760=A:foo(Object, A)
57761=AnnotationProcessors:getCompositeAnnotationProcessor(Collection<AnnotationProcessor>)
57762=AnnotationProcessors:CompositeAnnotationProcessor:CompositeAnnotationProcessor(AnnotationProcessor)
57763=AnnotationProcessors:NoOpAP:NoOpAP()
57764=AnnotationProcessors:getCompositeAnnotationProcessor(AnnotationProcessor)
57765=AnnotationProcessors:CompositeAnnotationProcessor:process()
57766=AnnotationProcessors:NoOpAP:process()
57767=AnnotationProcessors:CompositeAnnotationProcessor:CompositeAnnotationProcessor(Collection<AnnotationProcessor>)
57768=CompletionExactNameCaseInsensitive:foo(compleTionexactnamecaseInsensitive)
57769=CompletionOnJavadocAllocationExpression:getCompletionFlags()
57770=CompletionOnJavadocAllocationExpression:CompletionOnJavadocAllocationExpression(JavadocAllocationExpression, int)
57771=CompletionOnJavadocAllocationExpression:completeBaseTypes()
57772=CompletionOnJavadocAllocationExpression:addCompletionFlags(int)
57773=CompletionOnJavadocAllocationExpression:completeFormalReference()
57774=CompletionOnJavadocAllocationExpression:printExpression(int, StringBuffer)
57775=CompletionOnJavadocAllocationExpression:CompletionOnJavadocAllocationExpression(JavadocAllocationExpression, int, int)
57776=CompletionOnJavadocAllocationExpression:completeInText()
57777=CompletionOnJavadocAllocationExpression:completeAnException()
57778=TestD:foo3()
57779=TestD:foo5()
57780=TestD:foo1()
57781=TestD:foo6()
57782=TestD:foo8()
57783=TestD:foo2()
57784=TestD:foo4()
57785=TestD:foo7()
57786=TestD:foo9()
57787=X16:foo(Object)
57788=ProgressBar:start(int)
57789=ProgressBar:reset()
57790=ProgressBar:getStatusColor()
57791=ProgressBar:step(int, boolean)
57792=ProgressBar:ProgressBar()
57793=Test:foo(Exception)
57794=PackageUtil:getPackageFragments(String, BaseProcessorEnv)
57795=PackageUtil:PackageUtil()
57796=Test:main(String[])
57797=Example:bar()
57798=Example:foo()
57799=Example:foo2()
57800=Test2:main(String[])
57801=A:doX()
57802=X17c:getResolvedClasspath(boolean)
57803=RecipeDocumentProvider:setupDocument(Object, IDocument)
57804=RecipeDocumentProvider:createRecipePartitioner()
57805=DefaultConstantAnnotationFactory:DefaultConstantAnnotationFactory()
57806=DefaultConstantAnnotationFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
57807=X02d:foo()
57808=ExceptionHandlingProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
57809=ExceptionHandlingProcessorFactory:ExceptionHandlingProcessorFactory()
57810=A:goo()
57811=A:foo()
57812=FileGenLocationAnnotationProcessor:FileGenLocationAnnotationProcessor(AnnotationProcessorEnvironment)
57813=FileGenLocationAnnotationProcessor:process()
57814=A:foo()
57815=A:A()
57816=WorkingCopyTests:testCustomizedBuffer()
57817=WorkingCopyTests:testGeneral()
57818=WorkingCopyTests:testChangeContent()
57819=WorkingCopyTests:testRenameMethod()
57820=WorkingCopyTests:suite()
57821=WorkingCopyTests:testCustomizedBuffer2()
57822=WorkingCopyTests:testGetPrimaryField()
57823=WorkingCopyTests:testCreation()
57824=WorkingCopyTests:_testOnClassFile()
57825=WorkingCopyTests:testGetPrimaryImportContainer()
57826=WorkingCopyTests:testShared1()
57827=WorkingCopyTests:testOperations()
57828=WorkingCopyTests:testGetPrimaryBinaryElement()
57829=WorkingCopyTests:testChangeContentOfReadOnlyCU2()
57830=WorkingCopyTests:testGetPrimaryImportDeclaration()
57831=WorkingCopyTests:testGetPrimaryPackageDeclaration()
57832=WorkingCopyTests:testNonExistingCU()
57833=WorkingCopyTests:testMoveTypeToAnotherWorkingCopy()
57834=WorkingCopyTests:tearDown()
57835=WorkingCopyTests:testDelete2Fields()
57836=WorkingCopyTests:testGetPrimaryInitializer()
57837=WorkingCopyTests:testGetPrimaryCU()
57838=WorkingCopyTests:testGetPrimaryMethod()
57839=WorkingCopyTests:TestWorkingCopyOwner:createBuffer(ICompilationUnit)
57840=WorkingCopyTests:setUp()
57841=WorkingCopyTests:testGetPrimaryType()
57842=WorkingCopyTests:testContents()
57843=WorkingCopyTests:testShared2()
57844=WorkingCopyTests:testChangeContentOfReadOnlyCU1()
57845=WorkingCopyTests:testMultipleCommit()
57846=WorkingCopyTests:testGetPrimaryInnerType()
57847=WorkingCopyTests:testCancelMakeConsistent()
57848=WorkingCopyTests:testGetPrimaryInnerField()
57849=WorkingCopyTests:WorkingCopyTests(String)
57850=WorkingCopyTests:testGetPrimaryInnerMethod()
57851=A:foo(String)
57852=Test:foo()
57853=ResolveLocalName:foo()
57854=ITypeHierarchy:getType()
57855=ITypeHierarchy:refresh(IProgressMonitor)
57856=ITypeHierarchy:getCachedFlags(IType)
57857=ITypeHierarchy:getAllTypes()
57858=ITypeHierarchy:getAllClasses()
57859=ITypeHierarchy:getAllSubtypes(IType)
57860=ITypeHierarchy:getAllInterfaces()
57861=ITypeHierarchy:getRootClasses()
57862=ITypeHierarchy:getRootInterfaces()
57863=ITypeHierarchy:addTypeHierarchyChangedListener(ITypeHierarchyChangedListener)
57864=ITypeHierarchy:getSuperInterfaces(IType)
57865=ITypeHierarchy:removeTypeHierarchyChangedListener(ITypeHierarchyChangedListener)
57866=ITypeHierarchy:getSupertypes(IType)
57867=ITypeHierarchy:getExtendingInterfaces(IType)
57868=ITypeHierarchy:getSubtypes(IType)
57869=ITypeHierarchy:getSuperclass(IType)
57870=ITypeHierarchy:getAllSuperclasses(IType)
57871=ITypeHierarchy:getSubclasses(IType)
57872=ITypeHierarchy:getAllSuperInterfaces(IType)
57873=ITypeHierarchy:getAllSupertypes(IType)
57874=ITypeHierarchy:exists()
57875=ITypeHierarchy:store(OutputStream, IProgressMonitor)
57876=ITypeHierarchy:getImplementingClasses(IType)
57877=ITypeHierarchy:contains(IType)
57878=RecoveredImport:sourceEnd()
57879=RecoveredImport:updateSourceEndIfNecessary(int, int)
57880=RecoveredImport:toString(int)
57881=RecoveredImport:updatedImportReference()
57882=RecoveredImport:parseTree()
57883=RecoveredImport:updateParseTree()
57884=RecoveredImport:RecoveredImport(ImportReference, RecoveredElement, int)
57885=FormatTest2:testMethod()
57886=FormatTest2:AccountAccessGroupBean:AccountAccessGroupBean(String, String, String, String)
57887=X07:foo(int, int)
57888=SanityTestEvaluationContext:SanityTestEvaluationContext(String)
57889=SanityTestEvaluationContext:testEvaluateImports()
57890=SanityTestEvaluationContext:testGetSetPackageName()
57891=SanityTestEvaluationContext:suite()
57892=SanityTestEvaluationContext:testGetSetImports()
57893=SanityTestEvaluationContext:testClass()
57894=SanityTestEvaluationContext:testNewDeleteVariable()
57895=SanityTestEvaluationContext:testAllVariables()
57896=SanityTestEvaluationContext:testEvaluateVariable()
57897=SanityTestEvaluationContext:testEvaluateVariables()
57898=SanityTestEvaluationContext:testEvaluate()
57899=RemotePublication:RemotePublication(String, String, String, String, String, String)
57900=RemotePublication:createC42PDFCommandLine(String)
57901=RemotePublication:renamePDFFile()
57902=RemotePublication:createPDFFile()
57903=RemotePublication:createListFile()
57904=RemotePublication:getRemoteDocument()
57905=RemotePublication:getPages()
57906=RemotePublication:getDocument()
57907=RemotePublication:handleMultipleDocuments(File)
57908=EclipseFileManager:getJavaFileObjectsFromStrings(Iterable<String>)
57909=EclipseFileManager:getPathsFrom(String)
57910=EclipseFileManager:setLocation(Location, Iterable<? extends File>)
57911=EclipseFileManager:handleOption(String, Iterator<String>)
57912=EclipseFileManager:getJavaFileObjects(File)
57913=EclipseFileManager:normalized(String)
57914=EclipseFileManager:bind(String, String)
57915=EclipseFileManager:getJavaFileObjects(String)
57916=EclipseFileManager:setLocale(Locale)
57917=EclipseFileManager:getFileForOutput(Location, String, String, FileObject)
57918=EclipseFileManager:getArchive(File)
57919=EclipseFileManager:getLocation(Location)
57920=EclipseFileManager:flush()
57921=EclipseFileManager:prependFiles(Iterable<? extends File>, Iterable<? extends File>)
57922=EclipseFileManager:bind(String, String[])
57923=EclipseFileManager:concatFiles(Iterable<? extends File>, Iterable<? extends File>)
57924=EclipseFileManager:getEndorsedDirsFrom(String)
57925=EclipseFileManager:getJavaFileForOutput(Location, String, Kind, FileObject)
57926=EclipseFileManager:isSameFile(FileObject, FileObject)
57927=EclipseFileManager:getKind(File)
57928=EclipseFileManager:getExtension(String)
57929=EclipseFileManager:close()
57930=EclipseFileManager:collectAllMatchingFiles(File, String, Set<Kind>, boolean, ArrayList<JavaFileObject>)
57931=EclipseFileManager:addNewEntry(ArrayList, String, ArrayList, String, String, boolean, boolean)
57932=EclipseFileManager:getKind(String)
57933=EclipseFileManager:getDefaultClasspath()
57934=EclipseFileManager:getDefaultBootclasspath()
57935=EclipseFileManager:getJavaFileObjectsFromFiles(Iterable<? extends File>)
57936=EclipseFileManager:getExtdirsFrom(String)
57937=EclipseFileManager:isSupportedOption(String)
57938=EclipseFileManager:EclipseFileManager(Locale, Charset)
57939=EclipseFileManager:processPathEntries(int, ArrayList, String, String, boolean, boolean)
57940=EclipseFileManager:getFileForInput(Location, String, String)
57941=EclipseFileManager:getJavaFileForInput(Location, String, Kind)
57942=EclipseFileManager:getClassLoader(Location)
57943=EclipseFileManager:list(Location, String, Set<Kind>, boolean)
57944=EclipseFileManager:isArchive(File)
57945=EclipseFileManager:getOutputDir(String)
57946=EclipseFileManager:inferBinaryName(Location, JavaFileObject)
57947=EclipseFileManager:getExtension(File)
57948=EclipseFileManager:hasLocation(Location)
57949=A:temp()
57950=IndentationSwitchCaseBug:IBreakIndentation()
57951=SimpleName:accept0(ASTVisitor)
57952=SimpleName:subtreeMatch0(ASTMatcher, Object)
57953=SimpleName:memSize()
57954=SimpleName:appendName(StringBuffer)
57955=SimpleName:propertyDescriptors(int)
57956=SimpleName:internalStructuralPropertiesForType(int)
57957=SimpleName:treeSize()
57958=SimpleName:getNodeType0()
57959=SimpleName:SimpleName(AST)
57960=SimpleName:clone0(AST)
57961=SimpleName:isDeclaration()
57962=SimpleName:getIdentifier()
57963=SimpleName:internalGetSetObjectProperty(SimplePropertyDescriptor, boolean, Object)
57964=SimpleName:setIdentifier(String)
57965=SimpleName:internalSetIdentifier(String)
57966=Test:foo(int)
57967=AnnotationProcessorEnvironment:getDeclarationsAnnotatedWith(AnnotationTypeDeclaration)
57968=AnnotationProcessorEnvironment:getTypeDeclaration(String)
57969=AnnotationProcessorEnvironment:getSpecifiedTypeDeclarations()
57970=AnnotationProcessorEnvironment:getTypeDeclarations()
57971=AnnotationProcessorEnvironment:getFiler()
57972=AnnotationProcessorEnvironment:removeListener(AnnotationProcessorListener)
57973=AnnotationProcessorEnvironment:getPackage(String)
57974=AnnotationProcessorEnvironment:getDeclarationUtils()
57975=AnnotationProcessorEnvironment:addListener(AnnotationProcessorListener)
57976=AnnotationProcessorEnvironment:getMessager()
57977=AnnotationProcessorEnvironment:getOptions()
57978=AnnotationProcessorEnvironment:getTypeUtils()
57979=Test:___run(java.lang.String[])
57980=AnnotationDeclarationImpl:accept(TypeVisitor)
57981=AnnotationDeclarationImpl:getMethods()
57982=AnnotationDeclarationImpl:accept(DeclarationVisitor)
57983=AnnotationDeclarationImpl:kind()
57984=AnnotationDeclarationImpl:getDeclaration()
57985=AnnotationDeclarationImpl:AnnotationDeclarationImpl(ITypeBinding, BaseProcessorEnv)
57986=A:B:test()
57987=TestMethValid:foo1()
57988=TestMethValid:foo3()
57989=TestMethValid:foo4()
57990=TestMethValid:foo2()
57991=TestMethValid:foo5()
57992=B:method(int)
57993=A:A()
57994=AnnotationReader:createClassFilesForAnnotatedDeclarations(Collection<Declaration>, AnnotationProcessorEnvironment)
57995=A:foo(Object, A)
57996=X:setFoo(String, int, int, int)
57997=FieldLocator:matchField(FieldBinding, boolean)
57998=FieldLocator:referenceType()
57999=FieldLocator:resolveLevel(ASTNode)
58000=FieldLocator:fineGrain()
58001=FieldLocator:match(FieldDeclaration, MatchingNodeSet)
58002=FieldLocator:match(ASTNode, MatchingNodeSet)
58003=FieldLocator:resolveLevelForType(TypeBinding)
58004=FieldLocator:updateMatch(ParameterizedTypeBinding, char[][][], MatchLocator)
58005=FieldLocator:resolveLevel(Binding)
58006=FieldLocator:matchLevelAndReportImportRef(ImportReference, Binding, MatchLocator)
58007=FieldLocator:FieldLocator(FieldPattern)
58008=FieldLocator:matchContainer()
58009=FieldLocator:matchReportReference(ASTNode, IJavaElement, Binding, int, MatchLocator)
58010=FieldLocator:matchReportReference(ASTNode, IJavaElement, IJavaElement, IJavaElement[], Binding, int, MatchLocator)
58011=FieldLocator:reportDeclaration(FieldBinding, MatchLocator, SimpleSet)
58012=FieldLocator:resolveLevel(NameReference)
58013=FieldLocator:matchReference(Reference, MatchingNodeSet, boolean)
58014=ImportReference:print(int, StringBuffer)
58015=ImportReference:isStatic()
58016=ImportReference:ImportReference(char[][], long[], boolean, int)
58017=ImportReference:getImportName()
58018=ImportReference:print(int, StringBuffer, boolean)
58019=ImportReference:traverse(ASTVisitor, CompilationUnitScope)
58020=PackageBinding:toString()
58021=PackageBinding:isUnnamed()
58022=PackageBinding:isDeprecated()
58023=PackageBinding:getJavaElement()
58024=PackageBinding:getModifiers()
58025=PackageBinding:PackageBinding(org.eclipse.jdt.internal.compiler.lookup.PackageBinding, BindingResolver)
58026=PackageBinding:getKind()
58027=PackageBinding:getNameComponents()
58028=PackageBinding:getName()
58029=PackageBinding:computeNameAndComponents()
58030=PackageBinding:getKey()
58031=PackageBinding:isRecovered()
58032=PackageBinding:getAnnotations()
58033=PackageBinding:isSynthetic()
58034=PackageBinding:isEqualTo(IBinding)
58035=ResolveLocalClass6:foo()
58036=BinaryIndexer:addTypeReference(char[])
58037=BinaryIndexer:extractClassName(int[], ClassFileReader, int)
58038=BinaryIndexer:decodeReturnType(char[])
58039=BinaryIndexer:decodeFieldType(char[])
58040=BinaryIndexer:addBinaryRetentionAnnotation(long)
58041=BinaryIndexer:addBinaryAnnotation(IBinaryAnnotation)
58042=BinaryIndexer:indexDocument()
58043=BinaryIndexer:convertToArrayType(char[][], int, int)
58044=BinaryIndexer:addBinaryTargetAnnotation(long)
58045=BinaryIndexer:addPairValue(Object)
58046=BinaryIndexer:replace(char, char, char[][])
58047=BinaryIndexer:extractReferenceFromConstantPool(byte[], ClassFileReader)
58048=BinaryIndexer:extractType(int[], ClassFileReader, int)
58049=BinaryIndexer:decodeParameterTypes(char[], boolean)
58050=BinaryIndexer:extractArgCount(char[], char[])
58051=BinaryIndexer:removeFirstSyntheticParameter(char[])
58052=BinaryIndexer:BinaryIndexer(SearchDocument)
58053=BinaryIndexer:extractClassReference(int[], ClassFileReader, int)
58054=BinaryIndexer:extractName(int[], ClassFileReader, int)
58055=BinaryIndexer:replace(char, char, char[])
58056=BinaryIndexer:addBinaryStandardAnnotations(long)
58057=BinaryIndexer:convertToArrayType(char[], int)
58058=X02:foo()
58059=TestFormatCode:InnerClass:innerMethod()
58060=TestFormatCode:outerMethod()
58061=Label:Label()
58062=Label:Label(CodeStream)
58063=Label:place()
58064=JavadocInvalidRef:invalid()
58065=ClassType:getDeclaration()
58066=ClassType:getSuperclass()
58067=TypeParameterPattern:findIndexMatches(Index, IndexQueryRequestor, SearchParticipant, IJavaSearchScope, IProgressMonitor)
58068=TypeParameterPattern:TypeParameterPattern(boolean, boolean, ITypeParameter, int)
58069=TypeParameterPattern:print(StringBuffer)
58070=CompilerStats:compareTo(Object)
58071=CompilerStats:elapsedTime()
58072=AbstractSearchScope:includesBinaries()
58073=AbstractSearchScope:includesClasspaths()
58074=AbstractSearchScope:setIncludesBinaries(boolean)
58075=AbstractSearchScope:processDelta(IJavaElementDelta, int)
58076=AbstractSearchScope:setIncludesClasspaths(boolean)
58077=BinaryMember:isStructureKnown()
58078=BinaryMember:getAnnotations(IBinaryAnnotation[], long)
58079=BinaryMember:copy(IJavaElement, IJavaElement, String, boolean, IProgressMonitor)
58080=BinaryMember:getKey(boolean)
58081=BinaryMember:rename(String, boolean, IProgressMonitor)
58082=BinaryMember:isBinary()
58083=BinaryMember:getKey()
58084=BinaryMember:move(IJavaElement, IJavaElement, String, boolean, IProgressMonitor)
58085=BinaryMember:getStandardAnnotations(long)
58086=BinaryMember:getNameRange()
58087=BinaryMember:getCategories()
58088=BinaryMember:getSourceRange()
58089=BinaryMember:getAnnotation(char[][])
58090=BinaryMember:setContents(String, IProgressMonitor)
58091=BinaryMember:BinaryMember(JavaElement, String)
58092=Test:m()
58093=ReconcilerStatementsRecoveryTests:testStatementsRecovery02()
58094=ReconcilerStatementsRecoveryTests:testStatementsRecovery04()
58095=ReconcilerStatementsRecoveryTests:setUpSuite()
58096=ReconcilerStatementsRecoveryTests:assertNoProblem(char[], ICompilationUnit)
58097=ReconcilerStatementsRecoveryTests:CancelingProblemRequestor:acceptProblem(IProblem)
58098=ReconcilerStatementsRecoveryTests:addClasspathEntries(IClasspathEntry[], boolean)
58099=ReconcilerStatementsRecoveryTests:assertProblems(String, String)
58100=ReconcilerStatementsRecoveryTests:setWorkingCopyContents(String)
58101=ReconcilerStatementsRecoveryTests:tearDown()
58102=ReconcilerStatementsRecoveryTests:removeClasspathEntries(IClasspathEntry[])
58103=ReconcilerStatementsRecoveryTests:testStatementsRecovery01()
58104=ReconcilerStatementsRecoveryTests:tearDownSuite()
58105=ReconcilerStatementsRecoveryTests:testStatementsRecovery03()
58106=ReconcilerStatementsRecoveryTests:suite()
58107=ReconcilerStatementsRecoveryTests:setUp()
58108=ReconcilerStatementsRecoveryTests:ReconcilerStatementsRecoveryTests(String)
58109=Type:Type(AST)
58110=Type:isSimpleType()
58111=Type:resolveBinding()
58112=Type:isArrayType()
58113=Type:isPrimitiveType()
58114=WorkingCopyCleanupListener:processElementDelta(IJavaElementDelta)
58115=WorkingCopyCleanupListener:elementChanged(ElementChangedEvent)
58116=ListenerTests:ListenerTests(String)
58117=ListenerTests:suite()
58118=ListenerTests:testListenerCalled()
58119=A:goo(C)
58120=A:foo(java.lang.String, long)
58121=AbstractJavaSearchTests:searchAllTypeNames(String, int, TypeNameRequestor)
58122=AbstractJavaSearchTests:TypeNameMatchCollector:toFullyQualifiedNamesString()
58123=AbstractJavaSearchTests:search(IJavaElement, int, int, IJavaSearchScope, SearchRequestor)
58124=AbstractJavaSearchTests:JavaSearchResultCollector:showAccess()
58125=AbstractJavaSearchTests:JavaSearchResultCollector:showRule()
58126=AbstractJavaSearchTests:JavaSearchResultCollector:showAccuracy(boolean)
58127=AbstractJavaSearchTests:searchAllTypeNames(String, int, TypeNameMatchCollector)
58128=AbstractJavaSearchTests:assertSearchResults(String, String, JavaSearchResultCollector)
58129=AbstractJavaSearchTests:searchAllMethodNames(String, int, IJavaSearchScope, IRestrictedAccessMethodRequestor)
58130=AbstractJavaSearchTests:JavaSearchResultCollector:showJarFile()
58131=AbstractJavaSearchTests:JavaSearchResultCollector:append(IAnnotation)
58132=AbstractJavaSearchTests:searchAllMethodNames(String, int, String, int, String, int, IJavaSearchScope, IRestrictedAccessMethodRequestor)
58133=AbstractJavaSearchTests:JavaSearchResultCollector:append(IInitializer)
58134=AbstractJavaSearchTests:JavaSearchResultCollector:writeLine()
58135=AbstractJavaSearchTests:search(String, int, int, IJavaSearchScope)
58136=AbstractJavaSearchTests:JavaSearchResultCollector:JavaSearchResultCollector(boolean)
58137=AbstractJavaSearchTests:MethodNameMatchCollector:size()
58138=AbstractJavaSearchTests:MethodNameMatchCollector:acceptMethodNameMatch(MethodNameMatch)
58139=AbstractJavaSearchTests:search(IJavaElement, int, IJavaSearchScope)
58140=AbstractJavaSearchTests:search(IJavaElement, int, int)
58141=AbstractJavaSearchTests:TypeNameMatchCollector:size()
58142=AbstractJavaSearchTests:ConstructorDeclarationsCollector:toString()
58143=AbstractJavaSearchTests:ConstructorDeclarationsCollector:acceptConstructor(int, char[], int, char[], char[][], char[][], int, char[], int, String, AccessRestriction)
58144=AbstractJavaSearchTests:search(String, int, int, SearchRequestor)
58145=AbstractJavaSearchTests:JavaSearchResultCollector:getSource(IResource, IJavaElement, ICompilationUnit)
58146=AbstractJavaSearchTests:searchAllMethodNames(String, int, String, int, IJavaSearchScope, MethodNameMatchRequestor)
58147=AbstractJavaSearchTests:checkAndAddtoBuffer(StringBuffer, char[], char)
58148=AbstractJavaSearchTests:JavaSearchResultCollector:getPathString(IResource, IJavaElement)
58149=AbstractJavaSearchTests:getJavaSearchCUScope(String, String, String)
58150=AbstractJavaSearchTests:MethodDeclarationsCollector:getTypeErasure(char[])
58151=AbstractJavaSearchTests:JavaSearchResultCollector:append(IType)
58152=AbstractJavaSearchTests:getJavaSearchScope15()
58153=AbstractJavaSearchTests:MethodNameMatchCollector:toString()
58154=AbstractJavaSearchTests:ConstructorDeclarationsCollector:size()
58155=AbstractJavaSearchTests:JavaSearchResultCollector:append(IMethod)
58156=AbstractJavaSearchTests:setUp()
58157=AbstractJavaSearchTests:search(String, int, int, int, IJavaSearchScope, SearchRequestor)
58158=AbstractJavaSearchTests:copyDirectory(File, File)
58159=AbstractJavaSearchTests:TypeNameMatchCollector:toString()
58160=AbstractJavaSearchTests:getJavaSearchWorkingCopiesScope()
58161=AbstractJavaSearchTests:JavaSearchResultCollector:showInsideDoc()
58162=AbstractJavaSearchTests:JavaSearchResultCollector:addLine(String)
58163=AbstractJavaSearchTests:search(String, int, int)
58164=AbstractJavaSearchTests:getJavaSearchWorkingCopiesScope(ICompilationUnit)
58165=AbstractJavaSearchTests:JavaSearchResultCollector:showOffset()
58166=AbstractJavaSearchTests:search(IJavaElement, int, int, IJavaSearchScope)
58167=AbstractJavaSearchTests:assertSearchResults(String)
58168=AbstractJavaSearchTests:searchAllMethodNames(String, int, String, int, String, int, String, int, IJavaSearchScope, IRestrictedAccessMethodRequestor)
58169=AbstractJavaSearchTests:MethodNameMatchCollector:toString(boolean)
58170=AbstractJavaSearchTests:JavaSearchResultCollector:acceptSearchMatch(SearchMatch)
58171=AbstractJavaSearchTests:MethodDeclarationsCollector:toString()
58172=AbstractJavaSearchTests:searchAllConstructorDeclarations(String, int, IRestrictedAccessConstructorRequestor)
58173=AbstractJavaSearchTests:searchDeclarationsOfAccessedFields(IJavaElement, SearchRequestor)
58174=AbstractJavaSearchTests:assertSearchResults(String, JavaSearchResultCollector)
58175=AbstractJavaSearchTests:JavaSearchResultCollector:JavaSearchResultCollector()
58176=AbstractJavaSearchTests:getJavaSearchScope15(String, boolean)
58177=AbstractJavaSearchTests:search(SearchPattern, IJavaSearchScope, SearchRequestor)
58178=AbstractJavaSearchTests:TypeNameMatchCollector:acceptTypeNameMatch(TypeNameMatch)
58179=AbstractJavaSearchTests:JavaSearchResultCollector:showMatchKind()
58180=AbstractJavaSearchTests:searchDeclarationsOfReferencedTypes(IJavaElement, SearchRequestor)
58181=AbstractJavaSearchTests:searchAllMethodNames(String, int, IRestrictedAccessMethodRequestor)
58182=AbstractJavaSearchTests:JavaSearchResultCollector:getElement(SearchMatch)
58183=AbstractJavaSearchTests:JavaSearchResultCollector:showProject()
58184=AbstractJavaSearchTests:JavaSearchResultCollector:showSynthetic()
58185=AbstractJavaSearchTests:getJavaSearchScope()
58186=AbstractJavaSearchTests:searchAllMethodNames(String, int, String, int, IJavaSearchScope, IRestrictedAccessMethodRequestor)
58187=AbstractJavaSearchTests:JavaSearchResultCollector:showPotential(boolean)
58188=AbstractJavaSearchTests:MethodDeclarationsCollector:size()
58189=AbstractJavaSearchTests:AbstractJavaSearchTests(String, int)
58190=AbstractJavaSearchTests:JavaSearchResultCollector:showSelection()
58191=AbstractJavaSearchTests:getJavaSearchPackageScope(String, String, boolean)
58192=AbstractJavaSearchTests:search(String, int, int, int)
58193=AbstractJavaSearchTests:search(String, int, int, int, IJavaSearchScope)
58194=AbstractJavaSearchTests:searchDeclarationsOfSentMessages(IJavaElement, SearchRequestor)
58195=AbstractJavaSearchTests:MethodDeclarationsCollector:acceptMethod(char[], int, char[], char[], int, char[], char[], char[][], char[][], char[], int, String, AccessRestriction, int)
58196=AbstractJavaSearchTests:searchAllTypeNames(String, String, int, TypeNameMatchCollector)
58197=AbstractJavaSearchTests:TypeNameMatchCollector:toString(int)
58198=AbstractJavaSearchTests:JavaSearchResultCollector:append(IField)
58199=AbstractJavaSearchTests:search(IJavaElement, int)
58200=AbstractJavaSearchTests:JavaSearchResultCollector:toString()
58201=AbstractJavaSearchTests:MethodNameMatchCollector:toFullyQualifiedNamesString()
58202=AbstractJavaSearchTests:AbstractJavaSearchTests(String)
58203=AbstractJavaSearchTests:JavaSearchResultCollector:showSuperInvocation()
58204=AbstractJavaSearchTests:searchAllMethodNames(String, int, String, int, String, int, String, int, IJavaSearchScope, MethodNameMatchRequestor)
58205=AbstractJavaSearchTests:JavaSearchResultCollector:append(IPackageFragment)
58206=InstallException:InstallException(String)
58207=InstallException:InstallException()
58208=ClasspathValidation:ClasspathValidation(JavaProject)
58209=ClasspathValidation:validate()
58210=CorrectLocalVariableType1:foo()
58211=Example:bar()
58212=Example:foo(int, int)
58213=ReadAnnotationTests:addQuestionSources()
58214=ReadAnnotationTests:ReadAnnotationTests(String)
58215=ReadAnnotationTests:addNoTypeSources()
58216=ReadAnnotationTests:test0()
58217=ReadAnnotationTests:addTriggerSource()
58218=ReadAnnotationTests:addAllSources()
58219=ReadAnnotationTests:suite()
58220=ReadAnnotationTests:test1()
58221=ReadAnnotationTests:setupTest()
58222=X15c:foo()
58223=ClassFileAttribute:getAttributeLength()
58224=ClassFileAttribute:ClassFileAttribute(byte[], IConstantPool, int)
58225=ClassFileAttribute:getAttributeNameIndex()
58226=ClassFileAttribute:getAttributeName()
58227=ProxyConsoleReader:readerLoop()
58228=ProxyConsoleReader:stop()
58229=ProxyConsoleReader:ProxyConsoleReader(String, InputStream, String)
58230=CodeSnippetClassLoader:loadIfNeeded(String)
58231=CodeSnippetClassLoader:loadClass(String, boolean)
58232=CodeSnippetClassLoader:makeClass(String, boolean)
58233=CodeSnippetClassLoader:supportsHotCodeReplacement()
58234=CodeSnippetClassLoader:delegateLoadClass(String)
58235=CodeSnippetClassLoader:storeClassDefinition(String, byte[])
58236=X05:foo(String)
58237=X17a:foo()
58238=Test:m(String, String[])
58239=X33:foo()
58240=ModelUpdater:elementAdded(Openable)
58241=ModelUpdater:close(Openable)
58242=ModelUpdater:addToParentInfo(Openable)
58243=ModelUpdater:traverseDelta(IJavaElementDelta, IPackageFragmentRoot, IJavaProject)
58244=ModelUpdater:elementRemoved(Openable)
58245=ModelUpdater:elementChanged(Openable)
58246=ModelUpdater:processJavaDelta(IJavaElementDelta)
58247=ModelUpdater:removeFromParentInfo(Openable)
58248=J9VMLauncher:launch()
58249=J9VMLauncher:setInternalDebugPort(int)
58250=J9VMLauncher:setSymbolPath(String)
58251=J9VMLauncher:getCommandLine()
58252=J9VMLauncher:J9VMLauncher()
58253=J9VMLauncher:getProxyOutFile()
58254=J9VMLauncher:buildBootClassPath()
58255=J9VMLauncher:setDebugPort(int)
58256=J9VMLauncher:getSymbolPath()
58257=J9VMLauncher:getInternalDebugPort()
58258=J9VMLauncher:getProxyCommandLine()
58259=J9VMLauncher:execCommandLine()
58260=J9VMLauncher:setProxyOutFile(String)
58261=Test:a()
58262=Test:m()
58263=AnnotationMemberValue:getMethodBinding()
58264=AnnotationMemberValue:AnnotationMemberValue(BaseProcessingEnvImpl, Object, MethodBinding)
58265=TestD2:bar()
58266=TestD2:foo()
58267=Requestor:Requestor(boolean, ICompilerRequestor, boolean, boolean)
58268=Requestor:outputClassFiles(CompilationResult)
58269=Requestor:acceptResult(CompilationResult)
58270=A:foo()
58271=BinaryLambdaMethod:isBinary()
58272=BinaryLambdaMethod:getPrimaryElement(boolean)
58273=BinaryLambdaMethod:BinaryLambdaMethod(JavaElement, String, String, int, String[], String[], String, SourceMethodElementInfo)
58274=Test:foo()
58275=JDTCompilerAdapter:logAndAddFilesToCompile(Commandline)
58276=JDTCompilerAdapter:setupJavacCommand()
58277=JDTCompilerAdapter:processCompilerArguments(Class)
58278=JDTCompilerAdapter:checkCompilerArgs(String[])
58279=JDTCompilerAdapter:createClasspathArgument(Commandline, Path)
58280=JDTCompilerAdapter:execute()
58281=RunJavaSearchGenericTests:getJavaSearchTestClasses()
58282=RunJavaSearchGenericTests:RunJavaSearchGenericTests(String)
58283=RunJavaSearchGenericTests:suite()
58284=TestD2:bar()
58285=TestD2:foo()
58286=AllPerformanceTests:suite()
58287=AllPerformanceTests:getAllTestClasses()
58288=AllPerformanceTests:getAdditionalTestClasses()
58289=Test:main(String[])
58290=Test:main(String[])
58291=JavadocTest_1_5:testBug95286_Default()
58292=JavadocTest_1_5:testBug209936_MemberSingleReference1()
58293=JavadocTest_1_5:test036()
58294=JavadocTest_1_5:test025()
58295=JavadocTest_1_5:test014()
58296=JavadocTest_1_5:JavadocTest_1_5(String)
58297=JavadocTest_1_5:test003()
58298=JavadocTest_1_5:testBug209936_MemberSingleReference3()
58299=JavadocTest_1_5:testBug132430c()
58300=JavadocTest_1_5:test038()
58301=JavadocTest_1_5:testBug83127b()
58302=JavadocTest_1_5:test027()
58303=JavadocTest_1_5:testBug204749b()
58304=JavadocTest_1_5:testBug83393b()
58305=JavadocTest_1_5:test016()
58306=JavadocTest_1_5:testBug96237_Public02()
58307=JavadocTest_1_5:testBug119857_Public03()
58308=JavadocTest_1_5:setUp()
58309=JavadocTest_1_5:testBug96237_Private03()
58310=JavadocTest_1_5:testBug322581a()
58311=JavadocTest_1_5:test032()
58312=JavadocTest_1_5:testBug83127d()
58313=JavadocTest_1_5:test021()
58314=JavadocTest_1_5:testBug209936_GenericMemberFullyQualifiedSingleReference()
58315=JavadocTest_1_5:test010()
58316=JavadocTest_1_5:testBug119857_Public01()
58317=JavadocTest_1_5:testBug209936_MemberFullyQualifiedSingleReference()
58318=JavadocTest_1_5:testBug96237_Private01()
58319=JavadocTest_1_5:test034()
58320=JavadocTest_1_5:testBug83127f()
58321=JavadocTest_1_5:testBug331872c()
58322=JavadocTest_1_5:test023()
58323=JavadocTest_1_5:test012()
58324=JavadocTest_1_5:testBug284333a()
58325=JavadocTest_1_5:getCompilerOptions()
58326=JavadocTest_1_5:test009()
58327=JavadocTest_1_5:testBug119857_Private01()
58328=JavadocTest_1_5:test040()
58329=JavadocTest_1_5:testBug96237_Private08()
58330=JavadocTest_1_5:testBug96237_Public08()
58331=JavadocTest_1_5:testBug209936_GenericMemberSingleReference()
58332=JavadocTest_1_5:testBug101283f()
58333=JavadocTest_1_5:testBug83127g()
58334=JavadocTest_1_5:testBug96237_Private06()
58335=JavadocTest_1_5:test031()
58336=JavadocTest_1_5:testBug101283d()
58337=JavadocTest_1_5:testBug209936a()
58338=JavadocTest_1_5:test005()
58339=JavadocTest_1_5:testBug87500a()
58340=JavadocTest_1_5:testBug95521()
58341=JavadocTest_1_5:test029()
58342=JavadocTest_1_5:testBug284333()
58343=JavadocTest_1_5:test018()
58344=JavadocTest_1_5:testBug96237_Public04()
58345=JavadocTest_1_5:testBug101283b()
58346=JavadocTest_1_5:test007()
58347=JavadocTest_1_5:testBug145007()
58348=JavadocTest_1_5:testBug86769()
58349=JavadocTest_1_5:testBug331872()
58350=JavadocTest_1_5:testBug96237_Public06()
58351=JavadocTest_1_5:testBug204749a()
58352=JavadocTest_1_5:test024()
58353=JavadocTest_1_5:testBug83393a()
58354=JavadocTest_1_5:testBug83804()
58355=JavadocTest_1_5:test013()
58356=JavadocTest_1_5:suite()
58357=JavadocTest_1_5:testBug209936_MemberSingleReference2()
58358=JavadocTest_1_5:testBug132430b()
58359=JavadocTest_1_5:test037()
58360=JavadocTest_1_5:testBug80257()
58361=JavadocTest_1_5:test026()
58362=JavadocTest_1_5:testBug83127a()
58363=JavadocTest_1_5:test015()
58364=JavadocTest_1_5:testBug112346()
58365=JavadocTest_1_5:testBug96237_Public01()
58366=JavadocTest_1_5:test004()
58367=JavadocTest_1_5:testBug209936_MemberSingleReference4()
58368=JavadocTest_1_5:test039()
58369=JavadocTest_1_5:testBug209936_GenericMemberQualifiedSingleReference()
58370=JavadocTest_1_5:testBug331872b()
58371=JavadocTest_1_5:test020()
58372=JavadocTest_1_5:testClass()
58373=JavadocTest_1_5:testBug119857_Public02()
58374=JavadocTest_1_5:testBug132430()
58375=JavadocTest_1_5:testBug96237_Private04()
58376=JavadocTest_1_5:test033()
58377=JavadocTest_1_5:testBug83127c()
58378=JavadocTest_1_5:testBug331872d()
58379=JavadocTest_1_5:test022()
58380=JavadocTest_1_5:test011()
58381=JavadocTest_1_5:testBug101283g()
58382=JavadocTest_1_5:testBug284333b()
58383=JavadocTest_1_5:testBug322581b()
58384=JavadocTest_1_5:testBug96237_Private02()
58385=JavadocTest_1_5:testBug209936_MemberQualifiedSingleReference2()
58386=JavadocTest_1_5:test035()
58387=JavadocTest_1_5:testBug247037a()
58388=JavadocTest_1_5:testBug83127e()
58389=JavadocTest_1_5:testBug95286_Private()
58390=JavadocTest_1_5:testBug96237_Private07()
58391=JavadocTest_1_5:testBug209936_MemberQualifiedSingleReference1()
58392=JavadocTest_1_5:testBug247037b()
58393=JavadocTest_1_5:testBug96237_Public07()
58394=JavadocTest_1_5:testBug209936_GenericMemberImplicitReference()
58395=JavadocTest_1_5:testBug101283e()
58396=JavadocTest_1_5:testBug83127h()
58397=JavadocTest_1_5:testBug119857_Private02()
58398=JavadocTest_1_5:testBug96237_Private05()
58399=JavadocTest_1_5:testBug95521b()
58400=JavadocTest_1_5:testBug119857_Types()
58401=JavadocTest_1_5:test030()
58402=JavadocTest_1_5:testBug101283c()
58403=JavadocTest_1_5:testBug87500b()
58404=JavadocTest_1_5:testBug119857()
58405=JavadocTest_1_5:test028()
58406=JavadocTest_1_5:test017()
58407=JavadocTest_1_5:testBug101283a()
58408=JavadocTest_1_5:testBug96237_Public03()
58409=JavadocTest_1_5:testBug209936b()
58410=JavadocTest_1_5:test006()
58411=JavadocTest_1_5:testBug119857_Fields()
58412=JavadocTest_1_5:testBug209936_MemberImplicitReference()
58413=JavadocTest_1_5:test019()
58414=JavadocTest_1_5:testBug96237_Public05()
58415=JavadocTest_1_5:test008()
58416=JavadocTest_1_5:_testBug82514()
58417=JavadocTest_1_5:testBug119857_Methods()
58418=SourceFieldElementInfo:getTypeSignature()
58419=SourceFieldElementInfo:setTypeName(char[])
58420=SourceFieldElementInfo:getTypeName()
58421=SourceFieldElementInfo:getInitializationSource()
58422=X17c:getResolvedClasspath(boolean)
58423=X:foo()
58424=Test:foo(int)
58425=X:main(String[])
58426=X:foo()
58427=A:foo()
58428=A:foo()
58429=SuperTypeNamesCollector:buildBindings(ICompilationUnit, boolean)
58430=SuperTypeNamesCollector:matches(char[][])
58431=SuperTypeNamesCollector:addToResult(char[][])
58432=SuperTypeNamesCollector:TypeDeclarationVisitor:visit(Initializer, MethodScope)
58433=SuperTypeNamesCollector:collect()
58434=SuperTypeNamesCollector:TypeDeclarationVisitor:visit(TypeDeclaration, CompilationUnitScope)
58435=SuperTypeNamesCollector:TypeDeclarationVisitor:visit(ConstructorDeclaration, ClassScope)
58436=SuperTypeNamesCollector:addIfSamePackage(char[][], char[][])
58437=SuperTypeNamesCollector:TypeDeclarationVisitor:visit(FieldDeclaration, MethodScope)
58438=SuperTypeNamesCollector:matches(ReferenceBinding)
58439=SuperTypeNamesCollector:collectSuperTypeNames(ReferenceBinding, char[][])
58440=SuperTypeNamesCollector:TypeDeclarationVisitor:visit(MethodDeclaration, ClassScope)
58441=SuperTypeNamesCollector:TypeDeclarationVisitor:visit(TypeDeclaration, ClassScope)
58442=SuperTypeNamesCollector:getSamePackageSuperTypeNames()
58443=SuperTypeNamesCollector:SuperTypeNamesCollector(SearchPattern, char[], char[], MatchLocator, IType, IProgressMonitor)
58444=SuperTypeNamesCollector:TypeDeclarationVisitor:visit(TypeDeclaration, BlockScope)
58445=SuperTypeNamesCollector:getPathsOfDeclaringType()
58446=A:foo()
58447=Declarations:hides(MemberDeclaration, MemberDeclaration)
58448=Declarations:overrides(MethodDeclaration, MethodDeclaration)
58449=DefaultStackMapFrame:sizeInBytes()
58450=DefaultStackMapFrame:getOffsetDelta()
58451=DefaultStackMapFrame:getLocals()
58452=DefaultStackMapFrame:DefaultStackMapFrame(byte[], IConstantPool, int)
58453=DefaultStackMapFrame:getNumberOfStackItems()
58454=DefaultStackMapFrame:getStackItems()
58455=DefaultStackMapFrame:getFrameType()
58456=DefaultStackMapFrame:getNumberOfLocals()
58457=Test:foo()
58458=HierarchyBinaryType:getName()
58459=HierarchyBinaryType:enrichWithExternalAnnotationsFor(ITypeAnnotationWalker, Object, LookupEnvironment)
58460=HierarchyBinaryType:sourceFileName()
58461=HierarchyBinaryType:getGenericSignature()
58462=HierarchyBinaryType:recordSuperType(char[], char[], char)
58463=HierarchyBinaryType:getTagBits()
58464=HierarchyBinaryType:isLocal()
58465=HierarchyBinaryType:getTypeAnnotations()
58466=HierarchyBinaryType:getFileName()
58467=HierarchyBinaryType:getEnclosingMethod()
58468=HierarchyBinaryType:getMethods()
58469=HierarchyBinaryType:isMember()
58470=HierarchyBinaryType:getFields()
58471=HierarchyBinaryType:getModifiers()
58472=HierarchyBinaryType:getSuperclassName()
58473=HierarchyBinaryType:getSourceName()
58474=HierarchyBinaryType:getExternalAnnotationStatus()
58475=HierarchyBinaryType:HierarchyBinaryType(int, char[], char[], char[], char[][], char)
58476=HierarchyBinaryType:getMissingTypeNames()
58477=HierarchyBinaryType:getAnnotations()
58478=HierarchyBinaryType:toString()
58479=HierarchyBinaryType:isAnonymous()
58480=HierarchyBinaryType:getMemberTypes()
58481=HierarchyBinaryType:getEnclosingTypeName()
58482=HierarchyBinaryType:getInterfaceNames()
58483=HierarchyBinaryType:isBinaryType()
58484=IGenericMethod:isConstructor()
58485=IGenericMethod:getArgumentNames()
58486=IGenericMethod:getModifiers()
58487=X:main(String[])
58488=X:bar(String)
58489=A:foo()
58490=ForeachStatement:generateCode(BlockScope, CodeStream)
58491=ForeachStatement:printStatement(int, StringBuffer)
58492=ForeachStatement:traverse(ASTVisitor, BlockScope)
58493=ForeachStatement:resolve(BlockScope)
58494=ForeachStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
58495=ForeachStatement:ForeachStatement(LocalDeclaration, Expression, int)
58496=X01:foo(int, int)
58497=RenameTests:renamePositive(IJavaElement, String, boolean)
58498=RenameTests:testRenameMethodResultingInCollision()
58499=RenameTests:testRenameCompilationUnitWithNull()
58500=RenameTests:testRenameMethodsWithInvalidName()
58501=RenameTests:testRenameBinaryMethod()
58502=RenameTests:testRenameInitializer()
58503=RenameTests:testRenamePF()
58504=RenameTests:renamePositive(IJavaElement[], IJavaElement[], String[], boolean)
58505=RenameTests:testRenamePFWithSubPackages()
58506=RenameTests:testRenameCU2()
58507=RenameTests:testRenameCompilationUnitsCheckingDeltas()
58508=RenameTests:testRenameMethod()
58509=RenameTests:testRenameConstructor()
58510=RenameTests:suite()
58511=RenameTests:testRenameMainTypes()
58512=RenameTests:renameNegative(IJavaElement, String, boolean, int)
58513=RenameTests:testRenamePF3()
58514=RenameTests:testRenameBinaryField()
58515=RenameTests:testRenameCU4()
58516=RenameTests:testRenameBinaryType()
58517=RenameTests:renamePositive(IJavaElement[], IJavaElement[], String[], boolean, boolean)
58518=RenameTests:renamePositive(IJavaElement[], IJavaElement[], String[], boolean, boolean, IProgressMonitor)
58519=RenameTests:testRenameFieldsWithCancel()
58520=RenameTests:testRenameMainTypesAndAChild()
58521=RenameTests:testRenameCompilationUnitAndType()
58522=RenameTests:setUpSuite()
58523=RenameTests:renameNegative(IJavaElement[], String[], boolean, int)
58524=RenameTests:testRenameEnum2()
58525=RenameTests:renamePositive(IJavaElement[], String[], boolean)
58526=RenameTests:tearDown()
58527=RenameTests:testRenameFieldsCheckingDeltasAndPositions()
58528=RenameTests:setUp()
58529=RenameTests:testRenameCU3()
58530=RenameTests:testRenameCU1()
58531=RenameTests:testRenameEmptyPF()
58532=RenameTests:testRenameWithInvalidRenamings()
58533=RenameTests:testRenameFieldsMultiStatus()
58534=RenameTests:RenameTests(String)
58535=RenameTests:testRenameCompilationUnitWithInvalidName()
58536=RenameTests:testRenamePF2()
58537=RenameTests:testRenameEnum()
58538=RenameTests:testRenameWorkingCopy()
58539=RenameTests:tearDownSuite()
58540=RenameTests:testRenameSyntaxErrorMethod()
58541=RenameTests:testRenameFieldFragment()
58542=RenameTests:testRenameFieldsResultingInCollision()
58543=RenameTests:testRenameCompilationUnitResultingInCollision()
58544=X09:bar()
58545=TypeVariableBinding:TypeVariableBinding(char[], Binding, int)
58546=TypeVariableBinding:superInterfaces()
58547=TypeVariableBinding:toString()
58548=TypeVariableBinding:genericSignature()
58549=TypeVariableBinding:constantPoolName()
58550=TypeVariableBinding:collectSubstitutes(TypeBinding, Map)
58551=TypeVariableBinding:debugName()
58552=TypeVariableBinding:superclass()
58553=TypeVariableBinding:isEquivalentTo(TypeBinding)
58554=TypeVariableBinding:boundCheck(Substitution, TypeBinding)
58555=TypeVariableBinding:genericTypeSignature()
58556=TypeVariableBinding:shortReadableName()
58557=TypeVariableBinding:erasure()
58558=TypeVariableBinding:readableName()
58559=TypeVariableBinding:isErasureBoundTo(TypeBinding)
58560=TypeVariableBinding:isTypeVariable()
58561=SelectionOnFieldType:SelectionOnFieldType(TypeReference)
58562=SelectionOnFieldType:printStatement(int, StringBuffer)
58563=PackageImportComparator:PackageImportComparator(JavaProject)
58564=PackageImportComparator:compare(ImportName, ImportName)
58565=PackageImportComparator:determinePackageName(ImportName)
58566=QualifiedType:subtreeMatch0(ASTMatcher, Object)
58567=QualifiedType:getNodeType0()
58568=QualifiedType:treeSize()
58569=QualifiedType:getQualifier()
58570=QualifiedType:clone0(AST)
58571=QualifiedType:accept0(ASTVisitor)
58572=QualifiedType:internalStructuralPropertiesForType(int)
58573=QualifiedType:memSize()
58574=QualifiedType:internalAnnotationsProperty()
58575=QualifiedType:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
58576=QualifiedType:setName(SimpleName)
58577=QualifiedType:setQualifier(Type)
58578=QualifiedType:getName()
58579=QualifiedType:propertyDescriptors(int)
58580=QualifiedType:QualifiedType(AST)
58581=QualifiedType:internalGetChildListProperty(ChildListPropertyDescriptor)
58582=SearchableEnvironment:findType(char[], char[][])
58583=SearchableEnvironment:findType(char[][])
58584=SearchableEnvironment:convertSearchFilterToModelFilter(int)
58585=SearchableEnvironment:findTypes(char[], boolean, boolean, int, ISearchRequestor, IProgressMonitor)
58586=SearchableEnvironment:findExactTypes(char[], boolean, int, ISearchRequestor)
58587=SearchableEnvironment:getExternalAnnotationPath(IClasspathEntry)
58588=SearchableEnvironment:toStringCharChar(char[][])
58589=SearchableEnvironment:SearchableEnvironment(JavaProject, WorkingCopyOwner)
58590=SearchableEnvironment:findConstructorDeclarations(char[], boolean, ISearchRequestor, IProgressMonitor)
58591=SearchableEnvironment:SearchableEnvironment(JavaProject, org.eclipse.jdt.core.ICompilationUnit[])
58592=SearchableEnvironment:findTypes(String, ISearchRequestor, int)
58593=SearchableEnvironment:toStringChar(char[])
58594=SearchableEnvironment:isPackage(char[][], char[])
58595=SearchableEnvironment:getSearchScope()
58596=SearchableEnvironment:findPackages(char[], ISearchRequestor)
58597=SearchableEnvironment:findTypes(char[], boolean, boolean, int, ISearchRequestor)
58598=SearchableEnvironment:find(String, String)
58599=SearchableEnvironment:findExactTypes(String, ISearchRequestor, int)
58600=SearchableEnvironment:cleanup()
58601=SingleNameReference:unboundReferenceErrorName()
58602=SingleNameReference:computeConversion(Scope, TypeBinding, TypeBinding)
58603=SingleNameReference:nullStatus(FlowInfo, FlowContext)
58604=SingleNameReference:analyseAssignment(BlockScope, FlowContext, FlowInfo, Assignment, boolean)
58605=SingleNameReference:resolveType(BlockScope)
58606=SingleNameReference:isEquivalent(Reference)
58607=SingleNameReference:traverse(ASTVisitor, BlockScope)
58608=SingleNameReference:generateCode(BlockScope, CodeStream, boolean)
58609=SingleNameReference:getName()
58610=SingleNameReference:reportError(BlockScope)
58611=SingleNameReference:nullAnnotatedVariableBinding(boolean)
58612=SingleNameReference:checkFieldAccess(BlockScope)
58613=SingleNameReference:checkNPE(BlockScope, FlowContext, FlowInfo, int)
58614=SingleNameReference:manageEnclosingInstanceAccessIfNecessary(BlockScope, FlowInfo)
58615=SingleNameReference:generateCompoundAssignment(BlockScope, CodeStream, Expression, int, int, boolean)
58616=SingleNameReference:SingleNameReference(char[], long)
58617=SingleNameReference:generateCompoundAssignment(BlockScope, CodeStream, MethodBinding, Expression, int, int, boolean)
58618=SingleNameReference:generateAssignment(BlockScope, CodeStream, Assignment, boolean)
58619=SingleNameReference:analyseCode(BlockScope, FlowContext, FlowInfo)
58620=SingleNameReference:generatePostIncrement(BlockScope, CodeStream, CompoundAssignment, boolean)
58621=SingleNameReference:analyseCode(BlockScope, FlowContext, FlowInfo, boolean)
58622=SingleNameReference:manageSyntheticAccessIfNecessary(BlockScope, FlowInfo, boolean)
58623=SingleNameReference:postConversionType(Scope)
58624=SingleNameReference:genericTypeArguments()
58625=SingleNameReference:traverse(ASTVisitor, ClassScope)
58626=SingleNameReference:printExpression(int, StringBuffer)
58627=SingleNameReference:localVariableBinding()
58628=SingleNameReference:generateReceiver(CodeStream)
58629=Test:foo(Exception)
58630=I:f2()
58631=I:f()
58632=I:f1z()
58633=I:fz()
58634=I:f11()
58635=I:f1()
58636=Test:bar()
58637=Test:foo(int)
58638=X14:foo()
58639=X:main(String[])
58640=X:foo()
58641=X29:foo()
58642=X:X()
58643=A:foo(long, int, String, Object)
58644=IBinaryField:getTypeName()
58645=IBinaryField:getTypeAnnotations()
58646=IBinaryField:getTagBits()
58647=IBinaryField:getName()
58648=IBinaryField:getGenericSignature()
58649=IBinaryField:getAnnotations()
58650=IBinaryField:getConstant()
58651=Bug49361:main(String[])
58652=Example:foo(int, int, int, int, int, int)
58653=ModelTesterProc:init(ProcessingEnvironment)
58654=ModelTesterProc:round(Set<? extends TypeElement>, RoundEnvironment)
58655=ModelTesterProc:testFieldType(RoundEnvironment, Element, String, String)
58656=ModelTesterProc:testMethodType(RoundEnvironment, Element, String, String)
58657=ModelTesterProc:process(Set<? extends TypeElement>, RoundEnvironment)
58658=AssertionTest:test018()
58659=AssertionTest:test007()
58660=AssertionTest:test009()
58661=AssertionTest:test014()
58662=AssertionTest:test003()
58663=AssertionTest:test016()
58664=AssertionTest:test005()
58665=AssertionTest:test022()
58666=AssertionTest:test011()
58667=AssertionTest:test013()
58668=AssertionTest:test020()
58669=AssertionTest:test006()
58670=AssertionTest:testClass()
58671=AssertionTest:test019()
58672=AssertionTest:test008()
58673=AssertionTest:test002()
58674=AssertionTest:test015()
58675=AssertionTest:test004()
58676=AssertionTest:test017()
58677=AssertionTest:test021()
58678=AssertionTest:test010()
58679=AssertionTest:test023()
58680=AssertionTest:test012()
58681=AssertionTest:test001()
58682=AssertionTest:suite()
58683=AssertionTest:AssertionTest(String)
58684=Test:main(String[])
58685=AnnotationBinding:getAnnotationType()
58686=AnnotationBinding:addStandardAnnotations(AnnotationBinding[], long, LookupEnvironment)
58687=AnnotationBinding:toString()
58688=AnnotationBinding:AnnotationBinding(Annotation)
58689=AnnotationBinding:buildTargetAnnotation(long, LookupEnvironment)
58690=AnnotationBinding:buildMarkerAnnotationForMemberType(char[][], LookupEnvironment)
58691=AnnotationBinding:getElementValuePairs()
58692=AnnotationBinding:setMethodBindings(ReferenceBinding, ElementValuePair[])
58693=AnnotationBinding:equals(Object)
58694=AnnotationBinding:buildRetentionAnnotation(long, LookupEnvironment)
58695=AnnotationBinding:computeUniqueKey(char[])
58696=AnnotationBinding:resolve()
58697=AnnotationBinding:AnnotationBinding(ReferenceBinding, ElementValuePair[])
58698=AnnotationBinding:hashCode()
58699=AnnotationBinding:buildMarkerAnnotation(char[][], LookupEnvironment)
58700=A:foo()
58701=CastTest:test028()
58702=CastTest:test017()
58703=CastTest:_test006()
58704=CastTest:test059c()
58705=CastTest:testClass()
58706=CastTest:testBug428274c()
58707=CastTest:test008()
58708=CastTest:test061()
58709=CastTest:test050()
58710=CastTest:test024()
58711=CastTest:CastTest(String)
58712=CastTest:test061b()
58713=CastTest:test013()
58714=CastTest:test059()
58715=CastTest:test428522c()
58716=CastTest:test002()
58717=CastTest:test048()
58718=CastTest:test037()
58719=CastTest:test026()
58720=CastTest:test015()
58721=CastTest:test004()
58722=CastTest:testBug428274()
58723=CastTest:test428388b()
58724=CastTest:test039()
58725=CastTest:suite()
58726=CastTest:test020()
58727=CastTest:test428388c()
58728=CastTest:test055()
58729=CastTest:test044()
58730=CastTest:test033()
58731=CastTest:test022()
58732=CastTest:test057()
58733=CastTest:test011()
58734=CastTest:test428388e()
58735=CastTest:test428522a()
58736=CastTest:test046()
58737=CastTest:test035()
58738=CastTest:test009()
58739=CastTest:test448112()
58740=CastTest:test051()
58741=CastTest:test420283()
58742=CastTest:test428388g()
58743=CastTest:test461706()
58744=CastTest:test040()
58745=CastTest:test053()
58746=CastTest:test428388i()
58747=CastTest:test461706a()
58748=CastTest:test042()
58749=CastTest:test031()
58750=CastTest:test005()
58751=CastTest:test029()
58752=CastTest:test018()
58753=CastTest:test007()
58754=CastTest:test060()
58755=CastTest:testBug428274b()
58756=CastTest:test047()
58757=CastTest:test001()
58758=CastTest:test036()
58759=CastTest:test025()
58760=CastTest:test014()
58761=CastTest:tes019()
58762=CastTest:test003()
58763=CastTest:test049()
58764=CastTest:test059b()
58765=CastTest:test428388a()
58766=CastTest:test441731()
58767=CastTest:test038()
58768=CastTest:test027()
58769=CastTest:test016()
58770=CastTest:test043()
58771=CastTest:test032()
58772=CastTest:test021()
58773=CastTest:test428388d()
58774=CastTest:test056()
58775=CastTest:test010()
58776=CastTest:getCompilerOptions()
58777=CastTest:test045()
58778=CastTest:test428522()
58779=CastTest:test034()
58780=CastTest:test023()
58781=CastTest:test058()
58782=CastTest:test012()
58783=CastTest:test428388f()
58784=CastTest:test428522b()
58785=CastTest:test052()
58786=CastTest:test428388h()
58787=CastTest:test041()
58788=CastTest:test030()
58789=CastTest:test428388()
58790=CastTest:test054()
58791=CastTest:test428388j()
58792=ResolveDuplicateMethodDeclaration11:Inner:foo(Zork)
58793=IInnerClassesAttributeEntry:getInnerClassName()
58794=IInnerClassesAttributeEntry:getInnerName()
58795=IInnerClassesAttributeEntry:getOuterClassNameIndex()
58796=IInnerClassesAttributeEntry:getOuterClassName()
58797=IInnerClassesAttributeEntry:getInnerNameIndex()
58798=IInnerClassesAttributeEntry:getInnerClassNameIndex()
58799=IInnerClassesAttributeEntry:getAccessFlags()
58800=Parser:foo()
58801=X08:foo(Object, int)
58802=X29:foo()
58803=RecoveredBlock:updateParseTree()
58804=RecoveredBlock:resetPendingModifiers()
58805=RecoveredBlock:attach(RecoveredStatement)
58806=RecoveredBlock:updatedBlock(int, Set<TypeDeclaration>)
58807=RecoveredBlock:add(TypeDeclaration, int, boolean)
58808=RecoveredBlock:updateOnOpeningBrace(int, int)
58809=RecoveredBlock:updatedStatement(int, Set<TypeDeclaration>)
58810=RecoveredBlock:add(TypeDeclaration, int)
58811=RecoveredBlock:add(Block, int)
58812=RecoveredBlock:add(AbstractMethodDeclaration, int)
58813=RecoveredBlock:RecoveredBlock(Block, RecoveredElement, int)
58814=RecoveredBlock:toString(int)
58815=RecoveredBlock:add(Statement, int, boolean)
58816=RecoveredBlock:add(LocalDeclaration, int, boolean)
58817=RecoveredBlock:add(LocalDeclaration, int)
58818=RecoveredBlock:addModifier(int, int)
58819=RecoveredBlock:add(FieldDeclaration, int)
58820=RecoveredBlock:addAnnotationName(int, int, int, int)
58821=RecoveredBlock:attachPendingModifiers(RecoveredAnnotation[], int, int, int)
58822=RecoveredBlock:updateOnClosingBrace(int, int)
58823=RecoveredBlock:parseTree()
58824=RecoveredBlock:add(Statement, int)
58825=firstClass:myMethod()
58826=JavaSearchGenericTypeTests:setUp()
58827=JavaSearchGenericTypeTests:testParameterizedTypeMultipleArguments01()
58828=JavaSearchGenericTypeTests:testParameterizedArrayTypeSingleArgument02()
58829=JavaSearchGenericTypeTests:testTypeSingleArgument02()
58830=JavaSearchGenericTypeTests:testStringAnyStrings03()
58831=JavaSearchGenericTypeTests:testStringNoArgument03()
58832=JavaSearchGenericTypeTests:addResultLine(StringBuffer, char[])
58833=JavaSearchGenericTypeTests:JavaSearchGenericTypeTests(String, int)
58834=JavaSearchGenericTypeTests:testStringParameterizedSingleArgument02()
58835=JavaSearchGenericTypeTests:testParameterizedArrayTypeSingleArgument04()
58836=JavaSearchGenericTypeTests:JavaSearchGenericTypeTests(String)
58837=JavaSearchGenericTypeTests:testStringAnyStrings01()
58838=JavaSearchGenericTypeTests:testStringNoArgument05()
58839=JavaSearchGenericTypeTests:testStringParameterizedMultipleArguments03()
58840=JavaSearchGenericTypeTests:testStringNestedMultipleArguments02()
58841=JavaSearchGenericTypeTests:testStringNestedSingleArgument04()
58842=JavaSearchGenericTypeTests:testParameterizedArrayTypeMultipleArguments02()
58843=JavaSearchGenericTypeTests:testStringParameterizedMultipleArguments05()
58844=JavaSearchGenericTypeTests:testStringNestedMultipleArguments04()
58845=JavaSearchGenericTypeTests:testTypeSingleArgument04()
58846=JavaSearchGenericTypeTests:testStringNestedSingleArgument02()
58847=JavaSearchGenericTypeTests:testStringNoArgument01()
58848=JavaSearchGenericTypeTests:testParameterizedArrayTypeMultipleArguments04()
58849=JavaSearchGenericTypeTests:testTypeMultipleArguments03()
58850=JavaSearchGenericTypeTests:testStringParameterizedMultipleArguments01()
58851=JavaSearchGenericTypeTests:testTypeNestedSingleArgument04()
58852=JavaSearchGenericTypeTests:testStringParameterizedSingleArgument04()
58853=JavaSearchGenericTypeTests:testParameterizedTypeMultipleArguments04()
58854=JavaSearchGenericTypeTests:testStringNoArgument07()
58855=JavaSearchGenericTypeTests:testTypeNestedMultipleArguments03()
58856=JavaSearchGenericTypeTests:testTypeNestedSingleArgument02()
58857=JavaSearchGenericTypeTests:testTypeMultipleArguments01()
58858=JavaSearchGenericTypeTests:testParameterizedTypeSingleArgument02()
58859=JavaSearchGenericTypeTests:testStringAnyStrings05()
58860=JavaSearchGenericTypeTests:testParameterizedTypeMultipleArguments02()
58861=JavaSearchGenericTypeTests:testTypeNestedMultipleArguments01()
58862=JavaSearchGenericTypeTests:testTypeSingleArgument01()
58863=JavaSearchGenericTypeTests:testStringNestedSingleArgument01()
58864=JavaSearchGenericTypeTests:testStringAnyStrings02()
58865=JavaSearchGenericTypeTests:testStringNoArgument04()
58866=JavaSearchGenericTypeTests:testParameterizedTypeSingleArgument04()
58867=JavaSearchGenericTypeTests:testParameterizedArrayTypeSingleArgument03()
58868=JavaSearchGenericTypeTests:testStringNoArgument06()
58869=JavaSearchGenericTypeTests:testStringParameterizedSingleArgument01()
58870=JavaSearchGenericTypeTests:testStringNestedMultipleArguments01()
58871=JavaSearchGenericTypeTests:suite()
58872=JavaSearchGenericTypeTests:testParameterizedArrayTypeMultipleArguments01()
58873=JavaSearchGenericTypeTests:testStringParameterizedMultipleArguments02()
58874=JavaSearchGenericTypeTests:testStringNestedMultipleArguments03()
58875=JavaSearchGenericTypeTests:testTypeSingleArgument03()
58876=JavaSearchGenericTypeTests:testStringNestedSingleArgument03()
58877=JavaSearchGenericTypeTests:testStringNoArgument02()
58878=JavaSearchGenericTypeTests:testParameterizedType_Bug83713()
58879=JavaSearchGenericTypeTests:removeLastTypeArgument(char[])
58880=JavaSearchGenericTypeTests:testParameterizedArrayTypeMultipleArguments03()
58881=JavaSearchGenericTypeTests:testStringParameterizedMultipleArguments04()
58882=JavaSearchGenericTypeTests:testStringNestedMultipleArguments05()
58883=JavaSearchGenericTypeTests:testTypeMultipleArguments04()
58884=JavaSearchGenericTypeTests:testParameterizedTypeSingleArgument01()
58885=JavaSearchGenericTypeTests:testTypeNestedMultipleArguments04()
58886=JavaSearchGenericTypeTests:testStringNoArgument08()
58887=JavaSearchGenericTypeTests:testTypeNestedSingleArgument03()
58888=JavaSearchGenericTypeTests:testStringParameterizedSingleArgument03()
58889=JavaSearchGenericTypeTests:testTypeMultipleArguments02()
58890=JavaSearchGenericTypeTests:testParameterizedTypeSingleArgument03()
58891=JavaSearchGenericTypeTests:testStringAnyStrings04()
58892=JavaSearchGenericTypeTests:testParameterizedTypeMultipleArguments03()
58893=JavaSearchGenericTypeTests:testTypeNestedMultipleArguments02()
58894=JavaSearchGenericTypeTests:testTypeNestedSingleArgument01()
58895=JavaSearchGenericTypeTests:testStringParameterizedSingleArgument05()
58896=JavaSearchGenericTypeTests:testStringAnyStrings06()
58897=JavaSearchGenericTypeTests:testParameterizedArrayTypeSingleArgument01()
58898=IdeFilerImpl:IdeFilerImpl(IdeAnnotationProcessorManager, IdeProcessingEnvImpl)
58899=IdeFilerImpl:createResource(Location, CharSequence, CharSequence, Element)
58900=IdeFilerImpl:createSourceFile(CharSequence, Element)
58901=IdeFilerImpl:getFileFromOutputLocation(Location, CharSequence, CharSequence)
58902=IdeFilerImpl:createClassFile(CharSequence, Element)
58903=IdeFilerImpl:getResource(Location, CharSequence, CharSequence)
58904=IdeFilerImpl:validatePath(IFile)
58905=CompletionOnSingleTypeReference:CompletionOnSingleTypeReference(char[], long)
58906=CompletionOnSingleTypeReference:augmentTypeWithAdditionalDimensions(int, Annotation[][], boolean)
58907=CompletionOnSingleTypeReference:printExpression(int, StringBuffer)
58908=CompletionOnSingleTypeReference:isInterface()
58909=CompletionOnSingleTypeReference:getTypeBinding(Scope)
58910=CompletionOnSingleTypeReference:CompletionOnSingleTypeReference(char[], long, int)
58911=CompletionOnSingleTypeReference:isSuperType()
58912=CompletionOnSingleTypeReference:aboutToResolve(Scope)
58913=CompletionOnSingleTypeReference:isClass()
58914=CompletionOnSingleTypeReference:setKind(int)
58915=CompletionOnSingleTypeReference:isException()
58916=CompletionOnSingleTypeReference:resolveTypeEnclosing(BlockScope, ReferenceBinding)
58917=X:bar(int, String)
58918=X:X()
58919=Foo:foo1()
58920=Foo:foo3()
58921=Foo:foo2()
58922=X07:foo()
58923=AnnotationProcessor:process()
58924=ExecutableTypeImpl:getThrownTypes()
58925=ExecutableTypeImpl:getKind()
58926=ExecutableTypeImpl:accept(TypeVisitor<R, P>, P)
58927=ExecutableTypeImpl:getReturnType()
58928=ExecutableTypeImpl:ExecutableTypeImpl(BaseProcessingEnvImpl, MethodBinding)
58929=ExecutableTypeImpl:getAnnotationBindings()
58930=ExecutableTypeImpl:getTypeVariables()
58931=ExecutableTypeImpl:getParameterTypes()
58932=ExecutableTypeImpl:getReceiverType()
58933=ExecutableTypeImpl:toString()
58934=Bug:case4(java.lang.List<Object>)
58935=Bug:case3(List<Object>)
58936=Bug:case1(List<Object>)
58937=Bug:case2(List)
58938=ILineNumberAttribute:getLineNumberTableLength()
58939=ILineNumberAttribute:getLineNumberTable()
58940=X81556:foo()
58941=FieldInfo:isDeprecated()
58942=FieldInfo:getName()
58943=FieldInfo:getDescriptor()
58944=FieldInfo:getDescriptorIndex()
58945=FieldInfo:getNameIndex()
58946=FieldInfo:getAttributes()
58947=FieldInfo:getConstantValueAttribute()
58948=FieldInfo:isSynthetic()
58949=FieldInfo:getAttributeCount()
58950=FieldInfo:FieldInfo(byte, IConstantPool, int)
58951=FieldInfo:hasConstantValueAttribute()
58952=FieldInfo:getAccessFlags()
58953=FieldInfo:sizeInBytes()
58954=DeleteTests:suite()
58955=DeleteTests:testDeleteField3()
58956=DeleteTests:testDeleteBinaryMethod()
58957=DeleteTests:testDeleteCompilationUnit4()
58958=DeleteTests:testDeleteField1()
58959=DeleteTests:testDeleteSyntaxErrorInMethod1()
58960=DeleteTests:testDeleteSyntaxErrorType()
58961=DeleteTests:testDeleteCompilationUnit2()
58962=DeleteTests:testDeleteSyntaxErrorInMethod3()
58963=DeleteTests:testDeleteAllImports()
58964=DeleteTests:testDeleteProjectAfterUsingJar()
58965=DeleteTests:testDeletePackageFragment2()
58966=DeleteTests:tearDownSuite()
58967=DeleteTests:testDeleteType1()
58968=DeleteTests:testDeletePackageFragment4()
58969=DeleteTests:testDeleteConstructor()
58970=DeleteTests:testDeleteField4()
58971=DeleteTests:setUpSuite()
58972=DeleteTests:testDeleteField2()
58973=DeleteTests:testDeleteMultipleMembersFromVariousCUs()
58974=DeleteTests:testDeleteCompilationUnit5()
58975=DeleteTests:setUp()
58976=DeleteTests:testDeleteCompilationUnit3()
58977=DeleteTests:testDeleteSyntaxErrorInMethod2()
58978=DeleteTests:testDeleteCompilationUnit1()
58979=DeleteTests:testDeletePackageFragment1()
58980=DeleteTests:testDeleteSyntaxErrorField()
58981=DeleteTests:testDeleteImportDeclaration()
58982=DeleteTests:testDeleteBinaryType()
58983=DeleteTests:testDeleteWithInvalidInput()
58984=DeleteTests:testDeleteMethod()
58985=DeleteTests:testDeletePackageFragment3()
58986=DeleteTests:testDeleteEmptyPackageFragment()
58987=DeleteTests:testDeletePackageDeclaration()
58988=DeleteTests:testDeleteType2()
58989=DeleteTests:testDeleteField5()
58990=DeleteTests:DeleteTests(String)
58991=Test:main(String[])
58992=ASTRewritingPackageDeclTest:ASTRewritingPackageDeclTest(String, int)
58993=ASTRewritingPackageDeclTest:testAnnotations_since_3()
58994=ASTRewritingPackageDeclTest:ASTRewritingPackageDeclTest(String)
58995=ASTRewritingPackageDeclTest:suite()
58996=LRUCacheEnumerator:LRUEnumeratorElement:LRUEnumeratorElement(Object)
58997=LRUCacheEnumerator:hasMoreElements()
58998=LRUCacheEnumerator:nextElement()
58999=LRUCacheEnumerator:LRUCacheEnumerator(LRUEnumeratorElement)
59000=CommentFormatterUtil:expandTabs(String, int)
59001=CommentFormatterUtil:createOptions(Map)
59002=CommentFormatterUtil:format(int, String, int, int, int, Map)
59003=CommentFormatterUtil:getTabSize(Map)
59004=CommentFormatterUtil:inferIndentationLevel(String, int)
59005=CommentFormatterUtil:format(int, String, int, int, Map)
59006=Test:foo()
59007=A:foo(int)
59008=FieldDeclaration:getConstantValue()
59009=FieldDeclaration:getConstantExpression()
59010=FieldDeclaration:getType()
59011=Test:main(String[])
59012=X:foo()
59013=StringConstant:toString()
59014=StringConstant:typeID()
59015=StringConstant:hashCode()
59016=StringConstant:fromValue(String)
59017=StringConstant:StringConstant(String)
59018=StringConstant:equals(Object)
59019=StringConstant:stringValue()
59020=CreateImportsTests:test003()
59021=CreateImportsTests:test005()
59022=CreateImportsTests:setContents(String)
59023=CreateImportsTests:test007()
59024=CreateImportsTests:test009()
59025=CreateImportsTests:setUpSuite()
59026=CreateImportsTests:test011()
59027=CreateImportsTests:test002()
59028=CreateImportsTests:tearDownSuite()
59029=CreateImportsTests:test004()
59030=CreateImportsTests:test006()
59031=CreateImportsTests:test008()
59032=CreateImportsTests:createImport(String, int, IJavaElement)
59033=CreateImportsTests:createImport(String, int)
59034=CreateImportsTests:test010()
59035=CreateImportsTests:setUp()
59036=CreateImportsTests:test001()
59037=CreateImportsTests:suite()
59038=CreateImportsTests:CreateImportsTests(String)
59039=ASTRewritingTypeAnnotationsTest:testTypeTests()
59040=ASTRewritingTypeAnnotationsTest:suite()
59041=ASTRewritingTypeAnnotationsTest:testConstructorDeclaration()
59042=ASTRewritingTypeAnnotationsTest:testTypeArgumentsParameterizedClassesAnnotations()
59043=ASTRewritingTypeAnnotationsTest:testRewriteInsertAPIAnnotation()
59044=ASTRewritingTypeAnnotationsTest:testCastAnnotations()
59045=ASTRewritingTypeAnnotationsTest:testWildcardBoudAnnotation()
59046=ASTRewritingTypeAnnotationsTest:ASTRewritingTypeAnnotationsTest(String)
59047=ASTRewritingTypeAnnotationsTest:ASTRewritingTypeAnnotationsTest(String, int)
59048=ASTRewritingTypeAnnotationsTest:testConstructorInvocation()
59049=ASTRewritingTypeAnnotationsTest:testTypeArgumentsMethodInvocation()
59050=ASTRewritingTypeAnnotationsTest:testQualifiedTypeAnnotations()
59051=ASTRewritingTypeAnnotationsTest:testClassInheritenceAnnotations()
59052=ASTRewritingTypeAnnotationsTest:testWildcardTypeArgumentAnnotations()
59053=ASTRewritingTypeAnnotationsTest:testTypeParameterBoundAnnotations()
59054=ASTRewritingTypeAnnotationsTest:testNameQualifiedTypeAnnotations()
59055=ASTRewritingTypeAnnotationsTest:testEmptyListInsertAnnotation()
59056=E:foo()
59057=X11:bar()
59058=Test:B:B()
59059=Test:A:A(int)
59060=A:m()
59061=IExtendedCompletionRequestor:acceptPotentialMethodDeclaration(char[], char[], char[], int, int, int)
59062=A:m()
59063=B:m()
59064=Test:foo()
59065=RawTypeBinding:clone(TypeBinding)
59066=RawTypeBinding:debugName()
59067=RawTypeBinding:initializeArguments()
59068=RawTypeBinding:substituteInferenceVariable(InferenceVariable, TypeBinding)
59069=RawTypeBinding:RawTypeBinding(ReferenceBinding, ReferenceBinding, LookupEnvironment)
59070=RawTypeBinding:shortReadableName(boolean)
59071=RawTypeBinding:isProperType(boolean)
59072=RawTypeBinding:annotatedDebugName()
59073=RawTypeBinding:isParameterizedType()
59074=RawTypeBinding:isEquivalentTo(TypeBinding)
59075=RawTypeBinding:mentionsAny(TypeBinding[], int)
59076=RawTypeBinding:readableName(boolean)
59077=RawTypeBinding:capture(Scope, int, int)
59078=RawTypeBinding:uncapture(Scope)
59079=RawTypeBinding:genericTypeSignature()
59080=RawTypeBinding:withoutToplevelNullAnnotation()
59081=RawTypeBinding:createParameterizedMethod(MethodBinding)
59082=RawTypeBinding:isProvablyDistinct(TypeBinding)
59083=RawTypeBinding:getSingleAbstractMethod(Scope, boolean)
59084=RawTypeBinding:computeUniqueKey(boolean)
59085=RawTypeBinding:kind()
59086=F:foo()
59087=Bug456986Proc:process(Set<? extends TypeElement>, RoundEnvironment)
59088=ForStatement:setBody(Statement)
59089=ForStatement:internalGetChildListProperty(ChildListPropertyDescriptor)
59090=ForStatement:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
59091=ForStatement:getBody()
59092=ForStatement:initializers()
59093=ForStatement:ForStatement(AST)
59094=ForStatement:propertyDescriptors(int)
59095=ForStatement:memSize()
59096=ForStatement:getExpression()
59097=ForStatement:accept0(ASTVisitor)
59098=ForStatement:treeSize()
59099=ForStatement:updaters()
59100=ForStatement:clone0(AST)
59101=ForStatement:setExpression(Expression)
59102=ForStatement:internalStructuralPropertiesForType(int)
59103=ForStatement:subtreeMatch0(ASTMatcher, Object)
59104=ForStatement:getNodeType0()
59105=A:realpath(byte[], byte[])
59106=IDependent:getFileName()
59107=TestA:main(String[])
59108=X08:foo(boolean)
59109=X06:foo()
59110=IConstantPoolEntry2:getDescriptorIndex()
59111=IConstantPoolEntry2:getReferenceKind()
59112=IConstantPoolEntry2:getReferenceIndex()
59113=IConstantPoolEntry2:getBootstrapMethodAttributeIndex()
59114=ImportMatchLocatorParser:consumeStaticImportOnDemandDeclarationName()
59115=ImportMatchLocatorParser:consumeSingleStaticImportDeclarationName()
59116=ImportMatchLocatorParser:ImportMatchLocatorParser(ProblemReporter, MatchLocator)
59117=ImportMatchLocatorParser:consumeSingleTypeImportDeclarationName()
59118=ImportMatchLocatorParser:consumeTypeImportOnDemandDeclarationName()
59119=X:f2()
59120=X:ctor()
59121=X:f1()
59122=Test:foo(int)
59123=X:bar(int)
59124=X15a:foo()
59125=I:id(int, int)
59126=A:lambdas()
59127=A:run()
59128=MemberDeclarationImpl:getDocComment()
59129=MemberDeclarationImpl:MemberDeclarationImpl(IBinding, BaseProcessorEnv)
59130=MemberDeclarationImpl:getPosition()
59131=MemberDeclarationImpl:accept(DeclarationVisitor)
59132=MemberDeclarationImpl:getAnnotationMirrors()
59133=MemberDeclarationImpl:getAnnotation(Class<A>)
59134=MemberDeclarationImpl:getAnnotationInstances()
59135=ASTConverterBugsTest:testBug277204a()
59136=ASTConverterBugsTest:runConversion(char[], String, IJavaProject, Map<String, String>, boolean)
59137=ASTConverterBugsTest:testBug213509()
59138=ASTConverterBugsTest:testBug186410()
59139=ASTConverterBugsTest:testBug214002()
59140=ASTConverterBugsTest:testBug277204e()
59141=ASTConverterBugsTest:testBug214647b()
59142=ASTConverterBugsTest:testBug214647()
59143=ASTConverterBugsTest:runConversion(char[], String, IJavaProject, Map<String, String>)
59144=ASTConverterBugsTest:testBug277204c()
59145=ASTConverterBugsTest:runConversion(ICompilationUnit, int, boolean)
59146=ASTConverterBugsTest:testBug274898b()
59147=ASTConverterBugsTest:testBug212857d()
59148=ASTConverterBugsTest:checkParameterAnnotations(String, String, IMethodBinding)
59149=ASTConverterBugsTest:testBug209150c()
59150=ASTConverterBugsTest:testBug212834()
59151=ASTConverterBugsTest:testBug212857b()
59152=ASTConverterBugsTest:testBug212100b()
59153=ASTConverterBugsTest:testBug213509_invocation()
59154=ASTConverterBugsTest:testBug215137b()
59155=ASTConverterBugsTest:ASTConverterBugsTest(String)
59156=ASTConverterBugsTest:testBug226357()
59157=ASTConverterBugsTest:testBug218824a()
59158=ASTConverterBugsTest:testBug209150a()
59159=ASTConverterBugsTest:testBug214002b()
59160=ASTConverterBugsTest:testBug277204b()
59161=ASTConverterBugsTest:testBug186410b()
59162=ASTConverterBugsTest:testBug215759a()
59163=ASTConverterBugsTest:testBug215137d()
59164=ASTConverterBugsTest:testBug212857e()
59165=ASTConverterBugsTest:runConversion(char[], String, IJavaProject)
59166=ASTConverterBugsTest:testBug277204d()
59167=ASTConverterBugsTest:testBug274898a()
59168=ASTConverterBugsTest:testBug212857c()
59169=ASTConverterBugsTest:suite()
59170=ASTConverterBugsTest:runConversion(ICompilationUnit, boolean, boolean, boolean)
59171=ASTConverterBugsTest:testBug212857()
59172=ASTConverterBugsTest:resolveASTs(ICompilationUnit[], String[], ASTRequestor, IJavaProject, WorkingCopyOwner)
59173=ASTConverterBugsTest:testBug212100a()
59174=ASTConverterBugsTest:setUpSuite()
59175=ASTConverterBugsTest:testBug209150b()
59176=ASTConverterBugsTest:testBug215137a()
59177=ASTConverterBugsTest:testBug212857a()
59178=ASTConverterBugsTest:runConversion(ICompilationUnit, boolean)
59179=ASTConverterBugsTest:testBug223838()
59180=ASTConverterBugsTest:testBug215759b()
59181=ASTConverterBugsTest:testBug212434a()
59182=ASTConverterBugsTest:testBug215137c()
59183=ASTConverterBugsTest:testBug223838a()
59184=ASTConverterBugsTest:runConversion(char[], String, IJavaProject, boolean)
59185=ASTConverterBugsTest:runConversion(IClassFile, int, boolean)
59186=IntConstant:shortValue()
59187=IntConstant:IntConstant(int)
59188=IntConstant:byteValue()
59189=IntConstant:intValue()
59190=IntConstant:doubleValue()
59191=IntConstant:toString()
59192=IntConstant:typeID()
59193=IntConstant:longValue()
59194=IntConstant:stringValue()
59195=IntConstant:charValue()
59196=IntConstant:floatValue()
59197=HasGenClass:get()
59198=Test:main(String[])
59199=OnDemandReduction:OnDemandReduction(ImportName, Collection<ImportName>)
59200=OnDemandReduction:toString()
59201=PackageBinding:getTypeOrPackage(char[])
59202=PackageBinding:toString()
59203=PackageBinding:readableName()
59204=PackageBinding:bindingType()
59205=PackageBinding:PackageBinding(LookupEnvironment)
59206=PackageBinding:PackageBinding(char[][], PackageBinding, LookupEnvironment)
59207=PackageBinding:addType(ReferenceBinding)
59208=PackageBinding:getType(char[])
59209=PackageBinding:addPackage(PackageBinding)
59210=PackageBinding:addNotFoundType(char[])
59211=PackageBinding:getPackage0(char[])
59212=PackageBinding:PackageBinding(char[], LookupEnvironment)
59213=PackageBinding:PackageBinding()
59214=PackageBinding:findPackage(char[])
59215=PackageBinding:getType0(char[])
59216=PackageBinding:addNotFoundPackage(char[])
59217=PackageBinding:getPackage(char[])
59218=ISourceImport:onDemand()
59219=ISourceImport:getDeclarationSourceEnd()
59220=ISourceImport:getModifiers()
59221=ISourceImport:getDeclarationSourceStart()
59222=ISourceImport:getName()
59223=AMap:createAMap(String, String)
59224=B:B(M, N)
59225=AMethod:getMap(String, String)
59226=A:A(M, N)
59227=B:getMap(M, N)
59228=A:getMap(M, N)
59229=A:A()
59230=AMap:AMap(String, String)
59231=Bug419769Proc:process(Set<? extends TypeElement>, RoundEnvironment)
59232=Test:foo()
59233=CompletionOnKeyword:getPossibleKeywords()
59234=CompletionOnKeyword:getToken()
59235=ThisExpression:getQualifier()
59236=ThisExpression:accept0(ASTVisitor)
59237=ThisExpression:memSize()
59238=ThisExpression:clone0(AST)
59239=ThisExpression:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
59240=ThisExpression:setQualifier(Name)
59241=ThisExpression:internalStructuralPropertiesForType(int)
59242=ThisExpression:ThisExpression(AST)
59243=ThisExpression:propertyDescriptors(int)
59244=ThisExpression:subtreeMatch0(ASTMatcher, Object)
59245=ThisExpression:getNodeType0()
59246=ThisExpression:treeSize()
59247=SorterTest:Swapper:swap(Vector, int, int)
59248=SourceImport:SourceImport(int, int, char[], boolean, int, char[])
59249=SourceImport:toString()
59250=A:foo()
59251=Test:mth1(String, String, String, String)
59252=X20:foo(String)
59253=SourceElementNotifier:notifySourceElementRequestor(ImportReference, boolean)
59254=SourceElementNotifier:sourceEnd(TypeDeclaration)
59255=SourceElementNotifier:visitIfNeeded(FieldDeclaration, TypeDeclaration)
59256=SourceElementNotifier:getSuperclassName(TypeDeclaration)
59257=SourceElementNotifier:LocalDeclarationVisitor:pushDeclaringType(TypeDeclaration)
59258=SourceElementNotifier:getThrownExceptions(AbstractMethodDeclaration)
59259=SourceElementNotifier:notifySourceElementRequestor(FieldDeclaration, TypeDeclaration)
59260=SourceElementNotifier:LocalDeclarationVisitor:visit(TypeDeclaration, BlockScope)
59261=SourceElementNotifier:quickSort(ASTNode[], int, int)
59262=SourceElementNotifier:getTypeParameterBounds(TypeParameter)
59263=SourceElementNotifier:notifySourceElementRequestor(AbstractMethodDeclaration, TypeDeclaration, ImportReference)
59264=SourceElementNotifier:visitIfNeeded(Initializer)
59265=SourceElementNotifier:LocalDeclarationVisitor:visit(TypeDeclaration, ClassScope)
59266=SourceElementNotifier:getArgumentInfos(Argument[])
59267=SourceElementNotifier:LocalDeclarationVisitor:peekDeclaringType()
59268=SourceElementNotifier:getInterfaceNames(TypeDeclaration)
59269=SourceElementNotifier:getTypeParameterInfos(TypeParameter[])
59270=SourceElementNotifier:reset()
59271=SourceElementNotifier:visitIfNeeded(AbstractMethodDeclaration)
59272=SourceElementNotifier:hasDeprecatedAnnotation(Annotation[])
59273=SourceElementNotifier:LocalDeclarationVisitor:popDeclaringType()
59274=SourceElementNotifier:notifySourceElementRequestor(TypeDeclaration, boolean, TypeDeclaration, ImportReference)
59275=SourceElementNotifier:SourceElementNotifier(ISourceElementRequestor, boolean)
59276=SourceElementNotifier:notifySourceElementRequestor(CompilationUnitDeclaration, int, int, boolean, HashtableOfObjectToInt, Map)
59277=ResolveLocalMemberTypeDeclaration2:foo()
59278=IEvaluationContext:codeSelect(String, int, int)
59279=IEvaluationContext:setImports(String[])
59280=IEvaluationContext:evaluateVariable(IGlobalVariable, ICodeSnippetRequestor, IProgressMonitor)
59281=IEvaluationContext:getProject()
59282=IEvaluationContext:codeComplete(String, int, ICompletionRequestor)
59283=IEvaluationContext:getPackageName()
59284=IEvaluationContext:setPackageName(String)
59285=IEvaluationContext:evaluateCodeSnippet(String, ICodeSnippetRequestor, IProgressMonitor)
59286=IEvaluationContext:allVariables()
59287=IEvaluationContext:getImports()
59288=IEvaluationContext:evaluateCodeSnippet(String, String[], String[], int[], IType, boolean, boolean, ICodeSnippetRequestor, IProgressMonitor)
59289=IEvaluationContext:codeComplete(String, int, CompletionRequestor, WorkingCopyOwner, IProgressMonitor)
59290=IEvaluationContext:codeComplete(String, int, ICompletionRequestor, WorkingCopyOwner)
59291=IEvaluationContext:deleteVariable(IGlobalVariable)
59292=IEvaluationContext:validateImports(ICodeSnippetRequestor)
59293=IEvaluationContext:codeSelect(String, int, int, WorkingCopyOwner)
59294=IEvaluationContext:codeComplete(String, int, CompletionRequestor, WorkingCopyOwner)
59295=IEvaluationContext:codeComplete(String, int, org.eclipse.jdt.core.ICodeCompletionRequestor)
59296=IEvaluationContext:codeComplete(String, int, CompletionRequestor, IProgressMonitor)
59297=IEvaluationContext:newVariable(String, String, String)
59298=IEvaluationContext:codeComplete(String, int, CompletionRequestor)
59299=NewImportEntry:toString()
59300=NewImportEntry:isOriginal()
59301=NewImportEntry:NewImportEntry(ImportName)
59302=NewImportEntry:asOriginalImportEntry()
59303=NumberLiteral:NumberLiteral(char[], int, int)
59304=NumberLiteral:isValidJavaStatement()
59305=NumberLiteral:source()
59306=NumberLiteral:NumberLiteral(int, int)
59307=ResolveAbstractMethod:test(AbstractClass)
59308=X:main(String[])
59309=B:foo(Z)
59310=A:foo()
59311=ASTConverterBugsTestJLS8:testBug130778a()
59312=ASTConverterBugsTestJLS8:testBug130778p()
59313=ASTConverterBugsTestJLS8:testBug130778c()
59314=ASTConverterBugsTestJLS8:testBug130778r()
59315=ASTConverterBugsTestJLS8:testBug130778l()
59316=ASTConverterBugsTestJLS8:testBug130778n()
59317=ASTConverterBugsTestJLS8:testBug130778h()
59318=ASTConverterBugsTestJLS8:testBug130778j()
59319=ASTConverterBugsTestJLS8:suite()
59320=ASTConverterBugsTestJLS8:testBug130778u()
59321=ASTConverterBugsTestJLS8:testBug130778d()
59322=ASTConverterBugsTestJLS8:testBug130778f()
59323=ASTConverterBugsTestJLS8:testBug130778s()
59324=ASTConverterBugsTestJLS8:testBug130778b()
59325=ASTConverterBugsTestJLS8:testBug130778m()
59326=ASTConverterBugsTestJLS8:_testBug130778q()
59327=ASTConverterBugsTestJLS8:ASTConverterBugsTestJLS8(String)
59328=ASTConverterBugsTestJLS8:testBug130778o()
59329=ASTConverterBugsTestJLS8:testBug130778i()
59330=ASTConverterBugsTestJLS8:testBug130778x()
59331=ASTConverterBugsTestJLS8:testBug130778k()
59332=ASTConverterBugsTestJLS8:testBug130778e()
59333=ASTConverterBugsTestJLS8:testBug130778t()
59334=ASTConverterBugsTestJLS8:testBug130778g()
59335=ASTConverterBugsTestJLS8:testBug130778v()
59336=ComparisonFailure:ComparisonFailure(String, String, String)
59337=ComparisonFailure:getMessage()
59338=Bug49361:main(String[])
59339=ArrayReference:ArrayReference(Expression, Expression)
59340=ArrayReference:traverse(ASTVisitor, BlockScope)
59341=ArrayReference:generatePostIncrement(BlockScope, CodeStream, CompoundAssignment, boolean)
59342=ArrayReference:analyseAssignment(BlockScope, FlowContext, FlowInfo, Assignment, boolean)
59343=ArrayReference:resolveType(BlockScope)
59344=ArrayReference:analyseCode(BlockScope, FlowContext, FlowInfo)
59345=ArrayReference:printExpression(int, StringBuffer)
59346=ArrayReference:generateCode(BlockScope, CodeStream, boolean)
59347=ArrayReference:generateCompoundAssignment(BlockScope, CodeStream, Expression, int, int, boolean)
59348=ArrayReference:generateAssignment(BlockScope, CodeStream, Assignment, boolean)
59349=Test:m(int, boolean)
59350=ElementProc:examineDMethods()
59351=ElementProc:bug300408()
59352=ElementProc:enclosedElementOrderCorrect(String, Collection<ElementKind>, String)
59353=ElementProc:examineABModifiers()
59354=ElementProc:examineDEnum()
59355=ElementProc:examineGetAnnotation()
59356=ElementProc:examineAMethodThrowables()
59357=ElementProc:bug261969()
59358=ElementProc:collectElements()
59359=ElementProc:examineABInterfaces()
59360=ElementProc:bug467928_enumFields()
59361=ElementProc:examineDHierarchy()
59362=ElementProc:examineAMethodsAndFields()
59363=ElementProc:examinePBPackage()
59364=ElementProc:examineDAnnotations()
59365=ElementProc:examineRoundEnv(RoundEnvironment)
59366=ElementProc:process(Set<? extends TypeElement>, RoundEnvironment)
59367=X:foo()
59368=X:bar(int)
59369=A:f()
59370=AptProblem:getCategoryID()
59371=AptProblem:getMarkerType()
59372=AptProblem:AptProblem(ReferenceContext, char[], String, int, String[], int, int, int, int, int)
59373=ProblemFieldBinding:problemId()
59374=ProblemFieldBinding:ProblemFieldBinding(ReferenceBinding, char[], int)
59375=ProblemFieldBinding:ProblemFieldBinding(FieldBinding, ReferenceBinding, char[], int)
59376=Azz:poo()
59377=A:foo()
59378=IdeOutputJavaFileObject:openOutputStream()
59379=IdeOutputJavaFileObject:getAccessLevel()
59380=IdeOutputJavaFileObject:openWriter()
59381=IdeOutputJavaFileObject:isNameCompatible(String, Kind)
59382=IdeOutputJavaFileObject:getKind()
59383=IdeOutputJavaFileObject:toUri()
59384=IdeOutputJavaFileObject:getName()
59385=IdeOutputJavaFileObject:getNestingKind()
59386=IdeOutputJavaFileObject:IdeOutputJavaFileObject(IdeProcessingEnvImpl, CharSequence, Collection<IFile>)
59387=Example:Example(boolean)
59388=FirstGenAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
59389=FirstGenAnnotationProcessorFactory:FirstGenAnnotationProcessorFactory()
59390=IClasspathAttribute:getName()
59391=IClasspathAttribute:getValue()
59392=StopableTestCase:stop()
59393=R2:qualified_name(g1.t.s.def.NonGeneric.GenericMember<Object>, g1.t.s.def.NonGeneric.GenericMember<Exception>, g1.t.s.def.NonGeneric.GenericMember<? extends Throwable>, g1.t.s.def.NonGeneric.GenericMember<? super RuntimeException>)
59394=R2:simple_name()
59395=X:main(String[])
59396=Test:main(String[])
59397=UserLibraryClasspathContainerInitializer:verbose_not_a_user_library(IJavaProject, IPath)
59398=UserLibraryClasspathContainerInitializer:verbose_no_user_library_found(IJavaProject, String)
59399=UserLibraryClasspathContainerInitializer:getComparisonID(IPath, IJavaProject)
59400=UserLibraryClasspathContainerInitializer:isUserLibraryContainer(IPath)
59401=UserLibraryClasspathContainerInitializer:requestClasspathContainerUpdate(IPath, IJavaProject, IClasspathContainer)
59402=UserLibraryClasspathContainerInitializer:getDescription(IPath, IJavaProject)
59403=UserLibraryClasspathContainerInitializer:initialize(IPath, IJavaProject)
59404=UserLibraryClasspathContainerInitializer:canUpdateClasspathContainer(IPath, IJavaProject)
59405=TextEditsBuilder:appendIndentationString(StringBuilder, int, int, int, int)
59406=TextEditsBuilder:bufferLineSeparator(Token, boolean)
59407=TextEditsBuilder:handleMultiLineComment(Token, int)
59408=TextEditsBuilder:flushBuffer(int)
59409=TextEditsBuilder:bufferAlign(Token, int)
59410=TextEditsBuilder:TextEditsBuilder(TextEditsBuilder)
59411=TextEditsBuilder:processComment(Token)
59412=TextEditsBuilder:isOnlyWhitespace(String)
59413=TextEditsBuilder:getReplaceEdit(int, int, String, IRegion)
59414=TextEditsBuilder:adaptRegions(IRegion[])
59415=TextEditsBuilder:setAlignChar(int)
59416=TextEditsBuilder:handleSingleLineComment(Token, int)
59417=TextEditsBuilder:getEdits()
59418=TextEditsBuilder:bufferIndent(Token, int)
59419=TextEditsBuilder:token(Token, int)
59420=TextEditsBuilder:bufferWhitespaceBefore(Token, int)
59421=TextEditsBuilder:traverseInternalStructure(Token, int)
59422=TextEditsBuilder:TextEditsBuilder(String, IRegion[], TokenManager, DefaultCodeFormatterOptions)
59423=TextEditsBuilder:adaptReplaceText(String, int, boolean, int)
59424=X06:foo()
59425=Compiler:backupAptProblems()
59426=Compiler:Compiler(INameEnvironment, IErrorHandlingPolicy, CompilerOptions, ICompilerRequestor, IProblemFactory, PrintWriter, CompilationProgress)
59427=Compiler:reset()
59428=Compiler:APTProblem:APTProblem(CategorizedProblem, ReferenceContext)
59429=Compiler:Compiler(INameEnvironment, IErrorHandlingPolicy, CompilerOptions, ICompilerRequestor, IProblemFactory, PrintWriter)
59430=Compiler:addCompilationUnit(ICompilationUnit, CompilationUnitDeclaration)
59431=Compiler:initializeParser()
59432=Compiler:shouldCleanup(int)
59433=Compiler:Compiler(INameEnvironment, IErrorHandlingPolicy, CompilerOptions, ICompilerRequestor, IProblemFactory)
59434=Compiler:Compiler(INameEnvironment, IErrorHandlingPolicy, Map, ICompilerRequestor, IProblemFactory, boolean)
59435=Compiler:resolve(ICompilationUnit, boolean, boolean, boolean)
59436=Compiler:restoreAptProblems()
59437=Compiler:setBinaryTypes(ReferenceBinding[])
59438=Compiler:compile(ICompilationUnit[])
59439=Compiler:process(CompilationUnitDeclaration, int)
59440=Compiler:resolve(CompilationUnitDeclaration, ICompilationUnit, boolean, boolean, boolean)
59441=Compiler:reportWorked(int, int)
59442=Compiler:getUnitToProcess(int)
59443=Compiler:internalBeginToCompile(ICompilationUnit[], int)
59444=Compiler:beginToCompile(ICompilationUnit[])
59445=Compiler:accept(ICompilationUnit, AccessRestriction)
59446=Compiler:handleInternalException(AbortCompilation, CompilationUnitDeclaration)
59447=Compiler:reportProgress(String)
59448=Compiler:compile(ICompilationUnit[], boolean)
59449=Compiler:processAnnotations()
59450=Compiler:processCompiledUnits(int, boolean)
59451=Compiler:Compiler(INameEnvironment, IErrorHandlingPolicy, Map<String, String>, ICompilerRequestor, IProblemFactory)
59452=Compiler:accept(ISourceType[], PackageBinding, AccessRestriction)
59453=Compiler:accept(IBinaryType, PackageBinding, AccessRestriction)
59454=Compiler:handleInternalException(Throwable, CompilationUnitDeclaration, CompilationResult)
59455=ThrowStatement:traverse(ASTVisitor, BlockScope)
59456=ThrowStatement:printStatement(int, StringBuffer)
59457=ThrowStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
59458=ThrowStatement:generateCode(BlockScope, CodeStream)
59459=ThrowStatement:ThrowStatement(Expression, int)
59460=ThrowStatement:resolve(BlockScope)
59461=X01f:foo()
59462=A:foo()
59463=CreateTypeHierarchyOperation:CreateTypeHierarchyOperation(IRegion, ICompilationUnit[], IType, boolean)
59464=CreateTypeHierarchyOperation:executeOperation()
59465=CreateTypeHierarchyOperation:CreateTypeHierarchyOperation(IType, ICompilationUnit[], IJavaSearchScope, boolean)
59466=CreateTypeHierarchyOperation:verify()
59467=CreateTypeHierarchyOperation:CreateTypeHierarchyOperation(IType, ICompilationUnit[], IJavaProject, boolean)
59468=CreateTypeHierarchyOperation:isReadOnly()
59469=CreateTypeHierarchyOperation:getResult()
59470=X27:foo()
59471=GenericDietRecoveryTest:test0007()
59472=GenericDietRecoveryTest:test0018()
59473=GenericDietRecoveryTest:test0005()
59474=GenericDietRecoveryTest:test0016()
59475=GenericDietRecoveryTest:test0009()
59476=GenericDietRecoveryTest:test0022()
59477=GenericDietRecoveryTest:test0020()
59478=GenericDietRecoveryTest:GenericDietRecoveryTest(String)
59479=GenericDietRecoveryTest:test0026()
59480=GenericDietRecoveryTest:test0013()
59481=GenericDietRecoveryTest:test0002()
59482=GenericDietRecoveryTest:test0024()
59483=GenericDietRecoveryTest:test0011()
59484=GenericDietRecoveryTest:test0019()
59485=GenericDietRecoveryTest:test0006()
59486=GenericDietRecoveryTest:test0017()
59487=GenericDietRecoveryTest:test0015()
59488=GenericDietRecoveryTest:test0004()
59489=GenericDietRecoveryTest:checkParse(char[], String, String, String, String, String, String)
59490=GenericDietRecoveryTest:test0008()
59491=GenericDietRecoveryTest:test0010()
59492=GenericDietRecoveryTest:test0021()
59493=GenericDietRecoveryTest:getCompilerOptions()
59494=GenericDietRecoveryTest:test0014()
59495=GenericDietRecoveryTest:test0003()
59496=GenericDietRecoveryTest:test0025()
59497=GenericDietRecoveryTest:test0012()
59498=GenericDietRecoveryTest:test0001()
59499=GenericDietRecoveryTest:test0023()
59500=Test:foo(int)
59501=A:A()
59502=Test:main(String[])
59503=X:foo()
59504=TestValid1:foo(String)
59505=Flags:isVarargs(int)
59506=Flags:isTransient(int)
59507=Flags:isBridge(int)
59508=Flags:isAnnnotationDefault(int)
59509=Flags:isDefaultMethod(int)
59510=Flags:isSuper(int)
59511=Flags:isProtected(int)
59512=Flags:toString(int)
59513=Flags:isSynthetic(int)
59514=Flags:isEnum(int)
59515=Flags:isStatic(int)
59516=Flags:isSynchronized(int)
59517=Flags:isStrictfp(int)
59518=Flags:isAnnotation(int)
59519=Flags:Flags()
59520=Flags:isPublic(int)
59521=Flags:isVolatile(int)
59522=Flags:isNative(int)
59523=Flags:isDeprecated(int)
59524=Flags:isFinal(int)
59525=Flags:isPrivate(int)
59526=Flags:isAbstract(int)
59527=Flags:isInterface(int)
59528=Flags:isPackageDefault(int)
59529=Test:foo()
59530=JavadocCompletionContextTests_1_5:JavadocCompletionContextTests_1_5(String)
59531=JavadocCompletionContextTests_1_5:test0004()
59532=JavadocCompletionContextTests_1_5:test0002()
59533=JavadocCompletionContextTests_1_5:test0001()
59534=JavadocCompletionContextTests_1_5:suite()
59535=JavadocCompletionContextTests_1_5:setUpSuite()
59536=JavadocCompletionContextTests_1_5:test0003()
59537=X:bar(int)
59538=X:main(String[])
59539=AnnotationMethodDeclaration:isMethod()
59540=AnnotationMethodDeclaration:generateCode(ClassFile)
59541=AnnotationMethodDeclaration:resolveStatements()
59542=AnnotationMethodDeclaration:traverse(ASTVisitor, ClassScope)
59543=AnnotationMethodDeclaration:parseStatements(Parser, CompilationUnitDeclaration)
59544=AnnotationMethodDeclaration:isAnnotationMethod()
59545=AnnotationMethodDeclaration:print(int, StringBuffer)
59546=AnnotationMethodDeclaration:AnnotationMethodDeclaration(CompilationResult)
59547=A:foo()
59548=A:foo(int, String, X)
59549=A:A(X)
59550=A:main(String[])
59551=Test:foo(int[])
59552=Test:bar(String[][][])
59553=LocalVariableTableEntry:getStartPC()
59554=LocalVariableTableEntry:getDescriptorIndex()
59555=LocalVariableTableEntry:getDescriptor()
59556=LocalVariableTableEntry:LocalVariableTableEntry(byte[], IConstantPool, int)
59557=LocalVariableTableEntry:getName()
59558=LocalVariableTableEntry:getLength()
59559=LocalVariableTableEntry:getIndex()
59560=LocalVariableTableEntry:getNameIndex()
59561=JarPackageFragmentRoot:internalPath()
59562=JarPackageFragmentRoot:internalKind()
59563=JarPackageFragmentRoot:resource(PackageFragmentRoot)
59564=JarPackageFragmentRoot:isExternal()
59565=JarPackageFragmentRoot:isArchive()
59566=JarPackageFragmentRoot:JarPackageFragmentRoot(IResource, JavaProject)
59567=JarPackageFragmentRoot:createElementInfo()
59568=JarPackageFragmentRoot:getKind()
59569=JarPackageFragmentRoot:equals(Object)
59570=JarPackageFragmentRoot:determineKind(IResource)
59571=JarPackageFragmentRoot:getElementName()
59572=JarPackageFragmentRoot:hashCode()
59573=JarPackageFragmentRoot:computeChildren(OpenableElementInfo, IResource)
59574=JarPackageFragmentRoot:initRawPackageInfo(HashtableOfArrayToObject, String, boolean, String)
59575=JarPackageFragmentRoot:getJar()
59576=JarPackageFragmentRoot:getNonJavaResources()
59577=JarPackageFragmentRoot:getUnderlyingResource()
59578=JarPackageFragmentRoot:isReadOnly()
59579=JarPackageFragmentRoot:getIndexPath()
59580=JarPackageFragmentRoot:JarPackageFragmentRoot(IPath, JavaProject)
59581=JarPackageFragmentRoot:getPackageFragment(String[])
59582=JarPackageFragmentRoot:toStringAncestors(StringBuffer)
59583=JarPackageFragmentRoot:resourceExists(IResource)
59584=TestFormatCode:InnerClass:innerMethod()
59585=TestFormatCode:outerMethod()
59586=X09:test()
59587=CorrectMethod1:foo()
59588=CorrectMethod1:bar0()
59589=ImportName:equals(Object)
59590=ImportName:createFor(ImportDeclaration)
59591=ImportName:toString()
59592=ImportName:ImportName(boolean, String, String)
59593=ImportName:getContainerOnDemand()
59594=ImportName:isOnDemand()
59595=ImportName:createOnDemand(boolean, String)
59596=ImportName:hashCode()
59597=ImportName:createFor(boolean, String)
59598=JavadocTestForConstructor:test031()
59599=JavadocTestForConstructor:test020()
59600=JavadocTestForConstructor:test044()
59601=JavadocTestForConstructor:test053()
59602=JavadocTestForConstructor:test042()
59603=JavadocTestForConstructor:test024()
59604=JavadocTestForConstructor:test013()
59605=JavadocTestForConstructor:test002()
59606=JavadocTestForConstructor:test048()
59607=JavadocTestForConstructor:test033()
59608=JavadocTestForConstructor:test022()
59609=JavadocTestForConstructor:test046()
59610=JavadocTestForConstructor:test011()
59611=JavadocTestForConstructor:test050()
59612=JavadocTestForConstructor:javadocTestClass()
59613=JavadocTestForConstructor:getCompilerOptions()
59614=JavadocTestForConstructor:test043()
59615=JavadocTestForConstructor:JavadocTestForConstructor(String)
59616=JavadocTestForConstructor:suite()
59617=JavadocTestForConstructor:test032()
59618=JavadocTestForConstructor:test021()
59619=JavadocTestForConstructor:test052()
59620=JavadocTestForConstructor:test041()
59621=JavadocTestForConstructor:test030()
59622=JavadocTestForConstructor:test047()
59623=JavadocTestForConstructor:test012()
59624=JavadocTestForConstructor:test001()
59625=JavadocTestForConstructor:test010()
59626=JavadocTestForConstructor:test045()
59627=JavadocTestForConstructor:test023()
59628=JavadocTestForConstructor:test003()
59629=JavadocTestForConstructor:test049()
59630=JavadocTestForConstructor:test051()
59631=JavadocTestForConstructor:test040()
59632=X:bar()
59633=WorkingCopyNotInClasspathTests:testIsOnClasspath()
59634=WorkingCopyNotInClasspathTests:testReconcileAndCommit3()
59635=WorkingCopyNotInClasspathTests:testPrimaryExistence()
59636=WorkingCopyNotInClasspathTests:setUp()
59637=WorkingCopyNotInClasspathTests:testReconcileAndCommit1()
59638=WorkingCopyNotInClasspathTests:testCommitWorkingCopy2()
59639=WorkingCopyNotInClasspathTests:testExistence()
59640=WorkingCopyNotInClasspathTests:testSimpleProject()
59641=WorkingCopyNotInClasspathTests:testReconcileNonExistingProject()
59642=WorkingCopyNotInClasspathTests:testReconcileAndCommit5()
59643=WorkingCopyNotInClasspathTests:tearDown()
59644=WorkingCopyNotInClasspathTests:testPrimaryParentExistence()
59645=WorkingCopyNotInClasspathTests:testReconcileAndCommit2()
59646=WorkingCopyNotInClasspathTests:testGetSource()
59647=WorkingCopyNotInClasspathTests:testParentExistence()
59648=WorkingCopyNotInClasspathTests:suite()
59649=WorkingCopyNotInClasspathTests:testReconcileSimpleProject2()
59650=WorkingCopyNotInClasspathTests:testPrimaryIsOpen()
59651=WorkingCopyNotInClasspathTests:testIsOpen()
59652=WorkingCopyNotInClasspathTests:testCommitWorkingCopy1()
59653=WorkingCopyNotInClasspathTests:testReconcileSimpleProject()
59654=WorkingCopyNotInClasspathTests:WorkingCopyNotInClasspathTests(String)
59655=WorkingCopyNotInClasspathTests:testReconcileAndCommit4()
59656=WildcardBinding:sourceName()
59657=WildcardBinding:WildcardBinding(ReferenceBinding, int, TypeBinding, int, LookupEnvironment)
59658=WildcardBinding:toString()
59659=WildcardBinding:isClass()
59660=WildcardBinding:resolve()
59661=WildcardBinding:collectSubstitutes(TypeBinding, Map)
59662=WildcardBinding:debugName()
59663=WildcardBinding:readableName()
59664=WildcardBinding:superInterfaces()
59665=WildcardBinding:isWildcard()
59666=WildcardBinding:swapUnresolved(UnresolvedReferenceBinding, ReferenceBinding, LookupEnvironment)
59667=WildcardBinding:boundCheck(TypeBinding)
59668=WildcardBinding:isEquivalentTo(TypeBinding)
59669=WildcardBinding:isInterface()
59670=WildcardBinding:initialize(ReferenceBinding, TypeBinding)
59671=WildcardBinding:superclass()
59672=WildcardBinding:typeVariable()
59673=WildcardBinding:genericTypeSignature()
59674=WildcardBinding:shortReadableName()
59675=WildcardBinding:isSuperclassOf(ReferenceBinding)
59676=WildcardBinding:erasure()
59677=WildcardBinding:signature()
59678=APTTestBase:expectingNoMarkers()
59679=APTTestBase:createJavaProject(String)
59680=APTTestBase:expectingNoMarkers(IPath)
59681=APTTestBase:concate(IMarker[])
59682=APTTestBase:checkProcessorResult(Class<? extends AnnotationProcessor>)
59683=APTTestBase:runFinalizers()
59684=APTTestBase:clearProcessorResult(Class<? extends AnnotationProcessor>)
59685=APTTestBase:sleep(long)
59686=APTTestBase:tearDown()
59687=APTTestBase:getProjectName()
59688=APTTestBase:expectingMarkers(String[])
59689=APTTestBase:expectingOnlySpecificProblemFor(IPath, ExpectedProblem)
59690=APTTestBase:APTTestBase(String)
59691=APTTestBase:expectingSpecificProblemsFor(IPath, ExpectedProblem[])
59692=APTTestBase:getAllAPTMarkers(IPath)
59693=APTTestBase:getProcessorResult(Class<? extends AnnotationProcessor>)
59694=APTTestBase:setUp()
59695=APTTestBase:concate(String[])
59696=APTTestBase:getCurrentJavaProject()
59697=APTTestBase:getSourcePath()
59698=APTTestBase:expectingOnlySpecificProblemsFor(IPath, ExpectedProblem[])
59699=ConstantPoolEntry2:getBootstrapMethodAttributeIndex()
59700=ConstantPoolEntry2:reset()
59701=ConstantPoolEntry2:getDescriptorIndex()
59702=ConstantPoolEntry2:getReferenceIndex()
59703=ConstantPoolEntry2:setBootstrapMethodAttributeIndex(int)
59704=ConstantPoolEntry2:setReferenceKind(int)
59705=ConstantPoolEntry2:setDescriptorIndex(int)
59706=ConstantPoolEntry2:setReferenceIndex(int)
59707=ConstantPoolEntry2:getReferenceKind()
59708=DefaultBindingResolver:resolveType(TypeDeclaration)
59709=DefaultBindingResolver:resolveMemberValuePair(org.eclipse.jdt.core.dom.MemberValuePair)
59710=DefaultBindingResolver:getVariableBinding(org.eclipse.jdt.internal.compiler.lookup.VariableBinding, VariableDeclaration)
59711=DefaultBindingResolver:store(ASTNode, org.eclipse.jdt.internal.compiler.ast.ASTNode)
59712=DefaultBindingResolver:isResolvedTypeInferredFromExpectedType(ClassInstanceCreation)
59713=DefaultBindingResolver:resolveReference(MethodRef)
59714=DefaultBindingResolver:getTypeBinding(Type)
59715=DefaultBindingResolver:scope()
59716=DefaultBindingResolver:getWorkingCopyOwner()
59717=DefaultBindingResolver:getBindingsToNodesMap()
59718=DefaultBindingResolver:lookupEnvironment()
59719=DefaultBindingResolver:resolveField(SuperFieldAccess)
59720=DefaultBindingResolver:resolveConstructor(EnumConstantDeclaration)
59721=DefaultBindingResolver:getVariableBinding(org.eclipse.jdt.internal.compiler.lookup.VariableBinding)
59722=DefaultBindingResolver:resolveBoxing(Expression)
59723=DefaultBindingResolver:findDeclaringNode(IBinding)
59724=DefaultBindingResolver:resolveWellKnownType(String)
59725=DefaultBindingResolver:resolveReference(MemberRef)
59726=DefaultBindingResolver:resolveVariable(EnumConstantDeclaration)
59727=DefaultBindingResolver:resolveType(AnonymousClassDeclaration)
59728=DefaultBindingResolver:resolveType(AnnotationTypeDeclaration)
59729=DefaultBindingResolver:resolveUnboxing(Expression)
59730=DefaultBindingResolver:getTypeBinding(RecoveredTypeBinding, int)
59731=DefaultBindingResolver:getMethodBinding(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
59732=DefaultBindingResolver:internalGetTypeBinding(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, IBinding)
59733=DefaultBindingResolver:resolveType(EnumDeclaration)
59734=DefaultBindingResolver:resolveMethod(SuperMethodInvocation)
59735=DefaultBindingResolver:resolveConstructor(SuperConstructorInvocation)
59736=DefaultBindingResolver:resolveMethod(LambdaExpression)
59737=DefaultBindingResolver:resolveVariable(VariableDeclaration)
59738=DefaultBindingResolver:AnnotationIdentityBinding:AnnotationIdentityBinding(org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding)
59739=DefaultBindingResolver:getTypeCount(ParameterizedQualifiedTypeReference)
59740=DefaultBindingResolver:insertAnnotations(org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[], int)
59741=DefaultBindingResolver:isResolvedTypeInferredFromExpectedType(MethodInvocation)
59742=DefaultBindingResolver:resolveConstructor(ClassInstanceCreation)
59743=DefaultBindingResolver:resolvePackage(PackageDeclaration)
59744=DefaultBindingResolver:getAnnotationInstance(org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding)
59745=DefaultBindingResolver:resolveImport(ImportDeclaration)
59746=DefaultBindingResolver:getTypeAnnotations(int, ArrayBinding, boolean)
59747=DefaultBindingResolver:getMethodOrLambdaBinding(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, IBinding)
59748=DefaultBindingResolver:getBinding(org.eclipse.jdt.internal.compiler.lookup.Binding)
59749=DefaultBindingResolver:AnnotationIdentityBinding:equals(Object)
59750=DefaultBindingResolver:resolveMethod(MethodDeclaration)
59751=DefaultBindingResolver:updateKey(ASTNode, ASTNode)
59752=DefaultBindingResolver:resolveTypeBindingForName(Name)
59753=DefaultBindingResolver:resolveType(Type)
59754=DefaultBindingResolver:resolveExpressionType(Expression)
59755=DefaultBindingResolver:resolveMethod(MethodInvocation)
59756=DefaultBindingResolver:getMemberValuePairBinding(ElementValuePair)
59757=DefaultBindingResolver:getCorrespondingNode(ASTNode)
59758=DefaultBindingResolver:isResolvedTypeInferredFromExpectedType(SuperMethodInvocation)
59759=DefaultBindingResolver:resolveConstantExpressionValue(Expression)
59760=DefaultBindingResolver:getTypeBinding(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
59761=DefaultBindingResolver:BindingTables:BindingTables()
59762=DefaultBindingResolver:findDeclaringNode(String)
59763=DefaultBindingResolver:getDeclaringMember(org.eclipse.jdt.internal.compiler.ast.ASTNode, Scope)
59764=DefaultBindingResolver:getPackageBinding(org.eclipse.jdt.internal.compiler.lookup.PackageBinding)
59765=DefaultBindingResolver:resolveArrayType(ITypeBinding, int)
59766=DefaultBindingResolver:resolveName(Name)
59767=DefaultBindingResolver:resolveMember(AnnotationTypeMemberDeclaration)
59768=DefaultBindingResolver:recordScope(ASTNode, BlockScope)
59769=DefaultBindingResolver:resolveField(FieldAccess)
59770=DefaultBindingResolver:resolveTypeParameter(TypeParameter)
59771=DefaultBindingResolver:resolveConstructor(ConstructorInvocation)
59772=DefaultBindingResolver:DefaultBindingResolver(CompilationUnitScope, WorkingCopyOwner, BindingTables, boolean, boolean)
59773=DefaultBindingResolver:AnnotationIdentityBinding:hashCode()
59774=DefaultBindingResolver:resolveAnnotation(Annotation)
59775=DefaultBindingResolver:DefaultBindingResolver(LookupEnvironment, WorkingCopyOwner, BindingTables, boolean, boolean)
59776=DefaultBindingResolver:getTypeBinding(VariableDeclaration)
59777=DefaultBindingResolver:resolveMethod(MethodReference)
59778=X01b:foo()
59779=SimpleCodeSnippetTest:getCodeSnippetSource()
59780=SimpleCodeSnippetTest:runCodeSnippet()
59781=SimpleCodeSnippetTest:main(String[])
59782=Initializer:isStatic()
59783=Initializer:parseStatements(Parser, TypeDeclaration, CompilationUnitDeclaration)
59784=Initializer:resolve(MethodScope)
59785=Initializer:printStatement(int, StringBuffer)
59786=Initializer:analyseCode(MethodScope, FlowContext, FlowInfo)
59787=Initializer:traverse(ASTVisitor, MethodScope)
59788=Initializer:Initializer(Block, int)
59789=Initializer:generateCode(BlockScope, CodeStream)
59790=Initializer:isField()
59791=X:x()
59792=SubRoutineStatement:exitAnyExceptionHandler()
59793=SubRoutineStatement:exitDeclaredExceptionHandlers(CodeStream)
59794=SubRoutineStatement:generateSubRoutineInvocation(BlockScope, CodeStream, Object, int, LocalVariableBinding)
59795=SubRoutineStatement:enterAnyExceptionHandler(CodeStream)
59796=SubRoutineStatement:enterDeclaredExceptionHandlers(CodeStream)
59797=SubRoutineStatement:placeAllAnyExceptionHandler()
59798=SubRoutineStatement:reenterAllExceptionHandlers(SubRoutineStatement[], int, CodeStream)
59799=SubRoutineStatement:isSubRoutineEscaping()
59800=X:f()
59801=A:foo()
59802=MemberElementInfo:getNameSourceEnd()
59803=MemberElementInfo:getNameSourceStart()
59804=MemberElementInfo:getModifiers()
59805=MemberElementInfo:setFlags(int)
59806=A:foo()
59807=MethodNameMatch:getModifiers()
59808=MethodNameMatch:getMethod()
59809=MethodNameMatch:getAccessibility()
59810=ForStatement:generateCode(BlockScope, CodeStream)
59811=ForStatement:resolve(BlockScope)
59812=ForStatement:traverse(ASTVisitor, BlockScope)
59813=ForStatement:ForStatement(Statement[], Expression, Statement[], Statement, boolean, int, int)
59814=ForStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
59815=ForStatement:printStatement(int, StringBuffer)
59816=X:main(String[])
59817=JavaSearchJavadocTests:suite()
59818=JavaSearchJavadocTests:testJavadocMethodStringReference()
59819=JavaSearchJavadocTests:testJavadocMethodArgReference()
59820=JavaSearchJavadocTests:testJavadocMethodReferenceWithJavadoc()
59821=JavaSearchJavadocTests:testBug83285b()
59822=JavaSearchJavadocTests:testJavadocConstructorReference()
59823=JavaSearchJavadocTests:testJavadocTypeParameterReferences02()
59824=JavaSearchJavadocTests:testJavadocTypeDeclaration()
59825=JavaSearchJavadocTests:testJavadocMethodDeclarationWithJavadoc()
59826=JavaSearchJavadocTests:testJavadocMethodArgReferenceWithJavadocDisabled()
59827=JavaSearchJavadocTests:testBug47209field()
59828=JavaSearchJavadocTests:testBug47968type()
59829=JavaSearchJavadocTests:testBug71267()
59830=JavaSearchJavadocTests:testJavadocMethodDeclaration()
59831=JavaSearchJavadocTests:setUpJavadocTypeParameterReferences()
59832=JavaSearchJavadocTests:testBug47909()
59833=JavaSearchJavadocTests:testJavadocTypeStringReferenceWithJavadocDisabled()
59834=JavaSearchJavadocTests:testBug49994constructor()
59835=JavaSearchJavadocTests:testJavadocFieldStringReference()
59836=JavaSearchJavadocTests:setJavadocOptions()
59837=JavaSearchJavadocTests:testJavadocFieldDeclarationWithJavadoc()
59838=JavaSearchJavadocTests:testJavadocMethodStringReferenceWithJavadoc()
59839=JavaSearchJavadocTests:JavaSearchJavadocTests(String)
59840=JavaSearchJavadocTests:testBug49994method()
59841=JavaSearchJavadocTests:testJavadocConstructorArgReferenceWithJavadoc()
59842=JavaSearchJavadocTests:testJavadocFieldDeclaration()
59843=JavaSearchJavadocTests:testBug47209method()
59844=JavaSearchJavadocTests:testBug83285()
59845=JavaSearchJavadocTests:testJavadocConstructorArgReference()
59846=JavaSearchJavadocTests:testBug49994()
59847=JavaSearchJavadocTests:testJavadocMethodArgReferenceWithJavadoc()
59848=JavaSearchJavadocTests:testBug83285a()
59849=JavaSearchJavadocTests:disableJavadocOptions()
59850=JavaSearchJavadocTests:testJavadocTypeStringReferenceWithJavadoc()
59851=JavaSearchJavadocTests:testBug71267qualified()
59852=JavaSearchJavadocTests:testBug47209constructor()
59853=JavaSearchJavadocTests:testJavadocParameterReferences01()
59854=JavaSearchJavadocTests:testJavadocConstructorReferenceWithJavadoc()
59855=JavaSearchJavadocTests:setUp()
59856=JavaSearchJavadocTests:testJavadocFieldReferenceWithJavadoc()
59857=JavaSearchJavadocTests:testBug54962()
59858=JavaSearchJavadocTests:testJavadocConstructorStringReferenceWithJavadoc()
59859=JavaSearchJavadocTests:testJavadocMethodStringDeclaration()
59860=JavaSearchJavadocTests:testJavadocFieldStringReferenceWithJavadoc()
59861=JavaSearchJavadocTests:testBug47968field()
59862=JavaSearchJavadocTests:testJavadocFieldStringDeclaration()
59863=JavaSearchJavadocTests:testJavadocTypeParameterReferences01()
59864=JavaSearchJavadocTests:testJavadocTypeDeclarationWithJavadoc()
59865=JavaSearchJavadocTests:testJavadocTypeReferenceWithJavadoc()
59866=JavaSearchJavadocTests:testJavadocFieldReference()
59867=JavaSearchJavadocTests:testJavadocTypeStringReference()
59868=JavaSearchJavadocTests:tearDown()
59869=JavaSearchJavadocTests:testBug47968constructor()
59870=JavaSearchJavadocTests:testJavadocConstructorReferenceWithJavadocDisabled()
59871=JavaSearchJavadocTests:testBug54962qualified()
59872=JavaSearchJavadocTests:testJavadocConstructorStringReference()
59873=JavaSearchJavadocTests:testJavadocMethodArgDeclarationWithJavadoc()
59874=JavaSearchJavadocTests:testJavadocFieldStringReferenceWithJavadocDisabled()
59875=JavaSearchJavadocTests:testJavadocMethodReference()
59876=JavaSearchJavadocTests:testJavadocMethodArgDeclaration()
59877=JavaSearchJavadocTests:testBug47968method()
59878=JavaSearchJavadocTests:testBug47209type()
59879=JavaSearchJavadocTests:testJavadocTypeReference()
59880=JavaSearchJavadocTests:testJavadocTypeStringDeclaration()
59881=JavaSearchJavadocTests:testBug49994field()
59882=ReconcileWorkingCopyOperation:makeConsistent(CompilationUnit)
59883=ReconcileWorkingCopyOperation:getWorkingCopy()
59884=ReconcileWorkingCopyOperation:verify()
59885=ReconcileWorkingCopyOperation:reportProblems(CompilationUnit, IProblemRequestor)
59886=ReconcileWorkingCopyOperation:notifyParticipants(CompilationUnit)
59887=ReconcileWorkingCopyOperation:executeOperation()
59888=ReconcileWorkingCopyOperation:ReconcileWorkingCopyOperation(IJavaElement, int, int, WorkingCopyOwner)
59889=ReconcileWorkingCopyOperation:isReadOnly()
59890=Test:bar()
59891=Test:foo(int)
59892=Label:toString()
59893=Label:isStandardLabel()
59894=Label:hasForwardReferences()
59895=Label:addForwardReference(int)
59896=Label:branch()
59897=Label:Label()
59898=Label:branchWide()
59899=Label:Label(CodeStream)
59900=Label:initialize(CodeStream)
59901=Label:appendForwardReferencesFrom(Label)
59902=Label:inlineForwardReferencesFromLabelsTargeting(int)
59903=Label:place()
59904=A:test()
59905=A:foo(Object)
59906=A:foo(long, int, String, Object)
59907=ConstantPool:getEntryKind(int)
59908=ConstantPool:getUtf8ValueAt(int)
59909=ConstantPool:decodeEntry(int)
59910=ConstantPool:getConstantPoolCount()
59911=ConstantPool:ConstantPool(byte[], int[])
59912=JavaCorePreferenceInitializer:initializeDeprecatedOptions()
59913=JavaCorePreferenceInitializer:initializeDefaultPreferences()
59914=Sorter:sortStrings(Vector, int, int, Swapper)
59915=Sorter:Swapper:swap(Vector, int, int)
59916=Test:___run(java.lang.String[])
59917=SimpleDelta:modifiers()
59918=SimpleDelta:superTypes()
59919=SimpleDelta:added()
59920=SimpleDelta:getKind()
59921=SimpleDelta:removed()
59922=SimpleDelta:getFlags()
59923=SimpleDelta:toDebugString(StringBuffer, int)
59924=SimpleDelta:toString()
59925=SimpleDelta:toDebugString(StringBuffer)
59926=SimpleDelta:changed(int)
59927=BatchCompilerRequestor:acceptResult(CompilationResult)
59928=BatchCompilerRequestor:reportProblems(CompilationResult)
59929=BatchCompilerRequestor:BatchCompilerRequestor(Main)
59930=ImportRewrite18Test:testBug4260940_since_8()
59931=ImportRewrite18Test:allTests()
59932=ImportRewrite18Test:bug426094_runi_since_8(int)
59933=ImportRewrite18Test:testBug417937b_since_8()
59934=ImportRewrite18Test:testBug417937c2_since_8()
59935=ImportRewrite18Test:testBug4260947_since_8()
59936=ImportRewrite18Test:tearDown()
59937=ImportRewrite18Test:testBug417937c1_since_8()
59938=ImportRewrite18Test:testBug417937a_since_8()
59939=ImportRewrite18Test:testBug426510a()
59940=ImportRewrite18Test:ImportRewrite18Test(String)
59941=ImportRewrite18Test:testBug417937c3_since_8()
59942=ImportRewrite18Test:testBug417937c4_since_8()
59943=ImportRewrite18Test:testBug417937c6_since_8()
59944=ImportRewrite18Test:testBug417937d001_since_8()
59945=ImportRewrite18Test:runTest426094andGetType(int)
59946=ImportRewrite18Test:assertEqualStringIgnoreDelim(String, String)
59947=ImportRewrite18Test:testBug417937c5_since_8()
59948=ImportRewrite18Test:runTest417937candGetType(int)
59949=ImportRewrite18Test:testBug417937e_since_8()
59950=ImportRewrite18Test:testBug417937d002_since_8()
59951=ImportRewrite18Test:newImportsRewrite(ICompilationUnit, String[], int, int, boolean)
59952=ImportRewrite18Test:testBug42609410_since_8()
59953=ImportRewrite18Test:bug417937c_runi_since_8(int)
59954=ImportRewrite18Test:testBug4260942_since_8()
59955=ImportRewrite18Test:testBug417937c0_since_8()
59956=ImportRewrite18Test:testBug4260949_since_8()
59957=ImportRewrite18Test:apply(ImportRewrite)
59958=ImportRewrite18Test:testBug4260941_since_8()
59959=ImportRewrite18Test:testBug4260948_since_8()
59960=ImportRewrite18Test:newImportsRewrite(CompilationUnit, String[], int, int, boolean)
59961=ImportRewrite18Test:testBug4260945_since_8()
59962=ImportRewrite18Test:testBug4260943_since_8()
59963=ImportRewrite18Test:testBug4260946_since_8()
59964=ImportRewrite18Test:setUp()
59965=ImportRewrite18Test:suite()
59966=ImportRewrite18Test:testBug474270_since_8()
59967=ImportRewrite18Test:testBug417937b1_since_8()
59968=ImportRewrite18Test:testBug4260944_since_8()
59969=X12:foo()
59970=FormatterBugs18Tests:testBug434821()
59971=FormatterBugs18Tests:testBug433177()
59972=FormatterBugs18Tests:suite()
59973=FormatterBugs18Tests:setUpSuite()
59974=FormatterBugs18Tests:testBug426520a()
59975=FormatterBugs18Tests:testBug425040()
59976=FormatterBugs18Tests:FormatterBugs18Tests(String)
59977=FormatterBugs18Tests:testBug426520b()
59978=Test:foo()
59979=Test:bar()
59980=Test:combineScriptsExist()
59981=ArrayTypeImpl:getAnnotationBindings()
59982=ArrayTypeImpl:accept(TypeVisitor<R, P>, P)
59983=ArrayTypeImpl:ArrayTypeImpl(BaseProcessingEnvImpl, ArrayBinding)
59984=ArrayTypeImpl:getComponentType()
59985=ArrayTypeImpl:getKind()
59986=Bug340635Proc:GenericTypeVisitor:GenericTypeVisitor(Types)
59987=Bug340635Proc:process(Set<? extends TypeElement>, RoundEnvironment)
59988=Bug340635Proc:GenericTypeVisitor:visitDeclared(DeclaredType, Void)
59989=FormatTest:method_one()
59990=PackageTests:test001()
59991=PackageTests:testNoPackageProblem()
59992=PackageTests:PackageTests(String)
59993=PackageTests:suite()
59994=PackageTests:test002()
59995=PackageTests:testPackageProblem()
59996=SomeClass:foo()
59997=AnnotationTest:method7()
59998=AnnotationTest:method5(int, int, int)
59999=AnnotationTest:method2()
60000=AnnotationTest:method0()
60001=AnnotationTest:method6(int, int, int)
60002=AnnotationTest:method4()
60003=AnnotationTest:method3()
60004=AnnotationTest:method1()
60005=A210070:foo()
60006=A210070:A210070(int)
60007=PackageElementImpl:getKind()
60008=PackageElementImpl:getSimpleName()
60009=PackageElementImpl:isUnnamed()
60010=PackageElementImpl:PackageElementImpl(BaseProcessingEnvImpl, PackageBinding)
60011=PackageElementImpl:getPackage()
60012=PackageElementImpl:getAnnotationBindings()
60013=PackageElementImpl:getQualifiedName()
60014=PackageElementImpl:accept(ElementVisitor<R, P>, P)
60015=PackageElementImpl:getEnclosedElements()
60016=PackageElementImpl:getEnclosingElement()
60017=AptUIPlugin:getActiveWorkbenchWindow()
60018=AptUIPlugin:getDefault()
60019=AptUIPlugin:getActiveWorkbenchShell()
60020=AptUIPlugin:log(IStatus)
60021=AptUIPlugin:stop(BundleContext)
60022=AptUIPlugin:log(Throwable)
60023=AptUIPlugin:getImageDescriptor(String)
60024=AptUIPlugin:AptUIPlugin()
60025=AptUIPlugin:start(BundleContext)
60026=SuperTypeTest:test007()
60027=SuperTypeTest:test018()
60028=SuperTypeTest:SuperTypeTest(String)
60029=SuperTypeTest:test009()
60030=SuperTypeTest:test004()
60031=SuperTypeTest:testClass()
60032=SuperTypeTest:test015()
60033=SuperTypeTest:test006()
60034=SuperTypeTest:test017()
60035=SuperTypeTest:test011()
60036=SuperTypeTest:test002()
60037=SuperTypeTest:test013()
60038=SuperTypeTest:suite()
60039=SuperTypeTest:test008()
60040=SuperTypeTest:test003()
60041=SuperTypeTest:test014()
60042=SuperTypeTest:test005()
60043=SuperTypeTest:test016()
60044=SuperTypeTest:test010()
60045=SuperTypeTest:test001()
60046=SuperTypeTest:test012()
60047=Z:bar()
60048=Z:foo()
60049=A:foo()
60050=X06:foo()
60051=X04:foo(boolean)
60052=AnnotationTypeDeclaration:printBody(int, StringBuffer)
60053=AnnotationTypeDeclaration:AnnotationTypeDeclaration(CompilationResult)
60054=AnnotationTypeDeclaration:printHeader(int, StringBuffer)
60055=AnnotationTypeDeclaration:traverse(ASTVisitor, BlockScope)
60056=AnnotationTypeDeclaration:traverse(ASTVisitor, ClassScope)
60057=AnnotationTypeDeclaration:traverse(ASTVisitor, CompilationUnitScope)
60058=ForeachStatement:doesNotCompleteNormally()
60059=ForeachStatement:generateCode(BlockScope, CodeStream)
60060=ForeachStatement:printStatement(int, StringBuffer)
60061=ForeachStatement:traverse(ASTVisitor, BlockScope)
60062=ForeachStatement:resolve(BlockScope)
60063=ForeachStatement:ForeachStatement(LocalDeclaration, int)
60064=ForeachStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
60065=X06:foo()
60066=BuilderTests:testFinalRound()
60067=BuilderTests:testBug468853()
60068=BuilderTests:BuilderTests(String)
60069=BuilderTests:testBug407841()
60070=BuilderTests:testBug468893()
60071=BuilderTests:testBug295948()
60072=BuilderTests:testBatchedBuild()
60073=BuilderTests:suite()
60074=BuilderTests:testBug387956()
60075=BuilderTests:disabled_testInheritedAnnotation()
60076=BuilderTests:testBug419769()
60077=UnconditionalFlowInfo:isPotentiallyNull(LocalVariableBinding)
60078=UnconditionalFlowInfo:discardNonFieldInitializations()
60079=UnconditionalFlowInfo:resetAssignmentInfo(LocalVariableBinding)
60080=UnconditionalFlowInfo:isDefinitelyNonNull(LocalVariableBinding)
60081=UnconditionalFlowInfo:isPotentiallyUnknown(LocalVariableBinding)
60082=UnconditionalFlowInfo:markPotentiallyNullBit(LocalVariableBinding)
60083=UnconditionalFlowInfo:cannotBeDefinitelyNullOrNonNull(LocalVariableBinding)
60084=UnconditionalFlowInfo:markAsComparedEqualToNonNull(LocalVariableBinding)
60085=UnconditionalFlowInfo:isProtectedNull(LocalVariableBinding)
60086=UnconditionalFlowInfo:copy()
60087=UnconditionalFlowInfo:AssertionFailedException:AssertionFailedException(String)
60088=UnconditionalFlowInfo:initsWhenFalse()
60089=UnconditionalFlowInfo:markAsDefinitelyNull(LocalVariableBinding)
60090=UnconditionalFlowInfo:isPotentiallyAssigned(FieldBinding)
60091=UnconditionalFlowInfo:isProtectedNonNull(LocalVariableBinding)
60092=UnconditionalFlowInfo:safeInitsWhenTrue()
60093=UnconditionalFlowInfo:createExtraSpace(int)
60094=UnconditionalFlowInfo:mergedWith(UnconditionalFlowInfo)
60095=UnconditionalFlowInfo:setReachMode(int)
60096=UnconditionalFlowInfo:unconditionalInitsWithoutSideEffect()
60097=UnconditionalFlowInfo:addPotentialNullInfoFrom(UnconditionalFlowInfo)
60098=UnconditionalFlowInfo:isPotentiallyAssigned(int)
60099=UnconditionalFlowInfo:discardInitializationInfo()
60100=UnconditionalFlowInfo:unconditionalFieldLessCopy()
60101=UnconditionalFlowInfo:initsWhenTrue()
60102=UnconditionalFlowInfo:isPotentiallyAssigned(LocalVariableBinding)
60103=UnconditionalFlowInfo:isDefinitelyAssigned(int)
60104=UnconditionalFlowInfo:unconditionalInits()
60105=UnconditionalFlowInfo:markAsComparedEqualToNull(LocalVariableBinding)
60106=UnconditionalFlowInfo:markAsDefinitelyAssigned(FieldBinding)
60107=UnconditionalFlowInfo:addInitializationsFrom(FlowInfo)
60108=UnconditionalFlowInfo:fakeInitializedFlowInfo(int, int)
60109=UnconditionalFlowInfo:numberOfEnclosingFields(ReferenceBinding)
60110=UnconditionalFlowInfo:toString()
60111=UnconditionalFlowInfo:addNullInfoFrom(FlowInfo)
60112=UnconditionalFlowInfo:nullInfoLessUnconditionalCopy()
60113=UnconditionalFlowInfo:isDefinitelyUnknown(LocalVariableBinding)
60114=UnconditionalFlowInfo:addInfoFrom(FlowInfo, boolean)
60115=UnconditionalFlowInfo:resetAssignmentInfo(int)
60116=UnconditionalFlowInfo:markPotentiallyUnknownBit(LocalVariableBinding)
60117=UnconditionalFlowInfo:resetNullInfo(LocalVariableBinding)
60118=UnconditionalFlowInfo:cannotBeNull(LocalVariableBinding)
60119=UnconditionalFlowInfo:markAsDefinitelyNonNull(LocalVariableBinding)
60120=UnconditionalFlowInfo:hasNullInfoFor(LocalVariableBinding)
60121=UnconditionalFlowInfo:isTrue(boolean, String)
60122=UnconditionalFlowInfo:isPotentiallyNonNull(LocalVariableBinding)
60123=UnconditionalFlowInfo:markAsDefinitelyAssigned(int)
60124=UnconditionalFlowInfo:isDefinitelyAssigned(LocalVariableBinding)
60125=UnconditionalFlowInfo:markAsDefinitelyAssigned(LocalVariableBinding)
60126=UnconditionalFlowInfo:isDefinitelyNull(LocalVariableBinding)
60127=UnconditionalFlowInfo:markPotentiallyNonNullBit(LocalVariableBinding)
60128=UnconditionalFlowInfo:canOnlyBeNull(LocalVariableBinding)
60129=UnconditionalFlowInfo:addPotentialInitializationsFrom(FlowInfo)
60130=UnconditionalFlowInfo:unconditionalCopy()
60131=UnconditionalFlowInfo:isDefinitelyAssigned(FieldBinding)
60132=UnconditionalFlowInfo:markAsDefinitelyUnknown(LocalVariableBinding)
60133=A:foo()
60134=RegionBasedHierarchyBuilder:determineOpenablesInRegion(IProgressMonitor)
60135=RegionBasedHierarchyBuilder:createTypeHierarchyBasedOnRegion(HashMap, IProgressMonitor)
60136=RegionBasedHierarchyBuilder:injectAllOpenablesForJavaProject(IJavaProject, ArrayList)
60137=RegionBasedHierarchyBuilder:build(boolean)
60138=RegionBasedHierarchyBuilder:injectAllOpenablesForPackageFragment(IPackageFragment, ArrayList)
60139=RegionBasedHierarchyBuilder:RegionBasedHierarchyBuilder(TypeHierarchy)
60140=RegionBasedHierarchyBuilder:injectAllOpenablesForPackageFragmentRoot(IPackageFragmentRoot, ArrayList)
60141=TypeMirror:toString()
60142=TypeMirror:equals(Object)
60143=TypeMirror:accept(TypeVisitor)
60144=X:X(E)
60145=X:X()
60146=MemberRef:accept0(ASTVisitor)
60147=MemberRef:propertyDescriptors(int)
60148=MemberRef:setName(SimpleName)
60149=MemberRef:memSize()
60150=MemberRef:subtreeMatch0(ASTMatcher, Object)
60151=MemberRef:resolveBinding()
60152=MemberRef:getName()
60153=MemberRef:setQualifier(Name)
60154=MemberRef:getNodeType0()
60155=MemberRef:internalStructuralPropertiesForType(int)
60156=MemberRef:getQualifier()
60157=MemberRef:treeSize()
60158=MemberRef:MemberRef(AST)
60159=MemberRef:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
60160=MemberRef:clone0(AST)
60161=ProcessorOptionInputDialog:getResult()
60162=ProcessorOptionInputDialog:doValidation()
60163=ProcessorOptionInputDialog:ProcessorOptionInputDialog(Shell, ProcessorOption, List<ProcessorOption>)
60164=ProcessorOptionInputDialog:FieldAdapter:dialogFieldChanged(DialogField)
60165=ProcessorOptionInputDialog:createDialogArea(Composite)
60166=ProcessorOptionInputDialog:configureShell(Shell)
60167=X:foo()
60168=Test:m()
60169=Test:foo()
60170=X:foo()
60171=X:Inner:foo()
60172=Convertible:convert()
60173=A:foo(int)
60174=A:main()
60175=A:bar(int)
60176=Test:foo(String)
60177=LambdaShapeTests:testDo4()
60178=LambdaShapeTests:test026()
60179=LambdaShapeTests:testTry4()
60180=LambdaShapeTests:test015()
60181=LambdaShapeTests:test002()
60182=LambdaShapeTests:testDo16()
60183=LambdaShapeTests:test037()
60184=LambdaShapeTests:testDo6()
60185=LambdaShapeTests:testForeach3()
60186=LambdaShapeTests:test028()
60187=LambdaShapeTests:testCFor()
60188=LambdaShapeTests:testDo25()
60189=LambdaShapeTests:test017()
60190=LambdaShapeTests:testDo14()
60191=LambdaShapeTests:testTry()
60192=LambdaShapeTests:testClass()
60193=LambdaShapeTests:test004()
60194=LambdaShapeTests:test039()
60195=LambdaShapeTests:testSwitch()
60196=LambdaShapeTests:testLabeledStatement2()
60197=LambdaShapeTests:test019()
60198=LambdaShapeTests:test006()
60199=LambdaShapeTests:testSwitch6()
60200=LambdaShapeTests:testDo2()
60201=LambdaShapeTests:testWhileThis()
60202=LambdaShapeTests:testTry2()
60203=LambdaShapeTests:testLabeledStatement4()
60204=LambdaShapeTests:testLabeledStatement()
60205=LambdaShapeTests:testBug470232_For()
60206=LambdaShapeTests:testDo18()
60207=LambdaShapeTests:test008()
60208=LambdaShapeTests:test041()
60209=LambdaShapeTests:testCFor2()
60210=LambdaShapeTests:test030()
60211=LambdaShapeTests:suite()
60212=LambdaShapeTests:testWhile2()
60213=LambdaShapeTests:LambdaShapeTests(String)
60214=LambdaShapeTests:testDo20()
60215=LambdaShapeTests:testIf3()
60216=LambdaShapeTests:test043()
60217=LambdaShapeTests:test032()
60218=LambdaShapeTests:testSwitch3()
60219=LambdaShapeTests:testWhileTrue2()
60220=LambdaShapeTests:testForeach()
60221=LambdaShapeTests:testWhile4()
60222=LambdaShapeTests:test045()
60223=LambdaShapeTests:testDo11()
60224=LambdaShapeTests:test034()
60225=LambdaShapeTests:test021()
60226=LambdaShapeTests:testDo9()
60227=LambdaShapeTests:test010()
60228=LambdaShapeTests:testDo24()
60229=LambdaShapeTests:test001()
60230=LambdaShapeTests:test036()
60231=LambdaShapeTests:test023()
60232=LambdaShapeTests:test012()
60233=LambdaShapeTests:testIf()
60234=LambdaShapeTests:testDo22()
60235=LambdaShapeTests:test003()
60236=LambdaShapeTests:testBug470232_While()
60237=LambdaShapeTests:testDo15()
60238=LambdaShapeTests:test038()
60239=LambdaShapeTests:test025()
60240=LambdaShapeTests:testDo5()
60241=LambdaShapeTests:testForeach4()
60242=LambdaShapeTests:test014()
60243=LambdaShapeTests:testDo13()
60244=LambdaShapeTests:test005()
60245=LambdaShapeTests:testWhileTrue()
60246=LambdaShapeTests:testDo7()
60247=LambdaShapeTests:testForeach2()
60248=LambdaShapeTests:test027()
60249=LambdaShapeTests:testDo26()
60250=LambdaShapeTests:test016()
60251=LambdaShapeTests:test007()
60252=LambdaShapeTests:testDo19()
60253=LambdaShapeTests:testSwitch5()
60254=LambdaShapeTests:test029()
60255=LambdaShapeTests:testLabeledStatement3()
60256=LambdaShapeTests:test018()
60257=LambdaShapeTests:testDo17()
60258=LambdaShapeTests:test009()
60259=LambdaShapeTests:testDo3()
60260=LambdaShapeTests:testTry3()
60261=LambdaShapeTests:testLabeledStatement5()
60262=LambdaShapeTests:testWhile3()
60263=LambdaShapeTests:test040()
60264=LambdaShapeTests:testSwitch2()
60265=LambdaShapeTests:test020()
60266=LambdaShapeTests:testWhileTrue3()
60267=LambdaShapeTests:testIf2()
60268=LambdaShapeTests:test042()
60269=LambdaShapeTests:test031()
60270=LambdaShapeTests:testSwitch4()
60271=LambdaShapeTests:test022()
60272=LambdaShapeTests:testBug470232_Do()
60273=LambdaShapeTests:testDo8()
60274=LambdaShapeTests:test011()
60275=LambdaShapeTests:testDo23()
60276=LambdaShapeTests:test044()
60277=LambdaShapeTests:testDo12()
60278=LambdaShapeTests:test033()
60279=LambdaShapeTests:test024()
60280=LambdaShapeTests:test013()
60281=LambdaShapeTests:testDo21()
60282=LambdaShapeTests:testDo()
60283=LambdaShapeTests:test046()
60284=LambdaShapeTests:testDo10()
60285=LambdaShapeTests:test035()
60286=X04:foo()
60287=JavadocFieldCompletionModelTest:test003()
60288=JavadocFieldCompletionModelTest:test014()
60289=JavadocFieldCompletionModelTest:test027()
60290=JavadocFieldCompletionModelTest:test005()
60291=JavadocFieldCompletionModelTest:test007()
60292=JavadocFieldCompletionModelTest:suite()
60293=JavadocFieldCompletionModelTest:test030()
60294=JavadocFieldCompletionModelTest:JavadocFieldCompletionModelTest(String)
60295=JavadocFieldCompletionModelTest:test010()
60296=JavadocFieldCompletionModelTest:test021()
60297=JavadocFieldCompletionModelTest:test023()
60298=JavadocFieldCompletionModelTest:test001()
60299=JavadocFieldCompletionModelTest:test012()
60300=JavadocFieldCompletionModelTest:test025()
60301=JavadocFieldCompletionModelTest:setUp()
60302=JavadocFieldCompletionModelTest:test026()
60303=JavadocFieldCompletionModelTest:test004()
60304=JavadocFieldCompletionModelTest:test015()
60305=JavadocFieldCompletionModelTest:test028()
60306=JavadocFieldCompletionModelTest:test006()
60307=JavadocFieldCompletionModelTest:test020()
60308=JavadocFieldCompletionModelTest:test022()
60309=JavadocFieldCompletionModelTest:test011()
60310=JavadocFieldCompletionModelTest:test024()
60311=JavadocFieldCompletionModelTest:test002()
60312=JavadocFieldCompletionModelTest:test013()
60313=JavadocSingleTypeReference:JavadocSingleTypeReference(char[], long, int, int)
60314=JavadocSingleTypeReference:traverse(ASTVisitor, ClassScope)
60315=JavadocSingleTypeReference:resolveType(BlockScope)
60316=JavadocSingleTypeReference:traverse(ASTVisitor, BlockScope)
60317=JavadocSingleTypeReference:resolveType(ClassScope)
60318=JavadocSingleTypeReference:internalResolveType(Scope)
60319=JavadocSingleTypeReference:reportDeprecatedType(Scope)
60320=JavadocSingleTypeReference:reportInvalidType(Scope)
60321=X:bar(List<? extends X<?>>)
60322=X:foo()
60323=RuntimeVisibleParameterAnnotationsAttribute:getParameterAnnotations()
60324=RuntimeVisibleParameterAnnotationsAttribute:RuntimeVisibleParameterAnnotationsAttribute(byte[], IConstantPool, int)
60325=RuntimeVisibleParameterAnnotationsAttribute:getParametersNumber()
60326=A:bar()
60327=A:foo()
60328=X:main(String[])
60329=X:foo()
60330=X18:setKind(int)
60331=AnnotationDiscoveryVisitor:visit(MethodDeclaration, ClassScope)
60332=AnnotationDiscoveryVisitor:visit(Argument, BlockScope)
60333=AnnotationDiscoveryVisitor:visit(ConstructorDeclaration, ClassScope)
60334=AnnotationDiscoveryVisitor:visit(TypeParameter, ClassScope)
60335=AnnotationDiscoveryVisitor:AnnotationDiscoveryVisitor(BaseProcessingEnvImpl)
60336=AnnotationDiscoveryVisitor:visit(TypeParameter, BlockScope)
60337=AnnotationDiscoveryVisitor:visit(TypeDeclaration, CompilationUnitScope)
60338=AnnotationDiscoveryVisitor:visit(FieldDeclaration, MethodScope)
60339=AnnotationDiscoveryVisitor:visit(TypeDeclaration, ClassScope)
60340=AnnotationDiscoveryVisitor:resolveAnnotations(BlockScope, Annotation[], Binding)
60341=ResolveDuplicateMethodDeclaration5:foo(Zork)
60342=A:launch(ILaunchConfiguration, String, ILaunch, IProgressMonitor)
60343=SubRoutineStatement:exitAnyExceptionHandler()
60344=SubRoutineStatement:enterAnyExceptionHandler(CodeStream)
60345=SubRoutineStatement:reenterExceptionHandlers(SubRoutineStatement[], int, CodeStream)
60346=SubRoutineStatement:placeAllAnyExceptionHandlers()
60347=SubRoutineStatement:isSubRoutineEscaping()
60348=SubRoutineStatement:generateSubRoutineInvocation(BlockScope, CodeStream)
60349=A:goo(C)
60350=Test:___run(java.lang.String[])
60351=ResolveConstructor:foo()
60352=ResolveConstructor:ResolveConstructor(int)
60353=ResolveConstructor:ResolveConstructor(String)
60354=E:foo1(int)
60355=E:foo1()
60356=ConstantPool:literalIndexForMethodType(char[])
60357=ConstantPool:literalIndexForType(char[])
60358=ConstantPool:literalIndexForInvokeDynamic(int, char[], char[])
60359=ConstantPool:literalIndexForMethod(TypeBinding, char[], char[], boolean)
60360=ConstantPool:literalIndexForMethodHandle(MethodBinding)
60361=ConstantPool:literalIndex(char[], byte[])
60362=ConstantPool:literalIndexForField(char[], char[], char[])
60363=ConstantPool:resetForClinit(int, int)
60364=ConstantPool:putInNameAndTypeCacheIfAbsent(char[], char[], int)
60365=ConstantPool:resetForAttributeName(char[], int, int)
60366=ConstantPool:writeU1(int)
60367=ConstantPool:literalIndex(char[])
60368=ConstantPool:literalIndexForLdc(char[])
60369=ConstantPool:dumpBytes()
60370=ConstantPool:literalIndex(byte[], char[])
60371=ConstantPool:literalIndexForNameAndType(char[], char[])
60372=ConstantPool:putInCacheIfAbsent(char[], char[], char[], int)
60373=ConstantPool:literalIndex(long)
60374=ConstantPool:reset()
60375=ConstantPool:literalIndex(TypeBinding)
60376=ConstantPool:ConstantPool(ClassFile)
60377=ConstantPool:initialize(ClassFile)
60378=ConstantPool:resizePoolContents(int)
60379=ConstantPool:literalIndex(int)
60380=ConstantPool:literalIndex(double)
60381=ConstantPool:literalIndexForMethodHandle(int, TypeBinding, char[], char[], boolean)
60382=ConstantPool:literalIndex(float)
60383=ConstantPool:literalIndexForMethod(char[], char[], char[], boolean)
60384=ConstantPool:writeU2(int)
60385=ConstantPool:literalIndex(String)
60386=ConstantPool:literalIndexForType(TypeBinding)
60387=ReaderAnnotationScanner:getNext()
60388=ReaderAnnotationScanner:ReaderAnnotationScanner(InputStreamReader)
60389=MirrorDeclarationTests:testUnresolvableDeclarations1()
60390=MirrorDeclarationTests:suite()
60391=MirrorDeclarationTests:TestLocationProc:_process()
60392=MirrorDeclarationTests:MirrorDeclarationTests(String)
60393=MirrorDeclarationTests:setUp()
60394=MirrorDeclarationTests:TestSourceMirrorProc:_process()
60395=MirrorDeclarationTests:DISABLED_testDefault()
60396=MirrorDeclarationTests:PackageInfoProc:_process()
60397=MirrorDeclarationTests:testUnresolvableDeclarations0()
60398=MirrorDeclarationTests:testFieldConstant()
60399=MirrorDeclarationTests:testMirrorDeclaration()
60400=MirrorDeclarationTests:testPackageInfo()
60401=MirrorDeclarationTests:testSourceMirror()
60402=MirrorDeclarationTests:testLocation()
60403=MirrorDeclarationTests:testEnvFactory()
60404=A:foo()
60405=Test:foo()
60406=Substitution:substitute(TypeVariableBinding)
60407=Substitution:isRawSubstitution()
60408=Substitution:environment()
60409=DOMType:isAllowableChild(IDOMNode)
60410=DOMType:setTypeKeyword(String)
60411=DOMType:getSuperInterfaces()
60412=DOMType:offset(int)
60413=DOMType:getTypeParameters()
60414=DOMType:setClass(boolean)
60415=DOMType:normalizeEndPosition(ILineStartFinder, DOMNode)
60416=DOMType:setEnum(boolean)
60417=DOMType:toString()
60418=DOMType:DOMType(char[], int[], String, int[], int[], int, int[], int[], int[], int[], String[], int[], int[], int[], int[], boolean)
60419=DOMType:getInsertionPosition()
60420=DOMType:getOpenBodyEnd()
60421=DOMType:getDetailedNode()
60422=DOMType:setOpenBodyRangeStart(int)
60423=DOMType:isClass()
60424=DOMType:getMemberDeclarationStartPosition()
60425=DOMType:addSuperInterface(String)
60426=DOMType:DOMType(char[], int[], String, int[], int, String[], boolean)
60427=DOMType:getCloseBodyPosition()
60428=DOMType:shareContents(DOMNode)
60429=DOMType:appendSimpleContents(CharArrayBuffer)
60430=DOMType:newDOMNode()
60431=DOMType:setCloseBodyRangeEnd(int)
60432=DOMType:setName(String)
60433=DOMType:getSuperclass()
60434=DOMType:setAnnotation(boolean)
60435=DOMType:normalize(ILineStartFinder)
60436=DOMType:setSuperclass(String)
60437=DOMType:getNodeType()
60438=DOMType:setCloseBodyRangeStart(int)
60439=DOMType:isAnnotation()
60440=DOMType:setOpenBodyRangeEnd(int)
60441=DOMType:canHaveChildren()
60442=DOMType:appendMemberDeclarationContents(CharArrayBuffer)
60443=DOMType:appendMemberBodyContents(CharArrayBuffer)
60444=DOMType:setTypeParameters(String[])
60445=DOMType:DOMType()
60446=DOMType:getJavaElement(IJavaElement)
60447=DOMType:isEnum()
60448=DOMType:setSuperInterfaces(String[])
60449=ScannerTests:_testHasAnnotationDeclaration()
60450=ScannerTests:suite()
60451=ScannerTests:testHasAnnotation()
60452=ScannerTests:testHasNoAnnotation()
60453=ScannerTests:ScannerTests(String)
60454=ScannerTests:testHasAnnotationInComment()
60455=BodyDeclaration:internalJavadocProperty()
60456=BodyDeclaration:internalModifiersProperty()
60457=BodyDeclaration:internalModifiers2PropertyFactory(Class)
60458=BodyDeclaration:getModifiersProperty()
60459=BodyDeclaration:internalSetModifiers(int)
60460=BodyDeclaration:setModifiers(int)
60461=BodyDeclaration:internalModifiersPropertyFactory(Class)
60462=BodyDeclaration:memSize()
60463=BodyDeclaration:internalJavadocPropertyFactory(Class)
60464=BodyDeclaration:setJavadoc(Javadoc)
60465=BodyDeclaration:getJavadocProperty()
60466=BodyDeclaration:modifiers()
60467=BodyDeclaration:getModifiers()
60468=BodyDeclaration:BodyDeclaration(AST)
60469=BodyDeclaration:getJavadoc()
60470=BodyDeclaration:internalModifiers2Property()
60471=ICacheEnumeration:getValue()
60472=A:getOtherFieldBindings(BlockScope)
60473=StuffInterface:sendStuff(int)
60474=StuffInterface:getStuff(int)
60475=JavadocSingleNameReference:JavadocSingleNameReference(char[], long, int, int)
60476=JavadocSingleNameReference:resolve(BlockScope, boolean, boolean)
60477=JavadocSingleNameReference:resolve(BlockScope)
60478=JavadocSingleNameReference:traverse(ASTVisitor, BlockScope)
60479=JavadocSingleNameReference:traverse(ASTVisitor, ClassScope)
60480=HashtableOfObject:rehash()
60481=HashtableOfObject:get(char[])
60482=HashtableOfObject:HashtableOfObject()
60483=HashtableOfObject:size()
60484=HashtableOfObject:removeKey(char[])
60485=HashtableOfObject:containsKey(char[])
60486=HashtableOfObject:putUnsafely(char[], Object)
60487=HashtableOfObject:clone()
60488=HashtableOfObject:toString()
60489=HashtableOfObject:put(char[], Object)
60490=HashtableOfObject:HashtableOfObject(int)
60491=HashtableOfObject:clear()
60492=Canceler:beginTask(String, int)
60493=Canceler:Canceler(int)
60494=Canceler:isCanceled()
60495=Canceler:internalWorked(double)
60496=Canceler:subTask(String)
60497=Canceler:done()
60498=Canceler:setCanceled(boolean)
60499=Canceler:worked(int)
60500=Canceler:setTaskName(String)
60501=A:launch()
60502=AnnotationDependencyTests:test411771a()
60503=AnnotationDependencyTests:testReturnAnnotationDependency01()
60504=AnnotationDependencyTests:tearDown()
60505=AnnotationDependencyTests:testTypeAnnotationDependency6()
60506=AnnotationDependencyTests:testTypeAnnotationDependency8()
60507=AnnotationDependencyTests:testTypeAnnotationDependency20()
60508=AnnotationDependencyTests:testParameterAnnotationDependency01()
60509=AnnotationDependencyTests:setupProjectForNullAnnotations()
60510=AnnotationDependencyTests:testTypeAnnotationDependency16()
60511=AnnotationDependencyTests:testTypeAnnotationDependency27()
60512=AnnotationDependencyTests:setUp()
60513=AnnotationDependencyTests:testTypeAnnotationDependency18()
60514=AnnotationDependencyTests:testTypeAnnotationDependency12()
60515=AnnotationDependencyTests:testTypeAnnotationDependency3()
60516=AnnotationDependencyTests:testTypeAnnotationDependency23()
60517=AnnotationDependencyTests:testTypeAnnotationDependency14()
60518=AnnotationDependencyTests:testTypeAnnotationDependency5()
60519=AnnotationDependencyTests:testUnrelatedTypeAnnotationDependency()
60520=AnnotationDependencyTests:testTypeAnnotationDependency25()
60521=AnnotationDependencyTests:testPackageInfoDependency()
60522=AnnotationDependencyTests:testTypeAnnotationDependency7()
60523=AnnotationDependencyTests:testInnerTypeAnnotationDependency()
60524=AnnotationDependencyTests:test411771b()
60525=AnnotationDependencyTests:testMethodAnnotationDependency()
60526=AnnotationDependencyTests:testTypeAnnotationDependency10()
60527=AnnotationDependencyTests:testTypeAnnotationDependency9()
60528=AnnotationDependencyTests:testTypeAnnotationDependency21()
60529=AnnotationDependencyTests:suite()
60530=AnnotationDependencyTests:testTypeAnnotationDependency()
60531=AnnotationDependencyTests:AnnotationDependencyTests(String)
60532=AnnotationDependencyTests:testTypeAnnotationDependency19()
60533=AnnotationDependencyTests:addAnnotationType()
60534=AnnotationDependencyTests:testFieldAnnotationDependency()
60535=AnnotationDependencyTests:testTypeAnnotationDependency15()
60536=AnnotationDependencyTests:testTypeAnnotationDependency26()
60537=AnnotationDependencyTests:testTypeAnnotationDependency17()
60538=AnnotationDependencyTests:testTypeAnnotationDependency11()
60539=AnnotationDependencyTests:testTypeAnnotationDependency2()
60540=AnnotationDependencyTests:testTypeAnnotationDependency22()
60541=AnnotationDependencyTests:test411771c()
60542=AnnotationDependencyTests:testTypeAnnotationDependency13()
60543=AnnotationDependencyTests:testReturnAnnotationDependency02()
60544=AnnotationDependencyTests:testTypeAnnotationDependency4()
60545=AnnotationDependencyTests:testTypeAnnotationDependency24()
60546=Statement:print(int, StringBuffer)
60547=Statement:isEmptyBlock()
60548=Statement:branchChainTo(Label)
60549=Statement:analyseCode(BlockScope, FlowContext, FlowInfo)
60550=Statement:generateCode(BlockScope, CodeStream)
60551=Statement:printStatement(int, StringBuffer)
60552=Statement:complainIfUnreachable(FlowInfo, BlockScope, boolean)
60553=Statement:resolve(BlockScope)
60554=Statement:resolveCase(BlockScope, TypeBinding, SwitchStatement)
60555=Statement:isValidJavaStatement()
60556=MementoTokenizer:hasMoreTokens()
60557=MementoTokenizer:nextToken()
60558=MementoTokenizer:MementoTokenizer(String)
60559=X03:foo2()
60560=X03:foo(int, int)
60561=InterfaceMethodsTest:testDefaultNonclash3()
60562=InterfaceMethodsTest:testInheritedDefaultOverrides06()
60563=InterfaceMethodsTest:testStaticMethod01()
60564=InterfaceMethodsTest:testAbstract04a()
60565=InterfaceMethodsTest:testAbstract06a()
60566=InterfaceMethodsTest:testDefaultNonclash5()
60567=InterfaceMethodsTest:_testBridge04()
60568=InterfaceMethodsTest:testStaticMethod12()
60569=InterfaceMethodsTest:test425718()
60570=InterfaceMethodsTest:test426318()
60571=InterfaceMethodsTest:testAbstract6b()
60572=InterfaceMethodsTest:setUpTest(Test)
60573=InterfaceMethodsTest:testAbstract08()
60574=InterfaceMethodsTest:testAbstract02a()
60575=InterfaceMethodsTest:testBug421543()
60576=InterfaceMethodsTest:testStaticMethod10()
60577=InterfaceMethodsTest:testInheritedDefaultOverrides02()
60578=InterfaceMethodsTest:testSuperAccess02()
60579=InterfaceMethodsTest:testObjectMethod2()
60580=InterfaceMethodsTest:InterfaceMethodsTest(String)
60581=InterfaceMethodsTest:testBridge02()
60582=InterfaceMethodsTest:testAbstract06()
60583=InterfaceMethodsTest:test424914()
60584=InterfaceMethodsTest:test477891_comment3_b()
60585=InterfaceMethodsTest:testBug421543a()
60586=InterfaceMethodsTest:testInheritedDefaultOverrides04()
60587=InterfaceMethodsTest:testSuperCall2()
60588=InterfaceMethodsTest:testClass()
60589=InterfaceMethodsTest:testAbstract04()
60590=InterfaceMethodsTest:testModifiers1a()
60591=InterfaceMethodsTest:test477891_comment3_d()
60592=InterfaceMethodsTest:testSuperCall4()
60593=InterfaceMethodsTest:test400977()
60594=InterfaceMethodsTest:testAbstract02()
60595=InterfaceMethodsTest:testModifiers5()
60596=InterfaceMethodsTest:testAnnotation1()
60597=InterfaceMethodsTest:testStaticMethod08()
60598=InterfaceMethodsTest:testSuperCall6()
60599=InterfaceMethodsTest:testModifiers7()
60600=InterfaceMethodsTest:testInheritedDefaultOverrides01()
60601=InterfaceMethodsTest:testStaticMethod06()
60602=InterfaceMethodsTest:testModifiers1()
60603=InterfaceMethodsTest:test425719()
60604=InterfaceMethodsTest:testStaticMethod04()
60605=InterfaceMethodsTest:test436350a()
60606=InterfaceMethodsTest:test427478a()
60607=InterfaceMethodsTest:testModifiers3()
60608=InterfaceMethodsTest:testStaticMethod02()
60609=InterfaceMethodsTest:testModifiers1b()
60610=InterfaceMethodsTest:testBug421543b()
60611=InterfaceMethodsTest:testDefaultNonclash2()
60612=InterfaceMethodsTest:testThisReference1()
60613=InterfaceMethodsTest:testStaticMethod13()
60614=InterfaceMethodsTest:_testBridge03()
60615=InterfaceMethodsTest:testBug437522()
60616=InterfaceMethodsTest:test438471()
60617=InterfaceMethodsTest:testDefaultNonclash4()
60618=InterfaceMethodsTest:testStaticMethod11()
60619=InterfaceMethodsTest:testObjectMethod3()
60620=InterfaceMethodsTest:testBridge01()
60621=InterfaceMethodsTest:testBug421797()
60622=InterfaceMethodsTest:testAbstract07()
60623=InterfaceMethodsTest:test477891_comment3_a()
60624=InterfaceMethodsTest:suite()
60625=InterfaceMethodsTest:testAbstract02b()
60626=InterfaceMethodsTest:testSuperCall1()
60627=InterfaceMethodsTest:testInheritedDefaultOverrides03()
60628=InterfaceMethodsTest:testSuperAccess03()
60629=InterfaceMethodsTest:testObjectMethod1()
60630=InterfaceMethodsTest:testAbstract05()
60631=InterfaceMethodsTest:test477891_comment3_c()
60632=InterfaceMethodsTest:testInheritedDefaultOverrides05()
60633=InterfaceMethodsTest:testSuperCall3()
60634=InterfaceMethodsTest:testSuperAccess01()
60635=InterfaceMethodsTest:testAbstract03a()
60636=InterfaceMethodsTest:test453552_comment2()
60637=InterfaceMethodsTest:testAbstract03()
60638=InterfaceMethodsTest:testModifiers4()
60639=InterfaceMethodsTest:testStaticMethod09()
60640=InterfaceMethodsTest:test477891_comment0()
60641=InterfaceMethodsTest:testSuperCall5()
60642=InterfaceMethodsTest:testAbstract02c()
60643=InterfaceMethodsTest:testAbstract01()
60644=InterfaceMethodsTest:testModifiers6()
60645=InterfaceMethodsTest:test427478()
60646=InterfaceMethodsTest:testBug420084()
60647=InterfaceMethodsTest:testStaticMethod07()
60648=InterfaceMethodsTest:test406619()
60649=InterfaceMethodsTest:testDefaultNonclash()
60650=InterfaceMethodsTest:testStaticMethod05()
60651=InterfaceMethodsTest:test453552()
60652=InterfaceMethodsTest:test436350()
60653=InterfaceMethodsTest:test423467()
60654=InterfaceMethodsTest:testModifiers2()
60655=InterfaceMethodsTest:test424914a()
60656=InterfaceMethodsTest:test422731()
60657=InterfaceMethodsTest:testStaticMethod03()
60658=InterfaceMethodsTest:testBug437522a()
60659=InterfaceMethodsTest:test477891_comment0_a()
60660=TestFormatCode:InnerClass:innerMethod()
60661=TestFormatCode:outerMethod()
60662=Apt6TestsPlugin:thePlugin()
60663=Apt6TestsPlugin:Apt6TestsPlugin()
60664=Apt6TestsPlugin:start(BundleContext)
60665=TypeReferenceLocator:match(TypeReference, MatchingNodeSet)
60666=TypeReferenceLocator:findElement(IJavaElement, int)
60667=TypeReferenceLocator:match(Annotation, MatchingNodeSet)
60668=TypeReferenceLocator:matchReportReference(ASTNode, IJavaElement, IJavaElement, IJavaElement[], Binding, int, MatchLocator)
60669=TypeReferenceLocator:fineGrain()
60670=TypeReferenceLocator:matchLevel(ImportReference)
60671=TypeReferenceLocator:toString()
60672=TypeReferenceLocator:resolveLevel(NameReference)
60673=TypeReferenceLocator:referenceType()
60674=TypeReferenceLocator:matchReportReference(Expression, int, TypeBinding, MatchLocator)
60675=TypeReferenceLocator:matchReportReference(ASTNode, IJavaElement, Binding, int, MatchLocator)
60676=TypeReferenceLocator:resolveLevelForType(TypeBinding)
60677=TypeReferenceLocator:matchReportReference(ArrayTypeReference, IJavaElement, Binding, int, MatchLocator)
60678=TypeReferenceLocator:matchReportReference(QualifiedTypeReference, IJavaElement, Binding, int, MatchLocator)
60679=TypeReferenceLocator:reportDeclaration(ReferenceBinding, int, MatchLocator, SimpleSet)
60680=TypeReferenceLocator:recordResolution(QualifiedTypeReference, TypeBinding)
60681=TypeReferenceLocator:resolveLevelForTypeOrEnclosingTypes(char[], char[], TypeBinding)
60682=TypeReferenceLocator:reportDeclaration(ASTNode, IJavaElement, MatchLocator, SimpleSet)
60683=TypeReferenceLocator:matchReportImportRef(ImportReference, Binding, IJavaElement, int, MatchLocator)
60684=TypeReferenceLocator:matchLevelAndReportImportRef(ImportReference, Binding, MatchLocator)
60685=TypeReferenceLocator:resolveLevel(ASTNode)
60686=TypeReferenceLocator:resolveLevel(TypeReference)
60687=TypeReferenceLocator:resolveLevel(Binding)
60688=TypeReferenceLocator:match(Reference, MatchingNodeSet)
60689=TypeReferenceLocator:resolveLevelForTypeOrQualifyingTypes(TypeReference, TypeBinding)
60690=TypeReferenceLocator:matchReportReference(QualifiedNameReference, IJavaElement, Binding, int, MatchLocator)
60691=TypeReferenceLocator:TypeReferenceLocator(TypeReferencePattern)
60692=TypeReferenceLocator:match(ASTNode, MatchingNodeSet)
60693=ICodeFormatter:format(String, int, int[], String)
60694=X:foo()
60695=CompletionOnAnnotationOfType:print(int, StringBuffer)
60696=CompletionOnAnnotationOfType:CompletionOnAnnotationOfType(char[], CompilationResult, Annotation)
60697=A:main(String[])
60698=ResolveLocalFieldDeclaration:foo()
60699=JdtCorePerformanceMeterFactory:doCreatePerformanceMeter(String)
60700=UserLibraryManager:removeUserLibrary(String)
60701=UserLibraryManager:getUserLibrary(String)
60702=UserLibraryManager:updateUserLibrary(String, String)
60703=UserLibraryManager:getUserLibraryNames()
60704=UserLibraryManager:UserLibraryManager()
60705=UserLibraryManager:setUserLibrary(String, IClasspathEntry[], boolean)
60706=UserLibraryManager:initialize()
60707=Bar:m()
60708=A:foo()
60709=X:foo()
60710=Test:foo()
60711=CompilationResult:record(char[], ClassFile)
60712=CompilationResult:getContext(CategorizedProblem)
60713=CompilationResult:computePriority(CategorizedProblem)
60714=CompilationResult:hasErrors()
60715=CompilationResult:getCUProblems()
60716=CompilationResult:getClassFiles()
60717=CompilationResult:hasWarnings()
60718=CompilationResult:getTasks()
60719=CompilationResult:removeProblem(CategorizedProblem)
60720=CompilationResult:CompilationResult(ICompilationUnit, int, int, int)
60721=CompilationResult:tagAsAccepted()
60722=CompilationResult:getErrors()
60723=CompilationResult:hasProblems()
60724=CompilationResult:recordTask(CategorizedProblem)
60725=CompilationResult:CompilationResult(char[], int, int, int)
60726=CompilationResult:getProblems()
60727=CompilationResult:quickPrioritize(CategorizedProblem[], int, int)
60728=CompilationResult:hasTasks()
60729=CompilationResult:recordPackageName(char[][])
60730=CompilationResult:hasMandatoryErrors()
60731=CompilationResult:getLineSeparatorPositions()
60732=CompilationResult:record(CategorizedProblem, ReferenceContext, boolean)
60733=CompilationResult:record(CategorizedProblem, ReferenceContext)
60734=CompilationResult:getCompilationUnit()
60735=CompilationResult:getFileName()
60736=CompilationResult:toString()
60737=CompilationResult:getAllProblems()
60738=CompilationUnitProblemFinder:getRequestor()
60739=CompilationUnitProblemFinder:initializeParser()
60740=CompilationUnitProblemFinder:CompilationUnitProblemFinder(INameEnvironment, IErrorHandlingPolicy, CompilerOptions, ICompilerRequestor, IProblemFactory)
60741=CompilationUnitProblemFinder:getHandlingPolicy()
60742=CompilationUnitProblemFinder:process(CompilationUnit, SourceElementParser, WorkingCopyOwner, HashMap, boolean, int, IProgressMonitor)
60743=CompilationUnitProblemFinder:process(CompilationUnit, WorkingCopyOwner, HashMap, boolean, int, IProgressMonitor)
60744=CompilationUnitProblemFinder:accept(ISourceType[], PackageBinding, AccessRestriction)
60745=CompilationUnitProblemFinder:getCompilerOptions(Map, boolean, boolean)
60746=CaseStatement:printStatement(int, StringBuffer)
60747=CaseStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
60748=CaseStatement:CaseStatement(Expression, int, int)
60749=CaseStatement:resolveCase(BlockScope, TypeBinding, SwitchStatement)
60750=CaseStatement:generateCode(BlockScope, CodeStream)
60751=CaseStatement:resolve(BlockScope)
60752=CaseStatement:traverse(ASTVisitor, BlockScope)
60753=Test:foo()
60754=NestedTypeBinding:getOuterLocalVariablesSlotSize()
60755=NestedTypeBinding:getSyntheticArgument(LocalVariableBinding)
60756=NestedTypeBinding:NestedTypeBinding(char[][], ClassScope, SourceTypeBinding)
60757=NestedTypeBinding:getSyntheticArgument(ReferenceBinding, boolean, boolean)
60758=NestedTypeBinding:updateInnerEmulationDependents()
60759=NestedTypeBinding:checkRedundantNullnessDefaultRecurse(ASTNode, Annotation[], long, boolean)
60760=NestedTypeBinding:addSyntheticArgument(ReferenceBinding)
60761=NestedTypeBinding:syntheticEnclosingInstanceTypes()
60762=NestedTypeBinding:getEnclosingInstancesSlotSize()
60763=NestedTypeBinding:addSyntheticArgumentAndField(LocalVariableBinding)
60764=NestedTypeBinding:NestedTypeBinding(NestedTypeBinding)
60765=NestedTypeBinding:enclosingType()
60766=NestedTypeBinding:syntheticEnclosingInstances()
60767=NestedTypeBinding:addSyntheticArgumentAndField(ReferenceBinding)
60768=NestedTypeBinding:syntheticOuterLocalVariables()
60769=NestedTypeBinding:addSyntheticArgument(LocalVariableBinding)
60770=Test:main(String[])
60771=Foo:foo(Point.Float[])
60772=B:m(C, A)
60773=Test:Inner:foo()
60774=A:foo()
60775=X14a:foo()
60776=B:foo()
60777=ResolveMethodDeclarationInAnonymous:foo()
60778=GetSourceTests:setUpSuite()
60779=GetSourceTests:getConstantField(String)
60780=GetSourceTests:testJavadocRange02()
60781=GetSourceTests:testSourceRange01()
60782=GetSourceTests:testFieldConstant03()
60783=GetSourceTests:testSourceRange03()
60784=GetSourceTests:testFieldConstant01()
60785=GetSourceTests:testTypeParameter2()
60786=GetSourceTests:testFieldConstant07()
60787=GetSourceTests:testNameRange11()
60788=GetSourceTests:testMethod()
60789=GetSourceTests:testNameRange02()
60790=GetSourceTests:testFieldConstant05()
60791=GetSourceTests:suite()
60792=GetSourceTests:testUnicodeField()
60793=GetSourceTests:testImport()
60794=GetSourceTests:testLocalVariable3()
60795=GetSourceTests:GetSourceTests(String)
60796=GetSourceTests:testNameRange03()
60797=GetSourceTests:testLocalVariable1()
60798=GetSourceTests:testFieldConstants406836()
60799=GetSourceTests:testNameRange05()
60800=GetSourceTests:testNameRange09()
60801=GetSourceTests:testNameRange07()
60802=GetSourceTests:testField()
60803=GetSourceTests:tearDownSuite()
60804=GetSourceTests:testFieldConstant04()
60805=GetSourceTests:testSourceRange02()
60806=GetSourceTests:testFieldConstant02()
60807=GetSourceTests:testNameRange10()
60808=GetSourceTests:testJavadocRange01()
60809=GetSourceTests:testFieldConstant08()
60810=GetSourceTests:testTypeParameter1()
60811=GetSourceTests:testFieldConstant06()
60812=GetSourceTests:testNameRange01()
60813=GetSourceTests:testNameRange04()
60814=GetSourceTests:testLocalVariable4()
60815=GetSourceTests:testNameRange06()
60816=GetSourceTests:testFieldConstant09()
60817=GetSourceTests:testLocalVariable2()
60818=GetSourceTests:testNameRange08()
60819=GetSourceTests:testUnicodeMethod()
60820=ClasspathContainerInitializer:getFailureContainer(IPath, IJavaProject)
60821=ClasspathContainerInitializer:canUpdateClasspathContainer(IPath, IJavaProject)
60822=ClasspathContainerInitializer:requestClasspathContainerUpdate(IPath, IJavaProject, IClasspathContainer)
60823=ClasspathContainerInitializer:getComparisonID(IPath, IJavaProject)
60824=ClasspathContainerInitializer:getSourceAttachmentStatus(IPath, IJavaProject)
60825=ClasspathContainerInitializer:initialize(IPath, IJavaProject)
60826=ClasspathContainerInitializer:getAttributeStatus(IPath, IJavaProject, String)
60827=ClasspathContainerInitializer:getDescription(IPath, IJavaProject)
60828=ClasspathContainerInitializer:ClasspathContainerInitializer()
60829=ClasspathContainerInitializer:getAccessRulesStatus(IPath, IJavaProject)
60830=TypeAnnotationSyntaxTest:test0074()
60831=TypeAnnotationSyntaxTest:test0085()
60832=TypeAnnotationSyntaxTest:test0119()
60833=TypeAnnotationSyntaxTest:test0050()
60834=TypeAnnotationSyntaxTest:test0106()
60835=TypeAnnotationSyntaxTest:test0096()
60836=TypeAnnotationSyntaxTest:_test000()
60837=TypeAnnotationSyntaxTest:test0008()
60838=TypeAnnotationSyntaxTest:test0061()
60839=TypeAnnotationSyntaxTest:LocationPrinterVisitor:visit(FieldDeclaration, MethodScope)
60840=TypeAnnotationSyntaxTest:suite()
60841=TypeAnnotationSyntaxTest:test0076()
60842=TypeAnnotationSyntaxTest:test0030()
60843=TypeAnnotationSyntaxTest:LocationPrinterVisitor:getLocations()
60844=TypeAnnotationSyntaxTest:LocationPrinterVisitor:visit(NormalAnnotation, BlockScope)
60845=TypeAnnotationSyntaxTest:test0087()
60846=TypeAnnotationSyntaxTest:test0041()
60847=TypeAnnotationSyntaxTest:test0052()
60848=TypeAnnotationSyntaxTest:test0098()
60849=TypeAnnotationSyntaxTest:test0108()
60850=TypeAnnotationSyntaxTest:test0063()
60851=TypeAnnotationSyntaxTest:test0017()
60852=TypeAnnotationSyntaxTest:test0070()
60853=TypeAnnotationSyntaxTest:test0126()
60854=TypeAnnotationSyntaxTest:test0028()
60855=TypeAnnotationSyntaxTest:test0115()
60856=TypeAnnotationSyntaxTest:test0081()
60857=TypeAnnotationSyntaxTest:test0039()
60858=TypeAnnotationSyntaxTest:test0092()
60859=TypeAnnotationSyntaxTest:LocationPrinterVisitor:storeLocations(Annotation, int[])
60860=TypeAnnotationSyntaxTest:test0102()
60861=TypeAnnotationSyntaxTest:TypeAnnotationSyntaxTest(String)
60862=TypeAnnotationSyntaxTest:test0004()
60863=TypeAnnotationSyntaxTest:test0137()
60864=TypeAnnotationSyntaxTest:test0019()
60865=TypeAnnotationSyntaxTest:test0072()
60866=TypeAnnotationSyntaxTest:test0128()
60867=TypeAnnotationSyntaxTest:initialize(CompilerTestSetup)
60868=TypeAnnotationSyntaxTest:test0117()
60869=TypeAnnotationSyntaxTest:test0083()
60870=TypeAnnotationSyntaxTest:test0094()
60871=TypeAnnotationSyntaxTest:test0104()
60872=TypeAnnotationSyntaxTest:test0006()
60873=TypeAnnotationSyntaxTest:test0139()
60874=TypeAnnotationSyntaxTest:test0013()
60875=TypeAnnotationSyntaxTest:test0059()
60876=TypeAnnotationSyntaxTest:test0122()
60877=TypeAnnotationSyntaxTest:test0024()
60878=TypeAnnotationSyntaxTest:test0111()
60879=TypeAnnotationSyntaxTest:test0035()
60880=TypeAnnotationSyntaxTest:LocationPrinterVisitor:LocationPrinterVisitor()
60881=TypeAnnotationSyntaxTest:test0046()
60882=TypeAnnotationSyntaxTest:test0133()
60883=TypeAnnotationSyntaxTest:test0015()
60884=TypeAnnotationSyntaxTest:LocationPrinterVisitor:visit(SingleMemberAnnotation, BlockScope)
60885=TypeAnnotationSyntaxTest:test0026()
60886=TypeAnnotationSyntaxTest:LocationPrinterVisitor:visit(MarkerAnnotation, BlockScope)
60887=TypeAnnotationSyntaxTest:test0113()
60888=TypeAnnotationSyntaxTest:test0037()
60889=TypeAnnotationSyntaxTest:test0100()
60890=TypeAnnotationSyntaxTest:test0090()
60891=TypeAnnotationSyntaxTest:test0002()
60892=TypeAnnotationSyntaxTest:test0048()
60893=TypeAnnotationSyntaxTest:test0135()
60894=TypeAnnotationSyntaxTest:test0055()
60895=TypeAnnotationSyntaxTest:test0066()
60896=TypeAnnotationSyntaxTest:test0020()
60897=TypeAnnotationSyntaxTest:test0077()
60898=TypeAnnotationSyntaxTest:test0031()
60899=TypeAnnotationSyntaxTest:test0088()
60900=TypeAnnotationSyntaxTest:test0042()
60901=TypeAnnotationSyntaxTest:test0057()
60902=TypeAnnotationSyntaxTest:test0120()
60903=TypeAnnotationSyntaxTest:test0011()
60904=TypeAnnotationSyntaxTest:test0068()
60905=TypeAnnotationSyntaxTest:test0022()
60906=TypeAnnotationSyntaxTest:test0079()
60907=TypeAnnotationSyntaxTest:test0033()
60908=TypeAnnotationSyntaxTest:test0131()
60909=TypeAnnotationSyntaxTest:test0044()
60910=TypeAnnotationSyntaxTest:test0051()
60911=TypeAnnotationSyntaxTest:test0107()
60912=TypeAnnotationSyntaxTest:test0097()
60913=TypeAnnotationSyntaxTest:test0009()
60914=TypeAnnotationSyntaxTest:test0062()
60915=TypeAnnotationSyntaxTest:testClass()
60916=TypeAnnotationSyntaxTest:test0073()
60917=TypeAnnotationSyntaxTest:test0129()
60918=TypeAnnotationSyntaxTest:test0084()
60919=TypeAnnotationSyntaxTest:test0118()
60920=TypeAnnotationSyntaxTest:test0053()
60921=TypeAnnotationSyntaxTest:test0099()
60922=TypeAnnotationSyntaxTest:test0109()
60923=TypeAnnotationSyntaxTest:test0064()
60924=TypeAnnotationSyntaxTest:LocationPrinterVisitor:visit(ArrayTypeReference, BlockScope)
60925=TypeAnnotationSyntaxTest:test0075()
60926=TypeAnnotationSyntaxTest:test0086()
60927=TypeAnnotationSyntaxTest:test0040()
60928=TypeAnnotationSyntaxTest:test0093()
60929=TypeAnnotationSyntaxTest:test0103()
60930=TypeAnnotationSyntaxTest:test0005()
60931=TypeAnnotationSyntaxTest:test0138()
60932=TypeAnnotationSyntaxTest:test0016()
60933=TypeAnnotationSyntaxTest:test0125()
60934=TypeAnnotationSyntaxTest:LocationPrinterVisitor:visit(SingleTypeReference, BlockScope)
60935=TypeAnnotationSyntaxTest:test0027()
60936=TypeAnnotationSyntaxTest:test0114()
60937=TypeAnnotationSyntaxTest:test0080()
60938=TypeAnnotationSyntaxTest:test007()
60939=TypeAnnotationSyntaxTest:test0095()
60940=TypeAnnotationSyntaxTest:test0105()
60941=TypeAnnotationSyntaxTest:test0060()
60942=TypeAnnotationSyntaxTest:test0018()
60943=TypeAnnotationSyntaxTest:test0071()
60944=TypeAnnotationSyntaxTest:test0127()
60945=TypeAnnotationSyntaxTest:test0029()
60946=TypeAnnotationSyntaxTest:test0082()
60947=TypeAnnotationSyntaxTest:test0116()
60948=TypeAnnotationSyntaxTest:LocationPrinterVisitor:visit(ParameterizedSingleTypeReference, BlockScope)
60949=TypeAnnotationSyntaxTest:test0036()
60950=TypeAnnotationSyntaxTest:test0001()
60951=TypeAnnotationSyntaxTest:test0047()
60952=TypeAnnotationSyntaxTest:test0134()
60953=TypeAnnotationSyntaxTest:LocationPrinterVisitor:visit(MethodDeclaration, ClassScope)
60954=TypeAnnotationSyntaxTest:test0012()
60955=TypeAnnotationSyntaxTest:test0058()
60956=TypeAnnotationSyntaxTest:test0121()
60957=TypeAnnotationSyntaxTest:test0023()
60958=TypeAnnotationSyntaxTest:test0069()
60959=TypeAnnotationSyntaxTest:test0110()
60960=TypeAnnotationSyntaxTest:test0038()
60961=TypeAnnotationSyntaxTest:test0101()
60962=TypeAnnotationSyntaxTest:test0091()
60963=TypeAnnotationSyntaxTest:test0003()
60964=TypeAnnotationSyntaxTest:test0049()
60965=TypeAnnotationSyntaxTest:test0136()
60966=TypeAnnotationSyntaxTest:test0014()
60967=TypeAnnotationSyntaxTest:test0123()
60968=TypeAnnotationSyntaxTest:test0025()
60969=TypeAnnotationSyntaxTest:test0112()
60970=TypeAnnotationSyntaxTest:test0078()
60971=TypeAnnotationSyntaxTest:test0032()
60972=TypeAnnotationSyntaxTest:test0130()
60973=TypeAnnotationSyntaxTest:test0089()
60974=TypeAnnotationSyntaxTest:test0043()
60975=TypeAnnotationSyntaxTest:test0054()
60976=TypeAnnotationSyntaxTest:LocationPrinterVisitor:visit(Argument, ClassScope)
60977=TypeAnnotationSyntaxTest:test0034()
60978=TypeAnnotationSyntaxTest:test0045()
60979=TypeAnnotationSyntaxTest:test0132()
60980=TypeAnnotationSyntaxTest:LocationPrinterVisitor:visit(Argument, BlockScope)
60981=TypeAnnotationSyntaxTest:test0056()
60982=TypeAnnotationSyntaxTest:test0010()
60983=TypeAnnotationSyntaxTest:traverse(File)
60984=TypeAnnotationSyntaxTest:test0067()
60985=TypeAnnotationSyntaxTest:test0021()
60986=Try:foo(int, String)
60987=Try:Try(int, String)
60988=X02d:foo()
60989=EclipseFormatTest:main(String[])
60990=ErrorTypeImpl:ErrorTypeImpl(BaseProcessingEnvImpl, ReferenceBinding)
60991=ErrorTypeImpl:toString()
60992=ErrorTypeImpl:getKind()
60993=ErrorTypeImpl:getTypeArguments()
60994=ErrorTypeImpl:asElement()
60995=ErrorTypeImpl:getAnnotationsByType(Class<A>)
60996=ErrorTypeImpl:accept(TypeVisitor<R, P>, P)
60997=ErrorTypeImpl:getAnnotationMirrors()
60998=ErrorTypeImpl:getAnnotation(Class<A>)
60999=ErrorTypeImpl:getEnclosingType()
61000=X:begin()
61001=T:T(String)
61002=RuntimeInvisibleAnnotationsAttribute:getAnnotationsNumber()
61003=RuntimeInvisibleAnnotationsAttribute:getAnnotations()
61004=RuntimeInvisibleAnnotationsAttribute:RuntimeInvisibleAnnotationsAttribute(byte[], IConstantPool, int)
61005=IDebugRequestor:reset()
61006=IDebugRequestor:deactivate()
61007=IDebugRequestor:activate()
61008=IDebugRequestor:isActive()
61009=IDebugRequestor:acceptDebugResult(CompilationResult)
61010=X01:X01(String)
61011=X01:X01(String, String)
61012=AbstractAnnotationProcessorManager:setErr(PrintWriter)
61013=AbstractAnnotationProcessorManager:reset()
61014=AbstractAnnotationProcessorManager:configureFromPlatform(Compiler, Object, Object)
61015=AbstractAnnotationProcessorManager:setProcessors(Object[])
61016=AbstractAnnotationProcessorManager:setOut(PrintWriter)
61017=AbstractAnnotationProcessorManager:getNewUnits()
61018=AbstractAnnotationProcessorManager:getDeletedUnits()
61019=AbstractAnnotationProcessorManager:processAnnotations(CompilationUnitDeclaration[], ReferenceBinding[], boolean)
61020=AbstractAnnotationProcessorManager:getNewClassFiles()
61021=AbstractAnnotationProcessorManager:configure(Object, String[])
61022=A:doX()
61023=X04:foo(String)
61024=AbstractCompilerToolTest:CompilerInvocationDiagnosticListener:report(Diagnostic<? extends JavaFileObject>)
61025=AbstractCompilerToolTest:invokeCompiler(PrintWriter, PrintWriter, Object, TestCompilationProgress)
61026=AbstractCompilerToolTest:CompilerInvocationTestsArguments:CompilerInvocationTestsArguments(StandardJavaFileManager, List<String>, String[])
61027=AbstractCompilerToolTest:CompilerInvocationTestsArguments:toString()
61028=AbstractCompilerToolTest:AbstractCompilerToolTest(String)
61029=AbstractCompilerToolTest:CompilerInvocationDiagnosticListener:CompilerInvocationDiagnosticListener(PrintWriter)
61030=ObjectCache:size()
61031=ObjectCache:ObjectCache(int)
61032=ObjectCache:put(Object, int)
61033=ObjectCache:toString()
61034=ObjectCache:get(Object)
61035=ObjectCache:containsKey(Object)
61036=ObjectCache:rehash()
61037=ObjectCache:ObjectCache()
61038=ObjectCache:clear()
61039=ObjectCache:hashCode(Object)
61040=MirrorTestAnnotationProcessorFactory:MirrorTestAnnotationProcessorFactory()
61041=MirrorTestAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
61042=X:X(int)
61043=X:X()
61044=AccessRuleSet:toString()
61045=AccessRuleSet:hashCode()
61046=AccessRuleSet:equals(Object)
61047=AccessRuleSet:getAccessRules()
61048=AccessRuleSet:AccessRuleSet(AccessRule[], byte, String)
61049=AccessRuleSet:hashCode(AccessRule[])
61050=AccessRuleSet:toString(boolean)
61051=AccessRuleSet:getViolatedRestriction(char[])
61052=TestUtils:convertToIndependentLineDelimiter(String)
61053=TestUtils:concatPath(String)
61054=TypeVariable:getDeclaration()
61055=SuperTypeReferencePattern:SuperTypeReferencePattern(char[], char[], int, int)
61056=SuperTypeReferencePattern:getBlankPattern()
61057=SuperTypeReferencePattern:decodeIndexKey(char[])
61058=SuperTypeReferencePattern:matchesDecodedKey(SearchPattern)
61059=SuperTypeReferencePattern:getIndexCategories()
61060=SuperTypeReferencePattern:queryIn(Index)
61061=SuperTypeReferencePattern:createIndexKey(int, char[], char[], char[][], char[][], char, char[], char)
61062=SuperTypeReferencePattern:SuperTypeReferencePattern(char[], char[], int, char, int)
61063=SuperTypeReferencePattern:SuperTypeReferencePattern(int)
61064=SuperTypeReferencePattern:print(StringBuffer)
61065=Test:main(String[])
61066=LocalClass02:searchAllTypeNames(char[], int, char[])
61067=EclipseDiagnostic:getEndPosition()
61068=EclipseDiagnostic:EclipseDiagnostic(Kind, int, String[], char[], DefaultProblemFactory)
61069=EclipseDiagnostic:getCode()
61070=EclipseDiagnostic:newInstance(CategorizedProblem, DefaultProblemFactory)
61071=EclipseDiagnostic:getColumnNumber()
61072=EclipseDiagnostic:EclipseDiagnostic(Kind, int, String[], char[], DefaultProblemFactory, int, int, int, int)
61073=EclipseDiagnostic:getStartPosition()
61074=EclipseDiagnostic:getMessage(Locale)
61075=EclipseDiagnostic:getKind()
61076=EclipseDiagnostic:getLineNumber()
61077=EclipseDiagnostic:getKind(CategorizedProblem)
61078=EclipseDiagnostic:getSource()
61079=EclipseDiagnostic:getPosition()
61080=EclipseDiagnostic:newInstanceFromDefaultProblem(DefaultProblem, DefaultProblemFactory)
61081=ScannerTest:test043()
61082=ScannerTest:test032()
61083=ScannerTest:test065()
61084=ScannerTest:test054()
61085=ScannerTest:test041()
61086=ScannerTest:test030()
61087=ScannerTest:test063()
61088=ScannerTest:test052()
61089=ScannerTest:test001()
61090=ScannerTest:test047()
61091=ScannerTest:test036()
61092=ScannerTest:test023()
61093=ScannerTest:suite()
61094=ScannerTest:test012()
61095=ScannerTest:test058()
61096=ScannerTest:test045()
61097=ScannerTest:test034()
61098=ScannerTest:test021()
61099=ScannerTest:test067()
61100=ScannerTest:test010()
61101=ScannerTest:test056()
61102=ScannerTest:test005()
61103=ScannerTest:test027()
61104=ScannerTest:test016()
61105=ScannerTest:test049()
61106=ScannerTest:test003()
61107=ScannerTest:test038()
61108=ScannerTest:test025()
61109=ScannerTest:test014()
61110=ScannerTest:test009()
61111=ScannerTest:test062()
61112=ScannerTest:test051()
61113=ScannerTest:test060()
61114=ScannerTest:test007()
61115=ScannerTest:ScannerTest(String)
61116=ScannerTest:test029()
61117=ScannerTest:test018()
61118=ScannerTest:test020()
61119=ScannerTest:test066()
61120=ScannerTest:test055()
61121=ScannerTest:test042()
61122=ScannerTest:test031()
61123=ScannerTest:test064()
61124=ScannerTest:test053()
61125=ScannerTest:test040()
61126=ScannerTest:test024()
61127=ScannerTest:test013()
61128=ScannerTest:test059()
61129=ScannerTest:test046()
61130=ScannerTest:test035()
61131=ScannerTest:test022()
61132=ScannerTest:test068()
61133=ScannerTest:test011()
61134=ScannerTest:test057()
61135=ScannerTest:test044()
61136=ScannerTest:test033()
61137=ScannerTest:test028()
61138=ScannerTest:test017()
61139=ScannerTest:testClass()
61140=ScannerTest:test004()
61141=ScannerTest:test039()
61142=ScannerTest:test026()
61143=ScannerTest:test015()
61144=ScannerTest:test002()
61145=ScannerTest:test048()
61146=ScannerTest:test037()
61147=ScannerTest:test008()
61148=ScannerTest:test061()
61149=ScannerTest:test050()
61150=ScannerTest:test019()
61151=ScannerTest:test006()
61152=A:method()
61153=X:main(String[])
61154=X:foo()
61155=A:foo()
61156=A:A()
61157=X:foo2()
61158=X:foo1()
61159=X01d:foo()
61160=X:x(int)
61161=RegionPerformanceTests:RegionPerformanceTests(String)
61162=RegionPerformanceTests:setUp()
61163=RegionPerformanceTests:testRegion()
61164=RegionPerformanceTests:suite()
61165=RegionPerformanceTests:createJavaProject(String)
61166=RegionPerformanceTests:tearDown()
61167=RoundState:finalRound()
61168=RoundState:errorRaised()
61169=RoundState:classFilesCreated()
61170=RoundState:sourceFilesCreated()
61171=A:foo()
61172=A:A(String)
61173=A:foo()
61174=ProcessorTestStatus:assertEquals(String, int, int)
61175=ProcessorTestStatus:reset()
61176=ProcessorTestStatus:assertEquals(String, Object, Object)
61177=ProcessorTestStatus:assertTrue(String, boolean)
61178=ProcessorTestStatus:setProcessorRan()
61179=ProcessorTestStatus:failWithoutException(String)
61180=ProcessorTestStatus:processorRan()
61181=ProcessorTestStatus:fail(String)
61182=ProcessorTestStatus:getErrors()
61183=ProcessorTestStatus:hasErrors()
61184=ProcessorTestStatus:assertEquals(String, String, String)
61185=ProcessorTestStatus:ProcessorTestStatus()
61186=MultiProjectTests:testIncludePartOfAnotherProject2()
61187=MultiProjectTests:testExcludePartOfAnotherProject3()
61188=MultiProjectTests:testCompileOnlyStructuralDependent()
61189=MultiProjectTests:testRemoveField()
61190=MultiProjectTests:testCycle2()
61191=MultiProjectTests:testCycle4()
61192=MultiProjectTests:test461074_error()
61193=MultiProjectTests:testCompileOnlyDependent()
61194=MultiProjectTests:test104_missing_required_binaries()
61195=MultiProjectTests:testCycle6()
61196=MultiProjectTests:test461074()
61197=MultiProjectTests:test100_class_folder_exported()
61198=MultiProjectTests:testCompileOrder()
61199=MultiProjectTests:testMissingRequiredBinaries()
61200=MultiProjectTests:test101_class_folder_non_exported()
61201=MultiProjectTests:testExcludePartOfAnotherProject2()
61202=MultiProjectTests:testIncludePartOfAnotherProject1()
61203=MultiProjectTests:testCycle1()
61204=MultiProjectTests:suite()
61205=MultiProjectTests:testIncludePartOfAnotherProject3()
61206=MultiProjectTests:testCycle3()
61207=MultiProjectTests:testCycle5()
61208=MultiProjectTests:testIgnoreIfBetterNonAccessibleRule2()
61209=MultiProjectTests:test102_missing_required_binaries()
61210=MultiProjectTests:testCycle7()
61211=MultiProjectTests:MultiProjectTests(String)
61212=MultiProjectTests:testIgnoreIfBetterNonAccessibleRule1()
61213=MultiProjectTests:test438923()
61214=MultiProjectTests:test103_missing_required_binaries()
61215=MultiProjectTests:testExcludePartOfAnotherProject1()
61216=OperatorExpression:generateTableTestCase()
61217=OperatorExpression:OperatorExpression()
61218=OperatorExpression:get_LESS()
61219=OperatorExpression:get_OR_OR()
61220=OperatorExpression:get_PLUS()
61221=OperatorExpression:get_RIGHT_SHIFT()
61222=OperatorExpression:get_LEFT_SHIFT()
61223=OperatorExpression:get_GREATER_EQUAL()
61224=OperatorExpression:printExpressionNoParenthesis(int, StringBuffer)
61225=OperatorExpression:classInitialize()
61226=OperatorExpression:get_DIVIDE()
61227=OperatorExpression:get_MINUS()
61228=OperatorExpression:get_EQUAL_EQUAL()
61229=OperatorExpression:operatorToString()
61230=OperatorExpression:get_OR()
61231=OperatorExpression:printExpression(int, StringBuffer)
61232=OperatorExpression:get_UNSIGNED_RIGHT_SHIFT()
61233=OperatorExpression:get_AND()
61234=OperatorExpression:get_GREATER()
61235=OperatorExpression:get_LESS_EQUAL()
61236=OperatorExpression:get_REMAINDER()
61237=OperatorExpression:get_MULTIPLY()
61238=OperatorExpression:get_AND_AND()
61239=OperatorExpression:get_XOR()
61240=TypeParameterDeclarationImpl:isFromSource()
61241=TypeParameterDeclarationImpl:getAnnotationMirrors()
61242=TypeParameterDeclarationImpl:getDeclaration()
61243=TypeParameterDeclarationImpl:isSubTypeCompatible(EclipseMirrorType)
61244=TypeParameterDeclarationImpl:getTypeBinding()
61245=TypeParameterDeclarationImpl:getPosition()
61246=TypeParameterDeclarationImpl:getDeclarationBinding()
61247=TypeParameterDeclarationImpl:getSimpleName()
61248=TypeParameterDeclarationImpl:kind()
61249=TypeParameterDeclarationImpl:getBounds()
61250=TypeParameterDeclarationImpl:accept(DeclarationVisitor)
61251=TypeParameterDeclarationImpl:getOwnerBinding()
61252=TypeParameterDeclarationImpl:getModifiers()
61253=TypeParameterDeclarationImpl:getOwner()
61254=TypeParameterDeclarationImpl:isAssignmentCompatible(EclipseMirrorType)
61255=TypeParameterDeclarationImpl:accept(TypeVisitor)
61256=TypeParameterDeclarationImpl:getAnnotation(Class<A>)
61257=TypeParameterDeclarationImpl:toString()
61258=TypeParameterDeclarationImpl:getDocComment()
61259=TypeParameterDeclarationImpl:TypeParameterDeclarationImpl(ITypeBinding, BaseProcessorEnv)
61260=Test:main(String[])
61261=ResolveCatchArgumentName:foo()
61262=WeakHashSet:HashableWeakReference:toString()
61263=WeakHashSet:HashableWeakReference:hashCode()
61264=WeakHashSet:size()
61265=WeakHashSet:WeakHashSet()
61266=WeakHashSet:addValue(HashableWeakReference)
61267=WeakHashSet:rehash()
61268=WeakHashSet:WeakHashSet(int)
61269=WeakHashSet:remove(Object)
61270=WeakHashSet:contains(Object)
61271=WeakHashSet:HashableWeakReference:equals(Object)
61272=WeakHashSet:toString()
61273=WeakHashSet:cleanupGarbageCollectedValues()
61274=WeakHashSet:get(Object)
61275=WeakHashSet:add(Object)
61276=WeakHashSet:HashableWeakReference:HashableWeakReference(Object, ReferenceQueue)
61277=BootstrapMethodsAttribute:getBootstrapMethods()
61278=BootstrapMethodsAttribute:BootstrapMethodsAttribute(byte[], IConstantPool, int)
61279=BootstrapMethodsAttribute:getBootstrapMethodsLength()
61280=UnresolvedReferenceBinding:swapUnresolved(UnresolvedReferenceBinding, ReferenceBinding, LookupEnvironment)
61281=UnresolvedReferenceBinding:depth()
61282=UnresolvedReferenceBinding:UnresolvedReferenceBinding(char[][], PackageBinding)
61283=UnresolvedReferenceBinding:hasTypeBit(int)
61284=UnresolvedReferenceBinding:prototype()
61285=UnresolvedReferenceBinding:clone(TypeBinding)
61286=UnresolvedReferenceBinding:UnresolvedReferenceBinding(UnresolvedReferenceBinding)
61287=UnresolvedReferenceBinding:addWrapper(TypeBinding, LookupEnvironment)
61288=UnresolvedReferenceBinding:debugName()
61289=UnresolvedReferenceBinding:isUnresolvedType()
61290=UnresolvedReferenceBinding:setResolvedType(ReferenceBinding, LookupEnvironment)
61291=UnresolvedReferenceBinding:toString()
61292=UnresolvedReferenceBinding:resolve(LookupEnvironment, boolean)
61293=Test:main(String[])
61294=X:bar(int, String)
61295=X:X()
61296=X01:foo()
61297=A:foo()
61298=ArrayReference:ArrayReference(Expression, Expression)
61299=ArrayReference:traverse(ASTVisitor, BlockScope)
61300=ArrayReference:generatePostIncrement(BlockScope, CodeStream, CompoundAssignment, boolean)
61301=ArrayReference:analyseAssignment(BlockScope, FlowContext, FlowInfo, Assignment, boolean)
61302=ArrayReference:resolveType(BlockScope)
61303=ArrayReference:analyseCode(BlockScope, FlowContext, FlowInfo)
61304=ArrayReference:checkNPE(BlockScope, FlowContext, FlowInfo, int)
61305=ArrayReference:printExpression(int, StringBuffer)
61306=ArrayReference:generateCode(BlockScope, CodeStream, boolean)
61307=ArrayReference:generateCompoundAssignment(BlockScope, CodeStream, Expression, int, int, boolean)
61308=ArrayReference:generateAssignment(BlockScope, CodeStream, Assignment, boolean)
61309=Test:foo(Exception)
61310=NestedTypeBinding:getSyntheticArgument(LocalVariableBinding)
61311=NestedTypeBinding:NestedTypeBinding(char[][], ClassScope, SourceTypeBinding)
61312=NestedTypeBinding:updateInnerEmulationDependents()
61313=NestedTypeBinding:addSyntheticArgument(ReferenceBinding)
61314=NestedTypeBinding:syntheticEnclosingInstanceTypes()
61315=NestedTypeBinding:addSyntheticArgumentAndField(LocalVariableBinding)
61316=NestedTypeBinding:computeSyntheticArgumentSlotSizes()
61317=NestedTypeBinding:enclosingType()
61318=NestedTypeBinding:syntheticEnclosingInstances()
61319=NestedTypeBinding:getSyntheticArgument(ReferenceBinding, boolean)
61320=NestedTypeBinding:addSyntheticArgumentAndField(ReferenceBinding)
61321=NestedTypeBinding:syntheticOuterLocalVariables()
61322=NestedTypeBinding:addSyntheticArgument(LocalVariableBinding)
61323=XMLWriter:XMLWriter(Writer, IJavaProject, boolean)
61324=TypeHierarchySerializationTests:test004()
61325=TypeHierarchySerializationTests:tearDownSuite()
61326=TypeHierarchySerializationTests:test002()
61327=TypeHierarchySerializationTests:compareRegionBasedTypeHierarchy(String, RegionBasedTypeHierarchy, RegionBasedTypeHierarchy)
61328=TypeHierarchySerializationTests:compare(String, Object[], Object[])
61329=TypeHierarchySerializationTests:testFocusHierarchy(IType, IJavaProject)
61330=TypeHierarchySerializationTests:compareTypeHierarchy(String, TypeHierarchy, TypeHierarchy)
61331=TypeHierarchySerializationTests:test008()
61332=TypeHierarchySerializationTests:test006()
61333=TypeHierarchySerializationTests:test005()
61334=TypeHierarchySerializationTests:setUpSuite()
61335=TypeHierarchySerializationTests:suite()
61336=TypeHierarchySerializationTests:test003()
61337=TypeHierarchySerializationTests:test001()
61338=TypeHierarchySerializationTests:compare(String, ITypeHierarchy, ITypeHierarchy)
61339=TypeHierarchySerializationTests:TypeHierarchySerializationTests(String)
61340=TypeHierarchySerializationTests:test009()
61341=TypeHierarchySerializationTests:test007()
61342=X:foo()
61343=InsideSubRoutineFlowContext:subRoutine()
61344=InsideSubRoutineFlowContext:InsideSubRoutineFlowContext(FlowContext, ASTNode)
61345=InsideSubRoutineFlowContext:isNonReturningContext()
61346=InsideSubRoutineFlowContext:recordReturnFrom(FlowInfo)
61347=InsideSubRoutineFlowContext:individualToString()
61348=InsideSubRoutineFlowContext:initsOnReturn()
61349=AssistOptions:AssistOptions()
61350=AssistOptions:AssistOptions(Map)
61351=ElementUtilsProc:examineGetAllMembers()
61352=ElementUtilsProc:examineGetConstantExpression()
61353=ElementUtilsProc:examineOverrides()
61354=ElementUtilsProc:examineHidesField()
61355=ElementUtilsProc:examineHidesClass()
61356=ElementUtilsProc:process(Set<? extends TypeElement>, RoundEnvironment)
61357=ElementUtilsProc:examineGetAllAnnotations()
61358=ElementUtilsProc:examineGetDocComment()
61359=ElementUtilsProc:examineHidesMethod()
61360=ElementUtilsProc:examineBinaryName()
61361=ElementUtilsProc:collectElements()
61362=ElementUtilsProc:examineIsDeprecated()
61363=BinaryTypeBinding:resolveTypesFor(TypeVariableBinding)
61364=BinaryTypeBinding:createMethod(IBinaryMethod, boolean)
61365=BinaryTypeBinding:cachePartsFrom(IBinaryType, boolean)
61366=BinaryTypeBinding:resolveTypeFor(FieldBinding)
61367=BinaryTypeBinding:isGenericType()
61368=BinaryTypeBinding:createFields(IBinaryField[], boolean)
61369=BinaryTypeBinding:memberTypes()
61370=BinaryTypeBinding:superclass()
61371=BinaryTypeBinding:toString()
61372=BinaryTypeBinding:resolveType(ReferenceBinding, LookupEnvironment, boolean)
61373=BinaryTypeBinding:getExactMethod(char[], TypeBinding[], CompilationUnitScope)
61374=BinaryTypeBinding:getMethods(char[])
61375=BinaryTypeBinding:superInterfaces()
61376=BinaryTypeBinding:getExactConstructor(TypeBinding[])
61377=BinaryTypeBinding:resolveTypesFor(MethodBinding)
61378=BinaryTypeBinding:initializeTypeVariable(TypeVariableBinding, TypeVariableBinding[], SignatureWrapper)
61379=BinaryTypeBinding:createMethods(IBinaryMethod[], boolean)
61380=BinaryTypeBinding:availableMethods()
61381=BinaryTypeBinding:getMemberType(char[])
61382=BinaryTypeBinding:getTypeVariable(char[])
61383=BinaryTypeBinding:fields()
61384=BinaryTypeBinding:availableFields()
61385=BinaryTypeBinding:unResolvedMethods()
61386=BinaryTypeBinding:methods()
61387=BinaryTypeBinding:typeVariables()
61388=BinaryTypeBinding:BinaryTypeBinding(PackageBinding, IBinaryType, LookupEnvironment)
61389=BinaryTypeBinding:enclosingType()
61390=BinaryTypeBinding:resolveType(TypeBinding, LookupEnvironment, ParameterizedTypeBinding, int)
61391=BinaryTypeBinding:isEquivalentTo(TypeBinding)
61392=BinaryTypeBinding:resolveUnresolvedType(ReferenceBinding, LookupEnvironment, boolean)
61393=BinaryTypeBinding:hasMemberTypes()
61394=BinaryTypeBinding:createTypeVariable(SignatureWrapper, int)
61395=BinaryTypeBinding:getField(char[], boolean)
61396=Test:setName1(String)
61397=AMap:createAMap(String, String)
61398=B:B(M, N)
61399=AMethod:getMap(String, String)
61400=A:A(M, N)
61401=B:getMap(M, N)
61402=A:getMap(M, N)
61403=A:A()
61404=AMap:AMap(String, String)
61405=X04b:foo()
61406=MethodInfoWithAnnotations:MethodInfoWithAnnotations(MethodInfo, AnnotationInfo[])
61407=MethodInfoWithAnnotations:initialize()
61408=MethodInfoWithAnnotations:reset()
61409=MethodInfoWithAnnotations:getAnnotations()
61410=MethodInfoWithAnnotations:toStringContent(StringBuffer)
61411=IBinaryNestedType:getName()
61412=IBinaryNestedType:getModifiers()
61413=IBinaryNestedType:getEnclosingTypeName()
61414=ExceptionInferenceFlowContext:ExceptionInferenceFlowContext(FlowContext, ASTNode, ReferenceBinding[], FlowContext, BlockScope, UnconditionalFlowInfo)
61415=OrderPreservingImportAdder:AdjacentImports:toString()
61416=OrderPreservingImportAdder:determineAdjacentNewImports(Collection<ImportName>, Iterable<ImportName>)
61417=OrderPreservingImportAdder:OrderPreservingImportAdder(Comparator<ImportName>)
61418=OrderPreservingImportAdder:shouldGroupWithSucceeding(ImportName, ImportName, ImportName)
61419=OrderPreservingImportAdder:addImports(Collection<ImportName>, Collection<ImportName>)
61420=OrderPreservingImportAdder:countMatchingPrefixSegments(String, String)
61421=AmbiguousSyntaxDemo:main(String[])
61422=AbstractVariableDeclaration:isSuperAccess()
61423=AbstractVariableDeclaration:resolve(BlockScope)
61424=AbstractVariableDeclaration:genericTypeArguments()
61425=AbstractVariableDeclaration:analyseCode(BlockScope, FlowContext, FlowInfo)
61426=AbstractVariableDeclaration:setDepth(int)
61427=AbstractVariableDeclaration:isTypeAccess()
61428=AbstractVariableDeclaration:printStatement(int, StringBuffer)
61429=AbstractVariableDeclaration:setFieldIndex(int)
61430=AbstractVariableDeclaration:setActualReceiverType(ReferenceBinding)
61431=RootManipulationsTests:testCopySourceFolder1()
61432=RootManipulationsTests:assertJavaProject(String, IJavaProject)
61433=RootManipulationsTests:testFailCopySourceFolder1()
61434=RootManipulationsTests:delete(IPackageFragmentRoot)
61435=RootManipulationsTests:testCopySourceFolder5()
61436=RootManipulationsTests:testDeleteSourceFolder1()
61437=RootManipulationsTests:testCopySourceFolder3()
61438=RootManipulationsTests:move(IPackageFragmentRoot, IPath, IClasspathEntry)
61439=RootManipulationsTests:RootManipulationsTests(String)
61440=RootManipulationsTests:testRenameSourceFolder4()
61441=RootManipulationsTests:populate(StringBuffer, Object, int)
61442=RootManipulationsTests:testMoveSourceFolder6()
61443=RootManipulationsTests:testRenameJarFile2()
61444=RootManipulationsTests:testRenameSourceFolder2()
61445=RootManipulationsTests:move(IPackageFragmentRoot, IPath)
61446=RootManipulationsTests:testCopySourceFolder6()
61447=RootManipulationsTests:testDeleteJarFile2()
61448=RootManipulationsTests:testMoveSourceFolder4()
61449=RootManipulationsTests:copy(IPackageFragmentRoot, IPath, IClasspathEntry)
61450=RootManipulationsTests:testMoveSourceFolder2()
61451=RootManipulationsTests:copy(IPackageFragmentRoot, IPath)
61452=RootManipulationsTests:populate(StringBuffer, IJavaElement, int)
61453=RootManipulationsTests:testFailCopySourceFolder2()
61454=RootManipulationsTests:testRenameSourceFolder1()
61455=RootManipulationsTests:testCopySourceFolder4()
61456=RootManipulationsTests:testDeleteSourceFolder2()
61457=RootManipulationsTests:testCopySourceFolder2()
61458=RootManipulationsTests:testDeleteJarFile1()
61459=RootManipulationsTests:testMoveSourceFolder5()
61460=RootManipulationsTests:testRenameJarFile1()
61461=RootManipulationsTests:testDeleteJarFile3()
61462=RootManipulationsTests:testMoveSourceFolder3()
61463=RootManipulationsTests:testRenameSourceFolder3()
61464=RootManipulationsTests:testMoveSourceFolder1()
61465=RootManipulationsTests:suite()
61466=RootManipulationsTests:testRenameJarFile3()
61467=X02b:setCharset(String, Object)
61468=DocumentElementParserTest:exitCompilationUnit(int)
61469=DocumentElementParserTest:exitMethod(int, int)
61470=DocumentElementParserTest:acceptInitializer(int, int, int[], int, int, int, int)
61471=DocumentElementParserTest:enterConstructor(int, int[], int, int, char[], int, int, char[][], int[], int[], char[][], int[], int[], int, char[][], int[], int[], int)
61472=DocumentElementParserTest:enterMethod(int, int[], int, int, char[], int, int, int, char[], int, int, char[][], int[], int[], char[][], int[], int[], int, int, int, char[][], int[], int[], int)
61473=DocumentElementParserTest:enterCompilationUnit()
61474=DocumentElementParserTest:exitField(int, int)
61475=DocumentElementParserTest:enterClass(int, int[], int, int, int, char[], int, int, char[], int, int, char[][], int[], int[], int)
61476=DocumentElementParserTest:acceptPackage(int, int, int[], char[], int)
61477=DocumentElementParserTest:enterField(int, int[], int, int, char[], int, int, int, char[], int, int, int, int)
61478=DocumentElementParserTest:exitClass(int, int)
61479=DocumentElementParserTest:reset()
61480=DocumentElementParserTest:exitInterface(int, int)
61481=DocumentElementParserTest:acceptLineSeparatorPositions(int[])
61482=DocumentElementParserTest:enterInterface(int, int[], int, int, int, char[], int, int, char[][], int[], int[], int)
61483=DocumentElementParserTest:test01()
61484=DocumentElementParserTest:exitConstructor(int, int)
61485=DocumentElementParserTest:acceptImport(int, int, int[], char[], int, boolean, int)
61486=DocumentElementParserTest:acceptProblem(CategorizedProblem)
61487=DocumentElementParserTest:DocumentElementParserTest(String)
61488=B:m()
61489=B:a()
61490=Bug49361:main(String[])
61491=X15a:foo()
61492=Test:foo(int)
61493=SuperConstructorInvocation:setExpression(Expression)
61494=SuperConstructorInvocation:resolveConstructorBinding()
61495=SuperConstructorInvocation:getNodeType0()
61496=SuperConstructorInvocation:treeSize()
61497=SuperConstructorInvocation:accept0(ASTVisitor)
61498=SuperConstructorInvocation:getExpression()
61499=SuperConstructorInvocation:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
61500=SuperConstructorInvocation:arguments()
61501=SuperConstructorInvocation:clone0(AST)
61502=SuperConstructorInvocation:subtreeMatch0(ASTMatcher, Object)
61503=SuperConstructorInvocation:internalStructuralPropertiesForType(int)
61504=SuperConstructorInvocation:internalGetChildListProperty(ChildListPropertyDescriptor)
61505=SuperConstructorInvocation:SuperConstructorInvocation(AST)
61506=SuperConstructorInvocation:propertyDescriptors(int)
61507=SuperConstructorInvocation:memSize()
61508=SuperConstructorInvocation:typeArguments()
61509=X:foo()
61510=X:X(String)
61511=Test1:test(Map<String, Test1>, String)
61512=FileGenLocationAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
61513=FileGenLocationAnnotationProcessorFactory:FileGenLocationAnnotationProcessorFactory()
61514=JarPackageFragmentInfo:getNonJavaResources()
61515=X10:foo()
61516=A:foo()
61517=TestClassInvalid:foo3()
61518=TestClassInvalid:foo1()
61519=TestClassInvalid:foo2()
61520=X14:foo(String)
61521=TypeBinding:getIntersectingTypes()
61522=TypeBinding:isAnonymous()
61523=TypeBinding:getTypeBounds()
61524=TypeBinding:getBound()
61525=TypeBinding:getUnresolvedJavaElement(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
61526=TypeBinding:isGenericType()
61527=TypeBinding:getSuperclass()
61528=TypeBinding:isClass()
61529=TypeBinding:getTypeParameters()
61530=TypeBinding:getModifiers()
61531=TypeBinding:getDeclaredFields()
61532=TypeBinding:getQualifiedName()
61533=TypeBinding:getGenericTypeOfWildcardType()
61534=TypeBinding:isTypeVariable()
61535=TypeBinding:isCastCompatible(ITypeBinding)
61536=TypeBinding:getDimensions()
61537=TypeBinding:isNested()
61538=TypeBinding:isMember()
61539=TypeBinding:resolveAnnotationBindings(org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[], boolean)
61540=TypeBinding:isDeprecated()
61541=TypeBinding:createTypeBinding(BindingResolver, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, IBinding)
61542=TypeBinding:getDeclaredTypes()
61543=TypeBinding:getName()
61544=TypeBinding:isEnum()
61545=TypeBinding:getKey()
61546=TypeBinding:LocalTypeBinding:LocalTypeBinding(BindingResolver, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, IBinding)
61547=TypeBinding:isParameterizedType()
61548=TypeBinding:isRecovered()
61549=TypeBinding:getTypeArguments()
61550=TypeBinding:getDeclaredModifiers()
61551=TypeBinding:isCapture()
61552=TypeBinding:isInterface()
61553=TypeBinding:isTopLevel()
61554=TypeBinding:getAnnotations()
61555=TypeBinding:getInterfaces()
61556=TypeBinding:getTypeAnnotations()
61557=TypeBinding:isFromSource()
61558=TypeBinding:isArray()
61559=TypeBinding:createArrayType(int)
61560=TypeBinding:getComponentType()
61561=TypeBinding:getPackage()
61562=TypeBinding:isRawType()
61563=TypeBinding:isWildcardType()
61564=TypeBinding:isIntersectionType()
61565=TypeBinding:TypeBinding(BindingResolver, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
61566=TypeBinding:isAssignmentCompatible(ITypeBinding)
61567=TypeBinding:isPrimitive()
61568=TypeBinding:getDeclaredMethods()
61569=TypeBinding:getFunctionalInterfaceMethod()
61570=TypeBinding:isSynthetic()
61571=TypeBinding:getDeclaringMethod()
61572=TypeBinding:getBinaryName()
61573=TypeBinding:isUpperbound()
61574=TypeBinding:getDeclaringClass()
61575=TypeBinding:getUnresolvedJavaElement()
61576=TypeBinding:isSubTypeCompatible(ITypeBinding)
61577=TypeBinding:getJavaElement()
61578=TypeBinding:getKind()
61579=TypeBinding:isNullType()
61580=TypeBinding:LocalTypeBinding:getDeclaringMember()
61581=TypeBinding:toString()
61582=TypeBinding:getDeclaringMember()
61583=TypeBinding:getElementType()
61584=TypeBinding:getTypeDeclaration()
61585=TypeBinding:getErasure()
61586=TypeBinding:getRank()
61587=TypeBinding:isEqualTo(IBinding)
61588=TypeBinding:getWildcard()
61589=TypeBinding:isLocal()
61590=TypeBinding:isAnnotation()
61591=Test:foo()
61592=ExceptionHandlingFlowContext:individualToString()
61593=ExceptionHandlingFlowContext:initsOnReturn()
61594=ExceptionHandlingFlowContext:ExceptionHandlingFlowContext(FlowContext, ASTNode, ReferenceBinding[], FlowContext, BlockScope, UnconditionalFlowInfo)
61595=ExceptionHandlingFlowContext:subroutine()
61596=ExceptionHandlingFlowContext:ExceptionHandlingFlowContext(FlowContext, TryStatement, ReferenceBinding[], int[], FlowContext, BlockScope, FlowInfo)
61597=ExceptionHandlingFlowContext:recordReturnFrom(UnconditionalFlowInfo)
61598=ExceptionHandlingFlowContext:getExceptionType(int)
61599=ExceptionHandlingFlowContext:recordHandlingException(ReferenceBinding, UnconditionalFlowInfo, TypeBinding, TypeBinding, ASTNode, boolean)
61600=ExceptionHandlingFlowContext:mergeUnhandledException(TypeBinding)
61601=ExceptionHandlingFlowContext:initsOnException(int)
61602=ExceptionHandlingFlowContext:complainIfUnusedExceptionHandlers(BlockScope, TryStatement)
61603=ExceptionHandlingFlowContext:ExceptionHandlingFlowContext(FlowContext, ASTNode, ReferenceBinding[], int[], Argument[], FlowContext, BlockScope, UnconditionalFlowInfo)
61604=ExceptionHandlingFlowContext:complainIfUnusedExceptionHandlers(AbstractMethodDeclaration)
61605=ExceptionHandlingFlowContext:getInitializationContext()
61606=RuntimeVisibleTypeAnnotationsAttribute:RuntimeVisibleTypeAnnotationsAttribute(byte[], IConstantPool, int)
61607=RuntimeVisibleTypeAnnotationsAttribute:getExtendedAnnotations()
61608=RuntimeVisibleTypeAnnotationsAttribute:getExtendedAnnotationsNumber()
61609=ConditionalExpression:optimizedBooleanConstant()
61610=ConditionalExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
61611=ConditionalExpression:traverse(ASTVisitor, BlockScope)
61612=ConditionalExpression:ConditionalExpression(Expression, Expression, Expression)
61613=ConditionalExpression:printExpressionNoParenthesis(int, StringBuffer)
61614=ConditionalExpression:resolveType(BlockScope)
61615=ConditionalExpression:generateOptimizedBoolean(BlockScope, CodeStream, Label, Label, boolean)
61616=ConditionalExpression:generateCode(BlockScope, CodeStream, boolean)
61617=I:k()
61618=T:m()
61619=Test:foo3()
61620=Test:foo2()
61621=Test:foo()
61622=Test:bar()
61623=A:Example(boolean)
61624=X01:foo(int, int)
61625=AptBinaryLocalVariableBinding:AptBinaryLocalVariableBinding(char[], TypeBinding, int, AnnotationBinding[], MethodBinding)
61626=AptBinaryLocalVariableBinding:getAnnotations()
61627=ICompilationUnit:getImportContainer()
61628=ICompilationUnit:getWorkingCopy(IProgressMonitor)
61629=ICompilationUnit:restore()
61630=ICompilationUnit:getType(String)
61631=ICompilationUnit:getPackageDeclaration(String)
61632=ICompilationUnit:getPrimary()
61633=ICompilationUnit:hasResourceChanged()
61634=ICompilationUnit:createImport(String, IJavaElement, int, IProgressMonitor)
61635=ICompilationUnit:findWorkingCopy(WorkingCopyOwner)
61636=ICompilationUnit:applyTextEdit(TextEdit, IProgressMonitor)
61637=ICompilationUnit:commitWorkingCopy(boolean, IProgressMonitor)
61638=ICompilationUnit:createType(String, IJavaElement, boolean, IProgressMonitor)
61639=ICompilationUnit:createPackageDeclaration(String, IProgressMonitor)
61640=ICompilationUnit:getTypes()
61641=ICompilationUnit:getImport(String)
61642=ICompilationUnit:becomeWorkingCopy(IProgressMonitor)
61643=ICompilationUnit:getAllTypes()
61644=ICompilationUnit:getOwner()
61645=ICompilationUnit:getPackageDeclarations()
61646=ICompilationUnit:isWorkingCopy()
61647=ICompilationUnit:becomeWorkingCopy(IProblemRequestor, IProgressMonitor)
61648=ICompilationUnit:reconcile(int, boolean, WorkingCopyOwner, IProgressMonitor)
61649=ICompilationUnit:reconcile(int, boolean, boolean, WorkingCopyOwner, IProgressMonitor)
61650=ICompilationUnit:findElements(IJavaElement)
61651=ICompilationUnit:getImports()
61652=ICompilationUnit:reconcile(int, int, WorkingCopyOwner, IProgressMonitor)
61653=ICompilationUnit:createImport(String, IJavaElement, IProgressMonitor)
61654=ICompilationUnit:getWorkingCopy(WorkingCopyOwner, IProblemRequestor, IProgressMonitor)
61655=ICompilationUnit:discardWorkingCopy()
61656=DecodeCodeFormatterPreferences:getEntries()
61657=DecodeCodeFormatterPreferences:DecodeCodeFormatterPreferences(String)
61658=DecodeCodeFormatterPreferences:endElement(String, String, String)
61659=DecodeCodeFormatterPreferences:decodeCodeFormatterOptions(String)
61660=DecodeCodeFormatterPreferences:decodeCodeFormatterOptions(String, String, String)
61661=DecodeCodeFormatterPreferences:decodeCodeFormatterOptions(String, String)
61662=DecodeCodeFormatterPreferences:startElement(String, String, String, Attributes)
61663=GeneratedFileManager:projectDeleted()
61664=GeneratedFileManager:containsWorkingCopyMapEntriesForParent(IFile)
61665=GeneratedFileManager:addGeneratedFileDependency(Collection<IFile>, IFile)
61666=GeneratedFileManager:computeNewPackageFolders(String, IFolder)
61667=GeneratedFileManager:computeObsoleteReconcileTypes(IFile, Set<IFile>, CompilationUnitHelper, List<ICompilationUnit>, List<ICompilationUnit>)
61668=GeneratedFileManager:GeneratedPackageFragmentRoot:get()
61669=GeneratedFileManager:removeFileFromReconcileMaps(IFile)
61670=GeneratedFileManager:generateFileDuringBuild(Collection<IFile>, String, String, boolean, IProgressMonitor)
61671=GeneratedFileManager:compilationStarted()
61672=GeneratedFileManager:getIFileForTypeName(String)
61673=GeneratedFileManager:generateFileDuringReconcile(ICompilationUnit, String, String)
61674=GeneratedFileManager:GeneratedPackageFragmentRoot:set()
61675=GeneratedFileManager:isParentFile(IFile)
61676=GeneratedFileManager:deletePhysicalFile(IFile)
61677=GeneratedFileManager:checkIntegrity()
61678=GeneratedFileManager:logExtraFiles(String, Iterable<IFile>)
61679=GeneratedFileManager:projectCleaned()
61680=GeneratedFileManager:getGeneratedFilesForParent(IFile)
61681=GeneratedFileManager:computeObsoleteFiles(IFile, Set<IFile>, List<ICompilationUnit>, Set<IFile>)
61682=GeneratedFileManager:logExtraFilePairs(String, Map<IFile, IFile>)
61683=GeneratedFileManager:isGeneratedFile(IFile)
61684=GeneratedFileManager:saveCompilationUnit(IPackageFragment, String, String, IProgressMonitor)
61685=GeneratedFileManager:GeneratedFileManager(AptProject, GeneratedSourceFolderManager)
61686=GeneratedFileManager:computeProjectClosed(boolean)
61687=GeneratedFileManager:deleteObsoleteFilesAfterBuild(IFile, Set<IFile>)
61688=GeneratedFileManager:deleteObsoleteTypesAfterReconcile(ICompilationUnit, Set<IFile>)
61689=GeneratedFileManager:addBuiltFileToMaps(Collection<IFile>, IFile, boolean)
61690=GeneratedFileManager:computeObsoleteHiddenTypes(IFile, Set<IFile>)
61691=GeneratedFileManager:getWorkingCopyForReconcile(IFile, String, CompilationUnitHelper)
61692=GeneratedFileManager:getTypeNameForDerivedFile(IFile)
61693=GeneratedFileManager:hasNoOtherReconcileParents(IFile, IFile)
61694=GeneratedFileManager:writeState()
61695=GeneratedFileManager:projectClosed()
61696=GeneratedFileManager:fileDeleted(IFile)
61697=GeneratedFileManager:compareFileContents(String, IFile)
61698=GeneratedFileManager:computeClean()
61699=GeneratedFileManager:parseTypeName(String)
61700=GeneratedFileManager:workingCopyDiscarded(ICompilationUnit)
61701=GeneratedFileManager:removeFileFromBuildMaps(IFile)
61702=GeneratedFileManager:reconcileStarted()
61703=A:thisIsAMethodWithAVeryLongName(long, int, String, Object)
61704=LocalTypeBinding:updateInnerEmulationDependents()
61705=LocalTypeBinding:setAsMemberType()
61706=LocalTypeBinding:shortReadableName()
61707=LocalTypeBinding:anonymousOriginalSuperType()
61708=LocalTypeBinding:checkRedundantNullnessDefaultRecurse(ASTNode, Annotation[], long, boolean)
61709=LocalTypeBinding:genericTypeSignature()
61710=LocalTypeBinding:clone(TypeBinding)
61711=LocalTypeBinding:constantPoolName()
61712=LocalTypeBinding:hashCode()
61713=LocalTypeBinding:computeUniqueKey(boolean)
61714=LocalTypeBinding:LocalTypeBinding(LocalTypeBinding)
61715=LocalTypeBinding:enclosingMethod()
61716=LocalTypeBinding:readableName()
61717=LocalTypeBinding:sourceName()
61718=LocalTypeBinding:setConstantPoolName(char[])
61719=LocalTypeBinding:signature()
61720=LocalTypeBinding:addInnerEmulationDependent(BlockScope, boolean)
61721=LocalTypeBinding:toString()
61722=LocalTypeBinding:LocalTypeBinding(ClassScope, SourceTypeBinding, CaseStatement)
61723=A:length()
61724=QualifiedThisReference:analyseCode(BlockScope, FlowContext, FlowInfo, boolean)
61725=QualifiedThisReference:analyseCode(BlockScope, FlowContext, FlowInfo)
61726=QualifiedThisReference:traverse(ASTVisitor, BlockScope)
61727=QualifiedThisReference:QualifiedThisReference(TypeReference, int, int)
61728=QualifiedThisReference:generateCode(BlockScope, CodeStream, boolean)
61729=QualifiedThisReference:traverse(ASTVisitor, ClassScope)
61730=QualifiedThisReference:resolveType(BlockScope)
61731=QualifiedThisReference:printExpression(int, StringBuffer)
61732=QualifiedThisReference:findCompatibleEnclosing(ReferenceBinding, TypeBinding, BlockScope)
61733=firstClass:firstClass()
61734=SynchronizedStatement:isSubRoutineEscaping()
61735=SynchronizedStatement:generateCode(BlockScope, CodeStream)
61736=SynchronizedStatement:traverse(ASTVisitor, BlockScope)
61737=SynchronizedStatement:SynchronizedStatement(Expression, Block, int, int)
61738=SynchronizedStatement:resolve(BlockScope)
61739=SynchronizedStatement:printStatement(int, StringBuffer)
61740=SynchronizedStatement:generateSubRoutineInvocation(BlockScope, CodeStream, Object, int, LocalVariableBinding)
61741=SynchronizedStatement:doesNotCompleteNormally()
61742=SynchronizedStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
61743=SynchronizedStatement:completesByContinue()
61744=SelectionTest2:SpecialSelectionParser:doNPEInParser()
61745=SelectionTest2:testBug30946()
61746=SelectionTest2:SpecialSelectionParser:SpecialSelectionParser(ProblemReporter)
61747=SelectionTest2:checkMethodParse(SelectionParser, char[], int, int, String, String, String, String, String)
61748=SelectionTest2:SelectionTest2(String)
61749=SelectionTest2:createParser()
61750=Test:foo()
61751=X:foo()
61752=SecondaryTypesPerformanceTest:createClasspathStrings()
61753=SecondaryTypesPerformanceTest:suite()
61754=SecondaryTypesPerformanceTest:tearDown()
61755=SecondaryTypesPerformanceTest:setUp()
61756=SecondaryTypesPerformanceTest:writeFile(File, String)
61757=SecondaryTypesPerformanceTest:test01()
61758=SecondaryTypesPerformanceTest:writeDummySourceClasses(File, String)
61759=SecondaryTypesPerformanceTest:createCompilerOptions()
61760=SimpleSetOfCharArray:add(char[])
61761=SimpleSetOfCharArray:clone()
61762=SimpleSetOfCharArray:remove(char[])
61763=SimpleSetOfCharArray:asArray(Object[])
61764=SimpleSetOfCharArray:toString()
61765=SimpleSetOfCharArray:includes(char[])
61766=SimpleSetOfCharArray:SimpleSetOfCharArray()
61767=SimpleSetOfCharArray:rehash()
61768=SimpleSetOfCharArray:clear()
61769=SimpleSetOfCharArray:get(char[])
61770=SimpleSetOfCharArray:SimpleSetOfCharArray(int)
61771=A:foo()
61772=X:foo(T)
61773=X:bar(Q)
61774=MessagerProc:printErrorsOnElements()
61775=MessagerProc:reportSuccess()
61776=MessagerProc:reportError(String)
61777=MessagerProc:init(ProcessingEnvironment)
61778=MessagerProc:printVariableElements(TypeElement)
61779=MessagerProc:collectElements()
61780=MessagerProc:process(Set<? extends TypeElement>, RoundEnvironment)
61781=ProblemBinding:readableName()
61782=ProblemBinding:problemId()
61783=ProblemBinding:ProblemBinding(char[], ReferenceBinding, int)
61784=ProblemBinding:kind()
61785=ProblemBinding:ProblemBinding(char[][], int)
61786=ProblemBinding:ProblemBinding(char[][], ReferenceBinding, int)
61787=ProblemBinding:ProblemBinding(char[], int)
61788=LambdaExpressionSyntaxTest:initialize(CompilerTestSetup)
61789=LambdaExpressionSyntaxTest:test0011()
61790=LambdaExpressionSyntaxTest:test0013()
61791=LambdaExpressionSyntaxTest:test385132()
61792=LambdaExpressionSyntaxTest:test00010()
61793=LambdaExpressionSyntaxTest:test0015()
61794=LambdaExpressionSyntaxTest:test0002()
61795=LambdaExpressionSyntaxTest:test0005()
61796=LambdaExpressionSyntaxTest:test0016()
61797=LambdaExpressionSyntaxTest:test0007()
61798=LambdaExpressionSyntaxTest:test0018()
61799=LambdaExpressionSyntaxTest:test0009()
61800=LambdaExpressionSyntaxTest:LambdaExpressionSyntaxTest(String)
61801=LambdaExpressionSyntaxTest:test0001()
61802=LambdaExpressionSyntaxTest:test0012()
61803=LambdaExpressionSyntaxTest:test0003()
61804=LambdaExpressionSyntaxTest:test0014()
61805=LambdaExpressionSyntaxTest:test0017()
61806=LambdaExpressionSyntaxTest:test0004()
61807=LambdaExpressionSyntaxTest:test0008()
61808=LambdaExpressionSyntaxTest:suite()
61809=LambdaExpressionSyntaxTest:test0019()
61810=LambdaExpressionSyntaxTest:test0006()
61811=LambdaExpressionSyntaxTest:testClass()
61812=LambdaExpressionSyntaxTest:testNestedLambda01()
61813=MarkerAnnotation:traverse(ASTVisitor, CompilationUnitScope)
61814=MarkerAnnotation:traverse(ASTVisitor, ClassScope)
61815=MarkerAnnotation:traverse(ASTVisitor, BlockScope)
61816=MarkerAnnotation:MarkerAnnotation(char[], long, int)
61817=MarkerAnnotation:MarkerAnnotation(char[][], long[], int)
61818=X06:runTest()
61819=X06:runBare()
61820=E:foo()
61821=CC47209:CC47209(String)
61822=CC47209:m47209(int)
61823=A:testMethod()
61824=X01:foo()
61825=X:foo()
61826=Test:foo()
61827=A:foo()
61828=ExternalAnnotations17Test:getAnnotationBundles()
61829=ExternalAnnotations17Test:test1FullBuild()
61830=ExternalAnnotations17Test:testAnnotateFieldOfNested()
61831=ExternalAnnotations17Test:test1FullBuildWithVariable()
61832=ExternalAnnotations17Test:suite()
61833=ExternalAnnotations17Test:testAnnotateMethodReturn()
61834=ExternalAnnotations17Test:testLibsWithFields()
61835=ExternalAnnotations17Test:testBogusAnnotationFile1()
61836=ExternalAnnotations17Test:ExternalAnnotations17Test(String)
61837=ExternalAnnotations17Test:test1Full_ProjectRoot()
61838=ExternalAnnotations17Test:testAnnotateFieldWithParameterizedType()
61839=ExternalAnnotations17Test:test1Reconcile()
61840=ExternalAnnotations17Test:getSourceWorkspacePath()
61841=ExternalAnnotations17Test:testBogusAnnotationFile2()
61842=SimpleTestCollector:SimpleTestCollector()
61843=SimpleTestCollector:isTestClass(String)
61844=LineBreaksPreparator:visit(NormalAnnotation)
61845=LineBreaksPreparator:handleBracePosition(Token, int, String)
61846=LineBreaksPreparator:visit(TypeDeclaration)
61847=LineBreaksPreparator:visit(AnnotationTypeMemberDeclaration)
61848=LineBreaksPreparator:handleBodyDeclarations(List<BodyDeclaration>)
61849=LineBreaksPreparator:handleLoopBody(Statement)
61850=LineBreaksPreparator:visit(FieldDeclaration)
61851=LineBreaksPreparator:preVisit2(ASTNode)
61852=LineBreaksPreparator:visit(SuperMethodInvocation)
61853=LineBreaksPreparator:visit(DoStatement)
61854=LineBreaksPreparator:visit(PackageDeclaration)
61855=LineBreaksPreparator:visit(EnumConstantDeclaration)
61856=LineBreaksPreparator:visit(ClassInstanceCreation)
61857=LineBreaksPreparator:visit(MarkerAnnotation)
61858=LineBreaksPreparator:breakLineBefore(ASTNode)
61859=LineBreaksPreparator:visit(WhileStatement)
61860=LineBreaksPreparator:adjustEmptyLineAfter(int, int)
61861=LineBreaksPreparator:handleAnnotation(Annotation)
61862=LineBreaksPreparator:sameChunk(BodyDeclaration, BodyDeclaration)
61863=LineBreaksPreparator:visit(CatchClause)
61864=LineBreaksPreparator:putBlankLinesBefore(ASTNode, int)
61865=LineBreaksPreparator:visit(ImportDeclaration)
61866=LineBreaksPreparator:visit(ArrayInitializer)
61867=LineBreaksPreparator:visit(ForStatement)
61868=LineBreaksPreparator:LineBreaksPreparator(TokenManager, DefaultCodeFormatterOptions)
61869=LineBreaksPreparator:visit(LabeledStatement)
61870=LineBreaksPreparator:visit(MethodInvocation)
61871=LineBreaksPreparator:finishUp()
61872=LineBreaksPreparator:visit(CompilationUnit)
61873=LineBreaksPreparator:visit(SuperConstructorInvocation)
61874=LineBreaksPreparator:visit(VariableDeclarationStatement)
61875=LineBreaksPreparator:indent(ASTNode)
61876=LineBreaksPreparator:visit(AnnotationTypeDeclaration)
61877=LineBreaksPreparator:visit(AnonymousClassDeclaration)
61878=LineBreaksPreparator:visit(ConstructorInvocation)
61879=LineBreaksPreparator:visit(SingleVariableDeclaration)
61880=LineBreaksPreparator:visit(SingleMemberAnnotation)
61881=LineBreaksPreparator:visit(SwitchStatement)
61882=LineBreaksPreparator:visit(Block)
61883=LineBreaksPreparator:visit(EnumDeclaration)
61884=LineBreaksPreparator:visit(LambdaExpression)
61885=LineBreaksPreparator:handleBracedCode(ASTNode, ASTNode, String, boolean, boolean)
61886=LineBreaksPreparator:visit(VariableDeclarationExpression)
61887=LineBreaksPreparator:handleParenthesesPositions(int, int, String)
61888=LineBreaksPreparator:visit(EnhancedForStatement)
61889=LineBreaksPreparator:visit(MethodDeclaration)
61890=LineBreaksPreparator:visit(IfStatement)
61891=LineBreaksPreparator:visit(Modifier)
61892=LineBreaksPreparator:visit(TryStatement)
61893=Javadoc:setComment(String)
61894=Javadoc:getNodeType0()
61895=Javadoc:tags()
61896=Javadoc:accept0(ASTVisitor)
61897=Javadoc:clone0(AST)
61898=Javadoc:propertyDescriptors(int)
61899=Javadoc:memSize()
61900=Javadoc:internalGetChildListProperty(ChildListPropertyDescriptor)
61901=Javadoc:Javadoc(AST)
61902=Javadoc:getComment()
61903=Javadoc:treeSize()
61904=Javadoc:subtreeMatch0(ASTMatcher, Object)
61905=Javadoc:internalGetSetObjectProperty(SimplePropertyDescriptor, boolean, Object)
61906=Javadoc:internalStructuralPropertiesForType(int)
61907=A:foo()
61908=CodeFormatter:setOptions(Map<String, String>)
61909=CodeFormatter:createIndentationString(int)
61910=CodeFormatter:format(int, String, IRegion[], int, String)
61911=CodeFormatter:format(int, String, int, int, int, String)
61912=A2:A2()
61913=A3:A3()
61914=TestCaseClassLoader:isJar(String)
61915=TestCaseClassLoader:TestCaseClassLoader(String)
61916=TestCaseClassLoader:getResourceAsStream(String)
61917=TestCaseClassLoader:loadClass(String, boolean)
61918=TestCaseClassLoader:getResource(String)
61919=TestCaseClassLoader:readExcludedPackages()
61920=TestCaseClassLoader:loadFileData(String, String)
61921=TestCaseClassLoader:isExcluded(String)
61922=TestCaseClassLoader:lookupClassData(String)
61923=TestCaseClassLoader:loadJarData(String, String)
61924=TestCaseClassLoader:scanPath(String)
61925=TestCaseClassLoader:TestCaseClassLoader()
61926=TestCaseClassLoader:getClassData(File)
61927=A:someMethod()
61928=Test:main(String[])
61929=X:bar(int)
61930=A:foo()
61931=X:run(String)
61932=DebugEvaluationSetup:DebugEvaluationSetup(long)
61933=DebugEvaluationSetup:setUp()
61934=Bug132665:foo3()
61935=Bug132665:foo1()
61936=Bug132665:foo2()
61937=ASTConverterTestAST3_2:test0501()
61938=ASTConverterTestAST3_2:test0645()
61939=ASTConverterTestAST3_2:test0438()
61940=ASTConverterTestAST3_2:test0610()
61941=ASTConverterTestAST3_2:test0536()
61942=ASTConverterTestAST3_2:test0491()
61943=ASTConverterTestAST3_2:test0656()
61944=ASTConverterTestAST3_2:test0427()
61945=ASTConverterTestAST3_2:test0621()
61946=ASTConverterTestAST3_2:test0525()
61947=ASTConverterTestAST3_2:test0480()
61948=ASTConverterTestAST3_2:test0667()
61949=ASTConverterTestAST3_2:test0416()
61950=ASTConverterTestAST3_2:test0632()
61951=ASTConverterTestAST3_2:test0514()
61952=ASTConverterTestAST3_2:test0678()
61953=ASTConverterTestAST3_2:componentType(ArrayType)
61954=ASTConverterTestAST3_2:test0405()
61955=ASTConverterTestAST3_2:test0643()
61956=ASTConverterTestAST3_2:test0549()
61957=ASTConverterTestAST3_2:test0689()
61958=ASTConverterTestAST3_2:test0654()
61959=ASTConverterTestAST3_2:test0493()
61960=ASTConverterTestAST3_2:test0591()
61961=ASTConverterTestAST3_2:test0429()
61962=ASTConverterTestAST3_2:test0665()
61963=ASTConverterTestAST3_2:test0527()
61964=ASTConverterTestAST3_2:test0482()
61965=ASTConverterTestAST3_2:test0580()
61966=ASTConverterTestAST3_2:test0418()
61967=ASTConverterTestAST3_2:test0676()
61968=ASTConverterTestAST3_2:test0630()
61969=ASTConverterTestAST3_2:test0516()
61970=ASTConverterTestAST3_2:test0407()
61971=ASTConverterTestAST3_2:test0687()
61972=ASTConverterTestAST3_2:test0641()
61973=ASTConverterTestAST3_2:test0471()
61974=ASTConverterTestAST3_2:test0505()
61975=ASTConverterTestAST3_2:test0460()
61976=ASTConverterTestAST3_2:test0537a()
61977=ASTConverterTestAST3_2:test0593()
61978=ASTConverterTestAST3_2:test0495()
61979=ASTConverterTestAST3_2:test0698a()
61980=ASTConverterTestAST3_2:test0663()
61981=ASTConverterTestAST3_2:test0529()
61982=ASTConverterTestAST3_2:test0582()
61983=ASTConverterTestAST3_2:test0538b()
61984=ASTConverterTestAST3_2:test0484()
61985=ASTConverterTestAST3_2:test0674()
61986=ASTConverterTestAST3_2:test0502b()
61987=ASTConverterTestAST3_2:test0518()
61988=ASTConverterTestAST3_2:test0708()
61989=ASTConverterTestAST3_2:test0571()
61990=ASTConverterTestAST3_2:test0409()
61991=ASTConverterTestAST3_2:test0685()
61992=ASTConverterTestAST3_2:test0473()
61993=ASTConverterTestAST3_2:test0503c()
61994=ASTConverterTestAST3_2:test0507()
61995=ASTConverterTestAST3_2:test0719()
61996=ASTConverterTestAST3_2:test0560()
61997=ASTConverterTestAST3_2:test0650()
61998=ASTConverterTestAST3_2:test0696()
61999=ASTConverterTestAST3_2:test0462()
62000=ASTConverterTestAST3_2:test0595()
62001=ASTConverterTestAST3_2:test0537c()
62002=ASTConverterTestAST3_2:test0497()
62003=ASTConverterTestAST3_2:test0661()
62004=ASTConverterTestAST3_2:test0451()
62005=ASTConverterTestAST3_2:test0584()
62006=ASTConverterTestAST3_2:test0538d()
62007=ASTConverterTestAST3_2:test0486()
62008=ASTConverterTestAST3_2:test0608()
62009=ASTConverterTestAST3_2:test0706()
62010=ASTConverterTestAST3_2:test0672()
62011=ASTConverterTestAST3_2:test0440()
62012=ASTConverterTestAST3_2:test0573()
62013=ASTConverterTestAST3_2:test0619()
62014=ASTConverterTestAST3_2:test0717()
62015=ASTConverterTestAST3_2:setUpSuite()
62016=ASTConverterTestAST3_2:test0475()
62017=ASTConverterTestAST3_2:test0683()
62018=ASTConverterTestAST3_2:test0503a()
62019=ASTConverterTestAST3_2:test0509()
62020=ASTConverterTestAST3_2:test0562()
62021=ASTConverterTestAST3_2:test0464()
62022=ASTConverterTestAST3_2:test0694()
62023=ASTConverterTestAST3_2:test0597()
62024=ASTConverterTestAST3_2:test0551()
62025=ASTConverterTestAST3_2:test0499()
62026=ASTConverterTestAST3_2:test0453()
62027=ASTConverterTestAST3_2:test0586()
62028=ASTConverterTestAST3_2:test0538f()
62029=ASTConverterTestAST3_2:test0540()
62030=ASTConverterTestAST3_2:test0488()
62031=ASTConverterTestAST3_2:test0606()
62032=ASTConverterTestAST3_2:test0502f()
62033=ASTConverterTestAST3_2:test0704()
62034=ASTConverterTestAST3_2:test0670()
62035=ASTConverterTestAST3_2:test0442()
62036=ASTConverterTestAST3_2:test0575()
62037=ASTConverterTestAST3_2:test0617()
62038=ASTConverterTestAST3_2:test0503g()
62039=ASTConverterTestAST3_2:test0477()
62040=ASTConverterTestAST3_2:test0715()
62041=ASTConverterTestAST3_2:test0681()
62042=ASTConverterTestAST3_2:test0431()
62043=ASTConverterTestAST3_2:test0564()
62044=ASTConverterTestAST3_2:test0628()
62045=ASTConverterTestAST3_2:test0466()
62046=ASTConverterTestAST3_2:test0692()
62047=ASTConverterTestAST3_2:test0420()
62048=ASTConverterTestAST3_2:test0553()
62049=ASTConverterTestAST3_2:test0599()
62050=ASTConverterTestAST3_2:test0639()
62051=ASTConverterTestAST3_2:test0455()
62052=ASTConverterTestAST3_2:test0542()
62053=ASTConverterTestAST3_2:test0588()
62054=ASTConverterTestAST3_2:test0538h()
62055=ASTConverterTestAST3_2:test0604()
62056=ASTConverterTestAST3_2:test0444()
62057=ASTConverterTestAST3_2:test0702()
62058=ASTConverterTestAST3_2:test0502d()
62059=ASTConverterTestAST3_2:test0531()
62060=ASTConverterTestAST3_2:test0615()
62061=ASTConverterTestAST3_2:test0433()
62062=ASTConverterTestAST3_2:test0479()
62063=ASTConverterTestAST3_2:test0713()
62064=ASTConverterTestAST3_2:test0503e()
62065=ASTConverterTestAST3_2:test0566()
62066=ASTConverterTestAST3_2:test0520()
62067=ASTConverterTestAST3_2:test0626()
62068=ASTConverterTestAST3_2:_test0679()
62069=ASTConverterTestAST3_2:test0422()
62070=ASTConverterTestAST3_2:test0468()
62071=ASTConverterTestAST3_2:test0690()
62072=ASTConverterTestAST3_2:test0555()
62073=ASTConverterTestAST3_2:test0637()
62074=ASTConverterTestAST3_2:test0411()
62075=ASTConverterTestAST3_2:test0457()
62076=ASTConverterTestAST3_2:test0544()
62077=ASTConverterTestAST3_2:test0602()
62078=ASTConverterTestAST3_2:test0648()
62079=ASTConverterTestAST3_2:test0446()
62080=ASTConverterTestAST3_2:test0502j()
62081=ASTConverterTestAST3_2:test0700()
62082=ASTConverterTestAST3_2:test0579()
62083=ASTConverterTestAST3_2:test0533()
62084=ASTConverterTestAST3_2:test0613()
62085=ASTConverterTestAST3_2:test0659()
62086=ASTConverterTestAST3_2:test0435()
62087=ASTConverterTestAST3_2:test0711()
62088=ASTConverterTestAST3_2:test0568()
62089=ASTConverterTestAST3_2:suite()
62090=ASTConverterTestAST3_2:test0522()
62091=ASTConverterTestAST3_2:test0624()
62092=ASTConverterTestAST3_2:test0459()
62093=ASTConverterTestAST3_2:test0424()
62094=ASTConverterTestAST3_2:test0722()
62095=ASTConverterTestAST3_2:test0557()
62096=ASTConverterTestAST3_2:test0511()
62097=ASTConverterTestAST3_2:test0635()
62098=ASTConverterTestAST3_2:test0448()
62099=ASTConverterTestAST3_2:test0413()
62100=ASTConverterTestAST3_2:test0600()
62101=ASTConverterTestAST3_2:test0546()
62102=ASTConverterTestAST3_2:test0500()
62103=ASTConverterTestAST3_2:test0646()
62104=ASTConverterTestAST3_2:test0437()
62105=ASTConverterTestAST3_2:test0402()
62106=ASTConverterTestAST3_2:test0502h()
62107=ASTConverterTestAST3_2:test0611()
62108=ASTConverterTestAST3_2:test0535()
62109=ASTConverterTestAST3_2:test0490()
62110=ASTConverterTestAST3_2:test0720()
62111=ASTConverterTestAST3_2:test0657()
62112=ASTConverterTestAST3_2:test0426()
62113=ASTConverterTestAST3_2:test0503i()
62114=ASTConverterTestAST3_2:test0622()
62115=ASTConverterTestAST3_2:test0524()
62116=ASTConverterTestAST3_2:test0668()
62117=ASTConverterTestAST3_2:test0415()
62118=ASTConverterTestAST3_2:test0633()
62119=ASTConverterTestAST3_2:_test0652()
62120=ASTConverterTestAST3_2:test0513()
62121=ASTConverterTestAST3_2:test0559()
62122=ASTConverterTestAST3_2:test0404()
62123=ASTConverterTestAST3_2:test0644()
62124=ASTConverterTestAST3_2:test0548()
62125=ASTConverterTestAST3_2:test0667_2()
62126=ASTConverterTestAST3_2:test0439()
62127=ASTConverterTestAST3_2:test0655()
62128=ASTConverterTestAST3_2:test0492()
62129=ASTConverterTestAST3_2:test0590()
62130=ASTConverterTestAST3_2:test0428()
62131=ASTConverterTestAST3_2:test0620()
62132=ASTConverterTestAST3_2:test0666()
62133=ASTConverterTestAST3_2:test0526()
62134=ASTConverterTestAST3_2:test0481()
62135=ASTConverterTestAST3_2:test0538a()
62136=ASTConverterTestAST3_2:test0417()
62137=ASTConverterTestAST3_2:test0677()
62138=ASTConverterTestAST3_2:ASTConverterTestAST3_2(String)
62139=ASTConverterTestAST3_2:test0631()
62140=ASTConverterTestAST3_2:test0515()
62141=ASTConverterTestAST3_2:test0406()
62142=ASTConverterTestAST3_2:test0688()
62143=ASTConverterTestAST3_2:test0642()
62144=ASTConverterTestAST3_2:test0504()
62145=ASTConverterTestAST3_2:test0470()
62146=ASTConverterTestAST3_2:test0699()
62147=ASTConverterTestAST3_2:test0653()
62148=ASTConverterTestAST3_2:test0539()
62149=ASTConverterTestAST3_2:test0666_2()
62150=ASTConverterTestAST3_2:test0494()
62151=ASTConverterTestAST3_2:test0592()
62152=ASTConverterTestAST3_2:test0664()
62153=ASTConverterTestAST3_2:test0528()
62154=ASTConverterTestAST3_2:test0538c()
62155=ASTConverterTestAST3_2:test0419()
62156=ASTConverterTestAST3_2:test0483()
62157=ASTConverterTestAST3_2:test0581()
62158=ASTConverterTestAST3_2:test0675()
62159=ASTConverterTestAST3_2:test0502a()
62160=ASTConverterTestAST3_2:test0517()
62161=ASTConverterTestAST3_2:test0709()
62162=ASTConverterTestAST3_2:test0408()
62163=ASTConverterTestAST3_2:test0570()
62164=ASTConverterTestAST3_2:test0686()
62165=ASTConverterTestAST3_2:test0472()
62166=ASTConverterTestAST3_2:test0503b()
62167=ASTConverterTestAST3_2:test0506()
62168=ASTConverterTestAST3_2:test0651()
62169=ASTConverterTestAST3_2:test0697()
62170=ASTConverterTestAST3_2:test0461()
62171=ASTConverterTestAST3_2:test0594()
62172=ASTConverterTestAST3_2:test0496()
62173=ASTConverterTestAST3_2:test0662()
62174=ASTConverterTestAST3_2:test0450()
62175=ASTConverterTestAST3_2:test0609()
62176=ASTConverterTestAST3_2:test0538e()
62177=ASTConverterTestAST3_2:test0583()
62178=ASTConverterTestAST3_2:test0485()
62179=ASTConverterTestAST3_2:test0673()
62180=ASTConverterTestAST3_2:test0707()
62181=ASTConverterTestAST3_2:test0519()
62182=ASTConverterTestAST3_2:test0572()
62183=ASTConverterTestAST3_2:test0718()
62184=ASTConverterTestAST3_2:test0474()
62185=ASTConverterTestAST3_2:test0684()
62186=ASTConverterTestAST3_2:test0508()
62187=ASTConverterTestAST3_2:test0561()
62188=ASTConverterTestAST3_2:test0463()
62189=ASTConverterTestAST3_2:test0695()
62190=ASTConverterTestAST3_2:test0550()
62191=ASTConverterTestAST3_2:test0596()
62192=ASTConverterTestAST3_2:test0537b()
62193=ASTConverterTestAST3_2:test0698b()
62194=ASTConverterTestAST3_2:test0498()
62195=ASTConverterTestAST3_2:test0660()
62196=ASTConverterTestAST3_2:test0452()
62197=ASTConverterTestAST3_2:test0538g()
62198=ASTConverterTestAST3_2:test0585()
62199=ASTConverterTestAST3_2:test0487()
62200=ASTConverterTestAST3_2:test0607()
62201=ASTConverterTestAST3_2:test0671()
62202=ASTConverterTestAST3_2:test0705()
62203=ASTConverterTestAST3_2:test0441()
62204=ASTConverterTestAST3_2:test0502e()
62205=ASTConverterTestAST3_2:test0574()
62206=ASTConverterTestAST3_2:test0618()
62207=ASTConverterTestAST3_2:test0716()
62208=ASTConverterTestAST3_2:test0476()
62209=ASTConverterTestAST3_2:test0682()
62210=ASTConverterTestAST3_2:test0430()
62211=ASTConverterTestAST3_2:test0503f()
62212=ASTConverterTestAST3_2:test0563()
62213=ASTConverterTestAST3_2:test0629()
62214=ASTConverterTestAST3_2:test0465()
62215=ASTConverterTestAST3_2:test0693()
62216=ASTConverterTestAST3_2:test0598()
62217=ASTConverterTestAST3_2:test0552()
62218=ASTConverterTestAST3_2:test0454()
62219=ASTConverterTestAST3_2:test0587()
62220=ASTConverterTestAST3_2:test0541()
62221=ASTConverterTestAST3_2:test0605()
62222=ASTConverterTestAST3_2:_test0658()
62223=ASTConverterTestAST3_2:test0489()
62224=ASTConverterTestAST3_2:test0443()
62225=ASTConverterTestAST3_2:test0703()
62226=ASTConverterTestAST3_2:test0502c()
62227=ASTConverterTestAST3_2:test0530()
62228=ASTConverterTestAST3_2:test0576()
62229=ASTConverterTestAST3_2:test0616()
62230=ASTConverterTestAST3_2:test0432()
62231=ASTConverterTestAST3_2:test0478()
62232=ASTConverterTestAST3_2:test0714()
62233=ASTConverterTestAST3_2:test0680()
62234=ASTConverterTestAST3_2:test0503d()
62235=ASTConverterTestAST3_2:test0565()
62236=ASTConverterTestAST3_2:test0627()
62237=ASTConverterTestAST3_2:test0421()
62238=ASTConverterTestAST3_2:test0467()
62239=ASTConverterTestAST3_2:test0691()
62240=ASTConverterTestAST3_2:test0554()
62241=ASTConverterTestAST3_2:test0638()
62242=ASTConverterTestAST3_2:test0410()
62243=ASTConverterTestAST3_2:test0456()
62244=ASTConverterTestAST3_2:test0543()
62245=ASTConverterTestAST3_2:test0589()
62246=ASTConverterTestAST3_2:internalThrownExceptions(MethodDeclaration)
62247=ASTConverterTestAST3_2:test0603()
62248=ASTConverterTestAST3_2:test0649()
62249=ASTConverterTestAST3_2:test0445()
62250=ASTConverterTestAST3_2:test0502i()
62251=ASTConverterTestAST3_2:test0701()
62252=ASTConverterTestAST3_2:test0578()
62253=ASTConverterTestAST3_2:test0532()
62254=ASTConverterTestAST3_2:test0614()
62255=ASTConverterTestAST3_2:test0469()
62256=ASTConverterTestAST3_2:test0434()
62257=ASTConverterTestAST3_2:test0712()
62258=ASTConverterTestAST3_2:test0567()
62259=ASTConverterTestAST3_2:test0521()
62260=ASTConverterTestAST3_2:test0625()
62261=ASTConverterTestAST3_2:test0458()
62262=ASTConverterTestAST3_2:test0423()
62263=ASTConverterTestAST3_2:test0723()
62264=ASTConverterTestAST3_2:test0556()
62265=ASTConverterTestAST3_2:test0510()
62266=ASTConverterTestAST3_2:test0636()
62267=ASTConverterTestAST3_2:test0447()
62268=ASTConverterTestAST3_2:test0412()
62269=ASTConverterTestAST3_2:test0545()
62270=ASTConverterTestAST3_2:test0601()
62271=ASTConverterTestAST3_2:test0647()
62272=ASTConverterTestAST3_2:test0710()
62273=ASTConverterTestAST3_2:test0436()
62274=ASTConverterTestAST3_2:test0502g()
62275=ASTConverterTestAST3_2:test0401()
62276=ASTConverterTestAST3_2:test0534()
62277=ASTConverterTestAST3_2:test0721()
62278=ASTConverterTestAST3_2:test0612()
62279=ASTConverterTestAST3_2:test0425()
62280=ASTConverterTestAST3_2:test0503h()
62281=ASTConverterTestAST3_2:test0523()
62282=ASTConverterTestAST3_2:test0623()
62283=ASTConverterTestAST3_2:test0669()
62284=ASTConverterTestAST3_2:test0414()
62285=ASTConverterTestAST3_2:test0558()
62286=ASTConverterTestAST3_2:test0512()
62287=ASTConverterTestAST3_2:test0634()
62288=ASTConverterTestAST3_2:test0403()
62289=ASTConverterTestAST3_2:test0449()
62290=ASTConverterTestAST3_2:test0547()
62291=JavaModelInfo:getNonJavaResources()
62292=JavaModelInfo:computeNonJavaResources()
62293=SerialVersionUIDTests:test013()
62294=SerialVersionUIDTests:test002()
62295=SerialVersionUIDTests:test011()
62296=SerialVersionUIDTests:suite()
62297=SerialVersionUIDTests:test009()
62298=SerialVersionUIDTests:test007()
62299=SerialVersionUIDTests:test016()
62300=SerialVersionUIDTests:test005()
62301=SerialVersionUIDTests:test014()
62302=SerialVersionUIDTests:test003()
62303=SerialVersionUIDTests:test012()
62304=SerialVersionUIDTests:test001()
62305=SerialVersionUIDTests:test010()
62306=SerialVersionUIDTests:SerialVersionUIDTests(String)
62307=SerialVersionUIDTests:test008()
62308=SerialVersionUIDTests:getCompilerOptions()
62309=SerialVersionUIDTests:test006()
62310=SerialVersionUIDTests:test015()
62311=SerialVersionUIDTests:test004()
62312=SerialVersionUIDTests:testClass()
62313=ISourceRange:getLength()
62314=ISourceRange:getOffset()
62315=TestD1:foo()
62316=TestD1:bar()
62317=X14c:foo()
62318=Main:getLibraryAccess()
62319=Main:Logger:logExtraProblem(CategorizedProblem, int, int)
62320=Main:Logger:logNumberOfClassFilesGenerated(int)
62321=Main:getBatchRequestor()
62322=Main:Logger:logWarning(String)
62323=Main:Logger:printOut(char)
62324=Main:Logger:startLoggingProblems(int, int)
62325=Main:Logger:endLoggingTasks()
62326=Main:compile(String, PrintWriter, PrintWriter)
62327=Main:bind(String, String, String)
62328=Main:handleExtdirs(ArrayList)
62329=Main:handleBootclasspath(ArrayList, String)
62330=Main:Logger:logPendingError(String)
62331=Main:Logger:buildFileName(String, String)
62332=Main:Logger:logClasspath(FileSystem.Classpath[])
62333=Main:Logger:setLog(String)
62334=Main:Logger:printErr(String)
62335=Main:Logger:logAverage()
62336=Main:Logger:printlnOut(String)
62337=Main:Logger:extractContext(CategorizedProblem, char[])
62338=Main:Logger:endLoggingProblems()
62339=Main:relocalize()
62340=Main:extractDestinationPathFromSourceFile(CompilationResult)
62341=Main:handleErrorToken(String, boolean)
62342=Main:Main(PrintWriter, PrintWriter, boolean, Map)
62343=Main:Logger:getFieldName(int)
62344=Main:Logger:printNewLine()
62345=Main:printUsage()
62346=Main:initializeWarnings(String)
62347=Main:Logger:logNoClassFileCreated(String, String, IOException)
62348=Main:compile(String[], PrintWriter, PrintWriter, CompilationProgress)
62349=Main:printUsage(String)
62350=Main:Logger:startLoggingSources()
62351=Main:Logger:endTag(String)
62352=Main:Logger:logXmlTask(CategorizedProblem, char[])
62353=Main:bind(String, String)
62354=Main:processClassNames(LookupEnvironment)
62355=Main:Logger:logXmlExtraProblem(CategorizedProblem, int, int)
62356=Main:addNewEntry(ArrayList, String, ArrayList, String, String, boolean, boolean)
62357=Main:handleClasspath(ArrayList, String)
62358=Main:Logger:logException(Exception)
62359=Main:decodeIgnoreOptionalProblemsFromFolders(String)
62360=Main:processPathEntries(int, ArrayList, String, String, boolean, boolean)
62361=Main:Logger:logTiming(CompilerStats)
62362=Main:Logger:getProblemOptionKey(int)
62363=Main:Logger:startLoggingExtraProblems(int)
62364=Main:processPaths(String[], int, String, ArrayList)
62365=Main:Logger:logCommandLineArguments(String[])
62366=Main:Logger:logProgress()
62367=Main:Logger:logUnavaibleAPT(String)
62368=Main:Logger:printStats()
62369=Main:Logger:compiling()
62370=Main:Logger:logProblems(CategorizedProblem[], char[], Main)
62371=Main:addExtraProblems(CategorizedProblem)
62372=Main:Logger:setEmacs()
62373=Main:Logger:startLoggingTasks(int)
62374=Main:disableAll(int)
62375=Main:Logger:logProblem(CategorizedProblem, int, int, char[])
62376=Main:getProblemFactory()
62377=Main:main(String[])
62378=Main:Main(PrintWriter, PrintWriter, boolean, Map<String, String>, CompilationProgress)
62379=Main:setPaths(ArrayList, String, ArrayList, ArrayList, ArrayList, ArrayList, String)
62380=Main:setLocale(Locale)
62381=Main:Logger:endLoggingSource()
62382=Main:Logger:logProblemsSummary(int, int, int, int)
62383=Main:getHandlingPolicy()
62384=Main:getJavaHome()
62385=Main:Main(PrintWriter, PrintWriter, boolean)
62386=Main:checkVMVersion(long)
62387=Main:Logger:logRepetition(int, int)
62388=Main:ResourceBundleFactory:getBundle(Locale)
62389=Main:Logger:logWrongJDK()
62390=Main:isParentOf(char[], char[])
62391=Main:Logger:logUsage(String)
62392=Main:compile(String)
62393=Main:outputClassFiles(CompilationResult)
62394=Main:Logger:logXmlProblem(CategorizedProblem, char[])
62395=Main:Logger:logVersion(boolean)
62396=Main:bind(String)
62397=Main:handleWarningToken(String, boolean)
62398=Main:relocalize(Locale)
62399=Main:enableAll(int)
62400=Main:initializeAnnotationProcessorManager()
62401=Main:addPendingErrors(String)
62402=Main:handleErrorOrWarningToken(String, boolean, int)
62403=Main:Logger:printlnErr()
62404=Main:Logger:loggingExtraProblems(Main)
62405=Main:setSeverity(String, int, boolean)
62406=Main:Logger:Logger(Main, PrintWriter, PrintWriter)
62407=Main:handleEndorseddirs(ArrayList)
62408=Main:Logger:printlnErr(String)
62409=Main:Logger:endLoggingSources()
62410=Main:Logger:logClassFile(boolean, String, String)
62411=Main:Logger:close()
62412=Main:Logger:endLoggingExtraProblems()
62413=Main:shouldIgnoreOptionalProblems(char[][], char[])
62414=Main:tokenize(String)
62415=Main:initialize(PrintWriter, PrintWriter, boolean, Map)
62416=Main:initialize(PrintWriter, PrintWriter, boolean)
62417=Main:compile(String[])
62418=Main:Logger:logIncorrectVMVersionForAnnotationProcessing()
62419=Main:getAllEncodings(Set)
62420=Main:Logger:logOptions(Map<String, String>)
62421=Main:processPaths(String[], int, String, String[])
62422=Main:initialize(PrintWriter, PrintWriter, boolean, Map<String, String>, CompilationProgress)
62423=Main:Logger:flush()
62424=Main:Logger:errorReportSource(CategorizedProblem, char[], int)
62425=Main:validateOptions(boolean)
62426=Main:Logger:startLoggingSource(CompilationResult)
62427=Main:setDestinationPath(String)
62428=Main:configure(String[])
62429=Main:bind(String, String[])
62430=Main:performCompilation()
62431=Main:loggingExtraProblems()
62432=Main:getLibrariesFiles(File[])
62433=Main:Logger:printTag(String, HashMap, boolean, boolean)
62434=Main:getCompilationUnits()
62435=ResolveTests:testWorkingCopyOrder1()
62436=ResolveTests:testLocalMemberTypeDeclaration()
62437=ResolveTests:testDuplicateMethodDeclaration11()
62438=ResolveTests:testArgumentName2()
62439=ResolveTests:ResolveTests(String)
62440=ResolveTests:testDuplicateLocals3()
62441=ResolveTests:testLocalClass2()
62442=ResolveTests:testTypeInComment()
62443=ResolveTests:testInvalidMethod1()
62444=ResolveTests:testLocalName1()
62445=ResolveTests:testQualifiedName1()
62446=ResolveTests:testMessageSendOnBaseType()
62447=ResolveTests:testMethodDeclarationInAnonymous2()
62448=ResolveTests:testDuplicateMethodDeclaration3()
62449=ResolveTests:testCatchArgumentType3()
62450=ResolveTests:tearDownSuite()
62451=ResolveTests:testDuplicateLocals5()
62452=ResolveTests:testLocalClass4()
62453=ResolveTests:testQualifiedName3()
62454=ResolveTests:testUnicode()
62455=ResolveTests:testDuplicateMethodDeclaration5()
62456=ResolveTests:testLocalVariable()
62457=ResolveTests:testMethodDeclarationInAnonymous4()
62458=ResolveTests:testCatchArgumentType1()
62459=ResolveTests:testMemberTypeDeclaration2()
62460=ResolveTests:setUp()
62461=ResolveTests:testLocalVarIsStructureKnown()
62462=ResolveTests:testLocalField()
62463=ResolveTests:testLocalName5()
62464=ResolveTests:testQualifiedName5()
62465=ResolveTests:testTypeInsideConstructor()
62466=ResolveTests:testFieldDeclaration()
62467=ResolveTests:testDuplicateMethodDeclaration7()
62468=ResolveTests:testNegativeResolveUnicode()
62469=ResolveTests:testSelectOnCursor2()
62470=ResolveTests:testClass5()
62471=ResolveTests:select(String, String, String)
62472=ResolveTests:testLocalName3()
62473=ResolveTests:testDuplicateMethodDeclaration9()
62474=ResolveTests:testInvalidField4()
62475=ResolveTests:testInnerClassAsParamater()
62476=ResolveTests:testPackage()
62477=ResolveTests:testDuplicateLocalsType1()
62478=ResolveTests:testLocalNameForClassFile()
62479=ResolveTests:testArrayParameterInsideParent1()
62480=ResolveTests:testDuplicateTypeDeclaration5()
62481=ResolveTests:testLocalField2()
62482=ResolveTests:testInClassFileWithSource()
62483=ResolveTests:testCatchArgumentName1()
62484=ResolveTests:testMethodWithInnerTypeInClassFile()
62485=ResolveTests:testInvalidField2()
62486=ResolveTests:testSecondaryTypes()
62487=ResolveTests:testClass1()
62488=ResolveTests:testMemberTypeInImport()
62489=ResolveTests:testQualifiedType()
62490=ResolveTests:testTypeDeclaration()
62491=ResolveTests:testEmptyCU1()
62492=ResolveTests:testConstructor5()
62493=ResolveTests:testEmptySelection()
62494=ResolveTests:testDuplicateTypeDeclaration7()
62495=ResolveTests:testAbstractMethod()
62496=ResolveTests:testMethodWithIncorrectParameter2()
62497=ResolveTests:testUnicode2()
62498=ResolveTests:testLocalName7()
62499=ResolveTests:testDuplicateFieldDeclaration3()
62500=ResolveTests:testEndOfFile()
62501=ResolveTests:testClass3()
62502=ResolveTests:setUpSuite()
62503=ResolveTests:testLocalMethod()
62504=ResolveTests:testConstructor3()
62505=ResolveTests:testMethodWithIncorrectParameter()
62506=ResolveTests:testEmptySelectionOnMethod()
62507=ResolveTests:testLocalConstructorDeclaration()
62508=ResolveTests:test306078()
62509=ResolveTests:testLocalVarTypeSignature2()
62510=ResolveTests:testMethodDeclaration()
62511=ResolveTests:testLocalFieldDeclaration()
62512=ResolveTests:testLocalClass7()
62513=ResolveTests:testExplicitSuperConstructorCall()
62514=ResolveTests:testDuplicateLocals1()
62515=ResolveTests:testDuplicateTypeDeclaration3()
62516=ResolveTests:testMethodParameter()
62517=ResolveTests:testMethodInAnonymous1()
62518=ResolveTests:testLocalClass9()
62519=ResolveTests:testImport()
62520=ResolveTests:testDuplicateMethodDeclaration2()
62521=ResolveTests:testMethodDeclarationInAnonymous3()
62522=ResolveTests:testDeepLocalVariable()
62523=ResolveTests:testCatchArgumentType2()
62524=ResolveTests:testEmptySelection2()
62525=ResolveTests:testSingleNameInImport()
62526=ResolveTests:testDuplicateMethodDeclaration12()
62527=ResolveTests:testArgumentName1()
62528=ResolveTests:suite()
62529=ResolveTests:testDuplicateLocals4()
62530=ResolveTests:testLocalName2()
62531=ResolveTests:testLocalClass3()
62532=ResolveTests:_testConstructorCallOfMemberType2()
62533=ResolveTests:testDuplicateMethodDeclaration4()
62534=ResolveTests:testLocalMemberTypeDeclaration2()
62535=ResolveTests:getWorkingCopy(String, String)
62536=ResolveTests:testArrayLength()
62537=ResolveTests:testWorkingCopyOrder2()
62538=ResolveTests:testDuplicateMethodDeclaration10()
62539=ResolveTests:testInvalidResolve()
62540=ResolveTests:testLocalClass5()
62541=ResolveTests:testInvalidMethod2()
62542=ResolveTests:testQualifiedName2()
62543=ResolveTests:testDuplicateMethodDeclaration6()
62544=ResolveTests:testDuplicateFieldDeclaration4()
62545=ResolveTests:testClass6()
62546=ResolveTests:testCodeSelectInHybrid1415Projects()
62547=ResolveTests:testLocalName6()
62548=ResolveTests:testQualifiedName4()
62549=ResolveTests:testMethodDeclarationInAnonymous()
62550=ResolveTests:testDuplicateMethodDeclaration8()
62551=ResolveTests:testMethodWithInnerTypeInClassFile2()
62552=ResolveTests:testSelectOnCursor1()
62553=ResolveTests:testLocalConstructor()
62554=ResolveTests:testMethodDeclarationInInterface()
62555=ResolveTests:testLocalClass1()
62556=ResolveTests:testLocalName4()
62557=ResolveTests:testDuplicateFieldDeclaration()
62558=ResolveTests:testConstructorCallOfMemberType()
62559=ResolveTests:testInvalidField3()
62560=ResolveTests:testClass2()
62561=ResolveTests:testInClassFileWithoutSource()
62562=ResolveTests:testDuplicateTypeDeclaration()
62563=ResolveTests:testDuplicateTypeDeclaration6()
62564=ResolveTests:testCatchArgumentName2()
62565=ResolveTests:testInterface()
62566=ResolveTests:testInvalidField1()
62567=ResolveTests:testClass4()
62568=ResolveTests:testConstantInLocal()
62569=ResolveTests:testDuplicateFieldDeclaration2()
62570=ResolveTests:testMemberTypeDeclaration()
62571=ResolveTests:testConstructorDeclaration()
62572=ResolveTests:testDuplicateLocalsType2()
62573=ResolveTests:testConstructor6()
62574=ResolveTests:testDuplicateMethodDeclaration()
62575=ResolveTests:testLocalMethod2()
62576=ResolveTests:testDuplicateTypeDeclaration8()
62577=ResolveTests:testUnicode3()
62578=ResolveTests:testMethod()
62579=ResolveTests:testAmbiguousMethod1()
62580=ResolveTests:testLocalVarTypeSignature1()
62581=ResolveTests:testLocalClass6()
62582=ResolveTests:testPartiallyQualifiedType()
62583=ResolveTests:tearDown()
62584=ResolveTests:testLocalMethodDeclaration()
62585=ResolveTests:testConstructor4()
62586=ResolveTests:testDuplicateTypeDeclaration2()
62587=ResolveTests:testExplicitThisConstructorCall()
62588=ResolveTests:testLocalClass8()
62589=ResolveTests:testStaticClassConstructor()
62590=ResolveTests:testField()
62591=ResolveTests:testConstructor()
62592=ResolveTests:testConstructor2()
62593=ResolveTests:testInterfaceX()
62594=ResolveTests:testDuplicateLocals2()
62595=ResolveTests:testDuplicateTypeDeclaration4()
62596=A:foo()
62597=Test:test()
62598=Bug336046:foo()
62599=X04:foo()
62600=CaseStatement:printStatement(int, StringBuffer)
62601=CaseStatement:analyseCode(BlockScope, FlowContext, FlowInfo)
62602=CaseStatement:CaseStatement(Expression, int, int)
62603=CaseStatement:resolveCase(BlockScope, TypeBinding, SwitchStatement)
62604=CaseStatement:generateCode(BlockScope, CodeStream)
62605=CaseStatement:resolve(BlockScope)
62606=CaseStatement:traverse(ASTVisitor, BlockScope)
62607=A:foo(int)
62608=X02:foo()
62609=SearchParticipant:selectIndexes(SearchPattern, IJavaSearchScope)
62610=SearchParticipant:removeIndex(IPath)
62611=SearchParticipant:doneSearching()
62612=SearchParticipant:indexResolvedDocument(SearchDocument, IPath)
62613=SearchParticipant:getDocument(String)
62614=SearchParticipant:scheduleDocumentIndexing(SearchDocument, IPath)
62615=SearchParticipant:beginSearching()
62616=SearchParticipant:indexDocument(SearchDocument, IPath)
62617=SearchParticipant:resolveDocument(SearchDocument)
62618=SearchParticipant:getDescription()
62619=SearchParticipant:locateMatches(SearchDocument[], SearchPattern, IJavaSearchScope, SearchRequestor, IProgressMonitor)
62620=SearchParticipant:SearchParticipant()
62621=Test:a()
62622=VariableDeclarationExpression:VariableDeclarationExpression(AST)
62623=VariableDeclarationExpression:internalGetSetIntProperty(SimplePropertyDescriptor, boolean, int)
62624=VariableDeclarationExpression:internalSetModifiers(int)
62625=VariableDeclarationExpression:internalGetChildListProperty(ChildListPropertyDescriptor)
62626=VariableDeclarationExpression:setModifiers(int)
62627=VariableDeclarationExpression:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
62628=VariableDeclarationExpression:getModifiers()
62629=VariableDeclarationExpression:subtreeMatch0(ASTMatcher, Object)
62630=VariableDeclarationExpression:accept0(ASTVisitor)
62631=VariableDeclarationExpression:internalStructuralPropertiesForType(int)
62632=VariableDeclarationExpression:fragments()
62633=VariableDeclarationExpression:modifiers()
62634=VariableDeclarationExpression:clone0(AST)
62635=VariableDeclarationExpression:memSize()
62636=VariableDeclarationExpression:treeSize()
62637=VariableDeclarationExpression:getNodeType0()
62638=VariableDeclarationExpression:getType()
62639=VariableDeclarationExpression:propertyDescriptors(int)
62640=VariableDeclarationExpression:setType(Type)
62641=NullTypeAnnotationTest:testCompatibility5()
62642=NullTypeAnnotationTest:testBug488495collector()
62643=NullTypeAnnotationTest:testBug416174()
62644=NullTypeAnnotationTest:testTypeVariable5()
62645=NullTypeAnnotationTest:testBug473713()
62646=NullTypeAnnotationTest:testBug467094()
62647=NullTypeAnnotationTest:testBug440398()
62648=NullTypeAnnotationTest:testBug466713d()
62649=NullTypeAnnotationTest:testTypeVariable15()
62650=NullTypeAnnotationTest:testBug481332()
62651=NullTypeAnnotationTest:testBug415850_02()
62652=NullTypeAnnotationTest:testBug416176b()
62653=NullTypeAnnotationTest:testBug432977()
62654=NullTypeAnnotationTest:testBug497698nestedinraw()
62655=NullTypeAnnotationTest:testDefault03_bin()
62656=NullTypeAnnotationTest:testBug485988nonnull()
62657=NullTypeAnnotationTest:testBug485988bound()
62658=NullTypeAnnotationTest:testBug435399()
62659=NullTypeAnnotationTest:testBug439158()
62660=NullTypeAnnotationTest:testBug431269()
62661=NullTypeAnnotationTest:testBug466556nonfree()
62662=NullTypeAnnotationTest:testBug485988nullable()
62663=NullTypeAnnotationTest:testArrayType_04()
62664=NullTypeAnnotationTest:testNullTypeInference3c()
62665=NullTypeAnnotationTest:testBug448709_allocationExpression2()
62666=NullTypeAnnotationTest:testBug455180()
62667=NullTypeAnnotationTest:testBug472663()
62668=NullTypeAnnotationTest:testBug447661()
62669=NullTypeAnnotationTest:testBug459967_Array_clone()
62670=NullTypeAnnotationTest:testBug416176()
62671=NullTypeAnnotationTest:testBug424637()
62672=NullTypeAnnotationTest:testTypeVariable3()
62673=NullTypeAnnotationTest:testNullTypeInference2b()
62674=NullTypeAnnotationTest:testCompatibility3()
62675=NullTypeAnnotationTest:testBug454182()
62676=NullTypeAnnotationTest:testBug466713b()
62677=NullTypeAnnotationTest:testBug424637_comment3()
62678=NullTypeAnnotationTest:testClass()
62679=NullTypeAnnotationTest:testBug485814()
62680=NullTypeAnnotationTest:testMultipleAnnotations1()
62681=NullTypeAnnotationTest:testTypeVariable17()
62682=NullTypeAnnotationTest:testBug484741Invoke2()
62683=NullTypeAnnotationTest:testBug440759b()
62684=NullTypeAnnotationTest:testBug446442_4()
62685=NullTypeAnnotationTest:testBug461268()
62686=NullTypeAnnotationTest:test_nonnull_list_elements_01()
62687=NullTypeAnnotationTest:testTypeVariable7a()
62688=NullTypeAnnotationTest:testSubstitution3()
62689=NullTypeAnnotationTest:testBug403216_3b()
62690=NullTypeAnnotationTest:testNullTypeInference2d()
62691=NullTypeAnnotationTest:testBinary08b()
62692=NullTypeAnnotationTest:testBug445227()
62693=NullTypeAnnotationTest:testBinary10()
62694=NullTypeAnnotationTest:testBug474239b()
62695=NullTypeAnnotationTest:testBug453475b()
62696=NullTypeAnnotationTest:testBug459967_Array_clone_b()
62697=NullTypeAnnotationTest:testArray2()
62698=NullTypeAnnotationTest:testBinary01()
62699=NullTypeAnnotationTest:testBug492322field()
62700=NullTypeAnnotationTest:testTypeVariable1()
62701=NullTypeAnnotationTest:testBug467430array()
62702=NullTypeAnnotationTest:testUnsupportedLocation01()
62703=NullTypeAnnotationTest:testBinary06b()
62704=NullTypeAnnotationTest:testBug484981b()
62705=NullTypeAnnotationTest:testDefault07_bin()
62706=NullTypeAnnotationTest:testConditional1()
62707=NullTypeAnnotationTest:testBug467482regression()
62708=NullTypeAnnotationTest:testBug485988WildCardForTVWithNonNullBound()
62709=NullTypeAnnotationTest:testBug448777()
62710=NullTypeAnnotationTest:testTypeVariable19()
62711=NullTypeAnnotationTest:test483952()
62712=NullTypeAnnotationTest:testBug467430mismatch()
62713=NullTypeAnnotationTest:testBug403216_1()
62714=NullTypeAnnotationTest:testTypeVariable19a()
62715=NullTypeAnnotationTest:testBug465513()
62716=NullTypeAnnotationTest:testBug434600b_qualified()
62717=NullTypeAnnotationTest:testTypeVariable7err()
62718=NullTypeAnnotationTest:testBug492322()
62719=NullTypeAnnotationTest:testBug435841()
62720=NullTypeAnnotationTest:testBug484471SubclassNullable()
62721=NullTypeAnnotationTest:testBug427163b()
62722=NullTypeAnnotationTest:testBinary03()
62723=NullTypeAnnotationTest:testBug466556withPGMB()
62724=NullTypeAnnotationTest:testUnsupportedLocation03()
62725=NullTypeAnnotationTest:testBug484981d()
62726=NullTypeAnnotationTest:testCompatibility2a()
62727=NullTypeAnnotationTest:testTypeVariable10a()
62728=NullTypeAnnotationTest:testDefault07()
62729=NullTypeAnnotationTest:testBug489674()
62730=NullTypeAnnotationTest:testUnsupportedLocation04a()
62731=NullTypeAnnotationTest:testBug484741Invoke()
62732=NullTypeAnnotationTest:testBug489245()
62733=NullTypeAnnotationTest:testBug439298_comment4()
62734=NullTypeAnnotationTest:test443467()
62735=NullTypeAnnotationTest:testNullTypeInference3()
62736=NullTypeAnnotationTest:testBug456236()
62737=NullTypeAnnotationTest:testArrayType_02()
62738=NullTypeAnnotationTest:testBug446442_comment2b()
62739=NullTypeAnnotationTest:testBinary05()
62740=NullTypeAnnotationTest:testArrayOfArrays()
62741=NullTypeAnnotationTest:testBug466556withRaw()
62742=NullTypeAnnotationTest:testBug416182a()
62743=NullTypeAnnotationTest:testUnsupportedLocation05()
62744=NullTypeAnnotationTest:test_nestedType_03()
62745=NullTypeAnnotationTest:testBug482247_comment5()
62746=NullTypeAnnotationTest:testDefault04_bin()
62747=NullTypeAnnotationTest:testBug466556Loops()
62748=NullTypeAnnotationTest:testBug481322a()
62749=NullTypeAnnotationTest:testBug427163c()
62750=NullTypeAnnotationTest:testBug485302()
62751=NullTypeAnnotationTest:testBug440398_comment2()
62752=NullTypeAnnotationTest:testTypeVariable16a()
62753=NullTypeAnnotationTest:suite()
62754=NullTypeAnnotationTest:testBug492322withGenericBase()
62755=NullTypeAnnotationTest:testDefault06()
62756=NullTypeAnnotationTest:testNullTypeInference1()
62757=NullTypeAnnotationTest:testBug467482()
62758=NullTypeAnnotationTest:testBug499862a()
62759=NullTypeAnnotationTest:testBug417759()
62760=NullTypeAnnotationTest:testBug447088()
62761=NullTypeAnnotationTest:testBug448709()
62762=NullTypeAnnotationTest:testBug485030()
62763=NullTypeAnnotationTest:testBug403457_2()
62764=NullTypeAnnotationTest:testDefault06_b()
62765=NullTypeAnnotationTest:testWildcardCapture3()
62766=NullTypeAnnotationTest:testTypeVariable10()
62767=NullTypeAnnotationTest:testBinary07()
62768=NullTypeAnnotationTest:testArrayType_11()
62769=NullTypeAnnotationTest:testBug434582()
62770=NullTypeAnnotationTest:testBug446442_2b()
62771=NullTypeAnnotationTest:testBug485988WildcardWithGenericBound()
62772=NullTypeAnnotationTest:test_nestedType_01()
62773=NullTypeAnnotationTest:testUnsupportedLocation07()
62774=NullTypeAnnotationTest:testTypeBounds1()
62775=NullTypeAnnotationTest:testBug433478()
62776=NullTypeAnnotationTest:testBug453475a()
62777=NullTypeAnnotationTest:testDefault06_bin()
62778=NullTypeAnnotationTest:testBug497698raw()
62779=NullTypeAnnotationTest:testBug466556field()
62780=NullTypeAnnotationTest:testCompatibility4a()
62781=NullTypeAnnotationTest:test429387()
62782=NullTypeAnnotationTest:testDefault04()
62783=NullTypeAnnotationTest:testBug497698()
62784=NullTypeAnnotationTest:testBug499862c()
62785=NullTypeAnnotationTest:testBug440398_comment2a()
62786=NullTypeAnnotationTest:testBug477719()
62787=NullTypeAnnotationTest:testConditional2()
62788=NullTypeAnnotationTest:testTypeVariable12()
62789=NullTypeAnnotationTest:testBug416181()
62790=NullTypeAnnotationTest:testDefault01_bin()
62791=NullTypeAnnotationTest:testBinary09()
62792=NullTypeAnnotationTest:test_nonnull_list_elements_02()
62793=NullTypeAnnotationTest:testTypeVariable9()
62794=NullTypeAnnotationTest:test422134()
62795=NullTypeAnnotationTest:testCompatibility1()
62796=NullTypeAnnotationTest:testBug446442_6b()
62797=NullTypeAnnotationTest:testBug461268nnbd()
62798=NullTypeAnnotationTest:testBug403216_3a()
62799=NullTypeAnnotationTest:testNullTypeInference2e()
62800=NullTypeAnnotationTest:testTypeBounds3()
62801=NullTypeAnnotationTest:testLocalArrays()
62802=NullTypeAnnotationTest:testBug483146b()
62803=NullTypeAnnotationTest:testBug484741d()
62804=NullTypeAnnotationTest:testSubstitution5()
62805=NullTypeAnnotationTest:testBug441693()
62806=NullTypeAnnotationTest:testDefault02()
62807=NullTypeAnnotationTest:testDefault02_bin()
62808=NullTypeAnnotationTest:testBug434600a()
62809=NullTypeAnnotationTest:testBug466556b()
62810=NullTypeAnnotationTest:testBug461268invoke()
62811=NullTypeAnnotationTest:testTypeVariable14()
62812=NullTypeAnnotationTest:testBug456487a()
62813=NullTypeAnnotationTest:testBug416183()
62814=NullTypeAnnotationTest:testBug415850_03()
62815=NullTypeAnnotationTest:testTypeVariable7()
62816=NullTypeAnnotationTest:testDefault01b()
62817=NullTypeAnnotationTest:testBug416172()
62818=NullTypeAnnotationTest:testBug482228()
62819=NullTypeAnnotationTest:test_nestedType_05()
62820=NullTypeAnnotationTest:testBug484741b()
62821=NullTypeAnnotationTest:testBug424637a()
62822=NullTypeAnnotationTest:testBug467430arrayMismatch()
62823=NullTypeAnnotationTest:testBug415850_05()
62824=NullTypeAnnotationTest:testBug466713()
62825=NullTypeAnnotationTest:testBug484954()
62826=NullTypeAnnotationTest:testTypeVariable16()
62827=NullTypeAnnotationTest:testBug446442_3()
62828=NullTypeAnnotationTest:testBug415850_01()
62829=NullTypeAnnotationTest:testBug416176a()
62830=NullTypeAnnotationTest:testBug485988Contradictory()
62831=NullTypeAnnotationTest:testBug440462()
62832=NullTypeAnnotationTest:testBug492322deep()
62833=NullTypeAnnotationTest:testBug455180WithOtherAnnotation()
62834=NullTypeAnnotationTest:testBug448709_allocationExpression3()
62835=NullTypeAnnotationTest:testNullTypeInference3b()
62836=NullTypeAnnotationTest:testArrayType_05()
62837=NullTypeAnnotationTest:testBug489978()
62838=NullTypeAnnotationTest:testCompatibility6()
62839=NullTypeAnnotationTest:testBug456487b()
62840=NullTypeAnnotationTest:testBug416175()
62841=NullTypeAnnotationTest:testNullTypeInference2a()
62842=NullTypeAnnotationTest:testTypeVariable4()
62843=NullTypeAnnotationTest:testBug485988WildcardOverride()
62844=NullTypeAnnotationTest:testBug466713c()
62845=NullTypeAnnotationTest:testBug482752_methodref()
62846=NullTypeAnnotationTest:testBug466585_comment_0()
62847=NullTypeAnnotationTest:testBug440759a()
62848=NullTypeAnnotationTest:testBug484741Invoke3()
62849=NullTypeAnnotationTest:test445669()
62850=NullTypeAnnotationTest:testBug446442_5()
62851=NullTypeAnnotationTest:testTypeVariable18()
62852=NullTypeAnnotationTest:testBug456584()
62853=NullTypeAnnotationTest:testBug437072()
62854=NullTypeAnnotationTest:testBug467430()
62855=NullTypeAnnotationTest:testBug446217()
62856=NullTypeAnnotationTest:testSubstitution2()
62857=NullTypeAnnotationTest:testMissingAnnotationTypes_01()
62858=NullTypeAnnotationTest:testNullTypeInference2c()
62859=NullTypeAnnotationTest:testBug443870()
62860=NullTypeAnnotationTest:testBug485058()
62861=NullTypeAnnotationTest:testBug448709_allocationExpression1()
62862=NullTypeAnnotationTest:testBug467482simple()
62863=NullTypeAnnotationTest:testBug466556captures()
62864=NullTypeAnnotationTest:testBug456497()
62865=NullTypeAnnotationTest:testCompatibility4()
62866=NullTypeAnnotationTest:testTypeVariable2()
62867=NullTypeAnnotationTest:testTypeVariable18raw()
62868=NullTypeAnnotationTest:testDefault05_bin()
62869=NullTypeAnnotationTest:testBug467094_method()
62870=NullTypeAnnotationTest:testSE7AnnotationCopy()
62871=NullTypeAnnotationTest:testBug437270()
62872=NullTypeAnnotationTest:testCompatibility3a()
62873=NullTypeAnnotationTest:testBug424725()
62874=NullTypeAnnotationTest:test446715()
62875=NullTypeAnnotationTest:testBug484741()
62876=NullTypeAnnotationTest:testBug430219()
62877=NullTypeAnnotationTest:testBug446442_comment2c()
62878=NullTypeAnnotationTest:testBug427163()
62879=NullTypeAnnotationTest:testBug485056()
62880=NullTypeAnnotationTest:testArrayType_01()
62881=NullTypeAnnotationTest:testTypeVariable6a()
62882=NullTypeAnnotationTest:testBug459967_Array_constructor_b()
62883=NullTypeAnnotationTest:testArray1()
62884=NullTypeAnnotationTest:NullTypeAnnotationTest(String)
62885=NullTypeAnnotationTest:testBug434582a()
62886=NullTypeAnnotationTest:testBug484981c()
62887=NullTypeAnnotationTest:testBug483527()
62888=NullTypeAnnotationTest:test_nonnull_list_elements_01a()
62889=NullTypeAnnotationTest:testRawType()
62890=NullTypeAnnotationTest:testBug439298_comment3()
62891=NullTypeAnnotationTest:testBug424727()
62892=NullTypeAnnotationTest:testBug435962()
62893=NullTypeAnnotationTest:testBug485374()
62894=NullTypeAnnotationTest:testBug467094_local()
62895=NullTypeAnnotationTest:testArrayType_03()
62896=NullTypeAnnotationTest:testBug446442_comment2a()
62897=NullTypeAnnotationTest:testBug484981()
62898=NullTypeAnnotationTest:testArray3()
62899=NullTypeAnnotationTest:testBug467482switch()
62900=NullTypeAnnotationTest:testBinary02()
62901=NullTypeAnnotationTest:testCompatibility1a()
62902=NullTypeAnnotationTest:testUnsupportedLocation02()
62903=NullTypeAnnotationTest:testBug436091()
62904=NullTypeAnnotationTest:testBug485581()
62905=NullTypeAnnotationTest:testBug496591()
62906=NullTypeAnnotationTest:testBug438383()
62907=NullTypeAnnotationTest:testBug483146()
62908=NullTypeAnnotationTest:testSubstitution()
62909=NullTypeAnnotationTest:test484055()
62910=NullTypeAnnotationTest:testBug448709b()
62911=NullTypeAnnotationTest:testDefault05()
62912=NullTypeAnnotationTest:testBug499862b()
62913=NullTypeAnnotationTest:testTypeVariable17a()
62914=NullTypeAnnotationTest:testWildcardCapture2()
62915=NullTypeAnnotationTest:testForeach()
62916=NullTypeAnnotationTest:testBinary04()
62917=NullTypeAnnotationTest:testBug439298_comment2()
62918=NullTypeAnnotationTest:testBug440764()
62919=NullTypeAnnotationTest:test420456()
62920=NullTypeAnnotationTest:testBug467032()
62921=NullTypeAnnotationTest:testBug416182b()
62922=NullTypeAnnotationTest:testUnsupportedLocation04()
62923=NullTypeAnnotationTest:test_nestedType_04()
62924=NullTypeAnnotationTest:testBug466969()
62925=NullTypeAnnotationTest:testBug482752_lambda()
62926=NullTypeAnnotationTest:testBug484741e()
62927=NullTypeAnnotationTest:testBug403216_2()
62928=NullTypeAnnotationTest:testBug482247()
62929=NullTypeAnnotationTest:testDefault03()
62930=NullTypeAnnotationTest:testConditional3()
62931=NullTypeAnnotationTest:testBug433586()
62932=NullTypeAnnotationTest:testBug403457_1()
62933=NullTypeAnnotationTest:testBinary06()
62934=NullTypeAnnotationTest:testBug416180()
62935=NullTypeAnnotationTest:testArrayType_10()
62936=NullTypeAnnotationTest:testTypeVariable20()
62937=NullTypeAnnotationTest:testBug446442_2a()
62938=NullTypeAnnotationTest:testUnsupportedLocation06()
62939=NullTypeAnnotationTest:testBug466562()
62940=NullTypeAnnotationTest:test_nestedType_02()
62941=NullTypeAnnotationTest:testTypeBounds2()
62942=NullTypeAnnotationTest:testBug484108()
62943=NullTypeAnnotationTest:testBug429403()
62944=NullTypeAnnotationTest:testBug474239()
62945=NullTypeAnnotationTest:testBug484741c()
62946=NullTypeAnnotationTest:testBug416174b()
62947=NullTypeAnnotationTest:testBug459967_Array_constructor()
62948=NullTypeAnnotationTest:testBug441693other()
62949=NullTypeAnnotationTest:testSubstitution4()
62950=NullTypeAnnotationTest:testBug467482while()
62951=NullTypeAnnotationTest:testDefault01()
62952=NullTypeAnnotationTest:testBug432223()
62953=NullTypeAnnotationTest:testBug466556c()
62954=NullTypeAnnotationTest:testBug415850_06()
62955=NullTypeAnnotationTest:testBug434600b()
62956=NullTypeAnnotationTest:testBug437270_comment3()
62957=NullTypeAnnotationTest:testTypeVariable11()
62958=NullTypeAnnotationTest:testBug416182()
62959=NullTypeAnnotationTest:testNullableReturn()
62960=NullTypeAnnotationTest:testBinary08()
62961=NullTypeAnnotationTest:test_nonnull_list_elements_03()
62962=NullTypeAnnotationTest:testBug485988neutral()
62963=NullTypeAnnotationTest:testTypeVariable8()
62964=NullTypeAnnotationTest:testWildcardCapture()
62965=NullTypeAnnotationTest:testBug446442_6a()
62966=NullTypeAnnotationTest:testCompatibility2()
62967=NullTypeAnnotationTest:testBug430219a()
62968=NullTypeAnnotationTest:testNullTypeInference2f()
62969=NullTypeAnnotationTest:testUnsupportedLocation08()
62970=NullTypeAnnotationTest:testBug434600a_qualified()
62971=NullTypeAnnotationTest:testTypeBounds4()
62972=NullTypeAnnotationTest:testBug466585_comment_4()
62973=NullTypeAnnotationTest:testBug434579()
62974=NullTypeAnnotationTest:testBug434600()
62975=NullTypeAnnotationTest:testBug485027()
62976=NullTypeAnnotationTest:testTypeVariable16b()
62977=NullTypeAnnotationTest:testBug484471SubclassNonNull()
62978=NullTypeAnnotationTest:testBug484735()
62979=NullTypeAnnotationTest:testBug485565()
62980=NullTypeAnnotationTest:testBug492327()
62981=NullTypeAnnotationTest:testBug466556a()
62982=NullTypeAnnotationTest:testTypeVariable13()
62983=NullTypeAnnotationTest:testBug415850_04()
62984=NullTypeAnnotationTest:testBug453475()
62985=NullTypeAnnotationTest:testTypeVariable6()
62986=NullTypeAnnotationTest:testBug440773()
62987=NullTypeAnnotationTest:testTypeVariable15a()
62988=SwitchFlowContext:recordBreakFrom(FlowInfo)
62989=SwitchFlowContext:SwitchFlowContext(FlowContext, ASTNode, Label)
62990=SwitchFlowContext:individualToString()
62991=SwitchFlowContext:breakLabel()
62992=SwitchFlowContext:isBreakable()
62993=Foo:Foo()
62994=CompletionOnMethodReturnType:resolveStatements()
62995=CompletionOnMethodReturnType:CompletionOnMethodReturnType(TypeReference, CompilationResult)
62996=CompletionOnMethodReturnType:print(int, StringBuffer)
62997=IImportContainer:getImport(String)
62998=X07:foo(Object, Object)
62999=IndexSelector:getJavaProject(IPath, IJavaModel)
63000=IndexSelector:IndexSelector(IJavaSearchScope, SearchPattern)
63001=IndexSelector:getQualifiedNames(ObjectVector)
63002=IndexSelector:canSeeFocus(IJavaElement, JavaProject, char[][][])
63003=IndexSelector:initializeIndexLocations()
63004=IndexSelector:canSeeFocus(IJavaElement[], JavaProject, char[][][])
63005=IndexSelector:getIndexLocations()
63006=IndexSelector:canSeeFocus(SearchPattern, IPath)
63007=IndexSelector:getFocusedElementsAndTypes(SearchPattern, IJavaElement, ObjectVector)
63008=SignatureWrapper:removeTypeArguments()
63009=SignatureWrapper:toString()
63010=SignatureWrapper:nextName()
63011=SignatureWrapper:getFrom(int)
63012=SignatureWrapper:SignatureWrapper(char[])
63013=SignatureWrapper:tail()
63014=SignatureWrapper:nextWord()
63015=SignatureWrapper:SignatureWrapper(char[], boolean, boolean)
63016=SignatureWrapper:skipAngleContents(int)
63017=SignatureWrapper:SignatureWrapper(char[], boolean)
63018=SignatureWrapper:computeEnd()
63019=SignatureWrapper:atEnd()
63020=SignatureWrapper:isParameterized()
63021=SignatureWrapper:peekFullType()
63022=SourceTypeBinding:setFields(FieldBinding[])
63023=SourceTypeBinding:memberTypes()
63024=SourceTypeBinding:isHierarchyConnected()
63025=SourceTypeBinding:hasMemberTypes()
63026=SourceTypeBinding:addSyntheticMethod(MethodBinding, boolean)
63027=SourceTypeBinding:addSyntheticArrayMethod(ArrayBinding, int)
63028=SourceTypeBinding:retrieveAnnotationHolder(Binding, boolean)
63029=SourceTypeBinding:createArgumentBindings(MethodBinding, CompilerOptions)
63030=SourceTypeBinding:faultInTypesForFieldsAndMethods()
63031=SourceTypeBinding:resolveTypeFor(FieldBinding)
63032=SourceTypeBinding:sourceEnd()
63033=SourceTypeBinding:addDefaultAbstractMethods()
63034=SourceTypeBinding:tagAsHavingDefectiveContainerType()
63035=SourceTypeBinding:addSyntheticFieldForAssert(BlockScope)
63036=SourceTypeBinding:withoutToplevelNullAnnotation()
63037=SourceTypeBinding:addSyntheticMethod(LambdaExpression)
63038=SourceTypeBinding:addSyntheticMethod(FieldBinding, boolean, boolean)
63039=SourceTypeBinding:getMethods(char[])
63040=SourceTypeBinding:getExactConstructor(TypeBinding[])
63041=SourceTypeBinding:addSyntheticEnumMethod(char[])
63042=SourceTypeBinding:addSyntheticMethodForSwitchEnum(TypeBinding)
63043=SourceTypeBinding:addSyntheticBridgeMethod(MethodBinding)
63044=SourceTypeBinding:getSyntheticField(LocalVariableBinding)
63045=SourceTypeBinding:addSyntheticFactoryMethod(MethodBinding, MethodBinding, TypeBinding[])
63046=SourceTypeBinding:tagIndirectlyAccessibleMembers()
63047=SourceTypeBinding:isPrototype()
63048=SourceTypeBinding:addSyntheticFieldForInnerclass(LocalVariableBinding)
63049=SourceTypeBinding:addSyntheticFieldForSwitchEnum(char[], String)
63050=SourceTypeBinding:setContainerAnnotationType(ReferenceBinding)
63051=SourceTypeBinding:toString()
63052=SourceTypeBinding:genericTypeSignature()
63053=SourceTypeBinding:getSyntheticBridgeMethod(MethodBinding)
63054=SourceTypeBinding:initializeDeprecatedAnnotationTagBits()
63055=SourceTypeBinding:areFieldsInitialized()
63056=SourceTypeBinding:initializeForStaticImports()
63057=SourceTypeBinding:addSyntheticMethod(ReferenceExpression)
63058=SourceTypeBinding:kind()
63059=SourceTypeBinding:prototype()
63060=SourceTypeBinding:isGenericType()
63061=SourceTypeBinding:setMethods(MethodBinding[])
63062=SourceTypeBinding:superclass()
63063=SourceTypeBinding:syntheticMethods()
63064=SourceTypeBinding:storedAnnotations(boolean)
63065=SourceTypeBinding:genericSignature()
63066=SourceTypeBinding:computeUniqueKey(boolean)
63067=SourceTypeBinding:superInterfaces()
63068=SourceTypeBinding:fields()
63069=SourceTypeBinding:unannotated()
63070=SourceTypeBinding:getNullDefault()
63071=SourceTypeBinding:setSuperInterfaces(ReferenceBinding[])
63072=SourceTypeBinding:checkRedundantNullnessDefaultOne(ASTNode, Annotation[], long, boolean)
63073=SourceTypeBinding:resolveTypesFor(MethodBinding)
63074=SourceTypeBinding:getExactMethod(char[], TypeBinding[], CompilationUnitScope)
63075=SourceTypeBinding:getAnnotationTagBits()
63076=SourceTypeBinding:methods()
63077=SourceTypeBinding:verifyMethods(MethodVerifier)
63078=SourceTypeBinding:addSyntheticFieldForClassLiteral(TypeBinding, BlockScope)
63079=SourceTypeBinding:hasTypeBit(int)
63080=SourceTypeBinding:getSyntheticField(ReferenceBinding, boolean)
63081=SourceTypeBinding:internalFaultInTypeForFieldsAndMethods()
63082=SourceTypeBinding:getField(char[], boolean)
63083=SourceTypeBinding:checkAnnotationsInType()
63084=SourceTypeBinding:clone(TypeBinding)
63085=SourceTypeBinding:addSyntheticMethodForEnumInitialization(int, int)
63086=SourceTypeBinding:setTypeVariables(TypeVariableBinding[])
63087=SourceTypeBinding:checkRedundantNullnessDefaultRecurse(ASTNode, Annotation[], long, boolean)
63088=SourceTypeBinding:sourceStart()
63089=SourceTypeBinding:maybeMarkTypeParametersNonNull()
63090=SourceTypeBinding:syntheticFields()
63091=SourceTypeBinding:addDeserializeLambdaMethod()
63092=SourceTypeBinding:rejectTypeAnnotatedVoidMethod(AbstractMethodDeclaration)
63093=SourceTypeBinding:setSuperClass(ReferenceBinding)
63094=SourceTypeBinding:containerAnnotationType()
63095=SourceTypeBinding:unResolvedFields()
63096=SourceTypeBinding:addSyntheticFieldForInnerclass(ReferenceBinding)
63097=SourceTypeBinding:isTaggedRepeatable()
63098=SourceTypeBinding:addSyntheticFieldForEnumValues()
63099=SourceTypeBinding:addSyntheticBridgeMethod(MethodBinding, MethodBinding)
63100=SourceTypeBinding:isRepeatableAnnotationType()
63101=SourceTypeBinding:SourceTypeBinding(char[][], PackageBinding, ClassScope)
63102=SourceTypeBinding:evaluateNullAnnotations()
63103=SourceTypeBinding:areMethodsInitialized()
63104=SourceTypeBinding:typeVariables()
63105=SourceTypeBinding:getDefaultAbstractMethods()
63106=SourceTypeBinding:isEquivalentTo(TypeBinding)
63107=SourceTypeBinding:setMemberTypes(ReferenceBinding[])
63108=SourceTypeBinding:hasNonNullDefaultFor(int, boolean)
63109=SourceTypeBinding:SourceTypeBinding(SourceTypeBinding)
63110=A:getOtherFieldBindings(BlockScope)
63111=ASTRewriteFormatter:getTabWidth()
63112=ASTRewriteFormatter:FormattingPrefix:FormattingPrefix(String, String, int)
63113=ASTRewriteFormatter:ExtendedFlattener:fixupLength(Object, int)
63114=ASTRewriteFormatter:getLineDelimiter()
63115=ASTRewriteFormatter:ExtendedFlattener:preVisit(ASTNode)
63116=ASTRewriteFormatter:getPlaceholders()
63117=ASTRewriteFormatter:ConstPrefix:getPrefix(int)
63118=ASTRewriteFormatter:BlockFormattingPrefixSuffix:BlockFormattingPrefixSuffix(String, String, int)
63119=ASTRewriteFormatter:getIndentString(String)
63120=ASTRewriteFormatter:formatString(int, String, int, int, int)
63121=ASTRewriteFormatter:ExtendedFlattener:postVisit(ASTNode)
63122=ASTRewriteFormatter:changeIndent(String, int, String)
63123=ASTRewriteFormatter:BlockFormattingPrefixSuffix:getPrefixAndSuffix(int, ASTNode, RewriteEventStore)
63124=ASTRewriteFormatter:createDocument(String, Position[])
63125=ASTRewriteFormatter:ExtendedFlattener:getMarkers()
63126=ASTRewriteFormatter:ExtendedFlattener:ExtendedFlattener(RewriteEventStore)
63127=ASTRewriteFormatter:ConstPrefix:ConstPrefix(String)
63128=ASTRewriteFormatter:evaluateFormatterEdit(String, TextEdit, Position[])
63129=ASTRewriteFormatter:BlockFormattingPrefix:BlockFormattingPrefix(String, int)
63130=ASTRewriteFormatter:getIndentWidth()
63131=ASTRewriteFormatter:BlockContext:getPrefixAndSuffix(int, ASTNode, RewriteEventStore)
63132=ASTRewriteFormatter:ExtendedFlattener:addMarker(Object, int, int)
63133=ASTRewriteFormatter:createIndentString(int)
63134=ASTRewriteFormatter:getEventStore()
63135=ASTRewriteFormatter:computeIndentUnits(String)
63136=ASTRewriteFormatter:ASTRewriteFormatter(NodeInfoStore, RewriteEventStore, Map, String)
63137=ASTRewriteFormatter:getFormattedResult(ASTNode, int, Collection)
63138=ASTRewriteFormatter:formatNode(ASTNode, String, int)
63139=ASTRewriteFormatter:ExtendedFlattener:visit(Block)
63140=ASTRewriteFormatter:Prefix:getPrefix(int)
63141=ASTRewriteFormatter:shifEdit(TextEdit, int)
63142=ASTRewriteFormatter:BlockFormattingPrefix:getPrefixAndSuffix(int, ASTNode, RewriteEventStore)
63143=ASTRewriteFormatter:FormattingPrefix:getPrefix(int)
63144=CompletionDefaultPackage:foo()
63145=CompletionOnMessageSend:resolveType(BlockScope)
63146=CompletionOnMessageSend:printExpression(int, StringBuffer)
63147=AmbiguousSyntaxDemo:main(String[])
63148=ResolveLocalClass4:foo()
63149=ImportConflictBinding:ImportConflictBinding(char[][], Binding, ReferenceBinding, ImportReference)
63150=ImportConflictBinding:toString()
63151=ImportConflictBinding:readableName()
63152=CreationReference:accept0(ASTVisitor)
63153=CreationReference:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
63154=CreationReference:internalStructuralPropertiesForType(int)
63155=CreationReference:clone0(AST)
63156=CreationReference:subtreeMatch0(ASTMatcher, Object)
63157=CreationReference:getType()
63158=CreationReference:CreationReference(AST)
63159=CreationReference:typeArguments()
63160=CreationReference:setType(Type)
63161=CreationReference:getNodeType0()
63162=CreationReference:treeSize()
63163=CreationReference:internalGetChildListProperty(ChildListPropertyDescriptor)
63164=CreationReference:propertyDescriptors(int)
63165=CreationReference:memSize()
63166=CreationReference:internalTypeArgumentsProperty()
63167=X16b:foo(int, String)
63168=CompletionOnQualifiedTypeReference:CompletionOnQualifiedTypeReference(char[][], char[], long[])
63169=CompletionOnQualifiedTypeReference:augmentTypeWithAdditionalDimensions(int, Annotation[][], boolean)
63170=CompletionOnQualifiedTypeReference:CompletionOnQualifiedTypeReference(char[][], char[], long[], int)
63171=CompletionOnQualifiedTypeReference:isClass()
63172=CompletionOnQualifiedTypeReference:setKind(int)
63173=CompletionOnQualifiedTypeReference:printExpression(int, StringBuffer)
63174=CompletionOnQualifiedTypeReference:aboutToResolve(Scope)
63175=CompletionOnQualifiedTypeReference:isSuperType()
63176=CompletionOnQualifiedTypeReference:isException()
63177=CompletionOnQualifiedTypeReference:getTypeBinding(Scope)
63178=CompletionOnQualifiedTypeReference:isInterface()
63179=A:A()
63180=Test:foo()
63181=ISourceField:getTypeName()
63182=ISourceField:getDeclarationSourceStart()
63183=ISourceField:getInitializationSource()
63184=ISourceField:getNameSourceStart()
63185=ISourceField:getDeclarationSourceEnd()
63186=ISourceField:getNameSourceEnd()
63187=EqualExpression:checkVariableComparison(BlockScope, FlowContext, FlowInfo, FlowInfo, FlowInfo, LocalVariableBinding, int, Expression)
63188=EqualExpression:analyseCode(BlockScope, FlowContext, FlowInfo)
63189=EqualExpression:generateBooleanEqual(BlockScope, CodeStream, boolean)
63190=EqualExpression:traverse(ASTVisitor, BlockScope)
63191=EqualExpression:EqualExpression(Expression, Expression, int)
63192=EqualExpression:resolveType(BlockScope)
63193=EqualExpression:generateNonBooleanEqual(BlockScope, CodeStream, boolean)
63194=EqualExpression:isCompactableOperation()
63195=EqualExpression:computeConstant(TypeBinding, TypeBinding)
63196=EqualExpression:generateOptimizedBoolean(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
63197=EqualExpression:generateCode(BlockScope, CodeStream, boolean)
63198=EqualExpression:checkNullComparison(BlockScope, FlowContext, FlowInfo, FlowInfo, FlowInfo)
63199=EqualExpression:generateOptimizedBooleanEqual(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
63200=EqualExpression:generateOptimizedNonBooleanEqual(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)
63201=MyFunction:compose(MyFunction<? super V, ? extends T>)
63202=MyFunction:apply(T)
63203=ClassDeclarationImpl:getSuperclass()
63204=ClassDeclarationImpl:ClassDeclarationImpl(ITypeBinding, BaseProcessorEnv)
63205=ClassDeclarationImpl:getASTConstructor(AbstractTypeDeclaration, List<ConstructorDeclaration>)
63206=ClassDeclarationImpl:getConstructors()
63207=ClassDeclarationImpl:accept(TypeVisitor)
63208=ClassDeclarationImpl:accept(DeclarationVisitor)
63209=ClassDeclarationImpl:getDeclaration()
63210=ClassDeclarationImpl:getMethods()
63211=ClassDeclarationImpl:kind()
63212=PerformanceTestSuite:isPublicTestMethod(Method)
63213=PerformanceTestSuite:PerformanceTestSuite(Class)
63214=PerformanceTestSuite:isTestMethod(Method)
63215=PerformanceTestSuite:addTestMethod(Method, Vector, Class)
63216=PerformanceTestSuite:addTestSuite(Class)
63217=PerformanceTestSuite:addWarningTest(String)
63218=PerformanceTestSuite:PerformanceTestSuite(String)
63219=AdvancedFactoryPathOptionsDialog:configureShell(Shell)
63220=AdvancedFactoryPathOptionsDialog:FieldAdapter:dialogFieldChanged(DialogField)
63221=AdvancedFactoryPathOptionsDialog:createDialogArea(Composite)
63222=AdvancedFactoryPathOptionsDialog:AdvancedFactoryPathOptionsDialog(Shell, FactoryContainer, FactoryPath.Attributes)
63223=AdvancedFactoryPathOptionsDialog:getResult()
63224=SingleTypeReference:isBaseTypeReference()
63225=SingleTypeReference:resolveTypeEnclosing(BlockScope, ReferenceBinding)
63226=SingleTypeReference:getTypeBinding(Scope)
63227=SingleTypeReference:printExpression(int, StringBuffer)
63228=SingleTypeReference:traverse(ASTVisitor, BlockScope)
63229=SingleTypeReference:getLastToken()
63230=SingleTypeReference:traverse(ASTVisitor, ClassScope)
63231=SingleTypeReference:getTypeName()
63232=SingleTypeReference:SingleTypeReference(char[], long)
63233=SingleTypeReference:augmentTypeWithAdditionalDimensions(int, Annotation[][], boolean)
63234=A:f()
63235=NestedHelloWorldAnnotationProcessorFactory:NestedHelloWorldAnnotationProcessorFactory()
63236=NestedHelloWorldAnnotationProcessorFactory:supportedOptions()
63237=NestedHelloWorldAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
63238=JavaElement:getSourceMapper()
63239=JavaElement:toStringInfo(int, StringBuffer, Object, boolean)
63240=JavaElement:createElementInfo()
63241=JavaElement:getURLContents(URL, String)
63242=JavaElement:toStringAncestors(StringBuffer)
63243=JavaElement:newDoesNotExistStatus()
63244=JavaElement:hasChildren()
63245=JavaElement:toStringInfo(int, StringBuffer)
63246=JavaElement:getLibraryJavadocLocation(IClasspathEntry)
63247=JavaElement:getElementName()
63248=JavaElement:getSchedulingRule()
63249=JavaElement:toDebugString()
63250=JavaElement:resource()
63251=JavaElement:toStringChildren(int, StringBuffer, Object)
63252=JavaElement:readableName()
63253=JavaElement:newJavaModelException(IStatus)
63254=JavaElement:exists()
63255=JavaElement:getJavaModel()
63256=JavaElement:getIndexOf(byte[], byte[], int, int)
63257=JavaElement:closing(Object)
63258=JavaElement:toString(int, StringBuffer)
63259=JavaElement:getOpenable()
63260=JavaElement:isReadOnly()
63261=JavaElement:getJavaProject()
63262=JavaElement:isAncestorOf(IJavaElement)
63263=JavaElement:getChildrenOfType(int)
63264=JavaElement:getJavadocBaseLocation()
63265=JavaElement:getResource()
63266=JavaElement:getHandleFromMemento(String, MementoTokenizer, WorkingCopyOwner)
63267=JavaElement:tabString(int)
63268=JavaElement:getAncestor(int)
63269=JavaElement:getCompilationUnit()
63270=JavaElement:validateAndCache(URL, FileNotFoundException)
63271=JavaElement:toString()
63272=JavaElement:openWhenClosed(Object, boolean, IProgressMonitor)
63273=JavaElement:generateInfos(Object, HashMap, IProgressMonitor)
63274=JavaElement:getPrimaryElement(boolean)
63275=JavaElement:hashCode()
63276=JavaElement:getClassFile()
63277=JavaElement:getOpenableParent()
63278=JavaElement:getHandleIdentifier()
63279=JavaElement:getSourceElementAt(int)
63280=JavaElement:equals(Object)
63281=JavaElement:getElementInfo()
63282=JavaElement:getElementInfo(IProgressMonitor)
63283=JavaElement:getHandleFromMemento(MementoTokenizer, WorkingCopyOwner)
63284=JavaElement:toStringWithAncestors()
63285=JavaElement:getHandleMemento(StringBuffer)
63286=JavaElement:unresolved()
63287=JavaElement:appendEscapedDelimiter(StringBuffer, char)
63288=JavaElement:isSameCharacter(byte, byte)
63289=JavaElement:newNotPresentException()
63290=JavaElement:resolved(Binding)
63291=JavaElement:escapeMementoName(StringBuffer, String)
63292=JavaElement:getHandleMemento()
63293=JavaElement:getHandleMementoDelimiter()
63294=JavaElement:getAttachedJavadoc(IProgressMonitor)
63295=JavaElement:findNode(CompilationUnit)
63296=JavaElement:JavaElement(JavaElement)
63297=JavaElement:getChildren()
63298=JavaElement:close()
63299=JavaElement:getParent()
63300=JavaElement:getPrimaryElement()
63301=JavaElement:toStringWithAncestors(boolean)
63302=JavaElement:toStringName(StringBuffer)
63303=A:theMethod()
63304=Test2:main(String[])
63305=VariablesEvaluator:numberOfCRs(char[])
63306=VariablesEvaluator:VariablesEvaluator(EvaluationContext, INameEnvironment, Map<String, String>, IRequestor, IProblemFactory)
63307=VariablesEvaluator:getSource()
63308=VariablesEvaluator:getClassName()
63309=VariablesEvaluator:getPackageName()
63310=VariablesEvaluator:getCompiler(ICompilerRequestor)
63311=VariablesEvaluator:addEvaluationResultForCompilationProblem(Map<char[], EvaluationResult>, CategorizedProblem, char[])
63312=FileSystem:Classpath:initialize()
63313=FileSystem:findType(char[][])
63314=FileSystem:getClasspath(String, String, AccessRuleSet, Map)
63315=FileSystem:internalFindClass(String, char[], boolean)
63316=FileSystem:Classpath:findTypeNames(String)
63317=FileSystem:Classpath:getPath()
63318=FileSystem:findType(char[][], boolean)
63319=FileSystem:getClasspath(String, String, AccessRuleSet)
63320=FileSystem:findTypeNames(char[][])
63321=FileSystem:initializeKnownFileNames(String[])
63322=FileSystem:convertPathSeparators(String)
63323=FileSystem:Classpath:hasAnnotationFileFor(String)
63324=FileSystem:ClasspathSectionProblemReporter:multipleClasspathSections(String)
63325=FileSystem:FileSystem(Classpath[], String[], boolean)
63326=FileSystem:Classpath:reset()
63327=FileSystem:isPackage(char[][], char[])
63328=FileSystem:cleanup()
63329=FileSystem:findClass(String, char[], boolean)
63330=FileSystem:ClasspathSectionProblemReporter:invalidClasspathSection(String)
63331=FileSystem:Classpath:findClass(char[], String, String, boolean)
63332=FileSystem:FileSystem(String[], String[], String)
63333=FileSystem:ClasspathNormalizer:normalize(ArrayList)
63334=FileSystem:Classpath:findClass(char[], String, String)
63335=FileSystem:Classpath:isPackage(String)
63336=FileSystem:Classpath:fetchLinkedJars(ClasspathSectionProblemReporter)
63337=FileSystem:findType(char[], char[][])
63338=FileSystem:Classpath:normalizedPath()
63339=FileSystem:getClasspath(String, String, boolean, AccessRuleSet, String, Map)
63340=IncrementalImageBuilder:finishedWith(String, CompilationResult, char[], ArrayList, ArrayList)
63341=IncrementalImageBuilder:IncrementalImageBuilder(JavaBuilder, State)
63342=IncrementalImageBuilder:findSourceFiles(IResourceDelta, ClasspathMultiDirectory, int)
63343=IncrementalImageBuilder:addAffectedSourceFiles(StringSet, StringSet, StringSet, StringSet)
63344=IncrementalImageBuilder:addAffectedSourceFiles()
63345=IncrementalImageBuilder:IncrementalImageBuilder(JavaBuilder)
63346=IncrementalImageBuilder:checkForClassFileChanges(IResourceDelta, ClasspathMultiDirectory, int)
63347=IncrementalImageBuilder:buildAfterBatchBuild()
63348=IncrementalImageBuilder:addDependentsOf(IPath, boolean)
63349=IncrementalImageBuilder:findSourceFiles(IResourceDelta)
63350=IncrementalImageBuilder:writeClassFileContents(ClassFile, IFile, String, boolean, SourceFile)
63351=IncrementalImageBuilder:compile(SourceFile[], SourceFile[], boolean)
63352=IncrementalImageBuilder:toString()
63353=IncrementalImageBuilder:findAffectedSourceFiles(IResourceDelta, int, StringSet)
63354=IncrementalImageBuilder:updateTasksFor(SourceFile, CompilationResult)
63355=IncrementalImageBuilder:addDependentsOf(IPath, boolean, StringSet, StringSet, StringSet)
63356=IncrementalImageBuilder:deleteGeneratedFiles(IFile[])
63357=IncrementalImageBuilder:cleanUp()
63358=IncrementalImageBuilder:IncrementalImageBuilder(BatchImageBuilder)
63359=IncrementalImageBuilder:writeClassFileCheck(IFile, String, byte[])
63360=IncrementalImageBuilder:updateProblemsFor(SourceFile, CompilationResult)
63361=IncrementalImageBuilder:findAffectedSourceFiles(IResourceDelta, ClasspathLocation[], IProject)
63362=IncrementalImageBuilder:resetCollections()
63363=IncrementalImageBuilder:removeSecondaryTypes()
63364=IncrementalImageBuilder:processAnnotationResults(CompilationParticipantResult[])
63365=IncrementalImageBuilder:removeClassFile(IPath, IContainer)
63366=IncrementalImageBuilder:build(SimpleLookupTable)
63367=GenericFactory:GenericFactory()
63368=GenericFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
63369=GenericFactory:setProcessor(AbstractGenericProcessor)
63370=Test:foo(Y, A<Y>, A<Y>.B<Y>, A<Y>.C<Y>, A<Y>.B<Y>.D<Y>)
63371=Y:Y()
63372=X:bar(int)
63373=MC47209:m47209(int)
63374=MC47209:MC47209(String)
63375=A:foo()
63376=ResolvedBinaryType:toStringInfo(int, StringBuffer, Object, boolean)
63377=ResolvedBinaryType:getFullyQualifiedParameterizedName()
63378=ResolvedBinaryType:isResolved()
63379=ResolvedBinaryType:getKey(boolean)
63380=ResolvedBinaryType:ResolvedBinaryType(JavaElement, String, String)
63381=ResolvedBinaryType:unresolved()
63382=ResolvedBinaryType:getKey()
63383=X02:foo(int, int)
63384=A:getMyObject()
63385=JarEntryDirectory:JarEntryDirectory(String)
63386=JarEntryDirectory:toString()
63387=JarEntryDirectory:setChildren(IJarEntryResource[])
63388=JarEntryDirectory:isFile()
63389=JarEntryDirectory:getContents()
63390=JarEntryDirectory:getChildren()
63391=JarEntryDirectory:clone(Object)
63392=ReadAnnotationProcessorFactory:ReadAnnotationProcessorFactory()
63393=ReadAnnotationProcessorFactory:getProcessorFor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
63394=AssistTypeParameter:AssistTypeParameter(JavaElement, String, Map)
63395=AssistTypeParameter:getElementInfo(IProgressMonitor)
63396=FormaterBug:method2()
63397=FormaterBug:method6()
63398=FormaterBug:method4()
63399=FormaterBug:main(String[])
63400=FormaterBug:method1()
63401=FormaterBug:method5()
63402=FormaterBug:method3()
63403=FormaterBug:method7()
63404=MessagerAnnotationProcessor:MessagerAnnotationProcessor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
63405=MessagerAnnotationProcessor:process()
63406=Example:bar(int)
63407=X:main(String[])
63408=TryStatementTest:test049()
63409=TryStatementTest:test003()
63410=TryStatementTest:suite()
63411=TryStatementTest:test038()
63412=TryStatementTest:test027()
63413=TryStatementTest:test016()
63414=TryStatementTest:test001()
63415=TryStatementTest:test047()
63416=TryStatementTest:test036()
63417=TryStatementTest:test025()
63418=TryStatementTest:test014()
63419=TryStatementTest:test007()
63420=TryStatementTest:test060()
63421=TryStatementTest:test073()
63422=TryStatementTest:test005()
63423=TryStatementTest:testBug387612b()
63424=TryStatementTest:test029()
63425=TryStatementTest:_test056()
63426=TryStatementTest:test018()
63427=TryStatementTest:TryStatementTest(String)
63428=TryStatementTest:test071()
63429=TryStatementTest:test064()
63430=TryStatementTest:test053()
63431=TryStatementTest:test042()
63432=TryStatementTest:test031()
63433=TryStatementTest:test009()
63434=TryStatementTest:test062()
63435=TryStatementTest:getCompilerOptions()
63436=TryStatementTest:test051()
63437=TryStatementTest:test040()
63438=TryStatementTest:test068()
63439=TryStatementTest:test022()
63440=TryStatementTest:test057()
63441=TryStatementTest:test011()
63442=TryStatementTest:test046()
63443=TryStatementTest:test035()
63444=TryStatementTest:test066()
63445=TryStatementTest:test020()
63446=TryStatementTest:test055()
63447=TryStatementTest:test044()
63448=TryStatementTest:test033()
63449=TryStatementTest:test026()
63450=TryStatementTest:test015()
63451=TryStatementTest:test004()
63452=TryStatementTest:test039()
63453=TryStatementTest:test024()
63454=TryStatementTest:test059()
63455=TryStatementTest:test013()
63456=TryStatementTest:test002()
63457=TryStatementTest:test048()
63458=TryStatementTest:testBug387612()
63459=TryStatementTest:test037()
63460=TryStatementTest:test019()
63461=TryStatementTest:test072()
63462=TryStatementTest:test008()
63463=TryStatementTest:testBug387612c()
63464=TryStatementTest:test050()
63465=TryStatementTest:test028()
63466=TryStatementTest:testClass()
63467=TryStatementTest:test017()
63468=TryStatementTest:test070()
63469=TryStatementTest:test006()
63470=TryStatementTest:test041()
63471=TryStatementTest:test030()
63472=TryStatementTest:test065()
63473=TryStatementTest:test054()
63474=TryStatementTest:test074()
63475=TryStatementTest:test063()
63476=TryStatementTest:test052()
63477=TryStatementTest:test045()
63478=TryStatementTest:test034()
63479=TryStatementTest:test069()
63480=TryStatementTest:test023()
63481=TryStatementTest:test058()
63482=TryStatementTest:test012()
63483=TryStatementTest:test043()
63484=TryStatementTest:test032()
63485=TryStatementTest:test067()
63486=TryStatementTest:test021()
63487=TryStatementTest:test042_not_shared()
63488=TryStatementTest:test010()
63489=ReflectionToStringBuilder:toString(Object)
63490=ReflectionToStringBuilder:ReflectionToStringBuilder(Object, ToStringStyle)
63491=ReflectionToStringBuilder:unregisterObject()
63492=ReflectionToStringBuilder:register(Object)
63493=ReflectionToStringBuilder:appendFieldsIn(Class)
63494=ReflectionToStringBuilder:ReflectionToStringBuilder(Object, ToStringStyle, StringBuffer)
63495=ReflectionToStringBuilder:accept(Field)
63496=ReflectionToStringBuilder:reflectionAppendArray(Object)
63497=ReflectionToStringBuilder:getUpToClass()
63498=ReflectionToStringBuilder:toString(Object, ToStringStyle, boolean, Class)
63499=ReflectionToStringBuilder:isAppendTransients()
63500=ReflectionToStringBuilder:setAppendTransients(boolean)
63501=ReflectionToStringBuilder:toString(Object, ToStringStyle, boolean, boolean, Class)
63502=ReflectionToStringBuilder:toString()
63503=ReflectionToStringBuilder:toString(Object, ToStringStyle, boolean, boolean)
63504=ReflectionToStringBuilder:getRegistry()
63505=ReflectionToStringBuilder:unregister(Object)
63506=ReflectionToStringBuilder:isRegistered(Object)
63507=ReflectionToStringBuilder:ReflectionToStringBuilder(Object)
63508=ReflectionToStringBuilder:ReflectionToStringBuilder(Object, ToStringStyle, StringBuffer, Class, boolean)
63509=ReflectionToStringBuilder:setAppendStatics(boolean)
63510=ReflectionToStringBuilder:ReflectionToStringBuilder(Object, ToStringStyle, StringBuffer, Class, boolean, boolean)
63511=ReflectionToStringBuilder:isAppendStatics()
63512=ReflectionToStringBuilder:toString(Object, ToStringStyle)
63513=ReflectionToStringBuilder:setUpToClass(Class)
63514=ReflectionToStringBuilder:toString(Object, ToStringStyle, boolean)
63515=ReflectionToStringBuilder:getValue(Field)
63516=ReflectionToStringBuilder:registerObject()
63517=MethodInfo:isSynthetic()
63518=MethodInfo:getName()
63519=MethodInfo:sizeInBytes()
63520=MethodInfo:getCodeAttribute()
63521=MethodInfo:getDescriptorIndex()
63522=MethodInfo:MethodInfo(byte, IConstantPool, int, int)
63523=MethodInfo:getAttributes()
63524=MethodInfo:getAccessFlags()
63525=MethodInfo:isNative()
63526=MethodInfo:isClinit()
63527=MethodInfo:isAbstract()
63528=MethodInfo:isDeprecated()
63529=MethodInfo:getDescriptor()
63530=MethodInfo:getAttributeCount()
63531=MethodInfo:getExceptionAttribute()
63532=MethodInfo:isConstructor()
63533=MethodInfo:getNameIndex()
63534=ImportEditor:createTextEdit(Collection<ImportEntry>)
63535=ImportEditor:ImportEditor(String, boolean, int, ImportGroupComparator, List<OriginalImportEntry>, RewriteSite, ImportDeclarationWriter)
63536=ImportEditor:determineNewDelimiter(ImportEntry, ImportEntry, Collection<ImportComment>)
63537=ImportEditor:needsStandardDelimiter(ImportEntry, ImportEntry, boolean)
63538=ImportEditor:relocateComments(Collection<ImportComment>, int)
63539=ImportEditor:preserveStationaryImport(OriginalImportEntry)
63540=ImportEditor:deleteRemainingText(IRegion, Collection<TextEdit>)
63541=ImportEditor:determineEditsForImports(IRegion, Collection<ImportEntry>)
63542=ImportEditor:createDelimiter(int)
63543=ImportEditor:OriginalImportsCursor:OriginalImportsCursor(int, Collection<OriginalImportEntry>)
63544=ImportEditor:placeResultantImports(OriginalImportsCursor, Collection<ImportEntry>, Map<ImportEntry, Collection<ImportComment>>)
63545=ImportEditor:mapPrecedingImports(Collection<? extends ImportEntry>)
63546=ImportEditor:moveOriginalImport(OriginalImportEntry, int)
63547=ImportEditor:placeNewImport(ImportEntry, int)
63548=ImportEditor:ImportEdits:ImportEdits(Collection<TextEdit>, Collection<TextEdit>)
63549=ImportEditor:containsFloatingComment(Iterable<ImportComment>)
63550=ImportEditor:OriginalImportsCursor:advance()
63551=A:foo()
63552=ITypeAnnotationWalker:getAnnotationsAtCursor(int)
63553=ITypeAnnotationWalker:toTypeArgument(int)
63554=ITypeAnnotationWalker:toMethodParameter(short)
63555=ITypeAnnotationWalker:toSupertype(short, char[])
63556=ITypeAnnotationWalker:toMethodReturn()
63557=ITypeAnnotationWalker:toTypeParameter(boolean, int)
63558=ITypeAnnotationWalker:toTypeParameterBounds(boolean, int)
63559=ITypeAnnotationWalker:toField()
63560=ITypeAnnotationWalker:toWildcardBound()
63561=ITypeAnnotationWalker:toNextNestedType()
63562=ITypeAnnotationWalker:toTypeBound(short)
63563=ITypeAnnotationWalker:toThrows(int)
63564=ITypeAnnotationWalker:toNextArrayDimension()
63565=ITypeAnnotationWalker:toReceiver()
63566=JavaProjectTests:testGetNonJavaResources1()
63567=JavaProjectTests:testPackageFragmentRootRawEntry2()
63568=JavaProjectTests:testAddExternalLibFolder5()
63569=JavaProjectTests:testExtraJavaLikeExtension1()
63570=JavaProjectTests:lastlyTestDeletePackageWithAutobuild()
63571=JavaProjectTests:testAddZIPArchive5()
63572=JavaProjectTests:testProjectGetPackageFragments()
63573=JavaProjectTests:testSourceFolderWithJarName()
63574=JavaProjectTests:testFindPackageFragmentRootFromClasspathEntry()
63575=JavaProjectTests:testBug360164()
63576=JavaProjectTests:testPackageFragmentNonJavaResources05()
63577=JavaProjectTests:testProjectOpen3()
63578=JavaProjectTests:testPackageFragmentNonJavaResources03()
63579=JavaProjectTests:testAddZIPArchive3()
63580=JavaProjectTests:testChangeZIPArchive2()
63581=JavaProjectTests:testPackageFragmentRootCorrespondingResource()
63582=JavaProjectTests:testRootGetPackageFragments()
63583=JavaProjectTests:testAddExternalLibFolder1()
63584=JavaProjectTests:testRemoveExternalLibFolder1()
63585=JavaProjectTests:testFolderWithDotName()
63586=JavaProjectTests:testPackageFragmentNonJavaResources09()
63587=JavaProjectTests:testChangeOutputLocation()
63588=JavaProjectTests:testProjectImport2()
63589=JavaProjectTests:testAddExternalLibFolder3()
63590=JavaProjectTests:testFindTypeAfterSetClasspath()
63591=JavaProjectTests:testRemoveExternalLibFolder3()
63592=JavaProjectTests:testInternalArchiveCorrespondingResource()
63593=JavaProjectTests:testBug351697()
63594=JavaProjectTests:testSourceMethodCorrespondingResource()
63595=JavaProjectTests:testExternalArchiveCorrespondingResource()
63596=JavaProjectTests:testPackageFragmentNonJavaResources07()
63597=JavaProjectTests:testFindElementClassFile()
63598=JavaProjectTests:testPackageFragmentNonJavaResources10()
63599=JavaProjectTests:testPackageFragmentCorrespondingResource()
63600=JavaProjectTests:testFindElementInvalidPath()
63601=JavaProjectTests:testBug183923()
63602=JavaProjectTests:testProjectImport3()
63603=JavaProjectTests:testRootGetPackageFragments3()
63604=JavaProjectTests:testPackageFragmentRootNonJavaResources1()
63605=JavaProjectTests:testBug360164a()
63606=JavaProjectTests:testProjectImport()
63607=JavaProjectTests:suite()
63608=JavaProjectTests:testBinaryTypeCorrespondingResource()
63609=JavaProjectTests:testRemoveZIPArchive4()
63610=JavaProjectTests:testPackageFragmentRootNonJavaResources3()
63611=JavaProjectTests:testUserLibrary()
63612=JavaProjectTests:testFindElementPrereqSimpleProject()
63613=JavaProjectTests:testClassFileCorrespondingResource()
63614=JavaProjectTests:testBug347386()
63615=JavaProjectTests:testPackageFragmentNonJavaResources01()
63616=JavaProjectTests:testRemoveZIPArchive2()
63617=JavaProjectTests:testPackageFragmentRootNonJavaResources5()
63618=JavaProjectTests:testIsDefaultPackage()
63619=JavaProjectTests:testPackageFragmentRootRawEntry4()
63620=JavaProjectTests:testPackageFragmentNonJavaResources12()
63621=JavaProjectTests:testGetRequiredProjectNames()
63622=JavaProjectTests:testFindElementCompilationUnit()
63623=JavaProjectTests:testGetNonJavaResources4()
63624=JavaProjectTests:testChangeExternalLibFolder1()
63625=JavaProjectTests:testProjectOpen()
63626=JavaProjectTests:testPackageFragmentIsStructureKnown1()
63627=JavaProjectTests:JavaProjectTests(String)
63628=JavaProjectTests:testPackageFragmentRootNonJavaResources7()
63629=JavaProjectTests:testOutputLocationNestedInRoot()
63630=JavaProjectTests:testAddZIPArchive4()
63631=JavaProjectTests:testPackageFragmentNonJavaResources06()
63632=JavaProjectTests:testChangeZIPArchive1()
63633=JavaProjectTests:testArchiveClassFileCorrespondingResource()
63634=JavaProjectTests:testProjectCorrespondingResource()
63635=JavaProjectTests:testGetNonJavaResources2()
63636=JavaProjectTests:testProjectOpen2()
63637=JavaProjectTests:testPackageFragmentRootRawEntry1()
63638=JavaProjectTests:testAddExternalLibFolder6()
63639=JavaProjectTests:testExtraJavaLikeExtension2()
63640=JavaProjectTests:testPackageFragmentRootNonJavaResources9()
63641=JavaProjectTests:testBug490724()
63642=JavaProjectTests:testFindElementPackage()
63643=JavaProjectTests:testPackageFragmentNonJavaResources04()
63644=JavaProjectTests:testAddZIPArchive2()
63645=JavaProjectTests:testAddProjectPrerequisite()
63646=JavaProjectTests:testChangeZIPArchive3()
63647=JavaProjectTests:testProjectClose()
63648=JavaProjectTests:testProjectGetChildren()
63649=JavaProjectTests:testPackageFragmentHasSubpackages()
63650=JavaProjectTests:testAddExternalLibFolder2()
63651=JavaProjectTests:testBug148859()
63652=JavaProjectTests:testAddZIPArchive6()
63653=JavaProjectTests:testJarPackageFragmentCorrespondingResource()
63654=JavaProjectTests:testBug360317()
63655=JavaProjectTests:testPackageFragmentNonJavaResources08()
63656=JavaProjectTests:testCompilationUnitCorrespondingResource()
63657=JavaProjectTests:testAddExternalLibFolder4()
63658=JavaProjectTests:testRemoveExternalLibFolder2()
63659=JavaProjectTests:testOutputLocationNotAddedAsPackageFragment()
63660=JavaProjectTests:testPackageFragmentRootNonJavaResources2()
63661=JavaProjectTests:testBug491354()
63662=JavaProjectTests:testRemoveZIPArchive3()
63663=JavaProjectTests:testPackageFragmentRootNonJavaResources4()
63664=JavaProjectTests:testPackageFragmentRenameAndCreate()
63665=JavaProjectTests:testPackageFragmentNonJavaResources02()
63666=JavaProjectTests:testGetNonJavaResources5()
63667=JavaProjectTests:testChangeExternalLibFolder2()
63668=JavaProjectTests:testRemoveZIPArchive1()
63669=JavaProjectTests:testPackageFragmentPackageInfoClass()
63670=JavaProjectTests:testPackageFragmentIsStructureKnown2()
63671=JavaProjectTests:testPackageFragmentRootNonJavaResources6()
63672=JavaProjectTests:testGetClasspathOnClosedProject()
63673=JavaProjectTests:testBug462756()
63674=JavaProjectTests:testAddNonJavaResourcePackageFragmentRoot()
63675=JavaProjectTests:testAddZIPArchive1()
63676=JavaProjectTests:tearDownSuite()
63677=JavaProjectTests:testGetNonJavaResources3()
63678=JavaProjectTests:testPackageFragmentRootNonJavaResources8()
63679=JavaProjectTests:testRootGetPackageFragments2()
63680=JavaProjectTests:testJdkLevelRoot()
63681=JavaProjectTests:testPackageFragmentRootRawEntry3()
63682=JavaProjectTests:testFindElementCompilationUnitDefaultPackage()
63683=JavaProjectTests:testPackageFragmentNonJavaResources11()
63684=JavaProjectTests:setUpSuite()
63685=JavadocHiddenRef:hidden()
63686=X05:Y05:foo()
63687=NoOpAnnotationProcessor:process()
63688=A:foo()
63689=WildcardBinding:getIntersectingTypes()
63690=WildcardBinding:hasTypeBit(int)
63691=WildcardBinding:determineNullBitsFromDeclaration(Scope, Wildcard)
63692=WildcardBinding:sourceName()
63693=WildcardBinding:computeUniqueKey(boolean)
63694=WildcardBinding:setTypeAnnotations(AnnotationBinding[], boolean)
63695=WildcardBinding:isUnboundWildcard()
63696=WildcardBinding:toString()
63697=WildcardBinding:initialize(ReferenceBinding, TypeBinding, TypeBinding[])
63698=WildcardBinding:hashCode()
63699=WildcardBinding:additionalBounds()
63700=WildcardBinding:resolve()
63701=WildcardBinding:constantPoolName()
63702=WildcardBinding:mentionsAny(TypeBinding[], int)
63703=WildcardBinding:debugName()
63704=WildcardBinding:canBeInstantiated()
63705=WildcardBinding:readableName()
63706=WildcardBinding:superInterfaces()
63707=WildcardBinding:unannotated()
63708=WildcardBinding:bound()
63709=WildcardBinding:isWildcard()
63710=WildcardBinding:swapUnresolved(UnresolvedReferenceBinding, ReferenceBinding, LookupEnvironment)
63711=WildcardBinding:uncapture(Scope)
63712=WildcardBinding:boundCheck(TypeBinding)
63713=WildcardBinding:substituteInferenceVariable(InferenceVariable, TypeBinding)
63714=WildcardBinding:evaluateNullAnnotations(Scope, Wildcard)
63715=WildcardBinding:collectInferenceVariables(Set<InferenceVariable>)
63716=WildcardBinding:clone(TypeBinding)
63717=WildcardBinding:isIntersectionType()
63718=WildcardBinding:isHierarchyConnected()
63719=WildcardBinding:superclass()
63720=WildcardBinding:annotatedDebugName()
63721=WildcardBinding:updateTagBits()
63722=WildcardBinding:rank()
63723=WildcardBinding:isProperType(boolean)
63724=WildcardBinding:allBounds()
63725=WildcardBinding:typeVariable()
63726=WildcardBinding:exitRecursiveFunction()
63727=WildcardBinding:genericTypeSignature()
63728=WildcardBinding:withoutToplevelNullAnnotation()
63729=WildcardBinding:boundKind()
63730=WildcardBinding:shortReadableName()
63731=WildcardBinding:kind()
63732=WildcardBinding:acceptsNonNullDefault()
63733=WildcardBinding:collectMissingTypes(List<TypeBinding>)
63734=WildcardBinding:nullAnnotatedReadableName(CompilerOptions, boolean)
63735=WildcardBinding:isSuperclassOf(ReferenceBinding)
63736=WildcardBinding:erasure()
63737=WildcardBinding:enterRecursiveFunction()
63738=WildcardBinding:actualType()
63739=WildcardBinding:signature()
63740=WildcardBinding:WildcardBinding(ReferenceBinding, int, TypeBinding, TypeBinding[], int, LookupEnvironment)
63741=WildcardBinding:collectSubstitutes(Scope, TypeBinding, InferenceContext, int)
63742=X14:foo()
63743=Test:main(String[])
63744=EclipseBatchRequestor:acceptResult(CompilationResult)
63745=EclipseBatchRequestor:EclipseBatchRequestor(Main, DiagnosticListener<? super JavaFileObject>, DefaultProblemFactory)
63746=EclipseBatchRequestor:reportProblems(CompilationResult)
63747=DeleteElementsOperation:DeleteElementsOperation(IJavaElement[], boolean)
63748=DeleteElementsOperation:getSchedulingRule()
63749=DeleteElementsOperation:groupElements()
63750=DeleteElementsOperation:getMainTaskName()
63751=DeleteElementsOperation:verify(IJavaElement)
63752=DeleteElementsOperation:deleteElement(IJavaElement, ICompilationUnit)
63753=DeleteElementsOperation:processElements()
63754=DeleteElementsOperation:initASTParser()
63755=DeleteElementsOperation:processElement(IJavaElement)
63756=RecoveredMethod:updateBodyStart(int)
63757=RecoveredMethod:updateFromParserState()
63758=RecoveredMethod:add(Statement, int)
63759=RecoveredMethod:updateParseTree()
63760=RecoveredMethod:updatedMethodDeclaration()
63761=RecoveredMethod:updateSourceEndIfNecessary(int, int)
63762=RecoveredMethod:add(TypeDeclaration, int)
63763=RecoveredMethod:add(LocalDeclaration, int)
63764=RecoveredMethod:add(Block, int)
63765=RecoveredMethod:sourceEnd()
63766=RecoveredMethod:bodyStartsAtHeaderEnd()
63767=RecoveredMethod:toString(int)
63768=RecoveredMethod:RecoveredMethod(AbstractMethodDeclaration, RecoveredElement, int, Parser)
63769=RecoveredMethod:updateOnOpeningBrace(int, int)
63770=RecoveredMethod:add(FieldDeclaration, int)
63771=RecoveredMethod:parseTree()
63772=SearchRequestor:endReporting()
63773=SearchRequestor:enterParticipant(SearchParticipant)
63774=SearchRequestor:exitParticipant(SearchParticipant)
63775=SearchRequestor:beginReporting()
63776=SearchRequestor:acceptSearchMatch(SearchMatch)
63777=NullConsoleReader:NullConsoleReader(String, InputStream)
63778=NullConsoleReader:readerLoop()
63779=X:main(String[])
63780=X:foo()
63781=B:foo()
63782=ClasspathLocation:forSourceFolder(IContainer, IContainer, char[][], char[][], boolean)
63783=ClasspathLocation:findClass(String, String, String)
63784=ClasspathLocation:isOutputFolder()
63785=ClasspathLocation:getProjectRelativePath()
63786=ClasspathLocation:isPackage(String)
63787=ClasspathLocation:forLibrary(String, long, AccessRuleSet, IPath)
63788=ClasspathLocation:cleanup()
63789=ClasspathLocation:reset()
63790=ClasspathLocation:debugPathString()
63791=ClasspathLocation:forLibrary(String, AccessRuleSet, IPath)
63792=ClasspathLocation:forBinaryFolder(IContainer, boolean, AccessRuleSet, IPath)
63793=ClasspathLocation:forLibrary(IFile, AccessRuleSet, IPath)
63794=CorrectReturnType1:foo()
63795=X15b:foo()
63796=MostSpecificExceptionMethodBinding:MostSpecificExceptionMethodBinding(MethodBinding, ReferenceBinding[])
63797=MostSpecificExceptionMethodBinding:original()
63798=CommentsTestSuite:suite()
63799=CommentsTestSuite:CommentsTestSuite()
63800=CopyMoveTests:movePositive(IJavaElement[], IJavaElement[], IJavaElement[], String[], boolean, boolean, IProgressMonitor)
63801=CopyMoveTests:CopyMoveTests(String)
63802=CopyMoveTests:generateHandle(IJavaElement, String, IJavaElement)
63803=CopyMoveTests:copyNegative(IJavaElement[], IJavaElement[], IJavaElement[], String[], boolean, int)
63804=CopyMoveTests:movePositive(IJavaElement[], IJavaElement[], IJavaElement[], String[], boolean)
63805=CopyMoveTests:moveNegative(IJavaElement, IJavaElement, IJavaElement, String, boolean, int)
63806=CopyMoveTests:movePositive(IJavaElement, IJavaElement, IJavaElement, String, boolean)
63807=CopyMoveTests:isMainType(IJavaElement, IJavaElement)
63808=CopyMoveTests:moveNegative(IJavaElement[], IJavaElement[], IJavaElement[], String[], boolean, int)
63809=CopyMoveTests:movePositive(IJavaElement[], IJavaElement[], IJavaElement[], String[], boolean, IProgressMonitor)
63810=CopyMoveTests:copyPositive(IJavaElement, IJavaElement, IJavaElement, String, boolean)
63811=CopyMoveTests:copyNegative(IJavaElement, IJavaElement, IJavaElement, String, boolean, int)
63812=RecoveredField:add(Statement, int)
63813=RecoveredField:add(TypeDeclaration, int)
63814=RecoveredField:updateParseTree()
63815=RecoveredField:sourceEnd()
63816=RecoveredField:updateOnClosingBrace(int, int)
63817=RecoveredField:toString(int)
63818=RecoveredField:RecoveredField(FieldDeclaration, RecoveredElement, int)
63819=RecoveredField:attach(RecoveredAnnotation[], int, int, int)
63820=RecoveredField:add(LocalDeclaration, int)
63821=RecoveredField:updateSourceEndIfNecessary(int, int)
63822=RecoveredField:RecoveredField(FieldDeclaration, RecoveredElement, int, Parser)
63823=RecoveredField:add(FieldDeclaration, int)
63824=RecoveredField:updatedFieldDeclaration(int, Set<TypeDeclaration>)
63825=RecoveredField:parseTree()
63826=RecoveredField:updateOnOpeningBrace(int, int)
63827=X03_spaces:foo(String)
63828=ResolvedSourceType:toStringInfo(int, StringBuffer, Object, boolean)
63829=ResolvedSourceType:isResolved()
63830=ResolvedSourceType:ResolvedSourceType(JavaElement, String, String)
63831=ResolvedSourceType:getKey()
63832=ResolvedSourceType:getFullyQualifiedParameterizedName()
63833=ResolvedSourceType:unresolved()
63834=SuperMethodInvocation:arguments()
63835=SuperMethodInvocation:typeArguments()
63836=SuperMethodInvocation:internalGetSetChildProperty(ChildPropertyDescriptor, boolean, ASTNode)
63837=SuperMethodInvocation:internalGetChildListProperty(ChildListPropertyDescriptor)
63838=SuperMethodInvocation:isResolvedTypeInferredFromExpectedType()
63839=SuperMethodInvocation:setName(SimpleName)
63840=SuperMethodInvocation:resolveMethodBinding()
63841=SuperMethodInvocation:getName()
63842=SuperMethodInvocation:accept0(ASTVisitor)
63843=SuperMethodInvocation:treeSize()
63844=SuperMethodInvocation:clone0(AST)
63845=SuperMethodInvocation:internalStructuralPropertiesForType(int)
63846=SuperMethodInvocation:getQualifier()
63847=SuperMethodInvocation:getNodeType0()
63848=SuperMethodInvocation:propertyDescriptors(int)
63849=SuperMethodInvocation:memSize()
63850=SuperMethodInvocation:subtreeMatch0(ASTMatcher, Object)
63851=SuperMethodInvocation:setQualifier(Name)
63852=SuperMethodInvocation:SuperMethodInvocation(AST)
63853=IAnnotationDefaultAttribute:getMemberValue()
63854=X02:foo()
63855=ASTConverter16Test:suite()
63856=ASTConverter16Test:tearDown()
63857=ASTConverter16Test:test0001()
63858=ASTConverter16Test:ASTConverter16Test(String)
63859=ASTConverter16Test:setUpSuite()
63860=AST:newName(String[])
63861=AST:resolveWellKnownType(String)
63862=AST:newStringLiteral()
63863=AST:newNumberLiteral(String)
63864=AST:newArrayInitializer()
63865=AST:newMethodRefParameter()
63866=AST:newModifiers(int)
63867=AST:newQualifiedType(Type, SimpleName)
63868=AST:newSuperMethodReference()
63869=AST:newCatchClause()
63870=AST:modificationCount()
63871=AST:newName(String)
63872=AST:newEnhancedForStatement()
63873=AST:newIfStatement()
63874=AST:newSwitchCase()
63875=AST:createInstance(Class)
63876=AST:preReplaceChildEvent(ASTNode, ASTNode, ASTNode, StructuralPropertyDescriptor)
63877=AST:setOriginalModificationCount(long)
63878=AST:newAssertStatement()
63879=AST:getDefaultNodeFlag()
63880=AST:parseCompilationUnit(char[], String, IJavaProject)
63881=AST:newTypeLiteral()
63882=AST:newAssignment()
63883=AST:newPrefixExpression()
63884=AST:newCastExpression()
63885=AST:newVariableDeclarationFragment()
63886=AST:postCloneNodeEvent(ASTNode, ASTNode)
63887=AST:newSimpleType(Name)
63888=AST:preRemoveChildEvent(ASTNode, ASTNode, StructuralPropertyDescriptor)
63889=AST:newTextElement()
63890=AST:newLineComment()
63891=AST:newPackageDeclaration()
63892=AST:newInstanceofExpression()
63893=AST:setDefaultNodeFlag(int)
63894=AST:newPostfixExpression()
63895=AST:newVariableDeclarationExpression(VariableDeclarationFragment)
63896=AST:hasBindingsRecovery()
63897=AST:newEnumConstantDeclaration()
63898=AST:recordModifications(CompilationUnit)
63899=AST:convertCompilationUnit(int, org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration, char[], Map, boolean, org.eclipse.jdt.internal.core.CompilationUnit, int, IProgressMonitor)
63900=AST:hasStatementsRecovery()
63901=AST:reenableEvents()
63902=AST:newSuperFieldAccess()
63903=AST:AST(Map)
63904=AST:newAST(int)
63905=AST:newBreakStatement()
63906=AST:newConditionalExpression()
63907=AST:newMethodDeclaration()
63908=AST:createInstance(int)
63909=AST:newTypeParameter()
63910=AST:convertCompilationUnit(int, org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration, Map, boolean, org.eclipse.jdt.internal.core.CompilationUnit, int, IProgressMonitor)
63911=AST:newTypeDeclarationStatement(TypeDeclaration)
63912=AST:newWildcardType()
63913=AST:newFieldAccess()
63914=AST:newReturnStatement()
63915=AST:newTypeDeclaration()
63916=AST:newUnionType()
63917=AST:newArrayAccess()
63918=AST:newImportDeclaration()
63919=AST:newExpressionStatement(Expression)
63920=AST:getEventHandler()
63921=AST:newForStatement()
63922=AST:newArrayType(Type)
63923=AST:newAnnotationTypeDeclaration()
63924=AST:newIntersectionType()
63925=AST:newSynchronizedStatement()
63926=AST:newParenthesizedExpression()
63927=AST:newConstructorInvocation()
63928=AST:newNormalAnnotation()
63929=AST:newMethodRef()
63930=AST:newClassInstanceCreation()
63931=AST:newSingleVariableDeclaration()
63932=AST:postReplaceChildEvent(ASTNode, ASTNode, ASTNode, StructuralPropertyDescriptor)
63933=AST:getBindingResolver()
63934=AST:postValueChangeEvent(ASTNode, SimplePropertyDescriptor)
63935=AST:newCompilationUnit()
63936=AST:newMarkerAnnotation()
63937=AST:newWhileStatement()
63938=AST:newVariableDeclarationStatement(VariableDeclarationFragment)
63939=AST:parseCompilationUnit(char[])
63940=AST:setFlag(int)
63941=AST:apiLevel()
63942=AST:newInfixExpression()
63943=AST:newPrimitiveType(PrimitiveType.Code)
63944=AST:hasResolvedBindings()
63945=AST:newDimension()
63946=AST:newExpressionMethodReference()
63947=AST:parseCompilationUnit(IClassFile, boolean)
63948=AST:newDoStatement()
63949=AST:newTypeMethodReference()
63950=AST:postAddChildEvent(ASTNode, ASTNode, StructuralPropertyDescriptor)
63951=AST:newNameQualifiedType(Name, SimpleName)
63952=AST:newInitializer()
63953=AST:setArrayComponentType(ArrayType, Type)
63954=AST:disableEvents()
63955=AST:newLabeledStatement()
63956=AST:newAnnotationTypeMemberDeclaration()
63957=AST:newMemberValuePair()
63958=AST:newContinueStatement()
63959=AST:newTryStatement()
63960=AST:newFieldDeclaration(VariableDeclarationFragment)
63961=AST:newSimpleName(String)
63962=AST:AST(int)
63963=AST:newJavadoc()
63964=AST:newTypeDeclarationStatement(AbstractTypeDeclaration)
63965=AST:newModifier(Modifier.ModifierKeyword)
63966=AST:parseCompilationUnit(ICompilationUnit, boolean)
63967=AST:newBooleanLiteral(boolean)
63968=AST:newNullLiteral()
63969=AST:setEventHandler(NodeEventHandler)
63970=AST:internalNewName(String[])
63971=AST:newAnonymousClassDeclaration()
63972=AST:newThrowStatement()
63973=AST:newCharacterLiteral()
63974=AST:preAddChildEvent(ASTNode, ASTNode, StructuralPropertyDescriptor)
63975=AST:AST()
63976=AST:newNumberLiteral()
63977=AST:postRemoveChildEvent(ASTNode, ASTNode, StructuralPropertyDescriptor)
63978=AST:preValueChangeEvent(ASTNode, SimplePropertyDescriptor)
63979=AST:modifying()
63980=AST:newEnumDeclaration()
63981=AST:newSuperMethodInvocation()
63982=AST:unsupportedIn2()
63983=AST:newBlock()
63984=AST:preCloneNodeEvent(ASTNode)
63985=AST:newMethodInvocation()
63986=AST:newLambdaExpression()
63987=AST:supportedOnlyIn2()
63988=AST:newArrayCreation()
63989=AST:newQualifiedName(Name, SimpleName)
63990=AST:newParameterizedType(Type)
63991=AST:newArrayType(Type, int)
63992=AST:rewrite(IDocument, Map)
63993=AST:setBindingResolver(BindingResolver)
63994=AST:newSuperConstructorInvocation()
63995=AST:newEmptyStatement()
63996=AST:newThisExpression()
63997=AST:newSingleMemberAnnotation()
63998=AST:newTagElement()
63999=AST:newMemberRef()
64000=AST:newSwitchStatement()
64001=AST:newCreationReference()
64002=AST:newBlockComment()
64003=Problem:getLocation()
64004=Problem:getSeverity()
64005=Problem:toString()
64006=Problem:compareTo(Object)
64007=Problem:equals(Object)
64008=Problem:getStart()
64009=Problem:getResourcePath()
64010=Problem:getCategoryId()
64011=Problem:getMessage()
64012=Problem:Problem(String, String, IPath, int, int, int, int)
64013=Problem:Problem(IMarker)
64014=Problem:getEnd()
64015=Problem:getSourceId()
64016=JavaSearchTests:testTypeDeclaration03()
64017=JavaSearchTests:testStaticImportPackage02()
64018=JavaSearchTests:testMethodReference15()
64019=JavaSearchTests:testEnum02()
64020=JavaSearchTests:testCamelCaseTypePattern11_CamelCaseSamePartCount()
64021=JavaSearchTests:testConstructorReference09()
64022=JavaSearchTests:testPackageDeclaration3()
64023=JavaSearchTests:testVarargs05()
64024=JavaSearchTests:setUpSuite()
64025=JavaSearchTests:testStaticImportField03()
64026=JavaSearchTests:testTypeReference30()
64027=JavaSearchTests:testAnnotationType02()
64028=JavaSearchTests:testCamelCaseTypePattern07_CamelCaseSamePartCount()
64029=JavaSearchTests:testInterfaceImplementors2()
64030=JavaSearchTests:testTypeParameterTypes03()
64031=JavaSearchTests:testMethodDeclaration05()
64032=JavaSearchTests:testMethodReference04()
64033=JavaSearchTests:testSearchScope05()
64034=JavaSearchTests:testFieldReference20()
64035=JavaSearchTests:testTypeDeclaration01()
64036=JavaSearchTests:testConstructorReference07()
64037=JavaSearchTests:testTypeReference10()
64038=JavaSearchTests:testMethodReference17()
64039=JavaSearchTests:testEnum04()
64040=JavaSearchTests:testSearchMethodInBinaryWithResolution()
64041=JavaSearchTests:testTypeReference21()
64042=JavaSearchTests:testPackageDeclaration1()
64043=JavaSearchTests:testBug160323()
64044=JavaSearchTests:testDeclarationsOfSentMessages01()
64045=JavaSearchTests:testConstructorDeclaration01()
64046=JavaSearchTests:testTypeReference32()
64047=JavaSearchTests:testStaticImportField01()
64048=JavaSearchTests:testLocalVariableOccurrences1()
64049=JavaSearchTests:testSearchScope14()
64050=JavaSearchTests:testTypeParameterTypes01()
64051=JavaSearchTests:testPackageReference7()
64052=JavaSearchTests:testSearchScope03()
64053=JavaSearchTests:testExternalFolder1()
64054=JavaSearchTests:testMethodReference06()
64055=JavaSearchTests:testMethodDeclaration07()
64056=JavaSearchTests:testTypeOccurence4()
64057=JavaSearchTests:testConstructorReference05()
64058=JavaSearchTests:testLocalVariableDeclaration2()
64059=JavaSearchTests:testPackageDeclarationBug183062b()
64060=JavaSearchTests:testTypeDeclaration07()
64061=JavaSearchTests:testVarargs01()
64062=JavaSearchTests:copyDirectory(File, File)
64063=JavaSearchTests:testCamelCaseTypePattern12_CamelCaseSamePartCount()
64064=JavaSearchTests:testTypeReference08()
64065=JavaSearchTests:testSearchScope12()
64066=JavaSearchTests:testFieldDeclaration03()
64067=JavaSearchTests:testPackageReference5()
64068=JavaSearchTests:testLocalVariableDeclaration_Bug207257()
64069=JavaSearchTests:testFieldReference09()
64070=JavaSearchTests:testTypeReference19()
64071=JavaSearchTests:testSearchScope01()
64072=JavaSearchTests:testMethodDeclaration09()
64073=JavaSearchTests:testMethodReference08()
64074=JavaSearchTests:testConstructorReference03()
64075=JavaSearchTests:testTypeOccurence2()
64076=JavaSearchTests:testPackageDeclarationBug183062d()
64077=JavaSearchTests:testCamelCaseTypePattern08_CamelCaseSamePartCount()
64078=JavaSearchTests:testTypeDeclaration05()
64079=JavaSearchTests:testSearchScope14a()
64080=JavaSearchTests:testVarargs03()
64081=JavaSearchTests:testFieldReference18()
64082=JavaSearchTests:testSearchScope10()
64083=JavaSearchTests:testPackageDeclarationBug73551()
64084=JavaSearchTests:testFieldDeclaration01()
64085=JavaSearchTests:testPackageReference3()
64086=JavaSearchTests:testFieldReference07()
64087=JavaSearchTests:testTypeReference28()
64088=JavaSearchTests:testDeclarationOfAccessedFields1()
64089=JavaSearchTests:testPackageDeclarationBug117020()
64090=JavaSearchTests:testCamelCaseTypePattern06_CamelCase()
64091=JavaSearchTests:testTypeParameterConstructors04()
64092=JavaSearchTests:testCamelCaseTypePattern01_CamelCase()
64093=JavaSearchTests:testCamelCaseTypePattern09_CamelCase()
64094=JavaSearchTests:testCamelCaseTypePattern03_CamelCase()
64095=JavaSearchTests:testCamelCaseTypePattern04_CamelCase()
64096=JavaSearchTests:testConstructorReference02()
64097=JavaSearchTests:testDeclarationOfReferencedTypes03()
64098=JavaSearchTests:testFieldReference16()
64099=JavaSearchTests:testTypeReference04()
64100=JavaSearchTests:testCamelCaseTypePattern05_CamelCaseSamePartCount()
64101=JavaSearchTests:testPackageReference1()
64102=JavaSearchTests:testFieldReference05()
64103=JavaSearchTests:testCamelCaseTypePattern02_CamelCaseSamePartCount()
64104=JavaSearchTests:testTypeReference15()
64105=JavaSearchTests:testMethodDeclaration10()
64106=JavaSearchTests:testDeclarationOfAccessedFields3()
64107=JavaSearchTests:testTypeParameterConstructors02()
64108=JavaSearchTests:testSearchFieldInBinaryWithResolution()
64109=JavaSearchTests:testAutoBoxing01()
64110=JavaSearchTests:testDeclarationOfReferencedTypes05()
64111=JavaSearchTests:testCoreException()
64112=JavaSearchTests:testFieldReference14()
64113=JavaSearchTests:testTypeReference06()
64114=JavaSearchTests:testFieldReference03()
64115=JavaSearchTests:testLocalVariableReference3()
64116=JavaSearchTests:testTypeParameterMethods05()
64117=JavaSearchTests:testTypeReference17()
64118=JavaSearchTests:testConstructorDeclaration02()
64119=JavaSearchTests:testTypeReference35()
64120=JavaSearchTests:testSearchScope08()
64121=JavaSearchTests:testMethodReference11()
64122=JavaSearchTests:testEnum06()
64123=JavaSearchTests:testStaticImportMethod02()
64124=JavaSearchTests:testTypeReference11()
64125=JavaSearchTests:testDeclarationOfReferencedTypes07()
64126=JavaSearchTests:testFieldReference12()
64127=JavaSearchTests:testCamelCaseTypePattern10_CamelCaseSamePartCount()
64128=JavaSearchTests:testTypeReference22()
64129=JavaSearchTests:testExternalFolder3()
64130=JavaSearchTests:testLocalVariableReference1()
64131=JavaSearchTests:testTypeParameterMethods03()
64132=JavaSearchTests:testFieldReference01()
64133=JavaSearchTests:testMethodDeclaration01()
64134=JavaSearchTests:testTypeDeclaration12()
64135=JavaSearchTests:testCamelCaseTypePattern13_CamelCaseSamePartCount()
64136=JavaSearchTests:testMethodReference13()
64137=JavaSearchTests:testSearchScope17()
64138=JavaSearchTests:testTypeReference26()
64139=JavaSearchTests:testTypeParameterTypes06()
64140=JavaSearchTests:testOrPattern()
64141=JavaSearchTests:testTypeReference02()
64142=JavaSearchTests:testStaticImportMethod04()
64143=JavaSearchTests:testCamelCaseTypePattern12_CamelCase()
64144=JavaSearchTests:testSearchScope06()
64145=JavaSearchTests:testTypeReference37()
64146=JavaSearchTests:testTypeReference13()
64147=JavaSearchTests:testDeclarationOfReferencedTypes09()
64148=JavaSearchTests:testFieldReference10()
64149=JavaSearchTests:testTypeReference24()
64150=JavaSearchTests:testZIPArchive1()
64151=JavaSearchTests:testMethodReference02()
64152=JavaSearchTests:testMethodDeclaration03()
64153=JavaSearchTests:testTypeParameterMethods01()
64154=JavaSearchTests:testTypeDeclaration10()
64155=JavaSearchTests:testDeclarationsOfSentMessages02()
64156=JavaSearchTests:testStaticImportField04()
64157=JavaSearchTests:testTypeReference31()
64158=JavaSearchTests:testSearchScope15()
64159=JavaSearchTests:tearDownSuite()
64160=JavaSearchTests:testTypeParameterTypes04()
64161=JavaSearchTests:testMethodReference03()
64162=JavaSearchTests:testMethodDeclaration04()
64163=JavaSearchTests:testSearchScope04()
64164=JavaSearchTests:testPackageDeclarationBug183062e()
64165=JavaSearchTests:testMethodReference16()
64166=JavaSearchTests:testSearchTypeInBinaryNoResolution()
64167=JavaSearchTests:testEnum01()
64168=JavaSearchTests:testTypeDeclaration04()
64169=JavaSearchTests:testPackageDeclaration2()
64170=JavaSearchTests:testVarargs04()
64171=JavaSearchTests:testCamelCaseTypePattern04_CamelCaseSamePartCount()
64172=JavaSearchTests:testTypeReference33()
64173=JavaSearchTests:testStaticImportField02()
64174=JavaSearchTests:testSearchScope13()
64175=JavaSearchTests:testAnnotationType01()
64176=JavaSearchTests:testTypeParameterTypes02()
64177=JavaSearchTests:testPackageReference8()
64178=JavaSearchTests:testMethodDeclaration06()
64179=JavaSearchTests:testSearchScope02()
64180=JavaSearchTests:testMethodReference05()
64181=JavaSearchTests:testExternalFolder2()
64182=JavaSearchTests:testTypeDeclaration02()
64183=JavaSearchTests:testConstructorReference08()
64184=JavaSearchTests:testEnum03()
64185=JavaSearchTests:suite()
64186=JavaSearchTests:testVarargs06()
64187=JavaSearchTests:testTypeReference20()
64188=JavaSearchTests:testStaticImportMethod01()
64189=JavaSearchTests:testFieldReference19()
64190=JavaSearchTests:testTypeReference09()
64191=JavaSearchTests:testFieldDeclaration04()
64192=JavaSearchTests:testPackageReference6()
64193=JavaSearchTests:testFieldReference08()
64194=JavaSearchTests:testMethodReference07()
64195=JavaSearchTests:testMethodDeclaration08()
64196=JavaSearchTests:testConstructorReference06()
64197=JavaSearchTests:testPackageDeclarationBug183062a()
64198=JavaSearchTests:testTypeOccurence3()
64199=JavaSearchTests:testLocalVariableDeclaration1()
64200=JavaSearchTests:testTypeDeclaration08()
64201=JavaSearchTests:testDeclarationOfAccessedFields4()
64202=JavaSearchTests:testCamelCaseTypePattern03_CamelCaseSamePartCount()
64203=JavaSearchTests:testFieldReference17()
64204=JavaSearchTests:testSearchMethodInBinaryNoResolution()
64205=JavaSearchTests:testFieldDeclaration02()
64206=JavaSearchTests:testTypeParameterConstructors06()
64207=JavaSearchTests:testPackageReference4()
64208=JavaSearchTests:testFieldReference06()
64209=JavaSearchTests:testMethodReference09()
64210=JavaSearchTests:testConstructorReference04()
64211=JavaSearchTests:testDeclarationOfReferencedTypes01()
64212=JavaSearchTests:testTypeOccurence1()
64213=JavaSearchTests:testPackageDeclarationBug183062c()
64214=JavaSearchTests:testTypeDeclaration06()
64215=JavaSearchTests:testVarargs02()
64216=JavaSearchTests:testPackageDeclaration4()
64217=JavaSearchTests:testConstructorReference01()
64218=JavaSearchTests:testDeclarationOfReferencedTypes02()
64219=JavaSearchTests:testFieldReference15()
64220=JavaSearchTests:testTypeReference05()
64221=JavaSearchTests:testCamelCaseTypePattern05_CamelCase()
64222=JavaSearchTests:testCamelCaseTypePattern07_CamelCase()
64223=JavaSearchTests:testCamelCaseTypePattern02_CamelCase()
64224=JavaSearchTests:testPackageReference2()
64225=JavaSearchTests:testCamelCaseTypePattern08_CamelCase()
64226=JavaSearchTests:testFieldReference04()
64227=JavaSearchTests:testTypeReference16()
64228=JavaSearchTests:JavaSearchTests(String)
64229=JavaSearchTests:testCamelCaseTypePattern10_CamelCase()
64230=JavaSearchTests:testTypeReference27()
64231=JavaSearchTests:testTypeParameterConstructors05()
64232=JavaSearchTests:testTypeReference38()
64233=JavaSearchTests:testDeclarationOfReferencedTypes04()
64234=JavaSearchTests:testTypeReference07()
64235=JavaSearchTests:testFieldReference13()
64236=JavaSearchTests:testTypeDeclaration09()
64237=JavaSearchTests:testCamelCaseTypePattern13_CamelCase()
64238=JavaSearchTests:testConstructorReference10()
64239=JavaSearchTests:testCamelCaseTypePattern11_CamelCase()
64240=JavaSearchTests:testSearchTypesInBinaryWithResolution()
64241=JavaSearchTests:testTypeReference18()
64242=JavaSearchTests:testFieldReference02()
64243=JavaSearchTests:testTypeParameterMethods06()
64244=JavaSearchTests:testSearchScope07a()
64245=JavaSearchTests:testBug383908()
64246=JavaSearchTests:testTypeReference29()
64247=JavaSearchTests:testDeclarationOfAccessedFields2()
64248=JavaSearchTests:testMethodDeclaration11()
64249=JavaSearchTests:testMethodReference10()
64250=JavaSearchTests:testTypeParameterConstructors03()
64251=JavaSearchTests:testDeclarationOfReferencedTypes06()
64252=JavaSearchTests:testTypeReference12()
64253=JavaSearchTests:testLocalVariableOccurrences2()
64254=JavaSearchTests:testFieldReference11()
64255=JavaSearchTests:testCamelCaseTypePattern06_CamelCaseSamePartCount()
64256=JavaSearchTests:testTypeReference23()
64257=JavaSearchTests:testTypeParameterMethods04()
64258=JavaSearchTests:testLocalVariableReference2()
64259=JavaSearchTests:testTypeDeclaration11()
64260=JavaSearchTests:testSearchFieldInBinaryNoResolution()
64261=JavaSearchTests:testTypeReference34()
64262=JavaSearchTests:testCamelCaseTypePattern09_CamelCaseSamePartCount()
64263=JavaSearchTests:testSearchScope09()
64264=JavaSearchTests:testMethodReference12()
64265=JavaSearchTests:testEnum05()
64266=JavaSearchTests:testTypeParameterConstructors01()
64267=JavaSearchTests:testStaticImportMethod03()
64268=JavaSearchTests:testCamelCaseTypePattern01_CamelCaseSamePartCount()
64269=JavaSearchTests:testDeclarationOfReferencedTypes08()
64270=JavaSearchTests:testInterfaceImplementors1()
64271=JavaSearchTests:testTypeReference03()
64272=JavaSearchTests:testZIPArchive2()
64273=JavaSearchTests:testTypeReference14()
64274=JavaSearchTests:testTypeParameterMethods02()
64275=JavaSearchTests:testMethodDeclaration02()
64276=JavaSearchTests:testMethodReference01()
64277=JavaSearchTests:testStaticImportPackage01()
64278=JavaSearchTests:testMethodReference14()
64279=JavaSearchTests:testTypeReference25()
64280=JavaSearchTests:testTypeParameterTypes05()
64281=JavaSearchTests:testTypeReference01()
64282=JavaSearchTests:testSearchScope07()
64283=JavaSearchTests:testTypeReference36()
64284=X:foo2()
64285=X:bar()
64286=X:foo()
64287=X:foo4(int)
64288=X:foo3()
64289=Y07:foo()
64290=X07:foo()
64291=JavaModelManager:containerGet(IJavaProject, IPath)
64292=JavaModelManager:VariablesAndContainersLoadHelper:loadPath()
64293=JavaModelManager:putJarTypeInfo(IJavaElement, Object)
64294=JavaModelManager:isAssumedExternalFile(IPath)
64295=JavaModelManager:getResolvedVariablePath(IPath, boolean)
64296=JavaModelManager:initializePreferences()
64297=JavaModelManager:CompilationParticipants:indexForSourceLevel(String)
64298=JavaModelManager:addExternalFile(IPath)
64299=JavaModelManager:getDefaultOptions()
64300=JavaModelManager:CompilationParticipants:getCompilationParticipants(IJavaProject)
64301=JavaModelManager:create(IResource, IJavaProject)
64302=JavaModelManager:verbose_reentering_variable_access(String, IPath)
64303=JavaModelManager:getExternalWorkingCopyProjects()
64304=JavaModelManager:VariablesAndContainersSaveHelper:savePath(IPath)
64305=JavaModelManager:traceVariableAndContainers(String, long)
64306=JavaModelManager:secondaryTypeAdding(String, char[], char[])
64307=JavaModelManager:saving(ISaveContext)
64308=JavaModelManager:addDeprecatedOptions(Hashtable)
64309=JavaModelManager:closeZipFile(ZipFile)
64310=JavaModelManager:PerProjectInfo:toString()
64311=JavaModelManager:PersistedClasspathContainer:getClasspathEntries()
64312=JavaModelManager:create(IFile, IJavaProject)
64313=JavaModelManager:cacheZipFiles(Object)
64314=JavaModelManager:ZipCache:ZipCache(Object)
64315=JavaModelManager:shutdown()
64316=JavaModelManager:addInvalidArchive(IPath)
64317=JavaModelManager:VariablesAndContainersLoadHelper:loadBoolean()
64318=JavaModelManager:CompilationParticipants:sortParticipants(ArrayList, IConfigurationElement[], int)
64319=JavaModelManager:containerRemove(IJavaProject)
64320=JavaModelManager:setClasspathBeingResolved(IJavaProject, boolean)
64321=JavaModelManager:PerWorkingCopyInfo:acceptProblem(IProblem)
64322=JavaModelManager:VariablesAndContainersSaveHelper:saveString(String)
64323=JavaModelManager:verbose_batching_containers_initialization(IJavaProject, IPath)
64324=JavaModelManager:VariablesAndContainersLoadHelper:loadContainers(IJavaProject)
64325=JavaModelManager:PersistedClasspathContainer:toString()
64326=JavaModelManager:VariablesAndContainersLoadHelper:loadInt()
64327=JavaModelManager:verbose_triggering_container_initialization(IJavaProject, IPath, ClasspathContainerInitializer)
64328=JavaModelManager:VariablesAndContainersLoadHelper:load()
64329=JavaModelManager:getSerializationFile(IProject)
64330=JavaModelManager:doNotUse()
64331=JavaModelManager:EclipsePreferencesListener:preferenceChange(IEclipsePreferences.PreferenceChangeEvent)
64332=JavaModelManager:isExternalFile(IPath)
64333=JavaModelManager:prepareToSave(ISaveContext)
64334=JavaModelManager:VariablesAndContainersSaveHelper:saveNewId(Object, HashtableOfObjectToInt)
64335=JavaModelManager:resolveVariableEntry(IClasspathEntry, boolean)
64336=JavaModelManager:containerBeingInitializedPut(IJavaProject, IPath, IClasspathContainer)
64337=JavaModelManager:VariablesAndContainersLoadHelper:loadString()
64338=JavaModelManager:getVariableAndContainersFile()
64339=JavaModelManager:PerWorkingCopyInfo:PerWorkingCopyInfo(CompilationUnit, IProblemRequestor)
64340=JavaModelManager:getReferencedClasspathEntries(IClasspathEntry, IJavaProject)
64341=JavaModelManager:getZipFile(IPath)
64342=JavaModelManager:initializeAllContainers(IJavaProject, IPath)
64343=JavaModelManager:VariablesAndContainersSaveHelper:saveContainers(IJavaProject, Map)
64344=JavaModelManager:containerIsInitializationInProgress(IJavaProject, IPath)
64345=JavaModelManager:verbose_container_initialization_failed(IJavaProject, IPath, IClasspathContainer, ClasspathContainerInitializer)
64346=JavaModelManager:CompilationParticipants:managedMarkerTypes()
64347=JavaModelManager:getPerProjectInfoCheckExistence(IProject)
64348=JavaModelManager:resetJarTypeCache()
64349=JavaModelManager:VariablesAndContainersSaveHelper:saveAttribute(IClasspathAttribute)
64350=JavaModelManager:loadVariablesAndContainers(IEclipsePreferences)
64351=JavaModelManager:getNonChainingJarsCache()
64352=JavaModelManager:PerProjectInfo:resetResolvedClasspath()
64353=JavaModelManager:getPreviousSessionVariable(String)
64354=JavaModelManager:isDeprecatedOption(String)
64355=JavaModelManager:resetProjectOptions(JavaProject)
64356=JavaModelManager:VariablesAndContainersLoadHelper:loadAttributes()
64357=JavaModelManager:getDeltaProcessor()
64358=JavaModelManager:loadClasspathListCache(String)
64359=JavaModelManager:isClasspathBeingResolved(IJavaProject)
64360=JavaModelManager:variableInitializationInProgress()
64361=JavaModelManager:resetProjectPreferences(JavaProject)
64362=JavaModelManager:createClassFileFrom(IFile, IJavaProject)
64363=JavaModelManager:VariablesAndContainersLoadHelper:loadPaths()
64364=JavaModelManager:getClasspathContainer(IPath, IJavaProject)
64365=JavaModelManager:getPerProjectInfo(IProject, boolean)
64366=JavaModelManager:saveState(PerProjectInfo, ISaveContext)
64367=JavaModelManager:getExistingElement(IJavaElement)
64368=JavaModelManager:doneSaving(ISaveContext)
64369=JavaModelManager:VariablesAndContainersSaveHelper:saveInt(int)
64370=JavaModelManager:VariablesAndContainersLoadHelper:loadClasspathEntries()
64371=JavaModelManager:PersistedClasspathContainer:getPath()
64372=JavaModelManager:createAnnotationProcessorManager()
64373=JavaModelManager:getRegisteredContainerIDs()
64374=JavaModelManager:PersistedClasspathContainer:getDescription()
64375=JavaModelManager:forceBatchInitializations(boolean)
64376=JavaModelManager:variablePutIfInitializingWithSameValue(String[], IPath[])
64377=JavaModelManager:PersistedClasspathContainer:getKind()
64378=JavaModelManager:verifyArchiveContent(IPath)
64379=JavaModelManager:getDefaultPreferences()
64380=JavaModelManager:verbose_reentering_project_container_access(IPath, IJavaProject, IClasspathContainer)
64381=JavaModelManager:verbose_container_null_failure_container(IJavaProject, IPath, ClasspathContainerInitializer)
64382=JavaModelManager:containerRemoveInitializationInProgress(IJavaProject, IPath)
64383=JavaModelManager:create(IFolder, IJavaProject)
64384=JavaModelManager:getClasspathBeingResolved()
64385=JavaModelManager:VariablesAndContainersLoadHelper:VariablesAndContainersLoadHelper(DataInputStream)
64386=JavaModelManager:conflictsWithOutputLocation(IPath, JavaProject)
64387=JavaModelManager:initializeContainer(IJavaProject, IPath)
64388=JavaModelManager:batchContainerInitializations()
64389=JavaModelManager:getJavaModelManager()
64390=JavaModelManager:containersReset(String[])
64391=JavaModelManager:flushZipFiles(Object)
64392=JavaModelManager:startup()
64393=JavaModelManager:PerProjectInfo:setRawClasspath(IClasspathEntry[], IPath, IJavaModelStatus)
64394=JavaModelManager:PerProjectInfo:addClasspathChange()
64395=JavaModelManager:secondaryTypesSearching(IJavaProject, boolean, IProgressMonitor, PerProjectInfo)
64396=JavaModelManager:getPreviousSessionContainer(IPath, IJavaProject)
64397=JavaModelManager:secondaryTypesRemoving(IFile, boolean)
64398=JavaModelManager:getClasspathListFile(String)
64399=JavaModelManager:PerWorkingCopyInfo:getWorkingCopy()
64400=JavaModelManager:knowsOption(String)
64401=JavaModelManager:PerProjectInfo:setRawClasspath(IClasspathEntry[], IClasspathEntry[], IPath, IJavaModelStatus)
64402=JavaModelManager:hasTemporaryCache()
64403=JavaModelManager:PerProjectInfo:writeAndCacheClasspath(JavaProject, IClasspathEntry[], IClasspathEntry[], IPath)
64404=JavaModelManager:ZipCache:flush()
64405=JavaModelManager:PerProjectInfo:readAndCacheClasspath(JavaProject)
64406=JavaModelManager:secondaryTypes(IJavaProject, boolean, IProgressMonitor)
64407=JavaModelManager:intern(char[])
64408=JavaModelManager:VariablesAndContainersLoadHelper:loadAccessRules()
64409=JavaModelManager:PersistedClasspathContainer:PersistedClasspathContainer(IJavaProject, IPath, IClasspathEntry[])
64410=JavaModelManager:removeInfoAndChildren(JavaElement)
64411=JavaModelManager:storePreference(String, String, IEclipsePreferences, Map)
64412=JavaModelManager:variableGet(String)
64413=JavaModelManager:PerProjectInfo:getResolvedClasspath()
64414=JavaModelManager:getOptionLevel(String)
64415=JavaModelManager:variablePreferencesPut(String, IPath)
64416=JavaModelManager:PerProjectInfo:setResolvedClasspath(IClasspathEntry[], Map, Map, IJavaModelStatus, int, boolean)
64417=JavaModelManager:loadVariablesAndContainers()
64418=JavaModelManager:containerGetDefaultToPreviousSession(IJavaProject, IPath)
64419=JavaModelManager:VariablesAndContainersSaveHelper:saveAccessRules(IAccessRule[])
64420=JavaModelManager:getWorkingCopies(WorkingCopyOwner, boolean)
64421=JavaModelManager:removeFromInvalidArchiveCache(IPath)
64422=JavaModelManager:startIndexing()
64423=JavaModelManager:verbose_triggering_container_initialization_invocation_trace()
64424=JavaModelManager:PerWorkingCopyInfo:beginReporting()
64425=JavaModelManager:verbose_missbehaving_container(IJavaProject, IPath, IClasspathEntry[])
64426=JavaModelManager:setLastBuiltState(IProject, Object)
64427=JavaModelManager:PerWorkingCopyInfo:isActive()
64428=JavaModelManager:addNonChainingJar(IPath)
64429=JavaModelManager:setOptions(Hashtable)
64430=JavaModelManager:touchProjects(IProject[], IProgressMonitor)
64431=JavaModelManager:rememberScope(AbstractSearchScope)
64432=JavaModelManager:containerPut(IJavaProject, IPath, IClasspathContainer)
64433=JavaModelManager:saveClasspathListCache(String)
64434=JavaModelManager:getOpenableCacheSize()
64435=JavaModelManager:getOption(String, boolean, IEclipsePreferences)
64436=JavaModelManager:putInfos(IJavaElement, Object, boolean, Map)
64437=JavaModelManager:secondaryTypesRemoving(Hashtable, IFile)
64438=JavaModelManager:isNonChainingJar(IPath)
64439=JavaModelManager:clearExternalFileState(IPath)
64440=JavaModelManager:setBuildOrder(String[])
64441=JavaModelManager:VariablesAndContainersSaveHelper:saveClasspathEntry(IClasspathEntry)
64442=JavaModelManager:VariablesAndContainersSaveHelper:saveAttributes(IClasspathAttribute[])
64443=JavaModelManager:getUserLibraryManager()
64444=JavaModelManager:readState(IProject)
64445=JavaModelManager:getJavaModel()
64446=JavaModelManager:peekAtInfo(IJavaElement)
64447=JavaModelManager:VariablesAndContainersSaveHelper:saveProjects(IJavaProject[])
64448=JavaModelManager:PerProjectInfo:PerProjectInfo(IProject)
64449=JavaModelManager:VariablesAndContainersSaveHelper:savePaths(IPath[])
64450=JavaModelManager:getClasspathListCache(String)
64451=JavaModelManager:variableNames()
64452=JavaModelManager:removePerProjectInfo(JavaProject, boolean)
64453=JavaModelManager:PerProjectInfo:forgetExternalTimestampsAndIndexes()
64454=JavaModelManager:VariablesAndContainersLoadHelper:loadClasspathEntry()
64455=JavaModelManager:isInvalidArchive(IPath)
64456=JavaModelManager:secondaryTypesMerging(Hashtable)
64457=JavaModelManager:VariablesAndContainersLoadHelper:loadVariables()
64458=JavaModelManager:getDefaultOptionsNoInitialization()
64459=JavaModelManager:PerProjectInfo:setClasspath(IClasspathEntry[], IClasspathEntry[], IPath, IJavaModelStatus, IClasspathEntry[], Map, Map, IJavaModelStatus, boolean)
64460=JavaModelManager:getDeltaState()
64461=JavaModelManager:verbose_container_value_after_initialization(IJavaProject, IPath, IClasspathContainer)
64462=JavaModelManager:getIndexManager()
64463=JavaModelManager:PerWorkingCopyInfo:toString()
64464=JavaModelManager:VariablesAndContainersSaveHelper:saveAccessRule(ClasspathAccessRule)
64465=JavaModelManager:JavaModelManager()
64466=JavaModelManager:getTemporaryCache()
64467=JavaModelManager:VariablesAndContainersSaveHelper:save(ISaveContext)
64468=JavaModelManager:cacheToString(String)
64469=JavaModelManager:PerProjectInfo:writeAndCacheClasspath(JavaProject, IClasspathEntry[], IPath)
64470=JavaModelManager:VariablesAndContainersLoadHelper:loadAttribute()
64471=JavaModelManager:resetExternalFilesCache()
64472=JavaModelManager:ZipCache:setCache(IPath, ZipFile)
64473=JavaModelManager:getElementsOutOfSynchWithBuffers()
64474=JavaModelManager:resetTemporaryCache()
64475=JavaModelManager:PerProjectInfo:setResolvedClasspath(IClasspathEntry[], IClasspathEntry[], Map, Map, IJavaModelStatus, int, boolean)
64476=JavaModelManager:getZipFile(IPath, boolean)
64477=JavaModelManager:intern(String)
64478=JavaModelManager:contentTypeChanged(ContentTypeChangeEvent)
64479=JavaModelManager:verbose_container_using_failure_container(IJavaProject, IPath, ClasspathContainerInitializer)
64480=JavaModelManager:PerWorkingCopyInfo:getProblemRequestor()
64481=JavaModelManager:verbose_no_container_initializer_found(IJavaProject, IPath)
64482=JavaModelManager:containerBeingInitializedGet(IJavaProject, IPath)
64483=JavaModelManager:getInfo(IJavaElement)
64484=JavaModelManager:createJarPackageFragmentRootFrom(IFile, IJavaProject)
64485=JavaModelManager:VariablesAndContainersSaveHelper:VariablesAndContainersSaveHelper(DataOutputStream)
64486=JavaModelManager:getOptions()
64487=JavaModelManager:rollback(ISaveContext)
64488=JavaModelManager:verbose_missbehaving_container_null_entries(IJavaProject, IPath)
64489=JavaModelManager:CompilationParticipants:getRegisteredParticipants()
64490=JavaModelManager:batchInitializationFinished()
64491=JavaModelManager:getOption(String)
64492=JavaModelManager:VariablesAndContainersSaveHelper:saveClasspathEntries(IClasspathEntry[])
64493=JavaModelManager:containerAddInitializationInProgress(IJavaProject, IPath)
64494=JavaModelManager:determineIfOnClasspath(IResource, IJavaProject)
64495=JavaModelManager:addAssumedExternalFile(IPath)
64496=JavaModelManager:verbose_missbehaving_container(IPath, IJavaProject[], IClasspathContainer[], IClasspathContainer, IClasspathEntry[], IClasspathEntry[])
64497=JavaModelManager:getPerWorkingCopyInfo(CompilationUnit, boolean, boolean, IProblemRequestor)
64498=JavaModelManager:saveBuiltState(PerProjectInfo)
64499=JavaModelManager:getExternalManager()
64500=JavaModelManager:resetClasspathListCache()
64501=JavaModelManager:variablePut(String, IPath)
64502=JavaModelManager:PerProjectInfo:rememberExternalLibTimestamps()
64503=JavaModelManager:discardPerWorkingCopyInfo(CompilationUnit)
64504=JavaModelManager:VariablesAndContainersLoadHelper:loadProjects(IJavaModel)
64505=JavaModelManager:getInstancePreferences()
64506=JavaModelManager:ZipCache:getCache(IPath)
64507=JavaModelManager:variableGetDefaultToPreviousSession(String)
64508=JavaModelManager:closeChildren(Object)
64509=JavaModelManager:removeFromJarTypeCache(BinaryType)
64510=JavaModelManager:saveVariablesAndContainers(ISaveContext)
64511=JavaModelManager:getWorkspaceScope()
64512=JavaModelManager:VariablesAndContainersLoadHelper:loadAccessRule()
64513=JavaModelManager:recreatePersistedContainer(String, String, boolean)
64514=JavaModelManager:containerPutIfInitializingWithSameEntries(IPath, IJavaProject[], IClasspathContainer[])
64515=JavaModelManager:containerBeingInitializedRemove(IJavaProject, IPath)
64516=JavaModelManager:debugNewOpenableCacheStats()
64517=JavaModelManager:registerDebugOptionsListener(BundleContext)
64518=JavaModelManager:getRegisteredVariableNames()
64519=JavaModelManager:createCompilationUnitFrom(IFile, IJavaProject)
64520=JavaModelManager:recreatePersistedContainer(IJavaProject, IPath, String, boolean)
64521=JavaModelManager:getLastBuiltState(IProject, IProgressMonitor)
64522=JavaModelManager:PerWorkingCopyInfo:endReporting()
64523=JavaModelManager:unregisterDebugOptionsListener()
64524=JavaModelManager:VariablesAndContainersSaveHelper:saveVariables(Map)
64525=OverloadResolutionTest8:test4008712x()
64526=OverloadResolutionTest8:test019()
64527=OverloadResolutionTest8:test008()
64528=OverloadResolutionTest8:test4008712i()
64529=OverloadResolutionTest8:test4008712z()
64530=OverloadResolutionTest8:test017()
64531=OverloadResolutionTest8:test006()
64532=OverloadResolutionTest8:test4008712k()
64533=OverloadResolutionTest8:test427072a()
64534=OverloadResolutionTest8:_test032()
64535=OverloadResolutionTest8:test4008712zd()
64536=OverloadResolutionTest8:test028()
64537=OverloadResolutionTest8:test015()
64538=OverloadResolutionTest8:test427072()
64539=OverloadResolutionTest8:test004()
64540=OverloadResolutionTest8:test4008712m()
64541=OverloadResolutionTest8:test4008712zb()
64542=OverloadResolutionTest8:test026()
64543=OverloadResolutionTest8:test013()
64544=OverloadResolutionTest8:test4008712o()
64545=OverloadResolutionTest8:test002()
64546=OverloadResolutionTest8:test012()
64547=OverloadResolutionTest8:test4008712zh()
64548=OverloadResolutionTest8:test4008712p()
64549=OverloadResolutionTest8:test001()
64550=OverloadResolutionTest8:test429985()
64551=OverloadResolutionTest8:OverloadResolutionTest8(String)
64552=OverloadResolutionTest8:test023()
64553=OverloadResolutionTest8:test010()
64554=OverloadResolutionTest8:test4008712zf()
64555=OverloadResolutionTest8:test4008712r()
64556=OverloadResolutionTest8:test427072b()
64557=OverloadResolutionTest8:test021()
64558=OverloadResolutionTest8:test429985a()
64559=OverloadResolutionTest8:suite()
64560=OverloadResolutionTest8:test4008712()
64561=OverloadResolutionTest8:test4008712t()
64562=OverloadResolutionTest8:test400871c()
64563=OverloadResolutionTest8:test030()
64564=OverloadResolutionTest8:test427628a()
64565=OverloadResolutionTest8:test4008712e()
64566=OverloadResolutionTest8:test4008712v()
64567=OverloadResolutionTest8:test4008712g()
64568=OverloadResolutionTest8:testVarargs()
64569=OverloadResolutionTest8:_test421922()
64570=OverloadResolutionTest8:test009()
64571=OverloadResolutionTest8:test4008712h()
64572=OverloadResolutionTest8:test4008712za()
64573=OverloadResolutionTest8:test400871()
64574=OverloadResolutionTest8:test4008712y()
64575=OverloadResolutionTest8:test018()
64576=OverloadResolutionTest8:test007()
64577=OverloadResolutionTest8:test4008712j()
64578=OverloadResolutionTest8:test400871a()
64579=OverloadResolutionTest8:test029()
64580=OverloadResolutionTest8:test016()
64581=OverloadResolutionTest8:test005()
64582=OverloadResolutionTest8:test4008712l()
64583=OverloadResolutionTest8:test427808()
64584=OverloadResolutionTest8:testClass()
64585=OverloadResolutionTest8:test4008712ze()
64586=OverloadResolutionTest8:test027()
64587=OverloadResolutionTest8:test482440b()
64588=OverloadResolutionTest8:test014()
64589=OverloadResolutionTest8:test003()
64590=OverloadResolutionTest8:test4008712n()
64591=OverloadResolutionTest8:test450415()
64592=OverloadResolutionTest8:test4008712zc()
64593=OverloadResolutionTest8:test025()
64594=OverloadResolutionTest8:test024()
64595=OverloadResolutionTest8:test011()
64596=OverloadResolutionTest8:test4008712q()
64597=OverloadResolutionTest8:test422050()
64598=OverloadResolutionTest8:test033()
64599=OverloadResolutionTest8:test450415a()
64600=OverloadResolutionTest8:test427072c()
64601=OverloadResolutionTest8:test022()
64602=OverloadResolutionTest8:test482440a()
64603=OverloadResolutionTest8:test448801()
64604=OverloadResolutionTest8:test4008712zg()
64605=OverloadResolutionTest8:test4008712s()
64606=OverloadResolutionTest8:test031()
64607=OverloadResolutionTest8:test427748()
64608=OverloadResolutionTest8:test427628b()
64609=OverloadResolutionTest8:test020()
64610=OverloadResolutionTest8:test427628()
64611=OverloadResolutionTest8:test4008712u()
64612=OverloadResolutionTest8:test400871b()
64613=OverloadResolutionTest8:test401850()
64614=OverloadResolutionTest8:test4008712f()
64615=OverloadResolutionTest8:test400871d()
64616=OverloadResolutionTest8:test4008712w()
64617=X:getStrings()
64618=A:foo()
64619=Test:main(String[])
64620=X:x()
64621=Test:foo()
64622=Test:main(String[])
64623=X03:foo()
64624=X05:test()
64625=ModelUtilTests:testTypesWithEclipseCompiler()
64626=ModelUtilTests:testTypesWithSystemCompiler()
64627=ModelUtilTests:testElementsWithEclipseCompiler()
64628=ModelUtilTests:internalTest(JavaCompiler, String)
64629=ModelUtilTests:testElementsWithSystemCompiler()
64630=ModelUtilTests:canRunJava8()
64631=ModelUtilTests:setUp()
64632=ModelUtilTests:tearDown()
64633=JavadocParser:pushParamName(boolean)
64634=JavadocParser:parseInheritDocTag()
64635=JavadocParser:parseTag(int)
64636=JavadocParser:parseSimpleTag()
64637=JavadocParser:createTag()
64638=JavadocParser:pushText(int, int)
64639=JavadocParser:pushThrowName(Object)
64640=JavadocParser:createArgumentReference(char[], int, boolean, Object, long[], long)
64641=JavadocParser:refreshInlineTagPosition(int)
64642=JavadocParser:createTypeReference(int)
64643=JavadocParser:pushSeeRef(Object)
64644=JavadocParser:getParsedTypeDeclaration()
64645=JavadocParser:updateDocComment()
64646=JavadocParser:toString()
64647=JavadocParser:parseParam()
64648=JavadocParser:checkDeprecation(int)
64649=JavadocParser:createReturnStatement()
64650=JavadocParser:refreshReturnStatement()
64651=JavadocParser:createFieldReference(Object)
64652=JavadocParser:createMethodReference(Object, List)
64653=JavadocParser:JavadocParser(Parser)
64654=JavadocParser:parseThrows()
64655=JavadocParser:parseReturn()
64656=PackageReferenceLocator:matchLevel(ImportReference)
64657=PackageReferenceLocator:match(Annotation, MatchingNodeSet)
64658=PackageReferenceLocator:resolveLevel(Binding)
64659=PackageReferenceLocator:resolveLevel(QualifiedNameReference)
64660=PackageReferenceLocator:match(Reference, MatchingNodeSet)
64661=PackageReferenceLocator:toString()
64662=PackageReferenceLocator:matchReportReference(ASTNode, IJavaElement, IJavaElement, IJavaElement[], Binding, int, MatchLocator)
64663=PackageReferenceLocator:matchReportImportRef(ImportReference, Binding, IJavaElement, int, MatchLocator)
64664=PackageReferenceLocator:matchReportReference(ASTNode, IJavaElement, Binding, int, MatchLocator)
64665=PackageReferenceLocator:matchLevelForTokens(char[][])
64666=PackageReferenceLocator:resolveLevel(ASTNode)
64667=PackageReferenceLocator:matchLevelAndReportImportRef(ImportReference, Binding, MatchLocator)
64668=PackageReferenceLocator:match(TypeReference, MatchingNodeSet)
64669=PackageReferenceLocator:isDeclaringPackageFragment(IPackageFragment, ReferenceBinding)
64670=PackageReferenceLocator:referenceType()
64671=PackageReferenceLocator:PackageReferenceLocator(PackageReferencePattern)
64672=PackageReferenceLocator:match(ASTNode, MatchingNodeSet)
64673=ASTMatcher:compareDeprecatedComment(Javadoc, Javadoc)
64674=ASTMatcher:match(InstanceofExpression, Object)
64675=ASTMatcher:match(CastExpression, Object)
64676=ASTMatcher:match(ParenthesizedExpression, Object)
64677=ASTMatcher:match(TextElement, Object)
64678=ASTMatcher:match(EnumDeclaration, Object)
64679=ASTMatcher:match(TypeParameter, Object)
64680=ASTMatcher:match(ImportDeclaration, Object)
64681=ASTMatcher:match(NumberLiteral, Object)
64682=ASTMatcher:match(ArrayType, Object)
64683=ASTMatcher:match(CatchClause, Object)
64684=ASTMatcher:match(InfixExpression, Object)
64685=ASTMatcher:match(MethodRef, Object)
64686=ASTMatcher:match(AnonymousClassDeclaration, Object)
64687=ASTMatcher:safeEquals(Object, Object)
64688=ASTMatcher:match(AnnotationTypeMemberDeclaration, Object)
64689=ASTMatcher:match(IfStatement, Object)
64690=ASTMatcher:match(QualifiedType, Object)
64691=ASTMatcher:match(SuperFieldAccess, Object)
64692=ASTMatcher:match(TagElement, Object)
64693=ASTMatcher:match(MethodDeclaration, Object)
64694=ASTMatcher:match(LabeledStatement, Object)
64695=ASTMatcher:match(EnumConstantDeclaration, Object)
64696=ASTMatcher:match(NormalAnnotation, Object)
64697=ASTMatcher:match(LineComment, Object)
64698=ASTMatcher:match(TypeLiteral, Object)
64699=ASTMatcher:match(FieldDeclaration, Object)
64700=ASTMatcher:match(QualifiedName, Object)
64701=ASTMatcher:match(AssertStatement, Object)
64702=ASTMatcher:match(SingleMemberAnnotation, Object)
64703=ASTMatcher:match(SingleVariableDeclaration, Object)
64704=ASTMatcher:match(Initializer, Object)
64705=ASTMatcher:match(BlockComment, Object)
64706=ASTMatcher:match(MarkerAnnotation, Object)
64707=ASTMatcher:match(EnhancedForStatement, Object)
64708=ASTMatcher:match(Dimension, Object)
64709=ASTMatcher:match(PrefixExpression, Object)
64710=ASTMatcher:match(PostfixExpression, Object)
64711=ASTMatcher:match(ExpressionStatement, Object)
64712=ASTMatcher:safeSubtreeMatch(Object, Object)
64713=ASTMatcher:match(SimpleName, Object)
64714=ASTMatcher:match(Modifier, Object)
64715=ASTMatcher:match(ForStatement, Object)
64716=ASTMatcher:match(NameQualifiedType, Object)
64717=ASTMatcher:match(SynchronizedStatement, Object)
64718=ASTMatcher:match(SuperMethodInvocation, Object)
64719=ASTMatcher:match(BooleanLiteral, Object)
64720=ASTMatcher:componentType(ArrayType)
64721=ASTMatcher:match(IntersectionType, Object)
64722=ASTMatcher:match(ArrayAccess, Object)
64723=ASTMatcher:match(SuperMethodReference, Object)
64724=ASTMatcher:match(ThrowStatement, Object)
64725=ASTMatcher:match(WhileStatement, Object)
64726=ASTMatcher:match(TypeMethodReference, Object)
64727=ASTMatcher:match(NullLiteral, Object)
64728=ASTMatcher:match(PackageDeclaration, Object)
64729=ASTMatcher:match(ConstructorInvocation, Object)
64730=ASTMatcher:match(TryStatement, Object)
64731=ASTMatcher:match(Javadoc, Object)
64732=ASTMatcher:match(FieldAccess, Object)
64733=ASTMatcher:match(SwitchCase, Object)
64734=ASTMatcher:safeSubtreeListMatch(List, List)
64735=ASTMatcher:match(PrimitiveType, Object)
64736=ASTMatcher:match(VariableDeclarationFragment, Object)
64737=ASTMatcher:match(SimpleType, Object)
64738=ASTMatcher:match(ThisExpression, Object)
64739=ASTMatcher:match(CompilationUnit, Object)
64740=ASTMatcher:match(WildcardType, Object)
64741=ASTMatcher:match(SuperConstructorInvocation, Object)
64742=ASTMatcher:match(Block, Object)
64743=ASTMatcher:match(ConditionalExpression, Object)
64744=ASTMatcher:match(CreationReference, Object)
64745=ASTMatcher:match(TypeDeclaration, Object)
64746=ASTMatcher:match(DoStatement, Object)
64747=ASTMatcher:match(ReturnStatement, Object)
64748=ASTMatcher:ASTMatcher(boolean)
64749=ASTMatcher:match(SwitchStatement, Object)
64750=ASTMatcher:match(CharacterLiteral, Object)
64751=ASTMatcher:match(StringLiteral, Object)
64752=ASTMatcher:match(EmptyStatement, Object)
64753=ASTMatcher:match(MethodInvocation, Object)
64754=ASTMatcher:match(UnionType, Object)
64755=ASTMatcher:match(LambdaExpression, Object)
64756=ASTMatcher:match(ContinueStatement, Object)
64757=ASTMatcher:match(VariableDeclarationExpression, Object)
64758=ASTMatcher:match(ArrayCreation, Object)
64759=ASTMatcher:match(VariableDeclarationStatement, Object)
64760=ASTMatcher:match(ParameterizedType, Object)
64761=ASTMatcher:ASTMatcher()
64762=ASTMatcher:match(BreakStatement, Object)
64763=ASTMatcher:match(AnnotationTypeDeclaration, Object)
64764=ASTMatcher:match(ExpressionMethodReference, Object)
64765=ASTMatcher:match(TypeDeclarationStatement, Object)
64766=ASTMatcher:match(MethodRefParameter, Object)
64767=ASTMatcher:match(ArrayInitializer, Object)
64768=ASTMatcher:match(MemberValuePair, Object)
64769=ASTMatcher:match(Assignment, Object)
64770=ASTMatcher:match(ClassInstanceCreation, Object)
64771=ASTMatcher:match(MemberRef, Object)
64772=PauseAnnotationProcessor:process()
64773=PauseAnnotationProcessor:PauseAnnotationProcessor(Set<AnnotationTypeDeclaration>, AnnotationProcessorEnvironment)
64774=FilerProc:round(Set<? extends TypeElement>, RoundEnvironment)
64775=FilerProc:generateType(GenResource, Element)
64776=FilerProc:process(Set<? extends TypeElement>, RoundEnvironment)
64777=FilerProc:triggerException()
64778=FilerProc:init(ProcessingEnvironment)
64779=Test:main(String[])
64780=LoaderTestAnnotationProcessor:process()
64781=LoaderTestAnnotationProcessor:getCode()
64782=LoaderTestAnnotationProcessor:getPackageName()
64783=LoaderTestAnnotationProcessor:getClassName()
64784=LoaderTestAnnotationProcessor:clearLoaded()
64785=LoaderTestAnnotationProcessor:LoaderTestAnnotationProcessor(AnnotationProcessorEnvironment)
64786=LoaderTestAnnotationProcessor:isLoaded()
64787=LoaderTestAnnotationProcessor:getEnvironment()
64788=LoaderTestAnnotationProcessor:getTypeName()
64789=Test:m()
64790=JavaProjectElementInfo:resetCaches()
64791=JavaProjectElementInfo:ProjectCache:ProjectCache(IPackageFragmentRoot[], Map, Map)
64792=JavaProjectElementInfo:getProjectCache(JavaProject)
64793=JavaProjectElementInfo:JavaProjectElementInfo()
64794=JavaProjectElementInfo:isClasspathEntryOrOutputLocation(IPath, IPath, IClasspathEntry[], IPath)
64795=JavaProjectElementInfo:newNameLookup(JavaProject, ICompilationUnit[])
64796=JavaProjectElementInfo:computeNonJavaResources(JavaProject)
64797=JavaProjectElementInfo:addSuperPackageNames(String[], HashtableOfArrayToObject)
64798=JavaProjectElementInfo:getNonJavaResources(JavaProject)
64799=JavaProjectElementInfo:initializePackageNames(IPackageFragmentRoot, HashSetOfArray)
64800=JavaProjectElementInfo:setNonJavaResources(Object[])
64801=Bug49361:main(String[])
64802=JavaSearchDocument:JavaSearchDocument(java.util.zip.ZipEntry, IPath, byte[], SearchParticipant)
64803=JavaSearchDocument:getFile()
64804=JavaSearchDocument:getByteContents()
64805=JavaSearchDocument:getEncoding()
64806=JavaSearchDocument:toString()
64807=JavaSearchDocument:JavaSearchDocument(String, SearchParticipant)
64808=JavaSearchDocument:getCharContents()
64809=AbstractCommentParser:getTokenEndPosition()
64810=AbstractCommentParser:consumeToken()
64811=AbstractCommentParser:parseReturn()
64812=AbstractCommentParser:createReturnStatement()
64813=AbstractCommentParser:createMethodReference(Object, List)
64814=AbstractCommentParser:commentParse(int, int)
64815=AbstractCommentParser:parseParam()
64816=AbstractCommentParser:verifyEndLine(int)
64817=AbstractCommentParser:AbstractCommentParser(Parser)
64818=AbstractCommentParser:getLineNumber(int)
64819=AbstractCommentParser:updateDocComment()
64820=AbstractCommentParser:getIndexPosition()
64821=AbstractCommentParser:parseThrows()
64822=AbstractCommentParser:readToken()
64823=AbstractCommentParser:pushSeeRef(Object)
64824=AbstractCommentParser:pushThrowName(Object)
64825=AbstractCommentParser:toString()
64826=AbstractCommentParser:updateLineEnd()
64827=AbstractCommentParser:pushOnAstStack(Object, boolean)
64828=AbstractCommentParser:parseArguments(Object)
64829=AbstractCommentParser:readChar()
64830=AbstractCommentParser:verifySpaceOrEndComment()
64831=AbstractCommentParser:pushIdentifier(boolean)
64832=AbstractCommentParser:refreshInlineTagPosition(int)
64833=AbstractCommentParser:parseReference()
64834=AbstractCommentParser:parseHref()
64835=AbstractCommentParser:peekChar()
64836=AbstractCommentParser:pushParamName()
64837=AbstractCommentParser:createTag()
64838=AbstractCommentParser:pushText(int, int)
64839=AbstractCommentParser:parseQualifiedName(boolean)
64840=AbstractCommentParser:createTypeReference(int)
64841=AbstractCommentParser:createFieldReference(Object)
64842=AbstractCommentParser:createArgumentReference(char[], int, Object, long[], long)
64843=AbstractCommentParser:parseTag(int)
64844=AbstractCommentParser:parseMember(Object)
64845=AbstractCommentParser:readTokenAndConsume()
64846=ProblemFieldBinding:problemId()
64847=ProblemFieldBinding:ProblemFieldBinding(ReferenceBinding, char[][], int)
64848=ProblemFieldBinding:ProblemFieldBinding(ReferenceBinding, char[], int)
64849=ProblemFieldBinding:ProblemFieldBinding(FieldBinding, ReferenceBinding, char[], int)
64850=Assert:assertSame(Object, Object)
64851=Assert:assertEquals(char, char)
64852=Assert:assertNotNull(Object)
64853=Assert:format(String, Object, Object)
64854=Assert:failNotSame(String, Object, Object)
64855=Assert:assertEquals(short, short)
64856=Assert:assertEquals(String, long, long)
64857=Assert:assertEquals(byte, byte)
64858=Assert:assertEquals(String, String, String)
64859=Assert:assertEquals(String, Object, Object)
64860=Assert:fail(String)
64861=Assert:assertEquals(String, double, double, double)
64862=Assert:assertEquals(String, char, char)
64863=Assert:failNotEquals(String, Object, Object)
64864=Assert:assertEquals(Object, Object)
64865=Assert:fail()
64866=Assert:assertEquals(String, boolean, boolean)
64867=Assert:assertFalse(boolean)
64868=Assert:assertTrue(String, boolean)
64869=Assert:assertNull(Object)
64870=Assert:failSame(String)
64871=Assert:assertEquals(String, int, int)
64872=Assert:assertNull(String, Object)
64873=Assert:assertEquals(String, String)
64874=Assert:assertEquals(String, short, short)
64875=Assert:assertFalse(String, boolean)
64876=Assert:assertEquals(String, float, float, float)
64877=Assert:Assert()
64878=Assert:assertTrue(boolean)
64879=Assert:assertEquals(boolean, boolean)
64880=Assert:assertEquals(String, byte, byte)
64881=Assert:assertEquals(double, double, double)
64882=Assert:assertSame(String, Object, Object)
64883=Assert:assertEquals(float, float, float)
64884=Assert:assertNotSame(Object, Object)
64885=Assert:assertEquals(int, int)
64886=Assert:assertNotSame(String, Object, Object)
64887=Assert:assertEquals(long, long)
64888=Assert:assertNotNull(String, Object)
64889=ParameterizedTypeBinding:nullAnnotatedReadableName(CompilerOptions)
64890=ParameterizedTypeBinding:methods()
64891=ParameterizedTypeBinding:collectMissingTypes(List<TypeBinding>)
64892=ParameterizedTypeBinding:ParameterizedTypeBinding(ReferenceBinding, TypeBinding[], ReferenceBinding, LookupEnvironment)
64893=ParameterizedTypeBinding:unannotated()
64894=ParameterizedTypeBinding:actualType()
64895=ParameterizedTypeBinding:isEquivalentTo(TypeBinding)
64896=ParameterizedTypeBinding:substitute(TypeVariableBinding)
64897=ParameterizedTypeBinding:nullAnnotatedShortReadableName(CompilerOptions)
64898=ParameterizedTypeBinding:canBeInstantiated()
64899=ParameterizedTypeBinding:readableName(boolean)
64900=ParameterizedTypeBinding:getMethods(char[])
64901=ParameterizedTypeBinding:shortReadableName()
64902=ParameterizedTypeBinding:initialize(ReferenceBinding, TypeBinding[])
64903=ParameterizedTypeBinding:superclass()
64904=ParameterizedTypeBinding:typeArguments()
64905=ParameterizedTypeBinding:computeUniqueKey(boolean)
64906=ParameterizedTypeBinding:hasTypeBit(int)
64907=ParameterizedTypeBinding:syntheticEnclosingInstanceTypes()
64908=ParameterizedTypeBinding:getMemberType(char[])
64909=ParameterizedTypeBinding:isProperType(boolean)
64910=ParameterizedTypeBinding:environment()
64911=ParameterizedTypeBinding:getExactConstructor(TypeBinding[])
64912=ParameterizedTypeBinding:getExactMethod(char[], TypeBinding[], CompilationUnitScope)
64913=ParameterizedTypeBinding:kind()
64914=ParameterizedTypeBinding:annotatedDebugName()
64915=ParameterizedTypeBinding:withoutToplevelNullAnnotation()
64916=ParameterizedTypeBinding:isParameterizedType()
64917=ParameterizedTypeBinding:getField(char[], boolean)
64918=ParameterizedTypeBinding:getInterfaceAbstractContracts(Scope, boolean)
64919=ParameterizedTypeBinding:isHierarchyConnected()
64920=ParameterizedTypeBinding:swapUnresolved(UnresolvedReferenceBinding, ReferenceBinding, LookupEnvironment)
64921=ParameterizedTypeBinding:qualifiedSourceName()
64922=ParameterizedTypeBinding:isBoundParameterizedType()
64923=ParameterizedTypeBinding:genericType()
64924=ParameterizedTypeBinding:getEnclosingInstancesSlotSize()
64925=ParameterizedTypeBinding:fields()
64926=ParameterizedTypeBinding:toString()
64927=ParameterizedTypeBinding:memberTypes()
64928=ParameterizedTypeBinding:collectInferenceVariables(Set<InferenceVariable>)
64929=ParameterizedTypeBinding:hasMemberTypes()
64930=ParameterizedTypeBinding:updateTagBits()
64931=ParameterizedTypeBinding:resolve()
64932=ParameterizedTypeBinding:initializeForStaticImports()
64933=ParameterizedTypeBinding:getAnnotationTagBits()
64934=ParameterizedTypeBinding:readableName()
64935=ParameterizedTypeBinding:erasure()
64936=ParameterizedTypeBinding:getSingleAbstractMethod(Scope, boolean, int, int)
64937=ParameterizedTypeBinding:boundCheck(Scope, TypeReference[])
64938=ParameterizedTypeBinding:uncapture(Scope)
64939=ParameterizedTypeBinding:superInterfaces()
64940=ParameterizedTypeBinding:nullAnnotatedReadableName(CompilerOptions, boolean)
64941=ParameterizedTypeBinding:debugName()
64942=ParameterizedTypeBinding:initializeArguments()
64943=ParameterizedTypeBinding:sourceName()
64944=ParameterizedTypeBinding:capture(Scope, int, int)
64945=ParameterizedTypeBinding:qualifiedPackageName()
64946=ParameterizedTypeBinding:getOuterLocalVariablesSlotSize()
64947=ParameterizedTypeBinding:getNonWildcardParameterization(Scope)
64948=ParameterizedTypeBinding:implementsMethod(MethodBinding)
64949=ParameterizedTypeBinding:problemId()
64950=ParameterizedTypeBinding:clone(TypeBinding)
64951=ParameterizedTypeBinding:substituteInferenceVariable(InferenceVariable, TypeBinding)
64952=ParameterizedTypeBinding:signature()
64953=ParameterizedTypeBinding:syntheticOuterLocalVariables()
64954=ParameterizedTypeBinding:enclosingType()
64955=ParameterizedTypeBinding:unResolvedFields()
64956=ParameterizedTypeBinding:constantPoolName()
64957=ParameterizedTypeBinding:genericTypeSignature()
64958=ParameterizedTypeBinding:isRawSubstitution()
64959=ParameterizedTypeBinding:shortReadableName(boolean)
64960=ParameterizedTypeBinding:getSingleAbstractMethod(Scope, boolean)
64961=ParameterizedTypeBinding:createParameterizedMethod(MethodBinding)
64962=ParameterizedTypeBinding:mentionsAny(TypeBinding[], int)
64963=ParameterizedTypeBinding:collectSubstitutes(Scope, TypeBinding, InferenceContext, int)
64964=ParameterizedTypeBinding:computeId()
64965=ParameterizedTypeBinding:typeVariables()
64966=ParameterizedTypeBinding:fieldCount()
64967=SourceMethodInfo:setReturnType(char[])
64968=SourceMethodInfo:isConstructor()
64969=SourceMethodInfo:getReturnTypeName()
64970=SourceMethodInfo:isAnnotationMethod()
64971=LocalVariableReferenceInfo:getStartPC()
64972=LocalVariableReferenceInfo:LocalVariableReferenceInfo(byte[], IConstantPool, int)
64973=LocalVariableReferenceInfo:getIndex()
64974=LocalVariableReferenceInfo:getLength()
64975=SyntheticArgumentBinding:SyntheticArgumentBinding(ReferenceBinding)
64976=SyntheticArgumentBinding:SyntheticArgumentBinding(LocalVariableBinding)
64977=JavaCorePreferenceModifyListenerTest:JavaCorePreferenceModifyListenerTest(String)
64978=JavaCorePreferenceModifyListenerTest:testPreApply()
64979=JavaCorePreferenceModifyListenerTest:suite()
64980=EnumDeclaration:getEnumConstants()
64981=X14b:foo()
64982=FactoryPathPreferencePage:FactoryPathPreferencePage()
64983=FactoryPathPreferencePage:getPreferencePageID()
64984=FactoryPathPreferencePage:getContextHelpId()
64985=FactoryPathPreferencePage:getPropertyPageID()
64986=FactoryPathPreferencePage:createControl(Composite)
64987=A:launch()
64988=A:goo(C)
64989=A:foo(Object, A)
64990=Test:main(String[])
64991=StringLiteralConcatenation:traverse(ASTVisitor, BlockScope)
64992=StringLiteralConcatenation:printExpression(int, StringBuffer)
64993=StringLiteralConcatenation:source()
64994=StringLiteralConcatenation:extendsWith(StringLiteral)
64995=StringLiteralConcatenation:StringLiteralConcatenation(StringLiteral, StringLiteral)
64996=IndexAllProject:IndexAllProject(IProject, IndexManager)
64997=IndexAllProject:hashCode()
64998=IndexAllProject:execute(IProgressMonitor)
64999=IndexAllProject:updatedIndexState()
65000=IndexAllProject:toString()
65001=IndexAllProject:equals(Object)
65002=A:foo()