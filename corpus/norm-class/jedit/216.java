org gjt jedit bsh implementation enhanced statement statement bsh iterable bshiterable support iteration wide variety iterable types jdk statement supports primitive object arrays vectors enumerations jdk additionally supports collections author daniel leuck author pat niemeyer bshenhanced for statement bshenhancedforstatement simple node simplenode parser constants parserconstants string var name varname bshenhanced for statement bshenhancedforstatement object eval call stack callstack callstack interpreter interpreter eval error evalerror element type elementtype simple node simplenode expression statement name space namespace enclosing name space enclosingnamespace callstack top simple node simplenode first node firstnode simple node simplenode jjt get child jjtgetchild node count nodecount jjt get num children jjtgetnumchildren first node firstnode bshtype element type elementtype bshtype first node firstnode get type gettype callstack interpreter expression simple node simplenode jjt get child jjtgetchild node count nodecount statement simple node simplenode jjt get child jjtgetchild expression first node firstnode node count nodecount statement simple node simplenode jjt get child jjtgetchild block name space blocknamespace each name space eachnamespace block name space blocknamespace enclosing name space enclosingnamespace callstack swap each name space eachnamespace object iteratee expression eval callstack interpreter iteratee primitive eval error evalerror collection array map iterator enumeration portion statement callstack collection manager collectionmanager collection manager collectionmanager get collection manager getcollectionmanager is bsh iterable isbshiterable iteratee eval error evalerror iterate type iteratee get class getclass callstack bsh iterator bshiterator iterator get bsh iterator getbshiterator iteratee object return control returncontrol primitive iterator has next hasnext element type elementtype each name space eachnamespace set typed variable settypedvariable var name varname type element type elementtype iterator modifiers each name space eachnamespace set variable setvariable var name varname iterator util eval error utilevalerror to eval error toevalerror loop iterator variable var name varname callstack eats multi level breakout empty statement statement object ret statement eval callstack interpreter ret return control returncontrol return control returncontrol ret kind return control returncontrol ret breakout breakout breakout callstack swap enclosing name space enclosingnamespace return control returncontrol