60	find illogical returned result function Fraction parse String source ParsePostion pos class ProperFractionFormat Fraction Package Commons Math library code segment details ProperFractionFormat properFormat ProperFractionFormat result null String source ParsePosition pos ParsePosition Test fail public void testParseNegative String source ParsePosition pos ParsePosition Fraction actual properFormat parse source pos assertNull actual Test success public void testParseNegative String source ParsePosition pos ParsePosition Fraction actual properFormat parse source pos return Fraction assertEquals source getNumerator assertEquals source getDenominator Note passed inputs input source pos input source pos Function Fraction parse String ParsePosition returned Fraction result Fraction numerator denominator inputs function handle parsing numberator denominator properly incase input string provide invalid numerator denominator
85	getSumSquaredErrors returns test public void testSimpleRegression double double double SimpleRegression reg SimpleRegression int length reg addData assertTrue reg getSumSquaredErrors reg clear int length reg addData assertTrue reg getSumSquaredErrors FAIL
167	NormalDistributionImpl cumulativeProbability double throws ConvergenceException deviates CDF hard evaluate cases effectively
175	ChiSquareTestImpl returning incorrect chi squared implicit assumption public double chiSquare double expected long observed sum expected observed equal code int observed length dev double observed expected sumSq dev dev expected calculation correct sum observed sum expected equal rescale expected sum observed sum expected Ironically unit test ChiSquareTestTest highlights error long observed double expected assertEquals chi square test statistic testStatistic chiSquare expected observed assertEquals chi square testStatistic chiSquareTest expected observed correct expected values sense sum expected equals sum observed code project org proves chisq test rescale TRUE Chi squared test probabilities data squared chisq test rescale TRUE observed chisq test rescale TRUE expected
198	parse String source ParsePosition pos method ComplexFormat class check imaginary character set produces StringIndexOutOfBoundsException substring method ComplexFormat parse imaginary character int getImaginaryCharacter length startIndex pos getIndex int endIndex startIndex source substring startIndex endIndex compareTo getImaginaryCharacter encoutered exception typing JTextFied ComplexFormat set AbstractFormatter user types imaginary complex number exception Solution setting length imaginary character check source proposal int source getImaginaryCharacter getImaginaryCharacter length
200	methods getCovariances guessParametersErrors org apache commons math estimation AbstractEstimator crash ArrayOutOfBounds exception parameters bound reason Jacobian calculated unbound parameters code loop parameters final int cols problem getAllParameters length replaced final int cols problem getUnboundParameters length guessParametersErrors dissadvantage bug returned user array smaller size number parameters Alternatively logic code writes zeros elements covariance matrix bound parameters
209	org apache commons math linear RealMatrixImpl operate create result vector length input vector result runtime exceptions matrix square yields incorrect matrix square correct behaviour create vector length row dimension matrix RealMatrixImpl java read double double nRows double double length
221	bug relates complex numbers methods multiply equals class Complex involved mathematic background java program output bug code import org apache commons math complex public class TestProg public static void main String args ComplexFormat ComplexFormat Complex Complex Complex Complex Complex res multiply Complex comp Complex System println res format res System println comp format comp System println res comp res equals comp code res comp res comp false equals return true problem multiply method equals method modified Good Luck Dieter
238	test MathUtils gcd arguments equal fails high powers product overflows assertEquals MathUtils gcd Replace test start MathUtils gcd
241	rounding errors MathUtils binomialCoefficient fails Long MAX existence failures demonstrated testing recursive property noformat assertEquals MathUtils binomialCoefficient MathUtils binomialCoefficient MathUtils binomialCoefficient noformat externally calculated correct expected noformat assertEquals MathUtils binomialCoefficient noformat nonrecursive test implementation lines code title MathUtilsTest java borderStyle solid Exact implementation BigInteger explicit formula public static long binomialCoefficient int int return BigInteger result BigInteger int result result multiply BigInteger valueOf int result result divide BigInteger valueOf result compareTo BigInteger valueOf Long MAX throw ArithmeticException Binomial coefficient overflow return result longValue code test expected values noformat assertEquals binomialCoefficient MathUtils binomialCoefficient noformat
259	existing Frequency API bugs addValue Object method add plain Object add instance add fails IllegalArgumentException fact problem call addValue Object plain Object Comparable objects fixed checking object Comparable considerations apply getCumFreq Object getCumPct Object methods work objects implement Comparable getCount Object getPct Object methods don fail Comparable object class cast exception caught return object code final Object OBJ Object addValue OBJ fail doesn causing unexpected behaviour System println getCount OBJ System println getPct OBJ code adding extra checks Comparable API improved Comparable Object easier implement generics compilation failures programs pass Object Comparable class recoding continue API affect time behaviour attempt add Comparable object fail add valid object viable program add object attempt statistics return Exception applying instanceof fail
273	patch SimplexTableau caused automated test suite running work code path uncover bug remaining Simplex code SimplexTableau assuming entry tableau nonzero basic variable incorrect entry equal
274	matrix double works fine symmetric positive definite matrix double throw exception tested matrix cholesky decomposition method returns matrix symmetric positive definite code catching appropriately opinion exceptions check conditions design exceptions force catch exceptions provide methods test conditions prior possibility exception
318	computed EigenDecompositionImpl wrong case computed Fortran Lapack fails version code public void testMathpbx double mainTridiagonal double secondaryTridiagonal reference values computed routine DSTEMR fortran library LAPACK version double refEigenValues RealVector refEigenVectors ArrayRealVector double ArrayRealVector double ArrayRealVector double ArrayRealVector double ArrayRealVector double ArrayRealVector double ArrayRealVector double triggers exception EigenDecomposition decomposition EigenDecompositionImpl mainTridiagonal secondaryTridiagonal MathUtils SAFE MIN double eigenValues decomposition getRealEigenvalues int refEigenValues length assertEquals refEigenValues eigenValues refEigenVectors dotProduct decomposition getEigenvector assertEquals refEigenVectors add decomposition getEigenvector getNorm assertEquals refEigenVectors subtract decomposition getEigenvector getNorm code
322	events previous closely occurrence bug depends side bracketing interval selected switching function increasing event reaches maximum decreasing event integration step spans switching function values start step signs event detected solver find event occurs truncate step step start step ends start step spans switching function switches step solver event converged switch detected negative bug introduced special handling events close step start
326	infinity norm finite dimensional vector max absolute entries current implementation ArrayRealVector typo code public double getLInfNorm double max double data max Math max max Math abs return max code sadly unit test assuring correct behavior effectively regression test test correctness Worse implementation OpenMapRealVector positive semi definite code public double getLInfNorm double max Iterator iter entries iterator iter hasNext iter advance max iter return max code method moved AbstractRealVector superclass implemented sparseIterator code public double getLInfNorm double norm Iterator Entry sparseIterator Entry hasNext null norm Math max norm Math abs getValue return norm code Unit tests negative valued vectors helpful check kind future
329	Drop Replacement getPct calls cummulative code change Frequency java Returns percentage values equal deprecated replaced link getPct Comparable Deprecated public double getPct Object return getCumPct Comparable
338	space application DOP detected bad parameter call method initializeStep class AdaptiveStepsizeIntegrator DormandPrince Integrator subclass EmbeddedRungeKuttaIntegrator perform call initializeStep method integrate problem array scale parameter call initializeStep theory Hairer book Solving Ordinary Differential Equations Nonstiff Problems scaling sci Atol Rtoli EmbeddedRungeKuttaIntegrator sci Atoli Note Gragg Bulirsch Stoer integrator good implementation sci Atol Rtoli performs call method initializeStep method initializeStep error leads wrong step size perform Euler step time unvisible user space application Euler step wrong step size bigger exception occur satellite hits ground bug algorithm rescale method GraggBulirschStoerIntegrator exemple final double scale double length vecAbsoluteTolerance null int scale length final double Math max Math abs Math abs scale scalAbsoluteTolerance scalRelativeTolerance int scale length final double Math max Math abs Math abs scale vecAbsoluteTolerance vecRelativeTolerance hNew initializeStep equations getOrder scale stepStart yDotK yTmp yDotK length message hearing Vincent Morand
344	solve final UnivariateRealFunction final double min final double max final double initial function returns yMin yMax min max deemed roots min max
358	integration range ODE solving handled event cases numerical accuracy events detection leads error events location test case event handled properly integration cover range fact covers range range code public void testMissedEvent throws IntegratorException DerivativeException final double final double FirstOrderDifferentialEquations ode FirstOrderDifferentialEquations public int getDimension return public void computeDerivatives double double double yDot throws DerivativeException yDot DormandPrince Integrator integrator DormandPrince Integrator double integrator setInitialStepSize double finalT integrator integrate ode Assert assertEquals finalT code
362	LevenbergMarquardtOptimizer ignores VectorialConvergenceChecker parameter passed hard custom stopping criteria optimizer
369	Method BisectionSolver solve final UnivariateRealFunction double min double max double initial invokes BisectionSolver solve double min double max throws NullPointerException member variable UnivariateRealSolverImpl null method BisectionSolver solve final UnivariateRealFunction double min double max called Steps reproduce invoke BisectionSolver solve someUnivariateFunctionImpl NullPointerException thrown
371	issue MATH PearsonsCorrelation getCorrelationPValues treatments values continuous drop MATH problem essence returned TTestImpl tTest cumulativeProbability cumulativeProbabily large ish statistics cumulativeProbabilty small cumulativeProbabilty close cumulativeProbability machine epsilon values equal solution MATH modify calculation cumulativeProbability problem PearsonsCorrelation getCorrelationPValues tDistribution cumulativeProbability calculating identical code PearsonsCorrelation getCorrelationPValues change solve problem tDistribution cumulativeProbability
377	AbstractLeastSquares residualsWeights WEIGHTS assigned observation method getRMS weights multiplicative getChiSquare appears denominator weight weight observation multiply square residual computation chi corrected getRMS reduce public double getRMS return Math sqrt getChiSquare rows
393	MultiStartUnivariateRealOptimizer package optimization method getResult returns result underlying optimizer result case correspond returned optimize method confusing getResult defined code public double getResult return optima code code public double getFunctionValue return optimaValues code
482	FastMath max wrong variable returned bug detected test case testMinMaxFloat bug tests doubles floats
546	loop KMeansPlusPlusClusterer chooseInitialClusters defines variable int sum variable type double int int method truncate distances points square roots integers bad distances points typically version bug manifested making clusterer return empty clusters EmptyClusterStrategy bug fixed
552	MultidimensionalCounter counter MultidimensionalCounter Integer counter int counter getCounts System println Arrays toString Output
554	Cross product implementation naive formulas formulas fail vectors colinear code Vector Vector Vector Vector System println Vector crossProduct code previous code displays correct answer
567	bug toDouble method Dfp class Dfp toDouble method returns negative infini double returned exposant equal xFFF significand equal IEEE inf equal exposant significand equal simple test case import org apache commons math dfp DfpField public class test param args public static void main String args DfpField field DfpField System println toDouble getZero field getZero toDouble toDouble newDfp field newDfp toDouble simplest test equality toDouble method return correctly signed
618	Complex add subtract javadoc code code rhs code NaN link NaN returned Inifinite NaN values returned parts result rules link java lang Double arithmetic code Subtract includes isNaN test returns Complex NaN complex argument isNaN add omits test test add implementation restored code merge problem
631	unit test code Test public void testBug final UnivariateRealFunction UnivariateRealFunction Override public double double return Math exp Math pow Math UnivariateRealSolver solver RegulaFalsiSolver double root solver solve code fails noformat illegal maximal count exceeded evaluations noformat PegasusSolver answer evaluations
679	computeKey integer overflow sparse matrix easily encountered long heap space exhausted attached code demonstrates problem security vulnerability matrix store access control Workaround create OpenMapRealMatrix cells addressable int
691	Invoking SummaryStatistics setVarianceImpl Variance true false getStandardDeviation produce NaN code reproduce code java int scores SummaryStatistics stats SummaryStatistics stats setVarianceImpl Variance false population variance int scores stats addValue double stats getStandardDeviation System println code workaround suggested Mikkel code java double FastMath sqrt stats getSecondMoment stats getN code
695	bug event handling track events occur step accepted resets reinitialization complete unable find context large patch works breaks unit tests
704	method org apache commons math stat descriptive moment Variance evaluate double values double weights double int int length work properly loke ignores length parameter grabs dataset method class work check methods array problem Workaround shrink arrays method length
713	Problem commons math SimplexSolver variable coefficient assigned negative restrictToNonnegative flag call SimplexSolver optimize function constraints GoalType MINIMIZE true Function Constraints Result variables coefficients point computation restrictions affect values
716	cases aging feature BracketingNthOrderBrentSolver fails attempts balance bracketing points targeting real root chosen target close inverse polynomial approximation side updates bracket real case large program bracket point agingA good estimate side root agingB bracketing interval completely unbalanced succeed rebalance updates updates
722	Complex java tanh computed formula tanh sinh cosh cos sin cosh cos problem finding big number sinh cosh infinity method tanh returns real NaN infinity infinity return Wouldn appropiate add FastMath library real return createComplex real return createComplex JBB
727	Adaptive step size integrators compute step size embedded Runge Kutta type step size checked integration range integration range extremely short step size evaluate function range fact afterward fails Gragg Bulirsch Stoer integrators problem step size checked truncated needed
776	range check setting elitismRate ElitisticListPopulation setElitismRate method constructors
778	class org apache commons math Dfp method multiply int limited consistent general contract FieldElement multiply int limitation values
779	Calling iterator method ListPopulation returns iterator protected modifiable list returning iterator wrap unmodifiable list
781	Methode SimplexSolver optimeze bad commons math simple test problem works commons math
803	OpenMapRealVector ebeMultiply RealVector OpenMapRealVector ebeDivide RealVector return wrong values entry RealVector nan infinity bug easy understand current implementation ebeMultiply code java public OpenMapRealVector ebeMultiply RealVector checkVectorDimensions getDimension OpenMapRealVector res OpenMapRealVector Iterator iter entries iterator iter hasNext iter advance res setEntry iter key iter getEntry iter key return res code assumption double holds true bug easy identify complex solve solution loop entries entries correspond entries afraid performance losses
835	percentageValue method Fraction class works multiplying Fraction converting Fraction double overflows numerator greater Integer MAX fraction patch method convert double multiply result overflows addition test method covers bug included
836	Fraction constructor Fraction double int takes double int maximal denominator approximates fraction double large negative number digits fractional maximal denominator big positive integer distinct bugs manifest constructor returns positive Fraction Calling Fraction returns fraction wrong sign absolute constructor manage reduce Fraction properly Calling Fraction returns fraction reduced solution constructor public Fraction double int maxDenominator throws FractionConversionException maxDenominator Increasing max iterations problem cases Changing epsilon maximum allowed error small work breaks tests FractionTest problem neccissarily algorithm unable approximate fraction correctly solution FractionConversionException thrown examples solution improvement approximation algorithm turns hard find bug explore idea axiom based testing http bldl uib testing html Attached java test class FractionTestByAxiom junit org apache commons math fraction bugs simplified approach kind testing text file describing maxDenominator combinations failures documentation Fraction class guarantees completely reduced rational numbers constructed comment equals method claims fractions lowest terms numerators compared equality intention
844	class ParameterGuesser HarmonicFitter package optimization fitting fails compute usable guess amplitude parameter
859	conclusion implemented deprecate properties RealDistribution interface removal wait agree precise definition code match time definition propose isSupportXxxInclusive density function applied upper bound support returned getSupportXxxBound finite infinite NaN returned http markmail org message dxuxh eybl xejde
865	large values upper bounds Double MAX bound optimizer call fitness function parameters set NaN guess FitnessFunction encode decode generating NaN normalizing denormalizing parameters difference upper bound greater Double MAX encode divide infinity infinity
867	fitting bounds CMAESOptimizer fits finely bound coarsely upper bound internally maps fitted parameter range interval unit precision ulp floating point numbers smaller fits resolution bound mapped upper bound mapped attach program demonstrate
904	reported Jeff Hain pow double double Math pow FastMath pow power integer test replace POWER POWER POWER POWER solves
929	reproduce code Assert assertEquals MultivariateNormalDistribution double double density double code
934	Complex reciprocal returns NaN return INF Class org apache commons math complex Complex Method reciprocal version Complex java
935	special cases values Math atan FastMath atan NaN cases
942	Creating array Array newInstance singletons getClass sampleSize DiscreteDistribution sample int risky exception thrown singleons type class DiscreteDistribution sample returns object type type reproduce code List Pair Object Double list ArrayList Pair Object Double list add Pair Object Double Object Double list add Pair Object Double Object Double DiscreteDistribution Object list sample code Attaching patch
949	method LevenbergMarquardtOptimizer getIterations report correct number iterations returns quick code SimplexOptimizer calls BaseOptimizer incrementEvaluationsCount test case Notice evaluations count correctly incremented iterations count noformat Test public void testGetIterations setup LevenbergMarquardtOptimizer otim LevenbergMarquardtOptimizer action otim optimize MaxEval Target double Weight double InitialGuess double ModelFunction MultivariateVectorFunction Override public double double point throws IllegalArgumentException return double FastMath pow point ModelFunctionJacobian MultivariateMatrixFunction Override public double double point throws IllegalArgumentException return double FastMath pow point verify assertThat otim getEvaluations greaterThan assertThat otim getIterations greaterThan noformat
988	calling SubLine intersection lines intersect NullPointerException thrown toSubSpace bug twod threed implementations attached patch fixes implementations adds required test cases
1005	MathArrays linearCombination passed arguments length throws ArrayOutOfBoundsException caused double prodHighNext prodHigh linearCombination check length arguments fall simple multiplication length
1021	application broke ported commons math HypergeometricDistribution sample method doesn work large integer values code return sample returns code import org apache commons math distribution HypergeometricDistribution public class Foo public static void main String args HypergeometricDistribution HypergeometricDistribution System printf getSupportLowerBound getSupportUpperBound Prints System printf sample Prints code debugger traced integer overflow HypergeometricDistribution getNumericalMean code return double getSampleSize getNumberOfSuccesses double getPopulationSize code code return getSampleSize double getNumberOfSuccesses double getPopulationSize code based quick test
