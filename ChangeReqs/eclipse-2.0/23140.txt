[CVS EXTSSH] vulnerable to man in the middle attacks (dns poisoning, etc_
Tested on Linux gtk2 and Mac OS X and 10.2 Carbon - Iall other versions are vulnerable as they use shared codebase and is implementation. Description of the problem: Eclipse ships with a pure java based ssh1 client for use with cvs. This is enabled by selecting extssh as the method of authentication to a cvs repository. The client supplied is an SSH1 client and only supports password authentication - users can use standard ext method for public key authentication with a suitable ssh-agent (pagent, openssh, etc). However when using the Eclipse extssh component no history of host keys is kept. This enables an attacker who can poison the name resolution of the eclipse client to potentially steal passwords through a modified ssh daemon on a server under there control. Steps to Reproduce: 1. Set up access to an external cvs repository with extssh and a password. (preferably with a username that doesn't exist locally eg - notme). Close eclipse. 2. Edit /etc/hosts to point to another ssh server (eg localhost) 3. Open eclipse and choose to browse the repository from the cvs perspective. 4. In your auth logs you should get messages like: sshd[1234]: Failed none for illegal user notme from xxx.xxx.xxx.xxx port xxxx sshd[1234]: Failed password for illegal user notme from xxx.xxx.xxx.xxx port xxxx In your log (/var/log/auth.log in the case of Mandrake) Expected results: Should get a prompt saying key changed. A malicious user could gain access to valuable accounts Workaround: Use an ssh2 client with public keys with the ext method.